{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NzEwMTU2", "number": 6047, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDowMzo1OVrOD173Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODowMjo1N1rOD6uljQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODgxOTQzOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/dart-dio/api.mustache", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDowMzo1OVrOGLnRyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDo1NTozOVrOGLo50g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzMTA0OA==", "bodyText": "What was the issue here? I've been using clients generated from this template without any deserialization issues.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6047#discussion_r414831048", "createdAt": "2020-04-24T20:03:59Z", "author": {"login": "josh-burton"}, "path": "modules/openapi-generator/src/main/resources/dart-dio/api.mustache", "diffHunk": "@@ -78,19 +78,22 @@ class {{classname}} {\n             options: Options(\n             method: '{{httpMethod}}'.toUpperCase(),\n             headers: headerParams,\n+            extra: {\n+                'secure': [{{#authMethods}} {\"type\": \"{{type}}\", \"name\": \"{{name}}\"{{#isApiKey}}, \"keyName\": \"{{keyParamName}}\", \"where\": \"{{#isKeyInQuery}}query{{/isKeyInQuery}}{{#isKeyInHeader}}header{{/isKeyInHeader}}\"{{/isApiKey}} }{{#hasMore}}, {{/hasMore}}{{/authMethods}}],\n+            },\n             contentType: contentTypes.isNotEmpty ? contentTypes[0] : \"application/json\",\n             ),\n             cancelToken: cancelToken,\n             ){{#returnType}}.then((response) {\n \n         {{#isListContainer}}\n                 final FullType type = const FullType(BuiltList, const [const FullType({{returnBaseType}})]);\n-                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(response.data, specifiedType: type);\n+                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(jsonDecode(response.data), specifiedType: type);\n                 var data = dataList.toList();\n         {{/isListContainer}}\n         {{^isListContainer}}\n         var serializer = _serializers.serializerForType({{{returnType}}});\n-        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, response.data);\n+        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, jsonDecode(response.data));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "564dbc01c7d3c357eff8d547b6eefc47e1847efe"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzNTEyNA==", "bodyText": "The issue was that out of the box nothing was working for me serializer was expecting a map and it wasn't happy with the string check #6026 for details. maybe I've done something wrong...", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6047#discussion_r414835124", "createdAt": "2020-04-24T20:11:51Z", "author": {"login": "jaumard"}, "path": "modules/openapi-generator/src/main/resources/dart-dio/api.mustache", "diffHunk": "@@ -78,19 +78,22 @@ class {{classname}} {\n             options: Options(\n             method: '{{httpMethod}}'.toUpperCase(),\n             headers: headerParams,\n+            extra: {\n+                'secure': [{{#authMethods}} {\"type\": \"{{type}}\", \"name\": \"{{name}}\"{{#isApiKey}}, \"keyName\": \"{{keyParamName}}\", \"where\": \"{{#isKeyInQuery}}query{{/isKeyInQuery}}{{#isKeyInHeader}}header{{/isKeyInHeader}}\"{{/isApiKey}} }{{#hasMore}}, {{/hasMore}}{{/authMethods}}],\n+            },\n             contentType: contentTypes.isNotEmpty ? contentTypes[0] : \"application/json\",\n             ),\n             cancelToken: cancelToken,\n             ){{#returnType}}.then((response) {\n \n         {{#isListContainer}}\n                 final FullType type = const FullType(BuiltList, const [const FullType({{returnBaseType}})]);\n-                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(response.data, specifiedType: type);\n+                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(jsonDecode(response.data), specifiedType: type);\n                 var data = dataList.toList();\n         {{/isListContainer}}\n         {{^isListContainer}}\n         var serializer = _serializers.serializerForType({{{returnType}}});\n-        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, response.data);\n+        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, jsonDecode(response.data));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzMTA0OA=="}, "originalCommit": {"oid": "564dbc01c7d3c357eff8d547b6eefc47e1847efe"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzNzQ5OQ==", "bodyText": "Ah, I think I know why now. I use a Dio Transformer in all my clients: https://github.com/flutterchina/dio_flutter_transformer\nI think a better approach would be to create default transformer for the generated client that parses the json. Then it can be overidden by a custom transformer.\nWe probably need to check what type the response is before deserializing and throw an error if its not a map.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6047#discussion_r414837499", "createdAt": "2020-04-24T20:16:27Z", "author": {"login": "josh-burton"}, "path": "modules/openapi-generator/src/main/resources/dart-dio/api.mustache", "diffHunk": "@@ -78,19 +78,22 @@ class {{classname}} {\n             options: Options(\n             method: '{{httpMethod}}'.toUpperCase(),\n             headers: headerParams,\n+            extra: {\n+                'secure': [{{#authMethods}} {\"type\": \"{{type}}\", \"name\": \"{{name}}\"{{#isApiKey}}, \"keyName\": \"{{keyParamName}}\", \"where\": \"{{#isKeyInQuery}}query{{/isKeyInQuery}}{{#isKeyInHeader}}header{{/isKeyInHeader}}\"{{/isApiKey}} }{{#hasMore}}, {{/hasMore}}{{/authMethods}}],\n+            },\n             contentType: contentTypes.isNotEmpty ? contentTypes[0] : \"application/json\",\n             ),\n             cancelToken: cancelToken,\n             ){{#returnType}}.then((response) {\n \n         {{#isListContainer}}\n                 final FullType type = const FullType(BuiltList, const [const FullType({{returnBaseType}})]);\n-                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(response.data, specifiedType: type);\n+                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(jsonDecode(response.data), specifiedType: type);\n                 var data = dataList.toList();\n         {{/isListContainer}}\n         {{^isListContainer}}\n         var serializer = _serializers.serializerForType({{{returnType}}});\n-        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, response.data);\n+        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, jsonDecode(response.data));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzMTA0OA=="}, "originalCommit": {"oid": "564dbc01c7d3c357eff8d547b6eefc47e1847efe"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg0MTE0Mw==", "bodyText": "I'm super new to dio and don't know transformer ^^ but from what I read yes that's why you don't have any issue, I'll change my code to use a transformer then :)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6047#discussion_r414841143", "createdAt": "2020-04-24T20:23:41Z", "author": {"login": "jaumard"}, "path": "modules/openapi-generator/src/main/resources/dart-dio/api.mustache", "diffHunk": "@@ -78,19 +78,22 @@ class {{classname}} {\n             options: Options(\n             method: '{{httpMethod}}'.toUpperCase(),\n             headers: headerParams,\n+            extra: {\n+                'secure': [{{#authMethods}} {\"type\": \"{{type}}\", \"name\": \"{{name}}\"{{#isApiKey}}, \"keyName\": \"{{keyParamName}}\", \"where\": \"{{#isKeyInQuery}}query{{/isKeyInQuery}}{{#isKeyInHeader}}header{{/isKeyInHeader}}\"{{/isApiKey}} }{{#hasMore}}, {{/hasMore}}{{/authMethods}}],\n+            },\n             contentType: contentTypes.isNotEmpty ? contentTypes[0] : \"application/json\",\n             ),\n             cancelToken: cancelToken,\n             ){{#returnType}}.then((response) {\n \n         {{#isListContainer}}\n                 final FullType type = const FullType(BuiltList, const [const FullType({{returnBaseType}})]);\n-                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(response.data, specifiedType: type);\n+                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(jsonDecode(response.data), specifiedType: type);\n                 var data = dataList.toList();\n         {{/isListContainer}}\n         {{^isListContainer}}\n         var serializer = _serializers.serializerForType({{{returnType}}});\n-        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, response.data);\n+        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, jsonDecode(response.data));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzMTA0OA=="}, "originalCommit": {"oid": "564dbc01c7d3c357eff8d547b6eefc47e1847efe"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg0NDU1Ng==", "bodyText": "but from the look of the doc transformers are not always used :/\n/// [transformer] allows changes to the request/response data before it is sent/received to/from the server\n  /// This is only applicable for request methods 'PUT', 'POST', and 'PATCH'.\n  Transformer transformer;", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6047#discussion_r414844556", "createdAt": "2020-04-24T20:29:58Z", "author": {"login": "jaumard"}, "path": "modules/openapi-generator/src/main/resources/dart-dio/api.mustache", "diffHunk": "@@ -78,19 +78,22 @@ class {{classname}} {\n             options: Options(\n             method: '{{httpMethod}}'.toUpperCase(),\n             headers: headerParams,\n+            extra: {\n+                'secure': [{{#authMethods}} {\"type\": \"{{type}}\", \"name\": \"{{name}}\"{{#isApiKey}}, \"keyName\": \"{{keyParamName}}\", \"where\": \"{{#isKeyInQuery}}query{{/isKeyInQuery}}{{#isKeyInHeader}}header{{/isKeyInHeader}}\"{{/isApiKey}} }{{#hasMore}}, {{/hasMore}}{{/authMethods}}],\n+            },\n             contentType: contentTypes.isNotEmpty ? contentTypes[0] : \"application/json\",\n             ),\n             cancelToken: cancelToken,\n             ){{#returnType}}.then((response) {\n \n         {{#isListContainer}}\n                 final FullType type = const FullType(BuiltList, const [const FullType({{returnBaseType}})]);\n-                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(response.data, specifiedType: type);\n+                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(jsonDecode(response.data), specifiedType: type);\n                 var data = dataList.toList();\n         {{/isListContainer}}\n         {{^isListContainer}}\n         var serializer = _serializers.serializerForType({{{returnType}}});\n-        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, response.data);\n+        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, jsonDecode(response.data));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzMTA0OA=="}, "originalCommit": {"oid": "564dbc01c7d3c357eff8d547b6eefc47e1847efe"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg0NDg1Mw==", "bodyText": "why not check if response is string to use jsonDecode on it ?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6047#discussion_r414844853", "createdAt": "2020-04-24T20:30:36Z", "author": {"login": "jaumard"}, "path": "modules/openapi-generator/src/main/resources/dart-dio/api.mustache", "diffHunk": "@@ -78,19 +78,22 @@ class {{classname}} {\n             options: Options(\n             method: '{{httpMethod}}'.toUpperCase(),\n             headers: headerParams,\n+            extra: {\n+                'secure': [{{#authMethods}} {\"type\": \"{{type}}\", \"name\": \"{{name}}\"{{#isApiKey}}, \"keyName\": \"{{keyParamName}}\", \"where\": \"{{#isKeyInQuery}}query{{/isKeyInQuery}}{{#isKeyInHeader}}header{{/isKeyInHeader}}\"{{/isApiKey}} }{{#hasMore}}, {{/hasMore}}{{/authMethods}}],\n+            },\n             contentType: contentTypes.isNotEmpty ? contentTypes[0] : \"application/json\",\n             ),\n             cancelToken: cancelToken,\n             ){{#returnType}}.then((response) {\n \n         {{#isListContainer}}\n                 final FullType type = const FullType(BuiltList, const [const FullType({{returnBaseType}})]);\n-                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(response.data, specifiedType: type);\n+                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(jsonDecode(response.data), specifiedType: type);\n                 var data = dataList.toList();\n         {{/isListContainer}}\n         {{^isListContainer}}\n         var serializer = _serializers.serializerForType({{{returnType}}});\n-        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, response.data);\n+        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, jsonDecode(response.data));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzMTA0OA=="}, "originalCommit": {"oid": "564dbc01c7d3c357eff8d547b6eefc47e1847efe"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg0NjU3NQ==", "bodyText": "I think those docs are wrong because my GET requests are being transformed.\nChecking the response type is an ok approach as well.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6047#discussion_r414846575", "createdAt": "2020-04-24T20:33:59Z", "author": {"login": "josh-burton"}, "path": "modules/openapi-generator/src/main/resources/dart-dio/api.mustache", "diffHunk": "@@ -78,19 +78,22 @@ class {{classname}} {\n             options: Options(\n             method: '{{httpMethod}}'.toUpperCase(),\n             headers: headerParams,\n+            extra: {\n+                'secure': [{{#authMethods}} {\"type\": \"{{type}}\", \"name\": \"{{name}}\"{{#isApiKey}}, \"keyName\": \"{{keyParamName}}\", \"where\": \"{{#isKeyInQuery}}query{{/isKeyInQuery}}{{#isKeyInHeader}}header{{/isKeyInHeader}}\"{{/isApiKey}} }{{#hasMore}}, {{/hasMore}}{{/authMethods}}],\n+            },\n             contentType: contentTypes.isNotEmpty ? contentTypes[0] : \"application/json\",\n             ),\n             cancelToken: cancelToken,\n             ){{#returnType}}.then((response) {\n \n         {{#isListContainer}}\n                 final FullType type = const FullType(BuiltList, const [const FullType({{returnBaseType}})]);\n-                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(response.data, specifiedType: type);\n+                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(jsonDecode(response.data), specifiedType: type);\n                 var data = dataList.toList();\n         {{/isListContainer}}\n         {{^isListContainer}}\n         var serializer = _serializers.serializerForType({{{returnType}}});\n-        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, response.data);\n+        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, jsonDecode(response.data));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzMTA0OA=="}, "originalCommit": {"oid": "564dbc01c7d3c357eff8d547b6eefc47e1847efe"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg1NzY4Mg==", "bodyText": "done", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6047#discussion_r414857682", "createdAt": "2020-04-24T20:55:39Z", "author": {"login": "jaumard"}, "path": "modules/openapi-generator/src/main/resources/dart-dio/api.mustache", "diffHunk": "@@ -78,19 +78,22 @@ class {{classname}} {\n             options: Options(\n             method: '{{httpMethod}}'.toUpperCase(),\n             headers: headerParams,\n+            extra: {\n+                'secure': [{{#authMethods}} {\"type\": \"{{type}}\", \"name\": \"{{name}}\"{{#isApiKey}}, \"keyName\": \"{{keyParamName}}\", \"where\": \"{{#isKeyInQuery}}query{{/isKeyInQuery}}{{#isKeyInHeader}}header{{/isKeyInHeader}}\"{{/isApiKey}} }{{#hasMore}}, {{/hasMore}}{{/authMethods}}],\n+            },\n             contentType: contentTypes.isNotEmpty ? contentTypes[0] : \"application/json\",\n             ),\n             cancelToken: cancelToken,\n             ){{#returnType}}.then((response) {\n \n         {{#isListContainer}}\n                 final FullType type = const FullType(BuiltList, const [const FullType({{returnBaseType}})]);\n-                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(response.data, specifiedType: type);\n+                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(jsonDecode(response.data), specifiedType: type);\n                 var data = dataList.toList();\n         {{/isListContainer}}\n         {{^isListContainer}}\n         var serializer = _serializers.serializerForType({{{returnType}}});\n-        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, response.data);\n+        var data = _serializers.deserializeWith<{{{returnType}}}>(serializer, jsonDecode(response.data));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgzMTA0OA=="}, "originalCommit": {"oid": "564dbc01c7d3c357eff8d547b6eefc47e1847efe"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTA3Mjc3OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/dart-dio/api.mustache", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxODowMjo1N1rOGSuZxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwNDo1NDozOVrOGS4fbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NzgxNA==", "bodyText": "After this change, you cannot have a 'text/plain' response, as it tries to apply jsonDecode on it.\n:(", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6047#discussion_r422287814", "createdAt": "2020-05-08T18:02:57Z", "author": {"login": "haritonstefan"}, "path": "modules/openapi-generator/src/main/resources/dart-dio/api.mustache", "diffHunk": "@@ -88,12 +88,12 @@ class {{classname}} {\n \n         {{#isListContainer}}\n                 final FullType type = const FullType(BuiltList, const [const FullType({{returnBaseType}})]);\n-                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(jsonDecode(response.data), specifiedType: type);\n+                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(response.data is String ? jsonDecode(response.data) : response.data, specifiedType: type);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d69b8bc68998497ed641298399f0e0bd903525"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4OTc4Ng==", "bodyText": "With  'text/plain'  response you shouldn't arrived here as you don't need to deserialize at all", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6047#discussion_r422289786", "createdAt": "2020-05-08T18:07:01Z", "author": {"login": "jaumard"}, "path": "modules/openapi-generator/src/main/resources/dart-dio/api.mustache", "diffHunk": "@@ -88,12 +88,12 @@ class {{classname}} {\n \n         {{#isListContainer}}\n                 final FullType type = const FullType(BuiltList, const [const FullType({{returnBaseType}})]);\n-                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(jsonDecode(response.data), specifiedType: type);\n+                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(response.data is String ? jsonDecode(response.data) : response.data, specifiedType: type);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NzgxNA=="}, "originalCommit": {"oid": "b0d69b8bc68998497ed641298399f0e0bd903525"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ1MzEwMA==", "bodyText": "Indeed, but it was trying to deserialize a text/plain response.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6047#discussion_r422453100", "createdAt": "2020-05-09T04:54:39Z", "author": {"login": "haritonstefan"}, "path": "modules/openapi-generator/src/main/resources/dart-dio/api.mustache", "diffHunk": "@@ -88,12 +88,12 @@ class {{classname}} {\n \n         {{#isListContainer}}\n                 final FullType type = const FullType(BuiltList, const [const FullType({{returnBaseType}})]);\n-                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(jsonDecode(response.data), specifiedType: type);\n+                BuiltList<{{returnBaseType}}> dataList = _serializers.deserialize(response.data is String ? jsonDecode(response.data) : response.data, specifiedType: type);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI4NzgxNA=="}, "originalCommit": {"oid": "b0d69b8bc68998497ed641298399f0e0bd903525"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3592, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}