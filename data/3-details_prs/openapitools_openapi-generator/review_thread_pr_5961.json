{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0NTI3NjA4", "number": 5961, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzo1NzozNFrODzvb9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNDo0NTo0OFrODzw9Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NTgxMTc0OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/Java/libraries/native/README.mustache", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzo1NzozNFrOGIV0sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwOTo0ODowOFrOGhtaZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM5OTM0Ng==", "bodyText": "can you break the lines like for instance\n{{^vendorExtensions.x-group-parameters}}\n{{#returnType}}{{{returnType}}} result = {{/returnType}}apiInstance.{{{operationId}}}({{#allParams}}{{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}});\n{{/vendorExtensions.x-group-parameters}}\n{{#vendorExtensions.x-group-parameters}}\n{{#hasParams}}\nAPI{{operationId}}Request request = API{{operationId}}Request.newBuilder(){{#allParams}}\n    .{{paramName}}({{paramName}}){{/allParams}}\n    .build();\n{{/hasParams}}\n{{#returnType}}{{{returnType}}} result = {{/returnType}}apiInstance.{{operationId}}({{#hasParams}}request{{/hasParams}});\n{{/vendorExtensions.x-group-parameters}}\n{{#returnType}}System.out.println(result);{{/returnType}}", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5961#discussion_r411399346", "createdAt": "2020-04-20T13:57:34Z", "author": {"login": "jfeltesse-mdsol"}, "path": "modules/openapi-generator/src/main/resources/Java/libraries/native/README.mustache", "diffHunk": "@@ -94,7 +95,12 @@ public class {{{classname}}}Example {\n         {{{dataType}}} {{{paramName}}} = {{{example}}}; // {{{dataType}}} | {{{description}}}\n         {{/allParams}}\n         try {\n-            {{#returnType}}{{{returnType}}} result = {{/returnType}}apiInstance.{{{operationId}}}({{#allParams}}{{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}});{{#returnType}}\n+            {{^vendorExtensions.x-group-parameters}}\n+            {{#returnType}}{{{returnType}}} result = {{/returnType}}apiInstance.{{{operationId}}}({{#allParams}}{{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}});{{/vendorExtensions.x-group-parameters}}{{#vendorExtensions.x-group-parameters}}{{#hasParams}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "489abe6554da81d9afa7f22ca3138c98c2467566"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY2MTUyNw==", "bodyText": "It may add extra empty line for {{^vendorExtensions.x-group-parameters}}case", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5961#discussion_r411661527", "createdAt": "2020-04-20T20:15:00Z", "author": {"login": "bgong-mdsol"}, "path": "modules/openapi-generator/src/main/resources/Java/libraries/native/README.mustache", "diffHunk": "@@ -94,7 +95,12 @@ public class {{{classname}}}Example {\n         {{{dataType}}} {{{paramName}}} = {{{example}}}; // {{{dataType}}} | {{{description}}}\n         {{/allParams}}\n         try {\n-            {{#returnType}}{{{returnType}}} result = {{/returnType}}apiInstance.{{{operationId}}}({{#allParams}}{{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}});{{#returnType}}\n+            {{^vendorExtensions.x-group-parameters}}\n+            {{#returnType}}{{{returnType}}} result = {{/returnType}}apiInstance.{{{operationId}}}({{#allParams}}{{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}});{{/vendorExtensions.x-group-parameters}}{{#vendorExtensions.x-group-parameters}}{{#hasParams}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM5OTM0Ng=="}, "originalCommit": {"oid": "489abe6554da81d9afa7f22ca3138c98c2467566"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTkxNTUzMQ==", "bodyText": "IMHO having an extra empty line in auto generated source code is alright if it can make the maintenance easier. Also, I don't know how about the java clients but the ruby one has the option to run a linter afterwards to take care of such things.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5961#discussion_r411915531", "createdAt": "2020-04-21T06:47:56Z", "author": {"login": "jfeltesse-mdsol"}, "path": "modules/openapi-generator/src/main/resources/Java/libraries/native/README.mustache", "diffHunk": "@@ -94,7 +95,12 @@ public class {{{classname}}}Example {\n         {{{dataType}}} {{{paramName}}} = {{{example}}}; // {{{dataType}}} | {{{description}}}\n         {{/allParams}}\n         try {\n-            {{#returnType}}{{{returnType}}} result = {{/returnType}}apiInstance.{{{operationId}}}({{#allParams}}{{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}});{{#returnType}}\n+            {{^vendorExtensions.x-group-parameters}}\n+            {{#returnType}}{{{returnType}}} result = {{/returnType}}apiInstance.{{{operationId}}}({{#allParams}}{{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}});{{/vendorExtensions.x-group-parameters}}{{#vendorExtensions.x-group-parameters}}{{#hasParams}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM5OTM0Ng=="}, "originalCommit": {"oid": "489abe6554da81d9afa7f22ca3138c98c2467566"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODAwMDIzMA==", "bodyText": "It won't result in empty lines if the start tag and end tag are aligned properly. Ref: https://github.com/samskivert/jmustache#newline-trimming", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5961#discussion_r438000230", "createdAt": "2020-06-10T09:48:08Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/resources/Java/libraries/native/README.mustache", "diffHunk": "@@ -94,7 +95,12 @@ public class {{{classname}}}Example {\n         {{{dataType}}} {{{paramName}}} = {{{example}}}; // {{{dataType}}} | {{{description}}}\n         {{/allParams}}\n         try {\n-            {{#returnType}}{{{returnType}}} result = {{/returnType}}apiInstance.{{{operationId}}}({{#allParams}}{{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}});{{#returnType}}\n+            {{^vendorExtensions.x-group-parameters}}\n+            {{#returnType}}{{{returnType}}} result = {{/returnType}}apiInstance.{{{operationId}}}({{#allParams}}{{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}});{{/vendorExtensions.x-group-parameters}}{{#vendorExtensions.x-group-parameters}}{{#hasParams}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM5OTM0Ng=="}, "originalCommit": {"oid": "489abe6554da81d9afa7f22ca3138c98c2467566"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjA2MDIyOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/Java/libraries/native/api_doc.mustache", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNDo0NTo0OVrOGIYKig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNDo0NTo0OVrOGIYKig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQzNzcwNg==", "bodyText": "do both {{/vend.. and {{#ven.. need to be on the same line?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5961#discussion_r411437706", "createdAt": "2020-04-20T14:45:49Z", "author": {"login": "jfeltesse-mdsol"}, "path": "modules/openapi-generator/src/main/resources/Java/libraries/native/api_doc.mustache", "diffHunk": "@@ -0,0 +1,133 @@\n+# {{classname}}{{#description}}\n+\n+{{description}}{{/description}}\n+\n+All URIs are relative to *{{basePath}}*\n+\n+Method | HTTP request | Description\n+------------- | ------------- | -------------\n+{{#operations}}{{#operation}}[**{{operationId}}**]({{classname}}.md#{{operationId}}) | **{{httpMethod}}** {{path}} | {{#summary}}{{summary}}{{/summary}}\n+{{/operation}}{{/operations}}\n+\n+{{#operations}}\n+{{#operation}}\n+\n+## {{operationId}}\n+\n+{{^vendorExtensions.x-group-parameters}}\n+> {{#returnType}}{{returnType}} {{/returnType}}{{operationId}}({{#allParams}}{{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/allParams}})\n+{{/vendorExtensions.x-group-parameters}}{{#vendorExtensions.x-group-parameters}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "489abe6554da81d9afa7f22ca3138c98c2467566"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3561, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}