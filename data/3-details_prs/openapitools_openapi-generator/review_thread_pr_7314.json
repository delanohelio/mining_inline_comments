{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1OTY0NjUx", "number": 7314, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwMDo1NjozMVrOEhdwww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwMDo1NjozMVrOEhdwww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNTI2MDgzOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractKotlinCodegen.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwMDo1NjozMVrOHOy0Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwMDo1NjozMVrOHOy0Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTI3NDY3MA==", "bodyText": "Interesting. I was trying to think of a case where this would fall through, but can't really. Seems like any type with a dot in the name can be assumed to be fully qualified.\nIf people report it as a bug, we can always adjust. In that unlikely event, it may result in a regression since the change isn't covered by a unit test.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7314#discussion_r485274670", "createdAt": "2020-09-09T00:56:31Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractKotlinCodegen.java", "diffHunk": "@@ -771,7 +771,9 @@ protected boolean isReservedWord(String word) {\n     @Override\n     protected boolean needToImport(String type) {\n         // provides extra protection against improperly trying to import language primitives and java types\n-        boolean imports = !type.startsWith(\"kotlin.\") && !type.startsWith(\"java.\") && !defaultIncludes.contains(type) && !languageSpecificPrimitives.contains(type);\n+        boolean imports = !type.startsWith(\"kotlin.\") && !type.startsWith(\"java.\") &&\n+                !defaultIncludes.contains(type) && !languageSpecificPrimitives.contains(type) &&\n+                !type.contains(\".\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5358d8c23a90e5c8ada952c00b7db07e237f4f1a"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4208, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}