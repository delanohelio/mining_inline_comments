{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyOTk0Njk3", "number": 5925, "title": "feat(r): retry configuration for status codes", "bodyText": "Adding retry configuration that can be set on ApiClient.\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\nCC @wing328 , @saigiridhar21", "createdAt": "2020-04-14T06:31:06Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925", "merged": true, "mergeCommit": {"oid": "c39aef2a798cb131f1bc3b9ab4a8c0b3753d05d5"}, "closed": true, "closedAt": "2020-09-08T06:34:34Z", "author": {"login": "Ramanth"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXdgmsAH2gAyNDAyOTk0Njk3OmNmMDg1OTY2NTY2MTQxZjJmZDc1NTZiNDAxZTVlODI4NjM3ZjQ3YTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaTG9vgH2gAyNDAyOTk0Njk3OjA4NmMxNDA5NjMyODk4ZDczN2ZkNmI3MjVhODBiNTQ1NjZjZTJiM2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cf085966566141f2fd7556b401e5e828637f47a8", "author": {"user": {"login": "Ramanth", "name": "Ramanth Addala"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/cf085966566141f2fd7556b401e5e828637f47a8", "committedDate": "2020-04-14T06:29:12Z", "message": "feat(r): retry configuration for status codes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NTI3MjM0", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#pullrequestreview-397527234", "createdAt": "2020-04-21T17:36:41Z", "commit": {"oid": "cf085966566141f2fd7556b401e5e828637f47a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzozNjo0MVrOGJQO5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzozNjo0MVrOGJQO5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM1NjMyNw==", "bodyText": "The line indention doesn't look right to me. It seems to be using a mix of tabs and spaces", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#discussion_r412356327", "createdAt": "2020-04-21T17:36:41Z", "author": {"login": "wing328"}, "path": "samples/client/petstore/R/R/api_client.R", "diffHunk": "@@ -87,8 +93,43 @@ ApiClient  <- R6::R6Class(\n       if (!is.null(timeout)) {\n         self$timeout <- timeout\n       }\n+\n+      if (!is.null(retryStatusCodes)) {\n+        self$retryStatusCodes <- retryStatusCodes\n+      }\n+\t  \n+      if (!is.null(maxRetryAttempts)) {\n+        self$maxRetryAttempts <- maxRetryAttempts\n+      }\n     },\n+\n     CallApi = function(url, method, queryParams, headerParams, body, ...){\n+\n+      resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+      statusCode <- httr::status_code(resp)\n+\n+      if(is.null(self$maxRetryAttempts)){\n+        self$maxRetryAttempts = 3\n+      }\n+      \n+\t  if(!is.null(self$retryStatusCodes)){\n+\n+        for(i in 1: self$maxRetryAttempts){\n+          if(statusCode %in% self$retryStatusCodes){\n+            Sys.sleep((2 ^ i) + stats::runif(n = 1, min = 0, max = 1))\n+            resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+            statusCode <- httr::status_code(resp)\n+          }\n+          else{\n+            break;\n+          }\n+        }\t  \n+\t  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf085966566141f2fd7556b401e5e828637f47a8"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NjIyMzY3", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#pullrequestreview-397622367", "createdAt": "2020-04-21T19:47:18Z", "commit": {"oid": "cf085966566141f2fd7556b401e5e828637f47a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxOTo0NzoxOFrOGJVkcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxOTo0NzoxOFrOGJVkcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ0Mzc2MA==", "bodyText": "better have else in the previous line with }", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#discussion_r412443760", "createdAt": "2020-04-21T19:47:18Z", "author": {"login": "wing328"}, "path": "samples/client/petstore/R/R/api_client.R", "diffHunk": "@@ -87,8 +93,43 @@ ApiClient  <- R6::R6Class(\n       if (!is.null(timeout)) {\n         self$timeout <- timeout\n       }\n+\n+      if (!is.null(retryStatusCodes)) {\n+        self$retryStatusCodes <- retryStatusCodes\n+      }\n+\t  \n+      if (!is.null(maxRetryAttempts)) {\n+        self$maxRetryAttempts <- maxRetryAttempts\n+      }\n     },\n+\n     CallApi = function(url, method, queryParams, headerParams, body, ...){\n+\n+      resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+      statusCode <- httr::status_code(resp)\n+\n+      if(is.null(self$maxRetryAttempts)){\n+        self$maxRetryAttempts = 3\n+      }\n+      \n+\t  if(!is.null(self$retryStatusCodes)){\n+\n+        for(i in 1: self$maxRetryAttempts){\n+          if(statusCode %in% self$retryStatusCodes){\n+            Sys.sleep((2 ^ i) + stats::runif(n = 1, min = 0, max = 1))\n+            resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+            statusCode <- httr::status_code(resp)\n+          }\n+          else{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf085966566141f2fd7556b401e5e828637f47a8"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4Mzk3MjU2", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#pullrequestreview-398397256", "createdAt": "2020-04-22T17:05:30Z", "commit": {"oid": "cf085966566141f2fd7556b401e5e828637f47a8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzowNTozMFrOGKBP3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzowNjoyNlrOGKBSjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1OTM4OQ==", "bodyText": "Typo error: maxRetryAttempts", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#discussion_r413159389", "createdAt": "2020-04-22T17:05:30Z", "author": {"login": "saigiridhar21"}, "path": "modules/openapi-generator/src/main/resources/r/api_client.mustache", "diffHunk": "@@ -24,6 +24,8 @@\n #' @field apiKeys\n #' @field accessToken\n #' @field timeout Default timeout in seconds\n+#' @field retryStatusCodes vector of status codes to retry\n+#' @field maxRetryAttemps maximum number of retries for the status codes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf085966566141f2fd7556b401e5e828637f47a8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE2MDA3OA==", "bodyText": "Very minor: Please fix the indentation.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#discussion_r413160078", "createdAt": "2020-04-22T17:06:26Z", "author": {"login": "saigiridhar21"}, "path": "modules/openapi-generator/src/main/resources/r/api_client.mustache", "diffHunk": "@@ -83,8 +89,43 @@ ApiClient  <- R6::R6Class(\n       if (!is.null(timeout)) {\n         self$timeout <- timeout\n       }\n+\n+      if (!is.null(retryStatusCodes)) {\n+        self$retryStatusCodes <- retryStatusCodes\n+      }\n+\t  \n+      if (!is.null(maxRetryAttempts)) {\n+        self$maxRetryAttempts <- maxRetryAttempts\n+      }\n     },\n+\n     CallApi = function(url, method, queryParams, headerParams, body, ...){\n+\n+      resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+      statusCode <- httr::status_code(resp)\n+\n+      if(is.null(self$maxRetryAttempts)){\n+        self$maxRetryAttempts = 3\n+      }\n+      \n+\t  if(!is.null(self$retryStatusCodes)){\n+\n+        for(i in 1: self$maxRetryAttempts){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf085966566141f2fd7556b401e5e828637f47a8"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "086c1409632898d737fd6b725a80b54566ce2b3b", "author": {"user": {"login": "Ramanth", "name": "Ramanth Addala"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/086c1409632898d737fd6b725a80b54566ce2b3b", "committedDate": "2020-04-23T02:03:55Z", "message": "fix(r) : fixing review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2413, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}