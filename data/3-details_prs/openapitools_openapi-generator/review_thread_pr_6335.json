{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MDI3MTkw", "number": 6335, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMjowODo1NFrOD9Hmpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzo1Njo0MVrOD9rhfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDE0MzEwOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractTypeScriptClientCodegen.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMjowODo1NFrOGWc6Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQyMjowODo1NFrOGWc6Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjE5NTUzMA==", "bodyText": "nit: it might be simpler to add .filter() call to the stream instead of post-processing the resulting list.\nEDIT: Aha, I was wrong here. Apparently, if we're about to return a single any type, it's ok - we only want to remove any when it's used in conjuction with some other type (in allOf/oneOf)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6335#discussion_r426195530", "createdAt": "2020-05-16T22:08:54Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractTypeScriptClientCodegen.java", "diffHunk": "@@ -845,6 +845,11 @@ public String toAllOfName(List<String> names, ComposedSchema composedSchema) {\n             }\n             return schemaType;\n         }).distinct().collect(Collectors.toList());\n-        return String.join(\" & \", types);\n+\n+        if (types.size() > 1 && types.contains(\"any\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1694b9e44546b492340fa1c38564e191c62c5514"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MDAyODE1OnYy", "diffSide": "RIGHT", "path": "samples/client/petstore/typescript-axios/builds/composed-schemas/api.ts", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzo1Njo0MVrOGXUPbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODo0NDoxNlrOGXt3bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwMjA2Mg==", "bodyText": "where is this interface used?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6335#discussion_r427102062", "createdAt": "2020-05-19T07:56:41Z", "author": {"login": "macjohnny"}, "path": "samples/client/petstore/typescript-axios/builds/composed-schemas/api.ts", "diffHunk": "@@ -0,0 +1,420 @@\n+// tslint:disable\n+/**\n+ * Example\n+ * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n+ *\n+ * The version of the OpenAPI document: 1.0.0\n+ * \n+ *\n+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n+ * https://openapi-generator.tech\n+ * Do not edit the class manually.\n+ */\n+\n+\n+import * as globalImportUrl from 'url';\n+import { Configuration } from './configuration';\n+import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n+// Some imports not used depending on template conditions\n+// @ts-ignore\n+import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';\n+\n+/**\n+ * \n+ * @export\n+ * @interface Cat\n+ */\n+export interface Cat {\n+    /**\n+     * \n+     * @type {boolean}\n+     * @memberof Cat\n+     */\n+    hunts?: boolean;\n+    /**\n+     * \n+     * @type {number}\n+     * @memberof Cat\n+     */\n+    age?: number;\n+}\n+/**\n+ * \n+ * @export\n+ * @interface CatAllOf\n+ */\n+export interface CatAllOf {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53f099f45247c2d9fc130bb08a81dc0f465346a5"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM5MjkyNQ==", "bodyText": "I think it's not used anywhere,\nI've also noticed that, but testing without the changes in this branch generates the same unused interfaces - so I think it's another bug unrelated to this branch", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6335#discussion_r427392925", "createdAt": "2020-05-19T15:26:59Z", "author": {"login": "codeserk"}, "path": "samples/client/petstore/typescript-axios/builds/composed-schemas/api.ts", "diffHunk": "@@ -0,0 +1,420 @@\n+// tslint:disable\n+/**\n+ * Example\n+ * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n+ *\n+ * The version of the OpenAPI document: 1.0.0\n+ * \n+ *\n+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n+ * https://openapi-generator.tech\n+ * Do not edit the class manually.\n+ */\n+\n+\n+import * as globalImportUrl from 'url';\n+import { Configuration } from './configuration';\n+import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n+// Some imports not used depending on template conditions\n+// @ts-ignore\n+import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';\n+\n+/**\n+ * \n+ * @export\n+ * @interface Cat\n+ */\n+export interface Cat {\n+    /**\n+     * \n+     * @type {boolean}\n+     * @memberof Cat\n+     */\n+    hunts?: boolean;\n+    /**\n+     * \n+     * @type {number}\n+     * @memberof Cat\n+     */\n+    age?: number;\n+}\n+/**\n+ * \n+ * @export\n+ * @interface CatAllOf\n+ */\n+export interface CatAllOf {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwMjA2Mg=="}, "originalCommit": {"oid": "53f099f45247c2d9fc130bb08a81dc0f465346a5"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUyMTkwMw==", "bodyText": "It's probably a manifestation of this old bug: #5171", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6335#discussion_r427521903", "createdAt": "2020-05-19T18:44:16Z", "author": {"login": "amakhrov"}, "path": "samples/client/petstore/typescript-axios/builds/composed-schemas/api.ts", "diffHunk": "@@ -0,0 +1,420 @@\n+// tslint:disable\n+/**\n+ * Example\n+ * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n+ *\n+ * The version of the OpenAPI document: 1.0.0\n+ * \n+ *\n+ * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n+ * https://openapi-generator.tech\n+ * Do not edit the class manually.\n+ */\n+\n+\n+import * as globalImportUrl from 'url';\n+import { Configuration } from './configuration';\n+import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';\n+// Some imports not used depending on template conditions\n+// @ts-ignore\n+import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';\n+\n+/**\n+ * \n+ * @export\n+ * @interface Cat\n+ */\n+export interface Cat {\n+    /**\n+     * \n+     * @type {boolean}\n+     * @memberof Cat\n+     */\n+    hunts?: boolean;\n+    /**\n+     * \n+     * @type {number}\n+     * @memberof Cat\n+     */\n+    age?: number;\n+}\n+/**\n+ * \n+ * @export\n+ * @interface CatAllOf\n+ */\n+export interface CatAllOf {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzEwMjA2Mg=="}, "originalCommit": {"oid": "53f099f45247c2d9fc130bb08a81dc0f465346a5"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3437, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}