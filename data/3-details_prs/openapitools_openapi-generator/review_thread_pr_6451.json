{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNzMxMDMy", "number": 6451, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMzo0NjoyN1rOEAg8Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMzo0NjoyN1rOEAg8Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTc1MTM0OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientCodegen.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMzo0NjoyN1rOGb118w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDowNDowNlrOGb2qDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg0Njg5OQ==", "bodyText": "FYI. Looks like these changes are not indented properly (2-space vs 4-space). I can fix it later after merging this PR.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6451#discussion_r431846899", "createdAt": "2020-05-28T13:46:27Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientCodegen.java", "diffHunk": "@@ -902,43 +907,45 @@ public void setParameterExampleValue(CodegenParameter p) {\n             type = p.dataType;\n         }\n \n-        if (\"String\".equalsIgnoreCase(type) || \"str\".equalsIgnoreCase(type)) {\n+        if (type != null) {\n+          if (\"String\".equalsIgnoreCase(type) || \"str\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = p.paramName + \"_example\";\n+              example = p.paramName + \"_example\";\n             }\n             example = \"'\" + escapeText(example) + \"'\";\n-        } else if (\"Integer\".equals(type) || \"int\".equals(type)) {\n+          } else if (\"Integer\".equals(type) || \"int\".equals(type)) {\n             if (example == null) {\n-                example = \"56\";\n+              example = \"56\";\n             }\n-        } else if (\"Float\".equalsIgnoreCase(type) || \"Double\".equalsIgnoreCase(type)) {\n+          } else if (\"Float\".equalsIgnoreCase(type) || \"Double\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"3.4\";\n+              example = \"3.4\";\n             }\n-        } else if (\"BOOLEAN\".equalsIgnoreCase(type) || \"bool\".equalsIgnoreCase(type)) {\n+          } else if (\"BOOLEAN\".equalsIgnoreCase(type) || \"bool\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"True\";\n+              example = \"True\";\n             }\n-        } else if (\"file\".equalsIgnoreCase(type)) {\n+          } else if (\"file\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"/path/to/file\";\n+              example = \"/path/to/file\";\n             }\n             example = \"'\" + escapeText(example) + \"'\";\n-        } else if (\"Date\".equalsIgnoreCase(type)) {\n+          } else if (\"Date\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"2013-10-20\";\n+              example = \"2013-10-20\";\n             }\n             example = \"'\" + escapeText(example) + \"'\";\n-        } else if (\"DateTime\".equalsIgnoreCase(type)) {\n+          } else if (\"DateTime\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"2013-10-20T19:20:30+01:00\";\n+              example = \"2013-10-20T19:20:30+01:00\";\n             }\n             example = \"'\" + escapeText(example) + \"'\";\n-        } else if (!languageSpecificPrimitives.contains(type)) {\n+          } else if (!languageSpecificPrimitives.contains(type)) {\n             // type is a model class, e.g. User\n             example = this.packageName + \".\" + type + \"()\";\n-        } else {\n+          } else {\n             LOGGER.warn(\"Type \" + type + \" not handled properly in setParameterExampleValue\");\n+          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e87228b0b6defacb0c9fb782f98674927d875cb"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2MDIzOQ==", "bodyText": "Noted. Thank you!", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6451#discussion_r431860239", "createdAt": "2020-05-28T14:04:06Z", "author": {"login": "fullcircle23"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientCodegen.java", "diffHunk": "@@ -902,43 +907,45 @@ public void setParameterExampleValue(CodegenParameter p) {\n             type = p.dataType;\n         }\n \n-        if (\"String\".equalsIgnoreCase(type) || \"str\".equalsIgnoreCase(type)) {\n+        if (type != null) {\n+          if (\"String\".equalsIgnoreCase(type) || \"str\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = p.paramName + \"_example\";\n+              example = p.paramName + \"_example\";\n             }\n             example = \"'\" + escapeText(example) + \"'\";\n-        } else if (\"Integer\".equals(type) || \"int\".equals(type)) {\n+          } else if (\"Integer\".equals(type) || \"int\".equals(type)) {\n             if (example == null) {\n-                example = \"56\";\n+              example = \"56\";\n             }\n-        } else if (\"Float\".equalsIgnoreCase(type) || \"Double\".equalsIgnoreCase(type)) {\n+          } else if (\"Float\".equalsIgnoreCase(type) || \"Double\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"3.4\";\n+              example = \"3.4\";\n             }\n-        } else if (\"BOOLEAN\".equalsIgnoreCase(type) || \"bool\".equalsIgnoreCase(type)) {\n+          } else if (\"BOOLEAN\".equalsIgnoreCase(type) || \"bool\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"True\";\n+              example = \"True\";\n             }\n-        } else if (\"file\".equalsIgnoreCase(type)) {\n+          } else if (\"file\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"/path/to/file\";\n+              example = \"/path/to/file\";\n             }\n             example = \"'\" + escapeText(example) + \"'\";\n-        } else if (\"Date\".equalsIgnoreCase(type)) {\n+          } else if (\"Date\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"2013-10-20\";\n+              example = \"2013-10-20\";\n             }\n             example = \"'\" + escapeText(example) + \"'\";\n-        } else if (\"DateTime\".equalsIgnoreCase(type)) {\n+          } else if (\"DateTime\".equalsIgnoreCase(type)) {\n             if (example == null) {\n-                example = \"2013-10-20T19:20:30+01:00\";\n+              example = \"2013-10-20T19:20:30+01:00\";\n             }\n             example = \"'\" + escapeText(example) + \"'\";\n-        } else if (!languageSpecificPrimitives.contains(type)) {\n+          } else if (!languageSpecificPrimitives.contains(type)) {\n             // type is a model class, e.g. User\n             example = this.packageName + \".\" + type + \"()\";\n-        } else {\n+          } else {\n             LOGGER.warn(\"Type \" + type + \" not handled properly in setParameterExampleValue\");\n+          }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg0Njg5OQ=="}, "originalCommit": {"oid": "8e87228b0b6defacb0c9fb782f98674927d875cb"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3368, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}