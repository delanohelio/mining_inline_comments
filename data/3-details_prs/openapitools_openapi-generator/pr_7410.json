{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MjY5NDAy", "number": 7410, "title": "[bug][typescript] Fix node client generator import file paths", "bodyText": "Bug and Recap\nIssue: Resolves #7385\n\nFor mapping such as:\n  \"importMappings\": {\n    \"Pet\": \"../dataModel/petModel\"\n  }\n\nActual\nimport { AModelPetModel } from '../../dataModel/petModel';\n\nExpected\nimport { Pet } from '../dataModel/petModel';\n\nFor a mapping such as:\n  \"importMappings\": {\n    \"Pet\": \"@company/prefix-zoo-store\"\n  }\n\nActual\nimport { NyPrefixZooStore } from '../@company/prefix-zoo-store';\n\nExpected\nimport { Pet } from '@company/prefix-zoo-store';\n\n\nMethod\nBelow is the map in operations.get(\"imports\") based on the import location:\nModel is created by generator\n[{import=model/pet, classname=Pet}]\n\nBYOModel\n[{import=@company/prefix-zoo-store, classname=Pet}]\n\nTherefore the logic was updated to a simpler version, assuming the mapping is created by prior areas.\nfor (Map<String, Object> im : imports) {\n     im.put(\"filename\", im.get(\"import\").toString());\n}\n\nThis resulted in the following import for:\nCreated Model\nimport { Pet } from '../model/pet';\n\nBYOModel\nimport { Pet } from '../@company/prefix-zoo-store';\n\nPer the above, this fixed the issue of the improper render which led to the bad classname i.e. what led to the following NyPrefixZooStore\nThe next issue was the extra ../ which is embedded as part of the template. See: https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/resources/typescript-node/api-single.mustache#L8\nFor this purpose, the extra directory listing was remove from the template and added into the Codegen itself, where the ../ is appended by default ONLY when the model is derived from an auto generated file.\nAfter this change here are the mappings in operations.get(\"imports\")\nModel is created by generator\n[{import=../model/pet, classname=Pet}]\n\nBYOModel\n[{import=@company/prefix-zoo-store, classname=Pet}]\n\nThis resulted in the following import for:\nCreated Model\nimport { Pet } from '../model/pet';\n\nBYOModel\nimport { Pet } from '@company/prefix-zoo-store';\n\nTesting\nUnit\n\nUpdated tests for defaultModelImportTest\nAdded tests for postProcessOperationsWithModels\n\nManual\n\nRan the above expected v/s actual output comparisons to ensure the values provided are accurate\n\n\nPR checklist\n\n Read the contribution guidelines.\n Pull Request title clearly describes the work in the pull request and Pull Request description provides details about how to validate the work. Missing information here may result in delayed response from the community.\n If contributing template-only or documentation-only changes which will change sample output, build the project beforehand.\n Run the shell script ./bin/generate-samples.shto update all Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit as it would merge with master. These must match the expectations made by your contribution. You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example ./bin/generate-samples.sh bin/configs/java*. For Windows users, please run the script in Git BASH.\n File the PR against the correct branch: master\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-09-14T00:55:05Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7410", "merged": true, "mergeCommit": {"oid": "ca5d3840819039856c7d0ac29b1712ab8ac5cbca"}, "closed": true, "closedAt": "2020-09-18T01:46:40Z", "author": {"login": "mahirk"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdIoNF-AH2gAyNDg2MjY5NDAyOjI5NTQwOGJmOGU2MzE5MWQ5ZjM0ZDgxYWEwNDExMjcwY2UzZDE4YzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJ7ia-gFqTQ5MTA5NTUzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "295408bf8e63191d9f34d81aa0411270ce3d18c5", "author": {"user": {"login": "mahirk", "name": "Mahir Kothary"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/295408bf8e63191d9f34d81aa0411270ce3d18c5", "committedDate": "2020-09-14T00:39:08Z", "message": "fix TypeScriptNodeClientCodegen import filenames and related templates; add tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f76fde612943bc791e355c7012cc1047e6a96036", "author": {"user": {"login": "mahirk", "name": "Mahir Kothary"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/f76fde612943bc791e355c7012cc1047e6a96036", "committedDate": "2020-09-14T17:44:08Z", "message": "quick imports cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMjU4OTQ1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7410#pullrequestreview-490258945", "createdAt": "2020-09-17T05:45:22Z", "commit": {"oid": "f76fde612943bc791e355c7012cc1047e6a96036"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo0NToyMlrOHTSRVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwNTo1MjoxMFrOHTSZrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4NDM0MQ==", "bodyText": "looks like now the getModelnameFromModelFilename method is no longer used and can be removed?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7410#discussion_r489984341", "createdAt": "2020-09-17T05:45:22Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/TypeScriptNodeClientCodegen.java", "diffHunk": "@@ -222,8 +223,7 @@ public String toModelImport(String name) {\n         // Add additional filename information for model imports in the apis\n         List<Map<String, Object>> imports = (List<Map<String, Object>>) operations.get(\"imports\");\n         for (Map<String, Object> im : imports) {\n-            im.put(\"filename\", im.get(\"import\"));\n-            im.put(\"classname\", getModelnameFromModelFilename(im.get(\"filename\").toString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f76fde612943bc791e355c7012cc1047e6a96036"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTk4NjQ3Nw==", "bodyText": "Perhaps just nitpicking - but maybe there could be a better name for this method? Right now it's kind of unclear what its intention is (unless I read the actual method body).", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7410#discussion_r489986477", "createdAt": "2020-09-17T05:52:10Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/typescript/typescriptnode/TypeScriptNodeClientCodegenTest.java", "diffHunk": "@@ -134,4 +136,42 @@ public void mappedApiImportTest() {\n         Assert.assertEquals(codegen.toApiImport(\"Category\"), mappedName);\n     }\n \n+    @Test(description = \"correctly produces imports without import mapping\")\n+    public void postProcessOperationsWithModelsTestWithoutImportMapping() {\n+        final String importName = \"../model/pet\";\n+        Map<String, Object> operations = postProcessOperationsHelper(importName);\n+\n+        codegen.postProcessOperationsWithModels(operations, Collections.emptyList());\n+        List<Map<String, Object>> extractedImports = (List<Map<String, Object>>) operations.get(\"imports\");\n+        Assert.assertEquals(extractedImports.get(0).get(\"filename\"), importName);\n+    }\n+\n+    @Test(description = \"correctly produces imports with import mapping\")\n+    public void postProcessOperationsWithModelsTestWithImportMapping() {\n+        final String importName = \"@namespace/dir/category\";\n+        Map<String, Object> operations = postProcessOperationsHelper(importName);\n+\n+        codegen.postProcessOperationsWithModels(operations, Collections.emptyList());\n+        List<Map<String, Object>> extractedImports = (List<Map<String, Object>>) operations.get(\"imports\");\n+\n+        Assert.assertEquals(extractedImports.get(0).get(\"filename\"), importName);\n+    }\n+\n+    private Map<String, Object> postProcessOperationsHelper(String importName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f76fde612943bc791e355c7012cc1047e6a96036"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f112e6742761a541d8305273b47ea8483b470143", "author": {"user": {"login": "mahirk", "name": "Mahir Kothary"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/f112e6742761a541d8305273b47ea8483b470143", "committedDate": "2020-09-17T07:58:06Z", "message": "per pr suggestion: remove unused function; change test helper function name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwMzY4NTM4", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7410#pullrequestreview-490368538", "createdAt": "2020-09-17T08:38:20Z", "commit": {"oid": "f112e6742761a541d8305273b47ea8483b470143"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDk1Mzc3", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7410#pullrequestreview-491095377", "createdAt": "2020-09-18T01:43:57Z", "commit": {"oid": "f112e6742761a541d8305273b47ea8483b470143"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMTo0Mzo1OFrOHT7EzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwMTo0Mzo1OFrOHT7EzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDY1Mjg3Ng==", "bodyText": "@mahirk not a blocker on this pr, but wanted to comment since you said you were planning to look at ts implementation in other generators...\nsince modelPackage is passed by the user, this could result in models// when passed with trailing slash. It might be best to use StringUtils, something like:\nreturn DEFAULT_MODEL_IMPORT_DIRECTORY_PREFIX + \n    StringUtils.appendIfMissing(modelPackage(), \"/\") +\n    camelize(toModelName(name), true);", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7410#discussion_r490652876", "createdAt": "2020-09-18T01:43:58Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/TypeScriptNodeClientCodegen.java", "diffHunk": "@@ -162,7 +163,7 @@ public String toModelImport(String name) {\n             return importMapping.get(name);\n         }\n \n-        return modelPackage() + \"/\" + camelize(toModelName(name), true);\n+        return DEFAULT_MODEL_IMPORT_DIRECTORY_PREFIX + modelPackage() + \"/\" + camelize(toModelName(name), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f112e6742761a541d8305273b47ea8483b470143"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDk1NTM5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7410#pullrequestreview-491095539", "createdAt": "2020-09-18T01:44:33Z", "commit": {"oid": "f112e6742761a541d8305273b47ea8483b470143"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3116, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}