{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NzMxMTQ4", "number": 5440, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMjoxMzo0NFrODi6_Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMjo1OTowMVrODi7acw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTQ0NjIyOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/C-libcurl/apiKey.c.mustache", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMjoxMzo0NFrOFucJpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODo0NDoyMFrOFuibcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI0MDAzOA==", "bodyText": "Hi @michelealbano, I have some questions here.\n\n\nIs this function \"keyValuePair_create_allocate\" used now? I cannot see any use case of this function.\n\n\nActually, this function \"keyValuePair_create_allocate\" allocates memory only for native data type (such as bool, int, double), the function name is not suitable.\n\n\nFrom my view, if we (OpenAPI-Generator) provide the allocating function, we should also provide the free function.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5440#discussion_r384240038", "createdAt": "2020-02-26T02:13:44Z", "author": {"login": "ityuhui"}, "path": "modules/openapi-generator/src/main/resources/C-libcurl/apiKey.c.mustache", "diffHunk": "@@ -9,6 +9,12 @@ keyValuePair_t *keyValuePair_create(char *key, void *value) {\n     return keyValuePair;\n }\n \n+keyValuePair_t* keyValuePair_create_allocate(char* key, double value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd4d396fe0e0eb4f020106661aac06222e1b2335"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxNDU3NA==", "bodyText": "It is to be used in the main.\nCurrently, the generated code for models says:\nif(cJSON_AddNumberToObject(localMapObject, localKeyValue->key, *(double *)localKeyValue->value) == NULL)\nthus it considers the value as a pointer. The keyValuePair_create limited itself to copying the value. Imagine I wanted to have a (\"numberOfTeeth\", 5), I had to do this in my main:\nint number = 5; // since I need a lvalue\ndouble* val1 = malloc(sizeof(number));\nmemcpy(val1, &number, sizeof(number));\nkeyValuePair_create(\"numberOfTeeth\", val1);\n\nI tried to put directly the number (5) in the value, casting int to void *, but I would have to change a great deal of generated code for models, for example the ones I showed at the beginning of this message.\nWe are actually providing free functions! For example, I have this in my model.c:\nvoid orchestration_form_request_dto_free(orchestration_form_request_dto_t *orchestration_form_request_dto) {\n    listEntry_t *listEntry;\n    list_ForEach(listEntry, orchestration_form_request_dto->orchestration_flags) {\n        keyValuePair_t *localKeyValue = (keyValuePair_t*) listEntry->data;\n        free (localKeyValue->key);\n        free (localKeyValue->value);\n    }\n    list_free(orchestration_form_request_dto->orchestration_flags);\n    free(orchestration_form_request_dto);\n}", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5440#discussion_r384314574", "createdAt": "2020-02-26T07:34:07Z", "author": {"login": "michelealbano"}, "path": "modules/openapi-generator/src/main/resources/C-libcurl/apiKey.c.mustache", "diffHunk": "@@ -9,6 +9,12 @@ keyValuePair_t *keyValuePair_create(char *key, void *value) {\n     return keyValuePair;\n }\n \n+keyValuePair_t* keyValuePair_create_allocate(char* key, double value) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI0MDAzOA=="}, "originalCommit": {"oid": "bd4d396fe0e0eb4f020106661aac06222e1b2335"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0Mjg5Ng==", "bodyText": "OK. I got it. No problems.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5440#discussion_r384342896", "createdAt": "2020-02-26T08:44:20Z", "author": {"login": "ityuhui"}, "path": "modules/openapi-generator/src/main/resources/C-libcurl/apiKey.c.mustache", "diffHunk": "@@ -9,6 +9,12 @@ keyValuePair_t *keyValuePair_create(char *key, void *value) {\n     return keyValuePair;\n }\n \n+keyValuePair_t* keyValuePair_create_allocate(char* key, double value) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI0MDAzOA=="}, "originalCommit": {"oid": "bd4d396fe0e0eb4f020106661aac06222e1b2335"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTUxNjAzOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/C-libcurl/model-body.mustache", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMjo1OTowMVrOFuc0FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODo0NjoxN1rOFuifOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI1MDkwMQ==", "bodyText": "Hi @michelealbano,\nWhy \"{{{name}}}_local_map\" is changed to \"cJSON *localMapObject\" ?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5440#discussion_r384250901", "createdAt": "2020-02-26T02:59:01Z", "author": {"login": "ityuhui"}, "path": "modules/openapi-generator/src/main/resources/C-libcurl/model-body.mustache", "diffHunk": "@@ -643,22 +642,24 @@ fail:\n     keyValuePair_t *localMapKeyPair;\n     cJSON_ArrayForEach({{{name}}}_local_map, {{{name}}})\n     {\n+\t\tcJSON *localMapObject = {{{name}}}_local_map;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd4d396fe0e0eb4f020106661aac06222e1b2335"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxNzE5NQ==", "bodyText": "Later on, the code did:\ncJSON_AddItemToObject({{{name}}},\"\", localMapObject);\nmeaning that there was an in item containing an item etc. The JSON for\n{\"fruit\" : \"apple\"}\nwould become\n{\"\" : {\"fruit\" : \"apple\"}}\n(that's why I verified my JSON against the one produced by other generators - see the beginning of my PR message)\nI needed to use {{{name}}}_local_map in the code, for example a few lines later where I do:\nlocalMapKeyPair = keyValuePair_create(strdup(localMapObject->string),strdup(localMapObject->valuestring));\nbut since I was into an {{#items}}, the content of {{{name}}} was different.\nThus, I provided an alias for {{{name}}}_local_map.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5440#discussion_r384317195", "createdAt": "2020-02-26T07:41:59Z", "author": {"login": "michelealbano"}, "path": "modules/openapi-generator/src/main/resources/C-libcurl/model-body.mustache", "diffHunk": "@@ -643,22 +642,24 @@ fail:\n     keyValuePair_t *localMapKeyPair;\n     cJSON_ArrayForEach({{{name}}}_local_map, {{{name}}})\n     {\n+\t\tcJSON *localMapObject = {{{name}}}_local_map;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI1MDkwMQ=="}, "originalCommit": {"oid": "bd4d396fe0e0eb4f020106661aac06222e1b2335"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM0Mzg2NQ==", "bodyText": "OK. I got it.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5440#discussion_r384343865", "createdAt": "2020-02-26T08:46:17Z", "author": {"login": "ityuhui"}, "path": "modules/openapi-generator/src/main/resources/C-libcurl/model-body.mustache", "diffHunk": "@@ -643,22 +642,24 @@ fail:\n     keyValuePair_t *localMapKeyPair;\n     cJSON_ArrayForEach({{{name}}}_local_map, {{{name}}})\n     {\n+\t\tcJSON *localMapObject = {{{name}}}_local_map;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI1MDkwMQ=="}, "originalCommit": {"oid": "bd4d396fe0e0eb4f020106661aac06222e1b2335"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3732, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}