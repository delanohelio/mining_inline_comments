{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MTg3NTA2", "number": 5316, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjoyNDo0M1rODf8hRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjoyNDo0M1rODf8hRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODI0MDA3OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxNjoyNDo0M1rOFp8QcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQwMzowNDoyMVrOFrZtsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyMzE4NA==", "bodyText": "IMO, the \"title\" attribute in a OAS document should not have any impact whatsover on the code generation (codegen currently uses title to flatten inline schemas). Using 'title' can lead to completely unexpected outcomes for the generated code.\nThe OAS spec clearly states the 'title' attribute is for human consumption, so codegen should not use it.\nI was working with a draft OAS document that has a composed allOf schema. The \"title\" of the inner schema happens to be the name of the outer (composed) object, but it could also have been any value, including names of totally unrelated schema.\nThat had the weird side effect to nullify the inheritance hierarchy. Then you have to debug the code to finally understand why the \"parent\" attribute ends up being nullified as a side effect of the \"title\" attribute", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5316#discussion_r379523184", "createdAt": "2020-02-14T16:24:43Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "diffHunk": "@@ -338,6 +365,13 @@ private void flattenComposedChildren(OpenAPI openAPI, String key, List<Schema> c\n             if (component instanceof ObjectSchema) {\n                 ObjectSchema op = (ObjectSchema) component;\n                 if (op.get$ref() == null && op.getProperties() != null && op.getProperties().size() > 0) {\n+                    // Note: the call to op.getTitle() can lead to totally unexpected results and should not be\n+                    // used to generate the innerModelName.\n+                    // If the value of the 'title' attribute happens to match a schema defined elsewhere in\n+                    // the specification, 'innerModelName' will be the same as that other schema.\n+                    // The 'title' attribute is supposed to be for human consumption, not for code generation.\n+                    // OAS authors should not be expected to set a 'title' value that will control the\n+                    // code generation logic.\n                     String innerModelName = resolveModelName(op.getTitle(), key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6df0f27be42e5e5beb90b5ebdb45de455502b7ea"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY4OTI0Mw==", "bodyText": "I agree with this, and always thought it was odd.\nMaybe we should consider it a bug and replace it's support with a vendor extension in 4.3.0. We don't have any metrics about who is actually using the feature, but I doubt anyone is because:\n\nit's not really documented\nit's confusing\nit may block users with well-defined specs from using the tooling", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5316#discussion_r379689243", "createdAt": "2020-02-14T23:33:20Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "diffHunk": "@@ -338,6 +365,13 @@ private void flattenComposedChildren(OpenAPI openAPI, String key, List<Schema> c\n             if (component instanceof ObjectSchema) {\n                 ObjectSchema op = (ObjectSchema) component;\n                 if (op.get$ref() == null && op.getProperties() != null && op.getProperties().size() > 0) {\n+                    // Note: the call to op.getTitle() can lead to totally unexpected results and should not be\n+                    // used to generate the innerModelName.\n+                    // If the value of the 'title' attribute happens to match a schema defined elsewhere in\n+                    // the specification, 'innerModelName' will be the same as that other schema.\n+                    // The 'title' attribute is supposed to be for human consumption, not for code generation.\n+                    // OAS authors should not be expected to set a 'title' value that will control the\n+                    // code generation logic.\n                     String innerModelName = resolveModelName(op.getTitle(), key);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyMzE4NA=="}, "originalCommit": {"oid": "6df0f27be42e5e5beb90b5ebdb45de455502b7ea"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY5MDY3NA==", "bodyText": "I have opened #5248 for this issue.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5316#discussion_r379690674", "createdAt": "2020-02-14T23:38:28Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "diffHunk": "@@ -338,6 +365,13 @@ private void flattenComposedChildren(OpenAPI openAPI, String key, List<Schema> c\n             if (component instanceof ObjectSchema) {\n                 ObjectSchema op = (ObjectSchema) component;\n                 if (op.get$ref() == null && op.getProperties() != null && op.getProperties().size() > 0) {\n+                    // Note: the call to op.getTitle() can lead to totally unexpected results and should not be\n+                    // used to generate the innerModelName.\n+                    // If the value of the 'title' attribute happens to match a schema defined elsewhere in\n+                    // the specification, 'innerModelName' will be the same as that other schema.\n+                    // The 'title' attribute is supposed to be for human consumption, not for code generation.\n+                    // OAS authors should not be expected to set a 'title' value that will control the\n+                    // code generation logic.\n                     String innerModelName = resolveModelName(op.getTitle(), key);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyMzE4NA=="}, "originalCommit": {"oid": "6df0f27be42e5e5beb90b5ebdb45de455502b7ea"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTA1NDM4Ng==", "bodyText": "Based on the discussion in #5248 I'll file a PR to revise the wording here.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5316#discussion_r381054386", "createdAt": "2020-02-19T03:04:21Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "diffHunk": "@@ -338,6 +365,13 @@ private void flattenComposedChildren(OpenAPI openAPI, String key, List<Schema> c\n             if (component instanceof ObjectSchema) {\n                 ObjectSchema op = (ObjectSchema) component;\n                 if (op.get$ref() == null && op.getProperties() != null && op.getProperties().size() > 0) {\n+                    // Note: the call to op.getTitle() can lead to totally unexpected results and should not be\n+                    // used to generate the innerModelName.\n+                    // If the value of the 'title' attribute happens to match a schema defined elsewhere in\n+                    // the specification, 'innerModelName' will be the same as that other schema.\n+                    // The 'title' attribute is supposed to be for human consumption, not for code generation.\n+                    // OAS authors should not be expected to set a 'title' value that will control the\n+                    // code generation logic.\n                     String innerModelName = resolveModelName(op.getTitle(), key);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyMzE4NA=="}, "originalCommit": {"oid": "6df0f27be42e5e5beb90b5ebdb45de455502b7ea"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3809, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}