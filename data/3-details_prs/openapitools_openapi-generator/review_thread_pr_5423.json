{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5MjkzMDQ3", "number": 5423, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwNDo0NjoxM1rODl_sTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODowMDo1OVrODvrZhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTY3NDM4OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwNDo0NjoxM1rOFzMl6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOTozMDoxNVrOF0HH3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODAwOQ==", "bodyText": "@cognifloyd would there ever be a use case where we would want to name the folder something other than src?\nIf so why don't we make this parameter more general like sourceFolderName type string.\nWhat do you think?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389228009", "createdAt": "2020-03-07T04:46:13Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -165,6 +167,8 @@ public PythonAbstractConnexionServerCodegen(String templateDirectory, boolean fi\n                 defaultValue(\"8080\"));\n         cliOptions.add(CliOption.newBoolean(USE_NOSE, \"use the nose test framework\").\n                 defaultValue(Boolean.FALSE.toString()));\n+        cliOptions.add(CliOption.newBoolean(SRC_LAYOUT, \"put python module under src/\").", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47056805d2023fa929831593f1b630b2278a93a1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzMzQ2Nw==", "bodyText": "src/ is pretty standard, but I suppose I have seen projects that do lib/ as well.\nSo, an empty string (or maybe a .) means no subdir and a string == a subdir? hmm.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389233467", "createdAt": "2020-03-07T06:43:42Z", "author": {"login": "cognifloyd"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -165,6 +167,8 @@ public PythonAbstractConnexionServerCodegen(String templateDirectory, boolean fi\n                 defaultValue(\"8080\"));\n         cliOptions.add(CliOption.newBoolean(USE_NOSE, \"use the nose test framework\").\n                 defaultValue(Boolean.FALSE.toString()));\n+        cliOptions.add(CliOption.newBoolean(SRC_LAYOUT, \"put python module under src/\").", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODAwOQ=="}, "originalCommit": {"oid": "47056805d2023fa929831593f1b630b2278a93a1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzNDEyMA==", "bodyText": "hmm. Here's someone that puts his source in a python dir. So, there may be use cases where that would be helpful. Like in multi-language projects or where you include client and server libs in the same repo.\nSo, the name srcLayout only makes sense as a boolean. What would an option be for selecting an alternate directory for the python source files? pythonSrcRoot?\u00a0srcLayoutDir? or would you do two vars, one for the dir to use and a boolean to enable it?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389234120", "createdAt": "2020-03-07T06:57:35Z", "author": {"login": "cognifloyd"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -165,6 +167,8 @@ public PythonAbstractConnexionServerCodegen(String templateDirectory, boolean fi\n                 defaultValue(\"8080\"));\n         cliOptions.add(CliOption.newBoolean(USE_NOSE, \"use the nose test framework\").\n                 defaultValue(Boolean.FALSE.toString()));\n+        cliOptions.add(CliOption.newBoolean(SRC_LAYOUT, \"put python module under src/\").", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODAwOQ=="}, "originalCommit": {"oid": "47056805d2023fa929831593f1b630b2278a93a1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5MTM4Ng==", "bodyText": "How about the string pythonSrcRoot? And make it an empty value by default.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389391386", "createdAt": "2020-03-08T17:55:43Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -165,6 +167,8 @@ public PythonAbstractConnexionServerCodegen(String templateDirectory, boolean fi\n                 defaultValue(\"8080\"));\n         cliOptions.add(CliOption.newBoolean(USE_NOSE, \"use the nose test framework\").\n                 defaultValue(Boolean.FALSE.toString()));\n+        cliOptions.add(CliOption.newBoolean(SRC_LAYOUT, \"put python module under src/\").", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODAwOQ=="}, "originalCommit": {"oid": "47056805d2023fa929831593f1b630b2278a93a1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4Njk3Mw==", "bodyText": "done", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r390186973", "createdAt": "2020-03-10T09:30:15Z", "author": {"login": "cognifloyd"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -165,6 +167,8 @@ public PythonAbstractConnexionServerCodegen(String templateDirectory, boolean fi\n                 defaultValue(\"8080\"));\n         cliOptions.add(CliOption.newBoolean(USE_NOSE, \"use the nose test framework\").\n                 defaultValue(Boolean.FALSE.toString()));\n+        cliOptions.add(CliOption.newBoolean(SRC_LAYOUT, \"put python module under src/\").", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODAwOQ=="}, "originalCommit": {"oid": "47056805d2023fa929831593f1b630b2278a93a1"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTY3NzMzOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwNDo1NDo1NFrOFzMndQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOTozMDowNFrOF0HHVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODQwNQ==", "bodyText": "Why not edit outputFolder up above before this is run?\nThen we don't need to put these if blocks in twice and can keep this code as-is.\nUp in processOpts:\n        if (this.srcLayout) {\n            outputFolder += \"src\" + File.separator + \"src\";\n        }", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389228405", "createdAt": "2020-03-07T04:54:54Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -304,7 +315,20 @@ public String escapeReservedWord(String name) {\n      */\n     @Override\n     public String apiFileFolder() {\n-        return outputFolder + File.separator + apiPackage().replace('.', File.separatorChar);\n+        String pkgPath = apiPackage().replace('.', File.separatorChar);\n+        if (this.srcLayout) {\n+            pkgPath = \"src\" + File.separator + pkgPath;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47056805d2023fa929831593f1b630b2278a93a1"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzMzU1MA==", "bodyText": "Because there are still supporting files (like Readme, .gitignore, etc) that still need to be in the root dir. So we need to selectively move only the source files under the src/ dir.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389233550", "createdAt": "2020-03-07T06:45:47Z", "author": {"login": "cognifloyd"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -304,7 +315,20 @@ public String escapeReservedWord(String name) {\n      */\n     @Override\n     public String apiFileFolder() {\n-        return outputFolder + File.separator + apiPackage().replace('.', File.separatorChar);\n+        String pkgPath = apiPackage().replace('.', File.separatorChar);\n+        if (this.srcLayout) {\n+            pkgPath = \"src\" + File.separator + pkgPath;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODQwNQ=="}, "originalCommit": {"oid": "47056805d2023fa929831593f1b630b2278a93a1"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTM5MTUyMA==", "bodyText": "Ah, in that case why not use your new variable\npythonSrcRoot? Then it is only defined once and it will include the file separator when you pass in the value \"src/\"", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389391520", "createdAt": "2020-03-08T17:57:36Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -304,7 +315,20 @@ public String escapeReservedWord(String name) {\n      */\n     @Override\n     public String apiFileFolder() {\n-        return outputFolder + File.separator + apiPackage().replace('.', File.separatorChar);\n+        String pkgPath = apiPackage().replace('.', File.separatorChar);\n+        if (this.srcLayout) {\n+            pkgPath = \"src\" + File.separator + pkgPath;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODQwNQ=="}, "originalCommit": {"oid": "47056805d2023fa929831593f1b630b2278a93a1"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE4NjgzNw==", "bodyText": "done", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r390186837", "createdAt": "2020-03-10T09:30:04Z", "author": {"login": "cognifloyd"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonAbstractConnexionServerCodegen.java", "diffHunk": "@@ -304,7 +315,20 @@ public String escapeReservedWord(String name) {\n      */\n     @Override\n     public String apiFileFolder() {\n-        return outputFolder + File.separator + apiPackage().replace('.', File.separatorChar);\n+        String pkgPath = apiPackage().replace('.', File.separatorChar);\n+        if (this.srcLayout) {\n+            pkgPath = \"src\" + File.separator + pkgPath;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODQwNQ=="}, "originalCommit": {"oid": "47056805d2023fa929831593f1b630b2278a93a1"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTY3ODQ3OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python-flask/tox.mustache", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QwNDo1ODoxNlrOFzMoDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwOTo0NTo0M1rOF0HpiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODU1OA==", "bodyText": "Did you test this with useNose=True also?\nYou might need to hard code in a path for nosetests now that the code is deeper.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389228558", "createdAt": "2020-03-07T04:58:16Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python-flask/tox.mustache", "diffHunk": "@@ -6,4 +6,4 @@ deps=-r{toxinidir}/requirements.txt\n      -r{toxinidir}/test-requirements.txt\n \n commands=\n-   {{^useNose}}pytest --cov={{{packageName}}}{{/useNose}}{{#useNose}}nosetests{{/useNose}}\n\\ No newline at end of file\n+   {{^useNose}}pytest --cov={{#srcLayout}}src/{{/srcLayout}}{{{packageName}}}{{/useNose}}{{#useNose}}nosetests{{/useNose}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47056805d2023fa929831593f1b630b2278a93a1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIzMzc2NA==", "bodyText": "hmm. I don't know nose.\nBut from a quick google, it looks like it will use lib and src directories by default.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r389233764", "createdAt": "2020-03-07T06:49:13Z", "author": {"login": "cognifloyd"}, "path": "modules/openapi-generator/src/main/resources/python-flask/tox.mustache", "diffHunk": "@@ -6,4 +6,4 @@ deps=-r{toxinidir}/requirements.txt\n      -r{toxinidir}/test-requirements.txt\n \n commands=\n-   {{^useNose}}pytest --cov={{{packageName}}}{{/useNose}}{{#useNose}}nosetests{{/useNose}}\n\\ No newline at end of file\n+   {{^useNose}}pytest --cov={{#srcLayout}}src/{{/srcLayout}}{{{packageName}}}{{/useNose}}{{#useNose}}nosetests{{/useNose}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODU1OA=="}, "originalCommit": {"oid": "47056805d2023fa929831593f1b630b2278a93a1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDE5NTU5Mg==", "bodyText": "If you can point me to an option for nosetests to set the python sources root, I'm happy to add that.\nFrom what I can tell, you have to add it inside the test code: https://stackoverflow.com/a/30501263\nBut there isn't any test code to work with. It looks like all of the tests are written with pytest in mind (from my limited understanding of nose).\nThe things that take useNose into account are tox.mustache and test-requirements.mustache. It looks like the flask template for travis expects to run tests with nosetests without regards to useNose.\nDe-tangling the nose stuff would probably be good for a separate PR (by someone who actually uses / understands nose).", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r390195592", "createdAt": "2020-03-10T09:45:43Z", "author": {"login": "cognifloyd"}, "path": "modules/openapi-generator/src/main/resources/python-flask/tox.mustache", "diffHunk": "@@ -6,4 +6,4 @@ deps=-r{toxinidir}/requirements.txt\n      -r{toxinidir}/test-requirements.txt\n \n commands=\n-   {{^useNose}}pytest --cov={{{packageName}}}{{/useNose}}{{#useNose}}nosetests{{/useNose}}\n\\ No newline at end of file\n+   {{^useNose}}pytest --cov={{#srcLayout}}src/{{/srcLayout}}{{{packageName}}}{{/useNose}}{{#useNose}}nosetests{{/useNose}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTIyODU1OA=="}, "originalCommit": {"oid": "47056805d2023fa929831593f1b630b2278a93a1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMjQ1Mjk5OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python-flask/requirements.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwNDowNzo1M1rOGAu5tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQwNjoyNDo0M1rOGAvkIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQyMTYyMA==", "bodyText": "How about the simpler\n# connexion requires werkzeug but connexion < 2.4.0 does not install werkzeug\n# we must peg werkzeug versions below to fix connexion\n# https://github.com/zalando/connexion/pull/1044\nwerkzeug == 0.16.1; python_version==\"3.4\"\nwerkzeug == 0.16.1; python_version==\"3.5\"\n\nNote: for python versions ==2.7 and >= 3.6 we should not need to install werkzeug\nbecause per zalando/connexion@7111bc9\nthis is fixed in connexion 2.4.0, and 2.6.0 which we are installing for those versions of python", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r403421620", "createdAt": "2020-04-04T04:07:53Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python-flask/requirements.mustache", "diffHunk": "@@ -1,7 +1,15 @@\n connexion >= 2.6.0; python_version>=\"3.6\"\n+# connexion 2.6 dropped support for python < 3.6\n connexion >= 2.3.0; python_version==\"3.5\"\n connexion >= 2.3.0; python_version==\"3.4\"\n+{{#supportPython2}}\n connexion == 2.4.0; python_version<=\"2.7\"\n+{{/supportPython2}}\n+# werkzeug is a dep of connexion. They need to record their dep.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b03adefccfcfe39db754528ad2316dcefdff62da"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQzMjQ4MA==", "bodyText": "I applied your suggestion, plus I simplifeid it further using the or syntax from PEP 496: https://www.python.org/dev/peps/pep-0496/#examples", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r403432480", "createdAt": "2020-04-04T06:24:43Z", "author": {"login": "cognifloyd"}, "path": "modules/openapi-generator/src/main/resources/python-flask/requirements.mustache", "diffHunk": "@@ -1,7 +1,15 @@\n connexion >= 2.6.0; python_version>=\"3.6\"\n+# connexion 2.6 dropped support for python < 3.6\n connexion >= 2.3.0; python_version==\"3.5\"\n connexion >= 2.3.0; python_version==\"3.4\"\n+{{#supportPython2}}\n connexion == 2.4.0; python_version<=\"2.7\"\n+{{/supportPython2}}\n+# werkzeug is a dep of connexion. They need to record their dep.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQyMTYyMA=="}, "originalCommit": {"oid": "b03adefccfcfe39db754528ad2316dcefdff62da"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMDAxNTMwOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python-aiohttp/requirements.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMjoyNjozNFrOGBwr4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMjoyNjozNFrOGBwr4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ5OTQyNA==", "bodyText": "This generator states that is supports  python 3.5 but this version of connexion does not work in python 3.5\nCan you add the connexion support for python >= 3.5 here?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r404499424", "createdAt": "2020-04-07T02:26:34Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python-aiohttp/requirements.mustache", "diffHunk": "@@ -1,3 +1,3 @@\n-connexion[aiohttp,swagger-ui] == 2.0.2\n-swagger-ui-bundle == 0.0.2\n-aiohttp_jinja2 == 1.1.0\n+connexion[aiohttp,swagger-ui] == 2.6.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f5148bc753a0e2bcee14d29715185cee0351fc4"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzE3MDg3OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python-aiohttp/requirements.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo1MToyNlrOGCPRow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOToyNjo1N1rOGCSxQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwMDYxMQ==", "bodyText": "So connexion only limits installation versions by supported versions of python in connexion >=2.5.1 and >=3.6.0\nper zalando/connexion@f31ac61\nSo your update will still break in python 3.5 because it will install connexion 2.5.0 which does not support python 3.5\nPlease use the following pinning?\n\nconnexion <= 2.3.0; python_version==\"3.5\" for python 3.5\nwerkzeug == 0.16.1; python_version==\"3.5\" per your other work\nconnexion >= 2.6.0; python_version>=\"3.6\" to cover higher versions of python", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r405000611", "createdAt": "2020-04-07T17:51:26Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python-aiohttp/requirements.mustache", "diffHunk": "@@ -1,3 +1,4 @@\n-connexion[aiohttp,swagger-ui] == 2.6.0\n+# 2.3 is the last version that supports python 3.5\n+connexion[aiohttp,swagger-ui] >= 2.3.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "073f55f0dac93b3b80dc6ae77da5b7014b3d2c09"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA1Nzg1Ng==", "bodyText": "Thank you for fixing this", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r405057856", "createdAt": "2020-04-07T19:26:57Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python-aiohttp/requirements.mustache", "diffHunk": "@@ -1,3 +1,4 @@\n-connexion[aiohttp,swagger-ui] == 2.6.0\n+# 2.3 is the last version that supports python 3.5\n+connexion[aiohttp,swagger-ui] >= 2.3.0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwMDYxMQ=="}, "originalCommit": {"oid": "073f55f0dac93b3b80dc6ae77da5b7014b3d2c09"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzIwNzA4OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python-flask/requirements.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODowMDo1OVrOGCPpgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOToyNjo0OFrOGCSw5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNjcyMg==", "bodyText": "Please change this to <= 2.3.0 I realize that I pinned this incorrectly when I updated it.\nThe releases here: https://github.com/zalando/connexion/releases\nShow that 2.3.0 is the last version that supports python 3.4 and 3.5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r405006722", "createdAt": "2020-04-07T18:00:59Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python-flask/requirements.mustache", "diffHunk": "@@ -1,10 +1,20 @@\n connexion >= 2.6.0; python_version>=\"3.6\"\n-connexion >= 2.3.0; python_version==\"3.5\"\n-connexion >= 2.3.0; python_version==\"3.4\"\n+# connexion 2.6 dropped support for python < 3.6\n+connexion >= 2.3.0; python_version==\"3.5\" or python_version==\"3.4\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "073f55f0dac93b3b80dc6ae77da5b7014b3d2c09"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA1Nzc2Nw==", "bodyText": "Thank you for fixing this", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5423#discussion_r405057767", "createdAt": "2020-04-07T19:26:48Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python-flask/requirements.mustache", "diffHunk": "@@ -1,10 +1,20 @@\n connexion >= 2.6.0; python_version>=\"3.6\"\n-connexion >= 2.3.0; python_version==\"3.5\"\n-connexion >= 2.3.0; python_version==\"3.4\"\n+# connexion 2.6 dropped support for python < 3.6\n+connexion >= 2.3.0; python_version==\"3.5\" or python_version==\"3.4\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwNjcyMg=="}, "originalCommit": {"oid": "073f55f0dac93b3b80dc6ae77da5b7014b3d2c09"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3719, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}