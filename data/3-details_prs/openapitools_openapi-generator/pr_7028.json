{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NDg5Mzg2", "number": 7028, "title": "[Java][jersey2] fix query parameters in applyToParams", "bodyText": "Fix query parameters in applyToParams with null check and using .equals for string comparison\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project beforehand.\n Run the shell script ./bin/generate-samples.shto update all Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit as it would merge with master. These must match the expectations made by your contribution. You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example ./bin/generate-samples.sh bin/configs/java*. For Windows users, please run the script in Git BASH.\n File the PR against the correct branch: master\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\ncc @bbdouglas (2017/07) @sreeshas (2017/08) @jfiala (2017/08) @lukoyanov (2017/09) @cbornet (2017/09) @jeff9finger (2018/01) @karismann (2019/03) @Zomzog (2019/04) @lwlee2608 (2019/10) @bkabrda (2020/01)", "createdAt": "2020-07-23T05:33:18Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7028", "merged": true, "mergeCommit": {"oid": "04c41d47a2fc85ab917cbcab6b65f0959d9d529c"}, "closed": true, "closedAt": "2020-07-24T10:44:16Z", "author": {"login": "wing328"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3oduLgH2gAyNDU1NDg5Mzg2OjVlNzY3N2JlOWEwM2Y3OTk0YmNmMGE4ZTUxNDMyYTU2OWVkMTlmMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3u73EAFqTQ1NDA5Nzc1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5e7677be9a03f7994bcf0a8e51432a569ed19f33", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/5e7677be9a03f7994bcf0a8e51432a569ed19f33", "committedDate": "2020-07-23T05:20:35Z", "message": "fix query parameters in applyToParams"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9d01e2c63968cb1cc0a630ba8946a3a3a509025", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e9d01e2c63968cb1cc0a630ba8946a3a3a509025", "committedDate": "2020-07-23T07:01:47Z", "message": "Merge remote-tracking branch 'origin/master' into fix_null_query"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3977d9ed15f6c58f3779c21447ece2664520747b", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3977d9ed15f6c58f3779c21447ece2664520747b", "committedDate": "2020-07-23T08:07:00Z", "message": "update samples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MDk3NzUz", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7028#pullrequestreview-454097753", "createdAt": "2020-07-23T12:52:56Z", "commit": {"oid": "3977d9ed15f6c58f3779c21447ece2664520747b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjo1Mjo1NlrOG2JFYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjo1Mjo1NlrOG2JFYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQyNTEyMA==", "bodyText": "I spent far too long yesterday thinking about exactly this test.  I think this may be sufficient:\n        Signature requestSignature = Signature.fromString(headerParams.get(\"Authorization\"), Algorithm.RSA_SHA512);\n        Verifier verify = new Verifier(PEM.readPublicKey(new ByteArrayInputStream(publicKeyPem.getBytes())), requestSignature);\n        assert verify.verify(\"post\", uri.toString(), headerParams);", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7028#discussion_r459425120", "createdAt": "2020-07-23T12:52:56Z", "author": {"login": "timgclark"}, "path": "samples/openapi3/client/petstore/java/jersey2-java8/src/test/java/org/openapitools/client/ApiClientTest.java", "diffHunk": "@@ -1,29 +1,81 @@\n package org.openapitools.client;\n \n+import org.openapitools.client.auth.Authentication;\n+import org.openapitools.client.auth.HttpSignatureAuth;\n import org.openapitools.client.model.*;\n import org.openapitools.client.ApiClient;\n \n import java.lang.Exception;\n-import java.util.Arrays;\n-import java.util.Date;\n-import java.util.TimeZone;\n-import java.text.SimpleDateFormat;\n-import java.time.OffsetDateTime;\n-import java.time.ZoneId;\n-import java.time.format.DateTimeFormatter;\n+import java.security.spec.AlgorithmParameterSpec;\n+import java.util.*;\n+import java.net.URI;\n import org.junit.*;\n+import org.tomitribe.auth.signatures.Algorithm;\n+import org.tomitribe.auth.signatures.Signer;\n+import org.tomitribe.auth.signatures.SigningAlgorithm;\n+import java.security.spec.PSSParameterSpec;\n+import java.security.spec.MGF1ParameterSpec;\n+import org.tomitribe.auth.signatures.*;\n+import java.io.ByteArrayInputStream;\n+import java.security.PublicKey;\n+import java.security.PrivateKey;\n+\n import static org.junit.Assert.*;\n \n public class ApiClientTest {\n     ApiClient apiClient = null;\n     Pet pet = null;\n \n+    private final String privateKeyPem = \"-----BEGIN RSA PRIVATE KEY-----\\n\" +\n+            \"MIICXgIBAAKBgQDCFENGw33yGihy92pDjZQhl0C36rPJj+CvfSC8+q28hxA161QF\\n\" +\n+            \"NUd13wuCTUcq0Qd2qsBe/2hFyc2DCJJg0h1L78+6Z4UMR7EOcpfdUE9Hf3m/hs+F\\n\" +\n+            \"UR45uBJeDK1HSFHD8bHKD6kv8FPGfJTotc+2xjJwoYi+1hqp1fIekaxsyQIDAQAB\\n\" +\n+            \"AoGBAJR8ZkCUvx5kzv+utdl7T5MnordT1TvoXXJGXK7ZZ+UuvMNUCdN2QPc4sBiA\\n\" +\n+            \"QWvLw1cSKt5DsKZ8UETpYPy8pPYnnDEz2dDYiaew9+xEpubyeW2oH4Zx71wqBtOK\\n\" +\n+            \"kqwrXa/pzdpiucRRjk6vE6YY7EBBs/g7uanVpGibOVAEsqH1AkEA7DkjVH28WDUg\\n\" +\n+            \"f1nqvfn2Kj6CT7nIcE3jGJsZZ7zlZmBmHFDONMLUrXR/Zm3pR5m0tCmBqa5RK95u\\n\" +\n+            \"412jt1dPIwJBANJT3v8pnkth48bQo/fKel6uEYyboRtA5/uHuHkZ6FQF7OUkGogc\\n\" +\n+            \"mSJluOdc5t6hI1VsLn0QZEjQZMEOWr+wKSMCQQCC4kXJEsHAve77oP6HtG/IiEn7\\n\" +\n+            \"kpyUXRNvFsDE0czpJJBvL/aRFUJxuRK91jhjC68sA7NsKMGg5OXb5I5Jj36xAkEA\\n\" +\n+            \"gIT7aFOYBFwGgQAQkWNKLvySgKbAZRTeLBacpHMuQdl1DfdntvAyqpAZ0lY0RKmW\\n\" +\n+            \"G6aFKaqQfOXKCyWoUiVknQJAXrlgySFci/2ueKlIE1QqIiLSZ8V8OlpFLRnb1pzI\\n\" +\n+            \"7U1yQXnTAEFYM560yJlzUpOb1V4cScGd365tiSMvxLOvTA==\\n\" +\n+            \"-----END RSA PRIVATE KEY-----\\n\";\n+\n     @Before\n     public void setup() {\n         apiClient = new ApiClient();\n         pet = new Pet();\n     }\n \n+    @Test\n+    public void testUpdateParamsForAuth() throws Exception {\n+        Map<String, String> headerParams = new HashMap<String, String>();\n+        List<Pair> queryParams = new ArrayList<>();\n+\n+        URI uri = new URI(\"/api/v1/telemetry/TimeSeries\");\n+\n+        // auth name\n+        String[] authNames = {\"http_signature_test\"};\n+\n+        HashMap<String, Authentication> authMap = new HashMap<String, Authentication>();\n+\n+        HttpSignatureAuth signatureAuth = new HttpSignatureAuth(\"some-key-1\", SigningAlgorithm.HS2019, Algorithm.RSA_SHA512, null,\n+                null, Arrays.asList(new String[] { \"(request-target)\" }), 128L);\n+\n+        signatureAuth.setPrivateKey(PEM.readPrivateKey(new ByteArrayInputStream(privateKeyPem.getBytes())));\n+\n+        authMap.put(\"http_signature_test\", signatureAuth);\n+\n+        ApiClient client = new ApiClient(authMap);\n+\n+        client.updateParamsForAuth(authNames, queryParams, headerParams, null, null, \"post\", uri);\n+\n+        // hard to test as expire will always be different", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3977d9ed15f6c58f3779c21447ece2664520747b"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3269, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}