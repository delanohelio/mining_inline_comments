{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxODE0NTcy", "number": 7677, "title": "[typescript-fetch] serialize complex type in multipart/form-data as JSON", "bodyText": "Complex types need to be serialized as JSON to avoid FormData.append()\nfrom converting them into strings through .toString().\nFixes #7658\nTested locally by running the generator against the following schema:\n---\nopenapi: \"3.0.0\"\ninfo:\n  title: Bug test case\n  version: \"1.0\"\npaths:\n  /example:\n    post:\n      operationId: exampleOperation\n      requestBody:\n        content:\n          multipart/form-data:\n            schema:\n              properties:\n                simpleValue:\n                  type: string\n                fileValue:\n                  format: binary\n                  type: string\n                complexvalue:\n                  properties:\n                    value1:\n                      type: number\n                    value2:\n                      type: string\n                  type: object\n                complexvalue_with_underscores:\n                  properties:\n                    value_1:\n                      type: string\n                    value_2:\n                      type: number\n                  type: object\n              type: object\n      responses:\n        \"201\":\n          description: Created\n\nThis resulted in the following serialization code:\nexport interface ExampleOperationRequest {\n    simpleValue?: string;\n    fileValue?: Blob;\n    complexvalue?: ExampleComplexvalue;\n    complexvalueWithUnderscores?: ExampleComplexvalueWithUnderscores;\n}\n\nexport interface ExampleComplexvalue {\n    /**\n     * \n     * @type {number}\n     * @memberof ExampleComplexvalue\n     */\n    value1?: number;\n    /**\n     * \n     * @type {string}\n     * @memberof ExampleComplexvalue\n     */\n    value2?: string;\n}\n\nexport function ExampleComplexvalueToJSON(value?: ExampleComplexvalue | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value1': value.value1,\n        'value2': value.value2,\n    };\n}\n\nexport interface ExampleComplexvalueWithUnderscores {\n    /**\n     * \n     * @type {string}\n     * @memberof ExampleComplexvalueWithUnderscores\n     */\n    value1?: string;\n    /**\n     * \n     * @type {number}\n     * @memberof ExampleComplexvalueWithUnderscores\n     */\n    value2?: number;\n}\n\nexport function ExampleComplexvalueWithUnderscoresToJSON(value?: ExampleComplexvalueWithUnderscores | null): any {\n    if (value === undefined) {\n        return undefined;\n    }\n    if (value === null) {\n        return null;\n    }\n    return {\n        \n        'value_1': value.value1,\n        'value_2': value.value2,\n    };\n}\n\n        if (requestParameters.simpleValue !== undefined) {\n            formParams.append('simpleValue', requestParameters.simpleValue as any);\n        }\n\n        if (requestParameters.fileValue !== undefined) {\n            formParams.append('fileValue', requestParameters.fileValue as any);\n        }\n\n        if (requestParameters.complexvalue !== undefined) {\n            formParams.append('complexvalue', new Blob([JSON.stringify(ExampleComplexvalueToJSON(requestParameters.complexvalue))], { type: \"application/json\", }));\n        }\n\n        if (requestParameters.complexvalueWithUnderscores !== undefined) {\n            formParams.append('complexvalue_with_underscores', new Blob([JSON.stringify(ExampleComplexvalueWithUnderscoresToJSON(requestParameters.complexvalueWithUnderscores))], { type: \"application/json\", }));\n        }\n\nPR checklist\n\n Read the contribution guidelines.\n Pull Request title clearly describes the work in the pull request and Pull Request description provides details about how to validate the work. Missing information here may result in delayed response from the community.\n If contributing template-only or documentation-only changes which will change sample output, build the project beforehand.\n Run the shell script ./bin/generate-samples.shto update all Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit as it would merge with master. These must match the expectations made by your contribution. You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example ./bin/generate-samples.sh bin/configs/java*. For Windows users, please run the script in Git BASH.\n File the PR against the correct branch: master\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\n@TiFu (2017/07) @taxpon (2017/07) @sebastianhaas (2017/07) @kenisteward (2017/07) @Vrolijkx (2017/09) @macjohnny (2018/01) @topce (2018/10) @akehir (2019/07) @petejohansonxo (2019/11) @amakhrov (2020/02)", "createdAt": "2020-10-12T20:56:05Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7677", "merged": true, "mergeCommit": {"oid": "490068ad902b9a25d020de54f244c53c23eb4124"}, "closed": true, "closedAt": "2020-10-23T07:01:22Z", "author": {"login": "verokarhu"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSCnmQAFqTUwNzEwNTEzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVRC6qgFqTUxNTM5MzI2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MTA1MTM2", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7677#pullrequestreview-507105136", "createdAt": "2020-10-13T06:30:47Z", "commit": {"oid": "27c438933d237f6cada7e55f9e636361e3eb36d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjozMDo0N1rOHgXNVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjozMDo0N1rOHgXNVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5NjcyNA==", "bodyText": "what if the parameter is e.g. a Blob, is it also a primitive type?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7677#discussion_r503696724", "createdAt": "2020-10-13T06:30:47Z", "author": {"login": "macjohnny"}, "path": "modules/openapi-generator/src/main/resources/typescript-fetch/apis.mustache", "diffHunk": "@@ -238,7 +238,12 @@ export class {{classname}} extends runtime.BaseAPI {\n         {{/isListContainer}}\n         {{^isListContainer}}\n         if (requestParameters.{{paramName}} !== undefined) {\n+            {{#isPrimitiveType}}\n             formParams.append('{{baseName}}', requestParameters.{{paramName}} as any);\n+            {{/isPrimitiveType}}\n+            {{^isPrimitiveType}}\n+            formParams.append('{{baseName}}', new Blob([JSON.stringify(requestParameters.{{paramName}})], { type: \"application/json\", }));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27c438933d237f6cada7e55f9e636361e3eb36d3"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "047e544755a72bdd48f9176a70f667292d147210", "author": {"user": {"login": "verokarhu", "name": "Andreas Mets\u00e4l\u00e4"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/047e544755a72bdd48f9176a70f667292d147210", "committedDate": "2020-10-14T21:22:36Z", "message": "[typescript-fetch] serialize complex type in multipart/form-data as JSON (#7658)\n\nComplex types need to be serialized as JSON to avoid FormData.append()\nfrom converting them into strings through .toString(). The generated\nToJSON mapper is used in case the value name has underscores or other\nunusual characters.\n\nSigned-off-by: Andreas Mets\u00e4l\u00e4 <andreas.metsala@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MzkzMjYy", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7677#pullrequestreview-515393262", "createdAt": "2020-10-23T07:01:13Z", "commit": {"oid": "047e544755a72bdd48f9176a70f667292d147210"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3105, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}