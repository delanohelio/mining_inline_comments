{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NzUwOTQ1", "number": 6695, "title": "[Java][jersey2] fix oneOf, anyOf documentation", "bodyText": "Fix oneOf, anyOf auto-generated documentation (.md)\nFYI @bbdouglas (2017/07) @sreeshas (2017/08) @jfiala (2017/08) @lukoyanov (2017/09) @cbornet (2017/09) @jeff9finger (2018/01) @karismann (2019/03) @Zomzog (2019/04) @lwlee2608 (2019/10) @bkabrda (2020/01)\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project beforehand.\n Run the shell script ./bin/generate-samples.shto update all Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit as it would merge with master. These must match the expectations made by your contribution. You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example ./bin/generate-samples.sh bin/config/java*. For Windows users, please run the script in Git BASH.\n File the PR against the correct branch: master\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-06-17T10:18:25Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6695", "merged": true, "mergeCommit": {"oid": "6b877efe1f372163ecc3739f175d9e6f911344e4"}, "closed": true, "closedAt": "2020-06-23T13:58:17Z", "author": {"login": "wing328"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsGyR9AH2gAyNDM1NzUwOTQ1OjgwMTVkMjhiN2E1ZTM5NGIyNzkwNjgwNzE2YWQzMTVkMWViMDYzYmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsLlXRgFqTQzMjQ4ODM1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8015d28b7a5e394b2790680716ad315d1eb063be", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8015d28b7a5e394b2790680716ad315d1eb063be", "committedDate": "2020-06-17T09:53:06Z", "message": "fix oneOf doc in Java jersey2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6014c8938cd64df4df82ad900b08b1cd50cdb5c0", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6014c8938cd64df4df82ad900b08b1cd50cdb5c0", "committedDate": "2020-06-17T10:01:46Z", "message": "fix sample code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05d65d83ced5117293d9deecf16c2e9dd5d18fa4", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/05d65d83ced5117293d9deecf16c2e9dd5d18fa4", "committedDate": "2020-06-17T10:02:29Z", "message": "add new files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6884c1671c0531678bd6d9000eadf44f55b923c7", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6884c1671c0531678bd6d9000eadf44f55b923c7", "committedDate": "2020-06-17T10:14:24Z", "message": "minor tweat to the doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNDg4MzUx", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6695#pullrequestreview-432488351", "createdAt": "2020-06-17T14:55:56Z", "commit": {"oid": "6884c1671c0531678bd6d9000eadf44f55b923c7"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDo1NTo1N1rOGlJu-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowMTo0NlrOGlKBUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwOTk3Nw==", "bodyText": "What about when we combine allOf and oneOf together?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6695#discussion_r441609977", "createdAt": "2020-06-17T14:55:57Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/Java/libraries/jersey2/model_oneof_doc.mustache", "diffHunk": "@@ -0,0 +1,38 @@\n+# {{classname}}\n+\n+{{#description}}\n+{{&description}}\n+\n+{{/description}}\n+## oneOf schemas\n+{{#oneOf}}\n+* [{{{.}}}]({{{.}}}.md)\n+{{/oneOf}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6884c1671c0531678bd6d9000eadf44f55b923c7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxNDY3Mw==", "bodyText": "What about when properties are set in the composed schema and we have oneOf or anyOf?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6695#discussion_r441614673", "createdAt": "2020-06-17T15:01:46Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/Java/libraries/jersey2/model_doc.mustache", "diffHunk": "@@ -0,0 +1,19 @@\n+{{#models}}{{#model}}\n+\n+{{#isEnum}}\n+{{>enum_outer_doc}}\n+{{/isEnum}}\n+{{^isEnum}}\n+{{^oneOf.isEmpty}}\n+{{>model_oneof_doc}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6884c1671c0531678bd6d9000eadf44f55b923c7"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2096, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}