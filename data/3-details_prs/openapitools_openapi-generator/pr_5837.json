{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5Mzc3Mjk0", "number": 5837, "title": "C client generator improvements to support petstore", "bodyText": "To fix #5836\nImprovement to the C client generator, driven by:\nopenapi-generator/modules/openapi-generator/src/test/resources/3_0/petstore.yaml\nIn particular:\n\nA .h and a .c to manage binary data, like it's done for lists\nCorrect allocation of data for binary data in the model body\nEncode/decode of binary data when OPENSSL is not in use\nCorrect creation of tests for binary data\nAdded an \"example\" for patterns\nDecoration of apiKeys in apiClient, needed when a yaml has got both auth_cookie and api_key\n\nNow the generator can support that API definition, comprising creation of test files for the models.\n@ityuhui @zhemant @wing328\nPR checklist\n\n[ X ] Read the contribution guidelines.\n[ X ] If contributing template-only or documentation-only changes which will change sample output, build the project before.\n[ X ] Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n[ X ] File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n[ X ] Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-04-06T04:46:43Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5837", "merged": true, "mergeCommit": {"oid": "5fd724fceb5b73240634b433f672bff70c7946d8"}, "closed": true, "closedAt": "2020-04-07T03:40:58Z", "author": {"login": "michelealbano"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcU3G7lgH2gAyMzk5Mzc3Mjk0Ojg1MTRhZTYzNTRmNGEzNDkyZjQzYjA0NWMwZTA0NDc1OTczNjIzMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcU-To8AH2gAyMzk5Mzc3Mjk0OmUwNWFmODJkM2FlYWYzMGEwNTFiM2Q3NjE4ODQxZDZmNmNkOWRhOGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8514ae6354f4a3492f43b045c0e0447597362323", "author": {"user": {"login": "michelealbano", "name": "Michele Albano"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8514ae6354f4a3492f43b045c0e0447597362323", "committedDate": "2020-04-06T04:36:55Z", "message": "C client generator improvement to support:\nopenapi-generator/modules/openapi-generator/src/test/resources/3_0/petstore.yaml"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3OTc4MzQw", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5837#pullrequestreview-387978340", "createdAt": "2020-04-06T07:02:42Z", "commit": {"oid": "8514ae6354f4a3492f43b045c0e0447597362323"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzowMjo0MlrOGBKMig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzowMjo0MlrOGBKMig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg2ODgxMA==", "bodyText": "Why this fake encode/decode is needed ?  If uses do not define -DOPENSSL, but use the function base64decode or base64encode ,  they will not get the result that they want.\nI think if the users want to use the function base64decode or base64encode defined by openapi-generator/c-libcurl , they must define -DOPENSSL in CMakefile.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5837#discussion_r403868810", "createdAt": "2020-04-06T07:02:42Z", "author": {"login": "ityuhui"}, "path": "modules/openapi-generator/src/main/resources/C-libcurl/apiClient.c.mustache", "diffHunk": "@@ -632,7 +632,12 @@ char *base64encode (const void *b64_encode_this, int encode_this_many_bytes){\n     BUF_MEM_grow(mem_bio_mem_ptr, (*mem_bio_mem_ptr).length + 1);   //Makes space for end null.\n     (*mem_bio_mem_ptr).data[(*mem_bio_mem_ptr).length] = '\\0';  //Adds null-terminator to tail.\n     return (*mem_bio_mem_ptr).data; //Returns base-64 encoded data. (See: \"buf_mem_st\" struct).\n-#endif\n+#else // OPENSSL\n+    char* ret = malloc(encode_this_many_bytes);\n+    memcpy(ret, b64_encode_this, encode_this_many_bytes-1);\n+    ret[encode_this_many_bytes] = 0;\n+    return ret;\n+#endif // OPENSSL\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8514ae6354f4a3492f43b045c0e0447597362323"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3OTc4OTUz", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5837#pullrequestreview-387978953", "createdAt": "2020-04-06T07:03:47Z", "commit": {"oid": "8514ae6354f4a3492f43b045c0e0447597362323"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzowMzo0OFrOGBKOhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzowMzo0OFrOGBKOhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg2OTMxOA==", "bodyText": "The two functions base64encode or base64decode are declarated in apiClient.h\nSo why are they needed here ?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5837#discussion_r403869318", "createdAt": "2020-04-06T07:03:48Z", "author": {"login": "ityuhui"}, "path": "modules/openapi-generator/src/main/resources/C-libcurl/model-header.mustache", "diffHunk": "@@ -11,6 +11,11 @@\n #include \"../external/cJSON.h\"\n #include \"../include/list.h\"\n #include \"../include/keyValuePair.h\"\n+#include \"../include/binary.h\"\n+\n+char *base64encode(const void *b64_encode_this, int encode_this_many_bytes);\n+\n+char *base64decode(const void *b64_decode_this, int decode_this_many_bytes, int *decoded_bytes);\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8514ae6354f4a3492f43b045c0e0447597362323"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4a3717d579ae2d26b4ef49de339efb14e66696d", "author": {"user": {"login": "michelealbano", "name": "Michele Albano"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/f4a3717d579ae2d26b4ef49de339efb14e66696d", "committedDate": "2020-04-06T09:24:21Z", "message": "Improvements to the C client generator:\n- moved base64* from apiClient.c to binary.h/binary.c\n- changed CR/LF to LF in binary.h/binary.c"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e05af82d3aeaf30a051b3d7618841d6f6cd9da8e", "author": {"user": {"login": "michelealbano", "name": "Michele Albano"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e05af82d3aeaf30a051b3d7618841d6f6cd9da8e", "committedDate": "2020-04-06T13:00:08Z", "message": "C client generator: better support for base64encode / base64decode"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2560, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}