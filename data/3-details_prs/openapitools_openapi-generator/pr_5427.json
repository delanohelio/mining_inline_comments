{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NDcxMTEy", "number": 5427, "title": "[typescript] Clean up modelPropertyNaming across generators ", "bodyText": "Fixes #2976\nSummary\n\nGenerators without runtime models conversion use \"original\" property naming by default. It's still possible to change it via cli options - might be helpful when used together with customized templates. The cli option description has been modified to provide some more context.\nGenerators with runtime conversion (typescript-fetch, typescript-node, typescript-reduxquery) keep using \"camelCase\"\n\nImplementation notes\n\nI decoupled toVarName from toParamName. Former respects the modelPropertyNaming, while latter keeps always using camelCase.\nRefactoring: use an enum instead of string for modelPropertyNaming. It now better resembles enumPropertyNaming.\nNo samples have changed. It's because petstore.yaml has all model vars defined in camelCase - which means original naming (new) is effectively the same as camelCase (old).\n\nPR checklist\n\n Read the contribution guidelines.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\n@TiFu (2017/07) @taxpon (2017/07) @sebastianhaas (2017/07) @kenisteward (2017/07) @Vrolijkx (2017/09) @macjohnny (2018/01) @nicokoenig (2018/09) @topce (2018/10) @akehir (2019/07) @petejohansonxo (2019/11)", "createdAt": "2020-02-25T09:45:53Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5427", "merged": true, "mergeCommit": {"oid": "0edb628633da61532c497d38493373b79395ffc2"}, "closed": true, "closedAt": "2020-02-28T06:31:20Z", "author": {"login": "amakhrov"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHtxcQgH2gAyMzc5NDcxMTEyOmRhM2M2OTljZDE0ODZhOTUxMDUyYTBmOTEyMjdmYWExMjBlODJkMWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIp9vIgFqTM2NjE4MzIyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "da3c699cd1486a951052a0f91227faa120e82d1d", "author": {"user": {"login": "amakhrov", "name": "Alexey Makhrov"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/da3c699cd1486a951052a0f91227faa120e82d1d", "committedDate": "2020-02-25T08:23:17Z", "message": "[typescript] Clean up modelPropertyNaming across generators\nFixes https://github.com/OpenAPITools/openapi-generator/issues/2976\n\nGenerators without runtime models conversion use \"original\" property naming by default. It's still possible to change it via cli options\n\nGenerators with runtime conversion keep using \"camelCase\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af99207e61d1672997edaa2a426102c2dbd9a765", "author": {"user": {"login": "amakhrov", "name": "Alexey Makhrov"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/af99207e61d1672997edaa2a426102c2dbd9a765", "committedDate": "2020-02-25T08:35:05Z", "message": "Refactoring: use enum instead of string for modelPropertyNaming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "457c63dbcc55a60a56370fbc46b37c9b15adc66e", "author": {"user": {"login": "amakhrov", "name": "Alexey Makhrov"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/457c63dbcc55a60a56370fbc46b37c9b15adc66e", "committedDate": "2020-02-25T09:07:30Z", "message": "Restore the original camelCase for var names, decouple it from property names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96a05dabff4cada2bd8b762e263b387f9a3514f6", "author": {"user": {"login": "amakhrov", "name": "Alexey Makhrov"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/96a05dabff4cada2bd8b762e263b387f9a3514f6", "committedDate": "2020-02-25T09:23:53Z", "message": "Swap toParamName and toVarName logic (looks like I've mistaken them)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4e99a086101d6cdff3beebab2a1b92d446fa70e", "author": {"user": {"login": "amakhrov", "name": "Alexey Makhrov"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/d4e99a086101d6cdff3beebab2a1b92d446fa70e", "committedDate": "2020-02-25T09:31:44Z", "message": "Regenerate docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MDAxNTA5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5427#pullrequestreview-364001509", "createdAt": "2020-02-25T09:48:25Z", "commit": {"oid": "d4e99a086101d6cdff3beebab2a1b92d446fa70e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTo0ODoyNVrOFt_Tcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTo1NToyOFrOFt_jyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc2NzQxMA==", "bodyText": "I carelessly removed this special case.\nPlease let me know if there is a particular reason to handle upper case differently from everything else!", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5427#discussion_r383767410", "createdAt": "2020-02-25T09:48:25Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractTypeScriptClientCodegen.java", "diffHunk": "@@ -274,39 +283,36 @@ public String modelFileFolder() {\n \n     @Override\n     public String toParamName(String name) {\n-        // sanitize name\n         name = sanitizeName(name, \"[^\\\\w$]\");\n \n         if (\"_\".equals(name)) {\n             name = \"_u\";\n         }\n \n-        // if it's all uppper case, do nothing\n-        if (name.matches(\"^[A-Z_]*$\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e99a086101d6cdff3beebab2a1b92d446fa70e"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3MDI2OA==", "bodyText": "this would never happen, because at this point name has been sanitized with even more restrictive rules", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5427#discussion_r383770268", "createdAt": "2020-02-25T09:53:09Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractTypeScriptClientCodegen.java", "diffHunk": "@@ -274,39 +283,36 @@ public String modelFileFolder() {\n \n     @Override\n     public String toParamName(String name) {\n-        // sanitize name\n         name = sanitizeName(name, \"[^\\\\w$]\");\n \n         if (\"_\".equals(name)) {\n             name = \"_u\";\n         }\n \n-        // if it's all uppper case, do nothing\n-        if (name.matches(\"^[A-Z_]*$\")) {\n-            return name;\n-        }\n-\n-        name = getNameUsingModelPropertyNaming(name);\n-\n-        // for reserved word or word starting with number, append _\n-        if (isReservedWord(name) || name.matches(\"^\\\\d.*\")) {\n-            name = escapeReservedWord(name);\n-        }\n+        name = camelize(name, true);\n+        name = toSafeIdentifier(name);\n \n         return name;\n     }\n \n     @Override\n     public String toVarName(String name) {\n-        name = this.toParamName(name);\n-        \n-        // if the property name has any breaking characters such as :, ;, . etc.\n-        // then wrap the name within single quotes.\n-        // my:interface:property: string; => 'my:interface:property': string;\n-        if (propertyHasBreakingCharacters(name)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e99a086101d6cdff3beebab2a1b92d446fa70e"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc3MTU5NQ==", "bodyText": "This was not used either in the class or in the mustache templates. Most likely - copy/paste from another generator with runtime conversion support (like typescript-fetch)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5427#discussion_r383771595", "createdAt": "2020-02-25T09:55:28Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/TypeScriptRxjsClientCodegen.java", "diffHunk": "@@ -89,8 +89,6 @@ public void setNpmRepository(String npmRepository) {\n     @Override\n     public void processOpts() {\n         super.processOpts();\n-        additionalProperties.put(\"isOriginalModelPropertyNaming\", getModelPropertyNaming().equals(\"original\"));\n-        additionalProperties.put(\"modelPropertyNaming\", getModelPropertyNaming());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e99a086101d6cdff3beebab2a1b92d446fa70e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68b88c0f92e5c9f3cd5800ba6bcff560970e5526", "author": {"user": {"login": "amakhrov", "name": "Alexey Makhrov"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/68b88c0f92e5c9f3cd5800ba6bcff560970e5526", "committedDate": "2020-02-25T09:56:26Z", "message": "Remove a no longer used private method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MTgzMjI2", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5427#pullrequestreview-366183226", "createdAt": "2020-02-28T06:31:02Z", "commit": {"oid": "68b88c0f92e5c9f3cd5800ba6bcff560970e5526"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2682, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}