{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MTYzMTA4", "number": 6654, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNzo0Mzo0OVrOEFbIyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNzo0Mzo0OVrOEFbIyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MTIyOTU0OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractCppCodegen.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNzo0Mzo0OVrOGjmqhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwOTozNDoxNVrOGjqiHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk4NjgyMQ==", "bodyText": "I don't do much Java, but this loop looks odd, too much indentation levels IMO.\nHalf-assed attempt at fixing this a little - but I went down to 4 indentation levels.\nI simply inverted the if statements, so they could probably be written in a smarter way.\nfor (CodegenProperty property : model.vars) {\n\tif (!(property.isContainer && property.mostInnerItems.isModel) && !(property.isModel))\n\t\tcontinue;\n\t\n\tString innerPropertyType = property.isContainer ? property.mostInnerItems.baseType : property.baseType;\n\tfor (final Entry<String, Object> mo : objs.entrySet()) {\n\t\tCodegenModel innerModel = ModelUtils.getModelByName(mo.getKey(), objs);\n\t\tif (!(innerPropertyType.equals(innerModel.classname) && !innerPropertyType.equals(model.classname) && innerModel.hasVars))\n\t\t\tcontinue;\n\t\tfor (CodegenProperty p : innerModel.vars) {\n\t\t\tif (!((p.isModel && p.dataType.equals(model.classname)) || (p.isContainer && p.mostInnerItems.baseType.equals(model.classname))))\n\t\t\t\tcontinue;\n\t\t\tString forwardDecl = \"class \" + innerModel.classname + \";\";\n\t\t\tif (!forwardDeclarations.contains(forwardDecl)) {\n\t\t\t\tforwardDeclarations.add(forwardDecl);\n\t\t\t}\n\t\t}\n\t}\n}", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6654#discussion_r439986821", "createdAt": "2020-06-15T07:43:49Z", "author": {"login": "muttleyxd"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractCppCodegen.java", "diffHunk": "@@ -353,4 +357,47 @@ public void preprocessOpenAPI(OpenAPI openAPI) {\n         }\n         return postProcessModelsEnum(objs);\n     }\n+\n+    @Override\n+    public Map<String, Object> postProcessAllModels(Map<String, Object> objs){\n+        Map<String, Object> models = super.postProcessAllModels(objs);\n+        for (final Entry<String, Object> model : models.entrySet()) {\n+            CodegenModel mo = ModelUtils.getModelByName(model.getKey(), models);\n+            addForwardDeclarations(mo, models);\n+        }\n+        return models;\n+    }\n+\n+    private void addForwardDeclarations(CodegenModel model, Map<String, Object> objs) {\n+        List<String> forwardDeclarations = new ArrayList<String>();\n+        if(!model.hasVars) {\n+            return;\n+        }\n+        for(CodegenProperty property : model.vars){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2467aa068c160b2a256e9d52458119be498a5bba"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA1MDIwNw==", "bodyText": "I refactored it a bit.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6654#discussion_r440050207", "createdAt": "2020-06-15T09:34:15Z", "author": {"login": "etherealjoy"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/AbstractCppCodegen.java", "diffHunk": "@@ -353,4 +357,47 @@ public void preprocessOpenAPI(OpenAPI openAPI) {\n         }\n         return postProcessModelsEnum(objs);\n     }\n+\n+    @Override\n+    public Map<String, Object> postProcessAllModels(Map<String, Object> objs){\n+        Map<String, Object> models = super.postProcessAllModels(objs);\n+        for (final Entry<String, Object> model : models.entrySet()) {\n+            CodegenModel mo = ModelUtils.getModelByName(model.getKey(), models);\n+            addForwardDeclarations(mo, models);\n+        }\n+        return models;\n+    }\n+\n+    private void addForwardDeclarations(CodegenModel model, Map<String, Object> objs) {\n+        List<String> forwardDeclarations = new ArrayList<String>();\n+        if(!model.hasVars) {\n+            return;\n+        }\n+        for(CodegenProperty property : model.vars){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk4NjgyMQ=="}, "originalCommit": {"oid": "2467aa068c160b2a256e9d52458119be498a5bba"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3311, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}