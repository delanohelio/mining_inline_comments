{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NDU3MjY5", "number": 6753, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToyNjo1NFrOEIGsCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToyNjo1NFrOEIGsCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTMzNjQxOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustClientCodegen.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxOToyNjo1NFrOGn3crw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwNzoxNDo1MFrOGoFzgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1NjExMQ==", "bodyText": "I'm afraid your change breaks library: hyper, as can easily be checked like this:\njava -jar ./modules/openapi-generator-cli/target/openapi-generator-cli.jar generate -g rust -i https://github.com/slackapi/slack-api-specs/raw/master/web-api/slack_web_openapi_v2.json -o slack --skip-validate-spec --remove-operation-id-prefix --library hyper\ncargo check --manifest-path slack/Cargo.toml\n> ...\n> error[E0583]: file not found for module `client`\n>    --> src\\apis\\mod.rs:162:1\n>     |\n> 162 | pub mod client;\n>     | ^^^^^^^^^^^^^^^\n>     |\n>     = help: to create the module `client`, create file \"src\\apis\\client.rs\"\n\nI would suggest something like this as an alternative for removing the line completely:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (HYPER_LIBRARY.equals(getLibrary())) {\n          \n          \n            \n                        supportingFiles.add(new SupportingFile(\"request.rs\", apiFolder, \"request.rs\"));\n          \n          \n            \n                    }\n          \n          \n            \n                    if (HYPER_LIBRARY.equals(getLibrary())) {\n          \n          \n            \n                        supportingFiles.add(new SupportingFile(\"request.rs\", apiFolder, \"request.rs\"));\n          \n          \n            \n                        supportingFiles.add(new SupportingFile(getLibrary() + \"/client.mustache\", apiFolder, \"client.rs\"));\n          \n          \n            \n                    }\n          \n      \n    \n    \n  \n\nMaybe a test using library: hyper would be helpful to prevent something like this in the future?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6753#discussion_r444456111", "createdAt": "2020-06-23T19:26:54Z", "author": {"login": "HenningHolmDE"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustClientCodegen.java", "diffHunk": "@@ -301,9 +301,6 @@ public void processOpts() {\n         if (HYPER_LIBRARY.equals(getLibrary())) {\n             supportingFiles.add(new SupportingFile(\"request.rs\", apiFolder, \"request.rs\"));\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b054edfb34f6354c320014aa29a6bb522ce5ab5a"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDY5MTMzMA==", "bodyText": "Good catch! I didn't think that client file was shared between hyper and reqwest. Will fix that. \ud83d\udc4d", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6753#discussion_r444691330", "createdAt": "2020-06-24T07:14:50Z", "author": {"login": "bcourtine"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustClientCodegen.java", "diffHunk": "@@ -301,9 +301,6 @@ public void processOpts() {\n         if (HYPER_LIBRARY.equals(getLibrary())) {\n             supportingFiles.add(new SupportingFile(\"request.rs\", apiFolder, \"request.rs\"));\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ1NjExMQ=="}, "originalCommit": {"oid": "b054edfb34f6354c320014aa29a6bb522ce5ab5a"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3357, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}