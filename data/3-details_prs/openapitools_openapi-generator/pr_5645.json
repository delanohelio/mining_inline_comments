{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNTc3NjI2", "number": 5645, "title": "Generator for JavaScript/Apollo Client", "bodyText": "Adds a new generator for JavaScript/ES6 Apollo RestDatasource client. Provides jsdoc comments that work better with VS Code\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\ncc @CodeNinjai (2017/07) @frol (2017/07) @cliffano (2017/07)", "createdAt": "2020-03-20T14:58:00Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5645", "merged": true, "mergeCommit": {"oid": "ce49fe587fe6ab4dcc2275590f49fb0b09777710"}, "closed": true, "closedAt": "2020-03-26T09:02:45Z", "author": {"login": "erithmetic"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPhv2sgH2gAyMzkxNTc3NjI2OjA0NGZmYWQwY2I4ODk2ZjJjZDg3YjM5MTlhY2IxZmQyZmE4ZTJmMjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRYLNzAFqTM4MTgwMzg1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "044ffad0cb8896f2cd87b3919acb1fd2fa8e2f25", "author": {"user": {"login": "erithmetic", "name": "Erica Kastner"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/044ffad0cb8896f2cd87b3919acb1fd2fa8e2f25", "committedDate": "2020-03-20T14:54:05Z", "message": "Generator for JavaScript/Apollo Client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6197dc311083dfbfbf00929174d1a99a00767cf0", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6197dc311083dfbfbf00929174d1a99a00767cf0", "committedDate": "2020-03-24T16:07:37Z", "message": "Merge branch 'master' into javascript-apollo-client"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxODAzMzYy", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5645#pullrequestreview-381803362", "createdAt": "2020-03-26T08:52:08Z", "commit": {"oid": "6197dc311083dfbfbf00929174d1a99a00767cf0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo1MjowOFrOF78sjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo1MjowOFrOF78sjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQwNDc1MA==", "bodyText": "I'll remove line 3 later as per https://opensource.stackexchange.com/questions/7300/copyright-notice-in-the-file-header-apache-v2-license/7301#7301", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5645#discussion_r398404750", "createdAt": "2020-03-26T08:52:08Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavascriptApolloClientCodegen.java", "diffHunk": "@@ -0,0 +1,1162 @@\n+/*\n+ * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)\n+ * Copyright 2018 SmartBear Software", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6197dc311083dfbfbf00929174d1a99a00767cf0"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxODAzODUw", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5645#pullrequestreview-381803850", "createdAt": "2020-03-26T08:52:46Z", "commit": {"oid": "6197dc311083dfbfbf00929174d1a99a00767cf0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo1Mjo0NlrOF78uAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwODo1Mjo0NlrOF78uAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQwNTEyMA==", "bodyText": "I'll add the word \"beta\" to start with.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5645#discussion_r398405120", "createdAt": "2020-03-26T08:52:46Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavascriptApolloClientCodegen.java", "diffHunk": "@@ -0,0 +1,1162 @@\n+/*\n+ * Copyright 2018 OpenAPI-Generator Contributors (https://openapi-generator.tech)\n+ * Copyright 2018 SmartBear Software\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.openapitools.codegen.languages;\n+\n+import io.swagger.v3.oas.models.OpenAPI;\n+import io.swagger.v3.oas.models.info.Info;\n+import io.swagger.v3.oas.models.info.License;\n+import io.swagger.v3.oas.models.media.ArraySchema;\n+import io.swagger.v3.oas.models.media.Schema;\n+import org.apache.commons.io.FilenameUtils;\n+import org.apache.commons.lang3.StringUtils;\n+import org.openapitools.codegen.*;\n+import org.openapitools.codegen.meta.features.DocumentationFeature;\n+import org.openapitools.codegen.utils.ModelUtils;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.io.File;\n+import java.util.*;\n+\n+import static org.openapitools.codegen.utils.OnceLogger.once;\n+import static org.openapitools.codegen.utils.StringUtils.*;\n+\n+public class JavascriptApolloClientCodegen extends DefaultCodegen implements CodegenConfig {\n+    @SuppressWarnings(\"hiding\")\n+    private static final Logger LOGGER = LoggerFactory.getLogger(JavascriptApolloClientCodegen.class);\n+\n+    public static final String PROJECT_NAME = \"projectName\";\n+    public static final String MODULE_NAME = \"moduleName\";\n+    public static final String PROJECT_DESCRIPTION = \"projectDescription\";\n+    public static final String PROJECT_VERSION = \"projectVersion\";\n+    public static final String USE_INHERITANCE = \"useInheritance\";\n+    public static final String EMIT_JS_DOC = \"emitJSDoc\";\n+    public static final String NPM_REPOSITORY = \"npmRepository\";\n+\n+    final String[][] JAVASCRIPT_SUPPORTING_FILES = new String[][]{\n+            new String[]{\"package.mustache\", \"package.json\"},\n+            // new String[]{\"index.mustache\", \"src/index.js\", },\n+            // new String[]{\"ApiClient.mustache\", \"src/ApiClient.js\"},\n+            new String[]{\"git_push.sh.mustache\", \"git_push.sh\"},\n+            new String[]{\"README.mustache\", \"README.md\"},\n+            new String[]{\"mocha.opts\", \"mocha.opts\"},\n+            new String[]{\"travis.yml\", \".travis.yml\"}\n+    };\n+\n+    final String[][] JAVASCRIPT_ES6_SUPPORTING_FILES = new String[][]{\n+            new String[]{\"package.mustache\", \"package.json\"},\n+            // new String[]{\"index.mustache\", \"src/index.js\"},\n+            // new String[]{\"ApiClient.mustache\", \"src/ApiClient.js\"},\n+            new String[]{\"git_push.sh.mustache\", \"git_push.sh\"},\n+            new String[]{\"README.mustache\", \"README.md\"},\n+            new String[]{\"mocha.opts\", \"mocha.opts\"},\n+            new String[]{\"travis.yml\", \".travis.yml\"},\n+            new String[]{\".babelrc.mustache\", \".babelrc\"}\n+    };\n+\n+    protected String projectName;\n+    protected String moduleName;\n+    protected String projectDescription;\n+    protected String projectVersion;\n+    protected String licenseName;\n+\n+    protected String invokerPackage;\n+    protected String sourceFolder = \"src\";\n+    protected boolean emitJSDoc = true;\n+    protected String apiDocPath = \"docs/\";\n+    protected String modelDocPath = \"docs/\";\n+    protected String apiTestPath = \"api/\";\n+    protected String modelTestPath = \"model/\";\n+    protected String npmRepository = null;\n+    private String modelPropertyNaming = \"camelCase\";\n+\n+    public JavascriptApolloClientCodegen() {\n+        super();\n+\n+        modifyFeatureSet(features -> features.includeDocumentationFeatures(DocumentationFeature.Readme));\n+\n+        outputFolder = \"generated-code/js\";\n+        modelTemplateFiles.put(\"model.mustache\", \".js\");\n+        modelTestTemplateFiles.put(\"model_test.mustache\", \".js\");\n+        apiTemplateFiles.put(\"api.mustache\", \".js\");\n+        apiTestTemplateFiles.put(\"api_test.mustache\", \".js\");\n+        // subfolder Javascript/es6\n+        embeddedTemplateDir = templateDir = \"Javascript-Apollo\";\n+        apiPackage = \"api\";\n+        modelPackage = \"model\";\n+        modelDocTemplateFiles.put(\"model_doc.mustache\", \".md\");\n+        apiDocTemplateFiles.put(\"api_doc.mustache\", \".md\");\n+\n+        // default HIDE_GENERATION_TIMESTAMP to true\n+        hideGenerationTimestamp = Boolean.TRUE;\n+\n+        // reference: http://www.w3schools.com/js/js_reserved.asp\n+        setReservedWordsLowerCase(\n+                Arrays.asList(\n+                        \"abstract\", \"arguments\", \"boolean\", \"break\", \"byte\",\n+                        \"case\", \"catch\", \"char\", \"class\", \"const\",\n+                        \"continue\", \"debugger\", \"default\", \"delete\", \"do\",\n+                        \"double\", \"else\", \"enum\", \"eval\", \"export\",\n+                        \"extends\", \"false\", \"final\", \"finally\", \"float\",\n+                        \"for\", \"function\", \"goto\", \"if\", \"implements\",\n+                        \"import\", \"in\", \"instanceof\", \"int\", \"interface\",\n+                        \"let\", \"long\", \"native\", \"new\", \"null\",\n+                        \"package\", \"private\", \"protected\", \"public\", \"return\",\n+                        \"short\", \"static\", \"super\", \"switch\", \"synchronized\",\n+                        \"this\", \"throw\", \"throws\", \"transient\", \"true\",\n+                        \"try\", \"typeof\", \"var\", \"void\", \"volatile\",\n+                        \"while\", \"with\", \"yield\",\n+                        \"Array\", \"Date\", \"eval\", \"function\", \"hasOwnProperty\",\n+                        \"Infinity\", \"isFinite\", \"isNaN\", \"isPrototypeOf\",\n+                        \"Math\", \"NaN\", \"Number\", \"Object\",\n+                        \"prototype\", \"String\", \"toString\", \"undefined\", \"valueOf\")\n+        );\n+\n+        languageSpecificPrimitives = new HashSet<String>(\n+                Arrays.asList(\"String\", \"Boolean\", \"Number\", \"Array\", \"Object\", \"Date\", \"File\", \"Blob\")\n+        );\n+        defaultIncludes = new HashSet<String>(languageSpecificPrimitives);\n+\n+        instantiationTypes.put(\"array\", \"Array\");\n+        instantiationTypes.put(\"list\", \"Array\");\n+        instantiationTypes.put(\"map\", \"Object\");\n+        typeMapping.clear();\n+        typeMapping.put(\"array\", \"Array\");\n+        typeMapping.put(\"map\", \"Object\");\n+        typeMapping.put(\"List\", \"Array\");\n+        typeMapping.put(\"boolean\", \"Boolean\");\n+        typeMapping.put(\"string\", \"String\");\n+        typeMapping.put(\"int\", \"Number\");\n+        typeMapping.put(\"float\", \"Number\");\n+        typeMapping.put(\"number\", \"Number\");\n+        typeMapping.put(\"BigDecimal\", \"Number\");\n+        typeMapping.put(\"DateTime\", \"Date\");\n+        typeMapping.put(\"date\", \"Date\");\n+        typeMapping.put(\"long\", \"Number\");\n+        typeMapping.put(\"short\", \"Number\");\n+        typeMapping.put(\"char\", \"String\");\n+        typeMapping.put(\"double\", \"Number\");\n+        typeMapping.put(\"object\", \"Object\");\n+        typeMapping.put(\"integer\", \"Number\");\n+        typeMapping.put(\"ByteArray\", \"Blob\");\n+        typeMapping.put(\"binary\", \"File\");\n+        typeMapping.put(\"file\", \"File\");\n+        typeMapping.put(\"UUID\", \"String\");\n+        typeMapping.put(\"URI\", \"String\");\n+\n+        importMapping.clear();\n+\n+        cliOptions.add(new CliOption(CodegenConstants.SOURCE_FOLDER, CodegenConstants.SOURCE_FOLDER_DESC).defaultValue(\"src\"));\n+        cliOptions.add(new CliOption(CodegenConstants.INVOKER_PACKAGE, CodegenConstants.INVOKER_PACKAGE_DESC));\n+        cliOptions.add(new CliOption(CodegenConstants.API_PACKAGE, CodegenConstants.API_PACKAGE_DESC));\n+        cliOptions.add(new CliOption(CodegenConstants.MODEL_PACKAGE, CodegenConstants.MODEL_PACKAGE_DESC));\n+        cliOptions.add(new CliOption(PROJECT_NAME,\n+                \"name of the project (Default: generated from info.title or \\\"openapi-js-client\\\")\"));\n+        cliOptions.add(new CliOption(MODULE_NAME,\n+                \"module name for AMD, Node or globals (Default: generated from <projectName>)\"));\n+        cliOptions.add(new CliOption(PROJECT_DESCRIPTION,\n+                \"description of the project (Default: using info.description or \\\"Client library of <projectName>\\\")\"));\n+        cliOptions.add(new CliOption(PROJECT_VERSION,\n+                \"version of the project (Default: using info.version or \\\"1.0.0\\\")\"));\n+        cliOptions.add(new CliOption(CodegenConstants.LICENSE_NAME,\n+                \"name of the license the project uses (Default: using info.license.name)\"));\n+        cliOptions.add(new CliOption(EMIT_JS_DOC,\n+                \"generate JSDoc comments\")\n+                .defaultValue(Boolean.TRUE.toString()));\n+        cliOptions.add(new CliOption(USE_INHERITANCE,\n+                \"use JavaScript prototype chains & delegation for inheritance\")\n+                .defaultValue(Boolean.TRUE.toString()));\n+        cliOptions.add(new CliOption(CodegenConstants.HIDE_GENERATION_TIMESTAMP, CodegenConstants.HIDE_GENERATION_TIMESTAMP_DESC)\n+                .defaultValue(Boolean.TRUE.toString()));\n+        cliOptions.add(new CliOption(CodegenConstants.MODEL_PROPERTY_NAMING, CodegenConstants.MODEL_PROPERTY_NAMING_DESC).defaultValue(\"camelCase\"));\n+        cliOptions.add(new CliOption(NPM_REPOSITORY, \"Use this property to set an url your private npmRepo in the package.json\"));\n+    }\n+\n+    @Override\n+    public CodegenType getTag() {\n+        return CodegenType.CLIENT;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return \"javascript-apollo\";\n+    }\n+\n+    @Override\n+    public String getHelp() {\n+        return \"Generates a JavaScript client library using Apollo RESTDatasource.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6197dc311083dfbfbf00929174d1a99a00767cf0"}, "originalPosition": 202}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2617, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}