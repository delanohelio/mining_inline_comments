{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MzEwNTUx", "number": 5090, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNDo1Mjo1M1rODaYq5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwMzo1NzozMVrODawu2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4OTkzNzY3OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/kotlin-spring/dataClassOptVar.mustache", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQwNDo1Mjo1M1rOFhT5Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDowMzoyMVrOFjCvXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ3MzI3NA==", "bodyText": "I think an empty message here will cause some code smells in static analysis (like Sonar). Should we provide a default message?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5090#discussion_r370473274", "createdAt": "2020-01-24T04:52:53Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/resources/kotlin-spring/dataClassOptVar.mustache", "diffHunk": "@@ -1,4 +1,5 @@\n {{#useBeanValidation}}{{#required}}\n         {{^isReadOnly}}@get:NotNull{{/isReadOnly}} {{/required}}{{>beanValidationModel}}{{/useBeanValidation}}{{#swaggerAnnotations}}\n-        @ApiModelProperty({{#example}}example = \"{{{example}}}\", {{/example}}{{#required}}required = {{required}}, {{/required}}{{#isReadOnly}}readOnly = {{{isReadOnly}}}, {{/isReadOnly}}value = \"{{{description}}}\"){{/swaggerAnnotations}}\n+        @ApiModelProperty({{#example}}example = \"{{{example}}}\", {{/example}}{{#required}}required = {{required}}, {{/required}}{{#isReadOnly}}readOnly = {{{isReadOnly}}}, {{/isReadOnly}}value = \"{{{description}}}\"){{/swaggerAnnotations}}{{#deprecated}}\n+        @Deprecated(message=\"\"){{/deprecated}}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5adbdcdf89b9d50069741b97c0347f7c8ce8e3a2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ4NTEwNA==", "bodyText": "Kotlin:message argument is required.\npublic annotation class Deprecated(\n    val message: String,\n    val replaceWith: ReplaceWith = ReplaceWith(\u201c\u201d),\n    val level: DeprecationLevel = DeprecationLevel.WARNING\n)\nWe have to set empty message because openapi can't declare \"deprecated message\".\nOr set default message(for example \"This property is required\") \ud83e\udd14", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5090#discussion_r370485104", "createdAt": "2020-01-24T06:05:55Z", "author": {"login": "yutaka0m"}, "path": "modules/openapi-generator/src/main/resources/kotlin-spring/dataClassOptVar.mustache", "diffHunk": "@@ -1,4 +1,5 @@\n {{#useBeanValidation}}{{#required}}\n         {{^isReadOnly}}@get:NotNull{{/isReadOnly}} {{/required}}{{>beanValidationModel}}{{/useBeanValidation}}{{#swaggerAnnotations}}\n-        @ApiModelProperty({{#example}}example = \"{{{example}}}\", {{/example}}{{#required}}required = {{required}}, {{/required}}{{#isReadOnly}}readOnly = {{{isReadOnly}}}, {{/isReadOnly}}value = \"{{{description}}}\"){{/swaggerAnnotations}}\n+        @ApiModelProperty({{#example}}example = \"{{{example}}}\", {{/example}}{{#required}}required = {{required}}, {{/required}}{{#isReadOnly}}readOnly = {{{isReadOnly}}}, {{/isReadOnly}}value = \"{{{description}}}\"){{/swaggerAnnotations}}{{#deprecated}}\n+        @Deprecated(message=\"\"){{/deprecated}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ3MzI3NA=="}, "originalCommit": {"oid": "5adbdcdf89b9d50069741b97c0347f7c8ce8e3a2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI0NTc0MA==", "bodyText": "We can later use vendor extension (not this PR) to achieve this, e.g. x-deprecated-message if there're demands from users to specify the deprecated message.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5090#discussion_r372245740", "createdAt": "2020-01-29T08:30:27Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/resources/kotlin-spring/dataClassOptVar.mustache", "diffHunk": "@@ -1,4 +1,5 @@\n {{#useBeanValidation}}{{#required}}\n         {{^isReadOnly}}@get:NotNull{{/isReadOnly}} {{/required}}{{>beanValidationModel}}{{/useBeanValidation}}{{#swaggerAnnotations}}\n-        @ApiModelProperty({{#example}}example = \"{{{example}}}\", {{/example}}{{#required}}required = {{required}}, {{/required}}{{#isReadOnly}}readOnly = {{{isReadOnly}}}, {{/isReadOnly}}value = \"{{{description}}}\"){{/swaggerAnnotations}}\n+        @ApiModelProperty({{#example}}example = \"{{{example}}}\", {{/example}}{{#required}}required = {{required}}, {{/required}}{{#isReadOnly}}readOnly = {{{isReadOnly}}}, {{/isReadOnly}}value = \"{{{description}}}\"){{/swaggerAnnotations}}{{#deprecated}}\n+        @Deprecated(message=\"\"){{/deprecated}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ3MzI3NA=="}, "originalCommit": {"oid": "5adbdcdf89b9d50069741b97c0347f7c8ce8e3a2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI4OTM3Mw==", "bodyText": "@wing328 Thank you!\nI'll try it if I have time", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5090#discussion_r372289373", "createdAt": "2020-01-29T10:03:21Z", "author": {"login": "yutaka0m"}, "path": "modules/openapi-generator/src/main/resources/kotlin-spring/dataClassOptVar.mustache", "diffHunk": "@@ -1,4 +1,5 @@\n {{#useBeanValidation}}{{#required}}\n         {{^isReadOnly}}@get:NotNull{{/isReadOnly}} {{/required}}{{>beanValidationModel}}{{/useBeanValidation}}{{#swaggerAnnotations}}\n-        @ApiModelProperty({{#example}}example = \"{{{example}}}\", {{/example}}{{#required}}required = {{required}}, {{/required}}{{#isReadOnly}}readOnly = {{{isReadOnly}}}, {{/isReadOnly}}value = \"{{{description}}}\"){{/swaggerAnnotations}}\n+        @ApiModelProperty({{#example}}example = \"{{{example}}}\", {{/example}}{{#required}}required = {{required}}, {{/required}}{{#isReadOnly}}readOnly = {{{isReadOnly}}}, {{/isReadOnly}}value = \"{{{description}}}\"){{/swaggerAnnotations}}{{#deprecated}}\n+        @Deprecated(message=\"\"){{/deprecated}}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDQ3MzI3NA=="}, "originalCommit": {"oid": "5adbdcdf89b9d50069741b97c0347f7c8ce8e3a2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5Mzg3OTk1OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwMzo1NzozMVrOFh3nqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwMzo1NzozMVrOFh3nqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA1ODYwMQ==", "bodyText": "nits: You should be able to trim the space which after if (.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5090#discussion_r371058601", "createdAt": "2020-01-27T03:57:31Z", "author": {"login": "ackintosh"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "diffHunk": "@@ -2246,6 +2246,10 @@ public CodegenProperty fromProperty(String name, Schema p) {\n         property.defaultValue = toDefaultValue(p);\n         property.defaultValueWithParam = toDefaultValueWithParam(name, p);\n         property.jsonSchema = Json.pretty(p);\n+\n+        if ( p.getDeprecated() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5adbdcdf89b9d50069741b97c0347f7c8ce8e3a2"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3853, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}