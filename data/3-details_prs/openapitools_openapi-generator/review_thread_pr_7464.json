{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMDA1Mjk0", "number": 7464, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoyNzoxMlrOEndJSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoyNzoxMlrOEndJSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODA3NDM1OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultGenerator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoyNzoxMlrOHYDk2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMzozNjoyMlrOHY-CfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk4NjQ1Ng==", "bodyText": "@wing328 shall we consider 443 for HTTPS too?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7464#discussion_r494986456", "createdAt": "2020-09-25T13:27:12Z", "author": {"login": "jirikuncar"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultGenerator.java", "diffHunk": "@@ -775,6 +775,9 @@ private void generateSupportingFiles(List<File> files, Map<String, Object> bundl\n         bundle.put(\"basePathWithoutHost\", basePathWithoutHost);\n         bundle.put(\"scheme\", URLPathUtils.getScheme(url, config));\n         bundle.put(\"host\", url.getHost());\n+        if (url.getPort() != 80 ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a26ee1565877cc865fd23f44173fa9f45c696e8b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAxMDU3Mg==", "bodyText": "Sounds good. Do you have time to contribute a PR with your suggestion?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7464#discussion_r495010572", "createdAt": "2020-09-25T14:04:31Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultGenerator.java", "diffHunk": "@@ -775,6 +775,9 @@ private void generateSupportingFiles(List<File> files, Map<String, Object> bundl\n         bundle.put(\"basePathWithoutHost\", basePathWithoutHost);\n         bundle.put(\"scheme\", URLPathUtils.getScheme(url, config));\n         bundle.put(\"host\", url.getHost());\n+        if (url.getPort() != 80 ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk4NjQ1Ng=="}, "originalCommit": {"oid": "a26ee1565877cc865fd23f44173fa9f45c696e8b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk0NDMxNg==", "bodyText": "I've filed #7531", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7464#discussion_r495944316", "createdAt": "2020-09-28T13:36:22Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultGenerator.java", "diffHunk": "@@ -775,6 +775,9 @@ private void generateSupportingFiles(List<File> files, Map<String, Object> bundl\n         bundle.put(\"basePathWithoutHost\", basePathWithoutHost);\n         bundle.put(\"scheme\", URLPathUtils.getScheme(url, config));\n         bundle.put(\"host\", url.getHost());\n+        if (url.getPort() != 80 ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk4NjQ1Ng=="}, "originalCommit": {"oid": "a26ee1565877cc865fd23f44173fa9f45c696e8b"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4173, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}