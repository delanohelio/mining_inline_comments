{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2Mjc3MzQw", "number": 5995, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMDo1OTo1MVrODz68qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMDo1OTo1MVrODz68qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzY5NzcxOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/typescript-fetch/apis.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMDo1OTo1MVrOGInd4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwODo1NTo0OVrOGI6mvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY4ODQxNw==", "bodyText": "Without any transfromer (missing second argument for the constructor), how would it process nested objects in this map?\nAll other types are (recursively) processed via <someBaseType>FromJSON()>. This processing includes mapping between raw property names and camelCase / snake_case / whatever is configued in modelPropertyNaming. Also this processing includes serializing / deserializing dates", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5995#discussion_r411688417", "createdAt": "2020-04-20T20:59:51Z", "author": {"login": "amakhrov"}, "path": "modules/openapi-generator/src/main/resources/typescript-fetch/apis.mustache", "diffHunk": "@@ -290,7 +290,12 @@ export class {{classname}} extends runtime.BaseAPI {\n         return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map({{returnBaseType}}FromJSON));\n         {{/isListContainer}}\n         {{^isListContainer}}\n+        {{#isMapContainer}}\n+        return new runtime.JSONApiResponse<any>(response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "085b5bb665a4fda336bf77af0de8b83349833760"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAwMTk4Mg==", "bodyText": "Thank you very much for the review! Indeed I tried to take the easy way out :)\nI found runtime.mapValues which should do exactly what we need here - construct a free-form key-value object while running a transformer over the values.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5995#discussion_r412001982", "createdAt": "2020-04-21T08:55:49Z", "author": {"login": "haraldF"}, "path": "modules/openapi-generator/src/main/resources/typescript-fetch/apis.mustache", "diffHunk": "@@ -290,7 +290,12 @@ export class {{classname}} extends runtime.BaseAPI {\n         return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map({{returnBaseType}}FromJSON));\n         {{/isListContainer}}\n         {{^isListContainer}}\n+        {{#isMapContainer}}\n+        return new runtime.JSONApiResponse<any>(response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY4ODQxNw=="}, "originalCommit": {"oid": "085b5bb665a4fda336bf77af0de8b83349833760"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3572, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}