{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MDUzNzY0", "number": 6704, "title": "[Java][Native] added WithHttpInfo method for native-sync", "bodyText": "PR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project beforehand.\n Run the shell script ./bin/generate-samples.shto update all Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit as it would merge with master. These must match the expectations made by your contribution. You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example ./bin/generate-samples.sh bin/config/java*. For Windows users, please run the script in Git BASH.\n File the PR against the correct branch: master\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\nDescription of the PR\nThis PR added  WithHttpInfo method for native only, it includes the changes below:\n\nupdated JavaClientCodegen\nupdated the template of api\nupdated the template of api-doc\nregenerated Petstore samples for native/asyncNative\n\n@wing328 @cbornet @jeff9finger @bbdouglas @sreeshas @jfiala @lukoyanov @karismann @Zomzog @lwlee2608 @bkabrda @jfeltesse-mdsol @jcarres-mdsol", "createdAt": "2020-06-17T19:34:08Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6704", "merged": true, "mergeCommit": {"oid": "8400d4c6f9770bd19b1c846b4251fbec3ed8b829"}, "closed": true, "closedAt": "2020-06-22T08:15:12Z", "author": {"login": "bgong-mdsol"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsTvPqgH2gAyNDM2MDUzNzY0OmJhYzBkZTcxMjg3NzU1ZWM1YTk2ZDhiYjBiNWFiYWU4NTgzYzI4MzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcshV-OgFqTQzMzQ2OTU0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bac0de71287755ec5a96d8bb0b5abae8583c2836", "author": {"user": {"login": "bgong-mdsol", "name": "bgong-mdsol"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/bac0de71287755ec5a96d8bb0b5abae8583c2836", "committedDate": "2020-06-18T00:58:33Z", "message": "java-native added WithHttpInfo\n\nremove /t"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b618c17491286be8f91f32a7861f8b0975c9f0ba", "author": {"user": {"login": "bgong-mdsol", "name": "bgong-mdsol"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/b618c17491286be8f91f32a7861f8b0975c9f0ba", "committedDate": "2020-06-17T19:13:23Z", "message": "java-native added WithHttpInfo"}, "afterCommit": {"oid": "bac0de71287755ec5a96d8bb0b5abae8583c2836", "author": {"user": {"login": "bgong-mdsol", "name": "bgong-mdsol"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/bac0de71287755ec5a96d8bb0b5abae8583c2836", "committedDate": "2020-06-18T00:58:33Z", "message": "java-native added WithHttpInfo\n\nremove /t"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDY5NTQ1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6704#pullrequestreview-433469545", "createdAt": "2020-06-18T16:49:37Z", "commit": {"oid": "bac0de71287755ec5a96d8bb0b5abae8583c2836"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo0OTozN1rOGl36Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo0OTozN1rOGl36Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2NjQ3NQ==", "bodyText": "Would it be possible to also use ApiResponse in async operations to make it consistent?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6704#discussion_r442366475", "createdAt": "2020-06-18T16:49:37Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/JavaClientCodegen.java", "diffHunk": "@@ -404,6 +404,9 @@ public void processOpts() {\n         } else if (NATIVE.equals(getLibrary())) {\n             setJava8Mode(true);\n             additionalProperties.put(\"java8\", \"true\");\n+            if (!asyncNative) {\n+                supportingFiles.add(new SupportingFile(\"ApiResponse.mustache\", invokerFolder, \"ApiResponse.java\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bac0de71287755ec5a96d8bb0b5abae8583c2836"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2103, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}