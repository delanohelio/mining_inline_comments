{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NzMxMTQ4", "number": 5440, "title": "Support for additionalProperties in the C generator", "bodyText": "I worked on the C-libcurl client. It was crashing when working on models with additionalProperties (see issue #5395). I found 2 problems:\n\nthe generator was creating too many nodes one into the other\nwhen the additionalProperties were using native datatypes (booleans, etc), it was not allocating memory for them - but was trying to \"free\" them\n\nI verified the json I produce now against json produced by the python client when I use integers as additionalProperties. They both produce this JSON now:\n{\n\"orchestrationFlags\":\t{\n\"onlyPreferred\":\t0,\n\"overrideStore\":\t1\n}\n}\nThere is still a problem with booleans, but I will solve it later.\n@zhemant\n@ityuhui\nPR checklist\n\n[ X ] Read the contribution guidelines.\n[ X ] If contributing template-only or documentation-only changes which will change sample output, build the project before.\n[ X ] Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n[ X ] File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n[ X ] Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-02-25T18:24:40Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5440", "merged": true, "mergeCommit": {"oid": "b0b46d57e07696932038122aec569905c5ed5a22"}, "closed": true, "closedAt": "2020-02-28T01:22:51Z", "author": {"login": "michelealbano"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcH13qRgH2gAyMzc5NzMxMTQ4OmM0OTkwNDZjMjY1MzhmNGY2YTU5ZTE3NjEwNjk3NDgyNzAxYTEzMDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH9u8PAFqTM2NDU5NTAxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c499046c26538f4f6a59e17610697482701a1302", "author": {"user": {"login": "michelealbano", "name": "Michele Albano"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/c499046c26538f4f6a59e17610697482701a1302", "committedDate": "2020-02-25T17:49:19Z", "message": "Support for additionalProperties in the C generator."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35d2a2d9c206e6881cee2f5c1c86dc8800affe16", "author": {"user": {"login": "michelealbano", "name": "Michele Albano"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/35d2a2d9c206e6881cee2f5c1c86dc8800affe16", "committedDate": "2020-02-25T18:33:09Z", "message": "Support for additionalProperties in the C generator."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd4d396fe0e0eb4f020106661aac06222e1b2335", "author": {"user": {"login": "michelealbano", "name": "Michele Albano"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/bd4d396fe0e0eb4f020106661aac06222e1b2335", "committedDate": "2020-02-25T18:36:08Z", "message": "Merge branch 'temp-branch' into betterCclient"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NTgxOTg2", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5440#pullrequestreview-364581986", "createdAt": "2020-02-26T02:13:44Z", "commit": {"oid": "bd4d396fe0e0eb4f020106661aac06222e1b2335"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMjoxMzo0NFrOFucJpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMjoxMzo0NFrOFucJpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI0MDAzOA==", "bodyText": "Hi @michelealbano, I have some questions here.\n\n\nIs this function \"keyValuePair_create_allocate\" used now? I cannot see any use case of this function.\n\n\nActually, this function \"keyValuePair_create_allocate\" allocates memory only for native data type (such as bool, int, double), the function name is not suitable.\n\n\nFrom my view, if we (OpenAPI-Generator) provide the allocating function, we should also provide the free function.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5440#discussion_r384240038", "createdAt": "2020-02-26T02:13:44Z", "author": {"login": "ityuhui"}, "path": "modules/openapi-generator/src/main/resources/C-libcurl/apiKey.c.mustache", "diffHunk": "@@ -9,6 +9,12 @@ keyValuePair_t *keyValuePair_create(char *key, void *value) {\n     return keyValuePair;\n }\n \n+keyValuePair_t* keyValuePair_create_allocate(char* key, double value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd4d396fe0e0eb4f020106661aac06222e1b2335"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NTk1MDE5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5440#pullrequestreview-364595019", "createdAt": "2020-02-26T02:59:01Z", "commit": {"oid": "bd4d396fe0e0eb4f020106661aac06222e1b2335"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMjo1OTowMVrOFuc0FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMjo1OTowMVrOFuc0FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDI1MDkwMQ==", "bodyText": "Hi @michelealbano,\nWhy \"{{{name}}}_local_map\" is changed to \"cJSON *localMapObject\" ?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5440#discussion_r384250901", "createdAt": "2020-02-26T02:59:01Z", "author": {"login": "ityuhui"}, "path": "modules/openapi-generator/src/main/resources/C-libcurl/model-body.mustache", "diffHunk": "@@ -643,22 +642,24 @@ fail:\n     keyValuePair_t *localMapKeyPair;\n     cJSON_ArrayForEach({{{name}}}_local_map, {{{name}}})\n     {\n+\t\tcJSON *localMapObject = {{{name}}}_local_map;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd4d396fe0e0eb4f020106661aac06222e1b2335"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2693, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}