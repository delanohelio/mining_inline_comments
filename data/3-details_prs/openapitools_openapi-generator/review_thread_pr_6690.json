{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTEyNjAx", "number": 6690, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTowMTo0OVrOEIaBPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQwMTo0NDozNVrOFM30XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MjUwMzY0OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNTowMTo0OVrOGoWTgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQwMTozNzoyOFrOIQzudA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk2MTY2Nw==", "bodyText": "cc @OpenAPITools/generator-core-team for review", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6690#discussion_r444961667", "createdAt": "2020-06-24T15:01:49Z", "author": {"login": "etherealjoy"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "diffHunk": "@@ -362,38 +362,33 @@ private void flattenComposedChildren(OpenAPI openAPI, String key, List<Schema> c\n         ListIterator<Schema> listIterator = children.listIterator();\n         while (listIterator.hasNext()) {\n             Schema component = listIterator.next();\n-            if (component instanceof ObjectSchema || // for inline schema with type:object\n-                    (component != null && component.getProperties() != null &&\n-                            !component.getProperties().isEmpty())) { // for inline schema without type:object\n-                Schema op = component;\n-                if (op.get$ref() == null && op.getProperties() != null && op.getProperties().size() > 0) {\n-                    // If a `title` attribute is defined in the inline schema, codegen uses it to name the\n-                    // inline schema. Otherwise, we'll use the default naming such as InlineObject1, etc.\n-                    // We know that this is not the best way to name the model.\n-                    //\n-                    // Such naming strategy may result in issues. If the value of the 'title' attribute\n-                    // happens to match a schema defined elsewhere in the specification, 'innerModelName'\n-                    // will be the same as that other schema.\n-                    //\n-                    // To have complete control of the model naming, one can define the model separately\n-                    // instead of inline.\n-                    String innerModelName = resolveModelName(op.getTitle(), key);\n-                    Schema innerModel = modelFromProperty(openAPI, op, innerModelName);\n-                    String existing = matchGenerated(innerModel);\n-                    if (existing == null) {\n-                        openAPI.getComponents().addSchemas(innerModelName, innerModel);\n-                        addGenerated(innerModelName, innerModel);\n-                        Schema schema = new Schema().$ref(innerModelName);\n-                        schema.setRequired(op.getRequired());\n-                        listIterator.set(schema);\n-                    } else {\n-                        Schema schema = new Schema().$ref(existing);\n-                        schema.setRequired(op.getRequired());\n-                        listIterator.set(schema);\n-                    }\n+            if ((component.get$ref() == null) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a15ecbf43bfc7b7106da601b81be3dc469f6d76"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDQ5NTYwNA==", "bodyText": "This needs the component != null check that's part of the removed check condition because, unfortunately, people using the generator code programmatically could provide a component array with null as an array item. As an alternative, I guess we could convert from direct iterator usage to a stream and filter by Object::nonNull.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6690#discussion_r554495604", "createdAt": "2021-01-10T01:37:28Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java", "diffHunk": "@@ -362,38 +362,33 @@ private void flattenComposedChildren(OpenAPI openAPI, String key, List<Schema> c\n         ListIterator<Schema> listIterator = children.listIterator();\n         while (listIterator.hasNext()) {\n             Schema component = listIterator.next();\n-            if (component instanceof ObjectSchema || // for inline schema with type:object\n-                    (component != null && component.getProperties() != null &&\n-                            !component.getProperties().isEmpty())) { // for inline schema without type:object\n-                Schema op = component;\n-                if (op.get$ref() == null && op.getProperties() != null && op.getProperties().size() > 0) {\n-                    // If a `title` attribute is defined in the inline schema, codegen uses it to name the\n-                    // inline schema. Otherwise, we'll use the default naming such as InlineObject1, etc.\n-                    // We know that this is not the best way to name the model.\n-                    //\n-                    // Such naming strategy may result in issues. If the value of the 'title' attribute\n-                    // happens to match a schema defined elsewhere in the specification, 'innerModelName'\n-                    // will be the same as that other schema.\n-                    //\n-                    // To have complete control of the model naming, one can define the model separately\n-                    // instead of inline.\n-                    String innerModelName = resolveModelName(op.getTitle(), key);\n-                    Schema innerModel = modelFromProperty(openAPI, op, innerModelName);\n-                    String existing = matchGenerated(innerModel);\n-                    if (existing == null) {\n-                        openAPI.getComponents().addSchemas(innerModelName, innerModel);\n-                        addGenerated(innerModelName, innerModel);\n-                        Schema schema = new Schema().$ref(innerModelName);\n-                        schema.setRequired(op.getRequired());\n-                        listIterator.set(schema);\n-                    } else {\n-                        Schema schema = new Schema().$ref(existing);\n-                        schema.setRequired(op.getRequired());\n-                        listIterator.set(schema);\n-                    }\n+            if ((component.get$ref() == null) &&", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDk2MTY2Nw=="}, "originalCommit": {"oid": "0a15ecbf43bfc7b7106da601b81be3dc469f6d76"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5MDQxNjM2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQwMTo0MzoxMVrOIQzv8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yM1QxNDowNjo1MFrOIZEW7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDQ5NTk4Ng==", "bodyText": "As a user with debug enabled, I'd have three concerns:\n\nThe use of debug calls in this method will cause a ton of noise as it'll be invoked with somewhat large object dumps every time for every model, potentially more than once per model\nIt's not clear from the log message what the difference is between fromModel (schema):, fromModel (base end):, and fromModel (end):.\nThe types being dumped are all different (Schema input, ADT before mutation, and ADT after mutation), which could be confusing especially if they have similar properties.\n\nAs a small point, the logging framework will interpolate content based on whether or not this log level is enabled using the {} formatter. Without this, a new string and model dump (which may or may not just be member reference string in this case, depends on the toString of the types) will be concatenated every time this line is hit regardless of whether or not debug is enabled.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOGGER.debug(\"fromModel (schema): \" + model);\n          \n          \n            \n                    LOGGER.debug(\"fromModel (schema): {}\", model);", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6690#discussion_r554495986", "createdAt": "2021-01-10T01:43:11Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "diffHunk": "@@ -1191,8 +1189,13 @@ public String toInstantiationType(Schema p) {\n \n     @Override\n     public CodegenModel fromModel(String name, Schema model) {\n+        LOGGER.debug(\"fromModel (schema): \" + model);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a15ecbf43bfc7b7106da601b81be3dc469f6d76"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MzE1NjcxOA==", "bodyText": "I wanted to leave these in as they were very helpful debugging issues, so to address your feedback:\nFor 1, I've downgraded these to trace\nFor 2 and 3. I've clarified the logs to make it clearer that the first is the schema, and the last is the model. I've eliminated the middle line.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6690#discussion_r563156718", "createdAt": "2021-01-23T14:06:50Z", "author": {"login": "richardwhiuk"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "diffHunk": "@@ -1191,8 +1189,13 @@ public String toInstantiationType(Schema p) {\n \n     @Override\n     public CodegenModel fromModel(String name, Schema model) {\n+        LOGGER.debug(\"fromModel (schema): \" + model);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDQ5NTk4Ng=="}, "originalCommit": {"oid": "0a15ecbf43bfc7b7106da601b81be3dc469f6d76"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5MDQxNjU3OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQwMTo0MzoyNVrOIQzwCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQwMTo0MzoyNVrOIQzwCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDQ5NjAwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOGGER.debug(\"fromModel (base end): \" + mdl);\n          \n          \n            \n                    LOGGER.debug(\"fromModel (base end): {}\", mdl);", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6690#discussion_r554496008", "createdAt": "2021-01-10T01:43:25Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "diffHunk": "@@ -1191,8 +1189,13 @@ public String toInstantiationType(Schema p) {\n \n     @Override\n     public CodegenModel fromModel(String name, Schema model) {\n+        LOGGER.debug(\"fromModel (schema): \" + model);\n+\n         Map<String, Schema> allDefinitions = ModelUtils.getSchemas(this.openAPI);\n         CodegenModel mdl = super.fromModel(name, model);\n+\n+        LOGGER.debug(\"fromModel (base end): \" + mdl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a15ecbf43bfc7b7106da601b81be3dc469f6d76"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5MDQxNjgwOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQwMTo0MzozN1rOIQzwIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQwMTo0MzozN1rOIQzwIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDQ5NjAzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOGGER.debug(\"fromModel (end): \" + mdl);\n          \n          \n            \n                    LOGGER.debug(\"fromModel (end): {}\", mdl);", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6690#discussion_r554496033", "createdAt": "2021-01-10T01:43:37Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "diffHunk": "@@ -1245,6 +1250,8 @@ public CodegenModel fromModel(String name, Schema model) {\n             mdl.additionalPropertiesType = getTypeDeclaration(additionalProperties);\n         }\n \n+        LOGGER.debug(\"fromModel (end): \" + mdl);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a15ecbf43bfc7b7106da601b81be3dc469f6d76"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5MDQxNzU2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQwMTo0NDozNVrOIQzwcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQwMTo0NDozNVrOIQzwcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDQ5NjExNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.debug(\"postProcessModels: \" + cm);\n          \n          \n            \n                        LOGGER.debug(\"postProcessModels: {}\", cm);", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6690#discussion_r554496115", "createdAt": "2021-01-10T01:44:35Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "diffHunk": "@@ -1529,6 +1558,8 @@ private String matchingIntType(boolean unsigned, Long inclusiveMin, Long inclusi\n             Map<String, Object> mo = (Map<String, Object>) _mo;\n             CodegenModel cm = (CodegenModel) mo.get(\"model\");\n \n+            LOGGER.debug(\"postProcessModels: \" + cm);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a15ecbf43bfc7b7106da601b81be3dc469f6d76"}, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3326, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}