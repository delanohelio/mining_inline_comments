{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3ODEyMzA5", "number": 5807, "title": "[mysql] Add OAuth2 framework tables", "bodyText": "Database schema copied from oauth2-server-php-mysql repo.\nI can't say that I'm fully satisfied with mentioned schema. My complaints are:\n\noauth_users.password column limited to 80 characters which can be not enough for future password encryption algorithms. In PHP docs password_hash recommended length is 255.\nSchema doesn't set column collations. It's important for case-sensitive tokens(base64 e.g.). More info in submitted issue\nIt's not obvious that oauth_users.username is user_id mentioned in other tables. Maybe column comment can make it more clear.\n\nTables structure described in related issue.\nCloses #3550\n@jimschubert is welcome to review or throw an opinion.\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-04-02T21:19:04Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5807", "merged": true, "mergeCommit": {"oid": "da149e1204e7d2d3bcfcda8ac31d223e69a405a0"}, "closed": true, "closedAt": "2020-04-21T06:25:57Z", "author": {"login": "ybelenko"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWrxUOAFqTM5MTc5ODUyMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZtqDZgFqTM5NzAyMDMxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzk4NTIw", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5807#pullrequestreview-391798520", "createdAt": "2020-04-11T20:32:11Z", "commit": {"oid": "3ee5ad36cab2c7d79985bca144f3f795d21f2c77"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMDozMjoxMlrOGEP5Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQyMDozMjoxMlrOGEP5Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzEwNzg0Mw==", "bodyText": "a password shouldn't be stored in the database. Really, we should have a hashed password or an encrypted blob", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5807#discussion_r407107843", "createdAt": "2020-04-11T20:32:12Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/resources/mysql-schema/mysql_schema.mustache", "diffHunk": "@@ -42,4 +42,108 @@ CREATE TABLE IF NOT EXISTS {{#defaultDatabaseName}}`{{{defaultDatabaseName}}}`.{\n {{/x-mysqlSchema}}\n {{/vendorExtensions}}\n \n-{{/isArrayModel}}{{/hasVars}}{{/model}}{{/models}}\n\\ No newline at end of file\n+{{/isArrayModel}}{{/hasVars}}{{/model}}{{/models}}\n+{{#hasOAuthMethods}}\n+--\n+-- Table structure for table `oauth_clients`\n+--\n+CREATE TABLE IF NOT EXISTS `oauth_clients` (\n+  `client_id`            VARCHAR(80)    NOT NULL,\n+  `client_secret`        VARCHAR(80)    DEFAULT NULL,\n+  `redirect_uri`         VARCHAR(2000)  DEFAULT NULL,\n+  `grant_types`          VARCHAR(80)    DEFAULT NULL,\n+  `scope`                VARCHAR(4000)  DEFAULT NULL,\n+  `user_id`              VARCHAR(80)    DEFAULT NULL,\n+  PRIMARY KEY (`client_id`)\n+) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\n+\n+--\n+-- Table structure for table `oauth_access_tokens`\n+--\n+CREATE TABLE IF NOT EXISTS `oauth_access_tokens` (\n+  `access_token`         VARCHAR(40)    NOT NULL,\n+  `client_id`            VARCHAR(80)    DEFAULT NULL,\n+  `user_id`              VARCHAR(80)    DEFAULT NULL,\n+  `expires`              TIMESTAMP      NOT NULL,\n+  `scope`                VARCHAR(4000)  DEFAULT NULL,\n+  PRIMARY KEY (`access_token`)\n+) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\n+\n+--\n+-- Table structure for table `oauth_authorization_codes`\n+--\n+CREATE TABLE IF NOT EXISTS `oauth_authorization_codes` (\n+  `authorization_code`  VARCHAR(40)    NOT NULL,\n+  `client_id`           VARCHAR(80)    DEFAULT NULL,\n+  `user_id`             VARCHAR(80)    DEFAULT NULL,\n+  `redirect_uri`        VARCHAR(2000)  NOT NULL,\n+  `expires`             TIMESTAMP      NOT NULL,\n+  `scope`               VARCHAR(4000)  DEFAULT NULL,\n+  `id_token`            VARCHAR(1000)  DEFAULT NULL,\n+  PRIMARY KEY (`authorization_code`)\n+) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\n+\n+--\n+-- Table structure for table `oauth_refresh_tokens`\n+--\n+CREATE TABLE IF NOT EXISTS `oauth_refresh_tokens` (\n+  `refresh_token`       VARCHAR(40)    NOT NULL,\n+  `client_id`           VARCHAR(80)    DEFAULT NULL,\n+  `user_id`             VARCHAR(80)    DEFAULT NULL,\n+  `expires`             TIMESTAMP      on update CURRENT_TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,\n+  `scope`               VARCHAR(4000)  DEFAULT NULL,\n+  PRIMARY KEY (`refresh_token`)\n+) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;\n+\n+--\n+-- Table structure for table `oauth_users`\n+--\n+CREATE TABLE IF NOT EXISTS `oauth_users` (\n+  `username`            VARCHAR(80)    DEFAULT NULL,\n+  `password`            VARCHAR(80)    DEFAULT NULL,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ee5ad36cab2c7d79985bca144f3f795d21f2c77"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78be87810acf5a93357834da03505b2c13dbd173", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/78be87810acf5a93357834da03505b2c13dbd173", "committedDate": "2020-04-20T13:38:30Z", "message": "Add OAuth table schemas"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77971b73923d5f864283ad9b9efd1dc5e270105e", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/77971b73923d5f864283ad9b9efd1dc5e270105e", "committedDate": "2020-04-20T13:38:30Z", "message": "Refresh samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "399641ee21a35d2e20a65750560c4941fd6f2819", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/399641ee21a35d2e20a65750560c4941fd6f2819", "committedDate": "2020-04-20T13:43:06Z", "message": "Expand password column length"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6c2ac1469e002e0817287b6dd25c887237b356e", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a6c2ac1469e002e0817287b6dd25c887237b356e", "committedDate": "2020-04-20T13:46:25Z", "message": "Add copyright notice of OAuth2 schema author"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38c9be175aa002808333937a735cbcc80e327f7e", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/38c9be175aa002808333937a735cbcc80e327f7e", "committedDate": "2020-04-20T13:50:58Z", "message": "Refresh samples"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ee5ad36cab2c7d79985bca144f3f795d21f2c77", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3ee5ad36cab2c7d79985bca144f3f795d21f2c77", "committedDate": "2020-04-02T21:05:35Z", "message": "Add missed version pointers"}, "afterCommit": {"oid": "38c9be175aa002808333937a735cbcc80e327f7e", "author": {"user": {"login": "ybelenko", "name": "Yuriy Belenko"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/38c9be175aa002808333937a735cbcc80e327f7e", "committedDate": "2020-04-20T13:50:58Z", "message": "Refresh samples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MDIwMzEw", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5807#pullrequestreview-397020310", "createdAt": "2020-04-21T06:25:51Z", "commit": {"oid": "38c9be175aa002808333937a735cbcc80e327f7e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2538, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}