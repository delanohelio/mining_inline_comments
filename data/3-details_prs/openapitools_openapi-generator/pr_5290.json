{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNzY1Njgy", "number": 5290, "title": "[codegen][validation] Add support for 'null' type", "bodyText": "Add support for the 'null' type, and retain existing behavior for OAS 3.0.x documents that don't use the 'null' type.\nIn OAS 3.1, the 'null' type is supported, and some existing 3.0.x documents use the 'null' type, even though it's not actually supported by the OAS 3.0 spec.\nAs an example, a schema may be defined as:\ntype: 'null'\nThis is useful in the following scenario when a property may be null or some referenced complex type:\nOrder:\n  type: object\n  properties:\n    billTo:\n      oneOf:\n      - type: 'null'\n      - $ref: \"#/definitions/Address\"\nIn 3.0.x, the above snippet could be written differently by using \"nullable: true\", but the nullable attribute in being deprecated in OAS 3.1. See #5180 for issues related to the 'nullable' attribute.\nWhen a OAS document does not explicitly specify a 'null' value, the generated code should not accept a null value. In practice, some language generators such as go-experimental are lenient and allow null values. Other generators such as the python-experimental module perform a strict validation of the payload (e.g. server response). If the response is null but the OAS schema does not allow null values, the client raises an exception such as the one below:\nException when calling API: Invalid type for variable 'parent'.\nRequired value type is MoOptionalBaseMo and passed type was NoneType at\n['received_data']['results'][0]['parent']\n\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-02-11T16:46:55Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5290", "merged": true, "mergeCommit": {"oid": "b627fb1137547862778adedce1a8bb38158165b8"}, "closed": true, "closedAt": "2020-02-12T23:41:19Z", "author": {"login": "sebastien-rosset"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAGBvkgH2gAyMzczNzY1NjgyOmViMzExNDQ4ODIyMzQyMGExYzFjMjMyNzExNDI0ODVlNmRlZTNlYzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDoq4rAH2gAyMzczNzY1NjgyOjAyM2NkNDdkOWFkN2UwYjQ2MGMzNGJlNDZlMmE1OTkwMjY0YTgwYzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eb3114488223420a1c1c23271142485e6dee3ec0", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/eb3114488223420a1c1c23271142485e6dee3ec0", "committedDate": "2020-02-01T16:07:25Z", "message": "initial commit for null type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56da6220fd72b6717a776ab8ad7f7b7712d4e798", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/56da6220fd72b6717a776ab8ad7f7b7712d4e798", "committedDate": "2020-02-01T22:12:04Z", "message": "handle scenario when one element in composed schema is 'null' type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00718d4606d808a47f96aa649a3a0bd919ba68b9", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/00718d4606d808a47f96aa649a3a0bd919ba68b9", "committedDate": "2020-02-01T22:36:14Z", "message": "support 'null' type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ff92365fba385337193f07816632ce66fddfdc1", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8ff92365fba385337193f07816632ce66fddfdc1", "committedDate": "2020-02-02T17:19:05Z", "message": "fix null pointer exception while evaluating recommendations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cbcba0af0874fb84cdb95f5dd5b75b74db53536", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/7cbcba0af0874fb84cdb95f5dd5b75b74db53536", "committedDate": "2020-02-02T17:27:45Z", "message": "Merge branch 'parameter-npe' into null-type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30111a53bb74a0e3953730482b882280a8d417ca", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/30111a53bb74a0e3953730482b882280a8d417ca", "committedDate": "2020-02-02T18:14:35Z", "message": "add validation for null type and type array"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68bbe2d7ebcea8143de683ce75ca8c8a0118e61a", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/68bbe2d7ebcea8143de683ce75ca8c8a0118e61a", "committedDate": "2020-02-02T18:15:07Z", "message": "add validation for null type and type array"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed143755f7358fffdb50767694ed65d705f2ffb0", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ed143755f7358fffdb50767694ed65d705f2ffb0", "committedDate": "2020-02-04T16:15:26Z", "message": "Merge remote-tracking branch 'origin' into null-type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20590358b70f8501abcffe50a799d965ec724aa8", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/20590358b70f8501abcffe50a799d965ec724aa8", "committedDate": "2020-02-05T17:56:28Z", "message": "Add openAPI attribute to validation and recommendation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca257f4d6d71f6b6a3efbe85d1c1a5e93541bc97", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ca257f4d6d71f6b6a3efbe85d1c1a5e93541bc97", "committedDate": "2020-02-05T18:03:20Z", "message": "add OpenAPI attribute to validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb911043b38772a5938a809412a82ac79411a64f", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/bb911043b38772a5938a809412a82ac79411a64f", "committedDate": "2020-02-05T18:33:06Z", "message": "add validation for nullable and null"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57f4a0e89e8b0a1b8b9c9eb28c4095708cc3d3a2", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/57f4a0e89e8b0a1b8b9c9eb28c4095708cc3d3a2", "committedDate": "2020-02-05T18:38:54Z", "message": "add validation for nullable and null"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36b8d629ac042d3c398a8ea44d4dc6f58ec82863", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/36b8d629ac042d3c398a8ea44d4dc6f58ec82863", "committedDate": "2020-02-05T18:52:48Z", "message": "revert log statement modification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71363d58d1a4f4f95b88e8684afa983df41ffc0a", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/71363d58d1a4f4f95b88e8684afa983df41ffc0a", "committedDate": "2020-02-06T06:04:19Z", "message": "support null type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "660e4dc2b58176be60709b781c500e24416c4875", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/660e4dc2b58176be60709b781c500e24416c4875", "committedDate": "2020-02-06T06:06:25Z", "message": "support null type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f140cc70fed19ab5285aed4bbd39a62b10f3e82", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/0f140cc70fed19ab5285aed4bbd39a62b10f3e82", "committedDate": "2020-02-06T06:27:42Z", "message": "improve code comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ba134de6710757805514fa0154cbd3f5953469f", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8ba134de6710757805514fa0154cbd3f5953469f", "committedDate": "2020-02-06T15:27:57Z", "message": "improve code comments. the warning used to notify the users to use  instead of defining the schema inline, but now the InlineModelResolver has been enhanced"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23c8bccdab102cfdb4ba5b76390ffde2b9702b37", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/23c8bccdab102cfdb4ba5b76390ffde2b9702b37", "committedDate": "2020-02-06T15:45:14Z", "message": "add code comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae76186133ff4023bf23980e9c7eea6c6778d47f", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ae76186133ff4023bf23980e9c7eea6c6778d47f", "committedDate": "2020-02-06T15:46:26Z", "message": "code formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e52b6f9fef2a82143188e39283cecc97f2ec679", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3e52b6f9fef2a82143188e39283cecc97f2ec679", "committedDate": "2020-02-06T17:50:50Z", "message": "add code comments, refactor method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e18ddc3f95c1b07e1cf40dd567ca7e3436387b8c", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e18ddc3f95c1b07e1cf40dd567ca7e3436387b8c", "committedDate": "2020-02-06T17:54:51Z", "message": "Merge remote-tracking branch 'origin' into null-type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b61fb94e123b5530f000434e8f1c5c484f78b60", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3b61fb94e123b5530f000434e8f1c5c484f78b60", "committedDate": "2020-02-07T16:01:16Z", "message": "fix call to isNullable to handle  and 'null' type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68ad45de926ada493a4d4d1077bb191cbd99c6c5", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/68ad45de926ada493a4d4d1077bb191cbd99c6c5", "committedDate": "2020-02-09T16:58:26Z", "message": "add OAS document for test purpose"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d6e09d6a021361eeefb567ea4cd3e5a188f0278", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/4d6e09d6a021361eeefb567ea4cd3e5a188f0278", "committedDate": "2020-02-10T05:13:29Z", "message": "add unit tests for null type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "364d3552aa8b7dab6f9f497f902b1a422db643c7", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/364d3552aa8b7dab6f9f497f902b1a422db643c7", "committedDate": "2020-02-11T16:27:27Z", "message": "add 'null' type validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9d212d97897697b977a310a002809fa3ceb01ed", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a9d212d97897697b977a310a002809fa3ceb01ed", "committedDate": "2020-02-11T16:45:06Z", "message": "sync from master"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2ODIwMTYy", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5290#pullrequestreview-356820162", "createdAt": "2020-02-11T16:48:21Z", "commit": {"oid": "a9d212d97897697b977a310a002809fa3ceb01ed"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjo0ODoyMVrOFoQs8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjo0ODoyMVrOFoQs8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc2MTAwOQ==", "bodyText": "Note to reviewer: this was discussed with @wing328:\nIf I remember correctly, that refers to InlineModelResolver (https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/java/org/openapitools/codegen/InlineModelResolver.java) not supporting allOf  so the warning notifies the users to use $ref instead of defining the schema inline in allOf . We should have improved the InlineModelResolver to better handle inline schema allOf so I think it's ok to remove the warning.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5290#discussion_r377761009", "createdAt": "2020-02-11T16:48:21Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "diffHunk": "@@ -1758,8 +1758,7 @@ public String toAllOfName(List<String> names, ComposedSchema composedSchema) {\n         } else if (names.size() == 1) {\n             return names.get(0);\n         } else {\n-            LOGGER.warn(\"allOf with multiple schemas defined. Using only the first one: {}. \" +\n-                \"To fully utilize allOf, please use $ref instead of inline schema definition\", names.get(0));\n+            LOGGER.warn(\"allOf with multiple schemas defined. Using only the first one: {}\", names.get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9d212d97897697b977a310a002809fa3ceb01ed"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e825bbce86fefc962995549c4ccf7941aedccb3b", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e825bbce86fefc962995549c4ccf7941aedccb3b", "committedDate": "2020-02-11T17:47:55Z", "message": "fix javadoc issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTg0MTE2", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5290#pullrequestreview-357184116", "createdAt": "2020-02-12T04:35:27Z", "commit": {"oid": "e825bbce86fefc962995549c4ccf7941aedccb3b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDozNToyN1rOFohiJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDozNToyN1rOFohiJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjc3NQ==", "bodyText": "Just a heads up that I don't think this is intended to always indicate polymorphism in the specification. An allOf ref with discriminator is always supposed to indicate polymporphism, but the opposite isn't clear. The case that you've defined here, and that I'm assuming was intended to match the refedWithoutDiscriminator.size() == 1 condition below is a \"legacy\" implementation from when we'd began implementing allOf support but it wasn't fully supported by the generator.\nDetails:\n\ndiscriminator document starts with \"Adds support for polymorphism.\"\nComposition and Inheritance (Polymorphism) states: \"To support polymorphism, the OpenAPI Specification adds the discriminator field. When used, the discriminator will be the name of the property that decides which schema definition validates the structure of the model.\"\n\nIt doesn't explain this well enough, but from these two it seems like they're defining subtype polymorphism since other types of polymorphism are either irrelevant or don't make much sense in this usage.\nMore discussion (we could turn it into an issue as well):\nThere are additional details of OpenAPI Spec which aren't explained very well with allOf. For example, the discriminator for allOf can be in the $ref schema and not in the schema containing the allOf definition. In this case, the discriminator will use the schema name of the schema with the allOf and $ref. Example:\nPet:\n  \u2026\n  discriminator:\n    propertyName: type\n  properties:\n    name: type\n    type: String\nCat:\n  allOf:\n    - $ref: #/components/schemas/Pet\n\nEven without the discriminator, I don't think the LOGGER.warn message is totally accurate. For example, the json-schema combining doc shows this example:\n{\n  \"definitions\": {\n    \"address\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"street_address\": { \"type\": \"string\" },\n        \"city\":           { \"type\": \"string\" },\n        \"state\":          { \"type\": \"string\" }\n      },\n      \"required\": [\"street_address\", \"city\", \"state\"]\n    }\n  },\n\n  \"allOf\": [\n    { \"$ref\": \"#/definitions/address\" },\n    { \"properties\": {\n        \"type\": { \"enum\": [ \"residential\", \"business\" ] }\n      }\n    }\n  ]\n}\n\nUnfortunately, this doesn't define whether a codegen should model:\nAddress:\n  + StreetAddress: String\n  + City: String\n  + State: String\n\nTypedAddress <Address>:\n    Enum: [ Residential, Business ]\n\nor:\nAddress:\n  + StreetAddress: String\n  + City: String\n  + State: String\n    Enum: [ Residential, Business ]\n\nIn this issue, there's no clarification: OAI/OpenAPI-Specification#1467\nIn fact, if you consider from a REST input modeling perspective, it might make sense that all allOf without discriminator are unique types with properties of the $ref.\nI wonder if it may make sense for us to support a vendor extension as a hint whether the user wants to use composition or inheritance for these one-off allOf without a discriminator. Something like:\n\nx-codegen-prefer-polymorphism: true. When no discriminator is defined, we'll try to create a parent and child relationship if the target language/generator supports it\nx-codegen-prefer-polymorphism: false. When no discriminator is defined, we'll merge all properties into one \"super\" class.\n\nThe latter might be challenging to support the spec requirement that these are validated independently like in the case where two refs have the same property with different validation characteristics. This isn't a case we handle now.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5290#discussion_r378036775", "createdAt": "2020-02-12T04:35:27Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -988,19 +1029,34 @@ public static String getParentName(ComposedSchema composedSchema, Map<String, Sc\n                         return parentName;\n                     } else {\n                         // not a parent since discriminator.propertyName is not set\n+                        hasAmbiguousParents = true;\n                         refedWithoutDiscriminator.add(parentName);\n                     }\n                 } else {\n-                    // not a ref, doing nothing\n+                    // not a ref, doing nothing, except counting the number of times the 'null' type\n+                    // is listed as composed element.\n+                    if (ModelUtils.isNullType(schema)) {\n+                        // If there are two interfaces, and one of them is the 'null' type,\n+                        // then the parent is obvious and there is no need to warn about specifying\n+                        // a determinator.\n+                        nullSchemaChildrenCount++;\n+                    }\n                 }\n             }\n+            if (refedWithoutDiscriminator.size() == 1 && nullSchemaChildrenCount == 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e825bbce86fefc962995549c4ccf7941aedccb3b"}, "originalPosition": 90}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3MTg4MjIx", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5290#pullrequestreview-357188221", "createdAt": "2020-02-12T04:53:08Z", "commit": {"oid": "e825bbce86fefc962995549c4ccf7941aedccb3b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "023cd47d9ad7e0b460c34be46e2a5990264a80c9", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/023cd47d9ad7e0b460c34be46e2a5990264a80c9", "committedDate": "2020-02-12T16:10:54Z", "message": "Add validation rule for the supported values of the 'type' attribute"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2781, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}