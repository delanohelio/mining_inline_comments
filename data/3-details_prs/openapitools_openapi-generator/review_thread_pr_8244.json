{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzMDgwNzA2", "number": 8244, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNjoxNToxN1rOFHlOvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNToyMzo1OVrOFH1J3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNDk0MzMyOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNjoxNToxN1rOIJFcRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTozNzoxMlrOIJcccQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5NzI1Mw==", "bodyText": "do we need == true?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546397253", "createdAt": "2020-12-20T16:15:17Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "diffHunk": "@@ -190,22 +188,22 @@ class {{{classname}}} {\n   static List<{{{classname}}}> listFromJson(List<dynamic> json, {bool emptyIsNull, bool growable,}) =>\n     json == null || json.isEmpty\n       ? true == emptyIsNull ? null : <{{{classname}}}>[]\n-      : json.map((v) => {{{classname}}}.fromJson(v)).toList(growable: true == growable);\n+      : (json as List<Map<String, dynamic>>).map({{{classname}}}.fromJson).toList(growable: true == growable);\n \n   static Map<String, {{{classname}}}> mapFromJson(Map<String, dynamic> json) {\n     final map = <String, {{{classname}}}>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) => map[key] = {{{classname}}}.fromJson(v));\n+    if (json?.isNotEmpty == true) {\n+      json.forEach((key, value) => map[key] = {{{classname}}}.fromJson(value as Map<String, dynamic>));\n     }\n     return map;\n   }\n \n   // maps a json object with a list of {{{classname}}}-objects as value to a dart map\n   static Map<String, List<{{{classname}}}>> mapListFromJson(Map<String, dynamic> json, {bool emptyIsNull, bool growable,}) {\n     final map = <String, List<{{{classname}}}>>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) {\n-        map[key] = {{{classname}}}.listFromJson(v, emptyIsNull: emptyIsNull, growable: growable);\n+    if (json?.isNotEmpty == true) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5NzgzMA==", "bodyText": "yes\nvoid main() {\n  if(null) {\n    print(\"x\");\n  }\n}\n\n// Uncaught Error: Assertion failed: \"boolean expression must not be null\"", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546397830", "createdAt": "2020-12-20T16:19:35Z", "author": {"login": "Grohden"}, "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "diffHunk": "@@ -190,22 +188,22 @@ class {{{classname}}} {\n   static List<{{{classname}}}> listFromJson(List<dynamic> json, {bool emptyIsNull, bool growable,}) =>\n     json == null || json.isEmpty\n       ? true == emptyIsNull ? null : <{{{classname}}}>[]\n-      : json.map((v) => {{{classname}}}.fromJson(v)).toList(growable: true == growable);\n+      : (json as List<Map<String, dynamic>>).map({{{classname}}}.fromJson).toList(growable: true == growable);\n \n   static Map<String, {{{classname}}}> mapFromJson(Map<String, dynamic> json) {\n     final map = <String, {{{classname}}}>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) => map[key] = {{{classname}}}.fromJson(v));\n+    if (json?.isNotEmpty == true) {\n+      json.forEach((key, value) => map[key] = {{{classname}}}.fromJson(value as Map<String, dynamic>));\n     }\n     return map;\n   }\n \n   // maps a json object with a list of {{{classname}}}-objects as value to a dart map\n   static Map<String, List<{{{classname}}}>> mapListFromJson(Map<String, dynamic> json, {bool emptyIsNull, bool growable,}) {\n     final map = <String, List<{{{classname}}}>>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) {\n-        map[key] = {{{classname}}}.listFromJson(v, emptyIsNull: emptyIsNull, growable: growable);\n+    if (json?.isNotEmpty == true) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5NzI1Mw=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3MTQ1MQ==", "bodyText": "I understand this change but in any case we don't care about wether it is empty. foreach doesn't run if it is empty.\nMaybe something like this but thats just my preference, up  to you.\nreturn json?.map((key, dynamic value) => MapEntry(key, {{{classname}}}.listFromJson(value, emptyIsNull: emptyIsNull, growable: growable,),) ?? <String, {{{classname}}}>{};", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546771451", "createdAt": "2020-12-21T15:32:31Z", "author": {"login": "kuhnroyal"}, "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "diffHunk": "@@ -190,22 +188,22 @@ class {{{classname}}} {\n   static List<{{{classname}}}> listFromJson(List<dynamic> json, {bool emptyIsNull, bool growable,}) =>\n     json == null || json.isEmpty\n       ? true == emptyIsNull ? null : <{{{classname}}}>[]\n-      : json.map((v) => {{{classname}}}.fromJson(v)).toList(growable: true == growable);\n+      : (json as List<Map<String, dynamic>>).map({{{classname}}}.fromJson).toList(growable: true == growable);\n \n   static Map<String, {{{classname}}}> mapFromJson(Map<String, dynamic> json) {\n     final map = <String, {{{classname}}}>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) => map[key] = {{{classname}}}.fromJson(v));\n+    if (json?.isNotEmpty == true) {\n+      json.forEach((key, value) => map[key] = {{{classname}}}.fromJson(value as Map<String, dynamic>));\n     }\n     return map;\n   }\n \n   // maps a json object with a list of {{{classname}}}-objects as value to a dart map\n   static Map<String, List<{{{classname}}}>> mapListFromJson(Map<String, dynamic> json, {bool emptyIsNull, bool growable,}) {\n     final map = <String, List<{{{classname}}}>>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) {\n-        map[key] = {{{classname}}}.listFromJson(v, emptyIsNull: emptyIsNull, growable: growable);\n+    if (json?.isNotEmpty == true) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5NzI1Mw=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3NDEyOQ==", "bodyText": "Ideally you could change this in another PR as it is probably related to some analyzer rule.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546774129", "createdAt": "2020-12-21T15:37:12Z", "author": {"login": "kuhnroyal"}, "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "diffHunk": "@@ -190,22 +188,22 @@ class {{{classname}}} {\n   static List<{{{classname}}}> listFromJson(List<dynamic> json, {bool emptyIsNull, bool growable,}) =>\n     json == null || json.isEmpty\n       ? true == emptyIsNull ? null : <{{{classname}}}>[]\n-      : json.map((v) => {{{classname}}}.fromJson(v)).toList(growable: true == growable);\n+      : (json as List<Map<String, dynamic>>).map({{{classname}}}.fromJson).toList(growable: true == growable);\n \n   static Map<String, {{{classname}}}> mapFromJson(Map<String, dynamic> json) {\n     final map = <String, {{{classname}}}>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) => map[key] = {{{classname}}}.fromJson(v));\n+    if (json?.isNotEmpty == true) {\n+      json.forEach((key, value) => map[key] = {{{classname}}}.fromJson(value as Map<String, dynamic>));\n     }\n     return map;\n   }\n \n   // maps a json object with a list of {{{classname}}}-objects as value to a dart map\n   static Map<String, List<{{{classname}}}>> mapListFromJson(Map<String, dynamic> json, {bool emptyIsNull, bool growable,}) {\n     final map = <String, List<{{{classname}}}>>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) {\n-        map[key] = {{{classname}}}.listFromJson(v, emptyIsNull: emptyIsNull, growable: growable);\n+    if (json?.isNotEmpty == true) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5NzI1Mw=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNDk0NTA2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNjoxNjo0NVrOIJFdCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNzoyNDo1NFrOIJF7_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5NzQ1MA==", "bodyText": "can you assess if this has any performance hit? Can casting things inside a loop be slower than casting upfront in loop definition?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546397450", "createdAt": "2020-12-20T16:16:45Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "diffHunk": "@@ -190,22 +188,22 @@ class {{{classname}}} {\n   static List<{{{classname}}}> listFromJson(List<dynamic> json, {bool emptyIsNull, bool growable,}) =>\n     json == null || json.isEmpty\n       ? true == emptyIsNull ? null : <{{{classname}}}>[]\n-      : json.map((v) => {{{classname}}}.fromJson(v)).toList(growable: true == growable);\n+      : (json as List<Map<String, dynamic>>).map({{{classname}}}.fromJson).toList(growable: true == growable);\n \n   static Map<String, {{{classname}}}> mapFromJson(Map<String, dynamic> json) {\n     final map = <String, {{{classname}}}>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) => map[key] = {{{classname}}}.fromJson(v));\n+    if (json?.isNotEmpty == true) {\n+      json.forEach((key, value) => map[key] = {{{classname}}}.fromJson(value as Map<String, dynamic>));\n     }\n     return map;\n   }\n \n   // maps a json object with a list of {{{classname}}}-objects as value to a dart map\n   static Map<String, List<{{{classname}}}>> mapListFromJson(Map<String, dynamic> json, {bool emptyIsNull, bool growable,}) {\n     final map = <String, List<{{{classname}}}>>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) {\n-        map[key] = {{{classname}}}.listFromJson(v, emptyIsNull: emptyIsNull, growable: growable);\n+    if (json?.isNotEmpty == true) {\n+      json.forEach((key, value) {\n+        map[key] = {{{classname}}}.listFromJson(value as List<dynamic>, emptyIsNull: emptyIsNull, growable: growable,);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5OTgxNA==", "bodyText": "can you assess if this has any performance hit?\n\nI lack the knowledge for that...\n\nCan casting things inside a loop slower be slower than casting upfront in loop definition?\n\nU mean to move this to the method signature? declaring Map<String, dynamic> json as Map<String, List<dynamic>> json?\nOn that note.. isn't this a microoptimization? I know that dart runtime will validate all assignment types whether you cast or not something, maybe the compiler make some optimizations when you cast before to not validate it again \ud83e\udd14... but again, I lack the knowledge for that.\noh, and json_serializable also generates theses casts that I've added", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546399814", "createdAt": "2020-12-20T16:36:32Z", "author": {"login": "Grohden"}, "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "diffHunk": "@@ -190,22 +188,22 @@ class {{{classname}}} {\n   static List<{{{classname}}}> listFromJson(List<dynamic> json, {bool emptyIsNull, bool growable,}) =>\n     json == null || json.isEmpty\n       ? true == emptyIsNull ? null : <{{{classname}}}>[]\n-      : json.map((v) => {{{classname}}}.fromJson(v)).toList(growable: true == growable);\n+      : (json as List<Map<String, dynamic>>).map({{{classname}}}.fromJson).toList(growable: true == growable);\n \n   static Map<String, {{{classname}}}> mapFromJson(Map<String, dynamic> json) {\n     final map = <String, {{{classname}}}>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) => map[key] = {{{classname}}}.fromJson(v));\n+    if (json?.isNotEmpty == true) {\n+      json.forEach((key, value) => map[key] = {{{classname}}}.fromJson(value as Map<String, dynamic>));\n     }\n     return map;\n   }\n \n   // maps a json object with a list of {{{classname}}}-objects as value to a dart map\n   static Map<String, List<{{{classname}}}>> mapListFromJson(Map<String, dynamic> json, {bool emptyIsNull, bool growable,}) {\n     final map = <String, List<{{{classname}}}>>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) {\n-        map[key] = {{{classname}}}.listFromJson(v, emptyIsNull: emptyIsNull, growable: growable);\n+    if (json?.isNotEmpty == true) {\n+      json.forEach((key, value) {\n+        map[key] = {{{classname}}}.listFromJson(value as List<dynamic>, emptyIsNull: emptyIsNull, growable: growable,);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5NzQ1MA=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNTM3Mw==", "bodyText": "Casts usually don't have a runtime impact, they are mostly there to make the compiler happy.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546405373", "createdAt": "2020-12-20T17:24:54Z", "author": {"login": "kuhnroyal"}, "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "diffHunk": "@@ -190,22 +188,22 @@ class {{{classname}}} {\n   static List<{{{classname}}}> listFromJson(List<dynamic> json, {bool emptyIsNull, bool growable,}) =>\n     json == null || json.isEmpty\n       ? true == emptyIsNull ? null : <{{{classname}}}>[]\n-      : json.map((v) => {{{classname}}}.fromJson(v)).toList(growable: true == growable);\n+      : (json as List<Map<String, dynamic>>).map({{{classname}}}.fromJson).toList(growable: true == growable);\n \n   static Map<String, {{{classname}}}> mapFromJson(Map<String, dynamic> json) {\n     final map = <String, {{{classname}}}>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) => map[key] = {{{classname}}}.fromJson(v));\n+    if (json?.isNotEmpty == true) {\n+      json.forEach((key, value) => map[key] = {{{classname}}}.fromJson(value as Map<String, dynamic>));\n     }\n     return map;\n   }\n \n   // maps a json object with a list of {{{classname}}}-objects as value to a dart map\n   static Map<String, List<{{{classname}}}>> mapListFromJson(Map<String, dynamic> json, {bool emptyIsNull, bool growable,}) {\n     final map = <String, List<{{{classname}}}>>{};\n-    if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic v) {\n-        map[key] = {{{classname}}}.listFromJson(v, emptyIsNull: emptyIsNull, growable: growable);\n+    if (json?.isNotEmpty == true) {\n+      json.forEach((key, value) {\n+        map[key] = {{{classname}}}.listFromJson(value as List<dynamic>, emptyIsNull: emptyIsNull, growable: growable,);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5NzQ1MA=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNDk0ODU2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/dart2/api.mustache", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNjoxOTo1MlrOIJFesg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNjo1NjowMFrOIJFvTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5Nzg3NA==", "bodyText": "we already know it's a map of things, what does knowing it is <dynamic, dynamic> bring?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546397874", "createdAt": "2020-12-20T16:19:52Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/api.mustache", "diffHunk": "@@ -192,7 +192,7 @@ class {{{classname}}} {\n       {{/isArray}}\n       {{^isArray}}\n         {{#isMap}}\n-      return {{{returnType}}}.from(apiClient.deserialize(_decodeBodyBytes(response), '{{{returnType}}}'));\n+      return {{{returnType}}}.from(apiClient.deserialize(_decodeBodyBytes(response), '{{{returnType}}}') as Map<dynamic, dynamic>);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5ODQzMA==", "bodyText": "With the implicit casts false we get this:\n\nwhich means that we can't implicit cast a type to a more specialized type (dynamic to Map<dynamic, dynamic>)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546398430", "createdAt": "2020-12-20T16:25:07Z", "author": {"login": "Grohden"}, "path": "modules/openapi-generator/src/main/resources/dart2/api.mustache", "diffHunk": "@@ -192,7 +192,7 @@ class {{{classname}}} {\n       {{/isArray}}\n       {{^isArray}}\n         {{#isMap}}\n-      return {{{returnType}}}.from(apiClient.deserialize(_decodeBodyBytes(response), '{{{returnType}}}'));\n+      return {{{returnType}}}.from(apiClient.deserialize(_decodeBodyBytes(response), '{{{returnType}}}') as Map<dynamic, dynamic>);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5Nzg3NA=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMDQzNw==", "bodyText": "maybe we could just cast it instead of applying the map.from? \ud83e\udd14 gonna try that in the https://dartpad.dev/", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546400437", "createdAt": "2020-12-20T16:41:51Z", "author": {"login": "Grohden"}, "path": "modules/openapi-generator/src/main/resources/dart2/api.mustache", "diffHunk": "@@ -192,7 +192,7 @@ class {{{classname}}} {\n       {{/isArray}}\n       {{^isArray}}\n         {{#isMap}}\n-      return {{{returnType}}}.from(apiClient.deserialize(_decodeBodyBytes(response), '{{{returnType}}}'));\n+      return {{{returnType}}}.from(apiClient.deserialize(_decodeBodyBytes(response), '{{{returnType}}}') as Map<dynamic, dynamic>);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5Nzg3NA=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMTU0MA==", "bodyText": "just casting it would work:\nvoid main() {\n  print(foo({\"a\": 1}));\n}\n\nMap<String, int> foo(dynamic response) {\n  return response as Map<String, int>;\n}\nmaybe the .from was to create a copy to prevent mutability? I'm not sure.. but if you wish so I can change it to just a cast", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546401540", "createdAt": "2020-12-20T16:50:47Z", "author": {"login": "Grohden"}, "path": "modules/openapi-generator/src/main/resources/dart2/api.mustache", "diffHunk": "@@ -192,7 +192,7 @@ class {{{classname}}} {\n       {{/isArray}}\n       {{^isArray}}\n         {{#isMap}}\n-      return {{{returnType}}}.from(apiClient.deserialize(_decodeBodyBytes(response), '{{{returnType}}}'));\n+      return {{{returnType}}}.from(apiClient.deserialize(_decodeBodyBytes(response), '{{{returnType}}}') as Map<dynamic, dynamic>);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5Nzg3NA=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMjEyNw==", "bodyText": "that's fine I'm cool with it, just was asking", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546402127", "createdAt": "2020-12-20T16:56:00Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/api.mustache", "diffHunk": "@@ -192,7 +192,7 @@ class {{{classname}}} {\n       {{/isArray}}\n       {{^isArray}}\n         {{#isMap}}\n-      return {{{returnType}}}.from(apiClient.deserialize(_decodeBodyBytes(response), '{{{returnType}}}'));\n+      return {{{returnType}}}.from(apiClient.deserialize(_decodeBodyBytes(response), '{{{returnType}}}') as Map<dynamic, dynamic>);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5Nzg3NA=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNDk0OTYxOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNjoyMToxN1rOIJFfPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNjoyNzowOVrOIJFh-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5ODAxMw==", "bodyText": "same here, we know that the method accepts List<dynamic> json as first param, so why the cast here?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546398013", "createdAt": "2020-12-20T16:21:17Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "diffHunk": "@@ -109,15 +109,15 @@ class {{{classname}}} {\n           ? null\n           : (json[r'{{{baseName}}}'] as List).map(\n       {{#items.complexType}}\n-              {{items.complexType}}.listFromJson(json[r'{{{baseName}}}'])\n+              {{items.complexType}}.listFromJson(json[r'{{{baseName}}}'] as List<dynamic>)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5ODcxNQ==", "bodyText": "same as above, with the implicit-casts:false we cant implicit cast dynamic to List<dynamic>, but as I said in the description, if that flag is not desirable I can remove almost all casts \ud83e\udd14 and I'm pretty sure it will still work", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546398715", "createdAt": "2020-12-20T16:27:09Z", "author": {"login": "Grohden"}, "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "diffHunk": "@@ -109,15 +109,15 @@ class {{{classname}}} {\n           ? null\n           : (json[r'{{{baseName}}}'] as List).map(\n       {{#items.complexType}}\n-              {{items.complexType}}.listFromJson(json[r'{{{baseName}}}'])\n+              {{items.complexType}}.listFromJson(json[r'{{{baseName}}}'] as List<dynamic>)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjM5ODAxMw=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNDk4MDM4OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "isResolved": true, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxNjo1Mjo0MFrOIJFt0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNTozNTowNlrOIJcXfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMTc0NQ==", "bodyText": "User of this API should be able to pass Set as well, eg. let dart remove duplicated elements and not relay on order of elements in Iterable.\nquery params and json aren't order dependent, so abstract collection fits better here.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546401745", "createdAt": "2020-12-20T16:52:40Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -70,7 +70,7 @@ class ApiClient {\n   Future<Response> invokeAPI(\n     String path,\n     String method,\n-    Iterable<QueryParam> queryParams,\n+    List<QueryParam> queryParams,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMjYyMg==", "bodyText": "I've changed this one based on the call to _updateParamsForAuth, this function expect the param to be a list, passing a set would be accepted but would result in runtime (or maybe it's compile time?) error when you call that function\n\nvoid main() {\n  foo({\"a\", \"b\"});\n}\n\nvoid foo(Iterable<String> authNames) {\n  bar(authNames);\n}\n\nvoid bar(List<String> authNames) {\n}\n\n// Uncaught Error: TypeError: Instance of '_LinkedHashSet<String>': type '_LinkedHashSet<String>' is not a subtype of type 'List<String>'", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546402622", "createdAt": "2020-12-20T17:00:02Z", "author": {"login": "Grohden"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -70,7 +70,7 @@ class ApiClient {\n   Future<Response> invokeAPI(\n     String path,\n     String method,\n-    Iterable<QueryParam> queryParams,\n+    List<QueryParam> queryParams,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMTc0NQ=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMzI4MQ==", "bodyText": "There doesn't seem to be any reason for _updateParamsForAuth being limited to List it's not order dependent either\n  /// Update query and header parameters based on authentication settings.\n  /// @param authNames The authentications to apply\n  void _updateParamsForAuth(List<String> authNames, List<QueryParam> queryParams, Map<String, String> headerParams) {\n    authNames.forEach((authName) {\n      Authentication auth = _authentications[authName];\n      if (auth == null) throw new ArgumentError(\"Authentication undefined: \" + authName);\n      auth.applyToParams(queryParams, headerParams);\n    });\n  }\nSet seems to be even more correct options as some frameworks (I remember one PHP based doing it) will throw error if you pass the same url param twice.\nI would stick to Iterable to let users pick correct implementation", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546403281", "createdAt": "2020-12-20T17:06:07Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -70,7 +70,7 @@ class ApiClient {\n   Future<Response> invokeAPI(\n     String path,\n     String method,\n-    Iterable<QueryParam> queryParams,\n+    List<QueryParam> queryParams,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMTc0NQ=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMzc1OQ==", "bodyText": "Well, what you said make sense, I'm gonna try to change the signature of _updateParamsForAuth and applyToParams to receive a Iterable instead of a List then", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546403759", "createdAt": "2020-12-20T17:09:57Z", "author": {"login": "Grohden"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -70,7 +70,7 @@ class ApiClient {\n   Future<Response> invokeAPI(\n     String path,\n     String method,\n-    Iterable<QueryParam> queryParams,\n+    List<QueryParam> queryParams,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMTc0NQ=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNDg3Ng==", "bodyText": "I forgot to thank you for the review, thanks for that \u2764\ufe0f\nIt turns out that I can't change the signature of applyToParams to a Iterable: in ApiKeyAuth there's a call to .add, and Iterables don't have that method :/\nWe could change the method and add a .toList() call:\n  void _updateParamsForAuth(\n    List<String> authNames,\n    Iterable<QueryParam> queryParams,\n    Map<String, String> headerParams,\n  ) {\n    for(final authName in authNames) {\n      final auth = _authentications[authName];\n      if (auth == null) {\n        throw ArgumentError('Authentication undefined: $authName');\n      }\n      auth.applyToParams(queryParams.toList(), headerParams);\n    }\n  }\nBut I'm pretty sure that this would make the applyToParams implementers .add calls pointless.. they rely on mutability, and .toList would create a copy of the original list", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546404876", "createdAt": "2020-12-20T17:20:11Z", "author": {"login": "Grohden"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -70,7 +70,7 @@ class ApiClient {\n   Future<Response> invokeAPI(\n     String path,\n     String method,\n-    Iterable<QueryParam> queryParams,\n+    List<QueryParam> queryParams,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMTc0NQ=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNjIwMA==", "bodyText": "Does that mean it currently throws at runtime if we pass Set in place of the existing iterable, which at the end is expected to be a List?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546406200", "createdAt": "2020-12-20T17:32:32Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -70,7 +70,7 @@ class ApiClient {\n   Future<Response> invokeAPI(\n     String path,\n     String method,\n-    Iterable<QueryParam> queryParams,\n+    List<QueryParam> queryParams,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMTc0NQ=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNjQyMw==", "bodyText": "so basically for now it has to be specific implementation Set or List but not parent class Iterable because it doesn't have .add method \ud83d\udc4f.\nsure, leave it as list then", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546406423", "createdAt": "2020-12-20T17:34:37Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -70,7 +70,7 @@ class ApiClient {\n   Future<Response> invokeAPI(\n     String path,\n     String method,\n-    Iterable<QueryParam> queryParams,\n+    List<QueryParam> queryParams,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMTc0NQ=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwNjkxMQ==", "bodyText": "We could change the method and add a .toList() call:\n\nMy personal choice would be to pass iterable to allows sets and any other lists and sets, but it's also outside of scope of your PR, so I'm leaving the decision with you.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546406911", "createdAt": "2020-12-20T17:38:31Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -70,7 +70,7 @@ class ApiClient {\n   Future<Response> invokeAPI(\n     String path,\n     String method,\n-    Iterable<QueryParam> queryParams,\n+    List<QueryParam> queryParams,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMTc0NQ=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjcwNzg0NQ==", "bodyText": "I'm gonna keep it as a List, ideally we would use iterable and not rely on mutability (as it may affect code outside of this generated lib).\nI'm gonna try to open another PR to make it accept a iterable and also rely on pure functions instead of mutating the list", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546707845", "createdAt": "2020-12-21T13:33:37Z", "author": {"login": "Grohden"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -70,7 +70,7 @@ class ApiClient {\n   Future<Response> invokeAPI(\n     String path,\n     String method,\n-    Iterable<QueryParam> queryParams,\n+    List<QueryParam> queryParams,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMTc0NQ=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc3Mjg2Mg==", "bodyText": "Is this external API? If so, this is a breaking change, 5.0.0 was just released. But it also fixes a bug so I am not sure what the process is here. @agilob You gonna fix this before the next release? :)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546772862", "createdAt": "2020-12-21T15:35:06Z", "author": {"login": "kuhnroyal"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -70,7 +70,7 @@ class ApiClient {\n   Future<Response> invokeAPI(\n     String path,\n     String method,\n-    Iterable<QueryParam> queryParams,\n+    List<QueryParam> queryParams,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQwMTc0NQ=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNTEwMzI2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQxOTowOTo1MFrOIJGnQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxMjo0Mzo0MVrOIJXBoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQxNjQ1MA==", "bodyText": "Are we sure that this can only be a primitive type here?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546416450", "createdAt": "2020-12-20T19:09:50Z", "author": {"login": "kuhnroyal"}, "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "diffHunk": "@@ -133,17 +133,15 @@ class {{{classname}}} {\n   \t          {{/items.complexType}}\n           {{/items.isArray}}\n           {{^items.isArray}}\n-        {{{name}}}: json[r'{{{baseName}}}'] == null\n-          ? null\n-          : {{{complexType}}}.mapFromJson(json[r'{{{baseName}}}']),\n+        {{{name}}}: json[r'{{{baseName}}}'] as {{{datatype}}},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjY4NTM0NQ==", "bodyText": "This is the map of maps case...\nI don't see this case in the petstore, but my project had this case:\n\nI'm gonna change this line to the same as the list treatment (above)\n          {{#items.isMap}}\n            {{{name}}}: json[r'{{{baseName}}}'] == null\n              ? null\n                {{#items.complexType}}\n                    : {{items.complexType}}.mapFromJson(json[r'{{{baseName}}}']),\n                {{/items.complexType}}\n                {{^items.complexType}}\n                    : (json[r'{{{baseName}}}'] as Map).cast<String, Map>(),\n                {{/items.complexType}}\n          {{/items.isMap}}\n          {{^items.isMap}}\n              {{{name}}}: json[r'{{{baseName}}}'] // primitive? Probably Map<String, primitive>\n          {{/items.isMap}}\nThis is what it will generate:\n\nIts that ok?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546685345", "createdAt": "2020-12-21T12:43:41Z", "author": {"login": "Grohden"}, "path": "modules/openapi-generator/src/main/resources/dart2/class.mustache", "diffHunk": "@@ -133,17 +133,15 @@ class {{{classname}}} {\n   \t          {{/items.complexType}}\n           {{/items.isArray}}\n           {{^items.isArray}}\n-        {{{name}}}: json[r'{{{baseName}}}'] == null\n-          ? null\n-          : {{{complexType}}}.mapFromJson(json[r'{{{baseName}}}']),\n+        {{{name}}}: json[r'{{{baseName}}}'] as {{{datatype}}},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjQxNjQ1MA=="}, "originalCommit": {"oid": "0dfcd2f6794ed92db67b68a5fa0328fd4162bc00"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNzU0MTg5OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNToyMToxM1rOIJb5hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNjozMDozN1rOIJeSfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc2NTE4OA==", "bodyText": "Missing space", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546765188", "createdAt": "2020-12-21T15:21:13Z", "author": {"login": "kuhnroyal"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -209,12 +209,12 @@ class ApiClient {\n     List<QueryParam> queryParams,\n     Map<String, String> headerParams,\n   ) {\n-    authNames.forEach((authName) {\n+    for(final authName in authNames) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4f8a215bb57f9caaa4237e407d99e40f8e5aa2b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc5NDYwMQ==", "bodyText": "where is the space missing? It's all good.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546794601", "createdAt": "2020-12-21T16:12:56Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -209,12 +209,12 @@ class ApiClient {\n     List<QueryParam> queryParams,\n     Map<String, String> headerParams,\n   ) {\n-    authNames.forEach((authName) {\n+    for(final authName in authNames) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc2NTE4OA=="}, "originalCommit": {"oid": "a4f8a215bb57f9caaa4237e407d99e40f8e5aa2b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgwNDM0OQ==", "bodyText": "for (. Whatever, we need to add post-processing to the generated examples so we have diffs that don't have this problem.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546804349", "createdAt": "2020-12-21T16:30:37Z", "author": {"login": "kuhnroyal"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -209,12 +209,12 @@ class ApiClient {\n     List<QueryParam> queryParams,\n     Map<String, String> headerParams,\n   ) {\n-    authNames.forEach((authName) {\n+    for(final authName in authNames) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc2NTE4OA=="}, "originalCommit": {"oid": "a4f8a215bb57f9caaa4237e407d99e40f8e5aa2b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNzU1MTg4OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/dart2/enum.mustache", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNToyMzo1MlrOIJb_Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNjoyOToyMVrOIJeP2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc2NjY3MQ==", "bodyText": "Remove the newline", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546766671", "createdAt": "2020-12-21T15:23:52Z", "author": {"login": "kuhnroyal"}, "path": "modules/openapi-generator/src/main/resources/dart2/enum.mustache", "diffHunk": "@@ -78,4 +78,4 @@ class {{{classname}}}TypeTransformer {\n \n   /// Singleton [{{{classname}}}TypeTransformer] instance.\n   static {{{classname}}}TypeTransformer _instance;\n-}\n\\ No newline at end of file\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4f8a215bb57f9caaa4237e407d99e40f8e5aa2b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc5NTEzMg==", "bodyText": "It's all good, this is autogenerated code, shouldn't even be committed to version control, there are plenty of generators that leave +5 empty whitespaces at end of files. Not worth spending time on such aesthetic things.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546795132", "createdAt": "2020-12-21T16:13:50Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/enum.mustache", "diffHunk": "@@ -78,4 +78,4 @@ class {{{classname}}}TypeTransformer {\n \n   /// Singleton [{{{classname}}}TypeTransformer] instance.\n   static {{{classname}}}TypeTransformer _instance;\n-}\n\\ No newline at end of file\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc2NjY3MQ=="}, "originalCommit": {"oid": "a4f8a215bb57f9caaa4237e407d99e40f8e5aa2b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgwMTY2NA==", "bodyText": "These new lines were added by AS, but I'm with @agilob on this one.. I always apply dartfmt on the generated client so things like empty lines are removed.. but when we add effective dart (or any other lint), the generated code will need to be properly formatted isn't?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546801664", "createdAt": "2020-12-21T16:25:51Z", "author": {"login": "Grohden"}, "path": "modules/openapi-generator/src/main/resources/dart2/enum.mustache", "diffHunk": "@@ -78,4 +78,4 @@ class {{{classname}}}TypeTransformer {\n \n   /// Singleton [{{{classname}}}TypeTransformer] instance.\n   static {{{classname}}}TypeTransformer _instance;\n-}\n\\ No newline at end of file\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc2NjY3MQ=="}, "originalCommit": {"oid": "a4f8a215bb57f9caaa4237e407d99e40f8e5aa2b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgwMjgzOQ==", "bodyText": "The problem is that it will change again for the next PR and the next and the next. That is lots of noise that doesn't actually affect the commit. And both enum templates are actually inlined so you suddenly end up with duplicate/triple empty lines between classes. But whatever, up to you.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546802839", "createdAt": "2020-12-21T16:27:56Z", "author": {"login": "kuhnroyal"}, "path": "modules/openapi-generator/src/main/resources/dart2/enum.mustache", "diffHunk": "@@ -78,4 +78,4 @@ class {{{classname}}}TypeTransformer {\n \n   /// Singleton [{{{classname}}}TypeTransformer] instance.\n   static {{{classname}}}TypeTransformer _instance;\n-}\n\\ No newline at end of file\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc2NjY3MQ=="}, "originalCommit": {"oid": "a4f8a215bb57f9caaa4237e407d99e40f8e5aa2b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjgwMzY3Mg==", "bodyText": "would be nice to properly format the mustache templates and leave the dart fonts reformat for the user.. I find very confusing to read if else conditions on the current mustache templates", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546803672", "createdAt": "2020-12-21T16:29:21Z", "author": {"login": "Grohden"}, "path": "modules/openapi-generator/src/main/resources/dart2/enum.mustache", "diffHunk": "@@ -78,4 +78,4 @@ class {{{classname}}}TypeTransformer {\n \n   /// Singleton [{{{classname}}}TypeTransformer] instance.\n   static {{{classname}}}TypeTransformer _instance;\n-}\n\\ No newline at end of file\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc2NjY3MQ=="}, "originalCommit": {"oid": "a4f8a215bb57f9caaa4237e407d99e40f8e5aa2b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzNzU1MjMwOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/dart2/enum_inline.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNToyMzo1OVrOIJb_iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMVQxNToyMzo1OVrOIJb_iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Njc2NjcyOQ==", "bodyText": "Remove the newline", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8244#discussion_r546766729", "createdAt": "2020-12-21T15:23:59Z", "author": {"login": "kuhnroyal"}, "path": "modules/openapi-generator/src/main/resources/dart2/enum_inline.mustache", "diffHunk": "@@ -78,4 +78,4 @@ class {{{classname}}}{{{enumName}}}TypeTransformer {\n \n   /// Singleton [{{{classname}}}{{{enumName}}}TypeTransformer] instance.\n   static {{{classname}}}{{{enumName}}}TypeTransformer _instance;\n-}\n\\ No newline at end of file\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4f8a215bb57f9caaa4237e407d99e40f8e5aa2b"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3954, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}