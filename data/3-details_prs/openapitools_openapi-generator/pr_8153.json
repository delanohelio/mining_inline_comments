{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MTE5NTA4", "number": 8153, "title": "[dart][dart-dio] Use built_value collection types without string replacement", "bodyText": "Do not use String replacement for built_value collection types.\nThis fixes #4865 but also changes return/parameter types and would be a breaking change.\nI think this is the correct thing to do but the changed parameter types may reduce usability in cases of list body/parameters.\n@josh-burton Did you intentionally prevent the return/parameter types from being built_value types? What is your opinion on this?\n\nPR checklist\n\n Read the contribution guidelines.\n Pull Request title clearly describes the work in the pull request and Pull Request description provides details about how to validate the work. Missing information here may result in delayed response from the community.\n If contributing template-only or documentation-only changes which will change sample output, build the project beforehand.\n Run the shell script ./bin/generate-samples.shto update all Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit as it would merge with master. These must match the expectations made by your contribution. You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example ./bin/generate-samples.sh bin/configs/java*. For Windows users, please run the script in Git BASH.\n File the PR against the correct branch: master\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\nCC @ircecho (2017/07) @swipesight (2018/09) @jaumard (2018/09) @josh-burton (2019/12) @amondnet (2019/12) @sbu-WBT (2020/12) @kuhnroyal (2020/12) @agilob (2020/12)", "createdAt": "2020-12-10T17:43:57Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153", "merged": true, "mergeCommit": {"oid": "7f9012c5540a9c79e02f9f3c72326c2d75d9d7bc"}, "closed": true, "closedAt": "2020-12-13T16:00:19Z", "author": {"login": "kuhnroyal"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdk29U3AH2gAyNTM2MTE5NTA4OmI4NmQ1YzQwYzI2Y2JlMWY5ZjIzYzdiYTA2YTllY2RmYmI3OGE0Yjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdk7mI9AFqTU0OTY4MjI3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8", "author": {"user": {"login": "kuhnroyal", "name": "Peter Leibiger"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8", "committedDate": "2020-12-10T17:40:22Z", "message": "[dart-dio] Use built_value collection types without string replacement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NDYyMjA4", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#pullrequestreview-549462208", "createdAt": "2020-12-10T17:58:31Z", "commit": {"oid": "b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTk3MDQ5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#pullrequestreview-549597049", "createdAt": "2020-12-10T20:59:44Z", "commit": {"oid": "b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1OTo0NVrOIDdDQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo1OTo0NVrOIDdDQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5MjYxMA==", "bodyText": "Sets.newHashSet from guava", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#discussion_r540492610", "createdAt": "2020-12-10T20:59:45Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/DartClientCodegen.java", "diffHunk": "@@ -188,6 +177,8 @@ public DartClientCodegen() {\n         importMapping.put(\"Set\", \"dart:core\");\n         importMapping.put(\"DateTime\", \"dart:core\");\n \n+        defaultIncludes = new HashSet<>(Collections.singletonList(\"dart:core\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjA1NDA1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#pullrequestreview-549605405", "createdAt": "2020-12-10T21:11:52Z", "commit": {"oid": "b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToxMTo1M1rOIDdfoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToxMTo1M1rOIDdfoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5OTg3Mg==", "bodyText": "can you add unit tests to this method?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#discussion_r540499872", "createdAt": "2020-12-10T21:11:53Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/DartClientCodegen.java", "diffHunk": "@@ -474,34 +465,62 @@ public String toDefaultValue(Schema schema) {\n \n     @Override\n     public String getTypeDeclaration(Schema p) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjA1ODU1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#pullrequestreview-549605855", "createdAt": "2020-12-10T21:12:33Z", "commit": {"oid": "b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToxMjozM1rOIDdhOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMToxMjozM1rOIDdhOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUwMDI4MA==", "bodyText": "can you add unit tests for this method? is it worth to make it more dart-dio specific as the rest of the changes are dart-dio?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#discussion_r540500280", "createdAt": "2020-12-10T21:12:33Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/DartClientCodegen.java", "diffHunk": "@@ -474,34 +465,62 @@ public String toDefaultValue(Schema schema) {\n \n     @Override\n     public String getTypeDeclaration(Schema p) {\n-        if (ModelUtils.isArraySchema(p)) {\n-            ArraySchema ap = (ArraySchema) p;\n-            Schema inner = ap.getItems();\n-            return instantiationTypes().get(\"array\") + \"<\" + getTypeDeclaration(inner) + \">\";\n-        } else if (ModelUtils.isMapSchema(p)) {\n-            Schema inner = getAdditionalProperties(p);\n-            return instantiationTypes().get(\"map\") + \"<String, \" + getTypeDeclaration(inner) + \">\";\n+        Schema<?> schema = ModelUtils.unaliasSchema(this.openAPI, p, importMapping);\n+        Schema<?> target = ModelUtils.isGenerateAliasAsModel() ? p : schema;\n+        if (ModelUtils.isArraySchema(target)) {\n+            Schema<?> items = getSchemaItems((ArraySchema) schema);\n+            return getSchemaType(target) + \"<\" + getTypeDeclaration(items) + \">\";\n+        } else if (ModelUtils.isMapSchema(target)) {\n+            // Note: ModelUtils.isMapSchema(p) returns true when p is a composed schema that also defines\n+            // additionalproperties: true\n+            Schema<?> inner = getAdditionalProperties(target);\n+            if (inner == null) {\n+                LOGGER.error(\"`{}` (map property) does not have a proper inner type defined. Default to type:string\", p.getName());\n+                inner = new StringSchema().description(\"TODO default missing map inner type to string\");\n+                p.setAdditionalProperties(inner);\n+            }\n+            return getSchemaType(target) + \"<String, \" + getTypeDeclaration(inner) + \">\";\n         }\n         return super.getTypeDeclaration(p);\n     }\n \n     @Override\n     public String getSchemaType(Schema p) {\n-        String type = super.getSchemaType(p);\n-        if (typeMapping.containsKey(type)) {\n-            return typeMapping.get(type);\n+        String openAPIType = super.getSchemaType(p);\n+        if (openAPIType == null) {\n+            LOGGER.error(\"No Type defined for Schema \" + p);\n         }\n-        if (languageSpecificPrimitives.contains(type)) {\n-            return type;\n+        if (typeMapping.containsKey(openAPIType)) {\n+            return typeMapping.get(openAPIType);\n         }\n-        return toModelName(type);\n+        if (languageSpecificPrimitives.contains(openAPIType)) {\n+            return openAPIType;\n+        }\n+        return toModelName(openAPIType);\n     }\n \n     @Override\n     public Map<String, Object> postProcessModels(Map<String, Object> objs) {\n         return postProcessModelsEnum(objs);\n     }\n \n+    @Override\n+    public CodegenOperation fromOperation(String path, String httpMethod, Operation operation, List<Server> servers) {\n+        final CodegenOperation op = super.fromOperation(path, httpMethod, operation, servers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8"}, "originalPosition": 115}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjgyMjc4", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8153#pullrequestreview-549682278", "createdAt": "2020-12-10T23:04:34Z", "commit": {"oid": "b86d5c40c26cbe1f9f23c7ba06a9ecdfbb78a4b8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1800, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}