{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NjMzNzM5", "number": 6569, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1NToyMVrOEEW_hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1NToyMVrOEEW_hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDA2NDcxOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/api_client.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1NToyMVrOGh7l9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjoxNzowN1rOGh8mKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzMjU2NA==", "bodyText": "When request_auth is passed in, this will loop through n times where n is the number of keys in auth_settings and:\n\nupdate auth for the same request_auth\nif request_auth is is in query, it will append n instances of the same auth info into the query, which is not what we desire\n\nNote: endpoints can have multiple auth settings set at one time.\nWhat should your solution do in that case?\nHow about instead requiring that the request_auth that you are passing in looks like:\nConfiguration.auth_settings()\nthat way we can call it like:\nauth_setting = request_auth.get(auth) or self.configuration.auth_settings().get(auth)\n\nAnd request_auth would look like:\n{\n    'http_basic_test':\n            'in': 'header',\n            'key': 'Authorization',\n            'value': 'Prefix ANOTHER_TOKEN'\n        }\n}\n\nOr if you want to keep the shape of request_auth as-is, how about changing the line 653 for loop to only run once when request_auth is passed in, and to only use request_auth?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6569#discussion_r438232564", "createdAt": "2020-06-10T15:55:21Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/api_client.mustache", "diffHunk": "@@ -550,18 +559,21 @@ class ApiClient(object):\n         else:\n             return content_types[0]\n \n-    def update_params_for_auth(self, headers, querys, auth_settings):\n+    def update_params_for_auth(self, headers, querys, auth_settings,\n+                               request_auth=None):\n         \"\"\"Updates header and query params based on authentication setting.\n \n         :param headers: Header parameters dict to be updated.\n         :param querys: Query parameters tuple list to be updated.\n         :param auth_settings: Authentication setting identifiers list.\n+        :param request_auth: if set, the provided settings will\n+                             override the token in the configuration.\n         \"\"\"\n         if not auth_settings:\n             return\n \n         for auth in auth_settings:\n-            auth_setting = self.configuration.auth_settings().get(auth)\n+            auth_setting = request_auth or self.configuration.auth_settings().get(auth)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1c200a604be39a0fb671eefdc634ff01d92fa7"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI0OTAwMA==", "bodyText": "Augh, good catch. I will clean this up. I think the latter was my intent since passing in the configuration shape requires the caller to know the name of the securityScheme defined in the spec, which feels a bit redundant. Let me see what removing the loop looks like.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6569#discussion_r438249000", "createdAt": "2020-06-10T16:17:07Z", "author": {"login": "warrengray"}, "path": "modules/openapi-generator/src/main/resources/python/api_client.mustache", "diffHunk": "@@ -550,18 +559,21 @@ class ApiClient(object):\n         else:\n             return content_types[0]\n \n-    def update_params_for_auth(self, headers, querys, auth_settings):\n+    def update_params_for_auth(self, headers, querys, auth_settings,\n+                               request_auth=None):\n         \"\"\"Updates header and query params based on authentication setting.\n \n         :param headers: Header parameters dict to be updated.\n         :param querys: Query parameters tuple list to be updated.\n         :param auth_settings: Authentication setting identifiers list.\n+        :param request_auth: if set, the provided settings will\n+                             override the token in the configuration.\n         \"\"\"\n         if not auth_settings:\n             return\n \n         for auth in auth_settings:\n-            auth_setting = self.configuration.auth_settings().get(auth)\n+            auth_setting = request_auth or self.configuration.auth_settings().get(auth)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzMjU2NA=="}, "originalCommit": {"oid": "8c1c200a604be39a0fb671eefdc634ff01d92fa7"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3417, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}