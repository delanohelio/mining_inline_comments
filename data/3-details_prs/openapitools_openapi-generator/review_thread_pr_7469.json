{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMTE1Nzcy", "number": 7469, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQxNjo0ODoxMFrOFVSUlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQxNjo0ODoxMFrOFVSUlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzU3ODY0NTk3OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQxNjo0ODoxMFrOIdqhQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNVQxNzozMTozN1rOIgrNDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Nzk3NjI1Nw==", "bodyText": "Not all specs will use this access token argument.\nHow about only adding this parameter to this signature if\n{{#hasOAuthMethods}}\nor {{#hasBearerMethods}}?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7469#discussion_r567976257", "createdAt": "2021-02-01T16:48:10Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -166,6 +166,7 @@ conf = {{{packageName}}}.Configuration(\n \n     def __init__(self, host=None,\n                  api_key=None, api_key_prefix=None,\n+                 access_token=None,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf544ceb58b58d471a373b116c736c602fc495e7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Nzk3NzEzNA==", "bodyText": "Actually that's a nice to have for the future for all of our specific auth inputs. api_key, api_key_prefix, username, password. Let's do that in the future.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7469#discussion_r567977134", "createdAt": "2021-02-01T16:49:18Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -166,6 +166,7 @@ conf = {{{packageName}}}.Configuration(\n \n     def __init__(self, host=None,\n                  api_key=None, api_key_prefix=None,\n+                 access_token=None,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Nzk3NjI1Nw=="}, "originalCommit": {"oid": "bf544ceb58b58d471a373b116c736c602fc495e7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MTEzMzE5OA==", "bodyText": "Ah, yes that makes sense. As for adding the hasOAuthMethods check, is there anything else missing in addition to that for this PR ?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7469#discussion_r571133198", "createdAt": "2021-02-05T17:31:37Z", "author": {"login": "zilvinasu"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -166,6 +166,7 @@ conf = {{{packageName}}}.Configuration(\n \n     def __init__(self, host=None,\n                  api_key=None, api_key_prefix=None,\n+                 access_token=None,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2Nzk3NjI1Nw=="}, "originalCommit": {"oid": "bf544ceb58b58d471a373b116c736c602fc495e7"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4175, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}