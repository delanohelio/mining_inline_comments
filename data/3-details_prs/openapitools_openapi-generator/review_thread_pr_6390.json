{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNjY3MjMw", "number": 6390, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjoyNjo1MFrOD-zwcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjoyNjo1MFrOD-zwcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MTg2Mjg5OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/method_init_composed.mustache", "isResolved": true, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwMjoyNjo1MFrOGZIvDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNTozMDowNFrOGZLH5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMDcwMw==", "bodyText": "What about just _variable_naming as later users may want the support of other formats such as XML?\n(only Java, Go client support XML payload at the moment)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6390#discussion_r429010703", "createdAt": "2020-05-22T02:26:50Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/method_init_composed.mustache", "diffHunk": "@@ -1,7 +1,7 @@\n     required_properties = set([\n         '_data_store',\n         '_check_type',\n-        '_from_server',\n+        '_json_variable_naming',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8112ebb4c4dd667d7a6a1c459f7121a9c3e89471"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyNDgyNg==", "bodyText": "@wing328 I am seeing many different acceptable xml variable naming styles.\nWhat are you thinking that people will pass in, something like this?\nvariable names:\nOAS document variable name: firstName\npython: first_name\njson: firstName\nxml: <firstName> or <FirstName> or <FIRSTNAME> or <first_name> etc\n\nWhich xml name are you thinking that people would pass in?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6390#discussion_r429024826", "createdAt": "2020-05-22T03:30:49Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/method_init_composed.mustache", "diffHunk": "@@ -1,7 +1,7 @@\n     required_properties = set([\n         '_data_store',\n         '_check_type',\n-        '_from_server',\n+        '_json_variable_naming',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMDcwMw=="}, "originalCommit": {"oid": "8112ebb4c4dd667d7a6a1c459f7121a9c3e89471"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyOTQ1Ng==", "bodyText": "If it's XML, this should be the name as specified in the XML object at https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#xmlObject", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6390#discussion_r429029456", "createdAt": "2020-05-22T03:54:12Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/method_init_composed.mustache", "diffHunk": "@@ -1,7 +1,7 @@\n     required_properties = set([\n         '_data_store',\n         '_check_type',\n-        '_from_server',\n+        '_json_variable_naming',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMDcwMw=="}, "originalCommit": {"oid": "8112ebb4c4dd667d7a6a1c459f7121a9c3e89471"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAyOTU3NA==", "bodyText": "Maybe it should be oai_variable_naming? oai_naming? serialized_naming? serialized_format? Or we flip the problem: python_var_naming, but then the default value will have to change.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6390#discussion_r429029574", "createdAt": "2020-05-22T03:54:48Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/method_init_composed.mustache", "diffHunk": "@@ -1,7 +1,7 @@\n     required_properties = set([\n         '_data_store',\n         '_check_type',\n-        '_from_server',\n+        '_json_variable_naming',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMDcwMw=="}, "originalCommit": {"oid": "8112ebb4c4dd667d7a6a1c459f7121a9c3e89471"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAzNzQzNg==", "bodyText": "_spec_variable_naming?\noai or oas may not mean anything to the users.\nWe referred to json and yaml files fir endpoints as spec documents.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6390#discussion_r429037436", "createdAt": "2020-05-22T04:32:32Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/method_init_composed.mustache", "diffHunk": "@@ -1,7 +1,7 @@\n     required_properties = set([\n         '_data_store',\n         '_check_type',\n-        '_from_server',\n+        '_json_variable_naming',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMDcwMw=="}, "originalCommit": {"oid": "8112ebb4c4dd667d7a6a1c459f7121a9c3e89471"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAzOTg3NQ==", "bodyText": "spec_naming_convention? spec_naming_syntax?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6390#discussion_r429039875", "createdAt": "2020-05-22T04:45:34Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/method_init_composed.mustache", "diffHunk": "@@ -1,7 +1,7 @@\n     required_properties = set([\n         '_data_store',\n         '_check_type',\n-        '_from_server',\n+        '_json_variable_naming',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMDcwMw=="}, "originalCommit": {"oid": "8112ebb4c4dd667d7a6a1c459f7121a9c3e89471"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA0MTE4OA==", "bodyText": "It just occurred to me \"variable\" is a bit of a misnomer. When you pass the arguments, typically I think it's going to be a dict, and the naming convention flag applies to the keys of the dictionary, not the variable names. I understand they do get converted to variables because of **, but still it's not very natural. In the OAS doc, they are \"properties\"", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6390#discussion_r429041188", "createdAt": "2020-05-22T04:52:18Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/method_init_composed.mustache", "diffHunk": "@@ -1,7 +1,7 @@\n     required_properties = set([\n         '_data_store',\n         '_check_type',\n-        '_from_server',\n+        '_json_variable_naming',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMDcwMw=="}, "originalCommit": {"oid": "8112ebb4c4dd667d7a6a1c459f7121a9c3e89471"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA0MzI4MA==", "bodyText": "serialized_naming_format?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6390#discussion_r429043280", "createdAt": "2020-05-22T05:02:01Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/method_init_composed.mustache", "diffHunk": "@@ -1,7 +1,7 @@\n     required_properties = set([\n         '_data_store',\n         '_check_type',\n-        '_from_server',\n+        '_json_variable_naming',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMDcwMw=="}, "originalCommit": {"oid": "8112ebb4c4dd667d7a6a1c459f7121a9c3e89471"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA0OTI5Mw==", "bodyText": "_spec_property_naming?\nI like _spec_naming_convention", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6390#discussion_r429049293", "createdAt": "2020-05-22T05:27:48Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/method_init_composed.mustache", "diffHunk": "@@ -1,7 +1,7 @@\n     required_properties = set([\n         '_data_store',\n         '_check_type',\n-        '_from_server',\n+        '_json_variable_naming',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMDcwMw=="}, "originalCommit": {"oid": "8112ebb4c4dd667d7a6a1c459f7121a9c3e89471"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA0OTgyOQ==", "bodyText": "ok, I will go with that.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6390#discussion_r429049829", "createdAt": "2020-05-22T05:30:04Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_templates/method_init_composed.mustache", "diffHunk": "@@ -1,7 +1,7 @@\n     required_properties = set([\n         '_data_store',\n         '_check_type',\n-        '_from_server',\n+        '_json_variable_naming',", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTAxMDcwMw=="}, "originalCommit": {"oid": "8112ebb4c4dd667d7a6a1c459f7121a9c3e89471"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3459, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}