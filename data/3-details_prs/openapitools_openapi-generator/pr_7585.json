{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3Mjg2NzUz", "number": 7585, "title": "Upgrade Dart2 template to advertised best-practices, plenty of additions too.", "bodyText": "This upgrades the Dart2 template to advertised best-practices by the Dart team and most importantly, use {{{ }}} to reference variables instead of {{ }} since the latter is for escaping values. It happened to me that occasionally the generated code would include &quot; and &#XX;  escape characters for some reason or another.\nFew additions were added too:\n\nAllow users to decide whether an invalid enum throws an error or not -- handy since in the old case, when an API changes, outdated apps would crash.\nAdded growable to most calls that returns a List. Defaults to not allow growing a returned list.\nUses functional calls where possible (=>).\nUses final variables where possible.\nUses singleton instances for type transformers, lazily-instantiated.\nAdded comments where needed.\n\n\nPR checklist\n\n Read the contribution guidelines.\n Pull Request title clearly describes the work in the pull request and Pull Request description provides details about how to validate the work. Missing information here may result in delayed response from the community.\n If contributing template-only or documentation-only changes which will change sample output, build the project beforehand.\n Run the shell script ./bin/generate-samples.shto update all Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit as it would merge with master. These must match the expectations made by your contribution. You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example ./bin/generate-samples.sh bin/configs/java*. For Windows users, please run the script in Git BASH.\n File the PR against the correct branch: master\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\n@ircecho (2017/07) @swipesight (2018/09) @jaumard (2018/09) @athornz (2019/12) @amondnet (2019/12) @wing328", "createdAt": "2020-10-03T14:41:10Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585", "merged": true, "mergeCommit": {"oid": "2984497731c68bf1054a1d491a701c804e7295c1"}, "closed": true, "closedAt": "2020-10-10T03:08:59Z", "author": {"login": "noordawod"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdO7lLdgH2gAyNDk3Mjg2NzUzOjNhZjQ1MjdlMTY1NWUzYmMzZTM2YTRiY2JmZWY2YjhjZDA3NWUyMDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdP7lFKAH2gAyNDk3Mjg2NzUzOmMxODc4NjY4Y2MxN2VlNjUyNDlhOTQ3NTllZWI3Njg4MmIzYzU3NWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3af4527e1655e3bc3e36a4bcbfef6b8cd075e200", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3af4527e1655e3bc3e36a4bcbfef6b8cd075e200", "committedDate": "2020-10-03T14:37:11Z", "message": "Updated Dart2 template."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4270565502636f89c97ee5581cd59534ff095fee", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/4270565502636f89c97ee5581cd59534ff095fee", "committedDate": "2020-10-03T14:40:07Z", "message": "Generated Petstore client code for Dart2."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTU1NTcy", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#pullrequestreview-501555572", "createdAt": "2020-10-03T15:56:32Z", "commit": {"oid": "4270565502636f89c97ee5581cd59534ff095fee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxNTo1NjozM1rOHcCRKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxNTo1NjozM1rOHcCRKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1OTMzOA==", "bodyText": "this yoda syntax is super strange to read", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#discussion_r499159338", "createdAt": "2020-10-03T15:56:33Z", "author": {"login": "agilob"}, "path": "samples/client/petstore/dart2/petstore_client_lib/lib/model/pet.dart", "diffHunk": "@@ -1,142 +1,201 @@\n+//\n+// AUTO-GENERATED FILE, DO NOT MODIFY!\n+//\n+// @dart=2.0\n+\n+// ignore_for_file: unused_element, unused_import\n+// ignore_for_file: always_put_required_named_parameters_first\n+// ignore_for_file: avoid_init_to_null, lines_longer_than_80_chars\n+// ignore_for_file: prefer_single_quotes\n+\n part of openapi.api;\n \n class Pet {\n+  Pet({\n+    this.id,\n+    this.category,\n+    @required this.name,\n+    this.photoUrls = const const [],\n+    this.tags = const const [],\n+    this.status,\n+  });\n+\n   \n   int id;\n+\n   \n   Category category;\n+\n   \n   String name;\n+\n   \n-  List<String> photoUrls = const [];\n+  List<String> photoUrls;\n+\n   \n-  List<Tag> tags = const [];\n+  List<Tag> tags;\n+\n   /// pet status in the store\n   PetStatusEnum status;\n \n-  Pet({\n-    this.id,\n-    this.category,\n-    @required this.name,\n-    @required this.photoUrls,\n-    this.tags = const [],\n-    this.status,\n-  });\n+  @override\n+  bool operator ==(Object other) => identical(this, other) || other is Pet &&\n+     other.id == id &&\n+     other.category == category &&\n+     other.name == name &&\n+     other.photoUrls == photoUrls &&\n+     other.tags == tags &&\n+     other.status == status;\n \n   @override\n-  String toString() {\n-    return 'Pet[id=$id, category=$category, name=$name, photoUrls=$photoUrls, tags=$tags, status=$status, ]';\n-  }\n+  int get hashCode =>\n+    id.hashCode +\n+    category.hashCode +\n+    name.hashCode +\n+    photoUrls.hashCode +\n+    tags.hashCode +\n+    status.hashCode;\n+\n+  @override\n+  String toString() => 'Pet[id=$id, category=$category, name=$name, photoUrls=$photoUrls, tags=$tags, status=$status]';\n \n   Pet.fromJson(Map<String, dynamic> json) {\n-    if (json == null) return;\n-    id = json['id'];\n-    category = (json['category'] == null) ?\n-      null :\n-      Category.fromJson(json['category']);\n-    name = json['name'];\n-    photoUrls = (json['photoUrls'] == null) ?\n-      null :\n-      (json['photoUrls'] as List).cast<String>();\n-    tags = (json['tags'] == null) ?\n-      null :\n-      Tag.listFromJson(json['tags']);\n-    status = PetStatusEnum.fromJson(json['status']);\n+    if (json == null) {\n+      return;\n+    }\n+    id = json[\"id\"];\n+    category = Category.fromJson(json[\"category\"]);\n+    name = json[\"name\"];\n+    photoUrls = json[\"photoUrls\"] == null\n+      ? null\n+      : (json[\"photoUrls\"] as List).cast<String>();\n+    tags = Tag.listFromJson(json[\"tags\"]);\n+    status = PetStatusEnum.fromJson(json[\"status\"]);\n   }\n \n   Map<String, dynamic> toJson() {\n-    Map<String, dynamic> json = {};\n-    if (id != null)\n-      json['id'] = id;\n-    if (category != null)\n-      json['category'] = category;\n-    if (name != null)\n-      json['name'] = name;\n-    if (photoUrls != null)\n-      json['photoUrls'] = photoUrls;\n-    if (tags != null)\n-      json['tags'] = tags;\n-    if (status != null)\n-      json['status'] = status.value;\n+    final json = <String, dynamic>{};\n+    if (id != null) {\n+      json[\"id\"] = id;\n+    }\n+    if (category != null) {\n+      json[\"category\"] = category;\n+    }\n+    if (name != null) {\n+      json[\"name\"] = name;\n+    }\n+    if (photoUrls != null) {\n+      json[\"photoUrls\"] = photoUrls;\n+    }\n+    if (tags != null) {\n+      json[\"tags\"] = tags;\n+    }\n+    if (status != null) {\n+      json[\"status\"] = status;\n+    }\n     return json;\n   }\n \n-  static List<Pet> listFromJson(List<dynamic> json) {\n-    return json == null ? List<Pet>() : json.map((value) => Pet.fromJson(value)).toList();\n-  }\n+  static List<Pet> listFromJson(List<dynamic> json, {bool emptyIsNull, bool growable,}) =>\n+    json == null || json.isEmpty\n+      ? true == emptyIsNull ? null : <Pet>[]\n+      : json.map((v) => Pet.fromJson(v)).toList(growable: true == growable);\n \n   static Map<String, Pet> mapFromJson(Map<String, dynamic> json) {\n-    final map = Map<String, Pet>();\n+    final map = <String, Pet>{};\n     if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic value) => map[key] = Pet.fromJson(value));\n+      json.forEach((String key, dynamic v) => map[key] = Pet.fromJson(v));\n     }\n     return map;\n   }\n \n   // maps a json object with a list of Pet-objects as value to a dart map\n-  static Map<String, List<Pet>> mapListFromJson(Map<String, dynamic> json) {\n-    final map = Map<String, List<Pet>>();\n+  static Map<String, List<Pet>> mapListFromJson(Map<String, dynamic> json, {bool emptyIsNull, bool growable,}) {\n+    final map = <String, List<Pet>>{};\n     if (json != null && json.isNotEmpty) {\n-      json.forEach((String key, dynamic value) {\n-        map[key] = Pet.listFromJson(value);\n+      json.forEach((String key, dynamic v) {\n+        map[key] = Pet.listFromJson(v, emptyIsNull: emptyIsNull, growable: growable);\n       });\n     }\n     return map;\n   }\n }\n+\n+/// pet status in the store\n class PetStatusEnum {\n+  /// Instantiate a new enum with the provided [value].\n+  const PetStatusEnum._(this.value);\n+\n   /// The underlying value of this enum member.\n   final String value;\n \n-  const PetStatusEnum._internal(this.value);\n-\n-  /// pet status in the store\n-  static const PetStatusEnum available_ = PetStatusEnum._internal(\"available\");\n-  /// pet status in the store\n-  static const PetStatusEnum pending_ = PetStatusEnum._internal(\"pending\");\n-  /// pet status in the store\n-  static const PetStatusEnum sold_ = PetStatusEnum._internal(\"sold\");\n-\n-  static List<PetStatusEnum> get values => const [\n-        available_,\n-        pending_,\n-        sold_,\n-      ];\n-\n-  String toJson () {\n-    return value;\n-  }\n-\n   @override\n-  String toString () {\n-    return value;\n-  }\n+  bool operator ==(Object other) =>\n+      identical(this, other) ||\n+      other is PetStatusEnum && other.value == value ||\n+      other is String && other == value;\n \n-  static PetStatusEnum fromJson(String value) {\n-    return PetStatusEnumTypeTransformer().decode(value);\n-  }\n+  @override\n+  int get hashCode => toString().hashCode;\n \n-  static List<PetStatusEnum> listFromJson(List<dynamic> json) {\n-    return json == null\n-      ? List<PetStatusEnum>()\n-      : json.map((value) => PetStatusEnum.fromJson(value)).toList();\n-  }\n+  @override\n+  String toString() => value;\n+\n+  String toJson() => value;\n+\n+  static const available_ = PetStatusEnum._(\"available\");\n+  static const pending_ = PetStatusEnum._(\"pending\");\n+  static const sold_ = PetStatusEnum._(\"sold\");\n+\n+  /// List of all possible values in this [enum][PetStatusEnum].\n+  static const values = <PetStatusEnum>[\n+    available_,\n+    pending_,\n+    sold_,\n+  ];\n+\n+  static PetStatusEnum fromJson(String value) =>\n+    PetStatusEnumTypeTransformer().decode(value);\n+\n+  static List<PetStatusEnum> listFromJson(List<dynamic> json, {bool emptyIsNull, bool growable,}) =>\n+    json == null || json.isEmpty\n+      ? true == emptyIsNull ? null : <PetStatusEnum>[]\n+      : json\n+          .map((value) => PetStatusEnum.fromJson(value))\n+          .toList(growable: true == growable);\n }\n \n+/// Transformation class that can [encode] an instance of [PetStatusEnum] to String,\n+/// and [decode] dynamic data back to [PetStatusEnum].\n class PetStatusEnumTypeTransformer {\n+  const PetStatusEnumTypeTransformer._();\n \n-  dynamic encode(PetStatusEnum data) {\n-    return data.value;\n-  }\n+  factory PetStatusEnumTypeTransformer() => _instance ??= PetStatusEnumTypeTransformer._();\n \n-  PetStatusEnum decode(dynamic data) {\n+  String encode(PetStatusEnum data) => data.value;\n+\n+  /// Decodes a [dynamic value][data] to a PetStatusEnum.\n+  ///\n+  /// If [allowNull] is true and the [dynamic value][data] cannot be decoded successfully,\n+  /// then null is returned. However, if [allowNull] is false and the [dynamic value][data]\n+  /// cannot be decoded successfully, then an [UnimplementedError] is thrown.\n+  ///\n+  /// The [allowNull] is very handy when an API changes and a new enum value is added or removed,\n+  /// and users are still using an old app with the old code.\n+  PetStatusEnum decode(dynamic data, {bool allowNull}) {\n     switch (data) {\n       case \"available\": return PetStatusEnum.available_;\n       case \"pending\": return PetStatusEnum.pending_;\n       case \"sold\": return PetStatusEnum.sold_;\n-      default: return null;\n+      default:\n+        if (false == allowNull) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4270565502636f89c97ee5581cd59534ff095fee"}, "originalPosition": 274}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNTU1NjQ1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#pullrequestreview-501555645", "createdAt": "2020-10-03T15:57:41Z", "commit": {"oid": "4270565502636f89c97ee5581cd59534ff095fee"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxNTo1Nzo0MVrOHcCRhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wM1QxNjowNTowNFrOHcCThw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1OTQyOQ==", "bodyText": "Where did you get the best practice to use \" instead '?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#discussion_r499159429", "createdAt": "2020-10-03T15:57:41Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/api.mustache", "diffHunk": "@@ -1,129 +1,131 @@\n-part of {{pubName}}.api;\n-\n+{{>header}}\n+{{>part_of}}\n {{#operations}}\n \n+class {{{classname}}} {\n+  {{{classname}}}([ApiClient apiClient]) : apiClient = apiClient ?? defaultApiClient;\n \n-class {{classname}} {\n   final ApiClient apiClient;\n-\n-  {{classname}}([ApiClient apiClient]) : apiClient = apiClient ?? defaultApiClient;\n-\n   {{#operation}}\n-  /// {{summary}} with HTTP info returned\n+\n+  /// {{{summary}}} with HTTP info returned\n   ///\n-  /// {{notes}}\n-  {{#returnType}}Future<Response> {{/returnType}}{{^returnType}}Future {{/returnType}}{{nickname}}WithHttpInfo({{#allParams}}{{#required}}{{{dataType}}} {{paramName}}{{#hasMore}}, {{/hasMore}}{{/required}}{{/allParams}}{{#hasOptionalParams}}{ {{#allParams}}{{^required}}{{{dataType}}} {{paramName}}{{#hasMore}}, {{/hasMore}}{{/required}}{{/allParams}} }{{/hasOptionalParams}}) async {\n-    Object postBody{{#bodyParam}} = {{paramName}}{{/bodyParam}};\n+  /// {{{notes}}}\n+  {{#returnType}}Future<Response> {{/returnType}}{{^returnType}}Future {{/returnType}}{{{nickname}}}WithHttpInfo({{#allParams}}{{#required}}{{{dataType}}} {{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/required}}{{/allParams}}{{#hasOptionalParams}}{ {{#allParams}}{{^required}}{{{dataType}}} {{{paramName}}}{{#hasMore}}, {{/hasMore}}{{/required}}{{/allParams}} }{{/hasOptionalParams}}) async {\n+    Object postBody{{#bodyParam}} = {{{paramName}}}{{/bodyParam}};\n \n     // verify required params are set\n     {{#allParams}}\n       {{#required}}\n-    if({{paramName}} == null) {\n-     throw ApiException(400, \"Missing required param: {{paramName}}\");\n+    if ({{{paramName}}} == null) {\n+     throw ApiException(400, \"Missing required param: {{{paramName}}}\");\n     }\n       {{/required}}\n     {{/allParams}}\n \n     // create path and map variables\n-    String path = \"{{{path}}}\".replaceAll(\"{format}\",\"json\"){{#pathParams}}.replaceAll(\"{\" + \"{{baseName}}\" + \"}\", {{{paramName}}}.toString()){{/pathParams}};\n+    String path = \"{{{path}}}\".replaceAll(\"{format}\",\"json\"){{#pathParams}}.replaceAll(\"{\" + \"{{{baseName}}}\" + \"}\", {{{paramName}}}.toString()){{/pathParams}};\n \n     // query params\n     List<QueryParam> queryParams = [];\n     Map<String, String> headerParams = {};\n     Map<String, String> formParams = {};\n     {{#queryParams}}\n     {{^required}}\n-    if({{paramName}} != null) {\n+    if ({{{paramName}}} != null) {\n     {{/required}}\n-      queryParams.addAll(_convertParametersForCollectionFormat(\"{{collectionFormat}}\", \"{{baseName}}\", {{paramName}}));\n+      queryParams.addAll(_convertParametersForCollectionFormat(\"{{{collectionFormat}}}\", \"{{{baseName}}}\", {{{paramName}}}));\n     {{^required}}\n     }\n     {{/required}}\n     {{/queryParams}}\n     {{#headerParams}}\n-    headerParams[\"{{baseName}}\"] = {{paramName}};\n+    headerParams[\"{{{baseName}}}\"] = {{{paramName}}};\n     {{/headerParams}}\n \n     List<String> contentTypes = [{{#consumes}}\"{{{mediaType}}}\"{{#hasMore}},{{/hasMore}}{{/consumes}}];\n \n     String nullableContentType = contentTypes.isNotEmpty ? contentTypes[0] : null;\n-    List<String> authNames = [{{#authMethods}}\"{{name}}\"{{#hasMore}}, {{/hasMore}}{{/authMethods}}];\n+    List<String> authNames = [{{#authMethods}}\"{{{name}}}\"{{#hasMore}}, {{/hasMore}}{{/authMethods}}];\n \n-    if(nullableContentType != null && nullableContentType.startsWith(\"multipart/form-data\")) {\n+    if (nullableContentType != null && nullableContentType.startsWith(\"multipart/form-data\")) {\n       bool hasFields = false;\n       MultipartRequest mp = MultipartRequest(null, null);\n       {{#formParams}}\n       {{^isFile}}\n-      if ({{paramName}} != null) {\n+      if ({{{paramName}}} != null) {\n         hasFields = true;\n-        mp.fields['{{baseName}}'] = parameterToString({{paramName}});\n+        mp.fields[\"{{{baseName}}}\"] = parameterToString({{{paramName}}});\n       }\n       {{/isFile}}\n       {{#isFile}}\n-      if ({{paramName}} != null) {\n+      if ({{{paramName}}} != null) {\n         hasFields = true;\n-        mp.fields['{{baseName}}'] = {{paramName}}.field;\n-        mp.files.add({{paramName}});\n+        mp.fields[\"{{{baseName}}}\"] = {{{paramName}}}.field;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4270565502636f89c97ee5581cd59534ff095fee"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1OTU2NA==", "bodyText": "Same here why \" not '? All dart src examples use ' https://dart.dev/guides/language/effective-dart/style", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#discussion_r499159564", "createdAt": "2020-10-03T15:59:42Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -1,182 +1,187 @@\n-part of {{pubName}}.api;\n-\n+{{>header}}\n+{{>part_of}}\n class QueryParam {\n+  QueryParam(this.name, this.value);\n+\n   String name;\n   String value;\n-\n-  QueryParam(this.name, this.value);\n }\n \n class ApiClient {\n-\n-  String basePath;\n-  var client = Client();\n-\n-  Map<String, String> _defaultHeaderMap = {};\n-  Map<String, Authentication> _authentications = {};\n-\n-  final _regList = RegExp(r'^List<(.*)>$');\n-  final _regMap = RegExp(r'^Map<String,(.*)>$');\n-\n   ApiClient({this.basePath = \"{{{basePath}}}\"}) {\n   {{#hasAuthMethods}}\n     // Setup authentications (key: authentication name, value: authentication).\n   {{#authMethods}}\n   {{#isBasic}}\n   {{#isBasicBasic}}\n-    _authentications['{{name}}'] = HttpBasicAuth();\n+    _authentications[\"{{{name}}}\"] = HttpBasicAuth();\n   {{/isBasicBasic}}\n   {{#isBasicBearer}}\n-    _authentications['{{name}}'] = HttpBearerAuth();\n+    _authentications[\"{{{name}}}\"] = HttpBearerAuth();\n   {{/isBasicBearer}}\n   {{/isBasic}}\n   {{#isApiKey}}\n-    _authentications['{{name}}'] = ApiKeyAuth({{#isKeyInCookie}}\"cookie\"{{/isKeyInCookie}}{{^isKeyInCookie}}{{#isKeyInHeader}}\"header\"{{/isKeyInHeader}}{{^isKeyInHeader}}\"query\"{{/isKeyInHeader}}{{/isKeyInCookie}}, \"{{keyParamName}}\");\n+    _authentications[\"{{{name}}}\"] = ApiKeyAuth({{#isKeyInCookie}}\"cookie\"{{/isKeyInCookie}}{{^isKeyInCookie}}{{#isKeyInHeader}}\"header\"{{/isKeyInHeader}}{{^isKeyInHeader}}\"query\"{{/isKeyInHeader}}{{/isKeyInCookie}}, \"{{{keyParamName}}}\");\n   {{/isApiKey}}\n   {{#isOAuth}}\n-    _authentications['{{name}}'] = OAuth();\n+    _authentications[\"{{{name}}}\"] = OAuth();\n   {{/isOAuth}}\n   {{/authMethods}}\n   {{/hasAuthMethods}}\n   }\n \n+  String basePath;\n+  var client = Client();\n+\n+  final _defaultHeaderMap = <String, String>{};\n+  final _authentications = <String, Authentication>{};\n+\n   void addDefaultHeader(String key, String value) {\n      _defaultHeaderMap[key] = value;\n   }\n \n-  dynamic _deserialize(dynamic value, String targetType) {\n-    try {\n-      switch (targetType) {\n-        case 'String':\n-          return '$value';\n-        case 'int':\n-          return value is int ? value : int.parse('$value');\n-        case 'bool':\n-          return value is bool ? value : '$value'.toLowerCase() == 'true';\n-        case 'double':\n-          return value is double ? value : double.parse('$value');\n-        {{#models}}\n-          {{#model}}\n-        case '{{classname}}':\n-            {{#isEnum}}\n-          return new {{classname}}TypeTransformer().decode(value);\n-            {{/isEnum}}\n-            {{^isEnum}}\n-          return {{classname}}.fromJson(value);\n-            {{/isEnum}}\n-          {{/model}}\n-        {{/models}}\n-        default:\n-          {\n-            Match match;\n-            if (value is List &&\n-                (match = _regList.firstMatch(targetType)) != null) {\n-              var newTargetType = match[1];\n-              return value.map((v) => _deserialize(v, newTargetType)).toList();\n-            } else if (value is Map &&\n-                (match = _regMap.firstMatch(targetType)) != null) {\n-              var newTargetType = match[1];\n-              return Map.fromIterables(value.keys,\n-                  value.values.map((v) => _deserialize(v, newTargetType)));\n-            }\n-          }\n-      }\n-    } on Exception catch (e, stack) {\n-      throw ApiException.withInner(500, 'Exception during deserialization.', e, stack);\n-    }\n-    throw ApiException(500, 'Could not find a suitable class for deserialization');\n-  }\n-\n-  dynamic deserialize(String json, String targetType) {\n+  dynamic deserialize(String json, String targetType, {bool growable}) {\n     // Remove all spaces.  Necessary for reg expressions as well.\n-    targetType = targetType.replaceAll(' ', '');\n-\n-    if (targetType == 'String') return json;\n+    targetType = targetType.replaceAll(\" \", \"\");\n \n-    var decodedJson = jsonDecode(json);\n-    return _deserialize(decodedJson, targetType);\n+    return targetType == \"String\"\n+      ? json\n+      : _deserialize(jsonDecode(json), targetType, growable: true == growable);\n   }\n \n-  String serialize(Object obj) {\n-    String serialized = '';\n-    if (obj == null) {\n-      serialized = '';\n-    } else {\n-      serialized = json.encode(obj);\n-    }\n-    return serialized;\n-  }\n+  String serialize(Object obj) => obj == null ? \"\" : json.encode(obj);\n \n-  // We don't use a Map<String, String> for queryParams.\n-  // If collectionFormat is 'multi' a key might appear multiple times.\n-  Future<Response> invokeAPI(String path,\n-                             String method,\n-                             Iterable<QueryParam> queryParams,\n-                             Object body,\n-                             Map<String, String> headerParams,\n-                             Map<String, String> formParams,\n-                             String nullableContentType,\n-                             List<String> authNames) async {\n+  T getAuthentication<T extends Authentication>(String name) {\n+    final authentication = _authentications[name];\n+    return authentication is T ? authentication : null;\n+  }\n \n+  // We don\u2019t use a Map<String, String> for queryParams.\n+  // If collectionFormat is \"multi\" a key might appear multiple times.\n+  Future<Response> invokeAPI(\n+    String path,\n+    String method,\n+    Iterable<QueryParam> queryParams,\n+    Object body,\n+    Map<String, String> headerParams,\n+    Map<String, String> formParams,\n+    String nullableContentType,\n+    List<String> authNames,\n+  ) async {\n     _updateParamsForAuth(authNames, queryParams, headerParams);\n \n-    var ps = queryParams\n+    headerParams.addAll(_defaultHeaderMap);\n+\n+    final ps = queryParams\n       .where((p) => p.value != null)\n-      .map((p) => '${p.name}=${Uri.encodeQueryComponent(p.value)}');\n+      .map((p) => \"${p.name}=${Uri.encodeQueryComponent(p.value)}\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4270565502636f89c97ee5581cd59534ff095fee"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1OTY4Nw==", "bodyText": "You are mixing styles here as well, one liner trinary operator vs. multiline. Personally I prefer multiline as it's easier to quickly scan code while scrolling.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#discussion_r499159687", "createdAt": "2020-10-03T16:01:23Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -1,182 +1,187 @@\n-part of {{pubName}}.api;\n-\n+{{>header}}\n+{{>part_of}}\n class QueryParam {\n+  QueryParam(this.name, this.value);\n+\n   String name;\n   String value;\n-\n-  QueryParam(this.name, this.value);\n }\n \n class ApiClient {\n-\n-  String basePath;\n-  var client = Client();\n-\n-  Map<String, String> _defaultHeaderMap = {};\n-  Map<String, Authentication> _authentications = {};\n-\n-  final _regList = RegExp(r'^List<(.*)>$');\n-  final _regMap = RegExp(r'^Map<String,(.*)>$');\n-\n   ApiClient({this.basePath = \"{{{basePath}}}\"}) {\n   {{#hasAuthMethods}}\n     // Setup authentications (key: authentication name, value: authentication).\n   {{#authMethods}}\n   {{#isBasic}}\n   {{#isBasicBasic}}\n-    _authentications['{{name}}'] = HttpBasicAuth();\n+    _authentications[\"{{{name}}}\"] = HttpBasicAuth();\n   {{/isBasicBasic}}\n   {{#isBasicBearer}}\n-    _authentications['{{name}}'] = HttpBearerAuth();\n+    _authentications[\"{{{name}}}\"] = HttpBearerAuth();\n   {{/isBasicBearer}}\n   {{/isBasic}}\n   {{#isApiKey}}\n-    _authentications['{{name}}'] = ApiKeyAuth({{#isKeyInCookie}}\"cookie\"{{/isKeyInCookie}}{{^isKeyInCookie}}{{#isKeyInHeader}}\"header\"{{/isKeyInHeader}}{{^isKeyInHeader}}\"query\"{{/isKeyInHeader}}{{/isKeyInCookie}}, \"{{keyParamName}}\");\n+    _authentications[\"{{{name}}}\"] = ApiKeyAuth({{#isKeyInCookie}}\"cookie\"{{/isKeyInCookie}}{{^isKeyInCookie}}{{#isKeyInHeader}}\"header\"{{/isKeyInHeader}}{{^isKeyInHeader}}\"query\"{{/isKeyInHeader}}{{/isKeyInCookie}}, \"{{{keyParamName}}}\");\n   {{/isApiKey}}\n   {{#isOAuth}}\n-    _authentications['{{name}}'] = OAuth();\n+    _authentications[\"{{{name}}}\"] = OAuth();\n   {{/isOAuth}}\n   {{/authMethods}}\n   {{/hasAuthMethods}}\n   }\n \n+  String basePath;\n+  var client = Client();\n+\n+  final _defaultHeaderMap = <String, String>{};\n+  final _authentications = <String, Authentication>{};\n+\n   void addDefaultHeader(String key, String value) {\n      _defaultHeaderMap[key] = value;\n   }\n \n-  dynamic _deserialize(dynamic value, String targetType) {\n-    try {\n-      switch (targetType) {\n-        case 'String':\n-          return '$value';\n-        case 'int':\n-          return value is int ? value : int.parse('$value');\n-        case 'bool':\n-          return value is bool ? value : '$value'.toLowerCase() == 'true';\n-        case 'double':\n-          return value is double ? value : double.parse('$value');\n-        {{#models}}\n-          {{#model}}\n-        case '{{classname}}':\n-            {{#isEnum}}\n-          return new {{classname}}TypeTransformer().decode(value);\n-            {{/isEnum}}\n-            {{^isEnum}}\n-          return {{classname}}.fromJson(value);\n-            {{/isEnum}}\n-          {{/model}}\n-        {{/models}}\n-        default:\n-          {\n-            Match match;\n-            if (value is List &&\n-                (match = _regList.firstMatch(targetType)) != null) {\n-              var newTargetType = match[1];\n-              return value.map((v) => _deserialize(v, newTargetType)).toList();\n-            } else if (value is Map &&\n-                (match = _regMap.firstMatch(targetType)) != null) {\n-              var newTargetType = match[1];\n-              return Map.fromIterables(value.keys,\n-                  value.values.map((v) => _deserialize(v, newTargetType)));\n-            }\n-          }\n-      }\n-    } on Exception catch (e, stack) {\n-      throw ApiException.withInner(500, 'Exception during deserialization.', e, stack);\n-    }\n-    throw ApiException(500, 'Could not find a suitable class for deserialization');\n-  }\n-\n-  dynamic deserialize(String json, String targetType) {\n+  dynamic deserialize(String json, String targetType, {bool growable}) {\n     // Remove all spaces.  Necessary for reg expressions as well.\n-    targetType = targetType.replaceAll(' ', '');\n-\n-    if (targetType == 'String') return json;\n+    targetType = targetType.replaceAll(\" \", \"\");\n \n-    var decodedJson = jsonDecode(json);\n-    return _deserialize(decodedJson, targetType);\n+    return targetType == \"String\"\n+      ? json\n+      : _deserialize(jsonDecode(json), targetType, growable: true == growable);\n   }\n \n-  String serialize(Object obj) {\n-    String serialized = '';\n-    if (obj == null) {\n-      serialized = '';\n-    } else {\n-      serialized = json.encode(obj);\n-    }\n-    return serialized;\n-  }\n+  String serialize(Object obj) => obj == null ? \"\" : json.encode(obj);\n \n-  // We don't use a Map<String, String> for queryParams.\n-  // If collectionFormat is 'multi' a key might appear multiple times.\n-  Future<Response> invokeAPI(String path,\n-                             String method,\n-                             Iterable<QueryParam> queryParams,\n-                             Object body,\n-                             Map<String, String> headerParams,\n-                             Map<String, String> formParams,\n-                             String nullableContentType,\n-                             List<String> authNames) async {\n+  T getAuthentication<T extends Authentication>(String name) {\n+    final authentication = _authentications[name];\n+    return authentication is T ? authentication : null;\n+  }\n \n+  // We don\u2019t use a Map<String, String> for queryParams.\n+  // If collectionFormat is \"multi\" a key might appear multiple times.\n+  Future<Response> invokeAPI(\n+    String path,\n+    String method,\n+    Iterable<QueryParam> queryParams,\n+    Object body,\n+    Map<String, String> headerParams,\n+    Map<String, String> formParams,\n+    String nullableContentType,\n+    List<String> authNames,\n+  ) async {\n     _updateParamsForAuth(authNames, queryParams, headerParams);\n \n-    var ps = queryParams\n+    headerParams.addAll(_defaultHeaderMap);\n+\n+    final ps = queryParams\n       .where((p) => p.value != null)\n-      .map((p) => '${p.name}=${Uri.encodeQueryComponent(p.value)}');\n+      .map((p) => \"${p.name}=${Uri.encodeQueryComponent(p.value)}\");\n \n-    String queryString = ps.isNotEmpty ?\n-                         '?' + ps.join('&') :\n-                         '';\n+    final queryString = ps.isNotEmpty ? \"?\" + ps.join(\"&\") : \"\";\n \n-    String url = basePath + path + queryString;\n+    final url = \"$basePath$path$queryString\";\n \n-    headerParams.addAll(_defaultHeaderMap);\n     if (nullableContentType != null) {\n-      final contentType = nullableContentType;\n-      headerParams['Content-Type'] = contentType;\n+      headerParams[\"Content-Type\"] = nullableContentType;\n     }\n \n-    if(body is MultipartRequest) {\n+    if (body is MultipartRequest) {\n       var request = MultipartRequest(method, Uri.parse(url));\n       request.fields.addAll(body.fields);\n       request.files.addAll(body.files);\n       request.headers.addAll(body.headers);\n       request.headers.addAll(headerParams);\n       var response = await client.send(request);\n       return Response.fromStream(response);\n-    } else {\n-      var msgBody = nullableContentType == \"application/x-www-form-urlencoded\" ? formParams : serialize(body);\n-      final nullableHeaderParams = (headerParams.isEmpty)? null: headerParams;\n-      switch(method) {\n-        case \"POST\":\n-          return client.post(url, headers: nullableHeaderParams, body: msgBody);\n-        case \"PUT\":\n-          return client.put(url, headers: nullableHeaderParams, body: msgBody);\n-        case \"DELETE\":\n-          return client.delete(url, headers: nullableHeaderParams);\n-        case \"PATCH\":\n-          return client.patch(url, headers: nullableHeaderParams, body: msgBody);\n-        case \"HEAD\":\n-          return client.head(url, headers: nullableHeaderParams);\n+    }\n+\n+    final msgBody = nullableContentType == \"application/x-www-form-urlencoded\"\n+      ? formParams\n+      : serialize(body);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4270565502636f89c97ee5581cd59534ff095fee"}, "originalPosition": 209}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1OTc3OQ==", "bodyText": "I'm not convinced we should be correcting method type. Most languages do not do it, found it in only 2 other templates.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#discussion_r499159779", "createdAt": "2020-10-03T16:02:32Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_client.mustache", "diffHunk": "@@ -1,182 +1,187 @@\n-part of {{pubName}}.api;\n-\n+{{>header}}\n+{{>part_of}}\n class QueryParam {\n+  QueryParam(this.name, this.value);\n+\n   String name;\n   String value;\n-\n-  QueryParam(this.name, this.value);\n }\n \n class ApiClient {\n-\n-  String basePath;\n-  var client = Client();\n-\n-  Map<String, String> _defaultHeaderMap = {};\n-  Map<String, Authentication> _authentications = {};\n-\n-  final _regList = RegExp(r'^List<(.*)>$');\n-  final _regMap = RegExp(r'^Map<String,(.*)>$');\n-\n   ApiClient({this.basePath = \"{{{basePath}}}\"}) {\n   {{#hasAuthMethods}}\n     // Setup authentications (key: authentication name, value: authentication).\n   {{#authMethods}}\n   {{#isBasic}}\n   {{#isBasicBasic}}\n-    _authentications['{{name}}'] = HttpBasicAuth();\n+    _authentications[\"{{{name}}}\"] = HttpBasicAuth();\n   {{/isBasicBasic}}\n   {{#isBasicBearer}}\n-    _authentications['{{name}}'] = HttpBearerAuth();\n+    _authentications[\"{{{name}}}\"] = HttpBearerAuth();\n   {{/isBasicBearer}}\n   {{/isBasic}}\n   {{#isApiKey}}\n-    _authentications['{{name}}'] = ApiKeyAuth({{#isKeyInCookie}}\"cookie\"{{/isKeyInCookie}}{{^isKeyInCookie}}{{#isKeyInHeader}}\"header\"{{/isKeyInHeader}}{{^isKeyInHeader}}\"query\"{{/isKeyInHeader}}{{/isKeyInCookie}}, \"{{keyParamName}}\");\n+    _authentications[\"{{{name}}}\"] = ApiKeyAuth({{#isKeyInCookie}}\"cookie\"{{/isKeyInCookie}}{{^isKeyInCookie}}{{#isKeyInHeader}}\"header\"{{/isKeyInHeader}}{{^isKeyInHeader}}\"query\"{{/isKeyInHeader}}{{/isKeyInCookie}}, \"{{{keyParamName}}}\");\n   {{/isApiKey}}\n   {{#isOAuth}}\n-    _authentications['{{name}}'] = OAuth();\n+    _authentications[\"{{{name}}}\"] = OAuth();\n   {{/isOAuth}}\n   {{/authMethods}}\n   {{/hasAuthMethods}}\n   }\n \n+  String basePath;\n+  var client = Client();\n+\n+  final _defaultHeaderMap = <String, String>{};\n+  final _authentications = <String, Authentication>{};\n+\n   void addDefaultHeader(String key, String value) {\n      _defaultHeaderMap[key] = value;\n   }\n \n-  dynamic _deserialize(dynamic value, String targetType) {\n-    try {\n-      switch (targetType) {\n-        case 'String':\n-          return '$value';\n-        case 'int':\n-          return value is int ? value : int.parse('$value');\n-        case 'bool':\n-          return value is bool ? value : '$value'.toLowerCase() == 'true';\n-        case 'double':\n-          return value is double ? value : double.parse('$value');\n-        {{#models}}\n-          {{#model}}\n-        case '{{classname}}':\n-            {{#isEnum}}\n-          return new {{classname}}TypeTransformer().decode(value);\n-            {{/isEnum}}\n-            {{^isEnum}}\n-          return {{classname}}.fromJson(value);\n-            {{/isEnum}}\n-          {{/model}}\n-        {{/models}}\n-        default:\n-          {\n-            Match match;\n-            if (value is List &&\n-                (match = _regList.firstMatch(targetType)) != null) {\n-              var newTargetType = match[1];\n-              return value.map((v) => _deserialize(v, newTargetType)).toList();\n-            } else if (value is Map &&\n-                (match = _regMap.firstMatch(targetType)) != null) {\n-              var newTargetType = match[1];\n-              return Map.fromIterables(value.keys,\n-                  value.values.map((v) => _deserialize(v, newTargetType)));\n-            }\n-          }\n-      }\n-    } on Exception catch (e, stack) {\n-      throw ApiException.withInner(500, 'Exception during deserialization.', e, stack);\n-    }\n-    throw ApiException(500, 'Could not find a suitable class for deserialization');\n-  }\n-\n-  dynamic deserialize(String json, String targetType) {\n+  dynamic deserialize(String json, String targetType, {bool growable}) {\n     // Remove all spaces.  Necessary for reg expressions as well.\n-    targetType = targetType.replaceAll(' ', '');\n-\n-    if (targetType == 'String') return json;\n+    targetType = targetType.replaceAll(\" \", \"\");\n \n-    var decodedJson = jsonDecode(json);\n-    return _deserialize(decodedJson, targetType);\n+    return targetType == \"String\"\n+      ? json\n+      : _deserialize(jsonDecode(json), targetType, growable: true == growable);\n   }\n \n-  String serialize(Object obj) {\n-    String serialized = '';\n-    if (obj == null) {\n-      serialized = '';\n-    } else {\n-      serialized = json.encode(obj);\n-    }\n-    return serialized;\n-  }\n+  String serialize(Object obj) => obj == null ? \"\" : json.encode(obj);\n \n-  // We don't use a Map<String, String> for queryParams.\n-  // If collectionFormat is 'multi' a key might appear multiple times.\n-  Future<Response> invokeAPI(String path,\n-                             String method,\n-                             Iterable<QueryParam> queryParams,\n-                             Object body,\n-                             Map<String, String> headerParams,\n-                             Map<String, String> formParams,\n-                             String nullableContentType,\n-                             List<String> authNames) async {\n+  T getAuthentication<T extends Authentication>(String name) {\n+    final authentication = _authentications[name];\n+    return authentication is T ? authentication : null;\n+  }\n \n+  // We don\u2019t use a Map<String, String> for queryParams.\n+  // If collectionFormat is \"multi\" a key might appear multiple times.\n+  Future<Response> invokeAPI(\n+    String path,\n+    String method,\n+    Iterable<QueryParam> queryParams,\n+    Object body,\n+    Map<String, String> headerParams,\n+    Map<String, String> formParams,\n+    String nullableContentType,\n+    List<String> authNames,\n+  ) async {\n     _updateParamsForAuth(authNames, queryParams, headerParams);\n \n-    var ps = queryParams\n+    headerParams.addAll(_defaultHeaderMap);\n+\n+    final ps = queryParams\n       .where((p) => p.value != null)\n-      .map((p) => '${p.name}=${Uri.encodeQueryComponent(p.value)}');\n+      .map((p) => \"${p.name}=${Uri.encodeQueryComponent(p.value)}\");\n \n-    String queryString = ps.isNotEmpty ?\n-                         '?' + ps.join('&') :\n-                         '';\n+    final queryString = ps.isNotEmpty ? \"?\" + ps.join(\"&\") : \"\";\n \n-    String url = basePath + path + queryString;\n+    final url = \"$basePath$path$queryString\";\n \n-    headerParams.addAll(_defaultHeaderMap);\n     if (nullableContentType != null) {\n-      final contentType = nullableContentType;\n-      headerParams['Content-Type'] = contentType;\n+      headerParams[\"Content-Type\"] = nullableContentType;\n     }\n \n-    if(body is MultipartRequest) {\n+    if (body is MultipartRequest) {\n       var request = MultipartRequest(method, Uri.parse(url));\n       request.fields.addAll(body.fields);\n       request.files.addAll(body.files);\n       request.headers.addAll(body.headers);\n       request.headers.addAll(headerParams);\n       var response = await client.send(request);\n       return Response.fromStream(response);\n-    } else {\n-      var msgBody = nullableContentType == \"application/x-www-form-urlencoded\" ? formParams : serialize(body);\n-      final nullableHeaderParams = (headerParams.isEmpty)? null: headerParams;\n-      switch(method) {\n-        case \"POST\":\n-          return client.post(url, headers: nullableHeaderParams, body: msgBody);\n-        case \"PUT\":\n-          return client.put(url, headers: nullableHeaderParams, body: msgBody);\n-        case \"DELETE\":\n-          return client.delete(url, headers: nullableHeaderParams);\n-        case \"PATCH\":\n-          return client.patch(url, headers: nullableHeaderParams, body: msgBody);\n-        case \"HEAD\":\n-          return client.head(url, headers: nullableHeaderParams);\n+    }\n+\n+    final msgBody = nullableContentType == \"application/x-www-form-urlencoded\"\n+      ? formParams\n+      : serialize(body);\n+    final nullableHeaderParams = headerParams.isEmpty ? null : headerParams;\n+\n+    try {\n+      switch(method.toUpperCase()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4270565502636f89c97ee5581cd59534ff095fee"}, "originalPosition": 213}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1OTg3Mw==", "bodyText": "Here again, I've seen import ' (single quote), but this line has \" - inconsistent style.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#discussion_r499159873", "createdAt": "2020-10-03T16:04:02Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/api_test.mustache", "diffHunk": "@@ -1,13 +1,14 @@\n-import 'package:{{pubName}}/api.dart';\n-import 'package:test/test.dart';\n+{{>header}}\n+import \"package:{{{pubName}}}/api.dart\";\n+import \"package:test/test.dart\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4270565502636f89c97ee5581cd59534ff095fee"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTE1OTk0Mw==", "bodyText": "This import using ' again - which I think is correct, but pointing out lack of consistency.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#discussion_r499159943", "createdAt": "2020-10-03T16:05:04Z", "author": {"login": "agilob"}, "path": "modules/openapi-generator/src/main/resources/dart2/object_doc.mustache", "diffHunk": "@@ -1,14 +1,14 @@\n-{{#models}}{{#model}}# {{pubName}}.model.{{classname}}\n+{{#models}}{{#model}}# {{{pubName}}}.model.{{classname}}\n \n ## Load the model package\n ```dart\n-import 'package:{{pubName}}/api.dart';\n+import 'package:{{{pubName}}}/api.dart';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4270565502636f89c97ee5581cd59534ff095fee"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23491508584b376ea8881490a23e2710dce11af0", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/23491508584b376ea8881490a23e2710dce11af0", "committedDate": "2020-10-03T22:54:14Z", "message": "Use double-quotes instead of single-quotes, to be consistent with output of Dart generator."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c28af2199bcad1b9c998f711800df8a04f08835d", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/c28af2199bcad1b9c998f711800df8a04f08835d", "committedDate": "2020-10-03T22:56:30Z", "message": "Updated Petstore samples."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7161f31ff42cd7ca5181543050eb3b8271c3c9b2", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/7161f31ff42cd7ca5181543050eb3b8271c3c9b2", "committedDate": "2020-10-03T23:14:50Z", "message": "Wrap few more places with triple curly parentheses."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8c2b62a279a7fca24c0295524cac780e27c7bb9", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/c8c2b62a279a7fca24c0295524cac780e27c7bb9", "committedDate": "2020-10-03T23:16:04Z", "message": "Generated Petstore files."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d62cac60247b2bf9fa083518f4e2548e3dc4cae", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8d62cac60247b2bf9fa083518f4e2548e3dc4cae", "committedDate": "2020-10-04T09:05:09Z", "message": "Merge branch 'master' into refactor/dart2-template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cde1a8a296275d7f71da3120bfefc01927c0330", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/1cde1a8a296275d7f71da3120bfefc01927c0330", "committedDate": "2020-10-04T09:35:30Z", "message": "Revert to using single quotes, fix Java generator too."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8019aab87ab350820a0d74df331da26232f2a68a", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8019aab87ab350820a0d74df331da26232f2a68a", "committedDate": "2020-10-04T09:39:12Z", "message": "Generated Petstore files."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96ba839eea20c7cbf5a0f7eefd744c65ec47aff9", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/96ba839eea20c7cbf5a0f7eefd744c65ec47aff9", "committedDate": "2020-10-04T09:43:27Z", "message": "Lower case the content type value."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e761b0b09a6011d564cfb41803553bccd313f4c7", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e761b0b09a6011d564cfb41803553bccd313f4c7", "committedDate": "2020-10-04T09:44:38Z", "message": "Only lower-case content type when checking its value."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44e929dcf1da8f8dca91d0a87a32b30aa61ead28", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/44e929dcf1da8f8dca91d0a87a32b30aa61ead28", "committedDate": "2020-10-04T10:28:32Z", "message": "Generated files from running \"./bin/utils/ensure-up-to-date\"."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjEwMjQ5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#pullrequestreview-501610249", "createdAt": "2020-10-04T10:28:40Z", "commit": {"oid": "e761b0b09a6011d564cfb41803553bccd313f4c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjEwMzY5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#pullrequestreview-501610369", "createdAt": "2020-10-04T10:30:22Z", "commit": {"oid": "44e929dcf1da8f8dca91d0a87a32b30aa61ead28"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxMDozMDoyMlrOHcGnMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxMDozMDoyMlrOHcGnMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIzMDUxNA==", "bodyText": "dart1 has been removed now. looks like your branch isn't up to date with upstream master", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#discussion_r499230514", "createdAt": "2020-10-04T10:30:22Z", "author": {"login": "agilob"}, "path": "docs/generators/dart-dio.md", "diffHunk": "@@ -3,11 +3,10 @@ title: Config Options for dart-dio\n sidebar_label: dart-dio\n ---\n \n-These options may be applied as additional-properties (cli) or configOptions (plugins). Refer to [configuration docs](https://openapi-generator.tech/docs/configuration) for more details.\n-\n | Option | Description | Values | Default |\n | ------ | ----------- | ------ | ------- |\n |allowUnicodeIdentifiers|boolean, toggles whether unicode identifiers are allowed in names or not, default is false| |false|\n+|browserClient|Is the client browser based (for Dart 1.x only)| |null|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44e929dcf1da8f8dca91d0a87a32b30aa61ead28"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjEwNTE0", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#pullrequestreview-501610514", "createdAt": "2020-10-04T10:31:57Z", "commit": {"oid": "44e929dcf1da8f8dca91d0a87a32b30aa61ead28"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxMDozMTo1N1rOHcGokw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNFQxMDozMTo1N1rOHcGokw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTIzMDg2Nw==", "bodyText": "this flag has been removed too", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#discussion_r499230867", "createdAt": "2020-10-04T10:31:57Z", "author": {"login": "agilob"}, "path": "docs/generators/dart-dio.md", "diffHunk": "@@ -23,6 +22,7 @@ These options may be applied as additional-properties (cli) or configOptions (pl\n |sortModelPropertiesByRequiredFlag|Sort model properties to place required parameters before optional parameters.| |true|\n |sortParamsByRequiredFlag|Sort method arguments to place required parameters before optional parameters.| |true|\n |sourceFolder|Source folder for generated code| |null|\n+|supportDart2|Support Dart 2.x (Dart 1.x support has been deprecated)| |true|", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44e929dcf1da8f8dca91d0a87a32b30aa61ead28"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a5e77b370101aa6b85c0b05ca83aa5af3378b0c", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6a5e77b370101aa6b85c0b05ca83aa5af3378b0c", "committedDate": "2020-10-04T10:35:55Z", "message": "Remove outdated comments for Dart1."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8578a2aebc05e0265f8f3eac33aeb113e904b3cd", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8578a2aebc05e0265f8f3eac33aeb113e904b3cd", "committedDate": "2020-10-04T10:38:39Z", "message": "Regenerate Petstore samples for Dart."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7bab6a7b17dd6715f8a24e64e0a39099f8137f6", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a7bab6a7b17dd6715f8a24e64e0a39099f8137f6", "committedDate": "2020-10-04T11:00:41Z", "message": "Added a new option \"pubLibrary\"."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNjEyNzUz", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#pullrequestreview-501612753", "createdAt": "2020-10-04T11:04:32Z", "commit": {"oid": "a7bab6a7b17dd6715f8a24e64e0a39099f8137f6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03c1de7298bf72dfe2ff7efddc1a07a71d7619ce", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/03c1de7298bf72dfe2ff7efddc1a07a71d7619ce", "committedDate": "2020-10-05T11:24:02Z", "message": "Merge branch 'master' into refactor/dart2-template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7eaaf6dbd97b21cd7b2669520e445bb3c07b0c34", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/7eaaf6dbd97b21cd7b2669520e445bb3c07b0c34", "committedDate": "2020-10-05T18:22:23Z", "message": "Merge branch 'master' into refactor/dart2-template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89816202eb821f1ff5d584c7ea4aed01cb5cab6d", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/89816202eb821f1ff5d584c7ea4aed01cb5cab6d", "committedDate": "2020-10-06T11:03:12Z", "message": "Added support for (de)serializing a DateTime into an epoch value."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c6469937bd4ab5de311b6d0db4a329744474d19", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/5c6469937bd4ab5de311b6d0db4a329744474d19", "committedDate": "2020-10-06T11:09:24Z", "message": "Merge branch 'master' into refactor/dart2-template"}, "afterCommit": {"oid": "89816202eb821f1ff5d584c7ea4aed01cb5cab6d", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/89816202eb821f1ff5d584c7ea4aed01cb5cab6d", "committedDate": "2020-10-06T11:03:12Z", "message": "Added support for (de)serializing a DateTime into an epoch value."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a28ccd3fd11973c008af4121147688cafa01cffe", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a28ccd3fd11973c008af4121147688cafa01cffe", "committedDate": "2020-10-06T12:36:58Z", "message": "Merge branch 'master' into refactor/dart2-template"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcec0baded8f9b9e8f1d3c0bb99baa7ed7478b8a", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/bcec0baded8f9b9e8f1d3c0bb99baa7ed7478b8a", "committedDate": "2020-10-06T14:08:40Z", "message": "Make client variable a getter/setter, adjust docs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "991fcf6c7a7b99b81ef99b8826c5495789a78470", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/991fcf6c7a7b99b81ef99b8826c5495789a78470", "committedDate": "2020-10-06T14:26:02Z", "message": "Fixed a small error in class template."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "412df35d2b880cb5ef885860b629c0f595a21686", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/412df35d2b880cb5ef885860b629c0f595a21686", "committedDate": "2020-10-06T16:03:14Z", "message": "Fix Dart documentation in API classes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTQyNDg5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#pullrequestreview-503142489", "createdAt": "2020-10-06T16:20:16Z", "commit": {"oid": "412df35d2b880cb5ef885860b629c0f595a21686"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyMDoxNlrOHdPzgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNjoyMDoxNlrOHdPzgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQyOTY5Ng==", "bodyText": "I think this line can get more optimized to this:\nfinal str = (username ??  '') + ':' + (password ?? '');", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7585#discussion_r500429696", "createdAt": "2020-10-06T16:20:16Z", "author": {"login": "sbu-WBT"}, "path": "modules/openapi-generator/src/main/resources/dart2/auth/http_basic_auth.mustache", "diffHunk": "@@ -1,16 +1,12 @@\n-part of {{pubName}}.api;\n-\n+{{>header}}\n+{{>part_of}}\n class HttpBasicAuth implements Authentication {\n-\n-  String _username;\n-  String _password;\n+  String username;\n+  String password;\n \n   @override\n   void applyToParams(List<QueryParam> queryParams, Map<String, String> headerParams) {\n-    String str = (_username == null ? \"\" : _username) + \":\" + (_password == null ? \"\" : _password);\n-    headerParams[\"Authorization\"] = \"Basic \" + base64.encode(utf8.encode(str));\n+    final str = (username == null ? '' : username) + ':' + (password == null ? '' : password);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "412df35d2b880cb5ef885860b629c0f595a21686"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1878668cc17ee65249a94759eeb76882b3c575a", "author": {"user": {"login": "noordawod", "name": "Noor Dawod"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/c1878668cc17ee65249a94759eeb76882b3c575a", "committedDate": "2020-10-06T17:11:00Z", "message": "Simplify test in HTTP Basic auth, remove unused lint rule."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3083, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}