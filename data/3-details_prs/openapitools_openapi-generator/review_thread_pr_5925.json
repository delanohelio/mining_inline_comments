{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyOTk0Njk3", "number": 5925, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzozNjo0MVrOD0WfEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzowNjoyNlrOD03e9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MjIwOTQ2OnYy", "diffSide": "RIGHT", "path": "samples/client/petstore/R/R/api_client.R", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzozNjo0MVrOGJQO5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzozNjo0MVrOGJQO5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM1NjMyNw==", "bodyText": "The line indention doesn't look right to me. It seems to be using a mix of tabs and spaces", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#discussion_r412356327", "createdAt": "2020-04-21T17:36:41Z", "author": {"login": "wing328"}, "path": "samples/client/petstore/R/R/api_client.R", "diffHunk": "@@ -87,8 +93,43 @@ ApiClient  <- R6::R6Class(\n       if (!is.null(timeout)) {\n         self$timeout <- timeout\n       }\n+\n+      if (!is.null(retryStatusCodes)) {\n+        self$retryStatusCodes <- retryStatusCodes\n+      }\n+\t  \n+      if (!is.null(maxRetryAttempts)) {\n+        self$maxRetryAttempts <- maxRetryAttempts\n+      }\n     },\n+\n     CallApi = function(url, method, queryParams, headerParams, body, ...){\n+\n+      resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+      statusCode <- httr::status_code(resp)\n+\n+      if(is.null(self$maxRetryAttempts)){\n+        self$maxRetryAttempts = 3\n+      }\n+      \n+\t  if(!is.null(self$retryStatusCodes)){\n+\n+        for(i in 1: self$maxRetryAttempts){\n+          if(statusCode %in% self$retryStatusCodes){\n+            Sys.sleep((2 ^ i) + stats::runif(n = 1, min = 0, max = 1))\n+            resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+            statusCode <- httr::status_code(resp)\n+          }\n+          else{\n+            break;\n+          }\n+        }\t  \n+\t  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf085966566141f2fd7556b401e5e828637f47a8"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2Mjc4NzYxOnYy", "diffSide": "RIGHT", "path": "samples/client/petstore/R/R/api_client.R", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxOTo0NzoxOFrOGJVkcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxOTo0NzoxOFrOGJVkcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ0Mzc2MA==", "bodyText": "better have else in the previous line with }", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#discussion_r412443760", "createdAt": "2020-04-21T19:47:18Z", "author": {"login": "wing328"}, "path": "samples/client/petstore/R/R/api_client.R", "diffHunk": "@@ -87,8 +93,43 @@ ApiClient  <- R6::R6Class(\n       if (!is.null(timeout)) {\n         self$timeout <- timeout\n       }\n+\n+      if (!is.null(retryStatusCodes)) {\n+        self$retryStatusCodes <- retryStatusCodes\n+      }\n+\t  \n+      if (!is.null(maxRetryAttempts)) {\n+        self$maxRetryAttempts <- maxRetryAttempts\n+      }\n     },\n+\n     CallApi = function(url, method, queryParams, headerParams, body, ...){\n+\n+      resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+      statusCode <- httr::status_code(resp)\n+\n+      if(is.null(self$maxRetryAttempts)){\n+        self$maxRetryAttempts = 3\n+      }\n+      \n+\t  if(!is.null(self$retryStatusCodes)){\n+\n+        for(i in 1: self$maxRetryAttempts){\n+          if(statusCode %in% self$retryStatusCodes){\n+            Sys.sleep((2 ^ i) + stats::runif(n = 1, min = 0, max = 1))\n+            resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+            statusCode <- httr::status_code(resp)\n+          }\n+          else{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf085966566141f2fd7556b401e5e828637f47a8"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NzYxMTQxOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/r/api_client.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzowNTozMFrOGKBP3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzowNTozMFrOGKBP3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE1OTM4OQ==", "bodyText": "Typo error: maxRetryAttempts", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#discussion_r413159389", "createdAt": "2020-04-22T17:05:30Z", "author": {"login": "saigiridhar21"}, "path": "modules/openapi-generator/src/main/resources/r/api_client.mustache", "diffHunk": "@@ -24,6 +24,8 @@\n #' @field apiKeys\n #' @field accessToken\n #' @field timeout Default timeout in seconds\n+#' @field retryStatusCodes vector of status codes to retry\n+#' @field maxRetryAttemps maximum number of retries for the status codes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf085966566141f2fd7556b401e5e828637f47a8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NzYxNTg4OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/r/api_client.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzowNjoyNlrOGKBSjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzowNjoyNlrOGKBSjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE2MDA3OA==", "bodyText": "Very minor: Please fix the indentation.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5925#discussion_r413160078", "createdAt": "2020-04-22T17:06:26Z", "author": {"login": "saigiridhar21"}, "path": "modules/openapi-generator/src/main/resources/r/api_client.mustache", "diffHunk": "@@ -83,8 +89,43 @@ ApiClient  <- R6::R6Class(\n       if (!is.null(timeout)) {\n         self$timeout <- timeout\n       }\n+\n+      if (!is.null(retryStatusCodes)) {\n+        self$retryStatusCodes <- retryStatusCodes\n+      }\n+\t  \n+      if (!is.null(maxRetryAttempts)) {\n+        self$maxRetryAttempts <- maxRetryAttempts\n+      }\n     },\n+\n     CallApi = function(url, method, queryParams, headerParams, body, ...){\n+\n+      resp <- self$Execute(url, method, queryParams, headerParams, body, ...)\n+      statusCode <- httr::status_code(resp)\n+\n+      if(is.null(self$maxRetryAttempts)){\n+        self$maxRetryAttempts = 3\n+      }\n+      \n+\t  if(!is.null(self$retryStatusCodes)){\n+\n+        for(i in 1: self$maxRetryAttempts){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf085966566141f2fd7556b401e5e828637f47a8"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3539, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}