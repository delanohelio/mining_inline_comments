{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3ODU3NDk5", "number": 5809, "title": "[codegen][Python-experimental] Discriminator NPE fix, handle 'null' type, #4906 enhancements", "bodyText": "When processing discriminators of composed schemas, handle scenario when composed schema has 'null' type\nRemove extraneous characters in comments\nAdd traversal of discriminator mappings in case oneOf child schema indirectly refers to discriminator.\nThere is no need to duplicate the get_discriminator_class() code for every generated class.\nAdd unit test when discriminator is not specified in payload and handle that scenario in the get_discriminator_class() function. IMO, another PR should be provided to provide a better error message when the input data does not contain the discriminator property.\n\nThis PR along these:\n\nAdd discriminator memoization + move discriminator logic to the new method and allow deserialization through 2+ discriminators\nImprove composed schema discriminator map\n\nwill resolve #4912\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-04-02T23:26:05Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809", "merged": true, "mergeCommit": {"oid": "c1d47a580b337c16e24d09e2170b7322f3292614"}, "closed": true, "closedAt": "2020-05-11T23:57:50Z", "author": {"login": "sebastien-rosset"}, "timelineItems": {"totalCount": 117, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABce_Oh7AH2gAyMzk3ODU3NDk5OmExNmQ1MDdiZDc2Zjk0ODFhMDJhZTAwYzY5YzA4ZTU4MzJhNGY5OGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgYsNSAFqTQwOTYwOTk2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a16d507bd76f9481a02ae00c69c08e5832a4f98d", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a16d507bd76f9481a02ae00c69c08e5832a4f98d", "committedDate": "2020-05-07T15:43:42Z", "message": "improve get_discriminator function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2254a96b8940f5930c402952cba7d1db811f54f5", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/2254a96b8940f5930c402952cba7d1db811f54f5", "committedDate": "2020-05-07T15:44:28Z", "message": "Run sample scripts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c8aeea1220685503d2ea46e7eee59e40024ad98", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3c8aeea1220685503d2ea46e7eee59e40024ad98", "committedDate": "2020-05-07T16:11:54Z", "message": "Merge branch 'master' of github.com:CiscoM31/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07cfeb020a2ecc70579d3d3ed4d3982feaad4c38", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/07cfeb020a2ecc70579d3d3ed4d3982feaad4c38", "committedDate": "2020-05-07T18:21:44Z", "message": "add unit tests for recursive get_discriminator_class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f68941dbe21c97812473bbcbbc72803108ecab20", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/f68941dbe21c97812473bbcbbc72803108ecab20", "committedDate": "2020-05-08T03:59:43Z", "message": "Merge branch 'master' of github.com:CiscoM31/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc7f0d51ede6c799bec69110aefb476673e56e51", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/cc7f0d51ede6c799bec69110aefb476673e56e51", "committedDate": "2020-05-08T04:19:01Z", "message": "fix unit test issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab11452a4fd402132141c3b391d537f34cf25fa1", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ab11452a4fd402132141c3b391d537f34cf25fa1", "committedDate": "2020-05-08T14:39:15Z", "message": "Merge branch 'master' of github.com:CiscoM31/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "360b1a1941af0b0f9c8b789fd781cf1dee2d3d3d", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/360b1a1941af0b0f9c8b789fd781cf1dee2d3d3d", "committedDate": "2020-05-08T14:47:15Z", "message": "fix formatting issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d561bcdb0923426948ea1d9371488bfcca2a2670", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/d561bcdb0923426948ea1d9371488bfcca2a2670", "committedDate": "2020-05-08T17:52:33Z", "message": "fix formatting issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71c5a8d7e95475e5e9e87ed0771592946428a685", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/71c5a8d7e95475e5e9e87ed0771592946428a685", "committedDate": "2020-05-08T18:32:18Z", "message": "fix formatting issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b2c41f606968ddc53c5954aba425828b3b30fbc", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6b2c41f606968ddc53c5954aba425828b3b30fbc", "committedDate": "2020-05-08T19:23:44Z", "message": "fix index out of range exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d634f05e6279320f439254c698cda49d212e45dc", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/d634f05e6279320f439254c698cda49d212e45dc", "committedDate": "2020-05-08T20:35:56Z", "message": "fix formatting issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43e94ed59d0f7f5a9c3aaf877db152297f83514e", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/43e94ed59d0f7f5a9c3aaf877db152297f83514e", "committedDate": "2020-05-08T21:20:08Z", "message": "fix formatting issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b587d59ceea3e2dce0378d28c9e681ee603bbcf2", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/b587d59ceea3e2dce0378d28c9e681ee603bbcf2", "committedDate": "2020-05-08T21:26:26Z", "message": "fix formatting issues. Finally figured out how to check formatting in local workspace"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4Nzk0Nzk4", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#pullrequestreview-408794798", "createdAt": "2020-05-10T23:51:34Z", "commit": {"oid": "b587d59ceea3e2dce0378d28c9e681ee603bbcf2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4Nzk1NzY5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#pullrequestreview-408795769", "createdAt": "2020-05-11T00:01:06Z", "commit": {"oid": "b587d59ceea3e2dce0378d28c9e681ee603bbcf2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwMDowMTowNlrOGTIzEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwMDowMTowNlrOGTIzEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjcyMDI3NQ==", "bodyText": "We are not yet handling the use case where discr_name is not in model_class.discriminator here.\nIf we hit that case, then the discriminator propertyName is different than what we are looking for and we should return None early. Here, can you add:\nelse:\n    # the discr_name is not what we are looking for, we did not find the class that we are looking for\n    return None\n\nOr maybe we should make it the clearer:\nif discr_name not in model_class.discriminator:\n    # the discr_name is not what we are looking for, we did not find the class that we are looking for\n    return None\nclass_name_to_discr_class = model_class.discriminator[discr_name]\nused_model_class = class_name_to_discr_class.get(discr_value)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#discussion_r422720275", "createdAt": "2020-05-11T00:01:06Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_utils.mustache", "diffHunk": "@@ -622,6 +691,56 @@ def deserialize_primitive(data, klass, path_to_item):\n         )\n \n \n+def get_discriminator_class(model_class,\n+                            discr_name,\n+                            discr_value, cls_visited):\n+    \"\"\"Returns the child class specified by the discriminator.\n+\n+    Args:\n+        model_class (OpenApiModel): the model class.\n+        discr_name (string): the name of the discriminator property.\n+        discr_value (any): the discriminator value.\n+        cls_visited (list): list of model classes that have been visited.\n+            Used to determine the discriminator class without\n+            visiting circular references indefinitely.\n+\n+    Returns:\n+        used_model_class (class/None): the chosen child class that will be used\n+            to deserialize the data, for example dog.Dog.\n+            If a class is not found, None is returned.\n+    \"\"\"\n+\n+    if model_class in cls_visited:\n+        # The class has already been visited and no suitable class was found.\n+        return None\n+    cls_visited.append(model_class)\n+    used_model_class = None\n+    if discr_name in model_class.discriminator:\n+        class_name_to_discr_class = model_class.discriminator[discr_name]\n+        used_model_class = class_name_to_discr_class.get(discr_value)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b587d59ceea3e2dce0378d28c9e681ee603bbcf2"}, "originalPosition": 160}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NjA5OTYx", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#pullrequestreview-409609961", "createdAt": "2020-05-11T23:57:40Z", "commit": {"oid": "b587d59ceea3e2dce0378d28c9e681ee603bbcf2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f889df85828c3e1a9c4b0b60589cfe9c80684d8", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3f889df85828c3e1a9c4b0b60589cfe9c80684d8", "committedDate": "2020-03-26T16:38:10Z", "message": "Adds addComposedMappedModels and testComposedSchemaOneOfDiscriminatorMap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5e4bfda2d49281570d77947e6144a3095041edb", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e5e4bfda2d49281570d77947e6144a3095041edb", "committedDate": "2020-03-26T16:38:11Z", "message": "Requires that discriminators be required properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d8a7498955e7102768c9452f26ccd51ce5afcf4", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8d8a7498955e7102768c9452f26ccd51ce5afcf4", "committedDate": "2020-03-26T16:38:11Z", "message": "Strengthens discriminaotr validation, adds better error messages, adds schema oneof samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cc1329e783b39635a11cbf6ca7243c00fd43224", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/7cc1329e783b39635a11cbf6ca7243c00fd43224", "committedDate": "2020-03-26T16:38:11Z", "message": "Adds oneOf and anyOf invalidDiscriminator tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "662eaffea7f95660f1cc13c4f3512e0397dd5be3", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/662eaffea7f95660f1cc13c4f3512e0397dd5be3", "committedDate": "2020-03-26T16:41:33Z", "message": "Runs ensure up to date"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5044db9b8402b23b118eb09cd33302ce0d8f29d8", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/5044db9b8402b23b118eb09cd33302ce0d8f29d8", "committedDate": "2020-03-26T16:55:51Z", "message": "Updates incorrect addOneOfInterfaceModel invocation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcd45406ec048643f6e1b90de843ec5ecbde9895", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/dcd45406ec048643f6e1b90de843ec5ecbde9895", "committedDate": "2020-03-26T18:16:22Z", "message": "Runs ensure-up-to-date"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de8e694d7c80f439137699b328d3d59c77c14386", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/de8e694d7c80f439137699b328d3d59c77c14386", "committedDate": "2020-04-01T19:38:08Z", "message": "Merge branch 'issue_4904_fix_composed_schema_discriminator_map' of https://github.com/spacether/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a0d479d98ac775afb93313f85987c07ff42063d", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6a0d479d98ac775afb93313f85987c07ff42063d", "committedDate": "2020-04-01T19:39:06Z", "message": "Fix NPE when at least one extension is defined but not x-discriminator-value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "778d250bd9391d2e891637056ab07b6eba21740b", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/778d250bd9391d2e891637056ab07b6eba21740b", "committedDate": "2020-04-01T22:25:27Z", "message": "Adds addComposedMappedModels and testComposedSchemaOneOfDiscriminatorMap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff6f1ffd375917ba19d02286954b0ae82ce9c014", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ff6f1ffd375917ba19d02286954b0ae82ce9c014", "committedDate": "2020-04-01T22:27:26Z", "message": "Requires that discriminators be required properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d4910ab3f301be1be356fc0a14c67e01571a673", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/4d4910ab3f301be1be356fc0a14c67e01571a673", "committedDate": "2020-04-01T22:27:26Z", "message": "Strengthens discriminaotr validation, adds better error messages, adds schema oneof samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78e171aaa3d00a9029f596eabd59ea9d482ba064", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/78e171aaa3d00a9029f596eabd59ea9d482ba064", "committedDate": "2020-04-01T22:27:27Z", "message": "Adds oneOf and anyOf invalidDiscriminator tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a089a457ae68d51fc7037f6015e2f5b33a89f61f", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a089a457ae68d51fc7037f6015e2f5b33a89f61f", "committedDate": "2020-04-01T22:28:01Z", "message": "Updates incorrect addOneOfInterfaceModel invocation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9461ab49bd0dc86068b1bb125a773d0072e1dd8c", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/9461ab49bd0dc86068b1bb125a773d0072e1dd8c", "committedDate": "2020-04-01T22:28:02Z", "message": "Runs ensure-up-to-date"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "035436f960c508d9b73fa2acaebec3f6e0ea7195", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/035436f960c508d9b73fa2acaebec3f6e0ea7195", "committedDate": "2020-04-01T22:28:02Z", "message": "Adds updates from Sebastien Rosset"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75ff63c1e606b563dbe559b2bc191de62659a7ff", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/75ff63c1e606b563dbe559b2bc191de62659a7ff", "committedDate": "2020-04-02T02:28:00Z", "message": "Removes newlines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41de5b54ebfc246e5a2ccc3b945bc3dd3d042633", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/41de5b54ebfc246e5a2ccc3b945bc3dd3d042633", "committedDate": "2020-04-02T05:29:36Z", "message": "Add documentation and new getValidDiscriminatorMappings function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fb94f272d4ce7d5e998ccd25e684772504d6b44", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8fb94f272d4ce7d5e998ccd25e684772504d6b44", "committedDate": "2020-04-02T05:47:28Z", "message": "Add documentation and new getValidDiscriminatorMappings function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f31712b42e78bda1db3039995b234c17366c6e85", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/f31712b42e78bda1db3039995b234c17366c6e85", "committedDate": "2020-04-02T05:49:04Z", "message": "Add documentation and new getValidDiscriminatorMappings function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf53e4f5b4106d46aaae85dd9d023bf89bedc082", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/bf53e4f5b4106d46aaae85dd9d023bf89bedc082", "committedDate": "2020-04-02T05:49:05Z", "message": "Add documentation and new getValidDiscriminatorMappings function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc395481a96c28dbbbbeebe72f55c6cb9a7b4680", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/dc395481a96c28dbbbbeebe72f55c6cb9a7b4680", "committedDate": "2020-04-02T05:51:04Z", "message": "Add documentation and new getValidDiscriminatorMappings function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af27e33c159e08ab443ea0c4b50e4df928188879", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/af27e33c159e08ab443ea0c4b50e4df928188879", "committedDate": "2020-04-02T14:42:37Z", "message": "Add documentation and new getValidDiscriminatorMappings function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80745cf59939439ca270ee2002a3081227cf4e16", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/80745cf59939439ca270ee2002a3081227cf4e16", "committedDate": "2020-04-02T15:17:34Z", "message": "Add documentation and new getValidDiscriminatorMappings function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95342892c44b9a52efd1b40e56dbfe0071e296bd", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/95342892c44b9a52efd1b40e56dbfe0071e296bd", "committedDate": "2020-04-02T23:22:54Z", "message": "throw exception if discriminator mappingName argument is null"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f73adfa764e55505ed3f9a86ef3d01cec085f94", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/7f73adfa764e55505ed3f9a86ef3d01cec085f94", "committedDate": "2020-04-02T23:24:44Z", "message": "handle scenario when composed schema has 'null' type"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34c4c09ef49cea7519e3cf7c1e7af8619560d706", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/34c4c09ef49cea7519e3cf7c1e7af8619560d706", "committedDate": "2020-04-02T23:25:10Z", "message": "remove extraneous characters in comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzE0NDk1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#pullrequestreview-387714495", "createdAt": "2020-04-04T16:38:57Z", "commit": {"oid": "34c4c09ef49cea7519e3cf7c1e7af8619560d706"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNjozODo1N1rOGAzDFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNjozODo1N1rOGAzDFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ4OTU1OA==", "bodyText": "Where are we using this? I can't find a call site.\nIf we aren't using it, why include it?\nOur users can already iterate through discriminator MappedModels.\nIf we want to provide an easier way to do this, why not put it in the CodegenDiscriminator class instead?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#discussion_r403489558", "createdAt": "2020-04-04T16:38:57Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/CodegenModel.java", "diffHunk": "@@ -203,6 +211,63 @@ public void setDiscriminator(CodegenDiscriminator discriminator) {\n         this.discriminator = discriminator;\n     }\n \n+    /**\n+     * Returns a list of allowed discriminator mapping values for this schema object.\n+     * \n+     * The list of all possible schema discriminator mapping values is obtained\n+     * from explicit discriminator mapping values in the OpenAPI document, and from\n+     * inherited discriminators through oneOf, allOf, anyOf.\n+     * For example, a discriminator may be defined in a 'Pet' schema as shown below.\n+     * The Dog and Cat schemas inherit the discriminator through the allOf reference.\n+     * In the 'Pet' schema, the supported discriminator mapping values for the\n+     * 'objectType' properties are 'Dog' and 'Cat'.\n+     * The allowed discriminator mapping value for the Dog schema is 'Dog'.\n+     * The allowed discriminator mapping value for the Cat schema is 'Dog'.\n+     * \n+     * Pet:\n+     *   type: object\n+     *   discriminator:\n+     *     propertyName: objectType\n+     *   required:\n+     *     - objectType\n+     *   properties:\n+     *     objectType:\n+     *     type: string\n+     * Dog:\n+     *   allOf:\n+     *   - $ref: '#/components/schemas/Pet'\n+     *   - type: object\n+     *     properties:\n+     *       p1:\n+     *         type: string\n+     * Cat:\n+     *   allOf:\n+     *   - $ref: '#/components/schemas/Pet'\n+     *   - type: object\n+     *     properties:\n+     *       p2:\n+     *         type: string\n+     * \n+     * @return the list of allowed discriminator mapping values.\n+     */\n+    public List<String> getAllowedDiscriminatorMappingValues() {\n+        List<String> mappingValues = new ArrayList<String>();\n+        for (CodegenDiscriminator.MappedModel mm : discriminator.getMappedModels()) {\n+            if (name.equals(mm.getModelName())) {\n+                mappingValues.add(mm.getMappingName());\n+            }\n+        }     \n+        return mappingValues;   \n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34c4c09ef49cea7519e3cf7c1e7af8619560d706"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7f1bce202ff72ab096548cc20094cdeda9afae8", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/c7f1bce202ff72ab096548cc20094cdeda9afae8", "committedDate": "2020-04-07T15:27:29Z", "message": "Merge branch 'master' into issue_4904_fix_composed_schema_discriminator_map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b389fa291e0c319db070c424a3c1225b94b1373", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/2b389fa291e0c319db070c424a3c1225b94b1373", "committedDate": "2020-04-07T18:10:43Z", "message": "Uses df.isString"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90593ce4e90eca3ffaca398810c638e0624ea357", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/90593ce4e90eca3ffaca398810c638e0624ea357", "committedDate": "2020-04-07T18:11:01Z", "message": "Merge branch 'issue_4904_fix_composed_schema_discriminator_map' of github.com:spacether/openapi-generator into issue_4904_fix_composed_schema_discriminator_map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe1669a1ac4269a7bc7fed064975974a65b4f6be", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/fe1669a1ac4269a7bc7fed064975974a65b4f6be", "committedDate": "2020-04-07T23:25:15Z", "message": "sync from upstream branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6492b76aa8332609ed82096999928da9f5242f89", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6492b76aa8332609ed82096999928da9f5242f89", "committedDate": "2020-04-07T23:26:52Z", "message": "Traverse discriminators to resolve discriminator mapping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf0e3a32d69dba5828af54d9ed5158b30989add4", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/bf0e3a32d69dba5828af54d9ed5158b30989add4", "committedDate": "2020-04-08T06:11:38Z", "message": "Fixes tests be correctly setting df.isString"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86d1fc32cf718beb2f34f8606f9172d519ff250a", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/86d1fc32cf718beb2f34f8606f9172d519ff250a", "committedDate": "2020-04-08T13:27:11Z", "message": "Merge branch 'master' of github.com:CiscoM31/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1208da860541872b8dc1363d425330cdb94f7658", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/1208da860541872b8dc1363d425330cdb94f7658", "committedDate": "2020-04-08T13:27:56Z", "message": "Merge branch 'issue_4904_fix_composed_schema_discriminator_map' of https://github.com/spacether/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b65aca8d43eb16beabf0723af92efa4e761ba72f", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/b65aca8d43eb16beabf0723af92efa4e761ba72f", "committedDate": "2020-04-08T13:55:25Z", "message": "Remove unused method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "250cd145daa37f07e5b9e5d8e2d371c71f8ae8a3", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/250cd145daa37f07e5b9e5d8e2d371c71f8ae8a3", "committedDate": "2020-04-10T17:30:19Z", "message": "Updates discriminatorExplicitMappingVerbose description per PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba21728de65031d6f2848d1c422bd4d8ef807edd", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ba21728de65031d6f2848d1c422bd4d8ef807edd", "committedDate": "2020-04-10T17:55:41Z", "message": "Adds description of how mappedModels is populated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a98f6e68cd64a3363052019367b65c11653243c", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/7a98f6e68cd64a3363052019367b65c11653243c", "committedDate": "2020-04-10T22:24:57Z", "message": "Merge branch 'issue_4904_fix_composed_schema_discriminator_map' of https://github.com/spacether/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c50563918fcbde4e2e6a4cb4368fc11eecd3539e", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/c50563918fcbde4e2e6a4cb4368fc11eecd3539e", "committedDate": "2020-04-10T22:25:15Z", "message": "Merge branch 'master' of github.com:CiscoM31/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd0113acf6ad4c2c2d28da5185b16bb20bff280f", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/dd0113acf6ad4c2c2d28da5185b16bb20bff280f", "committedDate": "2020-04-10T22:28:54Z", "message": "Merge branch 'issue_4904_fix_composed_schema_discriminator_map' of https://github.com/spacether/openapi-generator into issue_4904_fix_composed_schema_discriminator_map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b427fe85a9a7e472fda7f99a26ebf7432b316ff", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8b427fe85a9a7e472fda7f99a26ebf7432b316ff", "committedDate": "2020-04-10T22:33:01Z", "message": "Merge branch 'issue_4904_fix_composed_schema_discriminator_map' of github.com:CiscoM31/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d18729570a223332cbf9601abf02b3bd0389f4fc", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/d18729570a223332cbf9601abf02b3bd0389f4fc", "committedDate": "2020-04-12T18:16:58Z", "message": "Adds the suggestion exception raising when a MappedModel mappingName is null"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "721a72072fe88b6dcb551ae8f025d5413522abb7", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/721a72072fe88b6dcb551ae8f025d5413522abb7", "committedDate": "2020-04-14T04:53:25Z", "message": "Merge branch 'issue_4904_fix_composed_schema_discriminator_map' of https://github.com/spacether/openapi-generator into issue_4904_fix_composed_schema_discriminator_map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01f7e5b077978f8c1d6ebc1a3a917ab14adbfa89", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/01f7e5b077978f8c1d6ebc1a3a917ab14adbfa89", "committedDate": "2020-04-14T04:54:44Z", "message": "Merge branch 'issue_4904_fix_composed_schema_discriminator_map' of github.com:CiscoM31/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d62e7bf3503201fba509490dd27132791de12a2", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/1d62e7bf3503201fba509490dd27132791de12a2", "committedDate": "2020-04-14T16:57:44Z", "message": "Resolves merge conflicts in docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29bc8e65542eaad84f277957c14028a7fe44de84", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/29bc8e65542eaad84f277957c14028a7fe44de84", "committedDate": "2020-04-16T00:37:54Z", "message": "Actually resolves merge conflicts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTIxMzEw", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#pullrequestreview-395921310", "createdAt": "2020-04-18T15:02:25Z", "commit": {"oid": "01f7e5b077978f8c1d6ebc1a3a917ab14adbfa89"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxNTowMjoyNVrOGHrrhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxNTowNjozMFrOGHrtsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcwODg3MQ==", "bodyText": "This option needs clarification since it's currently doing a lot.\n\nCan we remove the \"verbose\" since that's not really relevant to the user?\nThe term mapping would indicate to users who are familiar with our options that this would take a string in the format key=value, which is not the case.\nThe option is triggering OpenAPI 3.x logic, but doesn't indicate that clearly here.\n\nMight I recommend changing this to something more like:\n@Option(name = {\"--legacy-discriminators\"}, title = \"Support legacy logic for evaluating discriminators\", description = CodegenConstants.DISCRIMINATOR_EXPLICIT_MAPPING_VERBOSE_DESC)\nprivate Boolean legacyDiscriminators;\n\nThis value would need to default to true until the new logic becomes default (I don't recall if it's now default or not).\nThe value would then have to be applied to CodegenConfigurator, which is not done in Generate.java here. The same default would have to be done in the Maven and Gradle plugins, with a task to add the feature option to those. We also have a new SBT plugin (pending first release) where this would have to be added.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#discussion_r410708871", "createdAt": "2020-04-18T15:02:25Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator-cli/src/main/java/org/openapitools/codegen/cmd/Generate.java", "diffHunk": "@@ -240,6 +240,9 @@\n     @Option(name = {\"--generate-alias-as-model\"}, title = \"generate alias (array, map) as model\", description = CodegenConstants.GENERATE_ALIAS_AS_MODEL_DESC)\n     private Boolean generateAliasAsModel;\n \n+    @Option(name = {\"--discriminator-explicit-mapping-verbose\"}, title = \"explicitly define a discriminator on all models which have one, add verbose mapping to that discriminator, validate discriminators\", description = CodegenConstants.DISCRIMINATOR_EXPLICIT_MAPPING_VERBOSE_DESC)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01f7e5b077978f8c1d6ebc1a3a917ab14adbfa89"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcwOTEzNw==", "bodyText": "Potential NPE. You protect in the constructor, but not in the property setter.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#discussion_r410709137", "createdAt": "2020-04-18T15:03:54Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/CodegenDiscriminator.java", "diffHunk": "@@ -63,15 +90,36 @@ public void setMappedModels(Set<MappedModel> mappedModels) {\n         this.mappedModels = mappedModels;\n     }\n \n-    public static class MappedModel {\n+    /**\n+     * An object to hold discriminator mappings between payload values and schema names or\n+     * references.\n+     *\n+     * In the OpenAPI document, the discriminator \"mapping\" attribute is optional.\n+     * In scenarios where the value of the discriminator field does not match the schema name\n+     * or implicit mapping is not possible, an optional mapping definition MAY be used.\n+     * In OpenAPITools codegen, the MappedModel is the union of all the discriminator mappings,\n+     * both explicitly defined in the OpenAPI document and inherited from oneOf/allOf/anyOf.\n+     */\n+    public static class MappedModel implements Comparable<MappedModel>{\n+        // The value of the discriminator property in the payload.\n         private String mappingName;\n+        // The OAS schema name. It is obtained from the OAS document, and the string value\n+        // is converted to a sanitized, internal representation within codegen.\n         private String modelName;\n \n         public MappedModel(String mappingName, String modelName) {\n+            if (mappingName == null) {\n+                throw new RuntimeException(\"Discriminator mapping name cannot be null for model '\" + modelName + \"'\");\n+            }\n             this.mappingName = mappingName;\n             this.modelName = modelName;\n         }\n \n+        @Override\n+        public int compareTo(MappedModel other) {\n+            return getMappingName().compareTo(other.getMappingName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01f7e5b077978f8c1d6ebc1a3a917ab14adbfa89"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcwOTMyMQ==", "bodyText": "This should not be marked as protected as it reduces maintainability. If necessary for tests, please remove private to make it package private.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#discussion_r410709321", "createdAt": "2020-04-18T15:05:20Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultGenerator.java", "diffHunk": "@@ -156,7 +156,7 @@ private Boolean getGeneratorPropertyDefaultSwitch(final String key, final Boolea\n         return defaultValue;\n     }\n \n-    private void configureGeneratorProperties() {\n+    protected void configureGeneratorProperties() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01f7e5b077978f8c1d6ebc1a3a917ab14adbfa89"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcwOTQyNg==", "bodyText": "This should not be marked protected.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#discussion_r410709426", "createdAt": "2020-04-18T15:06:30Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultGenerator.java", "diffHunk": "@@ -394,7 +394,7 @@ private void generateModel(List<File> files, Map<String, Object> models, String\n     }\n \n     @SuppressWarnings(\"unchecked\")\n-    private void generateModels(List<File> files, List<Object> allModels, List<String> unusedModels) {\n+    protected void generateModels(List<File> files, List<Object> allModels, List<String> unusedModels) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01f7e5b077978f8c1d6ebc1a3a917ab14adbfa89"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca0fa6e5248f8b5ca537ce528a17ec9c40a7ab56", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ca0fa6e5248f8b5ca537ce528a17ec9c40a7ab56", "committedDate": "2020-04-18T16:05:29Z", "message": "Merge branch 'issue_4904_fix_composed_schema_discriminator_map' of https://github.com/spacether/openapi-generator into issue_4904_fix_composed_schema_discriminator_map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7aa07b5818fa0d222234fc2ee792b4fbc481ba97", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/7aa07b5818fa0d222234fc2ee792b4fbc481ba97", "committedDate": "2020-04-18T16:05:53Z", "message": "Merge branch 'issue_4904_fix_composed_schema_discriminator_map' of github.com:CiscoM31/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7a5ccaaeb971ddce9badd8c497c1becda9aa93f", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/a7a5ccaaeb971ddce9badd8c497c1becda9aa93f", "committedDate": "2020-04-23T04:48:58Z", "message": "Adds addComposedMappedModels and testComposedSchemaOneOfDiscriminatorMap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb6c4bd20deb5c7bf7bc53647ff070a224dbc835", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/cb6c4bd20deb5c7bf7bc53647ff070a224dbc835", "committedDate": "2020-04-23T04:48:59Z", "message": "Requires that discriminators be required properties"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53ba1fa0e6a259406cfbfb91dea7b672f7b9bfb3", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/53ba1fa0e6a259406cfbfb91dea7b672f7b9bfb3", "committedDate": "2020-04-23T04:48:59Z", "message": "Strengthens discriminaotr validation, adds better error messages, adds schema oneof samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23c5c3882486eacbf51b8a0db71ec8b9391dd015", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/23c5c3882486eacbf51b8a0db71ec8b9391dd015", "committedDate": "2020-04-23T04:48:59Z", "message": "Adds oneOf and anyOf invalidDiscriminator tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3b6522282c59d036f1b83fdc9e59e89cd1a5187", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e3b6522282c59d036f1b83fdc9e59e89cd1a5187", "committedDate": "2020-04-23T04:49:00Z", "message": "Updates incorrect addOneOfInterfaceModel invocation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b85b2d55d5233bed6cb19364dfe8356dee7787f", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/7b85b2d55d5233bed6cb19364dfe8356dee7787f", "committedDate": "2020-04-23T04:49:00Z", "message": "Runs ensure-up-to-date"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53ab46b6f11a11c39b6dbac7f87ffeb6ef333f93", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/53ab46b6f11a11c39b6dbac7f87ffeb6ef333f93", "committedDate": "2020-04-23T04:49:00Z", "message": "Adds updates from Sebastien Rosset"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7242b940046082a5de6736417c02dc00677b5d2a", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/7242b940046082a5de6736417c02dc00677b5d2a", "committedDate": "2020-04-23T04:49:00Z", "message": "Removes newlines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddefbea34453b47de69a474b2d87670f06792baf", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ddefbea34453b47de69a474b2d87670f06792baf", "committedDate": "2020-04-23T04:49:01Z", "message": "Uses df.isString"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "831c99a892a785adb148b6c2192b13e74759faf6", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/831c99a892a785adb148b6c2192b13e74759faf6", "committedDate": "2020-04-23T04:49:01Z", "message": "Fixes tests be correctly setting df.isString"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ab57c86f9a888a6921846f8efbaf818ee4afb40", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6ab57c86f9a888a6921846f8efbaf818ee4afb40", "committedDate": "2020-04-23T04:53:35Z", "message": "Updates discriminatorExplicitMappingVerbose description per PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "607f638301fec5019b64e38d2e2faab46cdf75e6", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/607f638301fec5019b64e38d2e2faab46cdf75e6", "committedDate": "2020-04-23T04:53:35Z", "message": "Adds description of how mappedModels is populated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc23d3e2b4a78c68b6a54a80b584cb79235663ba", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/bc23d3e2b4a78c68b6a54a80b584cb79235663ba", "committedDate": "2020-04-23T04:53:35Z", "message": "Adds the suggestion exception raising when a MappedModel mappingName is null"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "052bccc86b7ff84f7c7b255befae6938fcbb1b77", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/052bccc86b7ff84f7c7b255befae6938fcbb1b77", "committedDate": "2020-04-23T04:57:58Z", "message": "Actually resolves merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89c8025dc75af769225802840209ead5a7277a5d", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/89c8025dc75af769225802840209ead5a7277a5d", "committedDate": "2020-04-23T04:57:59Z", "message": "Switches two methods to package private because they are needed for testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "936c0b1a3b4fa675791190a3dcab594e3e1c6ad6", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/936c0b1a3b4fa675791190a3dcab594e3e1c6ad6", "committedDate": "2020-04-23T04:57:59Z", "message": "Allow nulls in MappedModel.getMappingName"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e7a0ca3445d5d3edd2d2582976187da5142223d", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/9e7a0ca3445d5d3edd2d2582976187da5142223d", "committedDate": "2020-04-23T05:51:34Z", "message": "Merge branch 'issue_4904_fix_composed_schema_discriminator_map' of https://github.com/spacether/openapi-generator into issue_4904_fix_composed_schema_discriminator_map"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79ec2d5a10eb023d28f50e7e7613bce3f4e5cb4a", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/79ec2d5a10eb023d28f50e7e7613bce3f4e5cb4a", "committedDate": "2020-04-23T06:25:36Z", "message": "resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c571f047c2eff98defb4db7d34ea9d4a19407c5", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/6c571f047c2eff98defb4db7d34ea9d4a19407c5", "committedDate": "2020-04-23T14:42:20Z", "message": "Remove exception when mappingName is null value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b8269cc816c5452fd8dd9140c75ecf32c6d1f10", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/7b8269cc816c5452fd8dd9140c75ecf32c6d1f10", "committedDate": "2020-04-23T14:42:58Z", "message": "Remove exception when mappingName is null value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f106c679550a3e2db53b2493f4f48a3a85787c43", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/f106c679550a3e2db53b2493f4f48a3a85787c43", "committedDate": "2020-04-24T16:26:11Z", "message": "resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79bbab8741ca98b89f029ae5a96bde03458ad219", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/79bbab8741ca98b89f029ae5a96bde03458ad219", "committedDate": "2020-04-24T16:38:47Z", "message": "resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55b6ff457cb61876b837d56ea76e59554d5fcd69", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/55b6ff457cb61876b837d56ea76e59554d5fcd69", "committedDate": "2020-04-24T16:40:43Z", "message": "resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46669f100b82643f1405f9ed2fd1f34fd1d1caf9", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/46669f100b82643f1405f9ed2fd1f34fd1d1caf9", "committedDate": "2020-04-24T16:49:50Z", "message": "Execute scripts in the bin directory"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMTM0NjU0", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#pullrequestreview-400134654", "createdAt": "2020-04-24T17:23:02Z", "commit": {"oid": "46669f100b82643f1405f9ed2fd1f34fd1d1caf9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNzoyMzowMlrOGLhrLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNzoyMzowMlrOGLhrLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDczOTI0NA==", "bodyText": "@sebastien-rosset @wing328 @jimschubert what should we allow here, valid objects and empty state values?\nNull only? Null and empty dict?\nIs this a language specific decision? If so we should separate it off as a separate method.\n\nFor example for python values like empty dict {} and None are valid empty values here.\nFor golang the zero value of a map is nil.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#discussion_r414739244", "createdAt": "2020-04-24T17:23:02Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/DefaultCodegen.java", "diffHunk": "@@ -2526,36 +2526,60 @@ private Discriminator recursiveGetDiscriminator(Schema sc, OpenAPI openAPI) {\n             if (composedSchema.getOneOf() != null && composedSchema.getOneOf().size() != 0) {\n                 // All oneOf definitions must contain the discriminator\n                 Integer hasDiscriminatorCnt = 0;\n+                Integer hasNullTypeCnt = 0;\n                 Set<String> discriminatorsPropNames = new HashSet<>();\n                 for  (Schema oneOf: composedSchema.getOneOf()) {\n+                    if (ModelUtils.isNullType(oneOf)) {\n+                        // The null type does not have a discriminator. Skip.\n+                        hasNullTypeCnt++;\n+                        continue;\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46669f100b82643f1405f9ed2fd1f34fd1d1caf9"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTQ3ODEx", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#pullrequestreview-400547811", "createdAt": "2020-04-26T20:50:19Z", "commit": {"oid": "46669f100b82643f1405f9ed2fd1f34fd1d1caf9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQyMDo1MDoxOVrOGMJ4CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQyMDo1MDoxOVrOGMJ4CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM5Nzg5Ng==", "bodyText": "Can you add type descriptions here?\nA tuple containing (used_model_class, discr_propertyname_js, discr_value)\nused_model_class (class/None): the chosen child class that will be used to deserialize the data, for example dog.Dog. If a class is not found, None is returned\ndiscr_propertyname_js (string): the discriminator.propertyName from the opeanpi spec\ndiscr_value (string): the class name in model_data which is the key that we use to return used_model_class from our discriminator, for example 'Dog'", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#discussion_r415397896", "createdAt": "2020-04-26T20:50:19Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_utils.mustache", "diffHunk": "@@ -567,6 +567,43 @@ def fix_model_input_data(model_data, model_class):\n             )\n     return fixed_model_data\n \n+def get_discriminator_class(model_class, from_server, model_data, cls_visited):\n+    \"\"\"Returns the child class specified by the discriminator.\n+\n+    Args:\n+        model_class (OpenApiModel): the model class\n+        from_server (bool): True if the model_data is from the server\n+            False if the data is from the client\n+        model_data (list/dict): data to instantiate the model.\n+        cls_visited (set): list of model classes that have been visited.\n+            Used to determine the discriminator class without\n+            visiting circular references indefinitely.\n+\n+    Returns:\n+        A tuple containing the child class specified by the discriminator,\n+        the name of the discriminator property, and the discriminator value\n+        in the input data.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46669f100b82643f1405f9ed2fd1f34fd1d1caf9"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNTQ4NzI1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#pullrequestreview-400548725", "createdAt": "2020-04-26T21:01:07Z", "commit": {"oid": "46669f100b82643f1405f9ed2fd1f34fd1d1caf9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a40e33261cd8939e9fdb2cbcbf5a63e897cbe92", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/4a40e33261cd8939e9fdb2cbcbf5a63e897cbe92", "committedDate": "2020-04-27T15:54:17Z", "message": "Merge branch 'master' of github.com:CiscoM31/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "037b7eef1b03127795d2f5788c573acf8368c8c1", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/037b7eef1b03127795d2f5788c573acf8368c8c1", "committedDate": "2020-04-27T16:03:27Z", "message": "Fix CI issues and address PR review comments: better documentation and fix white space issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc0bb25b3b0048b8a34d2c7b7e8b3ca436bed507", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/cc0bb25b3b0048b8a34d2c7b7e8b3ca436bed507", "committedDate": "2020-04-27T16:12:22Z", "message": "Fix CI issues and address PR review comments: better documentation and fix white space issues."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bf9f3d1ea5095e7fe976d61b0a7a4d44a7ca909", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/9bf9f3d1ea5095e7fe976d61b0a7a4d44a7ca909", "committedDate": "2020-04-30T14:52:02Z", "message": "resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a37221041843f20f961d53be5dd39741d62876a", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/7a37221041843f20f961d53be5dd39741d62876a", "committedDate": "2020-05-04T14:46:18Z", "message": "resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4132d4517725c225ba9d2920c00f99c8ef5f7301", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/4132d4517725c225ba9d2920c00f99c8ef5f7301", "committedDate": "2020-05-04T14:46:32Z", "message": "run sample scripts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a596c7e39a48ee8e56bbc1cd81cfadb669c48c9", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/9a596c7e39a48ee8e56bbc1cd81cfadb669c48c9", "committedDate": "2020-05-04T14:51:13Z", "message": "resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7c439647ffc8984f7380d5235cd0a741eaf0528", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e7c439647ffc8984f7380d5235cd0a741eaf0528", "committedDate": "2020-05-04T14:54:34Z", "message": "fix end-of-line issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe2b2da246e2a3d4edca716fce862a7a588e9318", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/fe2b2da246e2a3d4edca716fce862a7a588e9318", "committedDate": "2020-05-04T15:15:52Z", "message": "Merge branch 'master' of github.com:CiscoM31/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fdd7e33f14b4384fa167535143e71e795525b65", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/0fdd7e33f14b4384fa167535143e71e795525b65", "committedDate": "2020-05-05T01:25:08Z", "message": "resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9849c837623a9fab600e6aed882158eef60d442f", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/9849c837623a9fab600e6aed882158eef60d442f", "committedDate": "2020-05-05T05:18:58Z", "message": "resolve merge issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bca2110cfb9cf2fd152754b3970b7d839460fbac", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/bca2110cfb9cf2fd152754b3970b7d839460fbac", "committedDate": "2020-05-05T14:31:40Z", "message": "Merge branch 'master' of github.com:CiscoM31/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93297051892c88d22b7f8d187ce7c97cf6a9b206", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/93297051892c88d22b7f8d187ce7c97cf6a9b206", "committedDate": "2020-05-05T15:40:57Z", "message": "Handle case when discriminator is not specified in input data"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjIyOTkw", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#pullrequestreview-406222990", "createdAt": "2020-05-05T23:28:06Z", "commit": {"oid": "93297051892c88d22b7f8d187ce7c97cf6a9b206"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMzoyODowNlrOGQ_QUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMzoyODowNlrOGQ_QUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ2Njc2OA==", "bodyText": "We may be passing in _visited_composed_classes in kwargs here, so we need to include it in the inputs to get_discriminator_class.\nCan you extract _visited_composed_classes from kwargs and pass it in to get_discriminator_class here?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#discussion_r420466768", "createdAt": "2020-05-05T23:28:06Z", "author": {"login": "spacether"}, "path": "samples/client/petstore/python-experimental/petstore_api/model_utils.py", "diffHunk": "@@ -148,7 +148,7 @@ def __new__(cls, *args, **kwargs):\n         oneof_anyof_classes = []\n         oneof_anyof_classes.extend(cls._composed_schemas.get('oneOf', ()))\n         oneof_anyof_classes.extend(cls._composed_schemas.get('anyOf', ()))\n-        new_cls = cls.get_discriminator_class(kwargs)\n+        new_cls = get_discriminator_class(cls, kwargs, set())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93297051892c88d22b7f8d187ce7c97cf6a9b206"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MjMyNzcw", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#pullrequestreview-406232770", "createdAt": "2020-05-05T23:56:39Z", "commit": {"oid": "93297051892c88d22b7f8d187ce7c97cf6a9b206"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMzo1NjozOVrOGQ_zow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMzo1NjozOVrOGQ_zow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ3NTgxMQ==", "bodyText": "Why are we looping over these values?\nDo we want to loop over the ancestors here?\nIf we have:\nallOf:\n\nAnimal\n\noneOf:\n\nCat\nDog\n\nwe are looking at the discriminators in Cat and Dog.\nDon't we instead want to look at the discriminator in Animal? Can you add comments here describing what we are doing?\n# if we didn't find a discriminated class it may exist in an ancestor\nWhatever you are adding, can you add a sample schema and test that verifies that this feature is working?\nOtherwise if it breaks in the future, we will have no way of seeing that it has broken.\nFor example ParentPet only discriminates to\n\nChildCat\nChildDog\nChildLizard\n\nBut it allOf includes GrandparentAnimal.\nwhich includes those AND ParentPet.\nSo if we deserialize a payload:\n{petType: \"ParentPet\"} where data_type = parent_pet.ParentPet, we should travel back through its GrandparentAnimal ancestor to find the correct class to deserialize to, as long as the discriminator is the same.\nShould we look in the current discriminator, then look in descendants, then look in ancestors?\nIt looks like yes per https://github.com/OpenAPITools/openapi-generator/pull/4913/files", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#discussion_r420475811", "createdAt": "2020-05-05T23:56:39Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_utils.mustache", "diffHunk": "@@ -622,6 +622,46 @@ def deserialize_primitive(data, klass, path_to_item):\n         )\n \n \n+def get_discriminator_class(model_class, model_data, cls_visited):\n+    \"\"\"Returns the child class specified by the discriminator.\n+\n+    Args:\n+        model_class (OpenApiModel): the model class\n+        model_data (list/dict): data to instantiate the model.\n+        cls_visited (set): list of model classes that have been visited.\n+            Used to determine the discriminator class without\n+            visiting circular references indefinitely.\n+\n+    Returns:\n+        used_model_class (class/None): the chosen child class that will be used\n+            to deserialize the data, for example dog.Dog.\n+            If a class is not found, None is returned.\n+    \"\"\"\n+\n+    cls_visited.add(model_class)\n+    discriminator = model_class.discriminator\n+    discr_propertyname_py = list(discriminator.keys())[0]\n+    discr_propertyname_js = model_class.attribute_map[discr_propertyname_py]\n+    if discr_propertyname_js in model_data:\n+        discr_value = model_data[discr_propertyname_js]\n+    elif discr_propertyname_py in model_data:\n+        discr_value = model_data[discr_propertyname_py]\n+    else:\n+        # The input data does not contain the discriminator property.\n+        # The caller will raise an exception.\n+        return None\n+    class_name_to_discr_class = discriminator[discr_propertyname_py]\n+    used_model_class = class_name_to_discr_class.get(discr_value)\n+    if used_model_class is None:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93297051892c88d22b7f8d187ce7c97cf6a9b206"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1329d282d41a91529556325621b8e1223fe159f", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/b1329d282d41a91529556325621b8e1223fe159f", "committedDate": "2020-05-06T21:53:03Z", "message": "Merge branch 'master' of github.com:CiscoM31/openapi-generator into discriminator-fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MDU4NjEx", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#pullrequestreview-407058611", "createdAt": "2020-05-06T23:39:21Z", "commit": {"oid": "b1329d282d41a91529556325621b8e1223fe159f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMzozOToyMVrOGRpLmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMzozOToyMVrOGRpLmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE1MzY4OA==", "bodyText": "cls_visited should be a tuple, not a set. Our classes are not hashable so we need to make sure to store them in a tuple not a set.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#discussion_r421153688", "createdAt": "2020-05-06T23:39:21Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_utils.mustache", "diffHunk": "@@ -622,6 +622,46 @@ def deserialize_primitive(data, klass, path_to_item):\n         )\n \n \n+def get_discriminator_class(model_class, model_data, cls_visited):\n+    \"\"\"Returns the child class specified by the discriminator.\n+\n+    Args:\n+        model_class (OpenApiModel): the model class\n+        model_data (list/dict): data to instantiate the model.\n+        cls_visited (set): list of model classes that have been visited.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1329d282d41a91529556325621b8e1223fe159f"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fd8ba36d97054195b09999d8bd1f88d33dc88c3", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/1fd8ba36d97054195b09999d8bd1f88d33dc88c3", "committedDate": "2020-05-07T00:49:45Z", "message": "minor changes and add code comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca44756249ef04b3b2f31acde553a93824fa8b9c", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ca44756249ef04b3b2f31acde553a93824fa8b9c", "committedDate": "2020-05-07T01:46:55Z", "message": "Refactor get_discriminator code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MTA1NzUz", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#pullrequestreview-407105753", "createdAt": "2020-05-07T02:12:41Z", "commit": {"oid": "ca44756249ef04b3b2f31acde553a93824fa8b9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMjoxMjo0MlrOGRr6Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMjoxMjo0MlrOGRr6Kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTE5ODM3OQ==", "bodyText": "We have 2 use cases here:\n\nthis openapi schema does not have a discriminator\nwe have visited this class deserializing a payload with a discriminator. During that process we traveled through this class but did not make an instance of it. Now we are making an instance of a composed class which contains cls in it, so this time make an instance of cls.\nHere's an example of use case 2: If Animal has a discriminator\npetType and we pass in \"Dog\", and the class Dog\nallOf includes Animal, we move through Animal\nonce using the discriminator, and pick Dog.\nThen in the composed schema dog Dog, we will make an instance of the\nAnimal class (because Dal has allOf: Animal) but this time we won't travel\nthrough Animal's discriminator because we passed in\n_visited_composed_classes = (Animal,)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#discussion_r421198379", "createdAt": "2020-05-07T02:12:42Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_utils.mustache", "diffHunk": "@@ -65,31 +65,53 @@ class OpenApiModel(object):\n         # pick a new schema/class to instantiate because a discriminator\n         # propertyName value was passed in\n \n+        # Build a list containing all oneOf and anyOf descendants.\n+        oneof_anyof_classes = cls._composed_schemas.get('oneOf', ()) +\n+                                cls._composed_schemas.get('anyOf', ())\n+        if oneof_anyof_classes and none_type in oneof_anyof_classes and args[0] is None:\n+            # The input data is the 'null' value AND one of the oneOf/anyOf children\n+            # is the 'null' type (which is introduced in OAS schema >= 3.1).\n+            return None\n+\n         visited_composed_classes = kwargs.get('_visited_composed_classes', ())\n         if (\n             cls.discriminator is None or\n             cls in visited_composed_classes\n         ):\n-            # we don't have a discriminator\n-            # or we have already visited this class before and are sure that we\n-            # want to instantiate it this time\n+            # There is no discriminator.\n+            # Or we have already visited this class before and are sure that we\n+            # want to instantiate it this time. For example, this happens when\n+            # we deserialize Dog from Animal. Dog contains an Animal instance. We go from Animal to Dog back to Animal", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca44756249ef04b3b2f31acde553a93824fa8b9c"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MTIwNDcy", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#pullrequestreview-407120472", "createdAt": "2020-05-07T03:05:49Z", "commit": {"oid": "ca44756249ef04b3b2f31acde553a93824fa8b9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMzowNTo0OVrOGRsvsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwMzowNTo0OVrOGRsvsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTIxMjA4MQ==", "bodyText": "# if we are making an instance of a composed schema Descendent\n        # which allOf includes Ancestor, then Ancestor contains\n        # a discriminator that includes Descendent.\n        # So if we make an instance of Descendent, we have to make an\n        # instance of Ancestor to hold the allOf properties.\n        # This code detects that use case and makes the instance of Ancestor\n        # For example:\n        # When making an instance of Dog, _visited_composed_classes = (Dog,)\n        # then we make an instance of Animal to include in dog._composed_instances\n        # so when we are here, cls is Animal\n        # cls.discriminator != None\n        # cls not in _visited_composed_classes\n        # new_cls = Dog\n        # but we know we know that we already have Dog\n        # because it is in visited_composed_classes\n        # so make Animal here", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5809#discussion_r421212081", "createdAt": "2020-05-07T03:05:49Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_utils.mustache", "diffHunk": "@@ -65,31 +65,53 @@ class OpenApiModel(object):\n         # pick a new schema/class to instantiate because a discriminator\n         # propertyName value was passed in\n \n+        # Build a list containing all oneOf and anyOf descendants.\n+        oneof_anyof_classes = cls._composed_schemas.get('oneOf', ()) +\n+                                cls._composed_schemas.get('anyOf', ())\n+        if oneof_anyof_classes and none_type in oneof_anyof_classes and args[0] is None:\n+            # The input data is the 'null' value AND one of the oneOf/anyOf children\n+            # is the 'null' type (which is introduced in OAS schema >= 3.1).\n+            return None\n+\n         visited_composed_classes = kwargs.get('_visited_composed_classes', ())\n         if (\n             cls.discriminator is None or\n             cls in visited_composed_classes\n         ):\n-            # we don't have a discriminator\n-            # or we have already visited this class before and are sure that we\n-            # want to instantiate it this time\n+            # There is no discriminator.\n+            # Or we have already visited this class before and are sure that we\n+            # want to instantiate it this time. For example, this happens when\n+            # we deserialize Dog from Animal. Dog contains an Animal instance. We go from Animal to Dog back to Animal\n             return super(OpenApiModel, cls).__new__(cls)\n \n-        oneof_anyof_classes = []\n-        oneof_anyof_classes.extend(cls._composed_schemas.get('oneOf', ()))\n-        oneof_anyof_classes.extend(cls._composed_schemas.get('anyOf', ()))\n-        new_cls = cls.get_discriminator_class(kwargs)\n+        # Get the name and value of the discriminator property.\n+        # The discriminator name is obtained from the discriminator meta-data\n+        # and the discriminator value is obtained from the input data.\n+        discr_propertyname_py = list(cls.discriminator.keys())[0]\n+        discr_propertyname_js = cls.attribute_map[discr_propertyname_py]\n+        if discr_propertyname_js in kwargs:\n+            discr_value = kwargs[discr_propertyname_js]\n+        elif discr_propertyname_py in kwargs:\n+            discr_value = kwargs[discr_propertyname_py]\n+        else:\n+            # The input data does not contain the discriminator property.\n+            path_to_item = kwargs.get('_path_to_item', ())\n+            raise ApiValueError(\n+                \"Cannot deserialize input data due to missing discriminator. \"\n+                \"The discriminator property '%s' is missing at path: \"\n+                \"'%s'\" % (discr_propertyname_js, path_to_item)\n+            )\n+\n+        new_cls = get_discriminator_class(cls, visited_composed_classes, discr_value)\n         if new_cls is None:\n-            disc_prop_name_py = list(cls.discriminator.keys())[0]\n-            disc_prop_name_js = cls.attribute_map[disc_prop_name_py]\n             path_to_item = kwargs.get('_path_to_item', ())\n             disc_prop_value = kwargs.get(\n-                disc_prop_name_js, kwargs.get(disc_prop_name_py))\n+                discr_propertyname_js, kwargs.get(discr_propertyname_py))\n             raise ApiValueError(\n                 \"Cannot deserialize input data due to invalid discriminator \"\n                 \"value. The OpenAPI document has no mapping for discriminator \"\n                 \"property '%s'='%s' at path: %s\" %\n-                (disc_prop_name_js, disc_prop_value, path_to_item)\n+                (discr_propertyname_js, disc_prop_value, path_to_item)\n             )\n \n         if new_cls in visited_composed_classes:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca44756249ef04b3b2f31acde553a93824fa8b9c"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f80ca49200ebaa1eb938b7084fb74a3764984b5f", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/f80ca49200ebaa1eb938b7084fb74a3764984b5f", "committedDate": "2020-05-07T15:42:56Z", "message": "Add unit test with missing discriminator property"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2541, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}