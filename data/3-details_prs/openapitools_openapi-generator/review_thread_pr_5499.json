{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMjkxMDQz", "number": 5499, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMjoyNDo1N1rOECYgbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMjoyNDo1N1rOECYgbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwOTM0MTI1OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/KotlinSpringServerCodegen.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwMjoyNDo1N1rOGeznVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMzozNDoxMFrOGf_8Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk1NjExOA==", "bodyText": "This changes previous behavior for library.equals(SPRING_BOOT) && this.delegatePattern and would be a breaking change. Was this intentional? If so, can you speak toward the intention? To me it looks like this.delegatePattern was accidentally removed.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5499#discussion_r434956118", "createdAt": "2020-06-04T02:24:57Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/KotlinSpringServerCodegen.java", "diffHunk": "@@ -440,7 +451,7 @@ public void processOpts() {\n \n     @Override\n     public void addOperationToGroup(String tag, String resourcePath, Operation operation, CodegenOperation co, Map<String, List<CodegenOperation>> operations) {\n-        if (library.equals(SPRING_BOOT) && this.delegatePattern) {\n+        if (library.equals(SPRING_BOOT) && !useTags) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "542ec33fdb3efeb039aa8ce3b36dce8a3c3cde8e"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTkzMjY5Mg==", "bodyText": "Thanks for the comment Jim. The replacement of this.delegatePattern with useTags was intentional. I'm currently using the delegate pattern with tags in my Java project and this change was needed to get the Kotlin generator to produce equivalent code to the Java one. In fact if you look at SpringCodegen.java you can see it does something very similar\nif ((library.equals(SPRING_BOOT) || library.equals(SPRING_MVC_LIBRARY)) && !useTags) {\n\nI understand that this is a breaking change but I'm not sure we can support tags properly while keeping backwards compatibility.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5499#discussion_r435932692", "createdAt": "2020-06-05T13:48:10Z", "author": {"login": "dumitrupetrusca-okta"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/KotlinSpringServerCodegen.java", "diffHunk": "@@ -440,7 +451,7 @@ public void processOpts() {\n \n     @Override\n     public void addOperationToGroup(String tag, String resourcePath, Operation operation, CodegenOperation co, Map<String, List<CodegenOperation>> operations) {\n-        if (library.equals(SPRING_BOOT) && this.delegatePattern) {\n+        if (library.equals(SPRING_BOOT) && !useTags) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk1NjExOA=="}, "originalCommit": {"oid": "542ec33fdb3efeb039aa8ce3b36dce8a3c3cde8e"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIwNjYzOA==", "bodyText": "Fair enough. I'll mark this PR as a breaking change. Thanks for the explanation.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5499#discussion_r436206638", "createdAt": "2020-06-05T23:34:10Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/KotlinSpringServerCodegen.java", "diffHunk": "@@ -440,7 +451,7 @@ public void processOpts() {\n \n     @Override\n     public void addOperationToGroup(String tag, String resourcePath, Operation operation, CodegenOperation co, Map<String, List<CodegenOperation>> operations) {\n-        if (library.equals(SPRING_BOOT) && this.delegatePattern) {\n+        if (library.equals(SPRING_BOOT) && !useTags) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDk1NjExOA=="}, "originalCommit": {"oid": "542ec33fdb3efeb039aa8ce3b36dce8a3c3cde8e"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3750, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}