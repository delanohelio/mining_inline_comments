{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMTUzNzQ4", "number": 5928, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOToyNDowNVrODz4o6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOToyNDozOFrODz4plA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzMxOTQ3OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOToyNDowNVrOGIj_QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjo0ODoxNlrOGJg4bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzMTQyNQ==", "bodyText": "I don't think this is a warning - this is a perfectly fine situation to exist.\nAlso, I think we should say additional, not repeating.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5928#discussion_r411631425", "createdAt": "2020-04-20T19:24:05Z", "author": {"login": "richardwhiuk"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "diffHunk": "@@ -1056,6 +1056,26 @@ public boolean isDataTypeFile(final String dataType) {\n         return dataType != null && dataType.equals(typeMapping.get(\"File\").toString());\n     }\n \n+    /**\n+     * Add operation to group\n+     *\n+     * @param tag          name of the tag\n+     * @param resourcePath path of the resource\n+     * @param operation    OAS Operation object\n+     * @param co           Codegen Operation object\n+     * @param operations   map of Codegen operations\n+     */\n+    @SuppressWarnings(\"static-method\")\n+    public void addOperationToGroup(String tag, String resourcePath, Operation operation, CodegenOperation\n+            co, Map<String, List<CodegenOperation>> operations) {\n+        // only generate operation for the first tag of the tags\n+        if (tag != null && co.tags.size() > 1 && !tag.equals(co.tags.get(0).getName())) {\n+            LOGGER.warn(\"generated skip operationId `\" + co.operationId + \"` with the repeating tag=\" + tag);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "846fd4148dd74d23897f6fc6f5808e88add69dea"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyOTEwMg==", "bodyText": "LOGGER.info(\"generated skip additional tag \" + tag + \" with operationId=\" + co.operationId);", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5928#discussion_r412629102", "createdAt": "2020-04-22T02:48:16Z", "author": {"login": "paladinzh"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "diffHunk": "@@ -1056,6 +1056,26 @@ public boolean isDataTypeFile(final String dataType) {\n         return dataType != null && dataType.equals(typeMapping.get(\"File\").toString());\n     }\n \n+    /**\n+     * Add operation to group\n+     *\n+     * @param tag          name of the tag\n+     * @param resourcePath path of the resource\n+     * @param operation    OAS Operation object\n+     * @param co           Codegen Operation object\n+     * @param operations   map of Codegen operations\n+     */\n+    @SuppressWarnings(\"static-method\")\n+    public void addOperationToGroup(String tag, String resourcePath, Operation operation, CodegenOperation\n+            co, Map<String, List<CodegenOperation>> operations) {\n+        // only generate operation for the first tag of the tags\n+        if (tag != null && co.tags.size() > 1 && !tag.equals(co.tags.get(0).getName())) {\n+            LOGGER.warn(\"generated skip operationId `\" + co.operationId + \"` with the repeating tag=\" + tag);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzMTQyNQ=="}, "originalCommit": {"oid": "846fd4148dd74d23897f6fc6f5808e88add69dea"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzMyMTE2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxOToyNDozOFrOGIkAZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwMjozMDozOFrOGJgh9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzMTcxNg==", "bodyText": "Can you add an @Override annotation here? That way if the method we are overloading changes, we'll get a compile error.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5928#discussion_r411631716", "createdAt": "2020-04-20T19:24:38Z", "author": {"login": "richardwhiuk"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "diffHunk": "@@ -1056,6 +1056,26 @@ public boolean isDataTypeFile(final String dataType) {\n         return dataType != null && dataType.equals(typeMapping.get(\"File\").toString());\n     }\n \n+    /**\n+     * Add operation to group\n+     *\n+     * @param tag          name of the tag\n+     * @param resourcePath path of the resource\n+     * @param operation    OAS Operation object\n+     * @param co           Codegen Operation object\n+     * @param operations   map of Codegen operations\n+     */\n+    @SuppressWarnings(\"static-method\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "846fd4148dd74d23897f6fc6f5808e88add69dea"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjYyMzM0OA==", "bodyText": "ok. I will add it.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5928#discussion_r412623348", "createdAt": "2020-04-22T02:30:38Z", "author": {"login": "paladinzh"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/RustServerCodegen.java", "diffHunk": "@@ -1056,6 +1056,26 @@ public boolean isDataTypeFile(final String dataType) {\n         return dataType != null && dataType.equals(typeMapping.get(\"File\").toString());\n     }\n \n+    /**\n+     * Add operation to group\n+     *\n+     * @param tag          name of the tag\n+     * @param resourcePath path of the resource\n+     * @param operation    OAS Operation object\n+     * @param co           Codegen Operation object\n+     * @param operations   map of Codegen operations\n+     */\n+    @SuppressWarnings(\"static-method\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzMTcxNg=="}, "originalCommit": {"oid": "846fd4148dd74d23897f6fc6f5808e88add69dea"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3542, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}