{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NDE2NTcy", "number": 6518, "title": "[Java][Jersey2] various improvements", "bodyText": "add the option \"oneOfDiscriminatorLookup\" to speed up the oneOf schema matching process\nadd additionalProperties support\nadd serializer and deserializer to oneof/anyof schemas\nremove oneof/anyof logic from ApiClient\n\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-06-02T07:58:36Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6518", "merged": true, "mergeCommit": {"oid": "233087c5aa585341aeade7df875a1e60cbf16ca9"}, "closed": true, "closedAt": "2020-06-09T16:38:12Z", "author": {"login": "wing328"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnP_1rAH2gAyNDI2NDE2NTcyOmUwNTQzOWM0NmVhZTBmODQxNWYyMmYzZTI5NGIyZDc5ZTQzY2I5ZDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDXY6RAFqTQ3Nzg1NjkzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e05439c46eae0f8415f22f3e294b2d79e43cb9d8", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e05439c46eae0f8415f22f3e294b2d79e43cb9d8", "committedDate": "2020-06-02T07:47:26Z", "message": "[java][jersey2] Add support for discriminator, fix nullable typo and nullable deserialization (#6495)\n\n* Mustache template should use invokerPackage tag to generate import\r\n\r\n* fix typo, fix script issue, add log statement for troubleshooting\r\n\r\n* Add java jersey2 samples with OpenAPI doc that has HTTP signature security scheme\r\n\r\n* Add sample for Java jersey2 and HTTP signature scheme\r\n\r\n* Add unit test for oneOf schema deserialization\r\n\r\n* Add unit test for oneOf schema deserialization\r\n\r\n* Add log statements\r\n\r\n* Add profile for jersey2\r\n\r\n* Temporarily disable unit test\r\n\r\n* Temporarily disable unit test\r\n\r\n* support for discriminator in jersey2\r\n\r\n* fix typo in pom.xml\r\n\r\n* disable unit test because jersey2 deserialization is broken\r\n\r\n* disable unit test because jersey2 deserialization is broken\r\n\r\n* fix duplicate jersey2 samples\r\n\r\n* fix duplicate jersey2 samples\r\n\r\n* Add code comments\r\n\r\n* fix duplicate artifact id\r\n\r\n* fix duplicate jersey2 samples\r\n\r\n* run samples scripts\r\n\r\n* resolve merge conflicts\r\n\r\n* Add unit tests\r\n\r\n* fix unit tests\r\n\r\n* continue implementation of discriminator lookup\r\n\r\n* throw deserialization exception when value is null and schema does not allow null value\r\n\r\n* continue implementation of compose schema\r\n\r\n* continue implementation of compose schema\r\n\r\n* continue implementation of compose schema\r\n\r\n* Add more unit tests\r\n\r\n* Add unit tests for anyOf\r\n\r\n* Add unit tests\r\n\r\nCo-authored-by: Vikrant Balyan (vvb) <vvb@cisco.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8adfea73c344c6e03cc5761df79f9ae8a060cd42", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8adfea73c344c6e03cc5761df79f9ae8a060cd42", "committedDate": "2020-06-02T07:53:42Z", "message": "update samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e87ddc3d0c5d8594a7314f9b196f01f919a738f9", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e87ddc3d0c5d8594a7314f9b196f01f919a738f9", "committedDate": "2020-06-02T09:19:24Z", "message": "Merge remote-tracking branch 'origin/master' into jersey2-improvement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1027672d2e3b5342a8a67aa374e005f033a2f30", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/b1027672d2e3b5342a8a67aa374e005f033a2f30", "committedDate": "2020-06-02T09:57:02Z", "message": "add tests to oas3 java jersey2 petstore"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0d267fc5f7362b7d02fcbc66e9736ee86e5c0fd", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/d0d267fc5f7362b7d02fcbc66e9736ee86e5c0fd", "committedDate": "2020-06-05T00:12:37Z", "message": "comment out jersey2 ensure uptodate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbe7976b2ead353084ba7c34492f7a25e12f75fd", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/bbe7976b2ead353084ba7c34492f7a25e12f75fd", "committedDate": "2020-06-05T06:34:29Z", "message": "Merge remote-tracking branch 'origin/master' into jersey2-improvement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bcc917b340cd43cee7d7b6e9cee7de3f367e78a", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/1bcc917b340cd43cee7d7b6e9cee7de3f367e78a", "committedDate": "2020-06-05T16:06:13Z", "message": "Jersey2 supports additional properties with composed schema (#6523)\n\n* Mustache template should use invokerPackage tag to generate import\r\n\r\n* fix typo, fix script issue, add log statement for troubleshooting\r\n\r\n* Add java jersey2 samples with OpenAPI doc that has HTTP signature security scheme\r\n\r\n* Add sample for Java jersey2 and HTTP signature scheme\r\n\r\n* Add unit test for oneOf schema deserialization\r\n\r\n* Add unit test for oneOf schema deserialization\r\n\r\n* Add log statements\r\n\r\n* Add profile for jersey2\r\n\r\n* Temporarily disable unit test\r\n\r\n* Temporarily disable unit test\r\n\r\n* support for discriminator in jersey2\r\n\r\n* fix typo in pom.xml\r\n\r\n* disable unit test because jersey2 deserialization is broken\r\n\r\n* disable unit test because jersey2 deserialization is broken\r\n\r\n* fix duplicate jersey2 samples\r\n\r\n* fix duplicate jersey2 samples\r\n\r\n* Add code comments\r\n\r\n* fix duplicate artifact id\r\n\r\n* fix duplicate jersey2 samples\r\n\r\n* run samples scripts\r\n\r\n* resolve merge conflicts\r\n\r\n* Add unit tests\r\n\r\n* fix unit tests\r\n\r\n* continue implementation of discriminator lookup\r\n\r\n* throw deserialization exception when value is null and schema does not allow null value\r\n\r\n* continue implementation of compose schema\r\n\r\n* continue implementation of compose schema\r\n\r\n* continue implementation of compose schema\r\n\r\n* Add more unit tests\r\n\r\n* Add unit tests for anyOf\r\n\r\n* Add unit tests\r\n\r\n* Set supportsAdditionalPropertiesWithComposedSchema to true for Java jersey2\r\n\r\n* Support additional properties as nested field\r\n\r\n* Support additional properties as nested field\r\n\r\n* add code comments\r\n\r\n* add customer deserializer\r\n\r\n* Fix 'method too big' error with generated code\r\n\r\n* resolve merge conflicts\r\n\r\nCo-authored-by: Vikrant Balyan (vvb) <vvb@cisco.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "477ee406ea33b5a68cd3acfcc9ccb3ce1cca237d", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/477ee406ea33b5a68cd3acfcc9ccb3ce1cca237d", "committedDate": "2020-06-05T16:20:20Z", "message": "[Jersey2] Fix code generation of 'registerDiscriminator' method for large models (#6535)\n\n* Mustache template should use invokerPackage tag to generate import\r\n\r\n* fix typo, fix script issue, add log statement for troubleshooting\r\n\r\n* Add java jersey2 samples with OpenAPI doc that has HTTP signature security scheme\r\n\r\n* Add sample for Java jersey2 and HTTP signature scheme\r\n\r\n* Add unit test for oneOf schema deserialization\r\n\r\n* Add unit test for oneOf schema deserialization\r\n\r\n* Add log statements\r\n\r\n* Add profile for jersey2\r\n\r\n* Temporarily disable unit test\r\n\r\n* Temporarily disable unit test\r\n\r\n* support for discriminator in jersey2\r\n\r\n* fix typo in pom.xml\r\n\r\n* disable unit test because jersey2 deserialization is broken\r\n\r\n* disable unit test because jersey2 deserialization is broken\r\n\r\n* fix duplicate jersey2 samples\r\n\r\n* fix duplicate jersey2 samples\r\n\r\n* Add code comments\r\n\r\n* fix duplicate artifact id\r\n\r\n* fix duplicate jersey2 samples\r\n\r\n* run samples scripts\r\n\r\n* resolve merge conflicts\r\n\r\n* Add unit tests\r\n\r\n* fix unit tests\r\n\r\n* continue implementation of discriminator lookup\r\n\r\n* throw deserialization exception when value is null and schema does not allow null value\r\n\r\n* continue implementation of compose schema\r\n\r\n* continue implementation of compose schema\r\n\r\n* continue implementation of compose schema\r\n\r\n* Add more unit tests\r\n\r\n* Add unit tests for anyOf\r\n\r\n* Add unit tests\r\n\r\n* Fix 'method too big' error with generated code\r\n\r\n* resolve merge conflicts\r\n\r\nCo-authored-by: Vikrant Balyan (vvb) <vvb@cisco.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d5c6c2e5db681679e7a44e7404d02b93a604974", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/4d5c6c2e5db681679e7a44e7404d02b93a604974", "committedDate": "2020-06-07T00:06:29Z", "message": "update samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d2492faeb0a7cc4fb63287e8cbbddfc76871aab", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/0d2492faeb0a7cc4fb63287e8cbbddfc76871aab", "committedDate": "2020-06-07T00:42:31Z", "message": "comment out tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e4461c55cb12b63049a702a54824006ba86b6c3", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/0e4461c55cb12b63049a702a54824006ba86b6c3", "committedDate": "2020-06-07T06:25:28Z", "message": "support additional properties in serialize and deserialize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b8af5ef1e1120d0a1bbd2934fd2f59cc0acb6f8", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/9b8af5ef1e1120d0a1bbd2934fd2f59cc0acb6f8", "committedDate": "2020-06-07T13:40:01Z", "message": "add discriminator lookup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebc5a09e30f69743eba44bd45377f23c035e37c9", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ebc5a09e30f69743eba44bd45377f23c035e37c9", "committedDate": "2020-06-08T08:29:24Z", "message": "remove oneof/anyof logic in apilcient"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2af026006f574340a4fa9e2836d6fdcdd3701248", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/2af026006f574340a4fa9e2836d6fdcdd3701248", "committedDate": "2020-06-08T09:03:54Z", "message": "add serializer to mammal.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab4941d3463661d567c7b25b4f91550e4602d678", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ab4941d3463661d567c7b25b4f91550e4602d678", "committedDate": "2020-06-08T09:17:39Z", "message": "add serialize to oneOf model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7f24402b9fe473809efd3ddeda70bfa92a7554c", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/c7f24402b9fe473809efd3ddeda70bfa92a7554c", "committedDate": "2020-06-08T09:21:04Z", "message": "add serializer to anyof model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e588568a6acaee3cde28fd180b7a8bc70134991e", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/e588568a6acaee3cde28fd180b7a8bc70134991e", "committedDate": "2020-06-09T07:49:12Z", "message": "comment out test cases that are subject to further discussion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ece02d62165ffcebde0572c6b02e36e5063fc94a", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/ece02d62165ffcebde0572c6b02e36e5063fc94a", "committedDate": "2020-06-09T09:21:28Z", "message": "add back files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6b6feefed7261287d396022e21fdfe49fd2b2c9", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/d6b6feefed7261287d396022e21fdfe49fd2b2c9", "committedDate": "2020-06-09T10:30:53Z", "message": "Merge remote-tracking branch 'origin/master' into jersey2-improvement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "087382196e36b06c9be43221cee2815dd1e68cba", "author": {"user": {"login": "wing328", "name": "William Cheng"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/087382196e36b06c9be43221cee2815dd1e68cba", "committedDate": "2020-06-09T12:59:45Z", "message": "update configs, samples"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NDczODgz", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6518#pullrequestreview-427473883", "createdAt": "2020-06-09T19:27:14Z", "commit": {"oid": "c7f24402b9fe473809efd3ddeda70bfa92a7554c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTozMDoxM1rOGhZIVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTozMDoxM1rOGhZIVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY2NzkyNg==", "bodyText": "So it looks like this sets this.instance = to the deserialized instance of BasquePig where this is a Pig instance? Is that right?\nWhy include the BasquePig instances in this Pig instance vs just returning the instance of BasquePig?\nYou mentioned a use case when a client may want to change the type of an instance from\nBasquePig to DanishPig.\nThat is possible if one knows about the ancestor class Pig, which the client would know because that is the data type that is being deserialized.\nMy understanding is that you want a client to be able to change a model instance class type(BasquePig/DanishPig) given only the deserialized instance and NOT having to know about the ingested data type, is that right?\nCan you describe a more realistic use case than converting pig types?\nWhy do clients need this ability to change model instance types given a model instance only?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6518#discussion_r437667926", "createdAt": "2020-06-09T19:30:13Z", "author": {"login": "spacether"}, "path": "samples/openapi3/client/petstore/java/jersey2-java8/src/main/java/org/openapitools/client/model/Pig.java", "diffHunk": "@@ -60,12 +88,30 @@ public PigDeserializer(Class<?> vc) {\n         @Override\n         public Pig deserialize(JsonParser jp, DeserializationContext ctxt) throws IOException, JsonProcessingException {\n             JsonNode tree = jp.readValueAsTree();\n+            Object deserialized = null;\n+            Pig newPig = new Pig();\n+            Map<String,Object> result2 = tree.traverse(jp.getCodec()).readValueAs(new TypeReference<Map<String, Object>>() {});\n+            String discriminatorValue = (String)result2.get(\"className\");\n+            switch (discriminatorValue) {\n+                case \"BasquePig\":\n+                    deserialized = tree.traverse(jp.getCodec()).readValueAs(BasquePig.class);\n+                    newPig.setActualInstance(deserialized);\n+                    return newPig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "087382196e36b06c9be43221cee2815dd1e68cba"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODU2OTM4", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6518#pullrequestreview-477856938", "createdAt": "2020-08-28T16:14:02Z", "commit": {"oid": "087382196e36b06c9be43221cee2815dd1e68cba"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjoxNDowMlrOHJMcWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjoxNDowMlrOHJMcWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQwMzA5OA==", "bodyText": "Hello @wing328 ,\nWould you know why this import is required? I'm trying to generate code without the supporting files and it does not compile because of this import", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6518#discussion_r479403098", "createdAt": "2020-08-28T16:14:02Z", "author": {"login": "symphony-youri"}, "path": "modules/openapi-generator/src/main/resources/Java/libraries/jersey2/model.mustache", "diffHunk": "@@ -39,9 +51,16 @@ import javax.validation.Valid;\n {{#performBeanValidation}}\n import org.hibernate.validator.constraints.*;\n {{/performBeanValidation}}\n+import {{invokerPackage}}.JSON;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "087382196e36b06c9be43221cee2815dd1e68cba"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2197, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}