{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNTc3MjA0", "number": 4969, "title": "[Java] Fixes Spring generator devaultValues for int64/float/double", "bodyText": "This PR fixes #1226\nThat issue describes that when we have an in64, float, or double CodegenParameter, the string defaultValue includes unneeded suffix characters l,f, or d. Those suffixes were added by AbstractJavaCodegen because that generator assumed that those default values would be used as java values of the correct type. Instead, the spring generator uses String type default values for CodegenParameter only. Typically those values are handled with parseLong/parseFloat/parseDouble etc which fail if the value includes a character suffix.\nThis update keeps the suffixes on CodegenProperties because templates use those defaultValues as Long/Float/Double literal values.\nCodegenProperty defaultValues:\n\n\"9223372036854775807l\" (int64)\n\"3.14159f\" (float)\n\"3.14159d\" (double)\n\nFor CodegenParameter we now use values which lack the suffix so parseLong/parseDouble/parseFloat will work\nCodegenParameter defaultValues:\n\n\"9223372036854775807\" (int64)\n\"3.14159\" (float)\n\"3.14159\" (double)\n\nFurther work\nI verified that all spring generators use classes that require String defaultValues for query params.\nThese are:\n\nspring-mvc-petstore-server (ApiParam,RequestParam String defaultValue)\nspring-cloud-feign-petstore (ApiParam, RequestParam String defaultValue)\nspring-cloud-feign-async-petstore (ApiParam, RequestParam String defaultValue)\nspring-stubs (ApiParam, RequestParam String defaultValue)\nspring-mvc-petstore-j8-async-server (ApiParam, RequestParam String defaultValue)\nspring-mvc-petstore-j8-localdatetime (ApiParam, RequestParam String defaultValue)\nspring-delegate (ApiParam, RequestParam String defaultValue)\nspring-delegate-j8 (ApiParam, RequestParam String defaultValue)\nspringboot-petstore-server (ApiParam, RequestParam String defaultValue)\nspringboot-petstore-server-reactive (ApiParam, RequestParam String defaultValue)\nspringboot-petstore-server-beanvalidation (ApiParam, RequestParam String defaultValue)\nspringboot-petstore-server-implicitHeaders (ApiParam, RequestParam String defaultValue)\nspringboot-petstore-server-useOptional (ApiParam, RequestParam String defaultValue)\nspringboot-virtualan-petstore-server (ApiParam, RequestParam String defaultValue)\n\nVerification Test\n\nA test has been added at https://github.com/spacether/openapi-generator/blob/issue_1226_fix_defaultValue/modules/openapi-generator/src/test/java/org/openapitools/codegen/java/spring/SpringCodegenTest.java#L485\n\n\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.\n\nJava Technical Committee:\n@bbdouglas (2017/07) @sreeshas (2017/08) @jfiala (2017/08) @lukoyanov (2017/09) @cbornet (2017/09) @jeff9finger (2018/01) @karismann (2019/03) @Zomzog (2019/04) @lwlee2608 (2019/10)", "createdAt": "2020-01-10T18:49:15Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4969", "merged": true, "mergeCommit": {"oid": "8a94a3a7d585051fd95ea5952d1174515b82468b"}, "closed": true, "closedAt": "2020-01-14T14:38:17Z", "author": {"login": "spacether"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5DBp0AH2gAyMzYxNTc3MjA0OjRiZTI4MWU4OTUxNDNiMjYyZTc1NTJkNmE3MDViY2U2NmM4Y2NjMTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6R9lDgFqTM0MjU3ODgxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4be281e895143b262e7552d6a705bce66c8ccc16", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/4be281e895143b262e7552d6a705bce66c8ccc16", "committedDate": "2020-01-10T18:40:08Z", "message": "Updates spring generator to omit type suffixes from int float double defaults, adds testDefaultValuesFixed\n\nAdds the test testDefaultValuesFixed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjI4ODg4", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4969#pullrequestreview-341628888", "createdAt": "2020-01-13T03:30:09Z", "commit": {"oid": "4be281e895143b262e7552d6a705bce66c8ccc16"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzozMDowOVrOFcs0Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzozMDowOVrOFcs0Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYzODcwMg==", "bodyText": "We need a case for Long (isLongSchema) and add \"L\" at the end of the default value. Please see the error message below for details.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4969#discussion_r365638702", "createdAt": "2020-01-13T03:30:09Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/SpringCodegen.java", "diffHunk": "@@ -849,4 +852,83 @@ public void setPerformBeanValidation(boolean performBeanValidation) {\n     public void setUseOptional(boolean useOptional) {\n         this.useOptional = useOptional;\n     }\n+\n+    @Override\n+    public String toDefaultValue(Schema p) {\n+        // we use a custom version of this function to remove the l, d, and f suffixes from integer and double values\n+        // these values are later converted from strings to the primitive types using parseInt, parseLong etc so they\n+        // should not include type suffix literals\n+        // https://docs.oracle.com/javase/specs/jls/se7/html/jls-3.html#jls-3.10\n+        if (ModelUtils.isArraySchema(p)) {\n+            final ArraySchema ap = (ArraySchema) p;\n+            final String pattern;\n+            if (fullJavaUtil) {\n+                pattern = \"new java.util.ArrayList<%s>()\";\n+            } else {\n+                pattern = \"new ArrayList<%s>()\";\n+            }\n+            if (ap.getItems() == null) {\n+                return null;\n+            }\n+\n+            String typeDeclaration = getTypeDeclaration(ap.getItems());\n+            Object java8obj = additionalProperties.get(\"java8\");\n+            if (java8obj != null) {\n+                Boolean java8 = Boolean.valueOf(java8obj.toString());\n+                if (java8 != null && java8) {\n+                    typeDeclaration = \"\";\n+                }\n+            }\n+\n+            return String.format(Locale.ROOT, pattern, typeDeclaration);\n+        } else if (ModelUtils.isMapSchema(p)) {\n+            final String pattern;\n+            if (fullJavaUtil) {\n+                pattern = \"new java.util.HashMap<%s>()\";\n+            } else {\n+                pattern = \"new HashMap<%s>()\";\n+            }\n+            if (ModelUtils.getAdditionalProperties(p) == null) {\n+                return null;\n+            }\n+\n+            String typeDeclaration = String.format(Locale.ROOT, \"String, %s\", getTypeDeclaration(ModelUtils.getAdditionalProperties(p)));\n+            Object java8obj = additionalProperties.get(\"java8\");\n+            if (java8obj != null) {\n+                Boolean java8 = Boolean.valueOf(java8obj.toString());\n+                if (java8 != null && java8) {\n+                    typeDeclaration = \"\";\n+                }\n+            }\n+\n+            return String.format(Locale.ROOT, pattern, typeDeclaration);\n+        } else if (ModelUtils.isIntegerSchema(p)) {\n+            if (p.getDefault() != null) {\n+                return p.getDefault().toString();\n+            }\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4be281e895143b262e7552d6a705bce66c8ccc16"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjI4OTI5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4969#pullrequestreview-341628929", "createdAt": "2020-01-13T03:30:27Z", "commit": {"oid": "4be281e895143b262e7552d6a705bce66c8ccc16"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzozMDoyN1rOFcs0Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzozMDoyN1rOFcs0Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYzODczNQ==", "bodyText": "We need a case for Float (isFloatSchema) and add \"F\" at the end of the default value. Please see the error message below for details.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4969#discussion_r365638735", "createdAt": "2020-01-13T03:30:27Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/SpringCodegen.java", "diffHunk": "@@ -849,4 +852,83 @@ public void setPerformBeanValidation(boolean performBeanValidation) {\n     public void setUseOptional(boolean useOptional) {\n         this.useOptional = useOptional;\n     }\n+\n+    @Override\n+    public String toDefaultValue(Schema p) {\n+        // we use a custom version of this function to remove the l, d, and f suffixes from integer and double values\n+        // these values are later converted from strings to the primitive types using parseInt, parseLong etc so they\n+        // should not include type suffix literals\n+        // https://docs.oracle.com/javase/specs/jls/se7/html/jls-3.html#jls-3.10\n+        if (ModelUtils.isArraySchema(p)) {\n+            final ArraySchema ap = (ArraySchema) p;\n+            final String pattern;\n+            if (fullJavaUtil) {\n+                pattern = \"new java.util.ArrayList<%s>()\";\n+            } else {\n+                pattern = \"new ArrayList<%s>()\";\n+            }\n+            if (ap.getItems() == null) {\n+                return null;\n+            }\n+\n+            String typeDeclaration = getTypeDeclaration(ap.getItems());\n+            Object java8obj = additionalProperties.get(\"java8\");\n+            if (java8obj != null) {\n+                Boolean java8 = Boolean.valueOf(java8obj.toString());\n+                if (java8 != null && java8) {\n+                    typeDeclaration = \"\";\n+                }\n+            }\n+\n+            return String.format(Locale.ROOT, pattern, typeDeclaration);\n+        } else if (ModelUtils.isMapSchema(p)) {\n+            final String pattern;\n+            if (fullJavaUtil) {\n+                pattern = \"new java.util.HashMap<%s>()\";\n+            } else {\n+                pattern = \"new HashMap<%s>()\";\n+            }\n+            if (ModelUtils.getAdditionalProperties(p) == null) {\n+                return null;\n+            }\n+\n+            String typeDeclaration = String.format(Locale.ROOT, \"String, %s\", getTypeDeclaration(ModelUtils.getAdditionalProperties(p)));\n+            Object java8obj = additionalProperties.get(\"java8\");\n+            if (java8obj != null) {\n+                Boolean java8 = Boolean.valueOf(java8obj.toString());\n+                if (java8 != null && java8) {\n+                    typeDeclaration = \"\";\n+                }\n+            }\n+\n+            return String.format(Locale.ROOT, pattern, typeDeclaration);\n+        } else if (ModelUtils.isIntegerSchema(p)) {\n+            if (p.getDefault() != null) {\n+                return p.getDefault().toString();\n+            }\n+            return null;\n+        } else if (ModelUtils.isNumberSchema(p)) {\n+            if (p.getDefault() != null) {\n+                return p.getDefault().toString();\n+            }\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4be281e895143b262e7552d6a705bce66c8ccc16"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNjI5MDg0", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4969#pullrequestreview-341629084", "createdAt": "2020-01-13T03:31:29Z", "commit": {"oid": "4be281e895143b262e7552d6a705bce66c8ccc16"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzozMToyOVrOFcs00g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMzozMToyOVrOFcs00g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYzODg2Ng==", "bodyText": "FYI. I got the following when testing the spring app generated from this spec:\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.7.0:compile (default-compile) on project openapi-spring: Compilation failure\n[ERROR] /private/tmp/spring/src/main/java/org/openapitools/model/NumberHolder.java:[20,24] integer number too large: 9223372036854775807\n\nAppended \"L\" at the end of the default value fixes it.\nFor float, I fixed the issue by appending \"F\" to the default value.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4969#discussion_r365638866", "createdAt": "2020-01-13T03:31:29Z", "author": {"login": "wing328"}, "path": "modules/openapi-generator/src/test/resources/2_0/issue1226.yaml", "diffHunk": "@@ -0,0 +1,71 @@\n+swagger: '2.0'\n+info:\n+  description: 'blah'\n+  version: 1.0.0\n+  title: sample spec\n+host: fake.site.com\n+tags: []\n+schemes:\n+  - https\n+paths:\n+  /numberdata:\n+    post:\n+      summary: Get back a NumberHolder\n+      description: ''\n+      operationId: getNumberHolder\n+      consumes:\n+        - application/json\n+      produces:\n+        - application/json\n+      parameters: []\n+      responses:\n+        '200':\n+          description: successful operation\n+          schema:\n+            $ref: '#/definitions/NumberHolder'\n+  /numericqueryparams:\n+    get:\n+      tags:\n+        - user\n+      summary: a test route for numeric query params\n+      description: ''\n+      operationId: numericQueryParams\n+      produces:\n+        - application/json\n+      parameters:\n+        - in: query\n+          name: int64\n+          type: integer\n+          format: int64\n+          default: 9223372036854775807", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4be281e895143b262e7552d6a705bce66c8ccc16"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0db5354b7bccbc5cf4ce91d2233b0619adcecce", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/c0db5354b7bccbc5cf4ce91d2233b0619adcecce", "committedDate": "2020-01-13T18:44:33Z", "message": "Updates SpringCodegen to only remove character suffixes from CodegenParameter defaultValues, updates tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72acf7da94eaad6133fd9977b855ec1602b32433", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/72acf7da94eaad6133fd9977b855ec1602b32433", "committedDate": "2020-01-13T18:55:11Z", "message": "Updates java function comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3643f448b7c8d05babfb8ae88eb9645bbad94ec9", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3643f448b7c8d05babfb8ae88eb9645bbad94ec9", "committedDate": "2020-01-13T20:01:17Z", "message": "Adds early return in postProcessParameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "235768c412b76107edab279ad87b57e8a73d1fee", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/235768c412b76107edab279ad87b57e8a73d1fee", "committedDate": "2020-01-13T20:04:13Z", "message": "Removes unneeded imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d4a23ed800a5eceeca4c2d4e0fe539859c45893", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8d4a23ed800a5eceeca4c2d4e0fe539859c45893", "committedDate": "2020-01-13T20:06:04Z", "message": "Fixes decorators on java method postProcessParameter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5c365491518df9823aa76d807d14f6322254ac3", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/f5c365491518df9823aa76d807d14f6322254ac3", "committedDate": "2020-01-13T20:07:13Z", "message": "Fixes typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c99ebbd7417e52de17814aa940b26158b0ee9a7", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/0c99ebbd7417e52de17814aa940b26158b0ee9a7", "committedDate": "2020-01-13T20:08:09Z", "message": "Fixes paste error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8190af61ff71eebcdc9aa177d7e1a2c28d08c8fc", "author": {"user": {"login": "spacether", "name": "Justin Black"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/8190af61ff71eebcdc9aa177d7e1a2c28d08c8fc", "committedDate": "2020-01-13T20:09:16Z", "message": "Removes unused import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNTc4ODEw", "url": "https://github.com/OpenAPITools/openapi-generator/pull/4969#pullrequestreview-342578810", "createdAt": "2020-01-14T14:38:11Z", "commit": {"oid": "8190af61ff71eebcdc9aa177d7e1a2c28d08c8fc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1972, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}