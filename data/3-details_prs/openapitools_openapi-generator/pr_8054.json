{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5ODIzMTQx", "number": 8054, "title": "Stackoverflow in toExampleValue() for python client", "bodyText": "Added a Set to the toExampleValueRecursive() method to detect circular references.\nAdded a watered down GeoJson API that, prior to this commit, would have thrown a StackOverflowException\nAdded a unit test (testRecursiveToExample()) and expected output confirming that the fix works.\n@spacether this solution may be a little heavy handed.  I tried not to introduce another parameter to the toExampleValueRecursive(), but this seemed like the cleanest way to do it.\n\nPR checklist\n\n Read the contribution guidelines.\n Pull Request title clearly describes the work in the pull request and Pull Request description provides details about how to validate the work. Missing information here may result in delayed response from the community.\n If contributing template-only or documentation-only changes which will change sample output, build the project beforehand.\n Run the shell script ./bin/generate-samples.shto update all Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit as it would merge with master. These must match the expectations made by your contribution. You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example ./bin/generate-samples.sh bin/configs/java*. For Windows users, please run the script in Git BASH.\n File the PR against the correct branch: master\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-11-30T21:30:29Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8054", "merged": true, "mergeCommit": {"oid": "fd02bc3d848d3a6a27bdec7469f13ada430b4e81"}, "closed": true, "closedAt": "2020-12-28T17:30:29Z", "author": {"login": "fbl100"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhuQTzgFqTU0MTM4NTYyNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdqpmTcAFqTU1OTIzNDY2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMzg1NjI1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8054#pullrequestreview-541385625", "createdAt": "2020-11-30T23:50:11Z", "commit": {"oid": "eabf5ed19bd8a45f86483ffddd38da699198ad2c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNDM0NzI5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8054#pullrequestreview-541434729", "createdAt": "2020-12-01T02:03:15Z", "commit": {"oid": "cacc4d62ee6333d6b419d6ef25600e9876205da6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjowMzoxNVrOH8VNwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjowMzoxNVrOH8VNwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyNDE5NA==", "bodyText": "Your update is breaking these samples.\n\nClient\nAnimalFarm\nXmlItem\n... and others\n\nCan you update your code so these work correctly?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8054#discussion_r533024194", "createdAt": "2020-12-01T02:03:15Z", "author": {"login": "spacether"}, "path": "samples/client/petstore/python/docs/FakeApi.md", "diffHunk": "@@ -175,55 +173,7 @@ configuration = petstore_api.Configuration(\n with petstore_api.ApiClient() as api_client:\n     # Create an instance of the API class\n     api_instance = fake_api.FakeApi(api_client)\n-    xml_item = XmlItem(\n-        attribute_string=\"string\",\n-        attribute_number=1.234,\n-        attribute_integer=-2,\n-        attribute_boolean=True,\n-        wrapped_array=[\n-            1,\n-        ],\n-        name_string=\"string\",\n-        name_number=1.234,\n-        name_integer=-2,\n-        name_boolean=True,\n-        name_array=[\n-            1,\n-        ],\n-        name_wrapped_array=[\n-            1,\n-        ],\n-        prefix_string=\"string\",\n-        prefix_number=1.234,\n-        prefix_integer=-2,\n-        prefix_boolean=True,\n-        prefix_array=[\n-            1,\n-        ],\n-        prefix_wrapped_array=[\n-            1,\n-        ],\n-        namespace_string=\"string\",\n-        namespace_number=1.234,\n-        namespace_integer=-2,\n-        namespace_boolean=True,\n-        namespace_array=[\n-            1,\n-        ],\n-        namespace_wrapped_array=[\n-            1,\n-        ],\n-        prefix_ns_string=\"string\",\n-        prefix_ns_number=1.234,\n-        prefix_ns_integer=-2,\n-        prefix_ns_boolean=True,\n-        prefix_ns_array=[\n-            1,\n-        ],\n-        prefix_ns_wrapped_array=[\n-            1,\n-        ],\n-    ) # XmlItem | XmlItem Body\n+    xml_item = XmlItem(XmlItem) # XmlItem | XmlItem Body", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cacc4d62ee6333d6b419d6ef25600e9876205da6"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNDM1NzAy", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8054#pullrequestreview-541435702", "createdAt": "2020-12-01T02:06:13Z", "commit": {"oid": "cacc4d62ee6333d6b419d6ef25600e9876205da6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjowNjoxM1rOH8VRGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjowNjoxM1rOH8VRGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAyNTA0OQ==", "bodyText": "Shouldn't we only add a model when we have finished generating its sample?\nWhat are our recursive base cases here for cycles?\nHow about naming them seenModels because we have not finished processing it yet.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8054#discussion_r533025049", "createdAt": "2020-12-01T02:06:13Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientCodegen.java", "diffHunk": "@@ -948,6 +949,18 @@ private String toExampleValueRecursive(String modelName, Schema schema, Object o\n         if (objExample != null) {\n             example = objExample.toString();\n         }\n+\n+        // check for recursive model\n+        if (processedModels.contains(modelName)) {\n+            // have already processed this model\n+            // this happens when you have recursive or circular models\n+            return fullPrefix + modelName + closeChars;\n+        } else if(modelName != null && !modelName.isEmpty()){\n+            // if the model is non-null and non-empty, add it to the set\n+            processedModels.add(modelName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cacc4d62ee6333d6b419d6ef25600e9876205da6"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cacc4d62ee6333d6b419d6ef25600e9876205da6", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/cacc4d62ee6333d6b419d6ef25600e9876205da6", "committedDate": "2020-12-01T00:36:40Z", "message": "ran /bin/utils/ensure-up-to-date"}, "afterCommit": {"oid": "47da5e52f334f4110b23dd1cd8bfa3341d311ef2", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/47da5e52f334f4110b23dd1cd8bfa3341d311ef2", "committedDate": "2020-12-11T19:49:17Z", "message": "Fixes issue 8052: Stackoverflow in toExampleValue() for python client\n\nAdded a Set<String> in toExampleValueRecursive() to keep track of which models we have\ngenerated to avoid an infinite recursion for recursive models.  An example of a recursive\nmodel would be a GeoJson GeometryCollection."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxOTcxNjU0", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8054#pullrequestreview-551971654", "createdAt": "2020-12-14T23:12:54Z", "commit": {"oid": "47da5e52f334f4110b23dd1cd8bfa3341d311ef2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMzoxMjo1NFrOIFw3dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQyMzoxMjo1NFrOIFw3dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjkxNDQyMQ==", "bodyText": "null is invalid in Python. Can you update this value? If the list is not explicitly nullable, then the example value should be [] (empty list). If it is nullable, then the example value can be None.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8054#discussion_r542914421", "createdAt": "2020-12-14T23:12:54Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/test/resources/3_0/issue_8052_recursive_model_expected_value.txt", "diffHunk": "@@ -0,0 +1,9 @@\n+GeoJsonGeometry(\n+        type=\"GeometryCollection\",\n+        geometries=[\n+            GeoJsonGeometry(\n+                type=\"GeometryCollection\",\n+                geometries=null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47da5e52f334f4110b23dd1cd8bfa3341d311ef2"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxOTcyMzQz", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8054#pullrequestreview-551972343", "createdAt": "2020-12-14T23:14:21Z", "commit": {"oid": "47da5e52f334f4110b23dd1cd8bfa3341d311ef2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "47da5e52f334f4110b23dd1cd8bfa3341d311ef2", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/47da5e52f334f4110b23dd1cd8bfa3341d311ef2", "committedDate": "2020-12-11T19:49:17Z", "message": "Fixes issue 8052: Stackoverflow in toExampleValue() for python client\n\nAdded a Set<String> in toExampleValueRecursive() to keep track of which models we have\ngenerated to avoid an infinite recursion for recursive models.  An example of a recursive\nmodel would be a GeoJson GeometryCollection."}, "afterCommit": {"oid": "0cd251d923e73b5e5c6f4a9185781c28601b9032", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/0cd251d923e73b5e5c6f4a9185781c28601b9032", "committedDate": "2020-12-18T14:40:19Z", "message": "Fixes issue 8052: Stackoverflow in toExampleValue() for python client\n\nAdded a Set<String> in toExampleValueRecursive() to keep track of which models we have\ngenerated to avoid an infinite recursion for recursive models.  An example of a recursive\nmodel would be a GeoJson GeometryCollection."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NTg3MTAy", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8054#pullrequestreview-555587102", "createdAt": "2020-12-18T15:28:04Z", "commit": {"oid": "0cd251d923e73b5e5c6f4a9185781c28601b9032"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0cd251d923e73b5e5c6f4a9185781c28601b9032", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/0cd251d923e73b5e5c6f4a9185781c28601b9032", "committedDate": "2020-12-18T14:40:19Z", "message": "Fixes issue 8052: Stackoverflow in toExampleValue() for python client\n\nAdded a Set<String> in toExampleValueRecursive() to keep track of which models we have\ngenerated to avoid an infinite recursion for recursive models.  An example of a recursive\nmodel would be a GeoJson GeometryCollection."}, "afterCommit": {"oid": "63ac823cc8dbda3cf0d6da8d65f79b8930349975", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/63ac823cc8dbda3cf0d6da8d65f79b8930349975", "committedDate": "2020-12-24T15:49:50Z", "message": "Fixes issue 8052: Stackoverflow in toExampleValue() for python client\n\nAdded a Set<String> in toExampleValueRecursive() to keep track of which models we have\ngenerated to avoid an infinite recursion for recursive models.  An example of a recursive\nmodel would be a GeoJson GeometryCollection."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3206b2b1a9e67b124b71f570d4279d1ac6fc3bda", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3206b2b1a9e67b124b71f570d4279d1ac6fc3bda", "committedDate": "2020-12-28T13:50:31Z", "message": "Fixes issue 8052: Stackoverflow in toExampleValue() for python client\n\nAdded a Set<String> in toExampleValueRecursive() to keep track of which models we have\ngenerated to avoid an infinite recursion for recursive models.  An example of a recursive\nmodel would be a GeoJson GeometryCollection."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63ac823cc8dbda3cf0d6da8d65f79b8930349975", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/63ac823cc8dbda3cf0d6da8d65f79b8930349975", "committedDate": "2020-12-24T15:49:50Z", "message": "Fixes issue 8052: Stackoverflow in toExampleValue() for python client\n\nAdded a Set<String> in toExampleValueRecursive() to keep track of which models we have\ngenerated to avoid an infinite recursion for recursive models.  An example of a recursive\nmodel would be a GeoJson GeometryCollection."}, "afterCommit": {"oid": "3206b2b1a9e67b124b71f570d4279d1ac6fc3bda", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/3206b2b1a9e67b124b71f570d4279d1ac6fc3bda", "committedDate": "2020-12-28T13:50:31Z", "message": "Fixes issue 8052: Stackoverflow in toExampleValue() for python client\n\nAdded a Set<String> in toExampleValueRecursive() to keep track of which models we have\ngenerated to avoid an infinite recursion for recursive models.  An example of a recursive\nmodel would be a GeoJson GeometryCollection."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MjM0NjY1", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8054#pullrequestreview-559234665", "createdAt": "2020-12-28T17:30:00Z", "commit": {"oid": "3206b2b1a9e67b124b71f570d4279d1ac6fc3bda"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1888, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}