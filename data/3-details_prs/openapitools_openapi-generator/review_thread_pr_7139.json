{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNjAwNDA4", "number": 7139, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo0NTowM1rOEW0vEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNTowNTozMFrOEW1T3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzY4MTQ2OnYy", "diffSide": "LEFT", "path": "bin/configs/python-experimental.yaml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo0NTowM1rOG-Rrog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDoyOTo0MFrOG-esaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NDU5NA==", "bodyText": "Python-experimental uses some python templates to generate python code and selectively uses the python-experimental templates one level deeper. Our code assumes that the entry point is the python templates folder and we manually point to the python-experimental deeper templates when needed:\nhttps://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientExperimentalCodegen.java#L135\nWhy have you changed this?\nIf you want to only have a python-experimental template folder that is fine. To do that one would need to:\n\ncopy over the remaining missing python templates into the python-experimental templates folder\nupdate https://github.com/OpenAPITools/openapi-generator/blob/master/modules/openapi-generator/src/main/java/org/openapitools/codegen/languages/PythonClientExperimentalCodegen.java#L129 to add all the required python-eXperimental templates\n\nCould that change be in a separate PR to make it easier to review if you want to make that change?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r467954594", "createdAt": "2020-08-10T14:45:03Z", "author": {"login": "spacether"}, "path": "bin/configs/python-experimental.yaml", "diffHunk": "@@ -1,6 +1,6 @@\n generatorName: python-experimental\n outputDir: samples/openapi3/client/petstore/python-experimental\n inputSpec: modules/openapi-generator/src/test/resources/3_0/python-experimental/petstore-with-fake-endpoints-models-for-testing-with-http-signature.yaml\n-templateDir: modules/openapi-generator/src/main/resources/python", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxOTY5Ng==", "bodyText": "This was just misunderstanding on my part.  That it's overridden within the generator makes perfect sense.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r468019696", "createdAt": "2020-08-10T16:12:06Z", "author": {"login": "timgclark"}, "path": "bin/configs/python-experimental.yaml", "diffHunk": "@@ -1,6 +1,6 @@\n generatorName: python-experimental\n outputDir: samples/openapi3/client/petstore/python-experimental\n inputSpec: modules/openapi-generator/src/test/resources/3_0/python-experimental/petstore-with-fake-endpoints-models-for-testing-with-http-signature.yaml\n-templateDir: modules/openapi-generator/src/main/resources/python", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NDU5NA=="}, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEyMzM4Mw==", "bodyText": "So can you revert this change ;p?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r468123383", "createdAt": "2020-08-10T19:18:45Z", "author": {"login": "spacether"}, "path": "bin/configs/python-experimental.yaml", "diffHunk": "@@ -1,6 +1,6 @@\n generatorName: python-experimental\n outputDir: samples/openapi3/client/petstore/python-experimental\n inputSpec: modules/openapi-generator/src/test/resources/3_0/python-experimental/petstore-with-fake-endpoints-models-for-testing-with-http-signature.yaml\n-templateDir: modules/openapi-generator/src/main/resources/python", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NDU5NA=="}, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE2Nzc4NA==", "bodyText": "I saw this came back in along with the black changes - this was easy, but took some doing to get the diff happy on black.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r468167784", "createdAt": "2020-08-10T20:29:40Z", "author": {"login": "timgclark"}, "path": "bin/configs/python-experimental.yaml", "diffHunk": "@@ -1,6 +1,6 @@\n generatorName: python-experimental\n outputDir: samples/openapi3/client/petstore/python-experimental\n inputSpec: modules/openapi-generator/src/test/resources/3_0/python-experimental/petstore-with-fake-endpoints-models-for-testing-with-http-signature.yaml\n-templateDir: modules/openapi-generator/src/main/resources/python", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NDU5NA=="}, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzY4NTE1OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_test.mustache", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo0NTo1N1rOG-Rt8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo0NTo1N1rOG-Rt8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NTE4NA==", "bodyText": "Thank you for this fix! I missed this when I switched python-experimental to using classname.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r467955184", "createdAt": "2020-08-10T14:45:57Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/model_test.mustache", "diffHunk": "@@ -11,22 +11,22 @@ import {{packageName}}\n {{#imports}}\n {{{.}}}\n {{/imports}}\n-from {{modelPackage}}.{{classFilename}} import {{unescapedDescription}}\n+from {{modelPackage}}.{{classFilename}} import {{classname}}\n \n \n-class Test{{unescapedDescription}}(unittest.TestCase):\n-    \"\"\"{{unescapedDescription}} unit test stubs\"\"\"\n+class Test{{classname}}(unittest.TestCase):\n+    \"\"\"{{classname}} unit test stubs\"\"\"\n \n     def setUp(self):\n         pass\n \n     def tearDown(self):\n         pass\n \n-    def test{{unescapedDescription}}(self):\n-        \"\"\"Test {{unescapedDescription}}\"\"\"\n+    def test{{classname}}(self):\n+        \"\"\"Test {{classname}}\"\"\"\n         # FIXME: construct object with mandatory attributes with example values\n-        # model = {{unescapedDescription}}()  # noqa: E501\n+        # model = {{classname}}()  # noqa: E501", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzY4OTMwOnYy", "diffSide": "RIGHT", "path": "samples/openapi3/client/extensions/x-auth-id-alias/python-experimental/setup.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo0Njo1MFrOG-RwUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjoxMjoyMlrOG-VqhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NTc5Mw==", "bodyText": "Any chance of moving your black updates into a separate PR?\nIt will make it easier to review.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r467955793", "createdAt": "2020-08-10T14:46:50Z", "author": {"login": "spacether"}, "path": "samples/openapi3/client/extensions/x-auth-id-alias/python-experimental/setup.py", "diffHunk": "@@ -22,10 +22,10 @@\n # http://pypi.python.org/pypi/setuptools\n \n REQUIRES = [\n-  \"urllib3 >= 1.15\",\n-  \"certifi\",\n-  \"python-dateutil\",\n-  \"nulltype\",\n+    \"urllib3 >= 1.15\",\n+    \"certifi\",\n+    \"python-dateutil\",\n+    \"nulltype\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk5Njk4MA==", "bodyText": "Yes - black updates were accidental, will pull those out.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r467996980", "createdAt": "2020-08-10T15:39:12Z", "author": {"login": "timgclark"}, "path": "samples/openapi3/client/extensions/x-auth-id-alias/python-experimental/setup.py", "diffHunk": "@@ -22,10 +22,10 @@\n # http://pypi.python.org/pypi/setuptools\n \n REQUIRES = [\n-  \"urllib3 >= 1.15\",\n-  \"certifi\",\n-  \"python-dateutil\",\n-  \"nulltype\",\n+    \"urllib3 >= 1.15\",\n+    \"certifi\",\n+    \"python-dateutil\",\n+    \"nulltype\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NTc5Mw=="}, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxOTg0NQ==", "bodyText": "Reverted.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r468019845", "createdAt": "2020-08-10T16:12:22Z", "author": {"login": "timgclark"}, "path": "samples/openapi3/client/extensions/x-auth-id-alias/python-experimental/setup.py", "diffHunk": "@@ -22,10 +22,10 @@\n # http://pypi.python.org/pypi/setuptools\n \n REQUIRES = [\n-  \"urllib3 >= 1.15\",\n-  \"certifi\",\n-  \"python-dateutil\",\n-  \"nulltype\",\n+    \"urllib3 >= 1.15\",\n+    \"certifi\",\n+    \"python-dateutil\",\n+    \"nulltype\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NTc5Mw=="}, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzY5ODAxOnYy", "diffSide": "LEFT", "path": "samples/openapi3/client/petstore/python-experimental/test/test_drawing.py", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo0ODo1MlrOG-R1yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMjoyODo0NFrOG-h8GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NzE5Mg==", "bodyText": "So some of the files in the test directory have real tests.\nWe see that this method test_create_instances has a manually written test in it.\nThis update is deleting those real tests.\nPlease preserve them?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r467957192", "createdAt": "2020-08-10T14:48:52Z", "author": {"login": "spacether"}, "path": "samples/openapi3/client/petstore/python-experimental/test/test_drawing.py", "diffHunk": "@@ -41,130 +34,12 @@ def setUp(self):\n     def tearDown(self):\n         pass\n \n-    def test_create_instances(self):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAwMTIxMg==", "bodyText": "Let me take a stab at cleaning this up as well.\nI want to open a seperate core issue around this in general.  The fact that we both commit the model tests and don't regenerate model tests when present masked this issue for me.  (This is neither a huge priority, nor is there a single obvious fix for it)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r468001212", "createdAt": "2020-08-10T15:43:01Z", "author": {"login": "timgclark"}, "path": "samples/openapi3/client/petstore/python-experimental/test/test_drawing.py", "diffHunk": "@@ -41,130 +34,12 @@ def setUp(self):\n     def tearDown(self):\n         pass\n \n-    def test_create_instances(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NzE5Mg=="}, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxNjE3Nw==", "bodyText": "Can I suggest a fix? This has come up a couple of times.\nHow about:\n\nMoving these manually written tests into the tests folder. That tests folder stores manually written tests only.\nRenaming the tests folder something like tests_manual\n\nI am asking the other members of the core team for guidance on how to most cleanly delete our auto-gen tests folder.\nMy understanding is that tests are only regenerated if they are not present in the test folder.\nSo because we already have the files there, they were untouched.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r468016177", "createdAt": "2020-08-10T16:06:35Z", "author": {"login": "spacether"}, "path": "samples/openapi3/client/petstore/python-experimental/test/test_drawing.py", "diffHunk": "@@ -41,130 +34,12 @@ def setUp(self):\n     def tearDown(self):\n         pass\n \n-    def test_create_instances(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NzE5Mg=="}, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAyMTg2NQ==", "bodyText": "I pulled out all but one of the sample test changes.  Seeing that we have both the generated test stubs and real tests, I'm not sure how much value there is in keeping all of the stubs up to date.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r468021865", "createdAt": "2020-08-10T16:15:45Z", "author": {"login": "timgclark"}, "path": "samples/openapi3/client/petstore/python-experimental/test/test_drawing.py", "diffHunk": "@@ -41,130 +34,12 @@ def setUp(self):\n     def tearDown(self):\n         pass\n \n-    def test_create_instances(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NzE5Mg=="}, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAyNjgzNg==", "bodyText": "Missed that last round of suggestions - let me take a run at that.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r468026836", "createdAt": "2020-08-10T16:24:05Z", "author": {"login": "timgclark"}, "path": "samples/openapi3/client/petstore/python-experimental/test/test_drawing.py", "diffHunk": "@@ -41,130 +34,12 @@ def setUp(self):\n     def tearDown(self):\n         pass\n \n-    def test_create_instances(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NzE5Mg=="}, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEwNzk3Nw==", "bodyText": "Moved tests to tests_manual.\nMoved the following from test into tests_manual:\n\nsamples/openapi3/client/petstore/python-experimental/test/test_drawing.py\nsamples/openapi3/client/petstore/python-experimental/test/test_fake_api.py\nsamples/openapi3/client/petstore/python-experimental/test/test_shape.py\nsamples/openapi3/client/petstore/python-experimental/test/test_fruit_req.py\nsamples/openapi3/client/petstore/python-experimental/test/test_gm_fruit.py\nsamples/openapi3/client/petstore/python-experimental/test/test_fruit.py\n\nRegenerated all tests in the test directory.\nSquashed everything down to one commit - I hated to do it, but the reason some of the tests were generating incorrectly was drift from master since I started working on this more than a week back.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r468107977", "createdAt": "2020-08-10T18:49:35Z", "author": {"login": "timgclark"}, "path": "samples/openapi3/client/petstore/python-experimental/test/test_drawing.py", "diffHunk": "@@ -41,130 +34,12 @@ def setUp(self):\n     def tearDown(self):\n         pass\n \n-    def test_create_instances(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NzE5Mg=="}, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODIyMDk1Mw==", "bodyText": "Thank you very much!\nSquashing is fine here", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r468220953", "createdAt": "2020-08-10T22:28:44Z", "author": {"login": "spacether"}, "path": "samples/openapi3/client/petstore/python-experimental/test/test_drawing.py", "diffHunk": "@@ -41,130 +34,12 @@ def setUp(self):\n     def tearDown(self):\n         pass\n \n-    def test_create_instances(self):", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NzE5Mg=="}, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzc3NTY3OnYy", "diffSide": "RIGHT", "path": "samples/openapi3/client/extensions/x-auth-id-alias/python-experimental/x_auth_id_alias/api/usage_api.py", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNTowNTozMFrOG-SlUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNjoxNTo1NVrOG-Vyzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk2OTM2MQ==", "bodyText": "I see this change in the samples but not in the mustache file.\nDid you run black on the sample results manually?\nIf so CI will fail because the branch contents disagree with the CI file contents and there will be uncommitted changes.\nIf we want these black changes, they must be applied to our mustache files to have them show up in the samples.\nCI automatically regenerates samples and will wipe out any code changes written there that happened after generation.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r467969361", "createdAt": "2020-08-10T15:05:30Z", "author": {"login": "spacether"}, "path": "samples/openapi3/client/extensions/x-auth-id-alias/python-experimental/x_auth_id_alias/api/usage_api.py", "diffHunk": "@@ -77,78 +74,61 @@ def __any_key(\n                     If the method is called asynchronously, returns the request\n                     thread.\n             \"\"\"\n-            kwargs['async_req'] = kwargs.get(\n-                'async_req', False\n+            kwargs[\"async_req\"] = kwargs.get(\"async_req\", False)\n+            kwargs[\"_return_http_data_only\"] = kwargs.get(\n+                \"_return_http_data_only\", True\n             )\n-            kwargs['_return_http_data_only'] = kwargs.get(\n-                '_return_http_data_only', True\n-            )\n-            kwargs['_preload_content'] = kwargs.get(\n-                '_preload_content', True\n-            )\n-            kwargs['_request_timeout'] = kwargs.get(\n-                '_request_timeout', None\n-            )\n-            kwargs['_check_input_type'] = kwargs.get(\n-                '_check_input_type', True\n-            )\n-            kwargs['_check_return_type'] = kwargs.get(\n-                '_check_return_type', True\n-            )\n-            kwargs['_host_index'] = kwargs.get('_host_index')\n+            kwargs[\"_preload_content\"] = kwargs.get(\"_preload_content\", True)\n+            kwargs[\"_request_timeout\"] = kwargs.get(\"_request_timeout\", None)\n+            kwargs[\"_check_input_type\"] = kwargs.get(\"_check_input_type\", True)\n+            kwargs[\"_check_return_type\"] = kwargs.get(\"_check_return_type\", True)\n+            kwargs[\"_host_index\"] = kwargs.get(\"_host_index\")\n             return self.call_with_http_info(**kwargs)\n \n         self.any_key = Endpoint(\n             settings={\n-                'response_type': ({str: (bool, date, datetime, dict, float, int, list, str, none_type)},),\n-                'auth': [\n-                    'api_key',\n-                    'api_key_query'\n-                ],\n-                'endpoint_path': '/any',\n-                'operation_id': 'any_key',\n-                'http_method': 'GET',\n-                'servers': None,\n+                \"response_type\": (\n+                    {\n+                        str: (\n+                            bool,\n+                            date,\n+                            datetime,\n+                            dict,\n+                            float,\n+                            int,\n+                            list,\n+                            str,\n+                            none_type,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAwMTcyNA==", "bodyText": "Yes, see above on accidentally committing the black changes. Fixing this up.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r468001724", "createdAt": "2020-08-10T15:43:49Z", "author": {"login": "timgclark"}, "path": "samples/openapi3/client/extensions/x-auth-id-alias/python-experimental/x_auth_id_alias/api/usage_api.py", "diffHunk": "@@ -77,78 +74,61 @@ def __any_key(\n                     If the method is called asynchronously, returns the request\n                     thread.\n             \"\"\"\n-            kwargs['async_req'] = kwargs.get(\n-                'async_req', False\n+            kwargs[\"async_req\"] = kwargs.get(\"async_req\", False)\n+            kwargs[\"_return_http_data_only\"] = kwargs.get(\n+                \"_return_http_data_only\", True\n             )\n-            kwargs['_return_http_data_only'] = kwargs.get(\n-                '_return_http_data_only', True\n-            )\n-            kwargs['_preload_content'] = kwargs.get(\n-                '_preload_content', True\n-            )\n-            kwargs['_request_timeout'] = kwargs.get(\n-                '_request_timeout', None\n-            )\n-            kwargs['_check_input_type'] = kwargs.get(\n-                '_check_input_type', True\n-            )\n-            kwargs['_check_return_type'] = kwargs.get(\n-                '_check_return_type', True\n-            )\n-            kwargs['_host_index'] = kwargs.get('_host_index')\n+            kwargs[\"_preload_content\"] = kwargs.get(\"_preload_content\", True)\n+            kwargs[\"_request_timeout\"] = kwargs.get(\"_request_timeout\", None)\n+            kwargs[\"_check_input_type\"] = kwargs.get(\"_check_input_type\", True)\n+            kwargs[\"_check_return_type\"] = kwargs.get(\"_check_return_type\", True)\n+            kwargs[\"_host_index\"] = kwargs.get(\"_host_index\")\n             return self.call_with_http_info(**kwargs)\n \n         self.any_key = Endpoint(\n             settings={\n-                'response_type': ({str: (bool, date, datetime, dict, float, int, list, str, none_type)},),\n-                'auth': [\n-                    'api_key',\n-                    'api_key_query'\n-                ],\n-                'endpoint_path': '/any',\n-                'operation_id': 'any_key',\n-                'http_method': 'GET',\n-                'servers': None,\n+                \"response_type\": (\n+                    {\n+                        str: (\n+                            bool,\n+                            date,\n+                            datetime,\n+                            dict,\n+                            float,\n+                            int,\n+                            list,\n+                            str,\n+                            none_type,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk2OTM2MQ=="}, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAyMTk2Ng==", "bodyText": "Reverted.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7139#discussion_r468021966", "createdAt": "2020-08-10T16:15:55Z", "author": {"login": "timgclark"}, "path": "samples/openapi3/client/extensions/x-auth-id-alias/python-experimental/x_auth_id_alias/api/usage_api.py", "diffHunk": "@@ -77,78 +74,61 @@ def __any_key(\n                     If the method is called asynchronously, returns the request\n                     thread.\n             \"\"\"\n-            kwargs['async_req'] = kwargs.get(\n-                'async_req', False\n+            kwargs[\"async_req\"] = kwargs.get(\"async_req\", False)\n+            kwargs[\"_return_http_data_only\"] = kwargs.get(\n+                \"_return_http_data_only\", True\n             )\n-            kwargs['_return_http_data_only'] = kwargs.get(\n-                '_return_http_data_only', True\n-            )\n-            kwargs['_preload_content'] = kwargs.get(\n-                '_preload_content', True\n-            )\n-            kwargs['_request_timeout'] = kwargs.get(\n-                '_request_timeout', None\n-            )\n-            kwargs['_check_input_type'] = kwargs.get(\n-                '_check_input_type', True\n-            )\n-            kwargs['_check_return_type'] = kwargs.get(\n-                '_check_return_type', True\n-            )\n-            kwargs['_host_index'] = kwargs.get('_host_index')\n+            kwargs[\"_preload_content\"] = kwargs.get(\"_preload_content\", True)\n+            kwargs[\"_request_timeout\"] = kwargs.get(\"_request_timeout\", None)\n+            kwargs[\"_check_input_type\"] = kwargs.get(\"_check_input_type\", True)\n+            kwargs[\"_check_return_type\"] = kwargs.get(\"_check_return_type\", True)\n+            kwargs[\"_host_index\"] = kwargs.get(\"_host_index\")\n             return self.call_with_http_info(**kwargs)\n \n         self.any_key = Endpoint(\n             settings={\n-                'response_type': ({str: (bool, date, datetime, dict, float, int, list, str, none_type)},),\n-                'auth': [\n-                    'api_key',\n-                    'api_key_query'\n-                ],\n-                'endpoint_path': '/any',\n-                'operation_id': 'any_key',\n-                'http_method': 'GET',\n-                'servers': None,\n+                \"response_type\": (\n+                    {\n+                        str: (\n+                            bool,\n+                            date,\n+                            datetime,\n+                            dict,\n+                            float,\n+                            int,\n+                            list,\n+                            str,\n+                            none_type,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk2OTM2MQ=="}, "originalCommit": {"oid": "1f7a9e1e894106d4a1ce9c7c555efd61929db22f"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4264, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}