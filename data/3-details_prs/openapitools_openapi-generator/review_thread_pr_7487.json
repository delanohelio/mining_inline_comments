{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMzg3OTAz", "number": 7487, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMjoxOTo0NFrOEmV-Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMjoxOTo0NFrOEmV-Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NjQxMjk4OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/java/AbstractJavaCodegenTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMjoxOTo0NFrOHWT7bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMjoxOTo0NFrOHWT7bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE1NzIzMA==", "bodyText": "All above changes are minor cleanup. The assertions weren't in (actual, expected) format, which could lead to confusion on build failures.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7487#discussion_r493157230", "createdAt": "2020-09-23T02:19:44Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/test/java/org/openapitools/codegen/java/AbstractJavaCodegenTest.java", "diffHunk": "@@ -42,27 +42,27 @@\n \n     @Test\n     public void toEnumVarNameShouldNotShortenUnderScore() throws Exception {\n-        Assert.assertEquals(\"UNDERSCORE\", fakeJavaCodegen.toEnumVarName(\"_\", \"String\"));\n-        Assert.assertEquals(\"__\", fakeJavaCodegen.toEnumVarName(\"__\", \"String\"));\n-        Assert.assertEquals(\"__\", fakeJavaCodegen.toEnumVarName(\"_,.\", \"String\"));\n+        Assert.assertEquals(fakeJavaCodegen.toEnumVarName(\"_\", \"String\"), \"UNDERSCORE\");\n+        Assert.assertEquals(fakeJavaCodegen.toEnumVarName(\"__\", \"String\"), \"__\");\n+        Assert.assertEquals(fakeJavaCodegen.toEnumVarName(\"_,.\", \"String\"), \"__\");\n     }\n \n     @Test\n     public void toVarNameShouldAvoidOverloadingGetClassMethod() throws Exception {\n-        Assert.assertEquals(\"propertyClass\", fakeJavaCodegen.toVarName(\"class\"));\n-        Assert.assertEquals(\"propertyClass\", fakeJavaCodegen.toVarName(\"_class\"));\n-        Assert.assertEquals(\"propertyClass\", fakeJavaCodegen.toVarName(\"__class\"));\n+        Assert.assertEquals(fakeJavaCodegen.toVarName(\"class\"), \"propertyClass\");\n+        Assert.assertEquals(fakeJavaCodegen.toVarName(\"_class\"), \"propertyClass\");\n+        Assert.assertEquals(fakeJavaCodegen.toVarName(\"__class\"), \"propertyClass\");\n     }\n \n     @Test\n     public void toModelNameShouldUseProvidedMapping() throws Exception {\n         fakeJavaCodegen.importMapping().put(\"json_myclass\", \"com.test.MyClass\");\n-        Assert.assertEquals(\"com.test.MyClass\", fakeJavaCodegen.toModelName(\"json_myclass\"));\n+        Assert.assertEquals(fakeJavaCodegen.toModelName(\"json_myclass\"), \"com.test.MyClass\");\n     }\n \n     @Test\n     public void toModelNameUsesPascalCase() throws Exception {\n-        Assert.assertEquals(\"JsonAnotherclass\", fakeJavaCodegen.toModelName(\"json_anotherclass\"));\n+        Assert.assertEquals(fakeJavaCodegen.toModelName(\"json_anotherclass\"), \"JsonAnotherclass\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47569199185e586d253cab6f4c4c2b00f2733e8b"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4178, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}