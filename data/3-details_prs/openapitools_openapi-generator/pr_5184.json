{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5ODQwNzIw", "number": 5184, "title": "[codegen] Add code comments and improve \"first content\" warning", "bodyText": "When the OAS spec has paths with multiple content types, the following obscure warning is logged:\no.o.codegen.utils.ModelUtils - Multiple schemas found in content, returning only the first one\nI have added code comments and better log message.\no.o.codegen.utils.ModelUtils - Multiple schemas found in the OAS content section, returning only the first one (\u2018application/json\u2019)\nAs a possible enhancement, I suggest supporting a configuration property to specify the desired content type. Sometimes it\u2019s not possible to reorder the OAS spec because you are the consumer of the spec, not the author.\n\nPR checklist\n\n Read the contribution guidelines.\n If contributing template-only or documentation-only changes which will change sample output, build the project before.\n Run the shell script(s) under ./bin/ (or Windows batch scripts under.\\bin\\windows) to update Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run ./bin/{LANG}-petstore.sh, ./bin/openapi3/{LANG}-petstore.sh if updating the code or mustache templates for a language ({LANG}) (e.g. php, ruby, python, etc).\n File the PR against the correct branch: master, 4.3.x, 5.0.x. Default: master.\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-02-01T02:26:10Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184", "merged": true, "mergeCommit": {"oid": "6f1ce5645ebf61b77ae0d6bc523b553f706d25c2"}, "closed": true, "closedAt": "2020-02-01T13:50:11Z", "author": {"login": "sebastien-rosset"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_6QvMAH2gAyMzY5ODQwNzIwOjM2YmQzOGJkODExOGY3Y2ViM2QyYjRiMjNlYzZkMDQxNWIxZTQwMWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_7Uq2AFqTM1MTg2Mjk4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d", "committedDate": "2020-02-01T02:24:56Z", "message": "Add code comments and improve warning"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODYwMTI5", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#pullrequestreview-351860129", "createdAt": "2020-02-01T02:37:23Z", "commit": {"oid": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjozNzoyNFrOFkcBHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjozNzoyNFrOFkcBHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjA5NA==", "bodyText": "This type of warning tends to be buried among other informational log messages, but it is crucial to how codegen processes the OAS.\nAs a suggested future enhancement, the tool should generate a list of warnings that can be output to a structured format, such as JSON. The very last log message should be a summary of the warnings, with a way to get the list of warnings.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373752094", "createdAt": "2020-02-01T02:37:24Z", "author": {"login": "sebastien-rosset"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODYwNzE3", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#pullrequestreview-351860717", "createdAt": "2020-02-01T02:47:14Z", "commit": {"oid": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjo0NzoxNFrOFkcDGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMjo1ODozN1rOFkcFeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjYwMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n          \n          \n            \n                        LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ({})\", entry.getKey());\n          \n      \n    \n    \n  \n\nUsing String.format syntax means the string isn't formatted with entry.getKey() if the log level is above warn.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373752600", "createdAt": "2020-02-01T02:47:14Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MjYxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            entry.getKey() + \"')\");\n          \n      \n    \n    \n  \n\nWrapped line isn't need if prev suggestion is accepted.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373752612", "createdAt": "2020-02-01T02:47:29Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n+                entry.getKey() + \"')\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MzE2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    MediaType mediaType = content.values().iterator().next();\n          \n          \n            \n                    MediaType mediaType = entry.getValue();\n          \n      \n    \n    \n  \n\nNo need for created the new collection, iterator, and iteration if you've jut done the same on the previous line ;)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373753160", "createdAt": "2020-02-01T02:57:43Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1MzIxMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return entry.getValue().getSchema();\n          \n          \n            \n                    return mediaType.getSchema();", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#discussion_r373753210", "createdAt": "2020-02-01T02:58:37Z", "author": {"login": "jimschubert"}, "path": "modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/ModelUtils.java", "diffHunk": "@@ -791,15 +791,37 @@ public static Schema getSchemaFromResponse(ApiResponse response) {\n         return getSchemaFromContent(response.getContent());\n     }\n \n+    /**\n+     * Return the first Schema from a specified OAS 'content' section.\n+     * \n+     * For example, given the following OAS, this method returns the schema\n+     * for the 'application/json' content type because it is listed first in the OAS.\n+     * \n+     * responses:\n+     *   '200':\n+     *     content:\n+     *       application/json:\n+     *         schema:\n+     *           $ref: '#/components/schemas/XYZ'\n+     *       application/xml:\n+     *          ...\n+     *   \n+     * @param content a 'content' section in the OAS specification. \n+     * @return the Schema.\n+     */\n     private static Schema getSchemaFromContent(Content content) {\n         if (content == null || content.isEmpty()) {\n             return null;\n         }\n+        Map.Entry<String, MediaType> entry = content.entrySet().iterator().next();\n+        MediaType mediaType = content.values().iterator().next();\n         if (content.size() > 1) {\n-            LOGGER.warn(\"Multiple schemas found in content, returning only the first one\");\n+            // Other content types are currently ignored by codegen. If you see this warning,\n+            // reorder the OAS spec to put the desired content type first.\n+            LOGGER.warn(\"Multiple schemas found in the OAS 'content' section, returning only the first one ('\" +\n+                entry.getKey() + \"')\");\n         }\n-        MediaType mediaType = content.values().iterator().next();\n-        return mediaType.getSchema();\n+        return entry.getValue().getSchema();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36bd38bd8118f7ceb3d2b4b23ec6d0415b1e401d"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0ae02ee5d53acab87b949e2acebc5be4f1ce331", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/d0ae02ee5d53acab87b949e2acebc5be4f1ce331", "committedDate": "2020-02-01T03:02:06Z", "message": "add code comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "062caf9d1fcd11b28c73325559ff2e3623496592", "author": {"user": {"login": "sebastien-rosset", "name": "Sebastien Rosset"}}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/062caf9d1fcd11b28c73325559ff2e3623496592", "committedDate": "2020-02-01T03:24:03Z", "message": "remove line which is no longer needed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxODYyOTg4", "url": "https://github.com/OpenAPITools/openapi-generator/pull/5184#pullrequestreview-351862988", "createdAt": "2020-02-01T03:39:08Z", "commit": {"oid": "062caf9d1fcd11b28c73325559ff2e3623496592"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2919, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}