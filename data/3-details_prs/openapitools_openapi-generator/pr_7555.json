{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NDY2MjAw", "number": 7555, "title": "added serialize option in to_dict function in python generated model", "bodyText": "PR checklist\n\n Read the contribution guidelines.\n Pull Request title clearly describes the work in the pull request and Pull Request description provides details about how to validate the work. Missing information here may result in delayed response from the community.\n If contributing template-only or documentation-only changes which will change sample output, build the project beforehand.\n Run the shell script ./bin/generate-samples.shto update all Petstore samples related to your fix. This is important, as CI jobs will verify all generator outputs of your HEAD commit as it would merge with master. These must match the expectations made by your contribution. You may regenerate an individual generator by passing the relevant config(s) as an argument to the script, for example ./bin/generate-samples.sh bin/configs/java*. For Windows users, please run the script in Git BASH.\n File the PR against the correct branch: master\n Copy the technical committee to review the pull request if your PR is targeting a particular programming language.", "createdAt": "2020-09-30T12:16:27Z", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7555", "merged": true, "mergeCommit": {"oid": "01d0b5d4780ebe2d6025e2b443ec136c6ce16c45"}, "closed": true, "closedAt": "2020-11-05T17:42:36Z", "author": {"login": "gtarcoder"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdN7y60AH2gAyNDk1NDY2MjAwOjg1MTI4NGMyZTAwOWFlNjY0YTgwNjdhYmU5ZDNmYzcyODVjMDg5M2U=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZmAp7gFqTUyNDUxMTMyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "851284c2e009ae664a8067abe9d3fc7285c0893e", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/851284c2e009ae664a8067abe9d3fc7285c0893e", "committedDate": "2020-09-30T12:18:16Z", "message": "added to_json_dict in python generated model"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df0ad6064007ada016c8834f7d6939ec85d105b5", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/df0ad6064007ada016c8834f7d6939ec85d105b5", "committedDate": "2020-09-30T12:15:38Z", "message": "added to_json_dict in python generated model"}, "afterCommit": {"oid": "851284c2e009ae664a8067abe9d3fc7285c0893e", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/851284c2e009ae664a8067abe9d3fc7285c0893e", "committedDate": "2020-09-30T12:18:16Z", "message": "added to_json_dict in python generated model"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyMjAzODQz", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7555#pullrequestreview-502203843", "createdAt": "2020-10-05T16:02:05Z", "commit": {"oid": "851284c2e009ae664a8067abe9d3fc7285c0893e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjowMjowNVrOHcjxlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNjowMjowNVrOHcjxlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTcwODMxMA==", "bodyText": "This code looks good but it is being added to every model that is generated which creates a lot of extra lines.\nHow about centralizing a utility fn to do this or putting it as a class method in a base class?\nThat's what we do in python_experimental and we do it to minimize code duplication.\n\nmodelutils.model_to_dict\nusing it in a model template in our ModelNormal object based model class\nexample output model method", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7555#discussion_r499708310", "createdAt": "2020-10-05T16:02:05Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/model.mustache", "diffHunk": "@@ -221,6 +221,40 @@ class {{classname}}(object):\n \n         return result\n \n+    def to_json_dict(self):\n+        \"\"\"Returns the model properties as a dict\"\"\"\n+        result = {}\n+\n+        def get_value(val):\n+            if hasattr(val, \"to_json_dict\"):\n+                return val.to_json_dict()\n+            elif hasattr(val, \"to_dict\"):\n+                return val.to_dict()\n+            else:\n+                return val\n+\n+        for attr, _ in six.iteritems(self.openapi_types):\n+            value = getattr(self, attr)\n+            key = self.attribute_map.get(attr, attr)\n+            if isinstance(value, list):\n+                result[key] = list(map(\n+                    lambda x: get_value(x),\n+                    value\n+                ))\n+            elif hasattr(value, \"to_json_dict\"):\n+                result[key] = value.to_json_dict()\n+            elif hasattr(value, \"to_dict\"):\n+                result[key] = value.to_dict()\n+            elif isinstance(value, dict):\n+                result[key] = dict(map(\n+                    lambda item: (item[0], get_value(item[1])),\n+                    value.items()\n+                ))\n+            else:\n+                result[key] = value\n+\n+        return result\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "851284c2e009ae664a8067abe9d3fc7285c0893e"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da30ba4b37dd21cb892605be8f333e4cd4d71ba4", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/da30ba4b37dd21cb892605be8f333e4cd4d71ba4", "committedDate": "2020-10-27T12:12:22Z", "message": "update to_dict"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MjU5MDY4", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7555#pullrequestreview-518259068", "createdAt": "2020-10-28T01:16:49Z", "commit": {"oid": "da30ba4b37dd21cb892605be8f333e4cd4d71ba4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMToxNjo1MFrOHpWiRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMToxNjo1MFrOHpWiRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzEyMjg4NQ==", "bodyText": "Why would to_dict have more than 2 args?\nWhy is the number of arguments not constant?\nHow about:\ntry:\n    return x.to_dict(serialize)\nexcept AttributeError:\n    return x", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7555#discussion_r513122885", "createdAt": "2020-10-28T01:16:50Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/model.mustache", "diffHunk": "@@ -197,27 +197,37 @@ class {{classname}}(object):\n         return self.discriminator_value_class_map.get(discriminator_value)\n \n {{/discriminator}}\n-    def to_dict(self):\n+    def to_dict(self, serialize=False):\n         \"\"\"Returns the model properties as a dict\"\"\"\n         result = {}\n \n+        def convert(x):\n+            if hasattr(x, \"to_dict\"):\n+                args = inspect.getargspec(x.to_dict).args\n+                if len(args) == 1:\n+                    return x.to_dict()\n+                elif len(args) == 2:\n+                    return x.to_dict(serialize)\n+                else:\n+                    raise ValueError(\"Invalid argument size of to_dict\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da30ba4b37dd21cb892605be8f333e4cd4d71ba4"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c670fdfc14490ef7736ab48035f3a5b2c80c173", "author": {"user": null}, "url": "https://github.com/OpenAPITools/openapi-generator/commit/2c670fdfc14490ef7736ab48035f3a5b2c80c173", "committedDate": "2020-10-28T01:56:14Z", "message": "updated to_dict"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NTExMzI2", "url": "https://github.com/OpenAPITools/openapi-generator/pull/7555#pullrequestreview-524511326", "createdAt": "2020-11-05T17:42:27Z", "commit": {"oid": "2c670fdfc14490ef7736ab48035f3a5b2c80c173"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3057, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}