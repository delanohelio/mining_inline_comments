{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyOTk3NDI1", "number": 8103, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxNToxMjoxMVrOFReNNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxNToxMjoxMVrOFReNNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzODY1MDE0OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/go-server/routers.mustache", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxNToxMjoxMVrOIX7MGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxNToxMjoxMVrOIX7MGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MTk1NzkxMw==", "bodyText": "multipart is not defined as an import here. We should add \"mime/multipart\" in the import list", "url": "https://github.com/OpenAPITools/openapi-generator/pull/8103#discussion_r561957913", "createdAt": "2021-01-21T15:12:11Z", "author": {"login": "ys"}, "path": "modules/openapi-generator/src/main/resources/go-server/routers.mustache", "diffHunk": "@@ -66,28 +66,61 @@ func EncodeJSONResponse(i interface{}, status *int, w http.ResponseWriter) error\n \n // ReadFormFileToTempFile reads file data from a request form and writes it to a temporary file\n func ReadFormFileToTempFile(r *http.Request, key string) (*os.File, error) {\n-\tr.ParseForm()\n-\tformFile, _, err := r.FormFile(key)\n+\t_, fileHeader, err := r.FormFile(key)\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \n-\tdefer formFile.Close()\n-\tfile, err := ioutil.TempFile(\"tmp\", key)\n+\treturn readFileHeaderToTempFile(fileHeader)\n+}\n+\n+// ReadFormFilesToTempFiles reads files array data from a request form and writes it to a temporary files\n+func ReadFormFilesToTempFiles(r *http.Request, key string) ([]*os.File, error) {\n+\tif err := r.ParseMultipartForm(32 << 20); err != nil {\n+\t\treturn nil, err\n+\t}\n+\n+\tfiles := make([]*os.File, 0, len(r.MultipartForm.File[key]))\n+\n+\tfor _, fileHeader := range r.MultipartForm.File[key] {\n+\t\tfile, err := readFileHeaderToTempFile(fileHeader)\n+\t\tif err != nil {\n+\t\t\treturn nil, err\n+\t\t}\n+\n+\t\tfiles = append(files, file)\n+\t}\n+\n+\treturn files, nil\n+}\n+\n+// readFileHeaderToTempFile reads multipart.FileHeader and writes it to a temporary file\n+func readFileHeaderToTempFile(fileHeader *multipart.FileHeader) (*os.File, error) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2bb417ce40c9ef44e924f934accf041f5acc72f5"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3980, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}