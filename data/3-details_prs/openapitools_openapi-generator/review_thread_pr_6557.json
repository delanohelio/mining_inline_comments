{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4Mzc0MjM5", "number": 6557, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMTo1NjoxOVrOEC7Rdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOToxNjo1N1rOEE_cSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTAzNzM0OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMTo1NjoxOVrOGfrhCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMTo1NjoxOVrOGfrhCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg3MjAwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"\"\"Default sever variables\n          \n          \n            \n                    \"\"\"Default server variables", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r435872008", "createdAt": "2020-06-05T11:56:19Z", "author": {"login": "therve"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -155,20 +155,30 @@ conf = {{{packageName}}}.Configuration(\n \n     _default = None\n \n-    def __init__(self, host=\"{{{basePath}}}\",\n+    def __init__(self, host=None,\n                  api_key=None, api_key_prefix=None,\n                  username=None, password=None,\n                  discard_unknown_keys=False,\n                  disabled_client_side_validations=\"\",\n {{#hasHttpSignatureMethods}}\n                  signing_info=None,\n {{/hasHttpSignatureMethods}}\n+                 server_index=None, server_variables=None,\n+                 server_operation_index=None, server_operation_variables=None,\n                  ):\n         \"\"\"Constructor\n         \"\"\"\n-        self.host = host\n+        self._base_path = \"{{{basePath}}}\" if host is None else host\n         \"\"\"Default Base url\n         \"\"\"\n+        self.server_index = 0 if server_index is None and host is None else server_index\n+        self.server_operation_index = server_operation_index or {}\n+        \"\"\"Default server index\n+        \"\"\"\n+        self.server_variables = server_variables or {}\n+        self.server_operation_variables = server_operation_variables or {}\n+        \"\"\"Default sever variables", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4985f2711ee994f75deb55d67a028c54defc0d8c"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTAzODI1OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMTo1NjozOFrOGfrhmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMTo1NjozOFrOGfrhmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg3MjE1Mg==", "bodyText": "Missing servers params doc.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r435872152", "createdAt": "2020-06-05T11:56:38Z", "author": {"login": "therve"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -561,14 +571,14 @@ conf = {{{packageName}}}.Configuration(\n             {{/servers}}\n         ]\n \n-    def get_host_from_settings(self, index, variables=None):\n+    def get_host_from_settings(self, index, variables=None, servers=None):\n         \"\"\"Gets host URL based on the index and variables\n         :param index: array index of the host settings\n         :param variables: hash of variable and the corresponding value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4985f2711ee994f75deb55d67a028c54defc0d8c"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTA0MTY0OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMTo1NzozOVrOGfrjpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMTo1NzozOVrOGfrjpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg3MjY3Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        kwargs['_host_index'] = kwargs.get('_host_index', None)\n          \n          \n            \n                        kwargs['_host_index'] = kwargs.get('_host_index')", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r435872677", "createdAt": "2020-06-05T11:57:39Z", "author": {"login": "therve"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api.mustache", "diffHunk": "@@ -131,7 +131,7 @@ class {{classname}}(object):\n             kwargs['_check_return_type'] = kwargs.get(\n                 '_check_return_type', True\n             )\n-            kwargs['_host_index'] = kwargs.get('_host_index', 0)\n+            kwargs['_host_index'] = kwargs.get('_host_index', None)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4985f2711ee994f75deb55d67a028c54defc0d8c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTEyNDg2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjoyMzozN1rOGfsVIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxMjoyMzozN1rOGfsVIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTg4NTM0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    :param variables: hash of variable and the corresponding value\n          \n          \n            \n                    :param variables: hash of variable and the corresponding value\n          \n          \n            \n                    :param servers: host settings for the endpoint", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r435885347", "createdAt": "2020-06-05T12:23:37Z", "author": {"login": "jirikuncar"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -561,14 +571,14 @@ conf = {{{packageName}}}.Configuration(\n             {{/servers}}\n         ]\n \n-    def get_host_from_settings(self, index, variables=None):\n+    def get_host_from_settings(self, index, variables=None, servers=None):\n         \"\"\"Gets host URL based on the index and variables\n         :param index: array index of the host settings\n         :param variables: hash of variable and the corresponding value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4985f2711ee994f75deb55d67a028c54defc0d8c"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjE5ODgwOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNjo1NDoxMFrOGiQtig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNjo1NDoxMFrOGiQtig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU3ODU3MA==", "bodyText": "How about removing this if block because it already exists in get_host_from_settings?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438578570", "createdAt": "2020-06-11T06:54:10Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -595,3 +609,17 @@ conf = {{{packageName}}}.Configuration(\n             url = url.replace(\"{\" + variable_name + \"}\", used_value)\n \n         return url\n+\n+    @property\n+    def host(self):\n+        \"\"\"Return generated host.\"\"\"\n+        if self.server_index is None:\n+            return self._base_path", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjIxMjI2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNjo1OTowM1rOGiQ14w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDozMTowNVrOGigE7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU4MDcwNw==", "bodyText": "How about naming this variable _host, which more clearly conveys that this is the default host that we use?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438580707", "createdAt": "2020-06-11T06:59:03Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -155,20 +155,30 @@ conf = {{{packageName}}}.Configuration(\n \n     _default = None\n \n-    def __init__(self, host=\"{{{basePath}}}\",\n+    def __init__(self, host=None,\n                  api_key=None, api_key_prefix=None,\n                  username=None, password=None,\n                  discard_unknown_keys=False,\n                  disabled_client_side_validations=\"\",\n {{#hasHttpSignatureMethods}}\n                  signing_info=None,\n {{/hasHttpSignatureMethods}}\n+                 server_index=None, server_variables=None,\n+                 server_operation_index=None, server_operation_variables=None,\n                  ):\n         \"\"\"Constructor\n         \"\"\"\n-        self.host = host\n+        self._base_path = \"{{{basePath}}}\" if host is None else host", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMDMxOQ==", "bodyText": "Technically it's a base path since host would mean only host part of a URL.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438830319", "createdAt": "2020-06-11T14:31:05Z", "author": {"login": "jirikuncar"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -155,20 +155,30 @@ conf = {{{packageName}}}.Configuration(\n \n     _default = None\n \n-    def __init__(self, host=\"{{{basePath}}}\",\n+    def __init__(self, host=None,\n                  api_key=None, api_key_prefix=None,\n                  username=None, password=None,\n                  discard_unknown_keys=False,\n                  disabled_client_side_validations=\"\",\n {{#hasHttpSignatureMethods}}\n                  signing_info=None,\n {{/hasHttpSignatureMethods}}\n+                 server_index=None, server_variables=None,\n+                 server_operation_index=None, server_operation_variables=None,\n                  ):\n         \"\"\"Constructor\n         \"\"\"\n-        self.host = host\n+        self._base_path = \"{{{basePath}}}\" if host is None else host", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU4MDcwNw=="}, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjIzNTM5OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzowNzoyNVrOGiREbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzowNzoyNVrOGiREbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU4NDQzMA==", "bodyText": "Can you also update the docstring here to show that _host_index can now be type int/None?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438584430", "createdAt": "2020-06-11T07:07:25Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api.mustache", "diffHunk": "@@ -105,7 +105,7 @@ class {{classname}}(object):\n                     Default is True.\n                 _host_index (int): specifies the index of the server\n                     that we want to use.\n-                    Default is 0.\n+                    Default is read from the configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjI0MzQxOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzoxMDoxMFrOGiRJXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDozMjo0M1rOGigJZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU4NTY5NQ==", "bodyText": "Can you describe that servers should is of type (list/None)?\nCan you describe that index is of type (int/None)?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438585695", "createdAt": "2020-06-11T07:10:10Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -561,14 +571,18 @@ conf = {{{packageName}}}.Configuration(\n             {{/servers}}\n         ]\n \n-    def get_host_from_settings(self, index, variables=None):\n+    def get_host_from_settings(self, index, variables=None, servers=None):\n         \"\"\"Gets host URL based on the index and variables\n         :param index: array index of the host settings\n         :param variables: hash of variable and the corresponding value\n+        :param servers: host settings for the endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMTQ2Mg==", "bodyText": "This method should be private in first place. I might create a private version of this method instead.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438831462", "createdAt": "2020-06-11T14:32:43Z", "author": {"login": "jirikuncar"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -561,14 +571,18 @@ conf = {{{packageName}}}.Configuration(\n             {{/servers}}\n         ]\n \n-    def get_host_from_settings(self, index, variables=None):\n+    def get_host_from_settings(self, index, variables=None, servers=None):\n         \"\"\"Gets host URL based on the index and variables\n         :param index: array index of the host settings\n         :param variables: hash of variable and the corresponding value\n+        :param servers: host settings for the endpoint", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU4NTY5NQ=="}, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjMxNDg4OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzozNDozMVrOGiR2nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDoyOTo0NlrOGigA-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU5NzI3OQ==", "bodyText": "This method already has 8 inputs not counting self.\nAdding 4 more variables here increases out input count to 12 which is a lot.\nIt is clearer if related variables are grouped together in dicts.\nCan you restructure these 4 new additions into two dicts?\nHow about something like:\nserver_info=None\n# which is a dict like: {index:1, variables={}}\noperation_server_info=None:\n# which is a dict like {index_by_operation_id: {'get_pet': 0}, variables_by_operation_id: {'get_pet': blah}}\n\nCan you add descriptions of these new parameters to the docstring above?", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438597279", "createdAt": "2020-06-11T07:34:31Z", "author": {"login": "spacether"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -155,20 +155,30 @@ conf = {{{packageName}}}.Configuration(\n \n     _default = None\n \n-    def __init__(self, host=\"{{{basePath}}}\",\n+    def __init__(self, host=None,\n                  api_key=None, api_key_prefix=None,\n                  username=None, password=None,\n                  discard_unknown_keys=False,\n                  disabled_client_side_validations=\"\",\n {{#hasHttpSignatureMethods}}\n                  signing_info=None,\n {{/hasHttpSignatureMethods}}\n+                 server_index=None, server_variables=None,\n+                 server_operation_index=None, server_operation_variables=None,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyOTA2OQ==", "bodyText": "I am trying to keep the usage similar with other languages. I don't see this as an issue. I would argue that configuration should be a mapping itself.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438829069", "createdAt": "2020-06-11T14:29:29Z", "author": {"login": "jirikuncar"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -155,20 +155,30 @@ conf = {{{packageName}}}.Configuration(\n \n     _default = None\n \n-    def __init__(self, host=\"{{{basePath}}}\",\n+    def __init__(self, host=None,\n                  api_key=None, api_key_prefix=None,\n                  username=None, password=None,\n                  discard_unknown_keys=False,\n                  disabled_client_side_validations=\"\",\n {{#hasHttpSignatureMethods}}\n                  signing_info=None,\n {{/hasHttpSignatureMethods}}\n+                 server_index=None, server_variables=None,\n+                 server_operation_index=None, server_operation_variables=None,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU5NzI3OQ=="}, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgyOTMwNg==", "bodyText": "I will add the docstrings.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438829306", "createdAt": "2020-06-11T14:29:46Z", "author": {"login": "jirikuncar"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -155,20 +155,30 @@ conf = {{{packageName}}}.Configuration(\n \n     _default = None\n \n-    def __init__(self, host=\"{{{basePath}}}\",\n+    def __init__(self, host=None,\n                  api_key=None, api_key_prefix=None,\n                  username=None, password=None,\n                  discard_unknown_keys=False,\n                  disabled_client_side_validations=\"\",\n {{#hasHttpSignatureMethods}}\n                  signing_info=None,\n {{/hasHttpSignatureMethods}}\n+                 server_index=None, server_variables=None,\n+                 server_operation_index=None, server_operation_variables=None,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU5NzI3OQ=="}, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjM0NzE0OnYy", "diffSide": "RIGHT", "path": "samples/openapi3/client/petstore/python-experimental/tests/test_api_validation.py", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzo0NDo0NFrOGiSK6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDozNDowOVrOGkeXIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwMjQ3NA==", "bodyText": "Possible improvement:\nThis works and a more standard python way to do it is to use\nassert_called_with", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438602474", "createdAt": "2020-06-11T07:44:44Z", "author": {"login": "spacether"}, "path": "samples/openapi3/client/petstore/python-experimental/tests/test_api_validation.py", "diffHunk": "@@ -44,6 +46,27 @@ def test_configuration(self):\n             config.disabled_client_side_validations = 'foo'\n         config.disabled_client_side_validations = \"\"\n \n+    def test_servers(self):\n+        config = petstore_api.Configuration(server_index=1, server_variables={'version': 'v1'})\n+        api_client = petstore_api.ApiClient(config)\n+        api = pet_api.PetApi(api_client)\n+\n+        def request(expected_url, method, url, **kwargs):\n+            assert expected_url == url\n+            raise RuntimeError('pass')\n+\n+        api_client.request = functools.partial(request, 'http://path-server-test.petstore.local/v2/pet')\n+        try:\n+            api.add_pet({'name': 'pet', 'photo_urls': []})\n+        except RuntimeError as e:\n+            assert \"pass\" == str(e)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MzI3Nw==", "bodyText": "If we remove support for Python 2, then yes.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r439843277", "createdAt": "2020-06-14T15:54:19Z", "author": {"login": "jirikuncar"}, "path": "samples/openapi3/client/petstore/python-experimental/tests/test_api_validation.py", "diffHunk": "@@ -44,6 +46,27 @@ def test_configuration(self):\n             config.disabled_client_side_validations = 'foo'\n         config.disabled_client_side_validations = \"\"\n \n+    def test_servers(self):\n+        config = petstore_api.Configuration(server_index=1, server_variables={'version': 'v1'})\n+        api_client = petstore_api.ApiClient(config)\n+        api = pet_api.PetApi(api_client)\n+\n+        def request(expected_url, method, url, **kwargs):\n+            assert expected_url == url\n+            raise RuntimeError('pass')\n+\n+        api_client.request = functools.partial(request, 'http://path-server-test.petstore.local/v2/pet')\n+        try:\n+            api.add_pet({'name': 'pet', 'photo_urls': []})\n+        except RuntimeError as e:\n+            assert \"pass\" == str(e)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwMjQ3NA=="}, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg0MzU4OQ==", "bodyText": "It's still declared in \n  \n    \n      openapi-generator/samples/openapi3/client/petstore/python-experimental/setup.py\n    \n    \n         Line 33\n      in\n      294d164\n    \n    \n    \n    \n\n        \n          \n           EXTRAS = {':python_version <= \"2.7\"': ['future']} \n        \n    \n  \n\n. I would be happy to change it in the future for Python 3.6+ only.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r439843589", "createdAt": "2020-06-14T15:58:01Z", "author": {"login": "jirikuncar"}, "path": "samples/openapi3/client/petstore/python-experimental/tests/test_api_validation.py", "diffHunk": "@@ -44,6 +46,27 @@ def test_configuration(self):\n             config.disabled_client_side_validations = 'foo'\n         config.disabled_client_side_validations = \"\"\n \n+    def test_servers(self):\n+        config = petstore_api.Configuration(server_index=1, server_variables={'version': 'v1'})\n+        api_client = petstore_api.ApiClient(config)\n+        api = pet_api.PetApi(api_client)\n+\n+        def request(expected_url, method, url, **kwargs):\n+            assert expected_url == url\n+            raise RuntimeError('pass')\n+\n+        api_client.request = functools.partial(request, 'http://path-server-test.petstore.local/v2/pet')\n+        try:\n+            api.add_pet({'name': 'pet', 'photo_urls': []})\n+        except RuntimeError as e:\n+            assert \"pass\" == str(e)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwMjQ3NA=="}, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg5OTM2Mg==", "bodyText": "I think we can drop Python 2.x support in the upcoming 5.x release. (not saying you need to do it as part of this PR though)", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r440899362", "createdAt": "2020-06-16T14:34:09Z", "author": {"login": "wing328"}, "path": "samples/openapi3/client/petstore/python-experimental/tests/test_api_validation.py", "diffHunk": "@@ -44,6 +46,27 @@ def test_configuration(self):\n             config.disabled_client_side_validations = 'foo'\n         config.disabled_client_side_validations = \"\"\n \n+    def test_servers(self):\n+        config = petstore_api.Configuration(server_index=1, server_variables={'version': 'v1'})\n+        api_client = petstore_api.ApiClient(config)\n+        api = pet_api.PetApi(api_client)\n+\n+        def request(expected_url, method, url, **kwargs):\n+            assert expected_url == url\n+            raise RuntimeError('pass')\n+\n+        api_client.request = functools.partial(request, 'http://path-server-test.petstore.local/v2/pet')\n+        try:\n+            api.add_pet({'name': 'pet', 'photo_urls': []})\n+        except RuntimeError as e:\n+            assert \"pass\" == str(e)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwMjQ3NA=="}, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjM1ODg2OnYy", "diffSide": "RIGHT", "path": "samples/openapi3/client/petstore/python-experimental/tests/test_api_validation.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzo0ODozMFrOGiSSbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOToxNDoxM1rOGi9BCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwNDM5Ng==", "bodyText": "Please also add tests of server_operation_index and server_operation_variables.\nThat code is added in this PR and does not yet have any test coverage.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438604396", "createdAt": "2020-06-11T07:48:30Z", "author": {"login": "spacether"}, "path": "samples/openapi3/client/petstore/python-experimental/tests/test_api_validation.py", "diffHunk": "@@ -44,6 +46,27 @@ def test_configuration(self):\n             config.disabled_client_side_validations = 'foo'\n         config.disabled_client_side_validations = \"\"\n \n+    def test_servers(self):\n+        config = petstore_api.Configuration(server_index=1, server_variables={'version': 'v1'})\n+        api_client = petstore_api.ApiClient(config)\n+        api = pet_api.PetApi(api_client)\n+\n+        def request(expected_url, method, url, **kwargs):\n+            assert expected_url == url\n+            raise RuntimeError('pass')\n+\n+        api_client.request = functools.partial(request, 'http://path-server-test.petstore.local/v2/pet')\n+        try:\n+            api.add_pet({'name': 'pet', 'photo_urls': []})\n+        except RuntimeError as e:\n+            assert \"pass\" == str(e)\n+\n+        api_client.request = functools.partial(request, 'https://localhost:8080/v1/pet/123456789')\n+        try:\n+            api.delete_pet(123456789)\n+        except RuntimeError as e:\n+            assert \"pass\" == str(e)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMwNDQ1Ng==", "bodyText": "I have created a separate package with a detailed testsuite.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r439304456", "createdAt": "2020-06-12T09:14:13Z", "author": {"login": "jirikuncar"}, "path": "samples/openapi3/client/petstore/python-experimental/tests/test_api_validation.py", "diffHunk": "@@ -44,6 +46,27 @@ def test_configuration(self):\n             config.disabled_client_side_validations = 'foo'\n         config.disabled_client_side_validations = \"\"\n \n+    def test_servers(self):\n+        config = petstore_api.Configuration(server_index=1, server_variables={'version': 'v1'})\n+        api_client = petstore_api.ApiClient(config)\n+        api = pet_api.PetApi(api_client)\n+\n+        def request(expected_url, method, url, **kwargs):\n+            assert expected_url == url\n+            raise RuntimeError('pass')\n+\n+        api_client.request = functools.partial(request, 'http://path-server-test.petstore.local/v2/pet')\n+        try:\n+            api.add_pet({'name': 'pet', 'photo_urls': []})\n+        except RuntimeError as e:\n+            assert \"pass\" == str(e)\n+\n+        api_client.request = functools.partial(request, 'https://localhost:8080/v1/pet/123456789')\n+        try:\n+            api.delete_pet(123456789)\n+        except RuntimeError as e:\n+            assert \"pass\" == str(e)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwNDM5Ng=="}, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzc1NzM2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDozNDoxOVrOGigNhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDozNDoxOVrOGigNhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMjUxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if self.server_index is None:\n          \n          \n            \n                        return self._base_path", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438832517", "createdAt": "2020-06-11T14:34:19Z", "author": {"login": "jirikuncar"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -595,3 +609,17 @@ conf = {{{packageName}}}.Configuration(\n             url = url.replace(\"{\" + variable_name + \"}\", used_value)\n \n         return url\n+\n+    @property\n+    def host(self):\n+        \"\"\"Return generated host.\"\"\"\n+        if self.server_index is None:\n+            return self._base_path\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzc1OTg2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api.mustache", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDozNDo1OVrOGigPOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDozNDo1OVrOGigPOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgzMjk1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            _host_index (int): specifies the index of the server\n          \n          \n            \n                            _host_index (int/None): specifies the index of the server", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438832954", "createdAt": "2020-06-11T14:34:59Z", "author": {"login": "jirikuncar"}, "path": "modules/openapi-generator/src/main/resources/python/python-experimental/api.mustache", "diffHunk": "@@ -105,7 +105,7 @@ class {{classname}}(object):\n                     Default is True.\n                 _host_index (int): specifies the index of the server", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "294d164ab033df0f7c60f38885c9b57c1fb711c3"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzg1ODc2OnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDo1ODoxNFrOGihPaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNDo1ODo0NlrOGihQ0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0OTM4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    :param servers: host settings for the endpoint\n          \n          \n            \n                    :param servers: an array of host settings or None", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438849384", "createdAt": "2020-06-11T14:58:14Z", "author": {"login": "jirikuncar"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -561,14 +571,18 @@ conf = {{{packageName}}}.Configuration(\n             {{/servers}}\n         ]\n \n-    def get_host_from_settings(self, index, variables=None):\n+    def get_host_from_settings(self, index, variables=None, servers=None):\n         \"\"\"Gets host URL based on the index and variables\n         :param index: array index of the host settings\n         :param variables: hash of variable and the corresponding value\n+        :param servers: host settings for the endpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f38fc72f8343345bcf751f245a7bac661c57dd2c"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0OTc0Nw==", "bodyText": "@spacether I am going to use the same documentation as it is used for return value of get_host_settings.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r438849747", "createdAt": "2020-06-11T14:58:46Z", "author": {"login": "jirikuncar"}, "path": "modules/openapi-generator/src/main/resources/python/configuration.mustache", "diffHunk": "@@ -561,14 +571,18 @@ conf = {{{packageName}}}.Configuration(\n             {{/servers}}\n         ]\n \n-    def get_host_from_settings(self, index, variables=None):\n+    def get_host_from_settings(self, index, variables=None, servers=None):\n         \"\"\"Gets host URL based on the index and variables\n         :param index: array index of the host settings\n         :param variables: hash of variable and the corresponding value\n+        :param servers: host settings for the endpoint", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODg0OTM4NA=="}, "originalCommit": {"oid": "f38fc72f8343345bcf751f245a7bac661c57dd2c"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNjY5MTkzOnYy", "diffSide": "RIGHT", "path": "modules/openapi-generator/src/test/resources/3_0/features/dynamic-servers.yaml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOToxNjo1N1rOGi9GMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwOToxNjo1N1rOGi9GMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTMwNTc3OA==", "bodyText": "@jimschubert I have tried to create a minimal specification on which we can showcase the dynamic server configuration to avoid modifications of default \"Petstore\" example. This should follow the work for extensions from #6469.", "url": "https://github.com/OpenAPITools/openapi-generator/pull/6557#discussion_r439305778", "createdAt": "2020-06-12T09:16:57Z", "author": {"login": "jirikuncar"}, "path": "modules/openapi-generator/src/test/resources/3_0/features/dynamic-servers.yaml", "diffHunk": "@@ -0,0 +1,92 @@\n+openapi: 3.0.0\n+info:\n+  description: This specification shows how to use dynamic servers.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a57b4cd84d4ecbb4c5477bc530e1a96dfb7f267"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3414, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}