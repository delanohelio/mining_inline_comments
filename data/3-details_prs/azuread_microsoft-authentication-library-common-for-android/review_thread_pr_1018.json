{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NjczNjcx", "number": 1018, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMzoxNzoyMlrOEd6YSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMDoxNDo1MVrOEd61Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODAwNjUxOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMzoxNzoyMlrOHJWsig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMDoxMDozOVrOHJXSuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3MTA4Mg==", "bodyText": "Package-private, right?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479571082", "createdAt": "2020-08-28T23:17:22Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "diffHunk": "@@ -47,7 +50,7 @@\n     }\n \n     List<FailedRequest> getFailedRequests() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1ea0056fe685c82db853ef728ce2681f6da2a50"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3ODU3Nw==", "bodyText": "It is package private", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479578577", "createdAt": "2020-08-28T23:56:49Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "diffHunk": "@@ -47,7 +50,7 @@\n     }\n \n     List<FailedRequest> getFailedRequests() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3MTA4Mg=="}, "originalCommit": {"oid": "f1ea0056fe685c82db853ef728ce2681f6da2a50"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3ODY5NQ==", "bodyText": "Are you looking for some comment indicating that or what?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479578695", "createdAt": "2020-08-28T23:57:34Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "diffHunk": "@@ -47,7 +50,7 @@\n     }\n \n     List<FailedRequest> getFailedRequests() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3MTA4Mg=="}, "originalCommit": {"oid": "f1ea0056fe685c82db853ef728ce2681f6da2a50"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3OTAzMw==", "bodyText": "Because the authors left it out of the language, I've always taken it upon myself to say so using comments.\n/* package */ void aPackagePrivateFunction()", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479579033", "createdAt": "2020-08-28T23:59:42Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "diffHunk": "@@ -47,7 +50,7 @@\n     }\n \n     List<FailedRequest> getFailedRequests() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3MTA4Mg=="}, "originalCommit": {"oid": "f1ea0056fe685c82db853ef728ce2681f6da2a50"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MDg1Nw==", "bodyText": "Addressed here: 89e243e", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479580857", "createdAt": "2020-08-29T00:10:39Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "diffHunk": "@@ -47,7 +50,7 @@\n     }\n \n     List<FailedRequest> getFailedRequests() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3MTA4Mg=="}, "originalCommit": {"oid": "f1ea0056fe685c82db853ef728ce2681f6da2a50"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODAxOTIwOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMzoyNzoxMFrOHJWzpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMDowNzoxMVrOHJXQwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3MjkwMA==", "bodyText": "This doesn't take a safe-copy, right?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479572900", "createdAt": "2020-08-28T23:27:10Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "diffHunk": "@@ -47,7 +50,7 @@\n     }\n \n     List<FailedRequest> getFailedRequests() {\n-        return failedRequests;\n+        return Collections.unmodifiableList(failedRequests);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1ea0056fe685c82db853ef728ce2681f6da2a50"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3OTA0Mw==", "bodyText": "Not sure what you mean here, can you tell more?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479579043", "createdAt": "2020-08-28T23:59:45Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "diffHunk": "@@ -47,7 +50,7 @@\n     }\n \n     List<FailedRequest> getFailedRequests() {\n-        return failedRequests;\n+        return Collections.unmodifiableList(failedRequests);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3MjkwMA=="}, "originalCommit": {"oid": "f1ea0056fe685c82db853ef728ce2681f6da2a50"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3OTEyNg==", "bodyText": "This is more about being sure that whoever is using this is OK with the list changing underneath them.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479579126", "createdAt": "2020-08-29T00:00:13Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "diffHunk": "@@ -47,7 +50,7 @@\n     }\n \n     List<FailedRequest> getFailedRequests() {\n-        return failedRequests;\n+        return Collections.unmodifiableList(failedRequests);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3MjkwMA=="}, "originalCommit": {"oid": "f1ea0056fe685c82db853ef728ce2681f6da2a50"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MDM1NA==", "bodyText": "Yes, they are okay with that. Added javadoc here as well about being unmodifiable: d71f93b", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479580354", "createdAt": "2020-08-29T00:07:11Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "diffHunk": "@@ -47,7 +50,7 @@\n     }\n \n     List<FailedRequest> getFailedRequests() {\n-        return failedRequests;\n+        return Collections.unmodifiableList(failedRequests);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3MjkwMA=="}, "originalCommit": {"oid": "f1ea0056fe685c82db853ef728ce2681f6da2a50"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODAyNzc0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQyMzozMzoxNlrOHJW4Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMjoyNjo1MlrOHML3VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3NDA4Mw==", "bodyText": "I'm not sure at all that this is what we want to do.  subList returns a view on the original list.  So, as I read it, over time you'll end up with an ever expanding chain of references to new sublists (see SubList.subList).\nhttps://cs.android.com/android/platform/superproject/+/master:libcore/ojluni/src/main/java/java/util/ArrayList.java;drc=6bd07db6e4f0806b658fc44bfee5dbef2c409540;l=1007\nIf we're only doing 100 of these, it might be better to just declare your own array and use it like a circular buffer, even though it means you'll have more complex code when somebody requests a view.  I see that this object gets recycled a lot, too.  So this is only a concern for a lot of request failures when this isn't being persisted.\nTo note: this has been fixed in OpenJDK: http://hg.openjdk.java.net/jdk9/jdk9/jdk/rev/d7a4b04e3fc9", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479574083", "createdAt": "2020-08-28T23:33:16Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "diffHunk": "@@ -76,10 +79,22 @@ void resetSilentSuccessCount() {\n \n \n     void appendFailedRequest(final String apiId, final String correlationId, final String error) {\n-        failedRequests.add(new FailedRequest(apiId, correlationId, error));\n+        appendFailedRequest(new FailedRequest(apiId, correlationId, error));\n     }\n \n     void appendFailedRequest(final FailedRequest failedRequest) {\n+        // this should usually not be greater than - at most should be equal to the cap\n+        // because the only we to add to this list is via this append method.\n+        // The only time this could be greater than the cap is for some existing devices that may\n+        // have caught themselves in a bad state after accumulating too much telemetry in\n+        // Shared Preferences. (of course prior to the cap being put in place).\n+        // So will just take the last (most recent) 100 items here to get those out of the bad state,\n+        // and also to avoid having too much telemetry in the cache going forward.\n+        if (failedRequests.size() >= FAILED_REQUEST_CAP) {\n+            final int beginIndex = failedRequests.size() - FAILED_REQUEST_CAP + 1;\n+            final int endIndex = failedRequests.size();\n+            failedRequests = failedRequests.subList(beginIndex, endIndex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1ea0056fe685c82db853ef728ce2681f6da2a50"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTI0NQ==", "bodyText": "Yeah, I would say let's keep the code simple for now. What do you say?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479581245", "createdAt": "2020-08-29T00:13:29Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "diffHunk": "@@ -76,10 +79,22 @@ void resetSilentSuccessCount() {\n \n \n     void appendFailedRequest(final String apiId, final String correlationId, final String error) {\n-        failedRequests.add(new FailedRequest(apiId, correlationId, error));\n+        appendFailedRequest(new FailedRequest(apiId, correlationId, error));\n     }\n \n     void appendFailedRequest(final FailedRequest failedRequest) {\n+        // this should usually not be greater than - at most should be equal to the cap\n+        // because the only we to add to this list is via this append method.\n+        // The only time this could be greater than the cap is for some existing devices that may\n+        // have caught themselves in a bad state after accumulating too much telemetry in\n+        // Shared Preferences. (of course prior to the cap being put in place).\n+        // So will just take the last (most recent) 100 items here to get those out of the bad state,\n+        // and also to avoid having too much telemetry in the cache going forward.\n+        if (failedRequests.size() >= FAILED_REQUEST_CAP) {\n+            final int beginIndex = failedRequests.size() - FAILED_REQUEST_CAP + 1;\n+            final int endIndex = failedRequests.size();\n+            failedRequests = failedRequests.subList(beginIndex, endIndex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3NDA4Mw=="}, "originalCommit": {"oid": "f1ea0056fe685c82db853ef728ce2681f6da2a50"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjUzOTM0OQ==", "bodyText": "Synced offline - @AdamBJohnsonx will write up a circular buffer and we can pick it up in the future.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r482539349", "createdAt": "2020-09-02T22:26:52Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/LastRequestTelemetry.java", "diffHunk": "@@ -76,10 +79,22 @@ void resetSilentSuccessCount() {\n \n \n     void appendFailedRequest(final String apiId, final String correlationId, final String error) {\n-        failedRequests.add(new FailedRequest(apiId, correlationId, error));\n+        appendFailedRequest(new FailedRequest(apiId, correlationId, error));\n     }\n \n     void appendFailedRequest(final FailedRequest failedRequest) {\n+        // this should usually not be greater than - at most should be equal to the cap\n+        // because the only we to add to this list is via this append method.\n+        // The only time this could be greater than the cap is for some existing devices that may\n+        // have caught themselves in a bad state after accumulating too much telemetry in\n+        // Shared Preferences. (of course prior to the cap being put in place).\n+        // So will just take the last (most recent) 100 items here to get those out of the bad state,\n+        // and also to avoid having too much telemetry in the cache going forward.\n+        if (failedRequests.size() >= FAILED_REQUEST_CAP) {\n+            final int beginIndex = failedRequests.size() - FAILED_REQUEST_CAP + 1;\n+            final int endIndex = failedRequests.size();\n+            failedRequests = failedRequests.subList(beginIndex, endIndex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU3NDA4Mw=="}, "originalCommit": {"oid": "f1ea0056fe685c82db853ef728ce2681f6da2a50"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5ODA4MDc1OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "isResolved": true, "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMDoxNDo1MVrOHJXVBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQyMjoyNjoxNlrOHML0LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA==", "bodyText": "There's not really any recovery from OOM.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479581444", "createdAt": "2020-08-29T00:14:51Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTY5Mw==", "bodyText": "Yeah, if we can't load the String in memory, then can't do much from there. So just clearing that telemetry from cache to allow the device/user to avoid the crash.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479581693", "createdAt": "2020-08-29T00:16:22Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA=="}, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MjA3NQ==", "bodyText": "But in the mean time, other operations have failed in potentially other threads.  You probably can't even call logger, and can't execute TAG+methodName.  We've already bounded the side of the returned telemetry - I don't know that we need to try this.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479582075", "createdAt": "2020-08-29T00:19:01Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA=="}, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4Mjc1MQ==", "bodyText": "Why can't we call logger and TAG? This is in catch block so it should execute right?\nEven though we've bounded the telemetry, that means we're good for the future, but we still need to account for a scenario where the telemetry String in Shared Pref (from earlier before this fix gets out), may be too huge that Android isn't able to fit the String in memory. So in that case, we just clear the cache so it doesn't happen again and return null here as we don't have any telemetry that we can safely return from cache.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479582751", "createdAt": "2020-08-29T00:23:45Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA=="}, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MzcxNA==", "bodyText": "You're OOM.  If logger needs to allocate, it might not be able to.  The new string that gets created by TAG+methodName might also cause an OOM.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479583714", "createdAt": "2020-08-29T00:29:32Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA=="}, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4NDExMQ==", "bodyText": "Wouldn't we fail to allocate the large string thus keeping sufficient heap space free to keep allocating smaller strings?\nThinking about the notes in this SO answer\nhttps://stackoverflow.com/a/2680784", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479584111", "createdAt": "2020-08-29T00:32:31Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA=="}, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4NDIxNA==", "bodyText": "@AdamBJohnsonx But the TAG+methodName String is going to be much smaller so it should get memory allocated for it. The OOM we ran into here for telemetry was that JAVA was trying to allocated about 9MB \ud83d\ude01so we're trying to protect against that.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479584214", "createdAt": "2020-08-29T00:33:16Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA=="}, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4NTEzMg==", "bodyText": "The stack overflow people seem to also think that they only thing to do at that point is shut down the application.  But we're not the application, we're a library.  We could be handing back control to a JVM that's utterly destroyed and we really have no way of knowing what's gone wrong in the mean time.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479585132", "createdAt": "2020-08-29T00:40:05Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA=="}, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4NTMyNg==", "bodyText": "In that case, should we wipe the SharedPrefs and rethrow the error?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479585326", "createdAt": "2020-08-29T00:41:31Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA=="}, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4NTQ3OQ==", "bodyText": "That would seem to be the most-ideal from a state-perspective right? Clear out what we failed to allocate and don't continue in an undefined state?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479585479", "createdAt": "2020-08-29T00:42:38Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA=="}, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4NTUxOA==", "bodyText": "If we can.  I'm looking to shared preferences now, to see if there's a way to get the object size before we try to read it.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479585518", "createdAt": "2020-08-29T00:42:55Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA=="}, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4NTY0MA==", "bodyText": "If we can find the size of the string in advance, we can avoid this by putting a reasonable bound on it.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479585640", "createdAt": "2020-08-29T00:43:59Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA=="}, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4NTgwMQ==", "bodyText": "Thing is, it's just an assumption that this allocation caused the OOM - we could be wrong here.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r479585801", "createdAt": "2020-08-29T00:45:01Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA=="}, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjUzODU0MA==", "bodyText": "Addressed here: 57d2359", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1018#discussion_r482538540", "createdAt": "2020-09-02T22:26:16Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/eststelemetry/SharedPreferencesLastRequestTelemetryCache.java", "diffHunk": "@@ -66,28 +66,35 @@ ISharedPreferencesFileManager getSharedPreferencesFileManager() {\n     public synchronized RequestTelemetry getRequestTelemetryFromCache() {\n         final String methodName = \":getRequestTelemetryFromCache\";\n \n-        final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n+        try {\n+            final String cacheValue = mSharedPreferencesFileManager.getString(LAST_TELEMETRY_OBJECT_CACHE_KEY);\n \n-        if (cacheValue == null) {\n-            Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n-                    \"the cache. Returning NULL\");\n+            if (cacheValue == null) {\n+                Logger.info(TAG + methodName, \"There is no last request telemetry saved in \" +\n+                        \"the cache. Returning NULL\");\n \n-            return null;\n-        }\n+                return null;\n+            }\n \n-        try {\n-            LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n+            final LastRequestTelemetry lastRequestTelemetry = mGson.fromJson(cacheValue, LastRequestTelemetry.class);\n \n             if (lastRequestTelemetry == null) {\n                 Logger.warn(TAG + methodName,\n                         \"Last Request Telemetry deserialization failed\");\n             }\n \n             return lastRequestTelemetry;\n-        } catch (JsonSyntaxException e) {\n+        } catch (final JsonSyntaxException e) {\n             Logger.error(TAG + methodName,\n                     \"Last Request Telemetry deserialization failed\", e);\n             return null;\n+        } catch (final OutOfMemoryError e) {\n+            Logger.error(TAG + methodName,\n+                    \"Encountered OOM while restoring last request telemetry from \" +\n+                            \"Shared Preferences. Clearing telemetry cache to recover and returning \" +\n+                            \"null.\", e);\n+            mSharedPreferencesFileManager.clear();\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU4MTQ0NA=="}, "originalCommit": {"oid": "d71f93b10e05f31e6d3768f07117004b30837621"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2239, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}