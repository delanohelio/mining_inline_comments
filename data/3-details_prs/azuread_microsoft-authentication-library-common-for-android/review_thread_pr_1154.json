{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MjUyNjU5", "number": 1154, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNToyMDo0M1rOFC-wPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDo0NDozOVrOFL_hsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NjY5NjI5OnYy", "diffSide": "RIGHT", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNToyMDo0M1rOICaHxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxODozMzoyMVrOIPR0Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM5NjAzNw==", "bodyText": "Commented it on purpose, to verify if authority is null or not while acquiring token silently in ADAL in some cases", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r539396037", "createdAt": "2020-12-09T15:20:43Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import com.microsoft.aad.adal.AuthenticationResult;\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import java.util.Map;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * A wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    public AuthResult(@NonNull final AuthenticationResult authenticationResult) {\n+        this.accessToken = authenticationResult.getAccessToken();\n+        this.idToken = authenticationResult.getIdToken();\n+        this.userId = authenticationResult.getUserInfo().getUserId();\n+        this.username = authenticationResult.getUserInfo().getDisplayableId();\n+        this.authority = authenticationResult.getAuthority();\n+    }\n+\n+    public AuthResult(@NonNull final Exception exception) {\n+        this.exception = exception;\n+    }\n+\n+    public void assertSuccess() {\n+        if (exception != null) {\n+            throw new AssertionError(exception);\n+        }\n+        Assert.assertFalse(TextUtils.isEmpty(accessToken));\n+        Assert.assertFalse(TextUtils.isEmpty(idToken));\n+        Assert.assertFalse(TextUtils.isEmpty(userId));\n+        Assert.assertFalse(TextUtils.isEmpty(username));\n+//        Assert.assertFalse(TextUtils.isEmpty(authority));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b923f1c039d0d74247488e696bbe002679ddd7c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM1ODY5Ng==", "bodyText": "So I believe you will uncomment it later? or what is the plan here?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r552358696", "createdAt": "2021-01-06T04:11:39Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import com.microsoft.aad.adal.AuthenticationResult;\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import java.util.Map;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * A wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    public AuthResult(@NonNull final AuthenticationResult authenticationResult) {\n+        this.accessToken = authenticationResult.getAccessToken();\n+        this.idToken = authenticationResult.getIdToken();\n+        this.userId = authenticationResult.getUserInfo().getUserId();\n+        this.username = authenticationResult.getUserInfo().getDisplayableId();\n+        this.authority = authenticationResult.getAuthority();\n+    }\n+\n+    public AuthResult(@NonNull final Exception exception) {\n+        this.exception = exception;\n+    }\n+\n+    public void assertSuccess() {\n+        if (exception != null) {\n+            throw new AssertionError(exception);\n+        }\n+        Assert.assertFalse(TextUtils.isEmpty(accessToken));\n+        Assert.assertFalse(TextUtils.isEmpty(idToken));\n+        Assert.assertFalse(TextUtils.isEmpty(userId));\n+        Assert.assertFalse(TextUtils.isEmpty(username));\n+//        Assert.assertFalse(TextUtils.isEmpty(authority));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM5NjAzNw=="}, "originalCommit": {"oid": "0b923f1c039d0d74247488e696bbe002679ddd7c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjQyNDkxOQ==", "bodyText": "We have discussion about this, and I have asked you to verify it for me. That is it the case or not that we get authority in every case ??", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r552424919", "createdAt": "2021-01-06T08:06:59Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import com.microsoft.aad.adal.AuthenticationResult;\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import java.util.Map;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * A wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    public AuthResult(@NonNull final AuthenticationResult authenticationResult) {\n+        this.accessToken = authenticationResult.getAccessToken();\n+        this.idToken = authenticationResult.getIdToken();\n+        this.userId = authenticationResult.getUserInfo().getUserId();\n+        this.username = authenticationResult.getUserInfo().getDisplayableId();\n+        this.authority = authenticationResult.getAuthority();\n+    }\n+\n+    public AuthResult(@NonNull final Exception exception) {\n+        this.exception = exception;\n+    }\n+\n+    public void assertSuccess() {\n+        if (exception != null) {\n+            throw new AssertionError(exception);\n+        }\n+        Assert.assertFalse(TextUtils.isEmpty(accessToken));\n+        Assert.assertFalse(TextUtils.isEmpty(idToken));\n+        Assert.assertFalse(TextUtils.isEmpty(userId));\n+        Assert.assertFalse(TextUtils.isEmpty(username));\n+//        Assert.assertFalse(TextUtils.isEmpty(authority));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM5NjAzNw=="}, "originalCommit": {"oid": "0b923f1c039d0d74247488e696bbe002679ddd7c"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg5MTQ3OA==", "bodyText": "added if condition, for time being untill its verified.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r552891478", "createdAt": "2021-01-06T18:33:21Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import com.microsoft.aad.adal.AuthenticationResult;\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import java.util.Map;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * A wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    public AuthResult(@NonNull final AuthenticationResult authenticationResult) {\n+        this.accessToken = authenticationResult.getAccessToken();\n+        this.idToken = authenticationResult.getIdToken();\n+        this.userId = authenticationResult.getUserInfo().getUserId();\n+        this.username = authenticationResult.getUserInfo().getDisplayableId();\n+        this.authority = authenticationResult.getAuthority();\n+    }\n+\n+    public AuthResult(@NonNull final Exception exception) {\n+        this.exception = exception;\n+    }\n+\n+    public void assertSuccess() {\n+        if (exception != null) {\n+            throw new AssertionError(exception);\n+        }\n+        Assert.assertFalse(TextUtils.isEmpty(accessToken));\n+        Assert.assertFalse(TextUtils.isEmpty(idToken));\n+        Assert.assertFalse(TextUtils.isEmpty(userId));\n+        Assert.assertFalse(TextUtils.isEmpty(username));\n+//        Assert.assertFalse(TextUtils.isEmpty(authority));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTM5NjAzNw=="}, "originalCommit": {"oid": "0b923f1c039d0d74247488e696bbe002679ddd7c"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjQ4NzM1OnYy", "diffSide": "RIGHT", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozNDo1N1rOIF81ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzo1MDozM1rOIG4IQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMDU1OA==", "bodyText": "I guess not needed", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r543110558", "createdAt": "2020-12-15T07:34:57Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+//import com.microsoft.aad.adal.AuthenticationResult;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f996ed371f721ec7003dfbc3ce513d3245008859"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA4MTk4Ng==", "bodyText": "Yes will remove the comment", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r544081986", "createdAt": "2020-12-16T07:50:33Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+//import com.microsoft.aad.adal.AuthenticationResult;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMDU1OA=="}, "originalCommit": {"oid": "f996ed371f721ec7003dfbc3ce513d3245008859"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjQ4OTk5OnYy", "diffSide": "RIGHT", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozNTo1MFrOIF83PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzo0MzowNlrOIG35WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMDk3Mw==", "bodyText": "Why static? and why protected? why not private?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r543110973", "createdAt": "2020-12-15T07:35:50Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+//import com.microsoft.aad.adal.AuthenticationResult;\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    protected static String accessToken;\n+    protected static String idToken;\n+    protected static String userId;\n+    protected static String username;\n+    protected static String authority;\n+    protected static Exception exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f996ed371f721ec7003dfbc3ce513d3245008859"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExNDU5Mw==", "bodyText": "These should really not be static", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r543114593", "createdAt": "2020-12-15T07:42:31Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+//import com.microsoft.aad.adal.AuthenticationResult;\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    protected static String accessToken;\n+    protected static String idToken;\n+    protected static String userId;\n+    protected static String username;\n+    protected static String authority;\n+    protected static Exception exception;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMDk3Mw=="}, "originalCommit": {"oid": "f996ed371f721ec7003dfbc3ce513d3245008859"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA3ODE2OA==", "bodyText": "I made them static so that I can use them in class easily for testing purpose but yes we shouldn't use static, so I will be removing them other then that I made them protected so that parent class can access these variables.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r544078168", "createdAt": "2020-12-16T07:43:06Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,68 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+//import com.microsoft.aad.adal.AuthenticationResult;\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    protected static String accessToken;\n+    protected static String idToken;\n+    protected static String userId;\n+    protected static String username;\n+    protected static String authority;\n+    protected static Exception exception;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMDk3Mw=="}, "originalCommit": {"oid": "f996ed371f721ec7003dfbc3ce513d3245008859"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjQ5MjczOnYy", "diffSide": "RIGHT", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/OnInteractionRequired.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozNjozNVrOIF84wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzo1MDo0MVrOIG4Iew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMTM2MA==", "bodyText": "This is a new class or moved here from somewhere else?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r543111360", "createdAt": "2020-12-15T07:36:35Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/OnInteractionRequired.java", "diffHunk": "@@ -0,0 +1,35 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.interaction;\n+\n+/**\n+ * Interface for handling user interaction in an interaction acquire token request.\n+ */\n+public interface OnInteractionRequired {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f996ed371f721ec7003dfbc3ce513d3245008859"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA4MjA0Mw==", "bodyText": "Its a new class.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r544082043", "createdAt": "2020-12-16T07:50:41Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/OnInteractionRequired.java", "diffHunk": "@@ -0,0 +1,35 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.interaction;\n+\n+/**\n+ * Interface for handling user interaction in an interaction acquire token request.\n+ */\n+public interface OnInteractionRequired {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMTM2MA=="}, "originalCommit": {"oid": "f996ed371f721ec7003dfbc3ce513d3245008859"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjQ5NDYxOnYy", "diffSide": "RIGHT", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthTestParams.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozNzowMlrOIF85wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzoxMzo0OVrOIG22aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMTYxNw==", "bodyText": "Why protected?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r543111617", "createdAt": "2020-12-15T07:37:02Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthTestParams.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.app.Activity;\n+import lombok.Getter;\n+\n+/**\n+ * A wrapper class for all the parameters that are required to acquire token\n+ * either interactively or silently.\n+ */\n+@Getter\n+public class AuthTestParams {\n+\n+    protected String loginHint;\n+    protected String resource;\n+    protected String clientId;\n+    protected String redirectUri;\n+    protected String authority;\n+    protected Activity activity;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f996ed371f721ec7003dfbc3ce513d3245008859"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA2MTAzMg==", "bodyText": "its protected so that it can be used in its parent class constructor. so that it can be used in other classes but now we are using builder and getter so making it private", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r544061032", "createdAt": "2020-12-16T07:13:49Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthTestParams.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.app.Activity;\n+import lombok.Getter;\n+\n+/**\n+ * A wrapper class for all the parameters that are required to acquire token\n+ * either interactively or silently.\n+ */\n+@Getter\n+public class AuthTestParams {\n+\n+    protected String loginHint;\n+    protected String resource;\n+    protected String clientId;\n+    protected String redirectUri;\n+    protected String authority;\n+    protected Activity activity;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMTYxNw=="}, "originalCommit": {"oid": "f996ed371f721ec7003dfbc3ce513d3245008859"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjQ5NTcwOnYy", "diffSide": "RIGHT", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthTestParams.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozNzoxN1rOIF86Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzo1MToxN1rOIG4JsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMTc2Ng==", "bodyText": "Missing license", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r543111766", "createdAt": "2020-12-15T07:37:17Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthTestParams.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.microsoft.identity.client.ui.automation.sdk;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f996ed371f721ec7003dfbc3ce513d3245008859"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA4MjM1Mg==", "bodyText": "added.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r544082352", "createdAt": "2020-12-16T07:51:17Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthTestParams.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package com.microsoft.identity.client.ui.automation.sdk;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMTc2Ng=="}, "originalCommit": {"oid": "f996ed371f721ec7003dfbc3ce513d3245008859"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjQ5NjQwOnYy", "diffSide": "RIGHT", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/ResultFuture.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNzozNzoyN1rOIF86sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNzo1MTozMVrOIG4KLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMTg1OQ==", "bodyText": "Add javadoc", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r543111859", "createdAt": "2020-12-15T07:37:27Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/ResultFuture.java", "diffHunk": "@@ -0,0 +1,95 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+public class ResultFuture<T, E extends Exception> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f996ed371f721ec7003dfbc3ce513d3245008859"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA4MjQ3OA==", "bodyText": "added", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r544082478", "createdAt": "2020-12-16T07:51:31Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/ResultFuture.java", "diffHunk": "@@ -0,0 +1,95 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+\n+public class ResultFuture<T, E extends Exception> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzExMTg1OQ=="}, "originalCommit": {"oid": "f996ed371f721ec7003dfbc3ce513d3245008859"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NjUxMjE1OnYy", "diffSide": "RIGHT", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNDo0MTowMFrOIOxtJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxODozNDoxNFrOIPR2KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM2NTM0OA==", "bodyText": "This should be private", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r552365348", "createdAt": "2021-01-06T04:41:00Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,67 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    protected String accessToken;\n+    protected String idToken;\n+    protected String userId;\n+    protected String username;\n+    protected String authority;\n+    protected Exception exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecd3143def669d220143d4a02ce62398661eeee6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg5MTk0NQ==", "bodyText": "added.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r552891945", "createdAt": "2021-01-06T18:34:14Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,67 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    protected String accessToken;\n+    protected String idToken;\n+    protected String userId;\n+    protected String username;\n+    protected String authority;\n+    protected Exception exception;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM2NTM0OA=="}, "originalCommit": {"oid": "ecd3143def669d220143d4a02ce62398661eeee6"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NjUxNDg1OnYy", "diffSide": "RIGHT", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwNDo0MjozOVrOIOxukA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxODozNDoyN1rOIPR2hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM2NTcxMg==", "bodyText": "you don't need this constructor....you rather need an all args constructor here that will initialize all values", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r552365712", "createdAt": "2021-01-06T04:42:39Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,67 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    protected String accessToken;\n+    protected String idToken;\n+    protected String userId;\n+    protected String username;\n+    protected String authority;\n+    protected Exception exception;\n+\n+    // defaul no-arguments constructor to let parent class create their own constructor\n+    protected AuthResult() {\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecd3143def669d220143d4a02ce62398661eeee6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM2NTc0OA==", "bodyText": "then in the child classes you would just call super", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r552365748", "createdAt": "2021-01-06T04:42:51Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,67 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    protected String accessToken;\n+    protected String idToken;\n+    protected String userId;\n+    protected String username;\n+    protected String authority;\n+    protected Exception exception;\n+\n+    // defaul no-arguments constructor to let parent class create their own constructor\n+    protected AuthResult() {\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM2NTcxMg=="}, "originalCommit": {"oid": "ecd3143def669d220143d4a02ce62398661eeee6"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg5MjAzOA==", "bodyText": "constructor added.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r552892038", "createdAt": "2021-01-06T18:34:27Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,67 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    protected String accessToken;\n+    protected String idToken;\n+    protected String userId;\n+    protected String username;\n+    protected String authority;\n+    protected Exception exception;\n+\n+    // defaul no-arguments constructor to let parent class create their own constructor\n+    protected AuthResult() {\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjM2NTcxMg=="}, "originalCommit": {"oid": "ecd3143def669d220143d4a02ce62398661eeee6"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MTE5MzU2OnYy", "diffSide": "RIGHT", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDo0Mzo1N1rOIPe6bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwOTozODo1MlrOIQLoCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEwNjAyOA==", "bodyText": "This can be public constructor", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r553106028", "createdAt": "2021-01-07T04:43:57Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,73 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    protected AuthResult(@NonNull final String accessToken, @NonNull final String idToken, @NonNull final String userId, @NonNull final String username, @NonNull final String authority) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ac82e2f25eabb0bc6f3fff5a898a4e116dbffa"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQwMzc4MA==", "bodyText": "updated.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r553403780", "createdAt": "2021-01-07T15:35:39Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,73 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    protected AuthResult(@NonNull final String accessToken, @NonNull final String idToken, @NonNull final String userId, @NonNull final String username, @NonNull final String authority) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEwNjAyOA=="}, "originalCommit": {"oid": "a4ac82e2f25eabb0bc6f3fff5a898a4e116dbffa"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzY0ODU1Nw==", "bodyText": "Looks like you missed pushing your commit...I still see it as protected", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r553648557", "createdAt": "2021-01-07T23:16:48Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,73 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    protected AuthResult(@NonNull final String accessToken, @NonNull final String idToken, @NonNull final String userId, @NonNull final String username, @NonNull final String authority) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEwNjAyOA=="}, "originalCommit": {"oid": "a4ac82e2f25eabb0bc6f3fff5a898a4e116dbffa"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzgzODYwMg==", "bodyText": "pushed now.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r553838602", "createdAt": "2021-01-08T09:38:52Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,73 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    protected AuthResult(@NonNull final String accessToken, @NonNull final String idToken, @NonNull final String userId, @NonNull final String username, @NonNull final String authority) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEwNjAyOA=="}, "originalCommit": {"oid": "a4ac82e2f25eabb0bc6f3fff5a898a4e116dbffa"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MTE5MzYzOnYy", "diffSide": "RIGHT", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDo0NDowMVrOIPe6dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwOTozOTowMVrOIQLoVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEwNjAzNg==", "bodyText": "This can be public constructor", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r553106036", "createdAt": "2021-01-07T04:44:01Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,73 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    protected AuthResult(@NonNull final String accessToken, @NonNull final String idToken, @NonNull final String userId, @NonNull final String username, @NonNull final String authority) {\n+        this.accessToken = accessToken;\n+        this.idToken = idToken;\n+        this.userId = userId;\n+        this.username = username;\n+        this.authority = authority;\n+    }\n+\n+    protected AuthResult(@NonNull final Exception exception) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ac82e2f25eabb0bc6f3fff5a898a4e116dbffa"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQwMzgzOQ==", "bodyText": "updated.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r553403839", "createdAt": "2021-01-07T15:35:44Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,73 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    protected AuthResult(@NonNull final String accessToken, @NonNull final String idToken, @NonNull final String userId, @NonNull final String username, @NonNull final String authority) {\n+        this.accessToken = accessToken;\n+        this.idToken = idToken;\n+        this.userId = userId;\n+        this.username = username;\n+        this.authority = authority;\n+    }\n+\n+    protected AuthResult(@NonNull final Exception exception) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEwNjAzNg=="}, "originalCommit": {"oid": "a4ac82e2f25eabb0bc6f3fff5a898a4e116dbffa"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzY0ODYxMQ==", "bodyText": "Looks like you missed pushing your commit...I still see it as protected", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r553648611", "createdAt": "2021-01-07T23:16:59Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,73 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    protected AuthResult(@NonNull final String accessToken, @NonNull final String idToken, @NonNull final String userId, @NonNull final String username, @NonNull final String authority) {\n+        this.accessToken = accessToken;\n+        this.idToken = idToken;\n+        this.userId = userId;\n+        this.username = username;\n+        this.authority = authority;\n+    }\n+\n+    protected AuthResult(@NonNull final Exception exception) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEwNjAzNg=="}, "originalCommit": {"oid": "a4ac82e2f25eabb0bc6f3fff5a898a4e116dbffa"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzgzODY3OQ==", "bodyText": "pushed now.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r553838679", "createdAt": "2021-01-08T09:39:01Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,73 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    protected AuthResult(@NonNull final String accessToken, @NonNull final String idToken, @NonNull final String userId, @NonNull final String username, @NonNull final String authority) {\n+        this.accessToken = accessToken;\n+        this.idToken = idToken;\n+        this.userId = userId;\n+        this.username = username;\n+        this.authority = authority;\n+    }\n+\n+    protected AuthResult(@NonNull final Exception exception) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEwNjAzNg=="}, "originalCommit": {"oid": "a4ac82e2f25eabb0bc6f3fff5a898a4e116dbffa"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MTE5NDc0OnYy", "diffSide": "RIGHT", "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwNDo0NDozOVrOIPe7HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOFQwOTozODo0MlrOIQLnvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEwNjIwNA==", "bodyText": "This is basically same as not asserting...so you can probably just remove this entire block of code", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r553106204", "createdAt": "2021-01-07T04:44:39Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,73 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    protected AuthResult(@NonNull final String accessToken, @NonNull final String idToken, @NonNull final String userId, @NonNull final String username, @NonNull final String authority) {\n+        this.accessToken = accessToken;\n+        this.idToken = idToken;\n+        this.userId = userId;\n+        this.username = username;\n+        this.authority = authority;\n+    }\n+\n+    protected AuthResult(@NonNull final Exception exception) {\n+        this.exception = exception;\n+    }\n+\n+    public void assertSuccess() {\n+        if (exception != null) {\n+            throw new AssertionError(exception);\n+        }\n+        Assert.assertFalse(TextUtils.isEmpty(accessToken));\n+        Assert.assertFalse(TextUtils.isEmpty(idToken));\n+        Assert.assertFalse(TextUtils.isEmpty(userId));\n+        Assert.assertFalse(TextUtils.isEmpty(username));\n+        if (authority != null) {\n+            Assert.assertFalse(TextUtils.isEmpty(authority));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4ac82e2f25eabb0bc6f3fff5a898a4e116dbffa"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzQwMzk4MA==", "bodyText": "removed.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r553403980", "createdAt": "2021-01-07T15:35:56Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,73 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    protected AuthResult(@NonNull final String accessToken, @NonNull final String idToken, @NonNull final String userId, @NonNull final String username, @NonNull final String authority) {\n+        this.accessToken = accessToken;\n+        this.idToken = idToken;\n+        this.userId = userId;\n+        this.username = username;\n+        this.authority = authority;\n+    }\n+\n+    protected AuthResult(@NonNull final Exception exception) {\n+        this.exception = exception;\n+    }\n+\n+    public void assertSuccess() {\n+        if (exception != null) {\n+            throw new AssertionError(exception);\n+        }\n+        Assert.assertFalse(TextUtils.isEmpty(accessToken));\n+        Assert.assertFalse(TextUtils.isEmpty(idToken));\n+        Assert.assertFalse(TextUtils.isEmpty(userId));\n+        Assert.assertFalse(TextUtils.isEmpty(username));\n+        if (authority != null) {\n+            Assert.assertFalse(TextUtils.isEmpty(authority));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEwNjIwNA=="}, "originalCommit": {"oid": "a4ac82e2f25eabb0bc6f3fff5a898a4e116dbffa"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzY0ODczNg==", "bodyText": "Looks like you missed pushing your commit", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r553648736", "createdAt": "2021-01-07T23:17:25Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,73 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    protected AuthResult(@NonNull final String accessToken, @NonNull final String idToken, @NonNull final String userId, @NonNull final String username, @NonNull final String authority) {\n+        this.accessToken = accessToken;\n+        this.idToken = idToken;\n+        this.userId = userId;\n+        this.username = username;\n+        this.authority = authority;\n+    }\n+\n+    protected AuthResult(@NonNull final Exception exception) {\n+        this.exception = exception;\n+    }\n+\n+    public void assertSuccess() {\n+        if (exception != null) {\n+            throw new AssertionError(exception);\n+        }\n+        Assert.assertFalse(TextUtils.isEmpty(accessToken));\n+        Assert.assertFalse(TextUtils.isEmpty(idToken));\n+        Assert.assertFalse(TextUtils.isEmpty(userId));\n+        Assert.assertFalse(TextUtils.isEmpty(username));\n+        if (authority != null) {\n+            Assert.assertFalse(TextUtils.isEmpty(authority));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEwNjIwNA=="}, "originalCommit": {"oid": "a4ac82e2f25eabb0bc6f3fff5a898a4e116dbffa"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzgzODUyNA==", "bodyText": "pushed now.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1154#discussion_r553838524", "createdAt": "2021-01-08T09:38:42Z", "author": {"login": "ayushmeghwani"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/sdk/AuthResult.java", "diffHunk": "@@ -0,0 +1,73 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.sdk;\n+\n+import android.text.TextUtils;\n+import org.junit.Assert;\n+import androidx.annotation.NonNull;\n+import lombok.Getter;\n+\n+/**\n+ * An abstract wrapper class for the result obtained from acquire token interactively\n+ * or silently, it wraps all the parameters obtained from token and also\n+ * the exception, with methods to assert success or failures.\n+ */\n+@Getter\n+public abstract class AuthResult {\n+\n+    private String accessToken;\n+    private String idToken;\n+    private String userId;\n+    private String username;\n+    private String authority;\n+    private Exception exception;\n+\n+    protected AuthResult(@NonNull final String accessToken, @NonNull final String idToken, @NonNull final String userId, @NonNull final String username, @NonNull final String authority) {\n+        this.accessToken = accessToken;\n+        this.idToken = idToken;\n+        this.userId = userId;\n+        this.username = username;\n+        this.authority = authority;\n+    }\n+\n+    protected AuthResult(@NonNull final Exception exception) {\n+        this.exception = exception;\n+    }\n+\n+    public void assertSuccess() {\n+        if (exception != null) {\n+            throw new AssertionError(exception);\n+        }\n+        Assert.assertFalse(TextUtils.isEmpty(accessToken));\n+        Assert.assertFalse(TextUtils.isEmpty(idToken));\n+        Assert.assertFalse(TextUtils.isEmpty(userId));\n+        Assert.assertFalse(TextUtils.isEmpty(username));\n+        if (authority != null) {\n+            Assert.assertFalse(TextUtils.isEmpty(authority));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzEwNjIwNA=="}, "originalCommit": {"oid": "a4ac82e2f25eabb0bc6f3fff5a898a4e116dbffa"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2135, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}