{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MzU3MjIw", "number": 937, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOToyNjozNlrOEGFAYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDowNTozOVrOEGFw7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODA4OTMxOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOToyNjozNlrOGkqBZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOTo0MDozOFrOGkqddw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MDQwNQ==", "bodyText": "nit: final", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441090405", "createdAt": "2020-06-16T19:26:36Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -326,6 +339,7 @@ public void run() {\n     }\n \n     private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final String url) {\n+        String lowerCaseUrl = url.toLowerCase(Locale.US);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5NzU5MQ==", "bodyText": "finalized.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441097591", "createdAt": "2020-06-16T19:40:38Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -326,6 +339,7 @@ public void run() {\n     }\n \n     private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final String url) {\n+        String lowerCaseUrl = url.toLowerCase(Locale.US);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MDQwNQ=="}, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODA5MTQyOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOToyNzoxNFrOGkqCsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDowMDo1OFrOGkrHoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MDczOQ==", "bodyText": "nit: final", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441090739", "createdAt": "2020-06-16T19:27:14Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwODM4NA==", "bodyText": "added qualifier", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441108384", "createdAt": "2020-06-16T20:00:58Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MDczOQ=="}, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODEwNzY2OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/OAuth2WebViewClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOTozMjoxNFrOGkqM5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDowMTowNlrOGkrH3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MzM0OA==", "bodyText": "Let's replace code with auth code", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441093348", "createdAt": "2020-06-16T19:32:14Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/OAuth2WebViewClient.java", "diffHunk": "@@ -185,10 +185,11 @@ private void checkStartUrl(final String url) {\n             Logger.info(TAG, \"onPageStarted: Non-hierarchical loading uri.\");\n             Logger.infoPII(TAG, \"start url: \" + url);\n         } else if (StringUtil.isEmpty(uri.getQueryParameter(AuthenticationConstants.OAuth2.CODE))) {\n-            Logger.infoPII(TAG, \"Host: \" + uri.getHost() + \" Path: \" + uri.getPath());\n+            Logger.info(TAG, \"onPageStarted: URI has no code query parameter.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwODQ0NA==", "bodyText": "done", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441108444", "createdAt": "2020-06-16T20:01:06Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/OAuth2WebViewClient.java", "diffHunk": "@@ -185,10 +185,11 @@ private void checkStartUrl(final String url) {\n             Logger.info(TAG, \"onPageStarted: Non-hierarchical loading uri.\");\n             Logger.infoPII(TAG, \"start url: \" + url);\n         } else if (StringUtil.isEmpty(uri.getQueryParameter(AuthenticationConstants.OAuth2.CODE))) {\n-            Logger.infoPII(TAG, \"Host: \" + uri.getHost() + \" Path: \" + uri.getPath());\n+            Logger.info(TAG, \"onPageStarted: URI has no code query parameter.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MzM0OA=="}, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODEwOTkwOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOTozMjo1NlrOGkqOVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDowMToxNlrOGkrIMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MzcxOQ==", "bodyText": "can be final", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441093719", "createdAt": "2020-06-16T19:32:56Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");\n         return false;\n     }\n \n+    private String removeQueryParameters(@NonNull String url) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwODUyOA==", "bodyText": "added qualifier", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441108528", "createdAt": "2020-06-16T20:01:16Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");\n         return false;\n     }\n \n+    private String removeQueryParameters(@NonNull String url) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MzcxOQ=="}, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODEwOTk0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOTozMjo1OFrOGkqOXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDowMzowNlrOGkrLmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MzcyNw==", "bodyText": "we can log an error message here about the exception, in the rarest case we hit this", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441093727", "createdAt": "2020-06-16T19:32:58Z", "author": {"login": "kreedula"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");\n         return false;\n     }\n \n+    private String removeQueryParameters(@NonNull String url) {\n+        try {\n+            return StringExtensions.removeQueryParameterFromUrl(url);\n+        } catch (final URISyntaxException e) {\n+            return \"redacted\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5NDY3Nw==", "bodyText": "Yes.  Particularly since we started this process with a URI object.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441094677", "createdAt": "2020-06-16T19:34:52Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");\n         return false;\n     }\n \n+    private String removeQueryParameters(@NonNull String url) {\n+        try {\n+            return StringExtensions.removeQueryParameterFromUrl(url);\n+        } catch (final URISyntaxException e) {\n+            return \"redacted\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MzcyNw=="}, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwODA2NQ==", "bodyText": "log line added.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441108065", "createdAt": "2020-06-16T20:00:26Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");\n         return false;\n     }\n \n+    private String removeQueryParameters(@NonNull String url) {\n+        try {\n+            return StringExtensions.removeQueryParameterFromUrl(url);\n+        } catch (final URISyntaxException e) {\n+            return \"redacted\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MzcyNw=="}, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwOTQwMQ==", "bodyText": "Log line added.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441109401", "createdAt": "2020-06-16T20:03:06Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");\n         return false;\n     }\n \n+    private String removeQueryParameters(@NonNull String url) {\n+        try {\n+            return StringExtensions.removeQueryParameterFromUrl(url);\n+        } catch (final URISyntaxException e) {\n+            return \"redacted\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5MzcyNw=="}, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODExMzc5OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOTozNDoxM1rOGkqQzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDowMTozM1rOGkrIsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5NDM1MA==", "bodyText": "The method name can be a bit confusing since if we hit the catch block then we are not returning a URL with query parameters removed instead we are returning a pre-defined String", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441094350", "createdAt": "2020-06-16T19:34:13Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");\n         return false;\n     }\n \n+    private String removeQueryParameters(@NonNull String url) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5OTgxOA==", "bodyText": "removeQueryParametersOrRedact?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441099818", "createdAt": "2020-06-16T19:44:47Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");\n         return false;\n     }\n \n+    private String removeQueryParameters(@NonNull String url) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5NDM1MA=="}, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwMDQ2Mg==", "bodyText": "Yup, that sounds good!", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441100462", "createdAt": "2020-06-16T19:45:56Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");\n         return false;\n     }\n \n+    private String removeQueryParameters(@NonNull String url) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5NDM1MA=="}, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwODY1OA==", "bodyText": "changed.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441108658", "createdAt": "2020-06-16T20:01:33Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");\n         return false;\n     }\n \n+    private String removeQueryParameters(@NonNull String url) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5NDM1MA=="}, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODExNjU0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxOTozNTowOFrOGkqSmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDowMjo0OFrOGkrLAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5NDgxMA==", "bodyText": "Should we log the actual url here? I mean the one with the query parameters still there", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441094810", "createdAt": "2020-06-16T19:35:08Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5ODIyNA==", "bodyText": "I saw that we didn't to it above, and was just following that pattern.  Should we?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441098224", "createdAt": "2020-06-16T19:41:51Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5NDgxMA=="}, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwMjE1Ng==", "bodyText": "I think it's better not too as we are not sure what data the qp's can have here, since this url is not known to us. Logging this invalid url should give us good info on what's wrong anyways.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441102156", "createdAt": "2020-06-16T19:49:12Z", "author": {"login": "kreedula"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5NDgxMA=="}, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwOTI1MA==", "bodyText": "I think that we should be OK without it, so I'm leaving it out.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441109250", "createdAt": "2020-06-16T20:02:48Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -337,28 +351,32 @@ private boolean processInvalidUrl(@NonNull final WebView view, @NonNull final St\n             return true;\n         }\n \n-        if (url.toLowerCase(Locale.US).equals(\"about:blank\")) {\n+        if (\"about:blank\".equals(lowerCaseUrl)) {\n             Logger.verbose(TAG, \"It is an blank page request\");\n             return true;\n         }\n \n-        if (!url.toLowerCase(Locale.US).startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n-            String redactedUrl = \"redacted\";\n-            try {\n-                redactedUrl = StringExtensions.removeQueryParameterFromUrl(url);\n-            } catch (final URISyntaxException e) {\n-                // Best effort.\n-            }\n+        if (!lowerCaseUrl.startsWith(AuthenticationConstants.Broker.REDIRECT_SSL_PREFIX)) {\n+            String redactedUrl = removeQueryParameters(url);\n \n             Logger.error(TAG, \"The webView was redirected to an unsafe URL: \" + redactedUrl, null);\n             returnError(ErrorStrings.WEBVIEW_REDIRECTURL_NOT_SSL_PROTECTED, \"The webView was redirected to an unsafe URL.\");\n             view.stopLoading();\n             return true;\n         }\n-\n+        Logger.infoPII(TAG,\"We are declining to override loading and redirect to invalid URL: '\"\n+                + removeQueryParameters(url) + \"' the user's url pattern is '\" + mRedirectUrl + \"'\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA5NDgxMA=="}, "originalCommit": {"oid": "abda453ed6c1b706b436ba197caa0f1b9ef85630"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODIxMjMyOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/OAuth2WebViewClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDowNToxNFrOGkrPPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDoxMjowMVrOGkrcIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMDMzNA==", "bodyText": "Let's add a new line at the end of this file", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441110334", "createdAt": "2020-06-16T20:05:14Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/OAuth2WebViewClient.java", "diffHunk": "@@ -185,10 +185,14 @@ private void checkStartUrl(final String url) {\n             Logger.info(TAG, \"onPageStarted: Non-hierarchical loading uri.\");\n             Logger.infoPII(TAG, \"start url: \" + url);\n         } else if (StringUtil.isEmpty(uri.getQueryParameter(AuthenticationConstants.OAuth2.CODE))) {\n-            Logger.infoPII(TAG, \"Host: \" + uri.getHost() + \" Path: \" + uri.getPath());\n+            Logger.info(TAG, \"onPageStarted: URI has no auth code ('\"\n+                    + AuthenticationConstants.OAuth2.CODE + \"') query parameter.\");\n+            Logger.infoPII(TAG, \"Scheme:\" + uri.getScheme() + \" Host: \" + uri.getHost()\n+                    + \" Path: \" + uri.getPath());\n         } else {\n             Logger.info(TAG, \"Auth code is returned for the loading url.\");\n-            Logger.infoPII(TAG, \"Host: \" + uri.getHost() + \" Path: \" + uri.getPath());\n+            Logger.infoPII(TAG, \"Scheme:\" + uri.getScheme() + \" Host: \" + uri.getHost()\n+                    + \" Path: \" + uri.getPath());\n         }\n     }\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7021c206a23fd946fa2718d2f1e0417375aac721"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMzYzNQ==", "bodyText": "Added.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441113635", "createdAt": "2020-06-16T20:12:01Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/OAuth2WebViewClient.java", "diffHunk": "@@ -185,10 +185,14 @@ private void checkStartUrl(final String url) {\n             Logger.info(TAG, \"onPageStarted: Non-hierarchical loading uri.\");\n             Logger.infoPII(TAG, \"start url: \" + url);\n         } else if (StringUtil.isEmpty(uri.getQueryParameter(AuthenticationConstants.OAuth2.CODE))) {\n-            Logger.infoPII(TAG, \"Host: \" + uri.getHost() + \" Path: \" + uri.getPath());\n+            Logger.info(TAG, \"onPageStarted: URI has no auth code ('\"\n+                    + AuthenticationConstants.OAuth2.CODE + \"') query parameter.\");\n+            Logger.infoPII(TAG, \"Scheme:\" + uri.getScheme() + \" Host: \" + uri.getHost()\n+                    + \" Path: \" + uri.getPath());\n         } else {\n             Logger.info(TAG, \"Auth code is returned for the loading url.\");\n-            Logger.infoPII(TAG, \"Host: \" + uri.getHost() + \" Path: \" + uri.getPath());\n+            Logger.infoPII(TAG, \"Scheme:\" + uri.getScheme() + \" Host: \" + uri.getHost()\n+                    + \" Path: \" + uri.getPath());\n         }\n     }\n }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMDMzNA=="}, "originalCommit": {"oid": "7021c206a23fd946fa2718d2f1e0417375aac721"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODIxMzU2OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDowNTozOVrOGkrP-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDoxMTo1M1rOGkrb8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMDUyMQ==", "bodyText": "Let's run formatter on this file", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441110521", "createdAt": "2020-06-16T20:05:39Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -118,6 +118,19 @@ public boolean shouldOverrideUrlLoading(final WebView view, final WebResourceReq\n         return handleUrl(view, requestUrl.toString());\n     }\n \n+    /**\n+     * Interpret and take action on a redirect url.\n+     * This function will return true in every case save 1.  That is, when the URL is none of:\n+     * <ul><li>A urn containing an authorization challenge (starts with \"urn:http-auth:PKeyAuth\")</li>\n+     * <li>A url that starts with the same prefix as the tenant's redirect url</li>\n+     * <li>An explicit request to open the browser (starts with \"browser://\")</li>\n+     * <li>A request to install the auth broker (starts with \"msauth://\")</li>\n+     * <li>It is a request that has the intent of starting the broker and the url starts with \"browser://\"</li>\n+     * <li>It <strong>does not</strong> begin with \"https://\".</li></ul>\n+     * @param view The WebView that is initiating the callback.\n+     * @param url  The string representation of the url.\n+     * @return false if we will not take action on the url.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7021c206a23fd946fa2718d2f1e0417375aac721"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMzU4Ng==", "bodyText": "Formatted.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/937#discussion_r441113586", "createdAt": "2020-06-16T20:11:53Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/ui/webview/AzureActiveDirectoryWebViewClient.java", "diffHunk": "@@ -118,6 +118,19 @@ public boolean shouldOverrideUrlLoading(final WebView view, final WebResourceReq\n         return handleUrl(view, requestUrl.toString());\n     }\n \n+    /**\n+     * Interpret and take action on a redirect url.\n+     * This function will return true in every case save 1.  That is, when the URL is none of:\n+     * <ul><li>A urn containing an authorization challenge (starts with \"urn:http-auth:PKeyAuth\")</li>\n+     * <li>A url that starts with the same prefix as the tenant's redirect url</li>\n+     * <li>An explicit request to open the browser (starts with \"browser://\")</li>\n+     * <li>A request to install the auth broker (starts with \"msauth://\")</li>\n+     * <li>It is a request that has the intent of starting the broker and the url starts with \"browser://\"</li>\n+     * <li>It <strong>does not</strong> begin with \"https://\".</li></ul>\n+     * @param view The WebView that is initiating the callback.\n+     * @param url  The string representation of the url.\n+     * @return false if we will not take action on the url.\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTExMDUyMQ=="}, "originalCommit": {"oid": "7021c206a23fd946fa2718d2f1e0417375aac721"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2395, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}