{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NDMwNzg3", "number": 957, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMTowMToxOFrOEMpzvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToxMTo1NlrOEMqATA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzAzMzU2OnYy", "diffSide": "RIGHT", "path": "common/src/androidTest/java/com/microsoft/identity/common/internal/migration/AdalMigrationAdapterDeserializationTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMTowMToxOFrOGu5FHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToxNjo1MFrOGu5iVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyMjg3Nw==", "bodyText": "You know I love parameterized tests, but the question I would ask is that with only 2 permutations here is it clearer to just have the two methods?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/957#discussion_r451822877", "createdAt": "2020-07-08T21:01:18Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/internal/migration/AdalMigrationAdapterDeserializationTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.migration;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+\n+import com.google.gson.Gson;\n+import com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(Parameterized.class)\n+public class AdalMigrationAdapterDeserializationTest {\n+\n+    private static final String AUTHORITY = \"https://login.microsoftonline.com/common\";\n+    private static final String CLIENT_ID = \"a_client_id\";\n+    private static final String TENANT_ID = \"a_tenant_id\";\n+    public static final String CACHE_KEY = \"a_cache_key\";\n+\n+    private interface DeserializationValidator {\n+        void onDeserializationFinished(Map<String, ADALTokenCacheItem> result);\n+    }\n+\n+    private AdalMigrationAdapter mMigrationAdapter;\n+\n+    private Map<String, String> mDeserializationInput;\n+    private DeserializationValidator mValidator;\n+\n+    @Parameterized.Parameters\n+    public static Iterable<Object[]> testParams() {\n+        return Arrays.asList(\n+                new Object[]{\n+                        getAdalCacheItemInput(),\n+                        getDeserializationValidator()\n+                },\n+                new Object[]{\n+                        getMalformedCacheItemInput(),\n+                        getDeserializationValidator()\n+                }\n+        );\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd911750bd6cad70ae7632aae78b88c6abc53533"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyMzUxNA==", "bodyText": "Originally had exactly that, and expanded upon it:\n7ad92ac\nSo reverting this is trivial, your call on which you want", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/957#discussion_r451823514", "createdAt": "2020-07-08T21:02:30Z", "author": {"login": "iambmelt"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/internal/migration/AdalMigrationAdapterDeserializationTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.migration;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+\n+import com.google.gson.Gson;\n+import com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(Parameterized.class)\n+public class AdalMigrationAdapterDeserializationTest {\n+\n+    private static final String AUTHORITY = \"https://login.microsoftonline.com/common\";\n+    private static final String CLIENT_ID = \"a_client_id\";\n+    private static final String TENANT_ID = \"a_tenant_id\";\n+    public static final String CACHE_KEY = \"a_cache_key\";\n+\n+    private interface DeserializationValidator {\n+        void onDeserializationFinished(Map<String, ADALTokenCacheItem> result);\n+    }\n+\n+    private AdalMigrationAdapter mMigrationAdapter;\n+\n+    private Map<String, String> mDeserializationInput;\n+    private DeserializationValidator mValidator;\n+\n+    @Parameterized.Parameters\n+    public static Iterable<Object[]> testParams() {\n+        return Arrays.asList(\n+                new Object[]{\n+                        getAdalCacheItemInput(),\n+                        getDeserializationValidator()\n+                },\n+                new Object[]{\n+                        getMalformedCacheItemInput(),\n+                        getDeserializationValidator()\n+                }\n+        );\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyMjg3Nw=="}, "originalCommit": {"oid": "cd911750bd6cad70ae7632aae78b88c6abc53533"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyNTg4Mg==", "bodyText": "I'm not concerned with it, really.  An name parameter would be nice, but I doubt that your class arguments give useful toString values.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/957#discussion_r451825882", "createdAt": "2020-07-08T21:07:28Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/internal/migration/AdalMigrationAdapterDeserializationTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.migration;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+\n+import com.google.gson.Gson;\n+import com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(Parameterized.class)\n+public class AdalMigrationAdapterDeserializationTest {\n+\n+    private static final String AUTHORITY = \"https://login.microsoftonline.com/common\";\n+    private static final String CLIENT_ID = \"a_client_id\";\n+    private static final String TENANT_ID = \"a_tenant_id\";\n+    public static final String CACHE_KEY = \"a_cache_key\";\n+\n+    private interface DeserializationValidator {\n+        void onDeserializationFinished(Map<String, ADALTokenCacheItem> result);\n+    }\n+\n+    private AdalMigrationAdapter mMigrationAdapter;\n+\n+    private Map<String, String> mDeserializationInput;\n+    private DeserializationValidator mValidator;\n+\n+    @Parameterized.Parameters\n+    public static Iterable<Object[]> testParams() {\n+        return Arrays.asList(\n+                new Object[]{\n+                        getAdalCacheItemInput(),\n+                        getDeserializationValidator()\n+                },\n+                new Object[]{\n+                        getMalformedCacheItemInput(),\n+                        getDeserializationValidator()\n+                }\n+        );\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyMjg3Nw=="}, "originalCommit": {"oid": "cd911750bd6cad70ae7632aae78b88c6abc53533"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzMDM1Nw==", "bodyText": "Added a name param via the 0th param: 81f02b1", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/957#discussion_r451830357", "createdAt": "2020-07-08T21:16:50Z", "author": {"login": "iambmelt"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/internal/migration/AdalMigrationAdapterDeserializationTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.migration;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+\n+import com.google.gson.Gson;\n+import com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(Parameterized.class)\n+public class AdalMigrationAdapterDeserializationTest {\n+\n+    private static final String AUTHORITY = \"https://login.microsoftonline.com/common\";\n+    private static final String CLIENT_ID = \"a_client_id\";\n+    private static final String TENANT_ID = \"a_tenant_id\";\n+    public static final String CACHE_KEY = \"a_cache_key\";\n+\n+    private interface DeserializationValidator {\n+        void onDeserializationFinished(Map<String, ADALTokenCacheItem> result);\n+    }\n+\n+    private AdalMigrationAdapter mMigrationAdapter;\n+\n+    private Map<String, String> mDeserializationInput;\n+    private DeserializationValidator mValidator;\n+\n+    @Parameterized.Parameters\n+    public static Iterable<Object[]> testParams() {\n+        return Arrays.asList(\n+                new Object[]{\n+                        getAdalCacheItemInput(),\n+                        getDeserializationValidator()\n+                },\n+                new Object[]{\n+                        getMalformedCacheItemInput(),\n+                        getDeserializationValidator()\n+                }\n+        );\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyMjg3Nw=="}, "originalCommit": {"oid": "cd911750bd6cad70ae7632aae78b88c6abc53533"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzA2NTcyOnYy", "diffSide": "RIGHT", "path": "common/src/androidTest/java/com/microsoft/identity/common/internal/migration/AdalMigrationAdapterDeserializationTest.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMToxMTo1NlrOGu5ZgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQyMTo0NDoyMVrOGu6R0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyODA5Nw==", "bodyText": "Does it need to be an instrumented test? Wouldn't a JVM test be more efficient?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/957#discussion_r451828097", "createdAt": "2020-07-08T21:11:56Z", "author": {"login": "shahzaibj"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/internal/migration/AdalMigrationAdapterDeserializationTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.migration;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+\n+import com.google.gson.Gson;\n+import com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(Parameterized.class)\n+public class AdalMigrationAdapterDeserializationTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd911750bd6cad70ae7632aae78b88c6abc53533"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyOTI2OA==", "bodyText": "Need a context", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/957#discussion_r451829268", "createdAt": "2020-07-08T21:14:34Z", "author": {"login": "iambmelt"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/internal/migration/AdalMigrationAdapterDeserializationTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.migration;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+\n+import com.google.gson.Gson;\n+import com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(Parameterized.class)\n+public class AdalMigrationAdapterDeserializationTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyODA5Nw=="}, "originalCommit": {"oid": "cd911750bd6cad70ae7632aae78b88c6abc53533"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzODA0Mw==", "bodyText": "You can get a context in JVM based tests. ApplicationProvider.getApplicationContext() - it's an AndroidX API\nAll of our E2E Robolectric tests need a context as well and we get it like that and run the tests in JVM", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/957#discussion_r451838043", "createdAt": "2020-07-08T21:33:42Z", "author": {"login": "shahzaibj"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/internal/migration/AdalMigrationAdapterDeserializationTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.migration;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+\n+import com.google.gson.Gson;\n+import com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(Parameterized.class)\n+public class AdalMigrationAdapterDeserializationTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyODA5Nw=="}, "originalCommit": {"oid": "cd911750bd6cad70ae7632aae78b88c6abc53533"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgzODkwMg==", "bodyText": "Instrumented test is fine too....it's just that we've been trying to move to Robolectric test as a team, with possibly moving our existing Instrumented test to Robolectric in the future....adding more instrumented tests would just make that more difficult to happen", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/957#discussion_r451838902", "createdAt": "2020-07-08T21:35:41Z", "author": {"login": "shahzaibj"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/internal/migration/AdalMigrationAdapterDeserializationTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.migration;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+\n+import com.google.gson.Gson;\n+import com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(Parameterized.class)\n+public class AdalMigrationAdapterDeserializationTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyODA5Nw=="}, "originalCommit": {"oid": "cd911750bd6cad70ae7632aae78b88c6abc53533"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg0MjUxNQ==", "bodyText": "e143f6d", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/957#discussion_r451842515", "createdAt": "2020-07-08T21:44:21Z", "author": {"login": "iambmelt"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/internal/migration/AdalMigrationAdapterDeserializationTest.java", "diffHunk": "@@ -0,0 +1,139 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.migration;\n+\n+import android.content.Context;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+\n+import com.google.gson.Gson;\n+import com.microsoft.identity.common.internal.cache.ADALTokenCacheItem;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(Parameterized.class)\n+public class AdalMigrationAdapterDeserializationTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTgyODA5Nw=="}, "originalCommit": {"oid": "cd911750bd6cad70ae7632aae78b88c6abc53533"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2417, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}