{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4OTgxNTM3", "number": 1074, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1ODoxNVrOErP48A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDoxNToyOFrOE6Sgaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg0NTYwOnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1ODoxNVrOHd6amQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDozNDo0N1rOHe65PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyNzgzMw==", "bodyText": "Class names must start with upper case", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501127833", "createdAt": "2020-10-07T15:58:15Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDI1Mg==", "bodyText": "Renamed to PolicyHelper", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184252", "createdAt": "2020-10-09T04:34:47Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyNzgzMw=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg0NjMzOnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1ODoyM1rOHd6bEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDozNTowOFrOHe65pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyNzk1NQ==", "bodyText": "Needs javadoc", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501127955", "createdAt": "2020-10-07T15:58:23Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDM1Ng==", "bodyText": "added javadoc.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184356", "createdAt": "2020-10-09T04:35:08Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyNzk1NQ=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg0NzE2OnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1ODozMlrOHd6big==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDozNToxN1rOHe650w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODA3NA==", "bodyText": "needs javadoc", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501128074", "createdAt": "2020-10-07T15:58:32Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDQwMw==", "bodyText": "added javadoc.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184403", "createdAt": "2020-10-09T04:35:17Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODA3NA=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg0NzYwOnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1ODozOVrOHd6b1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDozNToyNVrOHe658g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODE1MQ==", "bodyText": "needs javadoc", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501128151", "createdAt": "2020-10-07T15:58:39Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTYwMw==", "bodyText": "+1 javadoc all public methods", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501131603", "createdAt": "2020-10-07T16:03:09Z", "author": {"login": "iambmelt"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODE1MQ=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDQzNA==", "bodyText": "added javadoc.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184434", "createdAt": "2020-10-09T04:35:25Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODE1MQ=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg0ODc5OnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1ODo1NlrOHd6cnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDozNTozNlrOHe66HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODM0OA==", "bodyText": "add NonNull and final", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501128348", "createdAt": "2020-10-07T15:58:56Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDQ3Nw==", "bodyText": "added NonNull and final to upn and policy.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184477", "createdAt": "2020-10-09T04:35:36Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODM0OA=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg0OTI1OnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1OTowMVrOHd6c3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDozNTo0NVrOHe66NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODQxNQ==", "bodyText": "add NonNull and final", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501128415", "createdAt": "2020-10-07T15:59:01Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDUwMQ==", "bodyText": "added NonNull and final to upn and policy.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184501", "createdAt": "2020-10-09T04:35:45Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODQxNQ=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg1MDE0OnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1OToxNVrOHd6dfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDozNTo1MlrOHe66TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODU3NA==", "bodyText": "methods should be separated by an empty line", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501128574", "createdAt": "2020-10-07T15:59:15Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDUyNQ==", "bodyText": "separated by a single line", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184525", "createdAt": "2020-10-09T04:35:52Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODU3NA=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg1MTM4OnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1OToyOVrOHd6eSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDozNjoxNFrOHe66nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODc3OA==", "bodyText": "Needs license", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501128778", "createdAt": "2020-10-07T15:59:29Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDYwNw==", "bodyText": "license is added.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184607", "createdAt": "2020-10-09T04:36:14Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyODc3OA=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg1MzMyOnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1OTo1NVrOHd6feQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDozNjozOVrOHe666g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyOTA4MQ==", "bodyText": "final", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501129081", "createdAt": "2020-10-07T15:59:55Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = disablePolicyApi.put(upn, policy);\n+            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NDY4Mg==", "bodyText": "added final", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502184682", "createdAt": "2020-10-09T04:36:39Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = disablePolicyApi.put(upn, policy);\n+            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyOTA4MQ=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg1MzY0OnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1OTo1OFrOHd6fqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwNDozODozNFrOHe68VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyOTEzMA==", "bodyText": "final", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501129130", "createdAt": "2020-10-07T15:59:58Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjE4NTA0NQ==", "bodyText": "added final", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r502185045", "createdAt": "2020-10-09T04:38:34Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyOTEzMA=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg2NjE3OnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjowMjoyMlrOHd6nGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNDo1NDo0MVrOHhCLiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTAzMg==", "bodyText": "Add logging", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501131032", "createdAt": "2020-10-07T16:02:22Z", "author": {"login": "iambmelt"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTI0Mg==", "bodyText": "Preferably, don't just crash. If we can recover from this, we should", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501131242", "createdAt": "2020-10-07T16:02:39Z", "author": {"login": "iambmelt"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTAzMg=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE2MjQxNw==", "bodyText": "I think we do need to fail the test if this fails.....we can throw an AssertionError instead to just fail the test case.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504162417", "createdAt": "2020-10-13T18:15:31Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTAzMg=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwMDc3Nw==", "bodyText": "Added logging", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504400777", "createdAt": "2020-10-14T04:54:41Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTAzMg=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg3MTM5OnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjowMzozNFrOHd6qiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNDo1NDo1NVrOHhCLtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTkxMg==", "bodyText": "Add logging / dont crash -- surface the error instead", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501131912", "createdAt": "2020-10-07T16:03:34Z", "author": {"login": "iambmelt"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = disablePolicyApi.put(upn, policy);\n+            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwMDgyMg==", "bodyText": "Added logging", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504400822", "createdAt": "2020-10-14T04:54:55Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = disablePolicyApi.put(upn, policy);\n+            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzMTkxMg=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg5Njk3OnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjowOTowMVrOHd66OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNDo1NTo1M1rOHhCMtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzNTkyOQ==", "bodyText": "Are you sure this result can never be null?\nAlthough this is kind of a trivial example, as a matter of good practice, split multiple method calls into multiple lines. It makes debugging stack traces substantially easier.\nSo rather than....\nreturn customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\ndo\nfinal String result  = successResponse.getResult();\n\nif (null != result) {\n    return result.toLowerCase().contains(expectedResult);\n}", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501135929", "createdAt": "2020-10-07T16:09:01Z", "author": {"login": "iambmelt"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = disablePolicyApi.put(upn, policy);\n+            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ0NjU2Mw==", "bodyText": "and if it is null, you can throw new AssertionError() -- could probably pass a message in there", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r503446563", "createdAt": "2020-10-12T17:50:29Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = disablePolicyApi.put(upn, policy);\n+            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzNTkyOQ=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwMTA3OA==", "bodyText": "modified the code to handle null results.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504401078", "createdAt": "2020-10-14T04:55:53Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = disablePolicyApi.put(upn, policy);\n+            final String expectedResult = (\"disabled : \" + policy + \" policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzNTkyOQ=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzg5NzYzOnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjowOToxNVrOHd66sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNDo1NjoxOFrOHhCNIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzNjA0OA==", "bodyText": "Does this declaration need to span two lines?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r501136048", "createdAt": "2020-10-07T16:09:15Z", "author": {"login": "iambmelt"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQwMTE4Ng==", "bodyText": "merged into a single line", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504401186", "createdAt": "2020-10-14T04:56:18Z", "author": {"login": "kkrishnareddy"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/policyHelper.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+public class policyHelper {\n+    public boolean enablePolicy(String upn, String policy)\n+    {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;\n+            customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (\"Enabled : \" + policy + \"policy for user : \" + upn)\n+                    .toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+    public boolean disablePolicy(String upn, String policy){\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try{\n+            final CustomSuccessResponse customSuccessResponse;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEzNjA0OA=="}, "originalCommit": {"oid": "8a2d2b1d45a9b03c5bf6674c7878f2a532f277c9"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Nzk2MDMzOnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODoxNjoxMlrOHgzrHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODoxNjoxMlrOHgzrHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE2MzEwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new RuntimeException(e.getMessage());\n          \n          \n            \n                        throw new AssertionError(e);", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504163101", "createdAt": "2020-10-13T18:16:12Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "diffHunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+import lombok.NonNull;\n+\n+/**\n+ * PolicyHelper is a class which lets you to enable/disable CA/Special Policies for any Locked user.\n+ */\n+public class PolicyHelper {\n+\n+    /**\n+     * lets you enable CA/Special Policies for any Locked User.\n+     * Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO.   Also test users can have more than 1 policy assigned to the same user.\n+     *\n+     * @param upn    Enter a valid Locked User UPN (optional)\n+     * @param policy Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO. (optional)\n+     * @return boolean value indicating policy enabled or not.\n+     */\n+    public boolean enablePolicy(@NonNull final String upn, @NonNull final String policy) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try {\n+            final CustomSuccessResponse customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (policy +\" Enabled for user : \" + upn).toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (final ApiException e) {\n+            throw new RuntimeException(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8511a604c0846edac41e141599217b0b8a969af"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Nzk2MDk1OnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODoxNjoxOVrOHgzreg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODoxNjoxOVrOHgzreg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE2MzE5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new RuntimeException(e.getMessage());\n          \n          \n            \n                        throw new AssertionError(e);", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r504163194", "createdAt": "2020-10-13T18:16:19Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "diffHunk": "@@ -0,0 +1,77 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+import lombok.NonNull;\n+\n+/**\n+ * PolicyHelper is a class which lets you to enable/disable CA/Special Policies for any Locked user.\n+ */\n+public class PolicyHelper {\n+\n+    /**\n+     * lets you enable CA/Special Policies for any Locked User.\n+     * Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO.   Also test users can have more than 1 policy assigned to the same user.\n+     *\n+     * @param upn    Enter a valid Locked User UPN (optional)\n+     * @param policy Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO. (optional)\n+     * @return boolean value indicating policy enabled or not.\n+     */\n+    public boolean enablePolicy(@NonNull final String upn, @NonNull final String policy) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try {\n+            final CustomSuccessResponse customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (policy +\" Enabled for user : \" + upn).toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (final ApiException e) {\n+            throw new RuntimeException(e.getMessage());\n+        }\n+    }\n+\n+    /**\n+     * lets you disable CA/Special Policies for any Locked User.\n+     * Disable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO.   Also test users can have more than 1 policy assigned to the same user.\n+     *\n+     * @param upn    Enter a valid Locked User UPN (optional)\n+     * @param policy Disable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO. (optional)\n+     * @return boolean value indicating policy is disabled or not for the upn.\n+     */\n+    public boolean disablePolicy(@NonNull final String upn, @NonNull final String policy) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final DisablePolicyApi disablePolicyApi = new DisablePolicyApi();\n+        try {\n+            final CustomSuccessResponse customSuccessResponse = disablePolicyApi.put(upn, policy);\n+            final String expectedResult = (policy + \" Disabled for user : \" + upn).toLowerCase();\n+            return customSuccessResponse.getResult().toLowerCase().contains(expectedResult);\n+        } catch (final ApiException e) {\n+            throw new RuntimeException(e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8511a604c0846edac41e141599217b0b8a969af"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDYwNTQzOnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMTo1MToyOVrOH0hSMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMTo1MToyOVrOH0hSMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgzMzMyOQ==", "bodyText": "add empty line above", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r524833329", "createdAt": "2020-11-17T01:51:29Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "diffHunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.common.internal.logging.Logger;\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+import org.junit.Assert;\n+\n+import lombok.NonNull;\n+\n+/**\n+ * PolicyHelper is a class which lets you to enable/disable CA/Special Policies for any Locked user.\n+ */\n+public class PolicyHelper {\n+\n+    private static final String TAG = PolicyHelper.class.getName();\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07121d8d3ecd927f6973579cf77d1149d8f209a1"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTU1OTQzOnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDoxNDo1OVrOH1QtVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDoxNDo1OVrOH1QtVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYxMDMyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * lets you enable CA/Special Policies for any Locked User.\n          \n          \n            \n                 * Enable CA/Special Policies for any Locked User.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r525610324", "createdAt": "2020-11-18T00:14:59Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "diffHunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.common.internal.logging.Logger;\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+import org.junit.Assert;\n+\n+import lombok.NonNull;\n+\n+/**\n+ * PolicyHelper is a class which lets you to enable/disable CA/Special Policies for any Locked user.\n+ */\n+public class PolicyHelper {\n+\n+    private static final String TAG = PolicyHelper.class.getName();\n+    /**\n+     * lets you enable CA/Special Policies for any Locked User.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "998621dcb5f705b7c958fb27a0e5ca5067d74a6f"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTU2MDc1OnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDoxNToyOFrOH1QuDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMDoxNToyOFrOH1QuDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYxMDUxMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * lets you disable CA/Special Policies for any Locked User.\n          \n          \n            \n                 * Disable CA/Special Policies for any Locked User.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1074#discussion_r525610510", "createdAt": "2020-11-18T00:15:28Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/labutils/PolicyHelper.java", "diffHunk": "@@ -0,0 +1,87 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+\n+package com.microsoft.identity.internal.testutils.labutils;\n+\n+import com.microsoft.identity.common.internal.logging.Logger;\n+import com.microsoft.identity.internal.test.labapi.ApiException;\n+import com.microsoft.identity.internal.test.labapi.api.DisablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.api.EnablePolicyApi;\n+import com.microsoft.identity.internal.test.labapi.model.CustomSuccessResponse;\n+\n+import org.junit.Assert;\n+\n+import lombok.NonNull;\n+\n+/**\n+ * PolicyHelper is a class which lets you to enable/disable CA/Special Policies for any Locked user.\n+ */\n+public class PolicyHelper {\n+\n+    private static final String TAG = PolicyHelper.class.getName();\n+    /**\n+     * lets you enable CA/Special Policies for any Locked User.\n+     * Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO.   Also test users can have more than 1 policy assigned to the same user.\n+     *\n+     * @param upn    Enter a valid Locked User UPN (optional)\n+     * @param policy Enable Policy can be used for GlobalMFA, MAMCA, MDMCA, MFAONSPO, MFAONEXO. (optional)\n+     * @return boolean value indicating policy enabled or not.\n+     */\n+    public boolean enablePolicy(@NonNull final String upn, @NonNull final String policy) {\n+        LabAuthenticationHelper.getInstance().setupApiClientWithAccessToken();\n+        final EnablePolicyApi enablePolicyApi = new EnablePolicyApi();\n+        try {\n+            final CustomSuccessResponse customSuccessResponse = enablePolicyApi.putPolicy(upn, policy);\n+            final String expectedResult = (policy +\" Enabled for user : \" + upn).toLowerCase();\n+            final String result = customSuccessResponse.getResult();\n+            Assert.assertNotNull(result);\n+            return result.toLowerCase().contains(expectedResult);\n+        } catch (final ApiException e) {\n+            Logger.error(TAG,\"Bad Request : Enable Policy can be used only for Locked users.\",e);\n+            throw new AssertionError(e);\n+        }\n+    }\n+\n+    /**\n+     * lets you disable CA/Special Policies for any Locked User.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "998621dcb5f705b7c958fb27a0e5ca5067d74a6f"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2001, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}