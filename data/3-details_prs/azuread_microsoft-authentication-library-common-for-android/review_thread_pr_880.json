{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3ODQwNDk3", "number": 880, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMzo0MjowM1rODvWDdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo0MDo1N1rODz2FFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTcwOTk4OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/CommandCallback.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMzo0MjowM1rOGBt2Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTo1OTo0NFrOGFVuTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1Mjg5MA==", "bodyText": "Is this import needed?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r404452890", "createdAt": "2020-04-06T23:42:03Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/CommandCallback.java", "diffHunk": "@@ -20,7 +20,9 @@\n //  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n //  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n //  THE SOFTWARE.\n-package com.microsoft.identity.common.internal.controllers;\n+package com.microsoft.identity.common.internal.commands;\n+\n+import com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2236ac521fdfee9e49b458d75b42b176ec4c7818"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1MTk4MQ==", "bodyText": "Yes, it is needed ofcourse", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r408251981", "createdAt": "2020-04-14T15:59:44Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/CommandCallback.java", "diffHunk": "@@ -20,7 +20,9 @@\n //  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n //  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n //  THE SOFTWARE.\n-package com.microsoft.identity.common.internal.controllers;\n+package com.microsoft.identity.common.internal.commands;\n+\n+import com.microsoft.identity.common.internal.controllers.TaskCompletedCallbackWithError;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1Mjg5MA=="}, "originalCommit": {"oid": "2236ac521fdfee9e49b458d75b42b176ec4c7818"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTcyNzU2OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/CommandResultCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMzo1MDozNVrOGBuA_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNjowMzowOFrOGFV31A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1NTY3Ng==", "bodyText": "Is this needed?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r404455676", "createdAt": "2020-04-06T23:50:35Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/CommandResultCache.java", "diffHunk": "@@ -24,6 +24,8 @@\n \n import android.util.LruCache;\n \n+import com.microsoft.identity.common.internal.commands.BaseCommand;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2236ac521fdfee9e49b458d75b42b176ec4c7818"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1NDQyMA==", "bodyText": "Yes", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r408254420", "createdAt": "2020-04-14T16:03:08Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/CommandResultCache.java", "diffHunk": "@@ -24,6 +24,8 @@\n \n import android.util.LruCache;\n \n+import com.microsoft.identity.common.internal.commands.BaseCommand;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ1NTY3Ng=="}, "originalCommit": {"oid": "2236ac521fdfee9e49b458d75b42b176ec4c7818"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDYxNDg1OnYy", "diffSide": "RIGHT", "path": "common/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODoyODozNVrOGEwM1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTo1ODo0MFrOGFVrUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzNzIwNg==", "bodyText": "Need to move these versions to version files", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r407637206", "createdAt": "2020-04-13T18:28:35Z", "author": {"login": "shahzaibj"}, "path": "common/build.gradle", "diffHunk": "@@ -84,6 +84,8 @@ dependencies {\n     implementation \"com.google.code.gson:gson:$rootProject.ext.gsonVersion\"\n     implementation \"androidx.browser:browser:$rootProject.ext.browserVersion\"\n     implementation \"androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintLayoutVersion\"\n+    compileOnly 'org.projectlombok:lombok:1.18.12'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8d8895f35a36fd5a9a97a33b1f9b1334dfc6be7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI1MTIxNw==", "bodyText": "Addressed", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r408251217", "createdAt": "2020-04-14T15:58:40Z", "author": {"login": "shahzaibj"}, "path": "common/build.gradle", "diffHunk": "@@ -84,6 +84,8 @@ dependencies {\n     implementation \"com.google.code.gson:gson:$rootProject.ext.gsonVersion\"\n     implementation \"androidx.browser:browser:$rootProject.ext.browserVersion\"\n     implementation \"androidx.constraintlayout:constraintlayout:$rootProject.ext.constraintLayoutVersion\"\n+    compileOnly 'org.projectlombok:lombok:1.18.12'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzNzIwNg=="}, "originalCommit": {"oid": "a8d8895f35a36fd5a9a97a33b1f9b1334dfc6be7"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTM1MzE5OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/authscheme/AbstractAuthenticationScheme.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNjo1MjoyNFrOGGW-4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODo1ODo0MFrOGHZoiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyMTE4NA==", "bodyText": "nit: add @ getter and remove getName()?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409321184", "createdAt": "2020-04-16T06:52:24Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/authscheme/AbstractAuthenticationScheme.java", "diffHunk": "@@ -26,9 +26,12 @@\n \n import com.google.gson.annotations.SerializedName;\n \n+import lombok.EqualsAndHashCode;\n+\n /**\n  * Abstract base class for AuthenticationSchemes.\n  */\n+@EqualsAndHashCode", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQxMzE5Mw==", "bodyText": "We don't need to - as part of this change I am not removing existing getters and setters. This equals was only added as it was needed and wasn't there.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r410413193", "createdAt": "2020-04-17T18:58:40Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/authscheme/AbstractAuthenticationScheme.java", "diffHunk": "@@ -26,9 +26,12 @@\n \n import com.google.gson.annotations.SerializedName;\n \n+import lombok.EqualsAndHashCode;\n+\n /**\n  * Abstract base class for AuthenticationSchemes.\n  */\n+@EqualsAndHashCode", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyMTE4NA=="}, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTM1NTk5OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/Command.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNjo1MzoxNlrOGGXAmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODo1OTozMFrOGHZqHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyMTYyNA==", "bodyText": "nit: add extra line above", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409321624", "createdAt": "2020-04-16T06:53:16Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/Command.java", "diffHunk": "@@ -20,10 +20,15 @@\n //  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n //  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n //  THE SOFTWARE.\n-package com.microsoft.identity.common.internal.controllers;\n+package com.microsoft.identity.common.internal.commands;\n+\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n \n public interface Command<T> {\n     T execute() throws Exception;\n \n     boolean isEligibleForEstsTelemetry();\n+    BaseController getDefaultController();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQxMzU5OA==", "bodyText": "Addressed", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r410413598", "createdAt": "2020-04-17T18:59:30Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/Command.java", "diffHunk": "@@ -20,10 +20,15 @@\n //  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n //  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n //  THE SOFTWARE.\n-package com.microsoft.identity.common.internal.controllers;\n+package com.microsoft.identity.common.internal.commands;\n+\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n \n public interface Command<T> {\n     T execute() throws Exception;\n \n     boolean isEligibleForEstsTelemetry();\n+    BaseController getDefaultController();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyMTYyNA=="}, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTM3MTY5OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/GetDeviceModeCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNjo1ODozNFrOGGXKEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODo1OTozNVrOGHZqUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyNDA0OA==", "bodyText": "nit: one param per line for readability.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409324048", "createdAt": "2020-04-16T06:58:34Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/GetDeviceModeCommand.java", "diffHunk": "@@ -20,33 +20,35 @@\n //  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n //  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n //  THE SOFTWARE.\n-package com.microsoft.identity.common.internal.controllers;\n+package com.microsoft.identity.common.internal.commands;\n \n import androidx.annotation.NonNull;\n \n-import com.microsoft.identity.common.internal.request.OperationParameters;\n+import com.microsoft.identity.common.internal.commands.parameters.CommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+\n+import java.util.List;\n+\n+import lombok.EqualsAndHashCode;\n \n /**\n  * Command class to call controllers to remove the account and return the result to\n  * {@see com.microsoft.identity.common.internal.controllers.CommandDispatcher}.\n  */\n+@EqualsAndHashCode(callSuper = true)\n public class GetDeviceModeCommand extends BaseCommand<Boolean> {\n-    private static final String TAG = GetDeviceModeCommand.class.getSimpleName();\n \n-    public GetDeviceModeCommand(@NonNull final OperationParameters parameters,\n-                                @NonNull final BaseController controller,\n-                                @NonNull final CommandCallback callback) {\n-        super(parameters, controller, callback);\n+    public GetDeviceModeCommand(@NonNull CommandParameters parameters, @NonNull BaseController controller, @NonNull CommandCallback callback, @NonNull String publicApiId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQxMzY1MA==", "bodyText": "Addressed", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r410413650", "createdAt": "2020-04-17T18:59:35Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/GetDeviceModeCommand.java", "diffHunk": "@@ -20,33 +20,35 @@\n //  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n //  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n //  THE SOFTWARE.\n-package com.microsoft.identity.common.internal.controllers;\n+package com.microsoft.identity.common.internal.commands;\n \n import androidx.annotation.NonNull;\n \n-import com.microsoft.identity.common.internal.request.OperationParameters;\n+import com.microsoft.identity.common.internal.commands.parameters.CommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+\n+import java.util.List;\n+\n+import lombok.EqualsAndHashCode;\n \n /**\n  * Command class to call controllers to remove the account and return the result to\n  * {@see com.microsoft.identity.common.internal.controllers.CommandDispatcher}.\n  */\n+@EqualsAndHashCode(callSuper = true)\n public class GetDeviceModeCommand extends BaseCommand<Boolean> {\n-    private static final String TAG = GetDeviceModeCommand.class.getSimpleName();\n \n-    public GetDeviceModeCommand(@NonNull final OperationParameters parameters,\n-                                @NonNull final BaseController controller,\n-                                @NonNull final CommandCallback callback) {\n-        super(parameters, controller, callback);\n+    public GetDeviceModeCommand(@NonNull CommandParameters parameters, @NonNull BaseController controller, @NonNull CommandCallback callback, @NonNull String publicApiId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMyNDA0OA=="}, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTQxNjkyOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/SilentTokenCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzoxMzo1MFrOGGXl2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODo1OTo0M1rOGHZqlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMzMTE2Mw==", "bodyText": "nit: moving file in the middle of the change makes it harder to review IMO. (i.e. git could get drunk like what we're seeing in this file)\nNext time, let's move the files in a separate PR.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409331163", "createdAt": "2020-04-16T07:13:50Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/SilentTokenCommand.java", "diffHunk": "@@ -20,7 +20,7 @@\n //  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n //  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n //  THE SOFTWARE.\n-package com.microsoft.identity.common.internal.controllers;\n+package com.microsoft.identity.common.internal.commands;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQxMzcxOA==", "bodyText": "Sure", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r410413718", "createdAt": "2020-04-17T18:59:43Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/SilentTokenCommand.java", "diffHunk": "@@ -20,7 +20,7 @@\n //  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n //  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n //  THE SOFTWARE.\n-package com.microsoft.identity.common.internal.controllers;\n+package com.microsoft.identity.common.internal.commands;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTMzMTE2Mw=="}, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTUzNDc0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/parameters/InteractiveTokenCommandParameters.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo0Nzo0N1rOGGYu8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0Mzo0NlrOGGroCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM0OTg3NQ==", "bodyText": "nit: what does this mean? can't find it in the document.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409349875", "createdAt": "2020-04-16T07:47:47Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/parameters/InteractiveTokenCommandParameters.java", "diffHunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands.parameters;\n+\n+import android.app.Activity;\n+import android.util.Pair;\n+\n+import androidx.fragment.app.Fragment;\n+\n+import com.google.gson.annotations.Expose;\n+import com.microsoft.identity.common.internal.providers.oauth2.OpenIdConnectPromptParameter;\n+import com.microsoft.identity.common.internal.ui.AuthorizationAgent;\n+import com.microsoft.identity.common.internal.ui.browser.BrowserDescriptor;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.experimental.SuperBuilder;\n+\n+@Getter\n+@EqualsAndHashCode(callSuper = true)\n+@SuperBuilder(toBuilder = true)\n+public class InteractiveTokenCommandParameters extends TokenCommandParameters {\n+\n+    @EqualsAndHashCode.Exclude\n+    private transient Activity activity;\n+\n+    @EqualsAndHashCode.Exclude\n+    private transient Fragment fragment;\n+\n+    private transient List<BrowserDescriptor> browserSafeList;\n+\n+    private transient HashMap<String, String> requestHeaders;\n+\n+    private boolean brokerBrowserSupportEnabled;\n+\n+    private String loginHint;\n+\n+    @Expose()\n+    private OpenIdConnectPromptParameter prompt;\n+\n+    @Expose()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY1OTQwMQ==", "bodyText": "Expose is GSON annotation to indicate whether a field should be serialized/deserialized or not. https://www.javadoc.io/doc/com.google.code.gson/gson/2.6.2/com/google/gson/annotations/Expose.html\nIt doesn't have anything to do with Lombok and this annotation was already present in our code.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409659401", "createdAt": "2020-04-16T15:43:46Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/parameters/InteractiveTokenCommandParameters.java", "diffHunk": "@@ -0,0 +1,85 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands.parameters;\n+\n+import android.app.Activity;\n+import android.util.Pair;\n+\n+import androidx.fragment.app.Fragment;\n+\n+import com.google.gson.annotations.Expose;\n+import com.microsoft.identity.common.internal.providers.oauth2.OpenIdConnectPromptParameter;\n+import com.microsoft.identity.common.internal.ui.AuthorizationAgent;\n+import com.microsoft.identity.common.internal.ui.browser.BrowserDescriptor;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.experimental.SuperBuilder;\n+\n+@Getter\n+@EqualsAndHashCode(callSuper = true)\n+@SuperBuilder(toBuilder = true)\n+public class InteractiveTokenCommandParameters extends TokenCommandParameters {\n+\n+    @EqualsAndHashCode.Exclude\n+    private transient Activity activity;\n+\n+    @EqualsAndHashCode.Exclude\n+    private transient Fragment fragment;\n+\n+    private transient List<BrowserDescriptor> browserSafeList;\n+\n+    private transient HashMap<String, String> requestHeaders;\n+\n+    private boolean brokerBrowserSupportEnabled;\n+\n+    private String loginHint;\n+\n+    @Expose()\n+    private OpenIdConnectPromptParameter prompt;\n+\n+    @Expose()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM0OTg3NQ=="}, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTU0NTkyOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/CommandDispatcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo1MDozMVrOGGY1nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0NjoxMVrOGGruYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1MTU4MQ==", "bodyText": "nit: are we including the throttling work in this PR also? if yes, the title is sort of misleading.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409351581", "createdAt": "2020-04-16T07:50:31Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/CommandDispatcher.java", "diffHunk": "@@ -79,6 +86,17 @@ public static void submitSilent(@NonNull final BaseCommand command) {\n                 \"Beginning execution of silent command.\"\n         );\n \n+        if (sExecutingCommands.contains(command)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MTAyNQ==", "bodyText": "Yes, we are. I've updated the title.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409661025", "createdAt": "2020-04-16T15:46:11Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/CommandDispatcher.java", "diffHunk": "@@ -79,6 +86,17 @@ public static void submitSilent(@NonNull final BaseCommand command) {\n                 \"Beginning execution of silent command.\"\n         );\n \n+        if (sExecutingCommands.contains(command)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1MTU4MQ=="}, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTU2NjIxOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo1NToxOVrOGGZBvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzozNDoxM1rOGIf0Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NDY4NA==", "bodyText": "why hardcoded false?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409354684", "createdAt": "2020-04-16T07:55:19Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -99,9 +106,9 @@ public BrokerRequest brokerRequestFromAcquireTokenParameters(@NonNull final Acqu\n                         parameters.getExtraQueryStringParameters() != null ?\n                                 QueryParamsAdapter._toJson(parameters.getExtraQueryStringParameters())\n                                 : null\n-                ).prompt(parameters.getOpenIdConnectPromptParameter().name())\n+                ).prompt(parameters.getPrompt().name())\n                 .claims(parameters.getClaimsRequestJson())\n-                .forceRefresh(parameters.getForceRefresh())\n+                .forceRefresh(false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MjE1NQ==", "bodyText": "Interactive doesn't have anything like forceRefresh", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409662155", "createdAt": "2020-04-16T15:47:51Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -99,9 +106,9 @@ public BrokerRequest brokerRequestFromAcquireTokenParameters(@NonNull final Acqu\n                         parameters.getExtraQueryStringParameters() != null ?\n                                 QueryParamsAdapter._toJson(parameters.getExtraQueryStringParameters())\n                                 : null\n-                ).prompt(parameters.getOpenIdConnectPromptParameter().name())\n+                ).prompt(parameters.getPrompt().name())\n                 .claims(parameters.getClaimsRequestJson())\n-                .forceRefresh(parameters.getForceRefresh())\n+                .forceRefresh(false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NDY4NA=="}, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2MzAzMQ==", "bodyText": "This would break claimsRequest flow. Before this change , forceRefresh was on OperationParameter here  and we set forceRefresh to true for interactive calls when claimsRequest is present here . This is done because, in broker we would attempt to silently get a token for interactive calls as well if we a matching account using PRT, FRT, and if claimsRequest is present we would need to skip cache and refresh the token.\nSo i think you should move back forceRefresh to base class and add the logic back", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r411563031", "createdAt": "2020-04-20T17:34:13Z", "author": {"login": "kreedula"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -99,9 +106,9 @@ public BrokerRequest brokerRequestFromAcquireTokenParameters(@NonNull final Acqu\n                         parameters.getExtraQueryStringParameters() != null ?\n                                 QueryParamsAdapter._toJson(parameters.getExtraQueryStringParameters())\n                                 : null\n-                ).prompt(parameters.getOpenIdConnectPromptParameter().name())\n+                ).prompt(parameters.getPrompt().name())\n                 .claims(parameters.getClaimsRequestJson())\n-                .forceRefresh(parameters.getForceRefresh())\n+                .forceRefresh(false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NDY4NA=="}, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTU2ODM4OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo1NTo1MFrOGGZDEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo1NTo1MFrOGGZDEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NTAyNw==", "bodyText": "slow clap \ud83d\udc4f", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409355027", "createdAt": "2020-04-16T07:55:50Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -210,42 +200,47 @@ public BrokerAcquireTokenOperationParameters brokerInteractiveParametersFromActi\n \n         if (authority != null) {\n             authority.setMultipleCloudsSupported(brokerRequest.getMultipleCloudsSupported());\n-            parameters.setAuthority(authority);\n         }\n \n-        parameters.setScopes(getScopesAsSet(brokerRequest.getScope()));\n-\n-        parameters.setClientId(brokerRequest.getClientId());\n-\n-        parameters.setRedirectUri(brokerRequest.getRedirect());\n-\n-        parameters.setLoginHint(brokerRequest.getUserName());\n-\n         String correlationIdString = brokerRequest.getCorrelationId();\n \n         if (TextUtils.isEmpty(correlationIdString)) {\n             UUID correlationId = UUID.randomUUID();\n             correlationIdString = correlationId.toString();\n         }\n-        parameters.setCorrelationId(correlationIdString);\n \n-        parameters.setClaimsRequest(brokerRequest.getClaims());\n+        Logger.info(TAG, \"Authorization agent passed in by MSAL: \" + brokerRequest.getAuthorizationAgent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTU3MjI1OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo1Njo1MlrOGGZFiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxODo1OTo1MFrOGHZq2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NTY1Ng==", "bodyText": "nit: can we do nested method calling here?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409355656", "createdAt": "2020-04-16T07:56:52Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -210,42 +200,47 @@ public BrokerAcquireTokenOperationParameters brokerInteractiveParametersFromActi\n \n         if (authority != null) {\n             authority.setMultipleCloudsSupported(brokerRequest.getMultipleCloudsSupported());\n-            parameters.setAuthority(authority);\n         }\n \n-        parameters.setScopes(getScopesAsSet(brokerRequest.getScope()));\n-\n-        parameters.setClientId(brokerRequest.getClientId());\n-\n-        parameters.setRedirectUri(brokerRequest.getRedirect());\n-\n-        parameters.setLoginHint(brokerRequest.getUserName());\n-\n         String correlationIdString = brokerRequest.getCorrelationId();\n \n         if (TextUtils.isEmpty(correlationIdString)) {\n             UUID correlationId = UUID.randomUUID();\n             correlationIdString = correlationId.toString();\n         }\n-        parameters.setCorrelationId(correlationIdString);\n \n-        parameters.setClaimsRequest(brokerRequest.getClaims());\n+        Logger.info(TAG, \"Authorization agent passed in by MSAL: \" + brokerRequest.getAuthorizationAgent());\n \n-        parameters.setOpenIdConnectPromptParameter(\n-                brokerRequest.getPrompt() != null ?\n+        final BrokerInteractiveTokenCommandParameters.BrokerInteractiveTokenCommandParametersBuilder\n+                commandParametersBuilder = BrokerInteractiveTokenCommandParameters.builder()\n+                .authenticationScheme(getAuthenticationScheme(callingActivity, brokerRequest))\n+                .activity(callingActivity)\n+                .androidApplicationContext(callingActivity.getApplicationContext())\n+                .sdkType(SdkType.MSAL)\n+                .callerUid(callingAppUid)\n+                .callerPackageName(brokerRequest.getApplicationName())\n+                .callerAppVersion(brokerRequest.getApplicationVersion())\n+                .extraQueryStringParameters(extraQP)\n+                .authority(authority)\n+                .scopes(getScopesAsSet(brokerRequest.getScope()))\n+                .clientId(brokerRequest.getClientId())\n+                .redirectUri(brokerRequest.getRedirect())\n+                .loginHint(brokerRequest.getUserName())\n+                .correlationId(correlationIdString)\n+                .claimsRequestJson(brokerRequest.getClaims())\n+                .prompt(brokerRequest.getPrompt() != null ?\n                         OpenIdConnectPromptParameter.valueOf(brokerRequest.getPrompt()) :\n-                        OpenIdConnectPromptParameter.NONE\n-        );\n-        Logger.info(TAG, \"Authorization agent passed in by MSAL: \" + brokerRequest.getAuthorizationAgent());\n+                        OpenIdConnectPromptParameter.NONE);\n+\n         if (brokerRequest.getAuthorizationAgent() != null\n                 && brokerRequest.getAuthorizationAgent().equalsIgnoreCase(AuthorizationAgent.BROWSER.name())\n-                && isCallingPackageIntune(parameters.getCallerPackageName())) { // TODO : Remove this whenever we enable System Browser support in Broker for apps.\n+                && isCallingPackageIntune(brokerRequest.getApplicationName())) { // TODO : Remove this whenever we enable System Browser support in Broker for apps.\n             Logger.info(TAG, \"Setting Authorization Agent to Browser for Intune app\");\n-            parameters.setAuthorizationAgent(AuthorizationAgent.BROWSER);\n-            parameters.setBrokerBrowserSupportEnabled(true);\n-            parameters.setBrowserSafeList(getBrowserSafeListForBroker());\n+            commandParametersBuilder.authorizationAgent(AuthorizationAgent.BROWSER);\n+            commandParametersBuilder.brokerBrowserSupportEnabled(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQxMzc4NQ==", "bodyText": "Addressed", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r410413785", "createdAt": "2020-04-17T18:59:50Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -210,42 +200,47 @@ public BrokerAcquireTokenOperationParameters brokerInteractiveParametersFromActi\n \n         if (authority != null) {\n             authority.setMultipleCloudsSupported(brokerRequest.getMultipleCloudsSupported());\n-            parameters.setAuthority(authority);\n         }\n \n-        parameters.setScopes(getScopesAsSet(brokerRequest.getScope()));\n-\n-        parameters.setClientId(brokerRequest.getClientId());\n-\n-        parameters.setRedirectUri(brokerRequest.getRedirect());\n-\n-        parameters.setLoginHint(brokerRequest.getUserName());\n-\n         String correlationIdString = brokerRequest.getCorrelationId();\n \n         if (TextUtils.isEmpty(correlationIdString)) {\n             UUID correlationId = UUID.randomUUID();\n             correlationIdString = correlationId.toString();\n         }\n-        parameters.setCorrelationId(correlationIdString);\n \n-        parameters.setClaimsRequest(brokerRequest.getClaims());\n+        Logger.info(TAG, \"Authorization agent passed in by MSAL: \" + brokerRequest.getAuthorizationAgent());\n \n-        parameters.setOpenIdConnectPromptParameter(\n-                brokerRequest.getPrompt() != null ?\n+        final BrokerInteractiveTokenCommandParameters.BrokerInteractiveTokenCommandParametersBuilder\n+                commandParametersBuilder = BrokerInteractiveTokenCommandParameters.builder()\n+                .authenticationScheme(getAuthenticationScheme(callingActivity, brokerRequest))\n+                .activity(callingActivity)\n+                .androidApplicationContext(callingActivity.getApplicationContext())\n+                .sdkType(SdkType.MSAL)\n+                .callerUid(callingAppUid)\n+                .callerPackageName(brokerRequest.getApplicationName())\n+                .callerAppVersion(brokerRequest.getApplicationVersion())\n+                .extraQueryStringParameters(extraQP)\n+                .authority(authority)\n+                .scopes(getScopesAsSet(brokerRequest.getScope()))\n+                .clientId(brokerRequest.getClientId())\n+                .redirectUri(brokerRequest.getRedirect())\n+                .loginHint(brokerRequest.getUserName())\n+                .correlationId(correlationIdString)\n+                .claimsRequestJson(brokerRequest.getClaims())\n+                .prompt(brokerRequest.getPrompt() != null ?\n                         OpenIdConnectPromptParameter.valueOf(brokerRequest.getPrompt()) :\n-                        OpenIdConnectPromptParameter.NONE\n-        );\n-        Logger.info(TAG, \"Authorization agent passed in by MSAL: \" + brokerRequest.getAuthorizationAgent());\n+                        OpenIdConnectPromptParameter.NONE);\n+\n         if (brokerRequest.getAuthorizationAgent() != null\n                 && brokerRequest.getAuthorizationAgent().equalsIgnoreCase(AuthorizationAgent.BROWSER.name())\n-                && isCallingPackageIntune(parameters.getCallerPackageName())) { // TODO : Remove this whenever we enable System Browser support in Broker for apps.\n+                && isCallingPackageIntune(brokerRequest.getApplicationName())) { // TODO : Remove this whenever we enable System Browser support in Broker for apps.\n             Logger.info(TAG, \"Setting Authorization Agent to Browser for Intune app\");\n-            parameters.setAuthorizationAgent(AuthorizationAgent.BROWSER);\n-            parameters.setBrokerBrowserSupportEnabled(true);\n-            parameters.setBrowserSafeList(getBrowserSafeListForBroker());\n+            commandParametersBuilder.authorizationAgent(AuthorizationAgent.BROWSER);\n+            commandParametersBuilder.brokerBrowserSupportEnabled(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NTY1Ng=="}, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTU3NjYxOnYy", "diffSide": "LEFT", "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNzo1Nzo0OVrOGGZICQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo1MDo1NFrOGGr7qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NjI5Nw==", "bodyText": "why removing this?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409356297", "createdAt": "2020-04-16T07:57:49Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -304,40 +280,35 @@ public BrokerAcquireTokenSilentOperationParameters brokerSilentParametersFromBun\n             );\n         }\n \n-        parameters.setAuthority(authority);\n-\n         String correlationIdString = bundle.getString(\n                 brokerRequest.getCorrelationId()\n         );\n         if (TextUtils.isEmpty(correlationIdString)) {\n             UUID correlationId = UUID.randomUUID();\n             correlationIdString = correlationId.toString();\n         }\n-        parameters.setCorrelationId(correlationIdString);\n-\n-        parameters.setScopes(\n-                getScopesAsSet(brokerRequest.getScope())\n-        );\n-\n-        parameters.setRedirectUri(brokerRequest.getRedirect());\n \n-        parameters.setClientId(brokerRequest.getClientId());\n-\n-        parameters.setForceRefresh(brokerRequest.getForceRefresh());\n-\n-        parameters.setClaimsRequest(brokerRequest.getClaims());\n-\n-        parameters.setLoginHint(brokerRequest.getUserName());\n-\n-        parameters.setHomeAccountId(brokerRequest.getHomeAccountId());\n-\n-        parameters.setLocalAccountId(brokerRequest.getLocalAccountId());\n+        final BrokerSilentTokenCommandParameters commandParameters = BrokerSilentTokenCommandParameters\n+                .builder()\n+                .authenticationScheme(getAuthenticationScheme(context, brokerRequest))\n+                .androidApplicationContext(context)\n+                .accountManagerAccount(account)\n+                .sdkType(SdkType.MSAL)\n+                .callerUid(callingAppUid)\n+                .callerPackageName(brokerRequest.getApplicationName())\n+                .callerAppVersion(brokerRequest.getApplicationVersion())\n+                .authority(authority)\n+                .correlationId(correlationIdString)\n+                .scopes(getScopesAsSet(brokerRequest.getScope()))\n+                .redirectUri(brokerRequest.getRedirect())\n+                .clientId(brokerRequest.getClientId())\n+                .forceRefresh(brokerRequest.getForceRefresh())\n+                .claimsRequestJson(brokerRequest.getClaims())\n+                .loginHint(brokerRequest.getUserName())\n+                .homeAccountId(brokerRequest.getHomeAccountId())\n+                .localAccountId(brokerRequest.getLocalAccountId())\n+                .build();\n \n-        if (!TextUtils.isEmpty(brokerRequest.getExtraQueryStringParameter())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 263}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2NDQyNg==", "bodyText": "Extra Query parameters are not used for silent token commands and have been removed from silent parameters therefore.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409664426", "createdAt": "2020-04-16T15:50:54Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -304,40 +280,35 @@ public BrokerAcquireTokenSilentOperationParameters brokerSilentParametersFromBun\n             );\n         }\n \n-        parameters.setAuthority(authority);\n-\n         String correlationIdString = bundle.getString(\n                 brokerRequest.getCorrelationId()\n         );\n         if (TextUtils.isEmpty(correlationIdString)) {\n             UUID correlationId = UUID.randomUUID();\n             correlationIdString = correlationId.toString();\n         }\n-        parameters.setCorrelationId(correlationIdString);\n-\n-        parameters.setScopes(\n-                getScopesAsSet(brokerRequest.getScope())\n-        );\n-\n-        parameters.setRedirectUri(brokerRequest.getRedirect());\n \n-        parameters.setClientId(brokerRequest.getClientId());\n-\n-        parameters.setForceRefresh(brokerRequest.getForceRefresh());\n-\n-        parameters.setClaimsRequest(brokerRequest.getClaims());\n-\n-        parameters.setLoginHint(brokerRequest.getUserName());\n-\n-        parameters.setHomeAccountId(brokerRequest.getHomeAccountId());\n-\n-        parameters.setLocalAccountId(brokerRequest.getLocalAccountId());\n+        final BrokerSilentTokenCommandParameters commandParameters = BrokerSilentTokenCommandParameters\n+                .builder()\n+                .authenticationScheme(getAuthenticationScheme(context, brokerRequest))\n+                .androidApplicationContext(context)\n+                .accountManagerAccount(account)\n+                .sdkType(SdkType.MSAL)\n+                .callerUid(callingAppUid)\n+                .callerPackageName(brokerRequest.getApplicationName())\n+                .callerAppVersion(brokerRequest.getApplicationVersion())\n+                .authority(authority)\n+                .correlationId(correlationIdString)\n+                .scopes(getScopesAsSet(brokerRequest.getScope()))\n+                .redirectUri(brokerRequest.getRedirect())\n+                .clientId(brokerRequest.getClientId())\n+                .forceRefresh(brokerRequest.getForceRefresh())\n+                .claimsRequestJson(brokerRequest.getClaims())\n+                .loginHint(brokerRequest.getUserName())\n+                .homeAccountId(brokerRequest.getHomeAccountId())\n+                .localAccountId(brokerRequest.getLocalAccountId())\n+                .build();\n \n-        if (!TextUtils.isEmpty(brokerRequest.getExtraQueryStringParameter())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NjI5Nw=="}, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 263}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzQ2Mzg3OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/parameters/RemoveAccountCommandParameters.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0NDozMVrOGGrqAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxOTowNjowMFrOGHZ11g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY1OTkwNg==", "bodyText": "Need immutable getter for this collection too", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r409659906", "createdAt": "2020-04-16T15:44:31Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/parameters/RemoveAccountCommandParameters.java", "diffHunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands.parameters;\n+\n+import com.microsoft.identity.common.internal.dto.IAccountRecord;\n+import com.microsoft.identity.common.internal.ui.browser.BrowserDescriptor;\n+\n+import java.util.List;\n+\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.experimental.SuperBuilder;\n+\n+@Getter\n+@SuperBuilder(toBuilder = true)\n+@EqualsAndHashCode(callSuper = true)\n+public class RemoveAccountCommandParameters extends CommandParameters {\n+\n+    private IAccountRecord account;\n+    private List<BrowserDescriptor> browserSafeList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDQxNjU5OA==", "bodyText": "Addressed", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r410416598", "createdAt": "2020-04-17T19:06:00Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/parameters/RemoveAccountCommandParameters.java", "diffHunk": "@@ -0,0 +1,41 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands.parameters;\n+\n+import com.microsoft.identity.common.internal.dto.IAccountRecord;\n+import com.microsoft.identity.common.internal.ui.browser.BrowserDescriptor;\n+\n+import java.util.List;\n+\n+import lombok.EqualsAndHashCode;\n+import lombok.Getter;\n+import lombok.experimental.SuperBuilder;\n+\n+@Getter\n+@SuperBuilder(toBuilder = true)\n+@EqualsAndHashCode(callSuper = true)\n+public class RemoveAccountCommandParameters extends CommandParameters {\n+\n+    private IAccountRecord account;\n+    private List<BrowserDescriptor> browserSafeList;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY1OTkwNg=="}, "originalCommit": {"oid": "155e289ccdbd92883bf21cedf709c27f530c5f47"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1Njc3NTIwOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/TokenCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzoxMTozMFrOGIe5oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo1MDoxMFrOGIgdag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0ODA2NQ==", "bodyText": "Why this class , if we don't have any additional properties associated with it?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r411548065", "createdAt": "2020-04-20T17:11:30Z", "author": {"login": "kreedula"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/TokenCommand.java", "diffHunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands;\n+\n+import android.content.Intent;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+import com.microsoft.identity.common.internal.result.AcquireTokenResult;\n+\n+import java.util.List;\n+\n+import lombok.EqualsAndHashCode;\n+\n+@EqualsAndHashCode(callSuper = true)\n+public abstract class TokenCommand extends BaseCommand<AcquireTokenResult> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "664d24a10eae1802787251abb567be486837f5d7"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3MzYxMA==", "bodyText": "It has an abstract method, and primarily meant as a base abstract command for any type of Token Command. Other token commands can just extend this.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r411573610", "createdAt": "2020-04-20T17:50:10Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/TokenCommand.java", "diffHunk": "@@ -0,0 +1,55 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands;\n+\n+import android.content.Intent;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.internal.commands.parameters.TokenCommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+import com.microsoft.identity.common.internal.result.AcquireTokenResult;\n+\n+import java.util.List;\n+\n+import lombok.EqualsAndHashCode;\n+\n+@EqualsAndHashCode(callSuper = true)\n+public abstract class TokenCommand extends BaseCommand<AcquireTokenResult> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU0ODA2NQ=="}, "originalCommit": {"oid": "664d24a10eae1802787251abb567be486837f5d7"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjkwMDA0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNzo0MDo1N1rOGIgFIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQyMDoxOTo0MFrOGIl_ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2NzM5Mw==", "bodyText": "This would break claimsRequest flow. Before this change , forceRefresh was on OperationParameter here  and we set forceRefresh to true for interactive calls when claimsRequest is present here . This is done because, in broker we would attempt to silently get a token for interactive calls as well if we a matching account using PRT, FRT, and if claimsRequest is present we would need to skip cache and refresh the token.\nSo i think you should move back forceRefresh to base class and add the logic back", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r411567393", "createdAt": "2020-04-20T17:40:57Z", "author": {"login": "kreedula"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -99,9 +106,9 @@ public BrokerRequest brokerRequestFromAcquireTokenParameters(@NonNull final Acqu\n                         parameters.getExtraQueryStringParameters() != null ?\n                                 QueryParamsAdapter._toJson(parameters.getExtraQueryStringParameters())\n                                 : null\n-                ).prompt(parameters.getOpenIdConnectPromptParameter().name())\n+                ).prompt(parameters.getPrompt().name())\n                 .claims(parameters.getClaimsRequestJson())\n-                .forceRefresh(parameters.getForceRefresh())\n+                .forceRefresh(false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "664d24a10eae1802787251abb567be486837f5d7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2ODk2MA==", "bodyText": "@kreedula forceRefresh was indeed set on base class operation parameters but I believe it was never used in any interactive flow and hence I removed it and put it only on silent. Can you share the code snippet where this value is actually being used during an interactive call?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r411568960", "createdAt": "2020-04-20T17:43:27Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -99,9 +106,9 @@ public BrokerRequest brokerRequestFromAcquireTokenParameters(@NonNull final Acqu\n                         parameters.getExtraQueryStringParameters() != null ?\n                                 QueryParamsAdapter._toJson(parameters.getExtraQueryStringParameters())\n                                 : null\n-                ).prompt(parameters.getOpenIdConnectPromptParameter().name())\n+                ).prompt(parameters.getPrompt().name())\n                 .claims(parameters.getClaimsRequestJson())\n-                .forceRefresh(parameters.getForceRefresh())\n+                .forceRefresh(false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2NzM5Mw=="}, "originalCommit": {"oid": "664d24a10eae1802787251abb567be486837f5d7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3NTIxNw==", "bodyText": "Okay, I see so it seems it was never used on the OperationParameters but we need it on the BrokerRequest object to decide if we need to skip cache or not.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r411575217", "createdAt": "2020-04-20T17:52:40Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -99,9 +106,9 @@ public BrokerRequest brokerRequestFromAcquireTokenParameters(@NonNull final Acqu\n                         parameters.getExtraQueryStringParameters() != null ?\n                                 QueryParamsAdapter._toJson(parameters.getExtraQueryStringParameters())\n                                 : null\n-                ).prompt(parameters.getOpenIdConnectPromptParameter().name())\n+                ).prompt(parameters.getPrompt().name())\n                 .claims(parameters.getClaimsRequestJson())\n-                .forceRefresh(parameters.getForceRefresh())\n+                .forceRefresh(false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2NzM5Mw=="}, "originalCommit": {"oid": "664d24a10eae1802787251abb567be486837f5d7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU3NjQ4Mg==", "bodyText": "@kreedula I don't think I need to put them on base command parameter class in that case. I think I can just do this logic here at the adapter level and set the value of forceRefresh on BrokerRequest based on that.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r411576482", "createdAt": "2020-04-20T17:54:30Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -99,9 +106,9 @@ public BrokerRequest brokerRequestFromAcquireTokenParameters(@NonNull final Acqu\n                         parameters.getExtraQueryStringParameters() != null ?\n                                 QueryParamsAdapter._toJson(parameters.getExtraQueryStringParameters())\n                                 : null\n-                ).prompt(parameters.getOpenIdConnectPromptParameter().name())\n+                ).prompt(parameters.getPrompt().name())\n                 .claims(parameters.getClaimsRequestJson())\n-                .forceRefresh(parameters.getForceRefresh())\n+                .forceRefresh(false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2NzM5Mw=="}, "originalCommit": {"oid": "664d24a10eae1802787251abb567be486837f5d7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5MDI5MA==", "bodyText": "It should work with the current implementation, as we unpack the BrokerRequest twice , once here   and the other one to convert to BrokerAcquireTokenParameters. I would like to make some changes to avoid unpacking BrokerRequest twice especially with compressed payloads, have a work item for it. So it should be on TokenCommandParameters so that when we transform BrokerRequest to BrokerAcquireTokenCommandParameters , we would have the value to set and get", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r411590290", "createdAt": "2020-04-20T18:16:31Z", "author": {"login": "kreedula"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -99,9 +106,9 @@ public BrokerRequest brokerRequestFromAcquireTokenParameters(@NonNull final Acqu\n                         parameters.getExtraQueryStringParameters() != null ?\n                                 QueryParamsAdapter._toJson(parameters.getExtraQueryStringParameters())\n                                 : null\n-                ).prompt(parameters.getOpenIdConnectPromptParameter().name())\n+                ).prompt(parameters.getPrompt().name())\n                 .claims(parameters.getClaimsRequestJson())\n-                .forceRefresh(parameters.getForceRefresh())\n+                .forceRefresh(false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2NzM5Mw=="}, "originalCommit": {"oid": "664d24a10eae1802787251abb567be486837f5d7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYwNTM5MA==", "bodyText": "@kreedula That doesn't make sense to me. All you need is for forceRefresh to be available on BrokerRequest regardless of how many times we unpack it. Why do you need it on TokenCommandParameters? When we skip cache in broker, then we create silent token command parameters and not interactive so you shouldn't need it to be on either interactive parameters or the base class. Would there be a case where we would need forceRefresh to live on interactive parameters? Am i missing something here?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r411605390", "createdAt": "2020-04-20T18:41:11Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -99,9 +106,9 @@ public BrokerRequest brokerRequestFromAcquireTokenParameters(@NonNull final Acqu\n                         parameters.getExtraQueryStringParameters() != null ?\n                                 QueryParamsAdapter._toJson(parameters.getExtraQueryStringParameters())\n                                 : null\n-                ).prompt(parameters.getOpenIdConnectPromptParameter().name())\n+                ).prompt(parameters.getPrompt().name())\n                 .claims(parameters.getClaimsRequestJson())\n-                .forceRefresh(parameters.getForceRefresh())\n+                .forceRefresh(false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2NzM5Mw=="}, "originalCommit": {"oid": "664d24a10eae1802787251abb567be486837f5d7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYyMjU3NQ==", "bodyText": "let's chat offline, so we can resolve this faster", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r411622575", "createdAt": "2020-04-20T19:09:03Z", "author": {"login": "kreedula"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -99,9 +106,9 @@ public BrokerRequest brokerRequestFromAcquireTokenParameters(@NonNull final Acqu\n                         parameters.getExtraQueryStringParameters() != null ?\n                                 QueryParamsAdapter._toJson(parameters.getExtraQueryStringParameters())\n                                 : null\n-                ).prompt(parameters.getOpenIdConnectPromptParameter().name())\n+                ).prompt(parameters.getPrompt().name())\n                 .claims(parameters.getClaimsRequestJson())\n-                .forceRefresh(parameters.getForceRefresh())\n+                .forceRefresh(false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2NzM5Mw=="}, "originalCommit": {"oid": "664d24a10eae1802787251abb567be486837f5d7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYzMzczMQ==", "bodyText": "Resolved offline, consensus is to forceRefresh to BrokerRequest based on claimsRequest  and leave it out of TokenCommandParameters", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r411633731", "createdAt": "2020-04-20T19:28:05Z", "author": {"login": "kreedula"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -99,9 +106,9 @@ public BrokerRequest brokerRequestFromAcquireTokenParameters(@NonNull final Acqu\n                         parameters.getExtraQueryStringParameters() != null ?\n                                 QueryParamsAdapter._toJson(parameters.getExtraQueryStringParameters())\n                                 : null\n-                ).prompt(parameters.getOpenIdConnectPromptParameter().name())\n+                ).prompt(parameters.getPrompt().name())\n                 .claims(parameters.getClaimsRequestJson())\n-                .forceRefresh(parameters.getForceRefresh())\n+                .forceRefresh(false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2NzM5Mw=="}, "originalCommit": {"oid": "664d24a10eae1802787251abb567be486837f5d7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTY2NDI4Ng==", "bodyText": "Per second discussion decided to go with @kreedula suggestion to put force refresh on base token command parameters as we would need to send it to broker request based on the value of Claims Request passed in by the developer and not the merged claims request as that could contain client capabilities.\nAddressed it in common here: d567411\nMSAL here: AzureAD/microsoft-authentication-library-for-android@69984b2\nAdded back tests here: AzureAD/microsoft-authentication-library-for-android@13a7dae", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/880#discussion_r411664286", "createdAt": "2020-04-20T20:19:40Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -99,9 +106,9 @@ public BrokerRequest brokerRequestFromAcquireTokenParameters(@NonNull final Acqu\n                         parameters.getExtraQueryStringParameters() != null ?\n                                 QueryParamsAdapter._toJson(parameters.getExtraQueryStringParameters())\n                                 : null\n-                ).prompt(parameters.getOpenIdConnectPromptParameter().name())\n+                ).prompt(parameters.getPrompt().name())\n                 .claims(parameters.getClaimsRequestJson())\n-                .forceRefresh(parameters.getForceRefresh())\n+                .forceRefresh(false)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU2NzM5Mw=="}, "originalCommit": {"oid": "664d24a10eae1802787251abb567be486837f5d7"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2327, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}