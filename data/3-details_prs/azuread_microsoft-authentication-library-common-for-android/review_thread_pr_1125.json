{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMjQ5MDU0", "number": 1125, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzozNjowNlrOE-w4nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNzozNlrOE-1RKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MjQ4MDk1OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/CacheRecord.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzozNjowNlrOH8GGIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNzozNjowNlrOH8GGIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjc3NjQ4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public CacheRecordBuilder mAccount(final @NonNull AccountRecord mAccount) {\n          \n          \n            \n                    public CacheRecordBuilder mAccount(final @NonNull AccountRecord account) {", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1125#discussion_r532776483", "createdAt": "2020-11-30T17:36:06Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/CacheRecord.java", "diffHunk": "@@ -22,59 +22,55 @@\n // THE SOFTWARE.\n package com.microsoft.identity.common.internal.cache;\n \n+import androidx.annotation.NonNull;\n+\n import com.microsoft.identity.common.internal.dto.AccessTokenRecord;\n import com.microsoft.identity.common.internal.dto.AccountRecord;\n import com.microsoft.identity.common.internal.dto.IdTokenRecord;\n import com.microsoft.identity.common.internal.dto.RefreshTokenRecord;\n \n-public class CacheRecord implements ICacheRecord {\n+import lombok.Builder;\n+import lombok.EqualsAndHashCode;\n+import lombok.Value;\n \n-    private AccountRecord mAccount;\n-    private AccessTokenRecord mAccessToken;\n-    private RefreshTokenRecord mRefreshToken;\n-    private IdTokenRecord mIdToken;\n-    private IdTokenRecord mV1IdToken;\n+@Value\n+@Builder\n+public class CacheRecord implements ICacheRecord {\n \n-    public void setAccount(final AccountRecord account) {\n-        mAccount = account;\n+    private final AccountRecord mAccount;\n+    private final AccessTokenRecord mAccessToken;\n+    private final RefreshTokenRecord mRefreshToken;\n+    private final IdTokenRecord mIdToken;\n+    private final IdTokenRecord mV1IdToken;\n+\n+    public static class CacheRecordBuilder {\n+        public CacheRecordBuilder mAccount(final @NonNull AccountRecord mAccount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c764d61f19005f124c7fe645bafaaa9cc813c5c"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzE5ODU0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/CacheRecord.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNzoyNlrOH8M6Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNzoyNlrOH8M6Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4ODA3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (mAccount == null) {\n          \n          \n            \n                        if (account == null) {", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1125#discussion_r532888074", "createdAt": "2020-11-30T20:37:26Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/CacheRecord.java", "diffHunk": "@@ -22,59 +22,55 @@\n // THE SOFTWARE.\n package com.microsoft.identity.common.internal.cache;\n \n+import androidx.annotation.NonNull;\n+\n import com.microsoft.identity.common.internal.dto.AccessTokenRecord;\n import com.microsoft.identity.common.internal.dto.AccountRecord;\n import com.microsoft.identity.common.internal.dto.IdTokenRecord;\n import com.microsoft.identity.common.internal.dto.RefreshTokenRecord;\n \n-public class CacheRecord implements ICacheRecord {\n+import lombok.Builder;\n+import lombok.EqualsAndHashCode;\n+import lombok.Value;\n \n-    private AccountRecord mAccount;\n-    private AccessTokenRecord mAccessToken;\n-    private RefreshTokenRecord mRefreshToken;\n-    private IdTokenRecord mIdToken;\n-    private IdTokenRecord mV1IdToken;\n+@Value\n+@Builder\n+public class CacheRecord implements ICacheRecord {\n \n-    public void setAccount(final AccountRecord account) {\n-        mAccount = account;\n+    private final AccountRecord mAccount;\n+    private final AccessTokenRecord mAccessToken;\n+    private final RefreshTokenRecord mRefreshToken;\n+    private final IdTokenRecord mIdToken;\n+    private final IdTokenRecord mV1IdToken;\n+\n+    public static class CacheRecordBuilder {\n+        public CacheRecordBuilder mAccount(final @NonNull AccountRecord account) {\n+            if (mAccount == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d10c9ff9f98ea0301ac200799c79d4cb14b7284"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MzE5OTE1OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/CacheRecord.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNzozNlrOH8M6ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMDozNzozNlrOH8M6ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg4ODE2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        this.mAccount = mAccount;\n          \n          \n            \n                        this.mAccount = account;", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1125#discussion_r532888164", "createdAt": "2020-11-30T20:37:36Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/CacheRecord.java", "diffHunk": "@@ -22,59 +22,55 @@\n // THE SOFTWARE.\n package com.microsoft.identity.common.internal.cache;\n \n+import androidx.annotation.NonNull;\n+\n import com.microsoft.identity.common.internal.dto.AccessTokenRecord;\n import com.microsoft.identity.common.internal.dto.AccountRecord;\n import com.microsoft.identity.common.internal.dto.IdTokenRecord;\n import com.microsoft.identity.common.internal.dto.RefreshTokenRecord;\n \n-public class CacheRecord implements ICacheRecord {\n+import lombok.Builder;\n+import lombok.EqualsAndHashCode;\n+import lombok.Value;\n \n-    private AccountRecord mAccount;\n-    private AccessTokenRecord mAccessToken;\n-    private RefreshTokenRecord mRefreshToken;\n-    private IdTokenRecord mIdToken;\n-    private IdTokenRecord mV1IdToken;\n+@Value\n+@Builder\n+public class CacheRecord implements ICacheRecord {\n \n-    public void setAccount(final AccountRecord account) {\n-        mAccount = account;\n+    private final AccountRecord mAccount;\n+    private final AccessTokenRecord mAccessToken;\n+    private final RefreshTokenRecord mRefreshToken;\n+    private final IdTokenRecord mIdToken;\n+    private final IdTokenRecord mV1IdToken;\n+\n+    public static class CacheRecordBuilder {\n+        public CacheRecordBuilder mAccount(final @NonNull AccountRecord account) {\n+            if (mAccount == null) {\n+                throw new NullPointerException(\"The account record for a CacheRecord may not be null\");\n+            }\n+            this.mAccount = mAccount;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d10c9ff9f98ea0301ac200799c79d4cb14b7284"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2079, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}