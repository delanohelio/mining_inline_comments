{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxODA0Njcz", "number": 868, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwMjozODo0N1rODqDeoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjozMTo0MVrODq_s3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NDIzNzc2OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/request/BrokerAcquireTokenSilentOperationParameters.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwMjozODo0N1rOF5nGpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwMjozODo0N1rOF5nGpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk1MzgyOA==", "bodyText": "TODO for interactive & silent cases", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r395953828", "createdAt": "2020-03-21T02:38:47Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/BrokerAcquireTokenSilentOperationParameters.java", "diffHunk": "@@ -181,6 +181,7 @@ public BrokerAcquireTokenSilentOperationParameters(@NonNull final BrokerAcquireT\n                         ? acquireTokenOperationParameters.getAuthenticationScheme()\n                         : new BearerAuthenticationSchemeInternal() // If null, assume Bearer for back-compat\n         );\n+        // TODO set the broker's context on the auth scheme...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93d78ab3019f4127773d6baca99938bef01dc8de"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTAyMjQyOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/DevicePopManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODo0Nzo0NVrOF6TZ9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTowMzozMFrOF6T93w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3OTY3MQ==", "bodyText": "Update the javadoc here to specify if this is millis or secs", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r396679671", "createdAt": "2020-03-23T18:47:45Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/DevicePopManager.java", "diffHunk": "@@ -443,6 +443,7 @@ public void run() {\n \n     @Override\n     public String mintSignedAccessToken(@NonNull final String httpMethod,\n+                                        final long timestamp,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79344415db8b7e2af86bac0e67433352c8fa3bfc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4ODg2Mw==", "bodyText": "Added in 33fd57e", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r396688863", "createdAt": "2020-03-23T19:03:30Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/DevicePopManager.java", "diffHunk": "@@ -443,6 +443,7 @@ public void run() {\n \n     @Override\n     public String mintSignedAccessToken(@NonNull final String httpMethod,\n+                                        final long timestamp,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3OTY3MQ=="}, "originalCommit": {"oid": "79344415db8b7e2af86bac0e67433352c8fa3bfc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTA3OTEzOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/authscheme/PopAuthenticationSchemeInternal.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTowMzo1N1rOF6T-4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDo0MToyOVrOF6XTRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4OTEyMg==", "bodyText": "Use a constant", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r396689122", "createdAt": "2020-03-23T19:03:57Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/authscheme/PopAuthenticationSchemeInternal.java", "diffHunk": "@@ -71,27 +77,38 @@\n         super(SCHEME_POP);\n     }\n \n-    PopAuthenticationSchemeInternal(@NonNull final String httpMethod,\n+    PopAuthenticationSchemeInternal(@NonNull Context context,\n+                                    @NonNull final String httpMethod,\n                                     @NonNull final URL url,\n                                     @Nullable final String nonce) {\n         super(SCHEME_POP);\n+        mContext = context;\n         mHttpMethod = httpMethod;\n         mUrl = url;\n         mNonce = nonce;\n     }\n \n     @Override\n     public String getAccessTokenForScheme(@NonNull final String accessToken) throws ClientException {\n+        // Use the provided context to get the skew\n+        final IClockSkewManager clockSkewManager = new ClockSkewManager(mContext);\n+        final long timestampMillis = clockSkewManager.getAdjustedReferenceTime().getTime();\n+\n         return Device\n                 .getDevicePoPManagerInstance()\n                 .mintSignedAccessToken(\n                         getHttpMethod(),\n+                        timestampMillis / 1000L,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79344415db8b7e2af86bac0e67433352c8fa3bfc"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc0MzQ5NA==", "bodyText": "Resolved in c37caba", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r396743494", "createdAt": "2020-03-23T20:41:29Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/authscheme/PopAuthenticationSchemeInternal.java", "diffHunk": "@@ -71,27 +77,38 @@\n         super(SCHEME_POP);\n     }\n \n-    PopAuthenticationSchemeInternal(@NonNull final String httpMethod,\n+    PopAuthenticationSchemeInternal(@NonNull Context context,\n+                                    @NonNull final String httpMethod,\n                                     @NonNull final URL url,\n                                     @Nullable final String nonce) {\n         super(SCHEME_POP);\n+        mContext = context;\n         mHttpMethod = httpMethod;\n         mUrl = url;\n         mNonce = nonce;\n     }\n \n     @Override\n     public String getAccessTokenForScheme(@NonNull final String accessToken) throws ClientException {\n+        // Use the provided context to get the skew\n+        final IClockSkewManager clockSkewManager = new ClockSkewManager(mContext);\n+        final long timestampMillis = clockSkewManager.getAdjustedReferenceTime().getTime();\n+\n         return Device\n                 .getDevicePoPManagerInstance()\n                 .mintSignedAccessToken(\n                         getHttpMethod(),\n+                        timestampMillis / 1000L,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4OTEyMg=="}, "originalCommit": {"oid": "79344415db8b7e2af86bac0e67433352c8fa3bfc"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTA3OTU4OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/authscheme/PopAuthenticationSchemeInternal.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOTowNDowNFrOF6T_Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMDo0MzoxOVrOF6XWzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4OTE5NA==", "bodyText": "nit: final", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r396689194", "createdAt": "2020-03-23T19:04:04Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/authscheme/PopAuthenticationSchemeInternal.java", "diffHunk": "@@ -71,27 +77,38 @@\n         super(SCHEME_POP);\n     }\n \n-    PopAuthenticationSchemeInternal(@NonNull final String httpMethod,\n+    PopAuthenticationSchemeInternal(@NonNull Context context,\n+                                    @NonNull final String httpMethod,\n                                     @NonNull final URL url,\n                                     @Nullable final String nonce) {\n         super(SCHEME_POP);\n+        mContext = context;\n         mHttpMethod = httpMethod;\n         mUrl = url;\n         mNonce = nonce;\n     }\n \n     @Override\n     public String getAccessTokenForScheme(@NonNull final String accessToken) throws ClientException {\n+        // Use the provided context to get the skew\n+        final IClockSkewManager clockSkewManager = new ClockSkewManager(mContext);\n+        final long timestampMillis = clockSkewManager.getAdjustedReferenceTime().getTime();\n+\n         return Device\n                 .getDevicePoPManagerInstance()\n                 .mintSignedAccessToken(\n                         getHttpMethod(),\n+                        timestampMillis / 1000L,\n                         getUrl(),\n                         accessToken,\n                         getNonce()\n                 );\n     }\n \n+    public void setContext(Context context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79344415db8b7e2af86bac0e67433352c8fa3bfc"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc0NDM5Ng==", "bodyText": "Resolved in 5e9f835", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r396744396", "createdAt": "2020-03-23T20:43:19Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/authscheme/PopAuthenticationSchemeInternal.java", "diffHunk": "@@ -71,27 +77,38 @@\n         super(SCHEME_POP);\n     }\n \n-    PopAuthenticationSchemeInternal(@NonNull final String httpMethod,\n+    PopAuthenticationSchemeInternal(@NonNull Context context,\n+                                    @NonNull final String httpMethod,\n                                     @NonNull final URL url,\n                                     @Nullable final String nonce) {\n         super(SCHEME_POP);\n+        mContext = context;\n         mHttpMethod = httpMethod;\n         mUrl = url;\n         mNonce = nonce;\n     }\n \n     @Override\n     public String getAccessTokenForScheme(@NonNull final String accessToken) throws ClientException {\n+        // Use the provided context to get the skew\n+        final IClockSkewManager clockSkewManager = new ClockSkewManager(mContext);\n+        final long timestampMillis = clockSkewManager.getAdjustedReferenceTime().getTime();\n+\n         return Device\n                 .getDevicePoPManagerInstance()\n                 .mintSignedAccessToken(\n                         getHttpMethod(),\n+                        timestampMillis / 1000L,\n                         getUrl(),\n                         accessToken,\n                         getNonce()\n                 );\n     }\n \n+    public void setContext(Context context) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY4OTE5NA=="}, "originalCommit": {"oid": "79344415db8b7e2af86bac0e67433352c8fa3bfc"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDUwODk3OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTo1OTo1OFrOF6h7tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMzowMDoyNFrOF7GP-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxNzY4Nw==", "bodyText": "Add a comment explaining what's going on here.\nIt would be preferable to have some kind of SkewProvider object here that removes the tight-coupling between the pop auth scheme and the data source", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r396917687", "createdAt": "2020-03-24T05:59:58Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -143,13 +143,19 @@ public BrokerRequest brokerRequestFromSilentOperationParameters(@NonNull final A\n     }\n \n     @NonNull\n-    private static AbstractAuthenticationScheme getAuthenticationScheme(@NonNull final BrokerRequest request) {\n+    private static AbstractAuthenticationScheme getAuthenticationScheme(\n+            @NonNull final Context context,\n+            @NonNull final BrokerRequest request) {\n         final AbstractAuthenticationScheme requestScheme = request.getAuthenticationScheme();\n \n         if (null == requestScheme) {\n             // Default assumes the scheme is Bearer\n             return new BearerAuthenticationSchemeInternal();\n         } else {\n+            if (requestScheme instanceof PopAuthenticationSchemeInternal) {\n+                ((PopAuthenticationSchemeInternal) requestScheme).setContext(context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1218c9f868bfb016a816065b3a3f880d9341fee5"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUxMjY5Ng==", "bodyText": "Tidied up a bit in: dff1332", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397512696", "createdAt": "2020-03-24T23:00:24Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -143,13 +143,19 @@ public BrokerRequest brokerRequestFromSilentOperationParameters(@NonNull final A\n     }\n \n     @NonNull\n-    private static AbstractAuthenticationScheme getAuthenticationScheme(@NonNull final BrokerRequest request) {\n+    private static AbstractAuthenticationScheme getAuthenticationScheme(\n+            @NonNull final Context context,\n+            @NonNull final BrokerRequest request) {\n         final AbstractAuthenticationScheme requestScheme = request.getAuthenticationScheme();\n \n         if (null == requestScheme) {\n             // Default assumes the scheme is Bearer\n             return new BearerAuthenticationSchemeInternal();\n         } else {\n+            if (requestScheme instanceof PopAuthenticationSchemeInternal) {\n+                ((PopAuthenticationSchemeInternal) requestScheme).setContext(context);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxNzY4Nw=="}, "originalCommit": {"oid": "1218c9f868bfb016a816065b3a3f880d9341fee5"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDUwOTUzOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/request/BrokerAcquireTokenSilentOperationParameters.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjowMDoxOFrOF6h8FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNzo0MzoyN1rOF67-oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxNzc4MA==", "bodyText": "Junk comment, remove", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r396917780", "createdAt": "2020-03-24T06:00:18Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/BrokerAcquireTokenSilentOperationParameters.java", "diffHunk": "@@ -181,6 +181,7 @@ public BrokerAcquireTokenSilentOperationParameters(@NonNull final BrokerAcquireT\n                         ? acquireTokenOperationParameters.getAuthenticationScheme()\n                         : new BearerAuthenticationSchemeInternal() // If null, assume Bearer for back-compat\n         );\n+        // TODO set the broker's context on the auth scheme...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1218c9f868bfb016a816065b3a3f880d9341fee5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM0NDQxNg==", "bodyText": "Removed in 99a2697", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397344416", "createdAt": "2020-03-24T17:43:27Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/BrokerAcquireTokenSilentOperationParameters.java", "diffHunk": "@@ -181,6 +181,7 @@ public BrokerAcquireTokenSilentOperationParameters(@NonNull final BrokerAcquireT\n                         ? acquireTokenOperationParameters.getAuthenticationScheme()\n                         : new BearerAuthenticationSchemeInternal() // If null, assume Bearer for back-compat\n         );\n+        // TODO set the broker's context on the auth scheme...", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxNzc4MA=="}, "originalCommit": {"oid": "1218c9f868bfb016a816065b3a3f880d9341fee5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDUxMDgzOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/providers/oauth2/OAuth2Strategy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjowMDo1N1rOF6h86A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0Njo0OVrOF7F6_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxNzk5Mg==", "bodyText": "Extract to a method", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r396917992", "createdAt": "2020-03-24T06:00:57Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/providers/oauth2/OAuth2Strategy.java", "diffHunk": "@@ -162,12 +172,18 @@ protected HttpResponse performTokenRequest(final GenericTokenRequest request) th\n         headers.putAll(Device.getPlatformIdParameters());\n         headers.putAll(EstsTelemetry.getInstance().getTelemetryHeaders());\n \n-        return HttpRequest.sendPost(\n+        final HttpResponse response = HttpRequest.sendPost(\n                 new URL(mTokenEndpoint),\n                 headers,\n                 requestBody.getBytes(ObjectMapper.ENCODING_SCHEME),\n                 TOKEN_REQUEST_CONTENT_TYPE\n         );\n+\n+        if (null != mClockSkewManager && null != response.getDate()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1218c9f868bfb016a816065b3a3f880d9341fee5"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwNzMyNw==", "bodyText": "Cleaned up in 78c0b0b", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397507327", "createdAt": "2020-03-24T22:46:49Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/providers/oauth2/OAuth2Strategy.java", "diffHunk": "@@ -162,12 +172,18 @@ protected HttpResponse performTokenRequest(final GenericTokenRequest request) th\n         headers.putAll(Device.getPlatformIdParameters());\n         headers.putAll(EstsTelemetry.getInstance().getTelemetryHeaders());\n \n-        return HttpRequest.sendPost(\n+        final HttpResponse response = HttpRequest.sendPost(\n                 new URL(mTokenEndpoint),\n                 headers,\n                 requestBody.getBytes(ObjectMapper.ENCODING_SCHEME),\n                 TOKEN_REQUEST_CONTENT_TYPE\n         );\n+\n+        if (null != mClockSkewManager && null != response.getDate()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxNzk5Mg=="}, "originalCommit": {"oid": "1218c9f868bfb016a816065b3a3f880d9341fee5"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDUxMTM1OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/providers/oauth2/OAuth2Strategy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNjowMToxNFrOF6h9Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjo0OTo0NlrOF7F_kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxODA3MQ==", "bodyText": "Log info", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r396918071", "createdAt": "2020-03-24T06:01:14Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/providers/oauth2/OAuth2Strategy.java", "diffHunk": "@@ -88,6 +91,13 @@ public OAuth2Strategy(GenericOAuth2Configuration config,\n                           GenericOAuth2StrategyParameters strategyParameters) {\n         mConfig = config;\n         mStrategyParameters = strategyParameters;\n+\n+        if (null != mStrategyParameters.getContext()) {\n+            mClockSkewManager = new ClockSkewManager(mStrategyParameters.getContext());\n+        } else {\n+            // No valid context to persist clock skew with!", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1218c9f868bfb016a816065b3a3f880d9341fee5"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwODQ5Ng==", "bodyText": "9a5fb46", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397508496", "createdAt": "2020-03-24T22:49:46Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/providers/oauth2/OAuth2Strategy.java", "diffHunk": "@@ -88,6 +91,13 @@ public OAuth2Strategy(GenericOAuth2Configuration config,\n                           GenericOAuth2StrategyParameters strategyParameters) {\n         mConfig = config;\n         mStrategyParameters = strategyParameters;\n+\n+        if (null != mStrategyParameters.getContext()) {\n+            mClockSkewManager = new ClockSkewManager(mStrategyParameters.getContext());\n+        } else {\n+            // No valid context to persist clock skew with!", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkxODA3MQ=="}, "originalCommit": {"oid": "1218c9f868bfb016a816065b3a3f880d9341fee5"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MzI1NDEwOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/util/IClockSkewManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoxNjowNlrOF69QBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjoxNjo0NlrOF7FLdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2NTI1Mg==", "bodyText": "Curious: why do we need a separate interface? Do you foresee having another ClockSkewManager?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397365252", "createdAt": "2020-03-24T18:16:06Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/util/IClockSkewManager.java", "diffHunk": "@@ -0,0 +1,81 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.util;\n+\n+import java.util.Date;\n+\n+/**\n+ * Provides functionality related to calculating and storing server clock skews for client\n+ * synchronization.\n+ */\n+public interface IClockSkewManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99a269796a8cdf8cbe51e7200a9d17ebf71905a3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5NTE1OA==", "bodyText": "In general it's good to provide an interface for any object that hits network or a data store. In this case, we're hitting a data store (sharedpreferences) so I've provided an interface", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397495158", "createdAt": "2020-03-24T22:16:46Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/util/IClockSkewManager.java", "diffHunk": "@@ -0,0 +1,81 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.util;\n+\n+import java.util.Date;\n+\n+/**\n+ * Provides functionality related to calculating and storing server clock skews for client\n+ * synchronization.\n+ */\n+public interface IClockSkewManager {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2NTI1Mg=="}, "originalCommit": {"oid": "99a269796a8cdf8cbe51e7200a9d17ebf71905a3"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDA4OTAyOnYy", "diffSide": "RIGHT", "path": "common/src/androidTest/java/com/microsoft/identity/common/ClockSkewManagerTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjoyNTozOFrOF7FaNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjozNzoyMlrOF7FsmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5ODkzMw==", "bodyText": "nit: Rename to context", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397498933", "createdAt": "2020-03-24T22:25:38Z", "author": {"login": "shahzaibj"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/ClockSkewManagerTest.java", "diffHunk": "@@ -0,0 +1,132 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common;\n+\n+import android.content.Context;\n+\n+import androidx.test.InstrumentationRegistry;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import com.microsoft.identity.common.internal.util.ClockSkewManager;\n+import com.microsoft.identity.common.internal.util.IClockSkewManager;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.Date;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class ClockSkewManagerTest {\n+\n+    private Context sContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99a269796a8cdf8cbe51e7200a9d17ebf71905a3"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5OTAwMg==", "bodyText": "as it's not static", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397499002", "createdAt": "2020-03-24T22:25:47Z", "author": {"login": "shahzaibj"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/ClockSkewManagerTest.java", "diffHunk": "@@ -0,0 +1,132 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common;\n+\n+import android.content.Context;\n+\n+import androidx.test.InstrumentationRegistry;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import com.microsoft.identity.common.internal.util.ClockSkewManager;\n+import com.microsoft.identity.common.internal.util.IClockSkewManager;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.Date;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class ClockSkewManagerTest {\n+\n+    private Context sContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5ODkzMw=="}, "originalCommit": {"oid": "99a269796a8cdf8cbe51e7200a9d17ebf71905a3"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwMzAxNw==", "bodyText": "Sure", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397503017", "createdAt": "2020-03-24T22:35:45Z", "author": {"login": "iambmelt"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/ClockSkewManagerTest.java", "diffHunk": "@@ -0,0 +1,132 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common;\n+\n+import android.content.Context;\n+\n+import androidx.test.InstrumentationRegistry;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import com.microsoft.identity.common.internal.util.ClockSkewManager;\n+import com.microsoft.identity.common.internal.util.IClockSkewManager;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.Date;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class ClockSkewManagerTest {\n+\n+    private Context sContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5ODkzMw=="}, "originalCommit": {"oid": "99a269796a8cdf8cbe51e7200a9d17ebf71905a3"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwMzY0MQ==", "bodyText": "7ceaf62", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397503641", "createdAt": "2020-03-24T22:37:22Z", "author": {"login": "iambmelt"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/ClockSkewManagerTest.java", "diffHunk": "@@ -0,0 +1,132 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common;\n+\n+import android.content.Context;\n+\n+import androidx.test.InstrumentationRegistry;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import com.microsoft.identity.common.internal.util.ClockSkewManager;\n+import com.microsoft.identity.common.internal.util.IClockSkewManager;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.Date;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class ClockSkewManagerTest {\n+\n+    private Context sContext;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5ODkzMw=="}, "originalCommit": {"oid": "99a269796a8cdf8cbe51e7200a9d17ebf71905a3"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDA5MzA0OnYy", "diffSide": "RIGHT", "path": "common/src/androidTest/java/com/microsoft/identity/common/ClockSkewManagerTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjoyNzoxMVrOF7FcyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjozNzoxN1rOF7FscQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5OTU5Mw==", "bodyText": "Does this need to be static?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397499593", "createdAt": "2020-03-24T22:27:11Z", "author": {"login": "shahzaibj"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/ClockSkewManagerTest.java", "diffHunk": "@@ -0,0 +1,132 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common;\n+\n+import android.content.Context;\n+\n+import androidx.test.InstrumentationRegistry;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import com.microsoft.identity.common.internal.util.ClockSkewManager;\n+import com.microsoft.identity.common.internal.util.IClockSkewManager;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.Date;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class ClockSkewManagerTest {\n+\n+    private Context sContext;\n+    private static IClockSkewManager sClockSkewMgr;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99a269796a8cdf8cbe51e7200a9d17ebf71905a3"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwMzA5OA==", "bodyText": "Nope will update", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397503098", "createdAt": "2020-03-24T22:36:00Z", "author": {"login": "iambmelt"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/ClockSkewManagerTest.java", "diffHunk": "@@ -0,0 +1,132 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common;\n+\n+import android.content.Context;\n+\n+import androidx.test.InstrumentationRegistry;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import com.microsoft.identity.common.internal.util.ClockSkewManager;\n+import com.microsoft.identity.common.internal.util.IClockSkewManager;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.Date;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class ClockSkewManagerTest {\n+\n+    private Context sContext;\n+    private static IClockSkewManager sClockSkewMgr;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5OTU5Mw=="}, "originalCommit": {"oid": "99a269796a8cdf8cbe51e7200a9d17ebf71905a3"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwMzYwMQ==", "bodyText": "7ceaf62", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397503601", "createdAt": "2020-03-24T22:37:17Z", "author": {"login": "iambmelt"}, "path": "common/src/androidTest/java/com/microsoft/identity/common/ClockSkewManagerTest.java", "diffHunk": "@@ -0,0 +1,132 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common;\n+\n+import android.content.Context;\n+\n+import androidx.test.InstrumentationRegistry;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import com.microsoft.identity.common.internal.util.ClockSkewManager;\n+import com.microsoft.identity.common.internal.util.IClockSkewManager;\n+\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import java.util.Date;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class ClockSkewManagerTest {\n+\n+    private Context sContext;\n+    private static IClockSkewManager sClockSkewMgr;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQ5OTU5Mw=="}, "originalCommit": {"oid": "99a269796a8cdf8cbe51e7200a9d17ebf71905a3"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDEwNDYxOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/SharedPreferencesFileManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjozMTo0MVrOF7Fj3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQyMjozNDoxN1rOF7Fn8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwMTQwNg==", "bodyText": "Why still using String internally?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397501406", "createdAt": "2020-03-24T22:31:41Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/SharedPreferencesFileManager.java", "diffHunk": "@@ -158,6 +158,22 @@ public final String getString(final String key) {\n         return restoredValue;\n     }\n \n+    @Override\n+    public void putLong(final String key, final long value) {\n+        putString(key, String.valueOf(value));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "99a269796a8cdf8cbe51e7200a9d17ebf71905a3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwMjQ0OA==", "bodyText": "so it can be optionally encrypted", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/868#discussion_r397502448", "createdAt": "2020-03-24T22:34:17Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/SharedPreferencesFileManager.java", "diffHunk": "@@ -158,6 +158,22 @@ public final String getString(final String key) {\n         return restoredValue;\n     }\n \n+    @Override\n+    public void putLong(final String key, final long value) {\n+        putString(key, String.valueOf(value));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzUwMTQwNg=="}, "originalCommit": {"oid": "99a269796a8cdf8cbe51e7200a9d17ebf71905a3"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2321, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}