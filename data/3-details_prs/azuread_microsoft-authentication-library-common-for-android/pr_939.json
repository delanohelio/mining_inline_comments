{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MDc2MDgz", "number": 939, "title": "Add UI Test Utilities for B2C", "bodyText": "In this PR, I've added some utility classes for handling user interaction in a B2C UI Test. Everything added is primarily focused on resolving interaction with an ID LAB B2C SISO Policy. Later on we may add / modify to handle other policies.\nThe following things are added:\n\nA login component interaction handler for Local B2C Accounts\nA login component interaction handler for Google Accounts\nA login component interaction handler for Facebook Accounts\nPrompt Handler for IDLAB B2C SISO Policy\nA class modeling a B2C Provider that is being used in the test\n\nThese utilities are currently used in MSAL B2C tests here: AzureAD/microsoft-authentication-library-for-android#1074", "createdAt": "2020-06-22T17:14:58Z", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939", "merged": true, "mergeCommit": {"oid": "af413a38784765f3efa5c1e0751d2f0d05f8c4b2"}, "closed": true, "closedAt": "2020-06-26T20:35:35Z", "author": {"login": "shahzaibj"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcs76u3AH2gAyNDM4MDc2MDgzOmNjZDM3NjVmOGQ3MGEyZWQyNzUwMWMxYTA3MTk1NGU4ZDAyNWQwZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvI5mugH2gAyNDM4MDc2MDgzOmM1NTdmZTBiNGNkMTA1ZmZmODJlOWUxNWM2MDc1MmIyZGNlOGJiZGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ccd3765f8d70a2ed27501c1a071954e8d025d0ec", "author": {"user": {"login": "shahzaibj", "name": "Shahzaib"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/ccd3765f8d70a2ed27501c1a071954e8d025d0ec", "committedDate": "2020-06-19T23:47:18Z", "message": "Add prompt handlers for B2C"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88", "author": {"user": {"login": "shahzaibj", "name": "Shahzaib"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/4a2d860a79120effff08e0fc58cef3dccb958c88", "committedDate": "2020-06-22T17:12:34Z", "message": "Add javadoc to new B2C test utility classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MTM1MjQx", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#pullrequestreview-435135241", "createdAt": "2020-06-22T17:31:28Z", "commit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzozMToyOFrOGnKbBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzo0ODowN1rOGnK9dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxODQwNA==", "bodyText": "Is there a reason that these are not anonymous implementations created via static methods? i.e. B2CProvider.local(), etc.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#discussion_r443718404", "createdAt": "2020-06-22T17:31:28Z", "author": {"login": "AdamBJohnsonx"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/b2c/B2CProvider.java", "diffHunk": "@@ -0,0 +1,96 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.interaction.b2c;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+\n+import lombok.Getter;\n+\n+/**\n+ * A class modeling a B2C Provider that is being used during a B2C UI Test\n+ */\n+@Getter\n+public abstract class B2CProvider {\n+\n+    @NonNull\n+    private String providerName;\n+\n+    @Nullable // should be null for LOCAL B2C provider\n+    private String idpSelectionBtnResourceId;\n+\n+    @Nullable // should be null for LOCAL B2C provider\n+    private String domainHint; // this can be used as query param to /authorize endpoint\n+\n+    public B2CProvider(@NonNull final String providerName,\n+                       @Nullable final String idpSelectionBtnResourceId,\n+                       @Nullable final String domainHint) {\n+        this.providerName = providerName;\n+        this.idpSelectionBtnResourceId = idpSelectionBtnResourceId;\n+        this.domainHint = domainHint;\n+    }\n+\n+    /**\n+     * Indicates if the B2C Provider is a non-local IdP\n+     *\n+     * @return a boolean indicating if B2C Provider is an external IdP\n+     */\n+    protected boolean isExternalIdp() {\n+        return !(this instanceof Local);\n+    }\n+\n+    public static class Local extends B2CProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyMzE3MQ==", "bodyText": "Why not just override the method for the LOCAL implementation and have it return true otherwise?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#discussion_r443723171", "createdAt": "2020-06-22T17:40:37Z", "author": {"login": "AdamBJohnsonx"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/b2c/B2CProvider.java", "diffHunk": "@@ -0,0 +1,96 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.interaction.b2c;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+\n+import lombok.Getter;\n+\n+/**\n+ * A class modeling a B2C Provider that is being used during a B2C UI Test\n+ */\n+@Getter\n+public abstract class B2CProvider {\n+\n+    @NonNull\n+    private String providerName;\n+\n+    @Nullable // should be null for LOCAL B2C provider\n+    private String idpSelectionBtnResourceId;\n+\n+    @Nullable // should be null for LOCAL B2C provider\n+    private String domainHint; // this can be used as query param to /authorize endpoint\n+\n+    public B2CProvider(@NonNull final String providerName,\n+                       @Nullable final String idpSelectionBtnResourceId,\n+                       @Nullable final String domainHint) {\n+        this.providerName = providerName;\n+        this.idpSelectionBtnResourceId = idpSelectionBtnResourceId;\n+        this.domainHint = domainHint;\n+    }\n+\n+    /**\n+     * Indicates if the B2C Provider is a non-local IdP\n+     *\n+     * @return a boolean indicating if B2C Provider is an external IdP\n+     */\n+    protected boolean isExternalIdp() {\n+        return !(this instanceof Local);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyNzIyMQ==", "bodyText": "|| ?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#discussion_r443727221", "createdAt": "2020-06-22T17:48:07Z", "author": {"login": "AdamBJohnsonx"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/b2c/IdLabB2cSisoPolicyPromptHandler.java", "diffHunk": "@@ -0,0 +1,79 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.interaction.b2c;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.ui.automation.interaction.AadLoginComponentHandler;\n+import com.microsoft.identity.client.ui.automation.interaction.AbstractPromptHandler;\n+import com.microsoft.identity.client.ui.automation.interaction.ILoginComponentHandler;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+\n+/**\n+ * A Prompt handler for MSIDLAB B2C SISO Policy\n+ */\n+public class IdLabB2cSisoPolicyPromptHandler extends AbstractPromptHandler {\n+\n+    public IdLabB2cSisoPolicyPromptHandler(@NonNull final B2CPromptHandlerParameters parameters) {\n+        super(getAppropriateLoginComponentHandler(parameters), parameters);\n+    }\n+\n+    @Override\n+    public void handlePrompt(@NonNull final String username, @NonNull final String password) {\n+        final B2CPromptHandlerParameters b2CPromptHandlerParameters =\n+                (B2CPromptHandlerParameters) parameters;\n+\n+        final B2CProvider b2CProvider = b2CPromptHandlerParameters.getB2cProvider();\n+\n+        if (b2CProvider.isExternalIdp()) {\n+            assert b2CProvider.getIdpSelectionBtnResourceId() != null;\n+            UiAutomatorUtils.handleButtonClick(b2CProvider.getIdpSelectionBtnResourceId());\n+        }\n+\n+        if (!b2CProvider.isExternalIdp() && !parameters.isLoginHintProvided()) {\n+            loginComponentHandler.handleEmailField(username);\n+        } else if (b2CProvider.isExternalIdp() && !parameters.isSessionExpected()) {\n+            loginComponentHandler.handleEmailField(username);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MzQ2ODM4", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#pullrequestreview-435346838", "createdAt": "2020-06-22T23:46:07Z", "commit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMzo0NjowN1rOGnUgeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDowNzowNVrOGnU4Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg4MzY0MQ==", "bodyText": "should this be called explicitly?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#discussion_r443883641", "createdAt": "2020-06-22T23:46:07Z", "author": {"login": "rpdome"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/b2c/B2CIdLabLocalLoginComponentHandler.java", "diffHunk": "@@ -0,0 +1,80 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.interaction.b2c;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+\n+import com.microsoft.identity.client.ui.automation.interaction.ILoginComponentHandler;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+/**\n+ * A login component handler for B2C Local IdP\n+ */\n+public class B2CIdLabLocalLoginComponentHandler implements ILoginComponentHandler {\n+\n+    @Override\n+    public void handleEmailField(@NonNull final String username) {\n+        UiAutomatorUtils.handleInput(\"logonIdentifier\", username);\n+    }\n+\n+    @Override\n+    public void handlePasswordField(@NonNull final String password) {\n+        UiAutomatorUtils.handleInput(\"password\", password);\n+        handleNextButton();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg4NzM2Mg==", "bodyText": "nit: suggest renaming to MSA (an internal term for outlook/hotmail/live account).", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#discussion_r443887362", "createdAt": "2020-06-22T23:59:05Z", "author": {"login": "rpdome"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/b2c/B2CProvider.java", "diffHunk": "@@ -0,0 +1,96 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.interaction.b2c;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+\n+import lombok.Getter;\n+\n+/**\n+ * A class modeling a B2C Provider that is being used during a B2C UI Test\n+ */\n+@Getter\n+public abstract class B2CProvider {\n+\n+    @NonNull\n+    private String providerName;\n+\n+    @Nullable // should be null for LOCAL B2C provider\n+    private String idpSelectionBtnResourceId;\n+\n+    @Nullable // should be null for LOCAL B2C provider\n+    private String domainHint; // this can be used as query param to /authorize endpoint\n+\n+    public B2CProvider(@NonNull final String providerName,\n+                       @Nullable final String idpSelectionBtnResourceId,\n+                       @Nullable final String domainHint) {\n+        this.providerName = providerName;\n+        this.idpSelectionBtnResourceId = idpSelectionBtnResourceId;\n+        this.domainHint = domainHint;\n+    }\n+\n+    /**\n+     * Indicates if the B2C Provider is a non-local IdP\n+     *\n+     * @return a boolean indicating if B2C Provider is an external IdP\n+     */\n+    protected boolean isExternalIdp() {\n+        return !(this instanceof Local);\n+    }\n+\n+    public static class Local extends B2CProvider {\n+        public Local() {\n+            super(LabConstants.B2CProvider.LOCAL, null, null);\n+        }\n+    }\n+\n+    public static class Google extends B2CProvider {\n+        public Google() {\n+            super(LabConstants.B2CProvider.GOOGLE,\n+                    \"GoogleExchange\",\n+                    \"google.com\"\n+            );\n+        }\n+    }\n+\n+    public static class Facebook extends B2CProvider {\n+        public Facebook() {\n+            super(LabConstants.B2CProvider.FACEBOOK,\n+                    \"FacebookExchange\",\n+                    \"facebook.com\"\n+            );\n+        }\n+    }\n+\n+    public static class Microsoft extends B2CProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg4OTEyNA==", "bodyText": "should 62-71 be a function in UiAutomatorUtils? (That takes in a class type and label)", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#discussion_r443889124", "createdAt": "2020-06-23T00:04:55Z", "author": {"login": "rpdome"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/b2c/FacebookLoginComponentHandler.java", "diffHunk": "@@ -0,0 +1,101 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.interaction.b2c;\n+\n+import android.widget.Button;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+import androidx.test.uiautomator.UiSelector;\n+\n+import com.microsoft.identity.client.ui.automation.interaction.ILoginComponentHandler;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * A login component handler for Facebook IdP\n+ */\n+public class FacebookLoginComponentHandler implements ILoginComponentHandler {\n+\n+    @Override\n+    public void handleEmailField(@NonNull final String username) {\n+        UiAutomatorUtils.handleInput(\"m_login_email\", username);\n+    }\n+\n+    @Override\n+    public void handlePasswordField(@NonNull final String password) {\n+        UiAutomatorUtils.handleInput(\"m_login_password\", password);\n+        handleNextButton();\n+    }\n+\n+    @Override\n+    public void handleBackButton() {\n+        UiAutomatorUtils.pressBack();\n+    }\n+\n+    @Override\n+    public void handleNextButton() {\n+        final UiDevice device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzg4OTcyMg==", "bodyText": "why do we have to do 51-58 here (but we don't have to in FB's case?)", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#discussion_r443889722", "createdAt": "2020-06-23T00:07:05Z", "author": {"login": "rpdome"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/b2c/GoogleLoginComponentHandler.java", "diffHunk": "@@ -0,0 +1,108 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.interaction.b2c;\n+\n+import android.widget.EditText;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+import androidx.test.uiautomator.UiSelector;\n+\n+import com.microsoft.identity.client.ui.automation.interaction.ILoginComponentHandler;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * A login component handler for Google IdP\n+ */\n+public class GoogleLoginComponentHandler implements ILoginComponentHandler {\n+\n+    @Override\n+    public void handleEmailField(@NonNull final String username) {\n+        UiAutomatorUtils.handleInput(\"identifierId\", username);\n+        handleNextButton();\n+    }\n+\n+    @Override\n+    public void handlePasswordField(@NonNull final String password) {\n+        UiAutomatorUtils.handleInput(\"password\", password);\n+        final UiObject passwordBox = UiAutomatorUtils.obtainUiObjectWithResourceId(\"password\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MzY3NDc3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#pullrequestreview-435367477", "createdAt": "2020-06-23T00:52:46Z", "commit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDo1Mjo0NlrOGnVnPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDo1Mjo0NlrOGnVnPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkwMTc1OA==", "bodyText": "These messages need to say Google instead of Local", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#discussion_r443901758", "createdAt": "2020-06-23T00:52:46Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/b2c/GoogleLoginComponentHandler.java", "diffHunk": "@@ -0,0 +1,108 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.interaction.b2c;\n+\n+import android.widget.EditText;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+import androidx.test.uiautomator.UiSelector;\n+\n+import com.microsoft.identity.client.ui.automation.interaction.ILoginComponentHandler;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * A login component handler for Google IdP\n+ */\n+public class GoogleLoginComponentHandler implements ILoginComponentHandler {\n+\n+    @Override\n+    public void handleEmailField(@NonNull final String username) {\n+        UiAutomatorUtils.handleInput(\"identifierId\", username);\n+        handleNextButton();\n+    }\n+\n+    @Override\n+    public void handlePasswordField(@NonNull final String password) {\n+        UiAutomatorUtils.handleInput(\"password\", password);\n+        final UiObject passwordBox = UiAutomatorUtils.obtainUiObjectWithResourceId(\"password\");\n+\n+        try {\n+            final UiObject passwordInput = passwordBox.getChild(\n+                    new UiSelector().className(EditText.class)\n+            );\n+\n+            passwordInput.setText(password);\n+        } catch (UiObjectNotFoundException e) {\n+            Assert.fail(e.getMessage());\n+        }\n+\n+        handleNextButton();\n+    }\n+\n+    @Override\n+    public void handleBackButton() {\n+        UiAutomatorUtils.pressBack();\n+    }\n+\n+    @Override\n+    public void handleNextButton() {\n+        final UiObject nextBtn = UiAutomatorUtils.obtainUiObjectWithText(\"Next\");\n+        try {\n+            nextBtn.click();\n+        } catch (UiObjectNotFoundException e) {\n+            Assert.fail(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public void handleAccountPicker(@NonNull final String username) {\n+        throw new UnsupportedOperationException(\"Not supported for B2C Local Provider\");\n+    }\n+\n+    private UiObject getConsentScreen() {\n+        return UiAutomatorUtils.obtainUiObjectWithResourceId(\"consentHeader\");\n+    }\n+\n+    @Override\n+    public void confirmConsentPageReceived() {\n+        throw new UnsupportedOperationException(\"Not supported for B2C Local Provider\");\n+    }\n+\n+    @Override\n+    public void acceptConsent() {\n+        throw new UnsupportedOperationException(\"Not supported for B2C Local Provider\");\n+    }\n+\n+    public void declineConsent() {\n+        throw new UnsupportedOperationException(\"Not supported for B2C Local Provider\");\n+    }\n+\n+    @Override\n+    public void handleSpeedBump() {\n+        throw new UnsupportedOperationException(\"Not supported for B2C Local Provider\");\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MzY3NTU3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#pullrequestreview-435367557", "createdAt": "2020-06-23T00:53:02Z", "commit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDo1MzowMlrOGnVnhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMDo1MzowMlrOGnVnhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkwMTgzMA==", "bodyText": "These messages need to say Facebook instead of Local", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#discussion_r443901830", "createdAt": "2020-06-23T00:53:02Z", "author": {"login": "shahzaibj"}, "path": "uiautomationutilities/src/main/java/com/microsoft/identity/client/ui/automation/interaction/b2c/FacebookLoginComponentHandler.java", "diffHunk": "@@ -0,0 +1,101 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.client.ui.automation.interaction.b2c;\n+\n+import android.widget.Button;\n+\n+import androidx.annotation.NonNull;\n+import androidx.test.platform.app.InstrumentationRegistry;\n+import androidx.test.uiautomator.UiDevice;\n+import androidx.test.uiautomator.UiObject;\n+import androidx.test.uiautomator.UiObjectNotFoundException;\n+import androidx.test.uiautomator.UiSelector;\n+\n+import com.microsoft.identity.client.ui.automation.interaction.ILoginComponentHandler;\n+import com.microsoft.identity.client.ui.automation.utils.UiAutomatorUtils;\n+\n+import org.junit.Assert;\n+\n+/**\n+ * A login component handler for Facebook IdP\n+ */\n+public class FacebookLoginComponentHandler implements ILoginComponentHandler {\n+\n+    @Override\n+    public void handleEmailField(@NonNull final String username) {\n+        UiAutomatorUtils.handleInput(\"m_login_email\", username);\n+    }\n+\n+    @Override\n+    public void handlePasswordField(@NonNull final String password) {\n+        UiAutomatorUtils.handleInput(\"m_login_password\", password);\n+        handleNextButton();\n+    }\n+\n+    @Override\n+    public void handleBackButton() {\n+        UiAutomatorUtils.pressBack();\n+    }\n+\n+    @Override\n+    public void handleNextButton() {\n+        final UiDevice device = UiDevice.getInstance(InstrumentationRegistry.getInstrumentation());\n+        final UiObject nextBtn = device.findObject(\n+                new UiSelector().className(Button.class).text(\"Log In\")\n+        );\n+\n+        try {\n+            nextBtn.click();\n+        } catch (UiObjectNotFoundException e) {\n+            Assert.fail(e.getMessage());\n+        }\n+    }\n+\n+    @Override\n+    public void handleAccountPicker(@NonNull final String username) {\n+        throw new UnsupportedOperationException(\"Not supported for B2C Local Provider\");\n+    }\n+\n+    private UiObject getConsentScreen() {\n+        return UiAutomatorUtils.obtainUiObjectWithResourceId(\"consentHeader\");\n+    }\n+\n+    @Override\n+    public void confirmConsentPageReceived() {\n+        throw new UnsupportedOperationException(\"Not supported for B2C Local Provider\");\n+    }\n+\n+    @Override\n+    public void acceptConsent() {\n+        throw new UnsupportedOperationException(\"Not supported for B2C Local Provider\");\n+    }\n+\n+    public void declineConsent() {\n+        throw new UnsupportedOperationException(\"Not supported for B2C Local Provider\");\n+    }\n+\n+    @Override\n+    public void handleSpeedBump() {\n+        throw new UnsupportedOperationException(\"Not supported for B2C Local Provider\");\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a2d860a79120effff08e0fc58cef3dccb958c88"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "337f4444f0ae357a94fb6dc839f7907a5d6589ae", "author": {"user": {"login": "shahzaibj", "name": "Shahzaib"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/337f4444f0ae357a94fb6dc839f7907a5d6589ae", "committedDate": "2020-06-25T01:28:22Z", "message": "Address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87dcc7432872aa5b19ce4d88d395c9c28f79a591", "author": {"user": {"login": "shahzaibj", "name": "Shahzaib"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/87dcc7432872aa5b19ce4d88d395c9c28f79a591", "committedDate": "2020-06-25T22:10:23Z", "message": "Address comment\n\nUse or instead of if else"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccb06beca76861d363c1502e7c2cb7270737775f", "author": {"user": {"login": "shahzaibj", "name": "Shahzaib"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/ccb06beca76861d363c1502e7c2cb7270737775f", "committedDate": "2020-06-26T19:35:17Z", "message": "Convert B2C Provider to enum"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d08d2646d79e6e2d044a047b4ec44b2ba9f8f6c", "author": {"user": {"login": "shahzaibj", "name": "Shahzaib"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/8d08d2646d79e6e2d044a047b4ec44b2ba9f8f6c", "committedDate": "2020-06-26T19:54:54Z", "message": "Create abstract b2c login component handler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NTU5NjI1", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/939#pullrequestreview-438559625", "createdAt": "2020-06-26T19:57:36Z", "commit": {"oid": "8d08d2646d79e6e2d044a047b4ec44b2ba9f8f6c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c557fe0b4cd105fff82e9e15c60752b2dce8bbdd", "author": {"user": {"login": "shahzaibj", "name": "Shahzaib"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c557fe0b4cd105fff82e9e15c60752b2dce8bbdd", "committedDate": "2020-06-26T20:02:41Z", "message": "Merge branch 'dev' into shahzaibj/b2c-test-ui-handler"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1668, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}