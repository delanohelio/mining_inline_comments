{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MDkyNzc0", "number": 1111, "title": "Implement support for client_claims in ATs, SHRs", "bodyText": "Impetus:\n\nAzureAD/microsoft-authentication-library-for-android#1207\n\nSupports:\n\nAzureAD/microsoft-authentication-library-for-android#1208", "createdAt": "2020-11-04T02:21:15Z", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111", "merged": true, "mergeCommit": {"oid": "308affa5c8afad1452d474e3b58d0aa271facdd3"}, "closed": true, "closedAt": "2020-11-13T03:33:17Z", "author": {"login": "iambmelt"}, "timelineItems": {"totalCount": 82, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZCvukgH2gAyNTE1MDkyNzc0OmQyOTE4NDRkMWRhNTc5ZWU4NzQwNDRkZWRjZTM3MjhkMjE2NTM5NTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdb98A2gH2gAyNTE1MDkyNzc0OjE4MDZlZmE3NzA2MDU4Y2E4NWI2NzNjZGRjNDNjZjBhOTAxNDJjMGQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d291844d1da579ee874044dedce3728d21653952", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/d291844d1da579ee874044dedce3728d21653952", "committedDate": "2020-11-04T00:37:17Z", "message": "WIP implementing client_claims"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c31c216563132c8ff3b5cc5763be372d747f1ec", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/1c31c216563132c8ff3b5cc5763be372d747f1ec", "committedDate": "2020-11-04T02:19:06Z", "message": "Adding support for client_claimss"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3ca1401249dac6d3fdd015e7772f89bd5616cf5", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/b3ca1401249dac6d3fdd015e7772f89bd5616cf5", "committedDate": "2020-11-04T02:42:04Z", "message": "Stubbing out command"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a4ba12eeb3f7163dfcfaee9052588e0c26755e1", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/4a4ba12eeb3f7163dfcfaee9052588e0c26755e1", "committedDate": "2020-11-05T00:21:42Z", "message": "Stubbing out more impl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b74fa8ff7003a67d00f3b7d399b8f68621d6746", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/5b74fa8ff7003a67d00f3b7d399b8f68621d6746", "committedDate": "2020-11-05T01:14:45Z", "message": "Local flow working (needs polish)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODQ5MzQ3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-523849347", "createdAt": "2020-11-05T01:16:23Z", "commit": {"oid": "5b74fa8ff7003a67d00f3b7d399b8f68621d6746"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMToxNjoyNFrOHtvbHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMToxNjoyNFrOHtvbHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcyNDk1Ng==", "bodyText": "javadoc", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r517724956", "createdAt": "2020-11-05T01:16:24Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/BaseController.java", "diffHunk": "@@ -745,4 +747,6 @@ public ICacheRecord finalizeCacheRecordForResult(@NonNull final ICacheRecord cac\n \n         return cacheRecord;\n     }\n+\n+    public abstract GenerateShrResult generateSignedHttpRequest(GenerateShrCommandParameters parameters) throws Exception;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b74fa8ff7003a67d00f3b7d399b8f68621d6746"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODQ5NDIw", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-523849420", "createdAt": "2020-11-05T01:16:37Z", "commit": {"oid": "5b74fa8ff7003a67d00f3b7d399b8f68621d6746"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMToxNjozN1rOHtvbXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMToxNjozN1rOHtvbXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcyNTAyMw==", "bodyText": "javadoc", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r517725023", "createdAt": "2020-11-05T01:16:37Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/parameters/GenerateShrCommandParameters.java", "diffHunk": "@@ -0,0 +1,42 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands.parameters;\n+\n+import com.microsoft.identity.common.internal.authscheme.IPoPAuthenticationSchemeParams;\n+\n+import lombok.Getter;\n+import lombok.experimental.SuperBuilder;\n+\n+/**\n+ * Parameter class for generating SHRs.\n+ */\n+@Getter\n+@SuperBuilder\n+public class GenerateShrCommandParameters extends CommandParameters {\n+\n+    private static final String TAG = GenerateShrCommandParameters.class.getSimpleName();\n+\n+    private String homeAccountId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b74fa8ff7003a67d00f3b7d399b8f68621d6746"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODQ5NjA3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-523849607", "createdAt": "2020-11-05T01:17:09Z", "commit": {"oid": "5b74fa8ff7003a67d00f3b7d399b8f68621d6746"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMToxNzoxMFrOHtvb_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMToxNzoxMFrOHtvb_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcyNTE4MA==", "bodyText": "javadoc", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r517725180", "createdAt": "2020-11-05T01:17:10Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/LocalMSALController.java", "diffHunk": "@@ -692,6 +694,64 @@ public AcquireTokenResult acquireDeviceCodeFlowToken(\n         return acquireTokenResult;\n     }\n \n+    @Override\n+    public GenerateShrResult generateSignedHttpRequest(\n+            @NonNull final GenerateShrCommandParameters parameters) throws Exception {\n+        final Context context = parameters.getAndroidApplicationContext();\n+        final IClockSkewManager clockSkewManager = new ClockSkewManager(context);\n+        final OAuth2TokenCache cache = parameters.getOAuth2TokenCache();\n+        final String clientId = parameters.getClientId();\n+        final String homeAccountId = parameters.getHomeAccountId();\n+        final IPoPAuthenticationSchemeParams popSchemeParams = parameters.getPopParameters();\n+\n+        if (credentialsExistForAccountLocally(cache, clientId, homeAccountId)) {\n+            // Perform the signing locally...\n+            return generateSignedHttpRequestInternal(context, clockSkewManager, popSchemeParams);\n+        } else {\n+            throw new UiRequiredException(NO_ACCOUNT_FOUND, \"Account does not exist locally.\");\n+        }\n+    }\n+\n+    private synchronized GenerateShrResult generateSignedHttpRequestInternal(@NonNull final Context context,\n+                                                                             @NonNull final IClockSkewManager clockSkewManager,\n+                                                                             @NonNull final IPoPAuthenticationSchemeParams popSchemeParams) throws ClientException {\n+        // Clock-skew correction values\n+        final long ONE_SECOND_MILLIS = 1000L;\n+        final long timestampMillis = clockSkewManager.getAdjustedReferenceTime().getTime();\n+\n+        final String httpMethodStr = popSchemeParams.getHttpMethod();\n+        final URL resourceUrl = popSchemeParams.getUrl();\n+        final String nonce = popSchemeParams.getNonce();\n+        final String clientClaims = popSchemeParams.getClientClaims();\n+        final IDevicePopManager popMgr = Device.getDevicePoPManagerInstance();\n+\n+        // Generate keys, if none exist (should already be initialized)\n+        if (!popMgr.asymmetricKeyExists()) {\n+            popMgr.generateAsymmetricKey(context);\n+        }\n+\n+        final String shr = popMgr.mintSignedHttpRequest(\n+                httpMethodStr,\n+                timestampMillis / ONE_SECOND_MILLIS,\n+                resourceUrl,\n+                nonce,\n+                clientClaims\n+        );\n+\n+        // Create our result object\n+        final GenerateShrResult result = new GenerateShrResult();\n+        result.setShr(shr);\n+\n+        return result;\n+    }\n+\n+    private boolean credentialsExistForAccountLocally(@NonNull final OAuth2TokenCache cache,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b74fa8ff7003a67d00f3b7d399b8f68621d6746"}, "originalPosition": 176}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODQ5Njgz", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-523849683", "createdAt": "2020-11-05T01:17:24Z", "commit": {"oid": "5b74fa8ff7003a67d00f3b7d399b8f68621d6746"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMToxNzoyNFrOHtvcRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwMToxNzoyNFrOHtvcRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzcyNTI1NA==", "bodyText": "javadoc", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r517725254", "createdAt": "2020-11-05T01:17:24Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/LocalMSALController.java", "diffHunk": "@@ -692,6 +694,64 @@ public AcquireTokenResult acquireDeviceCodeFlowToken(\n         return acquireTokenResult;\n     }\n \n+    @Override\n+    public GenerateShrResult generateSignedHttpRequest(\n+            @NonNull final GenerateShrCommandParameters parameters) throws Exception {\n+        final Context context = parameters.getAndroidApplicationContext();\n+        final IClockSkewManager clockSkewManager = new ClockSkewManager(context);\n+        final OAuth2TokenCache cache = parameters.getOAuth2TokenCache();\n+        final String clientId = parameters.getClientId();\n+        final String homeAccountId = parameters.getHomeAccountId();\n+        final IPoPAuthenticationSchemeParams popSchemeParams = parameters.getPopParameters();\n+\n+        if (credentialsExistForAccountLocally(cache, clientId, homeAccountId)) {\n+            // Perform the signing locally...\n+            return generateSignedHttpRequestInternal(context, clockSkewManager, popSchemeParams);\n+        } else {\n+            throw new UiRequiredException(NO_ACCOUNT_FOUND, \"Account does not exist locally.\");\n+        }\n+    }\n+\n+    private synchronized GenerateShrResult generateSignedHttpRequestInternal(@NonNull final Context context,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b74fa8ff7003a67d00f3b7d399b8f68621d6746"}, "originalPosition": 143}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb85b0c026892aa5e049b89c2e2f52f268210ec7", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/eb85b0c026892aa5e049b89c2e2f52f268210ec7", "committedDate": "2020-11-05T01:31:05Z", "message": "Adds javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30a89ec016bfe6d93d53f403a8161d097088ae35", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/30a89ec016bfe6d93d53f403a8161d097088ae35", "committedDate": "2020-11-05T01:33:06Z", "message": "Adds javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "786262c7d3e0ec6c08dec2ac4d71662fb24a262c", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/786262c7d3e0ec6c08dec2ac4d71662fb24a262c", "committedDate": "2020-11-05T01:35:49Z", "message": "Adds javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ed79bf5140a138b32024e34471f38e4db9dfb2e", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/1ed79bf5140a138b32024e34471f38e4db9dfb2e", "committedDate": "2020-11-05T01:43:45Z", "message": "Adds javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "512233f48e8394a921c60193939ae01efec265c2", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/512233f48e8394a921c60193939ae01efec265c2", "committedDate": "2020-11-05T01:46:07Z", "message": "Updates changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81e81055f01712a1b0dadc4fe5a0fa61e7ade0de", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/81e81055f01712a1b0dadc4fe5a0fa61e7ade0de", "committedDate": "2020-11-05T23:10:43Z", "message": "WIP stubbing out client-side invocation of broker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ba5ecd070d9fc523c520665b8b0f94dbb07639d", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/2ba5ecd070d9fc523c520665b8b0f94dbb07639d", "committedDate": "2020-11-06T00:08:14Z", "message": "Bugfixes, additional impl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f46683f4ccb17f342419c01090253a53031ce47", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/1f46683f4ccb17f342419c01090253a53031ce47", "committedDate": "2020-11-06T01:38:50Z", "message": "Bugfixing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/89f1a2887b0ec4b45f384cedd8babb109e832f4d", "committedDate": "2020-11-06T01:40:55Z", "message": "Fixing compilation issue in test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODAwOTA4", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524800908", "createdAt": "2020-11-06T01:43:14Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMTo0MzoxNFrOHudLEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMTo0MzoxNFrOHudLEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ3NDUxNQ==", "bodyText": "Comment: these are errors returned from the broker", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518474515", "createdAt": "2020-11-06T01:43:14Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/GenerateShrCommand.java", "diffHunk": "@@ -0,0 +1,106 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.BaseException;\n+import com.microsoft.identity.common.exception.ClientException;\n+import com.microsoft.identity.common.exception.UiRequiredException;\n+import com.microsoft.identity.common.internal.commands.parameters.GenerateShrCommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+import com.microsoft.identity.common.internal.result.GenerateShrResult;\n+\n+import java.util.List;\n+\n+import static com.microsoft.identity.common.exception.ErrorStrings.NO_ACCOUNT_FOUND;\n+\n+/**\n+ * Command class to perform generation of AT-less SHRs on behalf of a user.\n+ */\n+public class GenerateShrCommand extends BaseCommand<GenerateShrResult> {\n+\n+    private static final String TAG = GenerateShrCommand.class.getSimpleName();\n+\n+    public GenerateShrCommand(@NonNull final GenerateShrCommandParameters parameters,\n+                              @NonNull final List<BaseController> controllers,\n+                              @NonNull final CommandCallback<GenerateShrResult, BaseException> callback,\n+                              @NonNull final String publicApiId) {\n+        super(parameters, controllers, callback, publicApiId);\n+    }\n+\n+    @Override\n+    public GenerateShrResult execute() throws Exception {\n+        final String methodName = \":execute\";\n+\n+        GenerateShrResult result = null;\n+        final GenerateShrCommandParameters parameters = (GenerateShrCommandParameters) getParameters();\n+\n+        // Iterate over our controllers, to service the request either locally or via the broker...\n+        BaseController controller;\n+        for (int ii = 0; ii < getControllers().size(); ii++) {\n+            controller = getControllers().get(ii);\n+\n+            com.microsoft.identity.common.internal.logging.Logger.verbose(\n+                    TAG + methodName,\n+                    \"Executing with controller: \"\n+                            + controller.getClass().getSimpleName()\n+            );\n+\n+            try {\n+                result = controller.generateSignedHttpRequest(parameters);\n+\n+                if (null != result.getErrorCode()) {\n+                    final String errorCode = result.getErrorCode();\n+                    final String errorMessage = result.getErrorMessage();\n+\n+                    if (NO_ACCOUNT_FOUND.equalsIgnoreCase(errorCode)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODAxMDY4", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524801068", "createdAt": "2020-11-06T01:43:42Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMTo0Mzo0MlrOHudLlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMTo0Mzo0MlrOHudLlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ3NDY0NA==", "bodyText": "Document unused", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518474644", "createdAt": "2020-11-06T01:43:42Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/BrokerMsalController.java", "diffHunk": "@@ -753,6 +756,60 @@ public AcquireTokenResult acquireDeviceCodeFlowToken(@SuppressWarnings(WarningTy\n         throw new ClientException(\"acquireDeviceCodeFlowToken() not supported in BrokerMsalController\");\n     }\n \n+    @Override\n+    public GenerateShrResult generateSignedHttpRequest(@NonNull final GenerateShrCommandParameters parameters) throws Exception {\n+        return mBrokerOperationExecutor.execute(parameters, new BrokerOperation<GenerateShrResult>() {\n+\n+            private String negotiatedBrokerProtocolVersion;\n+\n+            @Override\n+            public void performPrerequisites(final @NonNull IIpcStrategy strategy) throws BaseException {\n+                negotiatedBrokerProtocolVersion = hello(strategy, parameters);\n+            }\n+\n+            @NonNull\n+            @Override\n+            public BrokerOperationBundle getBundle() {\n+                return new BrokerOperationBundle(\n+                        MSAL_GENERATE_SHR,\n+                        mActiveBrokerPackageName,\n+                        mRequestAdapter.getRequestBundleForGenerateShr(\n+                                parameters,\n+                                negotiatedBrokerProtocolVersion\n+                        )\n+                );\n+            }\n+\n+            @NonNull\n+            @Override\n+            public GenerateShrResult extractResultBundle(@Nullable final Bundle resultBundle) throws BaseException {\n+                if (null == resultBundle) {\n+                    throw mResultAdapter.getExceptionForEmptyResultBundle();\n+                }\n+\n+                return mResultAdapter.getGenerateShrResultFromResultBundle(resultBundle);\n+            }\n+\n+            @NonNull\n+            @Override\n+            public String getMethodName() {\n+                return \":generateSignedHttpRequest\";\n+            }\n+\n+            @Nullable\n+            @Override\n+            public String getTelemetryApiId() {\n+                return null;\n+            }\n+\n+            @Override\n+            public void putValueInSuccessEvent(@NonNull final ApiEndEvent event,\n+                                               @NonNull final GenerateShrResult result) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI2NjQ1", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524826645", "createdAt": "2020-11-06T03:04:39Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowNDozOVrOHuej7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowNDozOVrOHuej7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5NzI2Mg==", "bodyText": "Fix this", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518497262", "createdAt": "2020-11-06T03:04:39Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/adal/internal/AuthenticationConstants.java", "diffHunk": "@@ -1209,7 +1214,12 @@\n          * Time out for the AccountManager's remove account operation in broker.\n          */\n         public static final int ACCOUNT_MANAGER_REMOVE_ACCOUNT_TIMEOUT_IN_MILLISECONDS = 5000;\n-        \n+\n+        /**\n+         * The Bundle key name of serialized parameters for the PoP auth scheme.\n+         */\n+        public static final String AUTHSCHEME_PARAMS_POP = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI2OTA4", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524826908", "createdAt": "2020-11-06T03:05:28Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowNToyOVrOHuek2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowNToyOVrOHuek2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5NzQ5Ng==", "bodyText": "Fix comment: Msal-to-Broker", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518497496", "createdAt": "2020-11-06T03:05:29Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/adal/internal/AuthenticationConstants.java", "diffHunk": "@@ -1348,6 +1358,11 @@\n          */\n         public static final String MSAL_SIGN_OUT_FROM_SHARED_DEVICE_PATH = \"/signOutFromSharedDevice\";\n \n+        /**\n+         * URI Path constant for BrokerApi-to-Broker generateShr request using ContentProvider.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI3MTE1", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524827115", "createdAt": "2020-11-06T03:06:09Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowNjowOVrOHueldg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowNjowOVrOHueldg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5NzY1NA==", "bodyText": "@rpdome So this value is completely arbitrary? Can I 'claim' 13?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518497654", "createdAt": "2020-11-06T03:06:09Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/adal/internal/AuthenticationConstants.java", "diffHunk": "@@ -1427,6 +1442,11 @@\n          * BrokerContentProvider URI code constant for BrokerApi-to-Broker updateBrt request.\n          */\n         public static final int BROKER_API_UPDATE_BRT_CODE = 12;\n+\n+        /**\n+         * BrokerContentProvider URI code constant for MSAL-to-Broker generateSHR request.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI3MzA5", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524827309", "createdAt": "2020-11-06T03:06:55Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowNjo1NVrOHuemGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowNjo1NVrOHuemGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5NzgxOA==", "bodyText": "Increment min broker hello api", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518497818", "createdAt": "2020-11-06T03:06:55Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/authscheme/PopAuthenticationSchemeInternal.java", "diffHunk": "@@ -68,26 +70,70 @@\n     @SerializedName(NONCE)\n     private String mNonce;\n \n+    @SerializedName(CLIENT_CLAIMS)\n+    private String mClientClaims;\n+\n     /**\n      * Constructor for gson use.\n      */\n     PopAuthenticationSchemeInternal() {\n         super(SCHEME_POP);\n     }\n \n+    @Deprecated\n     public PopAuthenticationSchemeInternal(@NonNull final IClockSkewManager clockSkewManager,\n-                                    @Nullable final String httpMethod,\n-                                    @NonNull final URL url,\n-                                    @Nullable final String nonce) {\n+                                           @Nullable final String httpMethod,\n+                                           @NonNull final URL url,\n+                                           @Nullable final String nonce) {\n         super(SCHEME_POP);\n         mClockSkewManager = clockSkewManager;\n         mHttpMethod = httpMethod;\n         mUrl = url;\n         mNonce = nonce;\n     }\n \n+    public PopAuthenticationSchemeInternal(@NonNull final IClockSkewManager clockSkewManager,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI3MzY3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524827367", "createdAt": "2020-11-06T03:07:07Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowNzowOFrOHuemRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowNzowOFrOHuemRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5Nzg2MA==", "bodyText": "javadoc", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518497860", "createdAt": "2020-11-06T03:07:08Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/authscheme/PopAuthenticationSchemeInternal.java", "diffHunk": "@@ -68,26 +70,70 @@\n     @SerializedName(NONCE)\n     private String mNonce;\n \n+    @SerializedName(CLIENT_CLAIMS)\n+    private String mClientClaims;\n+\n     /**\n      * Constructor for gson use.\n      */\n     PopAuthenticationSchemeInternal() {\n         super(SCHEME_POP);\n     }\n \n+    @Deprecated\n     public PopAuthenticationSchemeInternal(@NonNull final IClockSkewManager clockSkewManager,\n-                                    @Nullable final String httpMethod,\n-                                    @NonNull final URL url,\n-                                    @Nullable final String nonce) {\n+                                           @Nullable final String httpMethod,\n+                                           @NonNull final URL url,\n+                                           @Nullable final String nonce) {\n         super(SCHEME_POP);\n         mClockSkewManager = clockSkewManager;\n         mHttpMethod = httpMethod;\n         mUrl = url;\n         mNonce = nonce;\n     }\n \n+    public PopAuthenticationSchemeInternal(@NonNull final IClockSkewManager clockSkewManager,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI3NzA1", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524827705", "createdAt": "2020-11-06T03:08:09Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowODowOVrOHuencA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowODowOVrOHuencA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5ODE2MA==", "bodyText": "Javadoc", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518498160", "createdAt": "2020-11-06T03:08:09Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/GenerateShrCommand.java", "diffHunk": "@@ -0,0 +1,106 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.BaseException;\n+import com.microsoft.identity.common.exception.ClientException;\n+import com.microsoft.identity.common.exception.UiRequiredException;\n+import com.microsoft.identity.common.internal.commands.parameters.GenerateShrCommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+import com.microsoft.identity.common.internal.result.GenerateShrResult;\n+\n+import java.util.List;\n+\n+import static com.microsoft.identity.common.exception.ErrorStrings.NO_ACCOUNT_FOUND;\n+\n+/**\n+ * Command class to perform generation of AT-less SHRs on behalf of a user.\n+ */\n+public class GenerateShrCommand extends BaseCommand<GenerateShrResult> {\n+\n+    private static final String TAG = GenerateShrCommand.class.getSimpleName();\n+\n+    public GenerateShrCommand(@NonNull final GenerateShrCommandParameters parameters,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI3ODg2", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524827886", "createdAt": "2020-11-06T03:08:44Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowODo0NFrOHueoDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzowODo0NFrOHueoDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5ODMxNw==", "bodyText": "Expand upon this comment -- when is the command serviced locally vs remotely?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518498317", "createdAt": "2020-11-06T03:08:44Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/GenerateShrCommand.java", "diffHunk": "@@ -0,0 +1,106 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.BaseException;\n+import com.microsoft.identity.common.exception.ClientException;\n+import com.microsoft.identity.common.exception.UiRequiredException;\n+import com.microsoft.identity.common.internal.commands.parameters.GenerateShrCommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+import com.microsoft.identity.common.internal.result.GenerateShrResult;\n+\n+import java.util.List;\n+\n+import static com.microsoft.identity.common.exception.ErrorStrings.NO_ACCOUNT_FOUND;\n+\n+/**\n+ * Command class to perform generation of AT-less SHRs on behalf of a user.\n+ */\n+public class GenerateShrCommand extends BaseCommand<GenerateShrResult> {\n+\n+    private static final String TAG = GenerateShrCommand.class.getSimpleName();\n+\n+    public GenerateShrCommand(@NonNull final GenerateShrCommandParameters parameters,\n+                              @NonNull final List<BaseController> controllers,\n+                              @NonNull final CommandCallback<GenerateShrResult, BaseException> callback,\n+                              @NonNull final String publicApiId) {\n+        super(parameters, controllers, callback, publicApiId);\n+    }\n+\n+    @Override\n+    public GenerateShrResult execute() throws Exception {\n+        final String methodName = \":execute\";\n+\n+        GenerateShrResult result = null;\n+        final GenerateShrCommandParameters parameters = (GenerateShrCommandParameters) getParameters();\n+\n+        // Iterate over our controllers, to service the request either locally or via the broker...", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI4Mzc0", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524828374", "createdAt": "2020-11-06T03:10:25Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxMDoyNVrOHuep3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxMDoyNVrOHuep3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5ODc4MA==", "bodyText": "Assign a telemetry api id", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518498780", "createdAt": "2020-11-06T03:10:25Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/BrokerMsalController.java", "diffHunk": "@@ -753,6 +756,60 @@ public AcquireTokenResult acquireDeviceCodeFlowToken(@SuppressWarnings(WarningTy\n         throw new ClientException(\"acquireDeviceCodeFlowToken() not supported in BrokerMsalController\");\n     }\n \n+    @Override\n+    public GenerateShrResult generateSignedHttpRequest(@NonNull final GenerateShrCommandParameters parameters) throws Exception {\n+        return mBrokerOperationExecutor.execute(parameters, new BrokerOperation<GenerateShrResult>() {\n+\n+            private String negotiatedBrokerProtocolVersion;\n+\n+            @Override\n+            public void performPrerequisites(final @NonNull IIpcStrategy strategy) throws BaseException {\n+                negotiatedBrokerProtocolVersion = hello(strategy, parameters);\n+            }\n+\n+            @NonNull\n+            @Override\n+            public BrokerOperationBundle getBundle() {\n+                return new BrokerOperationBundle(\n+                        MSAL_GENERATE_SHR,\n+                        mActiveBrokerPackageName,\n+                        mRequestAdapter.getRequestBundleForGenerateShr(\n+                                parameters,\n+                                negotiatedBrokerProtocolVersion\n+                        )\n+                );\n+            }\n+\n+            @NonNull\n+            @Override\n+            public GenerateShrResult extractResultBundle(@Nullable final Bundle resultBundle) throws BaseException {\n+                if (null == resultBundle) {\n+                    throw mResultAdapter.getExceptionForEmptyResultBundle();\n+                }\n+\n+                return mResultAdapter.getGenerateShrResultFromResultBundle(resultBundle);\n+            }\n+\n+            @NonNull\n+            @Override\n+            public String getMethodName() {\n+                return \":generateSignedHttpRequest\";\n+            }\n+\n+            @Nullable\n+            @Override\n+            public String getTelemetryApiId() {\n+                return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI4NTQ3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524828547", "createdAt": "2020-11-06T03:11:01Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxMTowMVrOHueqYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxMTowMVrOHueqYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5ODkxMg==", "bodyText": "Better place to put this?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518498912", "createdAt": "2020-11-06T03:11:01Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/LocalMSALController.java", "diffHunk": "@@ -692,6 +694,82 @@ public AcquireTokenResult acquireDeviceCodeFlowToken(\n         return acquireTokenResult;\n     }\n \n+    @Override\n+    public GenerateShrResult generateSignedHttpRequest(\n+            @NonNull final GenerateShrCommandParameters parameters) throws Exception {\n+        final Context context = parameters.getAndroidApplicationContext();\n+        final IClockSkewManager clockSkewManager = new ClockSkewManager(context);\n+        final OAuth2TokenCache cache = parameters.getOAuth2TokenCache();\n+        final String clientId = parameters.getClientId();\n+        final String homeAccountId = parameters.getHomeAccountId();\n+        final IPoPAuthenticationSchemeParams popSchemeParams = parameters.getPopParameters();\n+\n+        if (userHasLocalAccountRecord(cache, clientId, homeAccountId)) {\n+            // Perform the signing locally...\n+            return generateSignedHttpRequestInternal(context, clockSkewManager, popSchemeParams);\n+        } else {\n+            throw new UiRequiredException(NO_ACCOUNT_FOUND, \"Account does not exist.\");\n+        }\n+    }\n+\n+    /**\n+     * Generates an AT-less SHR using the PoPMgr's internal signing key.\n+     *\n+     * @param context          The current application's {@link Context}.\n+     * @param clockSkewManager An instance of {@link IClockSkewManager}, used to mitigate\n+     *                         clock-skew/drift.\n+     * @param popSchemeParams  The input params used to create the resulting SHR.\n+     * @return The {@link GenerateShrResult} containing the resulint SHR.\n+     * @throws ClientException If an error is encountered.\n+     */\n+    public static synchronized GenerateShrResult generateSignedHttpRequestInternal(@NonNull final Context context,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 153}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI4NzE4", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524828718", "createdAt": "2020-11-06T03:11:35Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxMTozNVrOHueq7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxMTozNVrOHueq7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5OTA1NQ==", "bodyText": "say why!", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518499055", "createdAt": "2020-11-06T03:11:35Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/DevicePopManager.java", "diffHunk": "@@ -953,15 +958,68 @@ public String mintSignedAccessToken(@Nullable final String httpMethod,\n                                         @NonNull final URL requestUrl,\n                                         @NonNull final String accessToken,\n                                         @Nullable final String nonce) throws ClientException {\n+        return mintSignedAccessToken(\n+                httpMethod,\n+                timestamp,\n+                requestUrl,\n+                accessToken,\n+                nonce,\n+                null\n+        );\n+    }\n+\n+    @Override\n+    public String mintSignedAccessToken(@Nullable String httpMethod,\n+                                        final long timestamp,\n+                                        @NonNull final URL requestUrl,\n+                                        @NonNull final String accessToken,\n+                                        @Nullable final String nonce,\n+                                        @Nullable final String clientClaims) throws ClientException {\n+        return mintSignedHttpRequestInternal(\n+                httpMethod,\n+                timestamp,\n+                requestUrl,\n+                accessToken,\n+                nonce,\n+                clientClaims\n+        );\n+    }\n+\n+    @Override\n+    public String mintSignedHttpRequest(@Nullable final String httpMethod,\n+                                        final long timestamp,\n+                                        @NonNull final URL requestUrl,\n+                                        @Nullable final String nonce,\n+                                        @Nullable final String clientClaims) throws ClientException {\n+        return mintSignedHttpRequestInternal(\n+                httpMethod,\n+                timestamp,\n+                requestUrl,\n+                null, // No AT used in this flow", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI4ODE0", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524828814", "createdAt": "2020-11-06T03:11:52Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxMTo1MlrOHuerQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxMTo1MlrOHuerQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5OTEzOQ==", "bodyText": "Document this is only allowed to support generateShr", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518499139", "createdAt": "2020-11-06T03:11:52Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/DevicePopManager.java", "diffHunk": "@@ -953,15 +958,68 @@ public String mintSignedAccessToken(@Nullable final String httpMethod,\n                                         @NonNull final URL requestUrl,\n                                         @NonNull final String accessToken,\n                                         @Nullable final String nonce) throws ClientException {\n+        return mintSignedAccessToken(\n+                httpMethod,\n+                timestamp,\n+                requestUrl,\n+                accessToken,\n+                nonce,\n+                null\n+        );\n+    }\n+\n+    @Override\n+    public String mintSignedAccessToken(@Nullable String httpMethod,\n+                                        final long timestamp,\n+                                        @NonNull final URL requestUrl,\n+                                        @NonNull final String accessToken,\n+                                        @Nullable final String nonce,\n+                                        @Nullable final String clientClaims) throws ClientException {\n+        return mintSignedHttpRequestInternal(\n+                httpMethod,\n+                timestamp,\n+                requestUrl,\n+                accessToken,\n+                nonce,\n+                clientClaims\n+        );\n+    }\n+\n+    @Override\n+    public String mintSignedHttpRequest(@Nullable final String httpMethod,\n+                                        final long timestamp,\n+                                        @NonNull final URL requestUrl,\n+                                        @Nullable final String nonce,\n+                                        @Nullable final String clientClaims) throws ClientException {\n+        return mintSignedHttpRequestInternal(\n+                httpMethod,\n+                timestamp,\n+                requestUrl,\n+                null, // No AT used in this flow\n+                nonce,\n+                clientClaims\n+        );\n+    }\n+\n+    private String mintSignedHttpRequestInternal(@Nullable final String httpMethod,\n+                                                 final long timestamp,\n+                                                 @NonNull final URL requestUrl,\n+                                                 @Nullable final String accessToken,\n+                                                 @Nullable final String nonce,\n+                                                 @Nullable final String clientClaims) throws ClientException {\n         final Exception exception;\n         final String errCode;\n \n         try {\n             final JWTClaimsSet.Builder claimsBuilder = new JWTClaimsSet.Builder();\n-            claimsBuilder.claim(\n-                    SignedHttpRequestJwtClaims.ACCESS_TOKEN,\n-                    accessToken\n-            );\n+\n+            if (!TextUtils.isEmpty(accessToken)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI5MTIy", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524829122", "createdAt": "2020-11-06T03:12:52Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxMjo1M1rOHuesKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxMjo1M1rOHuesKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5OTM2OA==", "bodyText": "Fix this comment - no at exists", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518499368", "createdAt": "2020-11-06T03:12:53Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/platform/IDevicePopManager.java", "diffHunk": "@@ -284,4 +284,42 @@ String mintSignedAccessToken(String httpMethod,\n                                  String accessToken,\n                                  String nonce\n     ) throws ClientException;\n+\n+    /**\n+     * Api to create the signed PoP access token.\n+     *\n+     * @param httpMethod   (Optional) The HTTP method that will be used with this outbound request.\n+     * @param timestamp    Seconds since January 1st, 1970 (UTC).\n+     * @param requestUrl   The recipient URL of the outbound request.\n+     * @param accessToken  The access_token from which to derive the signed JWT.\n+     * @param nonce        (Optional) Arbitrary value used for replay protection by middleware.\n+     * @param clientClaims (Optional) Arbitrary String data provided by the caller. Used as the\n+     *                     client_claims value.\n+     * @return The signed PoP access token.\n+     */\n+    String mintSignedAccessToken(String httpMethod,\n+                                 long timestamp,\n+                                 URL requestUrl,\n+                                 String accessToken,\n+                                 String nonce,\n+                                 String clientClaims\n+    ) throws ClientException;\n+\n+    /**\n+     * Api to create the signed PoP access token.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI5MjMw", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524829230", "createdAt": "2020-11-06T03:13:14Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxMzoxNFrOHuesbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxMzoxNFrOHuesbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODQ5OTQzOA==", "bodyText": "1 line", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518499438", "createdAt": "2020-11-06T03:13:14Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -196,7 +206,7 @@ public BrokerInteractiveTokenCommandParameters brokerInteractiveParametersFromAc\n         }\n \n         int callingAppUid = intent.getIntExtra(\n-                AuthenticationConstants.Broker.CALLER_INFO_UID, 0\n+                CALLER_INFO_UID, 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODI5OTgw", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524829980", "createdAt": "2020-11-06T03:16:00Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxNjowMFrOHuevDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoxNjowMFrOHuevDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMDEwOA==", "bodyText": "Make this behave like the broker -- don't throw an Exception, instead, return an initialized error", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518500108", "createdAt": "2020-11-06T03:16:00Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/controllers/LocalMSALController.java", "diffHunk": "@@ -692,6 +694,82 @@ public AcquireTokenResult acquireDeviceCodeFlowToken(\n         return acquireTokenResult;\n     }\n \n+    @Override\n+    public GenerateShrResult generateSignedHttpRequest(\n+            @NonNull final GenerateShrCommandParameters parameters) throws Exception {\n+        final Context context = parameters.getAndroidApplicationContext();\n+        final IClockSkewManager clockSkewManager = new ClockSkewManager(context);\n+        final OAuth2TokenCache cache = parameters.getOAuth2TokenCache();\n+        final String clientId = parameters.getClientId();\n+        final String homeAccountId = parameters.getHomeAccountId();\n+        final IPoPAuthenticationSchemeParams popSchemeParams = parameters.getPopParameters();\n+\n+        if (userHasLocalAccountRecord(cache, clientId, homeAccountId)) {\n+            // Perform the signing locally...\n+            return generateSignedHttpRequestInternal(context, clockSkewManager, popSchemeParams);\n+        } else {\n+            throw new UiRequiredException(NO_ACCOUNT_FOUND, \"Account does not exist.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 139}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0ODMzMjIz", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-524833223", "createdAt": "2020-11-06T03:28:20Z", "commit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoyODoyMFrOHue58g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwMzoyODoyMFrOHue58g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODUwMjg5OA==", "bodyText": "Refactor this out", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r518502898", "createdAt": "2020-11-06T03:28:20Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/GenerateShrCommand.java", "diffHunk": "@@ -0,0 +1,106 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.BaseException;\n+import com.microsoft.identity.common.exception.ClientException;\n+import com.microsoft.identity.common.exception.UiRequiredException;\n+import com.microsoft.identity.common.internal.commands.parameters.GenerateShrCommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+import com.microsoft.identity.common.internal.result.GenerateShrResult;\n+\n+import java.util.List;\n+\n+import static com.microsoft.identity.common.exception.ErrorStrings.NO_ACCOUNT_FOUND;\n+\n+/**\n+ * Command class to perform generation of AT-less SHRs on behalf of a user.\n+ */\n+public class GenerateShrCommand extends BaseCommand<GenerateShrResult> {\n+\n+    private static final String TAG = GenerateShrCommand.class.getSimpleName();\n+\n+    public GenerateShrCommand(@NonNull final GenerateShrCommandParameters parameters,\n+                              @NonNull final List<BaseController> controllers,\n+                              @NonNull final CommandCallback<GenerateShrResult, BaseException> callback,\n+                              @NonNull final String publicApiId) {\n+        super(parameters, controllers, callback, publicApiId);\n+    }\n+\n+    @Override\n+    public GenerateShrResult execute() throws Exception {\n+        final String methodName = \":execute\";\n+\n+        GenerateShrResult result = null;\n+        final GenerateShrCommandParameters parameters = (GenerateShrCommandParameters) getParameters();\n+\n+        // Iterate over our controllers, to service the request either locally or via the broker...\n+        BaseController controller;\n+        for (int ii = 0; ii < getControllers().size(); ii++) {\n+            controller = getControllers().get(ii);\n+\n+            com.microsoft.identity.common.internal.logging.Logger.verbose(\n+                    TAG + methodName,\n+                    \"Executing with controller: \"\n+                            + controller.getClass().getSimpleName()\n+            );\n+\n+            try {\n+                result = controller.generateSignedHttpRequest(parameters);\n+\n+                if (null != result.getErrorCode()) {\n+                    final String errorCode = result.getErrorCode();\n+                    final String errorMessage = result.getErrorMessage();\n+\n+                    if (NO_ACCOUNT_FOUND.equalsIgnoreCase(errorCode)) {\n+                        throw new UiRequiredException(errorCode, errorMessage);\n+                    } else {\n+                        throw new ClientException(errorCode, errorMessage);\n+                    }\n+                }\n+\n+            } catch (final UiRequiredException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89f1a2887b0ec4b45f384cedd8babb109e832f4d"}, "originalPosition": 84}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ec3f20f5c9ae770701016142399ca12db5786dd", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/6ec3f20f5c9ae770701016142399ca12db5786dd", "committedDate": "2020-11-06T19:59:53Z", "message": "Add TODOs for telemetry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a7cdc79c17488466505ff6cb895d42a4f2ad8a7", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/2a7cdc79c17488466505ff6cb895d42a4f2ad8a7", "committedDate": "2020-11-06T20:11:20Z", "message": "Bugfix for empty string key"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f0cf398d5315396066271e00a2013f81919059b", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/1f0cf398d5315396066271e00a2013f81919059b", "committedDate": "2020-11-06T20:24:31Z", "message": "Merge branch 'dev' into iambmelt/msal-1207"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f2bb807b1aae6c51ac3d8c6b246a9d9b0807ac0", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0f2bb807b1aae6c51ac3d8c6b246a9d9b0807ac0", "committedDate": "2020-11-06T20:26:43Z", "message": "Corrects comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45f71b25024961982d651d3da546a0fa8ab7959c", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/45f71b25024961982d651d3da546a0fa8ab7959c", "committedDate": "2020-11-06T20:28:59Z", "message": "Formatting fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d469c39534dc140e355ff3b00a514e496e1a2f3", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/7d469c39534dc140e355ff3b00a514e496e1a2f3", "committedDate": "2020-11-06T20:30:41Z", "message": "Corrects javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b0f892bda9ec9e2577db7eb5e5c775b71f90c53", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/3b0f892bda9ec9e2577db7eb5e5c775b71f90c53", "committedDate": "2020-11-06T20:32:54Z", "message": "Adding comment, explaining why the normally @NonNull AT is allowed to be\n@Nullable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88337fc33dbc613e5843d5daa4e36f5fc4b9825d", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/88337fc33dbc613e5843d5daa4e36f5fc4b9825d", "committedDate": "2020-11-06T20:34:05Z", "message": "Improving comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "590e03113450afe1b7e86bc7c8558c9cfd602bb4", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/590e03113450afe1b7e86bc7c8558c9cfd602bb4", "committedDate": "2020-11-06T20:35:58Z", "message": "Add comment explaining error payload in the result object"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd6c57e27831a8b7d406efc3a460931e6aa4961d", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/cd6c57e27831a8b7d406efc3a460931e6aa4961d", "committedDate": "2020-11-06T22:15:08Z", "message": "javadoc ctor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e986dd121ee4b8dfa70b07f863f3749d24d99fa", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/7e986dd121ee4b8dfa70b07f863f3749d24d99fa", "committedDate": "2020-11-06T22:38:29Z", "message": "Adding comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60aa8719a99fb31ae95930dab69386ed19d0ed77", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/60aa8719a99fb31ae95930dab69386ed19d0ed77", "committedDate": "2020-11-06T23:03:24Z", "message": "Javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "909c6c0d537f0ff863cff4f48e1d779936c9f1e6", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/909c6c0d537f0ff863cff4f48e1d779936c9f1e6", "committedDate": "2020-11-06T23:11:44Z", "message": "Refactor -- move PoP funcs to a util class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aede0aa29d87280fda3c00d5f3ca11700091c922", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/aede0aa29d87280fda3c00d5f3ca11700091c922", "committedDate": "2020-11-06T23:14:56Z", "message": "Merge branch 'dev' into iambmelt/msal-1207"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NTUxMzcy", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-525551372", "createdAt": "2020-11-06T23:18:33Z", "commit": {"oid": "aede0aa29d87280fda3c00d5f3ca11700091c922"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMzoxODozM1rOHvAZDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQyMzoxODozM1rOHvAZDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA1MTUzNQ==", "bodyText": "javadoc", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r519051535", "createdAt": "2020-11-06T23:18:33Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -628,4 +629,14 @@ public boolean getDeviceModeFromResultBundle(@NonNull final Bundle bundle) throw\n     public @NonNull ClientException getExceptionForEmptyResultBundle() {\n         return new ClientException(INVALID_BROKER_BUNDLE, \"Broker Result not returned from Broker.\");\n     }\n+\n+    public GenerateShrResult getGenerateShrResultFromResultBundle(@NonNull final Bundle resultBundle) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aede0aa29d87280fda3c00d5f3ca11700091c922"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ae490703e69399c53f0d95c2bbd5c1b207a2e76", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0ae490703e69399c53f0d95c2bbd5c1b207a2e76", "committedDate": "2020-11-06T23:54:27Z", "message": "Code simplification (make local flow behave like broker)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb32c15ee81c98ba6c66383e2c6077cd014c76e3", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/cb32c15ee81c98ba6c66383e2c6077cd014c76e3", "committedDate": "2020-11-07T01:00:39Z", "message": "Adds javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc73e1eb8d0b3a60e1f1947f72eb8dd3609c8afd", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/fc73e1eb8d0b3a60e1f1947f72eb8dd3609c8afd", "committedDate": "2020-11-07T01:08:06Z", "message": "Update path to make clearer this API is for MSAL consumption"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d26f277852dcaa7d02fd7e50b0611a6ce9dc45c", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/2d26f277852dcaa7d02fd7e50b0611a6ce9dc45c", "committedDate": "2020-11-07T01:33:18Z", "message": "Add support for additiona IPC strategies"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e97011e364f28ec3ccd4a4a5e986919566ea02f8", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/e97011e364f28ec3ccd4a4a5e986919566ea02f8", "committedDate": "2020-11-07T01:54:24Z", "message": "Increase the broker protocol version number for client_claims and\ngenerateShr. Update the changelog to document this fact"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27dbe428130ccbfb1030f62e9bd60e5d3c14a450", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/27dbe428130ccbfb1030f62e9bd60e5d3c14a450", "committedDate": "2020-11-07T01:59:54Z", "message": "Fix test compilation error"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NTg3MjUx", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-525587251", "createdAt": "2020-11-07T03:04:41Z", "commit": {"oid": "27dbe428130ccbfb1030f62e9bd60e5d3c14a450"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMzowNDo0MVrOHvCkNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwMzowNDo0MVrOHvCkNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTA4NzE1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // the embedded PoP keys. If not local user-state exists, the broker will be delegated to\n          \n          \n            \n                    // the embedded PoP keys. If no local user-state exists, the broker will be delegated to", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r519087159", "createdAt": "2020-11-07T03:04:41Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/GenerateShrCommand.java", "diffHunk": "@@ -0,0 +1,110 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.BaseException;\n+import com.microsoft.identity.common.exception.ClientException;\n+import com.microsoft.identity.common.exception.UiRequiredException;\n+import com.microsoft.identity.common.internal.commands.parameters.GenerateShrCommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+import com.microsoft.identity.common.internal.result.GenerateShrResult;\n+\n+import java.util.List;\n+\n+import static com.microsoft.identity.common.exception.ErrorStrings.NO_ACCOUNT_FOUND;\n+\n+/**\n+ * Command class to perform generation of AT-less SHRs on behalf of a user.\n+ */\n+public class GenerateShrCommand extends BaseCommand<GenerateShrResult> {\n+\n+    private static final String TAG = GenerateShrCommand.class.getSimpleName();\n+\n+    /**\n+     * Constructs a new GenerateShrCommand.\n+     *\n+     * @param parameters  The command's input parameters.\n+     * @param controllers The controllers on which to run this command.\n+     * @param callback    The command to notify once execution has completed.\n+     * @param publicApiId The public API ID of this command.\n+     */\n+    public GenerateShrCommand(@NonNull final GenerateShrCommandParameters parameters,\n+                              @NonNull final List<BaseController> controllers,\n+                              @NonNull final CommandCallback<GenerateShrResult, BaseException> callback,\n+                              @NonNull final String publicApiId) {\n+        super(parameters, controllers, callback, publicApiId);\n+    }\n+\n+    @Override\n+    public GenerateShrResult execute() throws Exception {\n+        final String methodName = \":execute\";\n+\n+        GenerateShrResult result = null;\n+        final GenerateShrCommandParameters parameters = (GenerateShrCommandParameters) getParameters();\n+\n+        // Iterate over our controllers, to service the request either locally or via the broker...\n+        // if the local (embedded) cache contains tokens for the supplied user, we will sign using\n+        // the embedded PoP keys. If not local user-state exists, the broker will be delegated to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27dbe428130ccbfb1030f62e9bd60e5d3c14a450"}, "originalPosition": 69}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bcec4f7d2a6210e25b34e4c69643b804ce24aa9", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/1bcec4f7d2a6210e25b34e4c69643b804ce24aa9", "committedDate": "2020-11-07T03:04:46Z", "message": "Update common/src/main/java/com/microsoft/identity/common/internal/commands/GenerateShrCommand.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1NjM1MjA0", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-525635204", "createdAt": "2020-11-07T07:38:51Z", "commit": {"oid": "1bcec4f7d2a6210e25b34e4c69643b804ce24aa9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwNzozODo1MVrOHvGULA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wN1QwNzozODo1MVrOHvGULA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTE0ODU4OA==", "bodyText": "TODO: run this error path in a manual test", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r519148588", "createdAt": "2020-11-07T07:38:51Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/GenerateShrCommand.java", "diffHunk": "@@ -0,0 +1,110 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.BaseException;\n+import com.microsoft.identity.common.exception.ClientException;\n+import com.microsoft.identity.common.exception.UiRequiredException;\n+import com.microsoft.identity.common.internal.commands.parameters.GenerateShrCommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+import com.microsoft.identity.common.internal.result.GenerateShrResult;\n+\n+import java.util.List;\n+\n+import static com.microsoft.identity.common.exception.ErrorStrings.NO_ACCOUNT_FOUND;\n+\n+/**\n+ * Command class to perform generation of AT-less SHRs on behalf of a user.\n+ */\n+public class GenerateShrCommand extends BaseCommand<GenerateShrResult> {\n+\n+    private static final String TAG = GenerateShrCommand.class.getSimpleName();\n+\n+    /**\n+     * Constructs a new GenerateShrCommand.\n+     *\n+     * @param parameters  The command's input parameters.\n+     * @param controllers The controllers on which to run this command.\n+     * @param callback    The command to notify once execution has completed.\n+     * @param publicApiId The public API ID of this command.\n+     */\n+    public GenerateShrCommand(@NonNull final GenerateShrCommandParameters parameters,\n+                              @NonNull final List<BaseController> controllers,\n+                              @NonNull final CommandCallback<GenerateShrResult, BaseException> callback,\n+                              @NonNull final String publicApiId) {\n+        super(parameters, controllers, callback, publicApiId);\n+    }\n+\n+    @Override\n+    public GenerateShrResult execute() throws Exception {\n+        final String methodName = \":execute\";\n+\n+        GenerateShrResult result = null;\n+        final GenerateShrCommandParameters parameters = (GenerateShrCommandParameters) getParameters();\n+\n+        // Iterate over our controllers, to service the request either locally or via the broker...\n+        // if the local (embedded) cache contains tokens for the supplied user, we will sign using\n+        // the embedded PoP keys. If no local user-state exists, the broker will be delegated to\n+        // where the same check is performed.\n+        BaseController controller;\n+        for (int ii = 0; ii < getControllers().size(); ii++) {\n+            controller = getControllers().get(ii);\n+\n+            com.microsoft.identity.common.internal.logging.Logger.verbose(\n+                    TAG + methodName,\n+                    \"Executing with controller: \"\n+                            + controller.getClass().getSimpleName()\n+            );\n+\n+            result = controller.generateSignedHttpRequest(parameters);\n+\n+            if (null != result.getErrorCode()) {\n+                final String errorCode = result.getErrorCode();\n+                final String errorMessage = result.getErrorMessage();\n+\n+                // To support a shared communication model between the local flow and the\n+                // broker flow, errors will be returned as properties of the result, instead\n+                // of as thrown Exceptions\n+                if (NO_ACCOUNT_FOUND.equalsIgnoreCase(errorCode)) {\n+                    if (getControllers().size() > ii + 1) {\n+                        // Try our next controller\n+                        continue;\n+                    } else {\n+                        throw new UiRequiredException(errorCode, errorMessage);\n+                    }\n+                } else {\n+                    throw new ClientException(errorCode, errorMessage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bcec4f7d2a6210e25b34e4c69643b804ce24aa9"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NTE5MzUz", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-526519353", "createdAt": "2020-11-09T18:07:35Z", "commit": {"oid": "1bcec4f7d2a6210e25b34e4c69643b804ce24aa9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODowNzozNVrOHv7K9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxODowNzozNVrOHv7K9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDAxNDU4Mw==", "bodyText": "Not required -- there is no interaction with the server here.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r520014583", "createdAt": "2020-11-09T18:07:35Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/GenerateShrCommand.java", "diffHunk": "@@ -0,0 +1,110 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.BaseException;\n+import com.microsoft.identity.common.exception.ClientException;\n+import com.microsoft.identity.common.exception.UiRequiredException;\n+import com.microsoft.identity.common.internal.commands.parameters.GenerateShrCommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+import com.microsoft.identity.common.internal.result.GenerateShrResult;\n+\n+import java.util.List;\n+\n+import static com.microsoft.identity.common.exception.ErrorStrings.NO_ACCOUNT_FOUND;\n+\n+/**\n+ * Command class to perform generation of AT-less SHRs on behalf of a user.\n+ */\n+public class GenerateShrCommand extends BaseCommand<GenerateShrResult> {\n+\n+    private static final String TAG = GenerateShrCommand.class.getSimpleName();\n+\n+    /**\n+     * Constructs a new GenerateShrCommand.\n+     *\n+     * @param parameters  The command's input parameters.\n+     * @param controllers The controllers on which to run this command.\n+     * @param callback    The command to notify once execution has completed.\n+     * @param publicApiId The public API ID of this command.\n+     */\n+    public GenerateShrCommand(@NonNull final GenerateShrCommandParameters parameters,\n+                              @NonNull final List<BaseController> controllers,\n+                              @NonNull final CommandCallback<GenerateShrResult, BaseException> callback,\n+                              @NonNull final String publicApiId) {\n+        super(parameters, controllers, callback, publicApiId);\n+    }\n+\n+    @Override\n+    public GenerateShrResult execute() throws Exception {\n+        final String methodName = \":execute\";\n+\n+        GenerateShrResult result = null;\n+        final GenerateShrCommandParameters parameters = (GenerateShrCommandParameters) getParameters();\n+\n+        // Iterate over our controllers, to service the request either locally or via the broker...\n+        // if the local (embedded) cache contains tokens for the supplied user, we will sign using\n+        // the embedded PoP keys. If no local user-state exists, the broker will be delegated to\n+        // where the same check is performed.\n+        BaseController controller;\n+        for (int ii = 0; ii < getControllers().size(); ii++) {\n+            controller = getControllers().get(ii);\n+\n+            com.microsoft.identity.common.internal.logging.Logger.verbose(\n+                    TAG + methodName,\n+                    \"Executing with controller: \"\n+                            + controller.getClass().getSimpleName()\n+            );\n+\n+            result = controller.generateSignedHttpRequest(parameters);\n+\n+            if (null != result.getErrorCode()) {\n+                final String errorCode = result.getErrorCode();\n+                final String errorMessage = result.getErrorMessage();\n+\n+                // To support a shared communication model between the local flow and the\n+                // broker flow, errors will be returned as properties of the result, instead\n+                // of as thrown Exceptions\n+                if (NO_ACCOUNT_FOUND.equalsIgnoreCase(errorCode)) {\n+                    if (getControllers().size() > ii + 1) {\n+                        // Try our next controller\n+                        continue;\n+                    } else {\n+                        throw new UiRequiredException(errorCode, errorMessage);\n+                    }\n+                } else {\n+                    throw new ClientException(errorCode, errorMessage);\n+                }\n+            }\n+        }\n+\n+        return result;\n+    }\n+\n+    @Override\n+    public boolean isEligibleForEstsTelemetry() {\n+        return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bcec4f7d2a6210e25b34e4c69643b804ce24aa9"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "938d478225fa5052f2df15046f9f39d091425acb", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/938d478225fa5052f2df15046f9f39d091425acb", "committedDate": "2020-11-10T01:31:04Z", "message": "Merge branch 'dev' into iambmelt/msal-1207"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9a2fcd4a74cded47d9f8b4c0d17628ecde3f422", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/f9a2fcd4a74cded47d9f8b4c0d17628ecde3f422", "committedDate": "2020-11-10T01:34:51Z", "message": "Add comment, clarify why no ESTS telemetry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a78d4a69b64c4a2fecbd61706cfdf717d8c5cbf", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/3a78d4a69b64c4a2fecbd61706cfdf717d8c5cbf", "committedDate": "2020-11-10T01:40:13Z", "message": "Resolve POSIX warning (no EOL)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d1c210a31b49228bf303b0c9275bc92998782eb", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/6d1c210a31b49228bf303b0c9275bc92998782eb", "committedDate": "2020-11-10T01:48:12Z", "message": "Merge branch 'dev' into iambmelt/msal-1207"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be3caa1bf8cd077512942b427abad2b82aa5e707", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/be3caa1bf8cd077512942b427abad2b82aa5e707", "committedDate": "2020-11-10T02:28:09Z", "message": "Adds unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcae65808d3c9827839d12a8d4cbe074d719ccdf", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/dcae65808d3c9827839d12a8d4cbe074d719ccdf", "committedDate": "2020-11-10T21:10:00Z", "message": "Merge branch 'dev' into iambmelt/msal-1207"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3ODQ3ODQ3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-527847847", "createdAt": "2020-11-11T04:07:44Z", "commit": {"oid": "dcae65808d3c9827839d12a8d4cbe074d719ccdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNDowNzo0NFrOHw9Z-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNDowNzo0NFrOHw9Z-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA5OTc2OA==", "bodyText": "How are we certain that the local controller is the first one in the list here?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r521099768", "createdAt": "2020-11-11T04:07:44Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/GenerateShrCommand.java", "diffHunk": "@@ -0,0 +1,111 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.BaseException;\n+import com.microsoft.identity.common.exception.ClientException;\n+import com.microsoft.identity.common.exception.UiRequiredException;\n+import com.microsoft.identity.common.internal.commands.parameters.GenerateShrCommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+import com.microsoft.identity.common.internal.result.GenerateShrResult;\n+\n+import java.util.List;\n+\n+import static com.microsoft.identity.common.exception.ErrorStrings.NO_ACCOUNT_FOUND;\n+\n+/**\n+ * Command class to perform generation of AT-less SHRs on behalf of a user.\n+ */\n+public class GenerateShrCommand extends BaseCommand<GenerateShrResult> {\n+\n+    private static final String TAG = GenerateShrCommand.class.getSimpleName();\n+\n+    /**\n+     * Constructs a new GenerateShrCommand.\n+     *\n+     * @param parameters  The command's input parameters.\n+     * @param controllers The controllers on which to run this command.\n+     * @param callback    The command to notify once execution has completed.\n+     * @param publicApiId The public API ID of this command.\n+     */\n+    public GenerateShrCommand(@NonNull final GenerateShrCommandParameters parameters,\n+                              @NonNull final List<BaseController> controllers,\n+                              @NonNull final CommandCallback<GenerateShrResult, BaseException> callback,\n+                              @NonNull final String publicApiId) {\n+        super(parameters, controllers, callback, publicApiId);\n+    }\n+\n+    @Override\n+    public GenerateShrResult execute() throws Exception {\n+        final String methodName = \":execute\";\n+\n+        GenerateShrResult result = null;\n+        final GenerateShrCommandParameters parameters = (GenerateShrCommandParameters) getParameters();\n+\n+        // Iterate over our controllers, to service the request either locally or via the broker...\n+        // if the local (embedded) cache contains tokens for the supplied user, we will sign using\n+        // the embedded PoP keys. If no local user-state exists, the broker will be delegated to\n+        // where the same check is performed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcae65808d3c9827839d12a8d4cbe074d719ccdf"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3ODQ4MjU5", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-527848259", "createdAt": "2020-11-11T04:09:08Z", "commit": {"oid": "dcae65808d3c9827839d12a8d4cbe074d719ccdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNDowOTowOFrOHw9bOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNDowOTowOFrOHw9bOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEwMDA4OQ==", "bodyText": "what do we mean by shared communication model? are these controllers talking to each other?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r521100089", "createdAt": "2020-11-11T04:09:08Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/GenerateShrCommand.java", "diffHunk": "@@ -0,0 +1,111 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.BaseException;\n+import com.microsoft.identity.common.exception.ClientException;\n+import com.microsoft.identity.common.exception.UiRequiredException;\n+import com.microsoft.identity.common.internal.commands.parameters.GenerateShrCommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+import com.microsoft.identity.common.internal.result.GenerateShrResult;\n+\n+import java.util.List;\n+\n+import static com.microsoft.identity.common.exception.ErrorStrings.NO_ACCOUNT_FOUND;\n+\n+/**\n+ * Command class to perform generation of AT-less SHRs on behalf of a user.\n+ */\n+public class GenerateShrCommand extends BaseCommand<GenerateShrResult> {\n+\n+    private static final String TAG = GenerateShrCommand.class.getSimpleName();\n+\n+    /**\n+     * Constructs a new GenerateShrCommand.\n+     *\n+     * @param parameters  The command's input parameters.\n+     * @param controllers The controllers on which to run this command.\n+     * @param callback    The command to notify once execution has completed.\n+     * @param publicApiId The public API ID of this command.\n+     */\n+    public GenerateShrCommand(@NonNull final GenerateShrCommandParameters parameters,\n+                              @NonNull final List<BaseController> controllers,\n+                              @NonNull final CommandCallback<GenerateShrResult, BaseException> callback,\n+                              @NonNull final String publicApiId) {\n+        super(parameters, controllers, callback, publicApiId);\n+    }\n+\n+    @Override\n+    public GenerateShrResult execute() throws Exception {\n+        final String methodName = \":execute\";\n+\n+        GenerateShrResult result = null;\n+        final GenerateShrCommandParameters parameters = (GenerateShrCommandParameters) getParameters();\n+\n+        // Iterate over our controllers, to service the request either locally or via the broker...\n+        // if the local (embedded) cache contains tokens for the supplied user, we will sign using\n+        // the embedded PoP keys. If no local user-state exists, the broker will be delegated to\n+        // where the same check is performed.\n+        BaseController controller;\n+        for (int ii = 0; ii < getControllers().size(); ii++) {\n+            controller = getControllers().get(ii);\n+\n+            com.microsoft.identity.common.internal.logging.Logger.verbose(\n+                    TAG + methodName,\n+                    \"Executing with controller: \"\n+                            + controller.getClass().getSimpleName()\n+            );\n+\n+            result = controller.generateSignedHttpRequest(parameters);\n+\n+            if (null != result.getErrorCode()) {\n+                final String errorCode = result.getErrorCode();\n+                final String errorMessage = result.getErrorMessage();\n+\n+                // To support a shared communication model between the local flow and the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcae65808d3c9827839d12a8d4cbe074d719ccdf"}, "originalPosition": 87}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3ODQ5OTA2", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-527849906", "createdAt": "2020-11-11T04:15:01Z", "commit": {"oid": "dcae65808d3c9827839d12a8d4cbe074d719ccdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNDoxNTowMlrOHw9hAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNDoxNTowMlrOHw9hAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEwMTU2OQ==", "bodyText": "needs formatting", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r521101569", "createdAt": "2020-11-11T04:15:02Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/request/MsalBrokerRequestAdapter.java", "diffHunk": "@@ -597,11 +584,40 @@ public Bundle getRequestBundleForRemoveAccount(@NonNull final RemoveAccountComma\n     public Bundle getRequestBundleForRemoveAccountFromSharedDevice(@NonNull final RemoveAccountCommandParameters parameters,\n                                                                    @Nullable final String negotiatedBrokerProtocolVersion) {\n         final Bundle requestBundle = new Bundle();\n-        requestBundle.putString(\n-                AuthenticationConstants.Broker.NEGOTIATED_BP_VERSION_KEY,\n-                negotiatedBrokerProtocolVersion\n+        requestBundle.putString(NEGOTIATED_BP_VERSION_KEY, negotiatedBrokerProtocolVersion);\n+\n+        return requestBundle;\n+    }\n+\n+    /**\n+     * Method to construct a request {@link Bundle} for broker generateShr", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcae65808d3c9827839d12a8d4cbe074d719ccdf"}, "originalPosition": 215}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3ODUwMjUz", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-527850253", "createdAt": "2020-11-11T04:16:12Z", "commit": {"oid": "dcae65808d3c9827839d12a8d4cbe074d719ccdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNDoxNjoxMlrOHw9iOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNDoxNjoxMlrOHw9iOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEwMTg4MA==", "bodyText": "could potentially use lombok's @Getter annotation in this class", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r521101880", "createdAt": "2020-11-11T04:16:12Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/result/GenerateShrResult.java", "diffHunk": "@@ -0,0 +1,117 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.result;\n+\n+import androidx.annotation.Nullable;\n+\n+import com.google.gson.annotations.SerializedName;\n+import com.microsoft.identity.common.exception.ErrorStrings;\n+\n+/**\n+ * The result of a generateShr request.\n+ */\n+public class GenerateShrResult {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcae65808d3c9827839d12a8d4cbe074d719ccdf"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3ODUwMzI3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-527850327", "createdAt": "2020-11-11T04:16:30Z", "commit": {"oid": "dcae65808d3c9827839d12a8d4cbe074d719ccdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNDoxNjozMVrOHw9icw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwNDoxNjozMVrOHw9icw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTEwMTkzOQ==", "bodyText": "seems to need formatting", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r521101939", "createdAt": "2020-11-11T04:16:31Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -628,4 +629,20 @@ public boolean getDeviceModeFromResultBundle(@NonNull final Bundle bundle) throw\n     public @NonNull ClientException getExceptionForEmptyResultBundle() {\n         return new ClientException(INVALID_BROKER_BUNDLE, \"Broker Result not returned from Broker.\");\n     }\n+\n+    /**\n+     * Deserializes the {@link GenerateShrResult} object from the broker response {@link Bundle}.\n+     * @param resultBundle The result Bundle produced by the broker.\n+     * @return The deserialized GenerateShrResult object containing the result (or corresponding\n+     * error).\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcae65808d3c9827839d12a8d4cbe074d719ccdf"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NTcyMTk0", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-528572194", "createdAt": "2020-11-11T22:10:50Z", "commit": {"oid": "dcae65808d3c9827839d12a8d4cbe074d719ccdf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjoxMDo1MFrOHxgIzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMjoxMDo1MFrOHxgIzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY2ODgxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // To support a shared communication model between the local flow and the\n          \n          \n            \n                            // To support a consistent communication model between the local flow and the", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r521668815", "createdAt": "2020-11-11T22:10:50Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/commands/GenerateShrCommand.java", "diffHunk": "@@ -0,0 +1,111 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+package com.microsoft.identity.common.internal.commands;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.common.exception.BaseException;\n+import com.microsoft.identity.common.exception.ClientException;\n+import com.microsoft.identity.common.exception.UiRequiredException;\n+import com.microsoft.identity.common.internal.commands.parameters.GenerateShrCommandParameters;\n+import com.microsoft.identity.common.internal.controllers.BaseController;\n+import com.microsoft.identity.common.internal.result.GenerateShrResult;\n+\n+import java.util.List;\n+\n+import static com.microsoft.identity.common.exception.ErrorStrings.NO_ACCOUNT_FOUND;\n+\n+/**\n+ * Command class to perform generation of AT-less SHRs on behalf of a user.\n+ */\n+public class GenerateShrCommand extends BaseCommand<GenerateShrResult> {\n+\n+    private static final String TAG = GenerateShrCommand.class.getSimpleName();\n+\n+    /**\n+     * Constructs a new GenerateShrCommand.\n+     *\n+     * @param parameters  The command's input parameters.\n+     * @param controllers The controllers on which to run this command.\n+     * @param callback    The command to notify once execution has completed.\n+     * @param publicApiId The public API ID of this command.\n+     */\n+    public GenerateShrCommand(@NonNull final GenerateShrCommandParameters parameters,\n+                              @NonNull final List<BaseController> controllers,\n+                              @NonNull final CommandCallback<GenerateShrResult, BaseException> callback,\n+                              @NonNull final String publicApiId) {\n+        super(parameters, controllers, callback, publicApiId);\n+    }\n+\n+    @Override\n+    public GenerateShrResult execute() throws Exception {\n+        final String methodName = \":execute\";\n+\n+        GenerateShrResult result = null;\n+        final GenerateShrCommandParameters parameters = (GenerateShrCommandParameters) getParameters();\n+\n+        // Iterate over our controllers, to service the request either locally or via the broker...\n+        // if the local (embedded) cache contains tokens for the supplied user, we will sign using\n+        // the embedded PoP keys. If no local user-state exists, the broker will be delegated to\n+        // where the same check is performed.\n+        BaseController controller;\n+        for (int ii = 0; ii < getControllers().size(); ii++) {\n+            controller = getControllers().get(ii);\n+\n+            com.microsoft.identity.common.internal.logging.Logger.verbose(\n+                    TAG + methodName,\n+                    \"Executing with controller: \"\n+                            + controller.getClass().getSimpleName()\n+            );\n+\n+            result = controller.generateSignedHttpRequest(parameters);\n+\n+            if (null != result.getErrorCode()) {\n+                final String errorCode = result.getErrorCode();\n+                final String errorMessage = result.getErrorMessage();\n+\n+                // To support a shared communication model between the local flow and the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcae65808d3c9827839d12a8d4cbe074d719ccdf"}, "originalPosition": 87}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd304366795494295883bda82ee352f53f8a35c8", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/fd304366795494295883bda82ee352f53f8a35c8", "committedDate": "2020-11-11T22:10:54Z", "message": "Update common/src/main/java/com/microsoft/identity/common/internal/commands/GenerateShrCommand.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e99e21a062b341896bf07c6bb11930d2eae6c77", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/2e99e21a062b341896bf07c6bb11930d2eae6c77", "committedDate": "2020-11-11T22:20:15Z", "message": "Add lombok annots to remove boilerplate code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a98d10d0e05d3440aa7b5829f2c7dcf4ffcc6aef", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/a98d10d0e05d3440aa7b5829f2c7dcf4ffcc6aef", "committedDate": "2020-11-11T22:26:07Z", "message": "Tune up javadoc + run formatter + import scrubber"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ad1ad613d45e16b2cc0cba623a2e74998f0dcf7", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/9ad1ad613d45e16b2cc0cba623a2e74998f0dcf7", "committedDate": "2020-11-11T22:28:21Z", "message": "runs formatter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NTk4ODQx", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-528598841", "createdAt": "2020-11-11T23:05:20Z", "commit": {"oid": "9ad1ad613d45e16b2cc0cba623a2e74998f0dcf7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMzowNToyMFrOHxhekA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMzowNToyMFrOHxhekA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY5MDc2OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public static final String AUTHSCHEME_PARAMS_POP = \"pop_parameters\";\n          \n          \n            \n                    public static final String AUTH_SCHEME_PARAMS_POP = \"pop_parameters\";", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r521690768", "createdAt": "2020-11-11T23:05:20Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/adal/internal/AuthenticationConstants.java", "diffHunk": "@@ -1209,7 +1214,12 @@\n          * Time out for the AccountManager's remove account operation in broker.\n          */\n         public static final int ACCOUNT_MANAGER_REMOVE_ACCOUNT_TIMEOUT_IN_MILLISECONDS = 5000;\n-        \n+\n+        /**\n+         * The Bundle key name of serialized parameters for the PoP auth scheme.\n+         */\n+        public static final String AUTHSCHEME_PARAMS_POP = \"pop_parameters\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ad1ad613d45e16b2cc0cba623a2e74998f0dcf7"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NTk5ODA5", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-528599809", "createdAt": "2020-11-11T23:07:41Z", "commit": {"oid": "9ad1ad613d45e16b2cc0cba623a2e74998f0dcf7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6b06016dcda4d5a0cfbbadaac7af301adc584ec", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/f6b06016dcda4d5a0cfbbadaac7af301adc584ec", "committedDate": "2020-11-11T23:34:28Z", "message": "Rename constant"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NjA4OTA0", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#pullrequestreview-529608904", "createdAt": "2020-11-13T00:22:29Z", "commit": {"oid": "f6b06016dcda4d5a0cfbbadaac7af301adc584ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDoyMjoyOVrOHyUW6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDoyMjoyOVrOHyUW6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUyNDM5Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - (Requires minimum_required_broker_protocol_version of 6.0+) Adds support for client_claims in PoP token requests.\n          \n          \n            \n            - (Requires minimum_required_broker_protocol_version of 6.0+) Adds support for generating SignedHttpRequests (SHRs) without embedding an AT.\n          \n          \n            \n            - Bumped MSAL Broker Protocol version to 6.0\n          \n          \n            \n            - (Requires minimum_required_broker_protocol_version of 6.0+) Adds support for client_claims in PoP token requests.\n          \n          \n            \n            - (Requires minimum_required_broker_protocol_version of 6.0+) Adds support for generating SignedHttpRequests (SHRs) without embedding an AT.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1111#discussion_r522524392", "createdAt": "2020-11-13T00:22:29Z", "author": {"login": "shahzaibj"}, "path": "changelog.txt", "diffHunk": "@@ -21,6 +21,8 @@ Version 3.0.6\n     - [Part 5.5] make changes to support the Broker API work (#1101)\n - Make change to support Broker API's updateBrokerRT() functionality (#1107).\n - Introduce a cache for Hello() protocol (#1108)\n+- (Requires minimum_required_broker_protocol_version of 6.0+) Adds support for client_claims in PoP token requests.\n+- (Requires minimum_required_broker_protocol_version of 6.0+) Adds support for generating SignedHttpRequests (SHRs) without embedding an AT.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6b06016dcda4d5a0cfbbadaac7af301adc584ec"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa9195581a0f6f4945b5495193b0165898391b11", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/fa9195581a0f6f4945b5495193b0165898391b11", "committedDate": "2020-11-13T02:33:33Z", "message": "Update changelog.txt\n\nCo-authored-by: Shahzaib <37125644+shahzaibj@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1806efa7706058ca85b673cddc43cf0a90142c0d", "author": {"user": {"login": "iambmelt", "name": "Brian Melton-Grace"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/1806efa7706058ca85b673cddc43cf0a90142c0d", "committedDate": "2020-11-13T02:42:57Z", "message": "Update constants for generateShr public API ID"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1414, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}