{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5MjQ4MDAx", "number": 1025, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNjo1NDozNFrOEgdjIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNzoyODo0OFrOEgeH6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNDc0MDE5OnYy", "diffSide": "RIGHT", "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/kusto/TestResultFileUtils.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNjo1NDozNFrOHNVf0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNzowNzozNVrOHNV2Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc0NTc0Nw==", "bodyText": "Maybe close in a finally block.  Android studio might be able to desugar a try-with-resources for you, which would be nice.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1025#discussion_r483745747", "createdAt": "2020-09-04T16:54:34Z", "author": {"login": "AdamBJohnsonx"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/kusto/TestResultFileUtils.java", "diffHunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.internal.testutils.kusto;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+\n+/**\n+ * Utilities to interact with test result file during android tests.\n+ */\n+public class TestResultFileUtils {\n+\n+    public final static String TEST_RESULT_FILE_NAME = \"test-results.csv\";\n+\n+    /**\n+     * Get the file containing the android test results.\n+     *\n+     * @return a File object containing the android test results\n+     */\n+    public static File getTestResultFile() {\n+        final File parent = new File(System.getProperty(\"user.home\"));\n+        return new File(parent, TEST_RESULT_FILE_NAME);\n+    }\n+\n+    /**\n+     * Write android client test results to a csv file.\n+     *\n+     * @param data the test data that needs to be written to csv\n+     */\n+    public static void writeTestResultsToCsv(@NonNull final EstsKustoClientTestTableData data) {\n+        final File testResultFile = getTestResultFile();\n+        try {\n+            // create FileWriter object with file as parameter\n+            final FileWriter outputFile = new FileWriter(testResultFile, true);\n+\n+            // create CSVWriter object with FileWriter object as parameter\n+            final KustoTableDataCsvWriter writer = new KustoTableDataCsvWriter(outputFile);\n+\n+            writer.writeNext(data);\n+\n+            // closing writer connection\n+            writer.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2eb86b954ec3ebf493ec1516b65eecc3b62d31c"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc0ODgwNg==", "bodyText": "Even that would have to wrapped in a try catch block then I think because close throws an IOException", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1025#discussion_r483748806", "createdAt": "2020-09-04T17:01:20Z", "author": {"login": "shahzaibj"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/kusto/TestResultFileUtils.java", "diffHunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.internal.testutils.kusto;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+\n+/**\n+ * Utilities to interact with test result file during android tests.\n+ */\n+public class TestResultFileUtils {\n+\n+    public final static String TEST_RESULT_FILE_NAME = \"test-results.csv\";\n+\n+    /**\n+     * Get the file containing the android test results.\n+     *\n+     * @return a File object containing the android test results\n+     */\n+    public static File getTestResultFile() {\n+        final File parent = new File(System.getProperty(\"user.home\"));\n+        return new File(parent, TEST_RESULT_FILE_NAME);\n+    }\n+\n+    /**\n+     * Write android client test results to a csv file.\n+     *\n+     * @param data the test data that needs to be written to csv\n+     */\n+    public static void writeTestResultsToCsv(@NonNull final EstsKustoClientTestTableData data) {\n+        final File testResultFile = getTestResultFile();\n+        try {\n+            // create FileWriter object with file as parameter\n+            final FileWriter outputFile = new FileWriter(testResultFile, true);\n+\n+            // create CSVWriter object with FileWriter object as parameter\n+            final KustoTableDataCsvWriter writer = new KustoTableDataCsvWriter(outputFile);\n+\n+            writer.writeNext(data);\n+\n+            // closing writer connection\n+            writer.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc0NTc0Nw=="}, "originalCommit": {"oid": "a2eb86b954ec3ebf493ec1516b65eecc3b62d31c"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc1MTQ0Mg==", "bodyText": "That's why innumerable people have written closeSafely methods that just catch and swallow those things.  IIt doesn't really matter, though, I suppose.  Nothing is going to flag the resource leak here.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1025#discussion_r483751442", "createdAt": "2020-09-04T17:07:35Z", "author": {"login": "AdamBJohnsonx"}, "path": "testutils/src/main/java/com/microsoft/identity/internal/testutils/kusto/TestResultFileUtils.java", "diffHunk": "@@ -0,0 +1,70 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.internal.testutils.kusto;\n+\n+import androidx.annotation.NonNull;\n+\n+import java.io.File;\n+import java.io.FileWriter;\n+import java.io.IOException;\n+\n+/**\n+ * Utilities to interact with test result file during android tests.\n+ */\n+public class TestResultFileUtils {\n+\n+    public final static String TEST_RESULT_FILE_NAME = \"test-results.csv\";\n+\n+    /**\n+     * Get the file containing the android test results.\n+     *\n+     * @return a File object containing the android test results\n+     */\n+    public static File getTestResultFile() {\n+        final File parent = new File(System.getProperty(\"user.home\"));\n+        return new File(parent, TEST_RESULT_FILE_NAME);\n+    }\n+\n+    /**\n+     * Write android client test results to a csv file.\n+     *\n+     * @param data the test data that needs to be written to csv\n+     */\n+    public static void writeTestResultsToCsv(@NonNull final EstsKustoClientTestTableData data) {\n+        final File testResultFile = getTestResultFile();\n+        try {\n+            // create FileWriter object with file as parameter\n+            final FileWriter outputFile = new FileWriter(testResultFile, true);\n+\n+            // create CSVWriter object with FileWriter object as parameter\n+            final KustoTableDataCsvWriter writer = new KustoTableDataCsvWriter(outputFile);\n+\n+            writer.writeNext(data);\n+\n+            // closing writer connection\n+            writer.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc0NTc0Nw=="}, "originalCommit": {"oid": "a2eb86b954ec3ebf493ec1516b65eecc3b62d31c"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNDgzNDMyOnYy", "diffSide": "RIGHT", "path": "testutils/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNzoyODo0OFrOHNWZUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNzozNzowNlrOHNWnmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc2MDQ2NQ==", "bodyText": "nit: if we're OK with 1 and Y also being true things, then this can all be s == null ? false : s.toBoolean()", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1025#discussion_r483760465", "createdAt": "2020-09-04T17:28:48Z", "author": {"login": "AdamBJohnsonx"}, "path": "testutils/build.gradle", "diffHunk": "@@ -54,8 +61,17 @@ dependencies {\n     implementation \"com.google.code.gson:gson:$rootProject.ext.gsonVersion\"\n     implementation \"com.nimbusds:nimbus-jose-jwt:$rootProject.ext.nimbusVersion\"\n     implementation 'androidx.appcompat:appcompat:1.0.2'\n-    testImplementation 'junit:junit:4.12'\n-    testImplementation \"org.robolectric:robolectric:$rootProject.ext.robolectricVersion\"\n-    androidTestImplementation 'androidx.test:runner:1.2.0'\n-    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\n+    implementation \"junit:junit:$rootProject.ext.junitVersion\"\n+    compileOnly \"org.projectlombok:lombok:$rootProject.ext.lombokVersion\"\n+    annotationProcessor \"org.projectlombok:lombok:$rootProject.ext.lombokVersion\"\n+}\n+\n+static boolean getBoolean(final String s) {\n+    if (s == null || s == \"\") {\n+        return false;\n+    } else if (s.equalsIgnoreCase(\"true\")) {\n+        return true;\n+    } else {\n+        return false;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2eb86b954ec3ebf493ec1516b65eecc3b62d31c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc2NDEyMA==", "bodyText": "Addressed here: fbb60c3", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1025#discussion_r483764120", "createdAt": "2020-09-04T17:37:06Z", "author": {"login": "shahzaibj"}, "path": "testutils/build.gradle", "diffHunk": "@@ -54,8 +61,17 @@ dependencies {\n     implementation \"com.google.code.gson:gson:$rootProject.ext.gsonVersion\"\n     implementation \"com.nimbusds:nimbus-jose-jwt:$rootProject.ext.nimbusVersion\"\n     implementation 'androidx.appcompat:appcompat:1.0.2'\n-    testImplementation 'junit:junit:4.12'\n-    testImplementation \"org.robolectric:robolectric:$rootProject.ext.robolectricVersion\"\n-    androidTestImplementation 'androidx.test:runner:1.2.0'\n-    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\n+    implementation \"junit:junit:$rootProject.ext.junitVersion\"\n+    compileOnly \"org.projectlombok:lombok:$rootProject.ext.lombokVersion\"\n+    annotationProcessor \"org.projectlombok:lombok:$rootProject.ext.lombokVersion\"\n+}\n+\n+static boolean getBoolean(final String s) {\n+    if (s == null || s == \"\") {\n+        return false;\n+    } else if (s.equalsIgnoreCase(\"true\")) {\n+        return true;\n+    } else {\n+        return false;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzc2MDQ2NQ=="}, "originalCommit": {"oid": "a2eb86b954ec3ebf493ec1516b65eecc3b62d31c"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2251, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}