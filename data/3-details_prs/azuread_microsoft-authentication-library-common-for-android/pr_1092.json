{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NjU4NTUw", "number": 1092, "title": "[IPC part 3] Refactor AccountManager Strategy.", "bodyText": "part 1: #1088\npart 2: #1090\n\nAdd AccountManagerAddAccountStrategy (mostly extracted from BrokerAccountManagerStrategy, which is now gone).", "createdAt": "2020-10-25T20:41:57Z", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1092", "merged": true, "mergeCommit": {"oid": "82c71513345c5b6efab89b5f9501fd2b7f61ec06"}, "closed": true, "closedAt": "2020-10-27T06:35:08Z", "author": {"login": "rpdome"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWY4okgFqTUxNzA1NjU0Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWgG6ggBqjM5MjM3MDQ2Nzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MDU2NTQy", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1092#pullrequestreview-517056542", "createdAt": "2020-10-26T18:18:48Z", "commit": {"oid": "fb3c0600fcd935deab9f175a11411d374e81158a"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODoxODo0OFrOHocmlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxODo0MTowMFrOHodcjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3MzcxOA==", "bodyText": "Should we define ClientException.INVALID_BROKER_INTENT?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1092#discussion_r512173718", "createdAt": "2020-10-26T18:18:48Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -495,13 +498,15 @@\n                 ErrorStrings.UNSUPPORTED_BROKER_VERSION_ERROR_MESSAGE);\n     }\n \n-    public @NonNull Intent getIntentForInteractiveRequestFromResultBundle(@NonNull final Bundle resultBundle) throws ClientException {\n-        final String packageName = resultBundle.getString(BROKER_PACKAGE_NAME);\n-        final String className = resultBundle.getString(BROKER_ACTIVITY_NAME);\n \n+    public @NonNull Intent getIntentForInteractiveRequestFromResultBundle( @NonNull final Bundle resultBundle) throws ClientException {\n+        final Bundle interactiveRequestBundle = extractInteractiveRequestBundleFromResultBundle(resultBundle);\n+\n+        final String packageName = interactiveRequestBundle.getString(BROKER_PACKAGE_NAME);\n+        final String className = interactiveRequestBundle.getString(BROKER_ACTIVITY_NAME);\n         if (StringUtil.isEmpty(packageName) ||\n                 StringUtil.isEmpty(className)) {\n-            throw new ClientException(\"Unexpected error. Content of Authorization Intent's package and class name should not be null.\");\n+            throw new ClientException(ClientException.UNKNOWN_ERROR, \"Content of Authorization Intent's package and class name should not be null.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb3c0600fcd935deab9f175a11411d374e81158a"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3NDU1Mg==", "bodyText": "Under what circumstances will this return null?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1092#discussion_r512174552", "createdAt": "2020-10-26T18:20:13Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/util/ProcessUtil.java", "diffHunk": "@@ -57,8 +60,7 @@ public static boolean isBrokerProcess(@NonNull final Context context) {\n     /**\n      * Returns the running process name.\n      */\n-    @Nullable\n-    private static String getProcessName(@NonNull final Context context) {\n+    private static @Nullable String getProcessName(@NonNull final Context context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb3c0600fcd935deab9f175a11411d374e81158a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE3NTYzNg==", "bodyText": "I'm not sure what the difference would be if we just said if (null != Looper.myLooper()) ?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1092#discussion_r512175636", "createdAt": "2020-10-26T18:21:59Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/util/ProcessUtil.java", "diffHunk": "@@ -72,4 +74,15 @@ private static String getProcessName(@NonNull final Context context) {\n \n         return null;\n     }\n+\n+    /**\n+     * Returns a handler based on the current looper.\n+     */\n+    public static @NonNull Handler getPreferredHandler() {\n+        if (null != Looper.myLooper() && Looper.getMainLooper() != Looper.myLooper()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb3c0600fcd935deab9f175a11411d374e81158a"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4NTcxNw==", "bodyText": "Should we put this into a method on BrokerOperationBundle instead of putting it here?  Maybe putRequestString(key, value) that could contain all of this logic (check if the request bundle is created, create if necessary, add appropriate string under the correct specified key)?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1092#discussion_r512185717", "createdAt": "2020-10-26T18:38:17Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/broker/ipc/AccountManagerAddAccountStrategy.java", "diffHunk": "@@ -0,0 +1,103 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.common.internal.broker.ipc;\n+\n+import android.accounts.AccountManager;\n+import android.accounts.AccountManagerFuture;\n+import android.accounts.AuthenticatorException;\n+import android.accounts.OperationCanceledException;\n+import android.annotation.SuppressLint;\n+import android.content.Context;\n+import android.content.Intent;\n+import android.os.Bundle;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.microsoft.identity.common.adal.internal.AuthenticationConstants;\n+import com.microsoft.identity.common.exception.BaseException;\n+import com.microsoft.identity.common.exception.BrokerCommunicationException;\n+import com.microsoft.identity.common.exception.ClientException;\n+import com.microsoft.identity.common.internal.logging.Logger;\n+import com.microsoft.identity.common.internal.util.ProcessUtil;\n+\n+import java.io.IOException;\n+\n+/**\n+ * A strategy for communicating with the targeted broker via AccountManager's addAccount().\n+ *\n+ * NOTE: SuppressLint is added because this API requires MANAGE_ACCOUNTS for API<= 22.\n+ * AccountManagerUtil.canUseAccountManagerOperation() will validate that.\n+ * */\n+\n+@SuppressLint(\"MissingPermission\")\n+public class AccountManagerAddAccountStrategy implements IIpcStrategy {\n+    private static final String TAG = AccountManagerAddAccountStrategy.class.getSimpleName();\n+\n+    private final Context mContext;\n+\n+    public AccountManagerAddAccountStrategy(final Context context) {\n+        mContext = context;\n+    }\n+\n+    @Override\n+    @Nullable public Bundle communicateToBroker(@NonNull final BrokerOperationBundle brokerOperationBundle)\n+            throws BaseException {\n+        final String methodName = brokerOperationBundle.getOperation().name();\n+        try {\n+            final AccountManagerFuture<Bundle> resultBundle =\n+                    AccountManager.get(mContext)\n+                            .addAccount(\n+                                    AuthenticationConstants.Broker.BROKER_ACCOUNT_TYPE,\n+                                    AuthenticationConstants.Broker.AUTHTOKEN_TYPE,\n+                                    null,\n+                                    getAccountManagerBundle(brokerOperationBundle),\n+                                    null,\n+                                    null,\n+                                    ProcessUtil.getPreferredHandler());\n+\n+            Logger.verbose(TAG + methodName, \"Received result from broker\");\n+            return resultBundle.getResult();\n+        } catch (final AuthenticatorException | IOException | OperationCanceledException e) {\n+            Logger.error(TAG + methodName, e.getMessage(), e);\n+            throw new BrokerCommunicationException(\"Failed to connect to AccountManager\", e);\n+        }\n+    }\n+\n+    /**\n+     * Packs the response bundle with the account manager key.\n+     */\n+    public Bundle getAccountManagerBundle(@NonNull final BrokerOperationBundle brokerOperationBundle)\n+            throws BrokerCommunicationException {\n+        Bundle requestBundle = brokerOperationBundle.getBundle();\n+        if (requestBundle == null) {\n+            requestBundle = new Bundle();\n+        }\n+\n+        requestBundle.putString(\n+                AuthenticationConstants.Broker.BROKER_ACCOUNT_MANAGER_OPERATION_KEY,\n+                brokerOperationBundle.getAccountManagerAddAccountOperationKey());\n+\n+        return requestBundle;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb3c0600fcd935deab9f175a11411d374e81158a"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjE4NzUzNQ==", "bodyText": "Is there a way to be explicit about when we want to have this behavior (ONLY when talking over accountManager) rather than implicit, so that it doesn't become an unintended feature?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1092#discussion_r512187535", "createdAt": "2020-10-26T18:41:00Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -510,10 +515,22 @@\n                 packageName,\n                 className\n         );\n-        intent.putExtras(resultBundle);\n+        intent.putExtras(interactiveRequestBundle);\n         return intent;\n     }\n \n+    /**\n+     * AccountManager strategy is currently returning result in a different format compared with the other strategies.\n+     * We should make sure this does NOT happen going forward.\n+     */\n+    public Bundle extractInteractiveRequestBundleFromResultBundle(@NonNull final Bundle resultBundle) {\n+        final Intent interactiveRequestIntent = resultBundle.getParcelable(AccountManager.KEY_INTENT);\n+        if (interactiveRequestIntent != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb3c0600fcd935deab9f175a11411d374e81158a"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f5838a67edc4d46584f8c5f528dd818ef50d7fd", "author": {"user": {"login": "rpdome", "name": "Dome Pongmongkol"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/5f5838a67edc4d46584f8c5f528dd818ef50d7fd", "committedDate": "2020-10-27T03:07:52Z", "message": "[Part 3] Refactor AccountManager Strategy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72f3289b0a036f49ef12351d7033e260ee0a92fb", "author": {"user": {"login": "rpdome", "name": "Dome Pongmongkol"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/72f3289b0a036f49ef12351d7033e260ee0a92fb", "committedDate": "2020-10-27T01:41:56Z", "message": "address comments"}, "afterCommit": {"oid": "5f5838a67edc4d46584f8c5f528dd818ef50d7fd", "author": {"user": {"login": "rpdome", "name": "Dome Pongmongkol"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/5f5838a67edc4d46584f8c5f528dd818ef50d7fd", "committedDate": "2020-10-27T03:07:52Z", "message": "[Part 3] Refactor AccountManager Strategy"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1395, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}