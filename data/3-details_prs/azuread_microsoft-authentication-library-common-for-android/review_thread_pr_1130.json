{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMzcwNTc3", "number": 1130, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzoyNDo1NlrOE6rP2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODo1ODoxN1rOE7rNAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5OTYxNDM1OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/migration/TokenCacheItemMigrationAdapter.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzoyNDo1NlrOH148bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNDo1ODoxMFrOH2in0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI2OTU0OA==", "bodyText": "Why changing this?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1130#discussion_r526269548", "createdAt": "2020-11-18T17:24:56Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/migration/TokenCacheItemMigrationAdapter.java", "diffHunk": "@@ -184,7 +185,7 @@ public static boolean tryFociTokenWithGivenClientId(@SuppressWarnings(WarningTyp\n         final MicrosoftStsOAuth2Strategy strategy = new MicrosoftStsOAuth2Strategy(config, strategyParameters);\n \n         final String refreshToken = refreshTokenRecord.getSecret();\n-        final String scopes = BaseController.getDelimitedDefaultScopeString();\n+        final String scopes = AuthenticationConstants.OAuth2Scopes.OPEN_ID_SCOPE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c375c8b77ffba24e6dfc1c653a6150a5193cca"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ0OTIwOQ==", "bodyText": "This seems like a mistake.  What should this be?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1130#discussion_r526449209", "createdAt": "2020-11-18T21:56:51Z", "author": {"login": "AdamBJohnsonx"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/migration/TokenCacheItemMigrationAdapter.java", "diffHunk": "@@ -184,7 +185,7 @@ public static boolean tryFociTokenWithGivenClientId(@SuppressWarnings(WarningTyp\n         final MicrosoftStsOAuth2Strategy strategy = new MicrosoftStsOAuth2Strategy(config, strategyParameters);\n \n         final String refreshToken = refreshTokenRecord.getSecret();\n-        final String scopes = BaseController.getDelimitedDefaultScopeString();\n+        final String scopes = AuthenticationConstants.OAuth2Scopes.OPEN_ID_SCOPE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI2OTU0OA=="}, "originalCommit": {"oid": "f9c375c8b77ffba24e6dfc1c653a6150a5193cca"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0MjY2OQ==", "bodyText": "I was trying to scope it down to the minimum - so that the application that does not require MSGraph does not have to request preauthorization for the other 2 - which is optional in the form.\nMaybe it's not a good idea and we should keep the same pattern throughout the code (that our minimum = getDelimitedDefaultScopeString())", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1130#discussion_r526542669", "createdAt": "2020-11-19T02:00:48Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/migration/TokenCacheItemMigrationAdapter.java", "diffHunk": "@@ -184,7 +185,7 @@ public static boolean tryFociTokenWithGivenClientId(@SuppressWarnings(WarningTyp\n         final MicrosoftStsOAuth2Strategy strategy = new MicrosoftStsOAuth2Strategy(config, strategyParameters);\n \n         final String refreshToken = refreshTokenRecord.getSecret();\n-        final String scopes = BaseController.getDelimitedDefaultScopeString();\n+        final String scopes = AuthenticationConstants.OAuth2Scopes.OPEN_ID_SCOPE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI2OTU0OA=="}, "originalCommit": {"oid": "f9c375c8b77ffba24e6dfc1c653a6150a5193cca"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU0MzkzNw==", "bodyText": "Can we send the customary offline_access openid profile and not specify a resource? Seems preferable, as MS Graph doesn't exist in all clouds", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1130#discussion_r526543937", "createdAt": "2020-11-19T02:04:37Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/migration/TokenCacheItemMigrationAdapter.java", "diffHunk": "@@ -184,7 +185,7 @@ public static boolean tryFociTokenWithGivenClientId(@SuppressWarnings(WarningTyp\n         final MicrosoftStsOAuth2Strategy strategy = new MicrosoftStsOAuth2Strategy(config, strategyParameters);\n \n         final String refreshToken = refreshTokenRecord.getSecret();\n-        final String scopes = BaseController.getDelimitedDefaultScopeString();\n+        final String scopes = AuthenticationConstants.OAuth2Scopes.OPEN_ID_SCOPE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI2OTU0OA=="}, "originalCommit": {"oid": "f9c375c8b77ffba24e6dfc1c653a6150a5193cca"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjk1MjQwMA==", "bodyText": "https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-permissions-and-consent#openid-connect-scopes\nThe Microsoft identity platform implementation of OpenID Connect has a few well-defined scopes that are also hosted on the Microsoft Graph: openid, email, profile, and offline_access. The address and phone OpenID Connect scopes are not supported.\nThis describes why I was hitting the MSgraph preauthorized error with those scopes (AADSTS65002: Consent between first party application '[CLIENT_ID]' and first party resource '00000003-0000-0000-c000-000000000000' must be configured via preauthorization. Visit https://identitydocs.azurewebsites.net/static/aad/preauthorization.html).", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1130#discussion_r526952400", "createdAt": "2020-11-19T14:58:10Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/migration/TokenCacheItemMigrationAdapter.java", "diffHunk": "@@ -184,7 +185,7 @@ public static boolean tryFociTokenWithGivenClientId(@SuppressWarnings(WarningTyp\n         final MicrosoftStsOAuth2Strategy strategy = new MicrosoftStsOAuth2Strategy(config, strategyParameters);\n \n         final String refreshToken = refreshTokenRecord.getSecret();\n-        final String scopes = BaseController.getDelimitedDefaultScopeString();\n+        final String scopes = AuthenticationConstants.OAuth2Scopes.OPEN_ID_SCOPE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI2OTU0OA=="}, "originalCommit": {"oid": "f9c375c8b77ffba24e6dfc1c653a6150a5193cca"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjU4Nzg0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/BrokerOAuth2TokenCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMjo1MDozMlrOH27g3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMjo1MDozMlrOH27g3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2MDIyMw==", "bodyText": "I would prefer to see new API + tests added for this, rather than have to increment the major version of common to change this API", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1130#discussion_r527360223", "createdAt": "2020-11-20T02:50:32Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/BrokerOAuth2TokenCache.java", "diffHunk": "@@ -180,6 +181,7 @@ public BrokerOAuth2TokenCache(@NonNull Context context,\n     public ICacheRecord save(@NonNull AccountRecord accountRecord,\n                              @NonNull IdTokenRecord idTokenRecord,\n                              @NonNull AccessTokenRecord accessTokenRecord,\n+                             @NonNull RefreshTokenRecord refreshTokenRecord,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "678e290b0bff407b7f2ef8766b0e59520091d1cd"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNjU4ODM5OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/BrokerOAuth2TokenCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMjo1MDo1NVrOH27hOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQwMjo1MDo1NVrOH27hOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzM2MDMxNA==", "bodyText": "Same here -- this would be a major version break. Let's add new API + tests", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1130#discussion_r527360314", "createdAt": "2020-11-20T02:50:55Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/BrokerOAuth2TokenCache.java", "diffHunk": "@@ -243,13 +247,15 @@ public ICacheRecord save(@NonNull AccountRecord accountRecord,\n             @NonNull final AccountRecord accountRecord,\n             @NonNull final IdTokenRecord idTokenRecord,\n             @NonNull final AccessTokenRecord accessTokenRecord,\n+            @NonNull final RefreshTokenRecord refreshTokenRecord,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "678e290b0bff407b7f2ef8766b0e59520091d1cd"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwOTc3MzU0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzo0MDowMlrOH3Z98A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODo1NTo0N1rOH3c_8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1OTE4NA==", "bodyText": "@rpdome Can we make the RT @Nullable in this API and have the older API call this one? At a glance, it looks like that would allow for removal of some duplicated code", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1130#discussion_r527859184", "createdAt": "2020-11-20T17:40:02Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java", "diffHunk": "@@ -219,6 +220,65 @@ ICacheRecord save(@NonNull AccountRecord accountRecord,\n         return result;\n     }\n \n+    /**\n+     * @param accountRecord      The {@link AccountRecord} to store.\n+     * @param idTokenRecord      The {@link IdTokenRecord} to store.\n+     * @param accessTokenRecord  The {@link AccessTokenRecord} to store.\n+     * @param refreshTokenRecord The {@link RefreshTokenRecord} to store.\n+     * @return The {@link ICacheRecord} result of this save action.\n+     * @throws ClientException If the supplied Accounts or Credentials are schema invalid.\n+     * @see OAuth2TokenCache#save(AccountRecord, IdTokenRecord)\n+     */\n+    ICacheRecord save(final @NonNull AccountRecord accountRecord,\n+                      final @NonNull IdTokenRecord idTokenRecord,\n+                      final @NonNull AccessTokenRecord accessTokenRecord,\n+                      final @NonNull RefreshTokenRecord refreshTokenRecord) throws ClientException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d7223d0671df07b35fce79b86475c51dde949bc"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg3Mjk4OA==", "bodyText": "I did that and reverted back - not liking the idea of having refreshToken nullable (since the value shouldn't be null from the public API perspective)", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1130#discussion_r527872988", "createdAt": "2020-11-20T17:54:05Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java", "diffHunk": "@@ -219,6 +220,65 @@ ICacheRecord save(@NonNull AccountRecord accountRecord,\n         return result;\n     }\n \n+    /**\n+     * @param accountRecord      The {@link AccountRecord} to store.\n+     * @param idTokenRecord      The {@link IdTokenRecord} to store.\n+     * @param accessTokenRecord  The {@link AccessTokenRecord} to store.\n+     * @param refreshTokenRecord The {@link RefreshTokenRecord} to store.\n+     * @return The {@link ICacheRecord} result of this save action.\n+     * @throws ClientException If the supplied Accounts or Credentials are schema invalid.\n+     * @see OAuth2TokenCache#save(AccountRecord, IdTokenRecord)\n+     */\n+    ICacheRecord save(final @NonNull AccountRecord accountRecord,\n+                      final @NonNull IdTokenRecord idTokenRecord,\n+                      final @NonNull AccessTokenRecord accessTokenRecord,\n+                      final @NonNull RefreshTokenRecord refreshTokenRecord) throws ClientException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1OTE4NA=="}, "originalCommit": {"oid": "3d7223d0671df07b35fce79b86475c51dde949bc"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkwODg1MA==", "bodyText": "OK - thanks @rpdome", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1130#discussion_r527908850", "createdAt": "2020-11-20T18:55:47Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java", "diffHunk": "@@ -219,6 +220,65 @@ ICacheRecord save(@NonNull AccountRecord accountRecord,\n         return result;\n     }\n \n+    /**\n+     * @param accountRecord      The {@link AccountRecord} to store.\n+     * @param idTokenRecord      The {@link IdTokenRecord} to store.\n+     * @param accessTokenRecord  The {@link AccessTokenRecord} to store.\n+     * @param refreshTokenRecord The {@link RefreshTokenRecord} to store.\n+     * @return The {@link ICacheRecord} result of this save action.\n+     * @throws ClientException If the supplied Accounts or Credentials are schema invalid.\n+     * @see OAuth2TokenCache#save(AccountRecord, IdTokenRecord)\n+     */\n+    ICacheRecord save(final @NonNull AccountRecord accountRecord,\n+                      final @NonNull IdTokenRecord idTokenRecord,\n+                      final @NonNull AccessTokenRecord accessTokenRecord,\n+                      final @NonNull RefreshTokenRecord refreshTokenRecord) throws ClientException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1OTE4NA=="}, "originalCommit": {"oid": "3d7223d0671df07b35fce79b86475c51dde949bc"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMDA5MjExOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/BrokerOAuth2TokenCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODo1ODowMVrOH3dEpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwNTo0Nzo1NVrOH3_-qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkxMDA1NQ==", "bodyText": "Not immediately clear to me why this result needs to be casted, doesn't this API always return this type?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1130#discussion_r527910055", "createdAt": "2020-11-20T18:58:01Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/BrokerOAuth2TokenCache.java", "diffHunk": "@@ -253,26 +330,51 @@ public ICacheRecord save(@NonNull AccountRecord accountRecord,\n                     familyId\n             );\n \n-            final String clientId = cacheRecord.getAccessToken().getClientId();\n-            final String target = cacheRecord.getAccessToken().getTarget();\n-            final String environment = cacheRecord.getAccessToken().getEnvironment();\n+            return loadAggregatedAccountData(authScheme, cacheRecord);\n+        }\n+    }\n \n-            // Now get the cache we just saved to....\n-            final MsalOAuth2TokenCache cache = getTokenCacheForClient(\n-                    clientId,\n-                    environment,\n-                    mCallingProcessUid\n+    public synchronized List<ICacheRecord> saveAndLoadAggregatedAccountData(\n+            final @NonNull AccountRecord accountRecord,\n+            final @NonNull IdTokenRecord idTokenRecord,\n+            final @NonNull AccessTokenRecord accessTokenRecord,\n+            final @NonNull RefreshTokenRecord refreshTokenRecord,\n+            final @Nullable String familyId,\n+            final @NonNull AbstractAuthenticationScheme authScheme) throws ClientException {\n+        synchronized (this) {\n+            final ICacheRecord cacheRecord = save(\n+                    accountRecord,\n+                    idTokenRecord,\n+                    accessTokenRecord,\n+                    refreshTokenRecord,\n+                    familyId\n             );\n \n-            return (List<ICacheRecord>) cache.loadWithAggregatedAccountData(\n-                    clientId,\n-                    target,\n-                    cacheRecord.getAccount(),\n-                    authScheme\n-            );\n+            return loadAggregatedAccountData(authScheme, cacheRecord);\n         }\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    private List<ICacheRecord> loadAggregatedAccountData(final @NonNull AbstractAuthenticationScheme authScheme,\n+                                                         final @NonNull ICacheRecord cacheRecord) {\n+        final String clientId = cacheRecord.getAccessToken().getClientId();\n+        final String target = cacheRecord.getAccessToken().getTarget();\n+        final String environment = cacheRecord.getAccessToken().getEnvironment();\n+\n+        final MsalOAuth2TokenCache cache = getTokenCacheForClient(\n+                clientId,\n+                environment,\n+                mCallingProcessUid\n+        );\n+\n+        return (List<ICacheRecord>) cache.loadWithAggregatedAccountData(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d7223d0671df07b35fce79b86475c51dde949bc"}, "originalPosition": 161}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ4MTk2Mg==", "bodyText": "This was automatically generated by the extract function in Android Studio. Will remove \ud83d\ude05", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1130#discussion_r528481962", "createdAt": "2020-11-23T05:47:55Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/BrokerOAuth2TokenCache.java", "diffHunk": "@@ -253,26 +330,51 @@ public ICacheRecord save(@NonNull AccountRecord accountRecord,\n                     familyId\n             );\n \n-            final String clientId = cacheRecord.getAccessToken().getClientId();\n-            final String target = cacheRecord.getAccessToken().getTarget();\n-            final String environment = cacheRecord.getAccessToken().getEnvironment();\n+            return loadAggregatedAccountData(authScheme, cacheRecord);\n+        }\n+    }\n \n-            // Now get the cache we just saved to....\n-            final MsalOAuth2TokenCache cache = getTokenCacheForClient(\n-                    clientId,\n-                    environment,\n-                    mCallingProcessUid\n+    public synchronized List<ICacheRecord> saveAndLoadAggregatedAccountData(\n+            final @NonNull AccountRecord accountRecord,\n+            final @NonNull IdTokenRecord idTokenRecord,\n+            final @NonNull AccessTokenRecord accessTokenRecord,\n+            final @NonNull RefreshTokenRecord refreshTokenRecord,\n+            final @Nullable String familyId,\n+            final @NonNull AbstractAuthenticationScheme authScheme) throws ClientException {\n+        synchronized (this) {\n+            final ICacheRecord cacheRecord = save(\n+                    accountRecord,\n+                    idTokenRecord,\n+                    accessTokenRecord,\n+                    refreshTokenRecord,\n+                    familyId\n             );\n \n-            return (List<ICacheRecord>) cache.loadWithAggregatedAccountData(\n-                    clientId,\n-                    target,\n-                    cacheRecord.getAccount(),\n-                    authScheme\n-            );\n+            return loadAggregatedAccountData(authScheme, cacheRecord);\n         }\n     }\n \n+    @SuppressWarnings(\"unchecked\")\n+    private List<ICacheRecord> loadAggregatedAccountData(final @NonNull AbstractAuthenticationScheme authScheme,\n+                                                         final @NonNull ICacheRecord cacheRecord) {\n+        final String clientId = cacheRecord.getAccessToken().getClientId();\n+        final String target = cacheRecord.getAccessToken().getTarget();\n+        final String environment = cacheRecord.getAccessToken().getEnvironment();\n+\n+        final MsalOAuth2TokenCache cache = getTokenCacheForClient(\n+                clientId,\n+                environment,\n+                mCallingProcessUid\n+        );\n+\n+        return (List<ICacheRecord>) cache.loadWithAggregatedAccountData(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkxMDA1NQ=="}, "originalCommit": {"oid": "3d7223d0671df07b35fce79b86475c51dde949bc"}, "originalPosition": 161}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMDA5MjgzOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/BrokerOAuth2TokenCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODo1ODoxN1rOH3dFKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxODo1ODoxN1rOH3dFKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzkxMDE4NQ==", "bodyText": "Nit: params final", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1130#discussion_r527910185", "createdAt": "2020-11-20T18:58:17Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/BrokerOAuth2TokenCache.java", "diffHunk": "@@ -238,7 +240,82 @@ public ICacheRecord save(@NonNull AccountRecord accountRecord,\n         return result;\n     }\n \n-    @SuppressWarnings(\"unchecked\")\n+    /**\n+     * Broker-only API to persist WPJ's Accounts & their associated credentials.\n+     *\n+     * @param accountRecord      The {@link AccountRecord} to store.\n+     * @param idTokenRecord      The {@link IdTokenRecord} to store.\n+     * @param accessTokenRecord  The {@link AccessTokenRecord} to store.\n+     * @param refreshTokenRecord The {@link RefreshTokenRecord} to store.\n+     * @param familyId           The family_id or null, if not applicable.\n+     * @return The {@link ICacheRecord} result of this save action.\n+     * @throws ClientException If the supplied Accounts or Credentials are schema invalid.\n+     */\n+    public ICacheRecord save(@NonNull AccountRecord accountRecord,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d7223d0671df07b35fce79b86475c51dde949bc"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2084, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}