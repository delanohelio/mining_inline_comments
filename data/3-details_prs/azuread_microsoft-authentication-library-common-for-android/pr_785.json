{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MzY4NzI3", "number": 785, "title": "Add Exception Type to Broker Result to transform to correct exception", "bodyText": "Change to transform exceptions in msal based on type sent by broker, rather than relying on error code parsing.\n\n\nAlso fixes AzureAD/microsoft-authentication-library-for-android#898, where we look for invalid broker RT.", "createdAt": "2020-01-18T00:27:33Z", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785", "merged": true, "mergeCommit": {"oid": "3970f45699e6674b8b8dd40edd6713b90be62dff"}, "closed": true, "closedAt": "2020-01-23T23:39:27Z", "author": {"login": "kreedula"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6Vmt9AH2gAyMzY0MzY4NzI3OjkwMjU1MjE0YWQzYmQ3NzkwYmMyOTRkYzgzNjg0ODAwODRmOTk3NDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9QbOwAH2gAyMzY0MzY4NzI3OjMxOTA0OGU0NWVjYzBiMjY5NTg5NTNlOWY1NjRlNWYxY2ZmYzU5ZWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "90255214ad3bd7790bc294dc8368480084f99743", "author": {"user": null}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/90255214ad3bd7790bc294dc8368480084f99743", "committedDate": "2020-01-14T18:52:50Z", "message": "Adding thread safety"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e33d698f175d11dc96b2c428648e26585328c616", "author": {"user": null}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/e33d698f175d11dc96b2c428648e26585328c616", "committedDate": "2020-01-17T22:38:46Z", "message": "Merge branch 'dev' of https://github.com/AzureAD/microsoft-authentication-library-common-for-android into dev"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d92601285bb09c6c6a46739c2623dfd406ee38fa", "author": {"user": null}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/d92601285bb09c6c6a46739c2623dfd406ee38fa", "committedDate": "2020-01-18T00:20:09Z", "message": "Add Exception Type to Broker Result to transform to correct exception in MSAL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b072f2f967fed653468e22b3dadb78c5391b60f2", "author": {"user": null}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/b072f2f967fed653468e22b3dadb78c5391b60f2", "committedDate": "2020-01-18T00:23:41Z", "message": "Fix names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4026f0dc374329278b75d73473a03bdab86c496", "author": {"user": {"login": "rpdome", "name": "Dome Pongmongkol"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/c4026f0dc374329278b75d73473a03bdab86c496", "committedDate": "2020-01-18T00:42:36Z", "message": "Merge branch 'dev' into kreedula/fix-exception-transform"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTEyNzYw", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#pullrequestreview-344912760", "createdAt": "2020-01-18T01:10:55Z", "commit": {"oid": "c4026f0dc374329278b75d73473a03bdab86c496"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMToxMDo1NVrOFfIxJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMToxMDo1NVrOFfIxJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5MzgzMA==", "bodyText": "ErrorStrings.NO_TOKENS_FOUND is another case for UiRequiredException", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r368193830", "createdAt": "2020-01-18T01:10:55Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -182,12 +183,112 @@ public BaseException getBaseExceptionFromBundle(@NonNull final Bundle resultBund\n             return new BaseException(ErrorStrings.UNKNOWN_ERROR, \"Broker Result not returned from Broker\");\n         }\n \n-        BaseException baseException;\n+        final String exceptionType = brokerResult.getExceptionType();\n \n+        if(!TextUtils.isEmpty(exceptionType)){\n+            return getBaseExceptionFromExceptionType(exceptionType, brokerResult);\n+        }else {\n+            // This code is here for legacy purposes where old versions of broker (3.1.8 or below)\n+            // wouldn't return exception type in the result.\n+            Logger.info(TAG, \"Exception type is not returned from the broker, \" +\n+                    \"using error codes to transform to the right exception\");\n+            return getBaseExceptionFromErrorCodes(brokerResult);\n+        }\n+\n+    }\n+\n+    private BaseException getBaseExceptionFromExceptionType(@NonNull final String exceptionType,\n+                                                            @NonNull final BrokerResult brokerResult){\n+        BaseException baseException = null;\n+\n+        if(exceptionType.equalsIgnoreCase(UiRequiredException.sName)){\n+            Logger.warn(TAG, \"Received a UIRequired exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new UiRequiredException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ServiceException.sName)){\n+            Logger.warn(TAG, \"Received a Service exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = getServiceException(brokerResult);\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(IntuneAppProtectionPolicyRequiredException.sName)){\n+            Logger.warn(TAG,\n+                    \"Received a IntuneAppProtectionPolicyRequiredException exception from Broker: \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = getIntuneProtectionRequiredException(brokerResult);\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(UserCancelException.sName)){\n+            Logger.warn(TAG, \"Received a User cancelled exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new UserCancelException();\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ClientException.sName)){\n+            Logger.warn(TAG, \"Received a ClientException exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new ClientException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ArgumentException.sName)){\n+            Logger.warn(TAG, \"Received a Argument exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new ArgumentException(\n+                    ArgumentException.ACQUIRE_TOKEN_OPERATION_NAME,\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        // Default to ClientException if null\n+        if(baseException == null){\n+            Logger.warn(TAG, \" Exception type is unknown : \" + exceptionType\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new ClientException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        baseException.setCliTelemErrorCode(brokerResult.getCliTelemErrorCode());\n+        baseException.setCliTelemSubErrorCode(brokerResult.getCliTelemSubErrorCode());\n+        baseException.setCorrelationId(brokerResult.getCorrelationId());\n+        baseException.setSpeRing(brokerResult.getSpeRing());\n+        baseException.setRefreshTokenAge(brokerResult.getRefreshTokenAge());\n+\n+        return baseException;\n+    }\n+\n+\n+    /**\n+     * Method to get the right base exception based on error codes.\n+     * Note : In newer versions of Broker, exception type will be sent and is used to determine the right exception.\n+     *\n+     * This method is to support legacy broker versions (3.1.8 or below)\n+     * @return BaseException\n+     */\n+    private BaseException getBaseExceptionFromErrorCodes(@NonNull final BrokerResult brokerResult){\n         final String errorCode = brokerResult.getErrorCode();\n+        final BaseException baseException;\n \n         if (AuthenticationConstants.OAuth2ErrorCode.INTERACTION_REQUIRED.equalsIgnoreCase(errorCode) ||\n-                AuthenticationConstants.OAuth2ErrorCode.INVALID_GRANT.equalsIgnoreCase(errorCode)) {\n+                AuthenticationConstants.OAuth2ErrorCode.INVALID_GRANT.equalsIgnoreCase(errorCode) ||\n+                ErrorStrings.INVALID_BROKER_REFRESH_TOKEN.equalsIgnoreCase(errorCode)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4026f0dc374329278b75d73473a03bdab86c496"}, "originalPosition": 119}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTEyOTMy", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#pullrequestreview-344912932", "createdAt": "2020-01-18T01:12:02Z", "commit": {"oid": "c4026f0dc374329278b75d73473a03bdab86c496"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMToxMjowMlrOFfIx0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMToxMjowMlrOFfIx0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NDAwMQ==", "bodyText": "might be better to use else if here and below", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r368194001", "createdAt": "2020-01-18T01:12:02Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -182,12 +183,112 @@ public BaseException getBaseExceptionFromBundle(@NonNull final Bundle resultBund\n             return new BaseException(ErrorStrings.UNKNOWN_ERROR, \"Broker Result not returned from Broker\");\n         }\n \n-        BaseException baseException;\n+        final String exceptionType = brokerResult.getExceptionType();\n \n+        if(!TextUtils.isEmpty(exceptionType)){\n+            return getBaseExceptionFromExceptionType(exceptionType, brokerResult);\n+        }else {\n+            // This code is here for legacy purposes where old versions of broker (3.1.8 or below)\n+            // wouldn't return exception type in the result.\n+            Logger.info(TAG, \"Exception type is not returned from the broker, \" +\n+                    \"using error codes to transform to the right exception\");\n+            return getBaseExceptionFromErrorCodes(brokerResult);\n+        }\n+\n+    }\n+\n+    private BaseException getBaseExceptionFromExceptionType(@NonNull final String exceptionType,\n+                                                            @NonNull final BrokerResult brokerResult){\n+        BaseException baseException = null;\n+\n+        if(exceptionType.equalsIgnoreCase(UiRequiredException.sName)){\n+            Logger.warn(TAG, \"Received a UIRequired exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new UiRequiredException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ServiceException.sName)){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4026f0dc374329278b75d73473a03bdab86c496"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTE0NjAz", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#pullrequestreview-344914603", "createdAt": "2020-01-18T01:23:28Z", "commit": {"oid": "c4026f0dc374329278b75d73473a03bdab86c496"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMToyMzoyOFrOFfI3bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMToyMzoyOFrOFfI3bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NTQzOQ==", "bodyText": "May be we can move log statement outside the if blocks, and call it only once as follows:\nLogger.warn(TAG, \"Received a \" + exceptionType +  \" from Broker : \" + brokerResult.getErrorCode() );", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r368195439", "createdAt": "2020-01-18T01:23:28Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -182,12 +183,112 @@ public BaseException getBaseExceptionFromBundle(@NonNull final Bundle resultBund\n             return new BaseException(ErrorStrings.UNKNOWN_ERROR, \"Broker Result not returned from Broker\");\n         }\n \n-        BaseException baseException;\n+        final String exceptionType = brokerResult.getExceptionType();\n \n+        if(!TextUtils.isEmpty(exceptionType)){\n+            return getBaseExceptionFromExceptionType(exceptionType, brokerResult);\n+        }else {\n+            // This code is here for legacy purposes where old versions of broker (3.1.8 or below)\n+            // wouldn't return exception type in the result.\n+            Logger.info(TAG, \"Exception type is not returned from the broker, \" +\n+                    \"using error codes to transform to the right exception\");\n+            return getBaseExceptionFromErrorCodes(brokerResult);\n+        }\n+\n+    }\n+\n+    private BaseException getBaseExceptionFromExceptionType(@NonNull final String exceptionType,\n+                                                            @NonNull final BrokerResult brokerResult){\n+        BaseException baseException = null;\n+\n+        if(exceptionType.equalsIgnoreCase(UiRequiredException.sName)){\n+            Logger.warn(TAG, \"Received a UIRequired exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new UiRequiredException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ServiceException.sName)){\n+            Logger.warn(TAG, \"Received a Service exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = getServiceException(brokerResult);\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(IntuneAppProtectionPolicyRequiredException.sName)){\n+            Logger.warn(TAG,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4026f0dc374329278b75d73473a03bdab86c496"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTE0ODg0", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#pullrequestreview-344914884", "createdAt": "2020-01-18T01:25:59Z", "commit": {"oid": "c4026f0dc374329278b75d73473a03bdab86c496"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMToyNTo1OVrOFfI4fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMToyNTo1OVrOFfI4fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NTcxMQ==", "bodyText": "How do we know that it is ACQUIRE_TOKEN_OPERATION_NAME?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r368195711", "createdAt": "2020-01-18T01:25:59Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/result/MsalBrokerResultAdapter.java", "diffHunk": "@@ -182,12 +183,112 @@ public BaseException getBaseExceptionFromBundle(@NonNull final Bundle resultBund\n             return new BaseException(ErrorStrings.UNKNOWN_ERROR, \"Broker Result not returned from Broker\");\n         }\n \n-        BaseException baseException;\n+        final String exceptionType = brokerResult.getExceptionType();\n \n+        if(!TextUtils.isEmpty(exceptionType)){\n+            return getBaseExceptionFromExceptionType(exceptionType, brokerResult);\n+        }else {\n+            // This code is here for legacy purposes where old versions of broker (3.1.8 or below)\n+            // wouldn't return exception type in the result.\n+            Logger.info(TAG, \"Exception type is not returned from the broker, \" +\n+                    \"using error codes to transform to the right exception\");\n+            return getBaseExceptionFromErrorCodes(brokerResult);\n+        }\n+\n+    }\n+\n+    private BaseException getBaseExceptionFromExceptionType(@NonNull final String exceptionType,\n+                                                            @NonNull final BrokerResult brokerResult){\n+        BaseException baseException = null;\n+\n+        if(exceptionType.equalsIgnoreCase(UiRequiredException.sName)){\n+            Logger.warn(TAG, \"Received a UIRequired exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new UiRequiredException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ServiceException.sName)){\n+            Logger.warn(TAG, \"Received a Service exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = getServiceException(brokerResult);\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(IntuneAppProtectionPolicyRequiredException.sName)){\n+            Logger.warn(TAG,\n+                    \"Received a IntuneAppProtectionPolicyRequiredException exception from Broker: \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = getIntuneProtectionRequiredException(brokerResult);\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(UserCancelException.sName)){\n+            Logger.warn(TAG, \"Received a User cancelled exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new UserCancelException();\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ClientException.sName)){\n+            Logger.warn(TAG, \"Received a ClientException exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new ClientException(\n+                    brokerResult.getErrorCode(),\n+                    brokerResult.getErrorMessage()\n+            );\n+        }\n+\n+        if(exceptionType.equalsIgnoreCase(ArgumentException.sName)){\n+            Logger.warn(TAG, \"Received a Argument exception from Broker : \"\n+                    + brokerResult.getErrorCode()\n+            );\n+            baseException = new ArgumentException(\n+                    ArgumentException.ACQUIRE_TOKEN_OPERATION_NAME,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4026f0dc374329278b75d73473a03bdab86c496"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTE3MTcw", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#pullrequestreview-344917170", "createdAt": "2020-01-18T01:50:58Z", "commit": {"oid": "c4026f0dc374329278b75d73473a03bdab86c496"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMTo1MDo1OFrOFfJATQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQwMTo1MDo1OFrOFfJATQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE5NzcwOQ==", "bodyText": "return ArgumentException.class.getName();?\nHere and everywhere.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#discussion_r368197709", "createdAt": "2020-01-18T01:50:58Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/exception/ArgumentException.java", "diffHunk": "@@ -60,4 +62,9 @@ public String getArgumentName() {\n         return mArgumentName;\n     }\n \n+    @Override\n+    public String getExceptionName(){\n+        return sName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4026f0dc374329278b75d73473a03bdab86c496"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92ae1c0ddce0f9fd60edc2a2ef04cfee6c4f190f", "author": {"user": null}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/92ae1c0ddce0f9fd60edc2a2ef04cfee6c4f190f", "committedDate": "2020-01-22T20:21:38Z", "message": "Addressing comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0762c91e22ed4e136f3113a3905869c0e1e208ec", "author": {"user": null}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0762c91e22ed4e136f3113a3905869c0e1e208ec", "committedDate": "2020-01-22T20:22:36Z", "message": "Merge branch 'kreedula/fix-exception-transform' of https://github.com/AzureAD/microsoft-authentication-library-common-for-android into kreedula/fix-exception-transform"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c5855ba68cb7c18d15b099ebb998343868c1566", "author": {"user": {"login": "kreedula", "name": "Krishna Eedula"}}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/8c5855ba68cb7c18d15b099ebb998343868c1566", "committedDate": "2020-01-22T21:21:08Z", "message": "Merge branch 'dev' into kreedula/fix-exception-transform"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2OTcxODcz", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#pullrequestreview-346971873", "createdAt": "2020-01-22T23:19:06Z", "commit": {"oid": "8c5855ba68cb7c18d15b099ebb998343868c1566"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d349734b518f4ae92df3870b5f4b1a714660a43", "author": {"user": null}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/0d349734b518f4ae92df3870b5f4b1a714660a43", "committedDate": "2020-01-23T19:35:57Z", "message": "Addressing comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9753eb45af98c4ad37557405c1cb407636f9d9d", "author": {"user": null}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/d9753eb45af98c4ad37557405c1cb407636f9d9d", "committedDate": "2020-01-23T19:36:12Z", "message": "Merge branch 'kreedula/fix-exception-transform' of https://github.com/AzureAD/microsoft-authentication-library-common-for-android into kreedula/fix-exception-transform"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NTg3NzMz", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/785#pullrequestreview-347587733", "createdAt": "2020-01-23T20:31:53Z", "commit": {"oid": "d9753eb45af98c4ad37557405c1cb407636f9d9d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "319048e45ecc0b26958953e9f564e5f1cffc59ef", "author": {"user": null}, "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/commit/319048e45ecc0b26958953e9f564e5f1cffc59ef", "committedDate": "2020-01-23T20:32:32Z", "message": "Merge branch 'dev' into kreedula/fix-exception-transform"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1718, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}