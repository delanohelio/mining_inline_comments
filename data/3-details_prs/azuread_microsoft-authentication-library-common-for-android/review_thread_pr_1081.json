{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwNDMwNzIy", "number": 1081, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyNzoyNlrOEs4hRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyODowNFrOEs4h9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDk4ODIzOnYy", "diffSide": "RIGHT", "path": "common/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyNzoyNlrOHgXHzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODoyOToxM1rOHg0KzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5NTMxMQ==", "bodyText": "Instead of having a nested loop here for build types and flavors, it would be better to just loop over the build variants -- that way you don't have nested loop and also don't need a placeholder empty string for flavors.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1081#discussion_r503695311", "createdAt": "2020-10-13T06:27:26Z", "author": {"login": "shahzaibj"}, "path": "common/build.gradle", "diffHunk": "@@ -156,6 +167,54 @@ task sourcesJar(type: Jar) {\n     destinationDir = reporting.file(\"$project.buildDir/outputs/jar/\")\n }\n \n+task createCommonCoverageReportTask() {\n+    group = \"Common Reporting\"\n+    description = \"Generate Coverage Report tasks for every build Flavour\"\n+\n+    def buildTypes = android.buildTypes.collect { type ->\n+        type.name\n+    }\n+    def productFlavors = android.productFlavors.collect { flavor ->\n+        flavor.name\n+    }\n+    // When no product flavors defined, use empty string\n+    if (!productFlavors) productFlavors.add('')\n+    productFlavors.each { productFlavorName ->\n+        buildTypes.each { buildTypeName ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247e221912dbcb9279d1c4825a6b0a6c8a021231"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE3MTIxMg==", "bodyText": "added buildVariants to loop over, have a look.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1081#discussion_r504171212", "createdAt": "2020-10-13T18:29:13Z", "author": {"login": "ayushmeghwani"}, "path": "common/build.gradle", "diffHunk": "@@ -156,6 +167,54 @@ task sourcesJar(type: Jar) {\n     destinationDir = reporting.file(\"$project.buildDir/outputs/jar/\")\n }\n \n+task createCommonCoverageReportTask() {\n+    group = \"Common Reporting\"\n+    description = \"Generate Coverage Report tasks for every build Flavour\"\n+\n+    def buildTypes = android.buildTypes.collect { type ->\n+        type.name\n+    }\n+    def productFlavors = android.productFlavors.collect { flavor ->\n+        flavor.name\n+    }\n+    // When no product flavors defined, use empty string\n+    if (!productFlavors) productFlavors.add('')\n+    productFlavors.each { productFlavorName ->\n+        buildTypes.each { buildTypeName ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5NTMxMQ=="}, "originalCommit": {"oid": "247e221912dbcb9279d1c4825a6b0a6c8a021231"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NDk4OTk2OnYy", "diffSide": "RIGHT", "path": "common/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyODowNFrOHgXIww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwNjoyODowNFrOHgXIww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5NTU1NQ==", "bodyText": "see my comment, sourceName can then just be the variant name", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/1081#discussion_r503695555", "createdAt": "2020-10-13T06:28:04Z", "author": {"login": "shahzaibj"}, "path": "common/build.gradle", "diffHunk": "@@ -156,6 +167,54 @@ task sourcesJar(type: Jar) {\n     destinationDir = reporting.file(\"$project.buildDir/outputs/jar/\")\n }\n \n+task createCommonCoverageReportTask() {\n+    group = \"Common Reporting\"\n+    description = \"Generate Coverage Report tasks for every build Flavour\"\n+\n+    def buildTypes = android.buildTypes.collect { type ->\n+        type.name\n+    }\n+    def productFlavors = android.productFlavors.collect { flavor ->\n+        flavor.name\n+    }\n+    // When no product flavors defined, use empty string\n+    if (!productFlavors) productFlavors.add('')\n+    productFlavors.each { productFlavorName ->\n+        buildTypes.each { buildTypeName ->\n+            def sourceName\n+            if (!productFlavorName) {\n+                sourceName = \"${buildTypeName}\"\n+            } else {\n+                sourceName = \"${productFlavorName}${buildTypeName.capitalize()}\"\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247e221912dbcb9279d1c4825a6b0a6c8a021231"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2009, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}