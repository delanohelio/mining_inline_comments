{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzOTMzMjM2", "number": 783, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNDowNzoxNFrODYtZlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMzozNToyNlrODY9rrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MjM2MjQ2OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNDowNzoxNFrOFeuWhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMDoxODozN1rOFfEMyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc2MTAzMQ==", "bodyText": "is this intentional? (name not matching with method name)", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/783#discussion_r367761031", "createdAt": "2020-01-17T04:07:14Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java", "diffHunk": "@@ -862,7 +862,7 @@ private void setToCacheRecord(@NonNull final CacheRecord target,\n     @Override\n     public List<AccountRecord> getAccounts(@Nullable final String environment,\n                                            @NonNull final String clientId) {\n-        final String methodName = \":getAccounts\";\n+        final String methodName = \":getAllAccounts\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edd36ab9c9a58c1d6c57b273306e76c150ab9775"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODExODk4Nw==", "bodyText": "good catch, Android Studio auto-rename might have refactored this, fixed", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/783#discussion_r368118987", "createdAt": "2020-01-17T20:18:37Z", "author": {"login": "kreedula"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalOAuth2TokenCache.java", "diffHunk": "@@ -862,7 +862,7 @@ private void setToCacheRecord(@NonNull final CacheRecord target,\n     @Override\n     public List<AccountRecord> getAccounts(@Nullable final String environment,\n                                            @NonNull final String clientId) {\n-        final String methodName = \":getAccounts\";\n+        final String methodName = \":getAllAccounts\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc2MTAzMQ=="}, "originalCommit": {"oid": "edd36ab9c9a58c1d6c57b273306e76c150ab9775"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MjM2NTAyOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNDowOTozNlrOFeuX7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMDoxNzozNVrOFfELOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc2MTM5MA==", "bodyText": "nit: do we need validateNonNull here?", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/783#discussion_r367761390", "createdAt": "2020-01-17T04:09:36Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java", "diffHunk": "@@ -148,4 +126,93 @@ public synchronized void saveCredentials(@NonNull final AccountRecord accountRec\n         saveCredentialsInternal(credentials);\n     }\n \n+    /**\n+     * API to save {@link AccountRecord}\n+     *\n+     * @param accountRecord : accountRecord to be saved.\n+     */\n+    public synchronized void saveAccountRecord(@NonNull AccountRecord accountRecord) {\n+        getAccountCredentialCache().saveAccount(accountRecord);\n+\n+    }\n+\n+    /**\n+     * API to clear all cache.\n+     * Note: This method is intended to be only used for testing purposes.\n+     */\n+    public synchronized void clearCache() {\n+        getAccountCredentialCache().clearAll();\n+    }\n+\n+    /**\n+     * Method to remove Account matched with homeAccountId, environment and realm\n+     *\n+     * @param homeAccountId : HomeAccountId of the Account\n+     * @param environment   : Environment of the Account\n+     * @param realm         : Realm of the Account\n+     * @return {@link AccountDeletionRecord}\n+     */\n+    public synchronized AccountDeletionRecord removeAccount(@NonNull final String homeAccountId,\n+                                                            @NonNull final String environment,\n+                                                            @NonNull final String realm) {\n+        final List<Credential> credentials = getAccountCredentialCache().getCredentialsFilteredBy(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edd36ab9c9a58c1d6c57b273306e76c150ab9775"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODExODU4NQ==", "bodyText": "done", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/783#discussion_r368118585", "createdAt": "2020-01-17T20:17:35Z", "author": {"login": "kreedula"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java", "diffHunk": "@@ -148,4 +126,93 @@ public synchronized void saveCredentials(@NonNull final AccountRecord accountRec\n         saveCredentialsInternal(credentials);\n     }\n \n+    /**\n+     * API to save {@link AccountRecord}\n+     *\n+     * @param accountRecord : accountRecord to be saved.\n+     */\n+    public synchronized void saveAccountRecord(@NonNull AccountRecord accountRecord) {\n+        getAccountCredentialCache().saveAccount(accountRecord);\n+\n+    }\n+\n+    /**\n+     * API to clear all cache.\n+     * Note: This method is intended to be only used for testing purposes.\n+     */\n+    public synchronized void clearCache() {\n+        getAccountCredentialCache().clearAll();\n+    }\n+\n+    /**\n+     * Method to remove Account matched with homeAccountId, environment and realm\n+     *\n+     * @param homeAccountId : HomeAccountId of the Account\n+     * @param environment   : Environment of the Account\n+     * @param realm         : Realm of the Account\n+     * @return {@link AccountDeletionRecord}\n+     */\n+    public synchronized AccountDeletionRecord removeAccount(@NonNull final String homeAccountId,\n+                                                            @NonNull final String environment,\n+                                                            @NonNull final String realm) {\n+        final List<Credential> credentials = getAccountCredentialCache().getCredentialsFilteredBy(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc2MTM5MA=="}, "originalCommit": {"oid": "edd36ab9c9a58c1d6c57b273306e76c150ab9775"}, "originalPosition": 109}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTAzMDIwOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMzozNToyNlrOFfH0kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QyMzozNToyNlrOFfH0kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODE3ODMyMQ==", "bodyText": "Minor formatting weirdness here", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/783#discussion_r368178321", "createdAt": "2020-01-17T23:35:26Z", "author": {"login": "iambmelt"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/cache/MsalCppOAuth2TokenCache.java", "diffHunk": "@@ -148,4 +126,95 @@ public synchronized void saveCredentials(@NonNull final AccountRecord accountRec\n         saveCredentialsInternal(credentials);\n     }\n \n+    /**\n+     * API to save {@link AccountRecord}\n+     *\n+     * @param accountRecord : accountRecord to be saved.\n+     */\n+    public synchronized void saveAccountRecord(@NonNull AccountRecord accountRecord) {\n+        getAccountCredentialCache().saveAccount(accountRecord);\n+\n+    }\n+\n+    /**\n+     * API to clear all cache.\n+     * Note: This method is intended to be only used for testing purposes.\n+     */\n+    public synchronized void clearCache() {\n+        getAccountCredentialCache().clearAll();\n+    }\n+\n+    /**\n+     * Method to remove Account matched with homeAccountId, environment and realm\n+     *\n+     * @param homeAccountId : HomeAccountId of the Account\n+     * @param environment   : Environment of the Account\n+     * @param realm         : Realm of the Account\n+     * @return {@link AccountDeletionRecord}\n+     */\n+    public synchronized AccountDeletionRecord removeAccount(@NonNull final String homeAccountId,\n+                                                            @Nullable final String environment,\n+                                                            @NonNull final String realm) throws ClientException {\n+        validateNonNull(homeAccountId, \"homeAccountId\");\n+        validateNonNull(realm, \"realm\");\n+        final List<Credential> credentials = getAccountCredentialCache().getCredentialsFilteredBy(\n+                homeAccountId,\n+                environment,\n+                CredentialType.RefreshToken,\n+                null, realm,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c84668b64966905824dedc98c662fc1d3387e17"}, "originalPosition": 115}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2432, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}