{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MjQwNTg3", "number": 991, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDozNzo0MVrOEV-_fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDozNzo0MVrOEV-_fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDg3NjEzOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/com/microsoft/identity/common/internal/authorities/AuthorityDeserializer.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDozNzo0MVrOG9Dagg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDo0NzowNFrOG9Dslw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MjI1OA==", "bodyText": "Looks like we are just setting the tenant id on the audience -- whatever audience was created; which may not be correct in the first place i.e. not having any audience in the config defaults to AllAccounts. I think we need to make sure the the audience on the Authority is of the correct type.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/991#discussion_r466672258", "createdAt": "2020-08-06T20:37:41Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/authorities/AuthorityDeserializer.java", "diffHunk": "@@ -48,9 +51,14 @@ public Authority deserialize(JsonElement json, Type typeOfT, JsonDeserialization\n                             TAG + methodName,\n                             \"Type: AAD\"\n                     );\n-                    AzureActiveDirectoryAuthority aadAuthority = context.deserialize(authorityObject, AzureActiveDirectoryAuthority.class);\n-                    if (aadAuthority != null && aadAuthority.mAudience != null) {\n-                        aadAuthority.mAudience.setCloudUrl(aadAuthority.mAuthorityUrl);\n+                    final AzureActiveDirectoryAuthority aadAuthority = context.deserialize(authorityObject, AzureActiveDirectoryAuthority.class);\n+                    if (aadAuthority != null && aadAuthority.mAudience != null && aadAuthority.mAuthorityUrl != null) {\n+                        final Uri uri = Uri.parse(aadAuthority.mAuthorityUrl);\n+                        aadAuthority.mAudience.setCloudUrl(uri.getScheme() + \"://\" + uri.getHost());\n+                        // Try to extract tenant ID from the authority link.\n+                        if (!TextUtils.isEmpty(uri.getLastPathSegment())) {\n+                            aadAuthority.mAudience.setTenantId(uri.getLastPathSegment());\n+                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb127e6f596ab5fc0280727f6287a953e8a32e37"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3Mzc1OA==", "bodyText": "In this case, audience won't be provided.\ni.e.\n\"authorities\" : [\n    {\n      \"type\": \"AAD\",\n      \"authority_url\": \"https://login.microsoftonline.com/rapong.onmicrosoft.com\"\n    }\n  ]\n\nWe wouldn't be able to identify the audience type in the first place.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/991#discussion_r466673758", "createdAt": "2020-08-06T20:40:40Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/authorities/AuthorityDeserializer.java", "diffHunk": "@@ -48,9 +51,14 @@ public Authority deserialize(JsonElement json, Type typeOfT, JsonDeserialization\n                             TAG + methodName,\n                             \"Type: AAD\"\n                     );\n-                    AzureActiveDirectoryAuthority aadAuthority = context.deserialize(authorityObject, AzureActiveDirectoryAuthority.class);\n-                    if (aadAuthority != null && aadAuthority.mAudience != null) {\n-                        aadAuthority.mAudience.setCloudUrl(aadAuthority.mAuthorityUrl);\n+                    final AzureActiveDirectoryAuthority aadAuthority = context.deserialize(authorityObject, AzureActiveDirectoryAuthority.class);\n+                    if (aadAuthority != null && aadAuthority.mAudience != null && aadAuthority.mAuthorityUrl != null) {\n+                        final Uri uri = Uri.parse(aadAuthority.mAuthorityUrl);\n+                        aadAuthority.mAudience.setCloudUrl(uri.getScheme() + \"://\" + uri.getHost());\n+                        // Try to extract tenant ID from the authority link.\n+                        if (!TextUtils.isEmpty(uri.getLastPathSegment())) {\n+                            aadAuthority.mAudience.setTenantId(uri.getLastPathSegment());\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MjI1OA=="}, "originalCommit": {"oid": "bb127e6f596ab5fc0280727f6287a953e8a32e37"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3NDQ5OA==", "bodyText": "(both tenant name and tenant id work interchangeably. Although setting a tenant name here in the tenantID field could be misleading. I could rename that field in audience to \"setTenant()\" if that makes more sense.)", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/991#discussion_r466674498", "createdAt": "2020-08-06T20:42:11Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/authorities/AuthorityDeserializer.java", "diffHunk": "@@ -48,9 +51,14 @@ public Authority deserialize(JsonElement json, Type typeOfT, JsonDeserialization\n                             TAG + methodName,\n                             \"Type: AAD\"\n                     );\n-                    AzureActiveDirectoryAuthority aadAuthority = context.deserialize(authorityObject, AzureActiveDirectoryAuthority.class);\n-                    if (aadAuthority != null && aadAuthority.mAudience != null) {\n-                        aadAuthority.mAudience.setCloudUrl(aadAuthority.mAuthorityUrl);\n+                    final AzureActiveDirectoryAuthority aadAuthority = context.deserialize(authorityObject, AzureActiveDirectoryAuthority.class);\n+                    if (aadAuthority != null && aadAuthority.mAudience != null && aadAuthority.mAuthorityUrl != null) {\n+                        final Uri uri = Uri.parse(aadAuthority.mAuthorityUrl);\n+                        aadAuthority.mAudience.setCloudUrl(uri.getScheme() + \"://\" + uri.getHost());\n+                        // Try to extract tenant ID from the authority link.\n+                        if (!TextUtils.isEmpty(uri.getLastPathSegment())) {\n+                            aadAuthority.mAudience.setTenantId(uri.getLastPathSegment());\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MjI1OA=="}, "originalCommit": {"oid": "bb127e6f596ab5fc0280727f6287a953e8a32e37"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3NTg4Mg==", "bodyText": "We should be able to by splitting the URL in parts and checking the last segment and create the following mapping:\n\n/common - AllAccounts\n/organizations - AnyOrganizationalAccount\n/consumers - AnyPersonalAccount\n/tenantId (or tenantName) - AccountsInOneOrganization\n\nand then we can initialize the authority object with the correct audience", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/991#discussion_r466675882", "createdAt": "2020-08-06T20:44:56Z", "author": {"login": "shahzaibj"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/authorities/AuthorityDeserializer.java", "diffHunk": "@@ -48,9 +51,14 @@ public Authority deserialize(JsonElement json, Type typeOfT, JsonDeserialization\n                             TAG + methodName,\n                             \"Type: AAD\"\n                     );\n-                    AzureActiveDirectoryAuthority aadAuthority = context.deserialize(authorityObject, AzureActiveDirectoryAuthority.class);\n-                    if (aadAuthority != null && aadAuthority.mAudience != null) {\n-                        aadAuthority.mAudience.setCloudUrl(aadAuthority.mAuthorityUrl);\n+                    final AzureActiveDirectoryAuthority aadAuthority = context.deserialize(authorityObject, AzureActiveDirectoryAuthority.class);\n+                    if (aadAuthority != null && aadAuthority.mAudience != null && aadAuthority.mAuthorityUrl != null) {\n+                        final Uri uri = Uri.parse(aadAuthority.mAuthorityUrl);\n+                        aadAuthority.mAudience.setCloudUrl(uri.getScheme() + \"://\" + uri.getHost());\n+                        // Try to extract tenant ID from the authority link.\n+                        if (!TextUtils.isEmpty(uri.getLastPathSegment())) {\n+                            aadAuthority.mAudience.setTenantId(uri.getLastPathSegment());\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MjI1OA=="}, "originalCommit": {"oid": "bb127e6f596ab5fc0280727f6287a953e8a32e37"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3Njg4Nw==", "bodyText": "ah ok. makes sense. will do.", "url": "https://github.com/AzureAD/microsoft-authentication-library-common-for-android/pull/991#discussion_r466676887", "createdAt": "2020-08-06T20:47:04Z", "author": {"login": "rpdome"}, "path": "common/src/main/java/com/microsoft/identity/common/internal/authorities/AuthorityDeserializer.java", "diffHunk": "@@ -48,9 +51,14 @@ public Authority deserialize(JsonElement json, Type typeOfT, JsonDeserialization\n                             TAG + methodName,\n                             \"Type: AAD\"\n                     );\n-                    AzureActiveDirectoryAuthority aadAuthority = context.deserialize(authorityObject, AzureActiveDirectoryAuthority.class);\n-                    if (aadAuthority != null && aadAuthority.mAudience != null) {\n-                        aadAuthority.mAudience.setCloudUrl(aadAuthority.mAuthorityUrl);\n+                    final AzureActiveDirectoryAuthority aadAuthority = context.deserialize(authorityObject, AzureActiveDirectoryAuthority.class);\n+                    if (aadAuthority != null && aadAuthority.mAudience != null && aadAuthority.mAuthorityUrl != null) {\n+                        final Uri uri = Uri.parse(aadAuthority.mAuthorityUrl);\n+                        aadAuthority.mAudience.setCloudUrl(uri.getScheme() + \"://\" + uri.getHost());\n+                        // Try to extract tenant ID from the authority link.\n+                        if (!TextUtils.isEmpty(uri.getLastPathSegment())) {\n+                            aadAuthority.mAudience.setTenantId(uri.getLastPathSegment());\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MjI1OA=="}, "originalCommit": {"oid": "bb127e6f596ab5fc0280727f6287a953e8a32e37"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2195, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}