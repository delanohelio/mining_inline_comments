{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MDgyMzMy", "number": 305, "title": "Update smithy-build to use NodeMapper", "bodyText": "Update smithy-build to use NodeMapper\nThe NodeMapper is now used to load smithy-build.json configuration\nfiles, reducing the boilerplate needed to deserialize it (and the\nerror-prone need to manually update the deserialization code as things\nare added to the POJOs). The #toNode methods and methods were removed\nfrom the build/model/* classes for the same reasons.\n\nAn explicit POJO that defines the format of smithy-build-info.json files\nwas added, and the NodeMapper is now used to serialize it. This should\ngive the format a well-defined structure and allow other tools to\nproperly deserialize it too.\n\nFinally, a ConfigurableSmithyBuildPlugin abstract class was added that\nmakes it easier to add NodeMapper deserialization into a plugin specific\nconfiguration POJO. Most plugins will ultimately extend from this class\nand get deserialization for free.\n\n\n\nAdds support for more build transform options\nThis commit updates smithy-build so that model transformations accept\nan object of configuration values rather than just a list of strings.\nThis makes transformers far more powerful and configurable. In order to\nmaintain backward compatibility with existing smithy-build.json files,\nan array of strings provided for a transformer is automatically\ntransformed into `{\"__args\": [X]}` where \"X\" is the original array of\narguments.\n```\n\n\n\n\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-03-07T01:11:26Z", "url": "https://github.com/awslabs/smithy/pull/305", "merged": true, "mergeCommit": {"oid": "7915e0d000fd337804b92f12521cdadd2c88ddd5"}, "closed": true, "closedAt": "2020-03-09T18:10:16Z", "author": {"login": "mtdowling"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLO9cbAH2gAyMzg1MDgyMzMyOjU2MDhkM2ExODI5MTQxM2ExM2Y1OTYwYTc2ZTgwZGQ0Mjk0MDUyZDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMBl_7gFqTM3MTM5NjAzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5608d3a18291413a13f5960a76e80dd4294052d4", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/5608d3a18291413a13f5960a76e80dd4294052d4", "committedDate": "2020-03-07T06:45:02Z", "message": "Update smithy-build to use NodeMapper\n\nThe NodeMapper is now used to load smithy-build.json configuration\nfiles, reducing the boilerplate needed to deserialize it (and the\nerror-prone need to manually update the deserialization code as things\nare added to the POJOs). The #toNode methods and methods were removed\nfrom the build/model/* classes for the same reasons.\n\nAn explicit POJO that defines the format of smithy-build-info.json files\nwas added, and the NodeMapper is now used to serialize it. This should\ngive the format a well-defined structure and allow other tools to\nproperly deserialize it too.\n\nFinally, a ConfigurableSmithyBuildPlugin abstract class was added that\nmakes it easier to add NodeMapper deserialization into a plugin specific\nconfiguration POJO. Most plugins will ultimately extend from this class\nand get deserialization for free."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9458ed09203aa93547f5ed2e0194e2c3acbb6ed1", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/9458ed09203aa93547f5ed2e0194e2c3acbb6ed1", "committedDate": "2020-03-07T01:10:32Z", "message": "Update smithy-build to use NodeMapper\n\nThe NodeMapper is now used to load smithy-build.json configuration\nfiles, reducing the boilerplate needed to deserialize it (and the\nerror-prone need to manually update the deserialization code as things\nare added to the POJOs). The #toNode methods and methods were removed\nfrom the build/model/* classes for the same reasons.\n\nAn explicit POJO that defines the format of smithy-build-info.json files\nwas added, and the NodeMapper is now used to serialize it. This should\ngive the format a well-defined structure and allow other tools to\nproperly deserialize it too.\n\nFinally, a ConfigurableSmithyBuildPlugin abstract class was added that\nmakes it easier to add NodeMapper deserialization into a plugin specific\nconfiguration POJO. Most plugins will ultimately extend from this class\nand get deserialization for free."}, "afterCommit": {"oid": "5608d3a18291413a13f5960a76e80dd4294052d4", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/5608d3a18291413a13f5960a76e80dd4294052d4", "committedDate": "2020-03-07T06:45:02Z", "message": "Update smithy-build to use NodeMapper\n\nThe NodeMapper is now used to load smithy-build.json configuration\nfiles, reducing the boilerplate needed to deserialize it (and the\nerror-prone need to manually update the deserialization code as things\nare added to the POJOs). The #toNode methods and methods were removed\nfrom the build/model/* classes for the same reasons.\n\nAn explicit POJO that defines the format of smithy-build-info.json files\nwas added, and the NodeMapper is now used to serialize it. This should\ngive the format a well-defined structure and allow other tools to\nproperly deserialize it too.\n\nFinally, a ConfigurableSmithyBuildPlugin abstract class was added that\nmakes it easier to add NodeMapper deserialization into a plugin specific\nconfiguration POJO. Most plugins will ultimately extend from this class\nand get deserialization for free."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e9d9b4c647650dd90b4b63e0ac3185899dab7aa", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/8e9d9b4c647650dd90b4b63e0ac3185899dab7aa", "committedDate": "2020-03-09T02:04:29Z", "message": "Adds support for more build transform options\n\nThis commit updates smithy-build so that model transformations accept\nan object of configuration values rather than just a list of strings.\nThis makes transformers far more powerful and configurable. In order to\nmaintain backward compatibility with existing smithy-build.json files,\nan array of strings provided for a transformer is automatically\ntransformed into `{\"__args\": [X]}` where \"X\" is the original array of\narguments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMzk2MDM5", "url": "https://github.com/awslabs/smithy/pull/305#pullrequestreview-371396039", "createdAt": "2020-03-09T17:44:25Z", "commit": {"oid": "8e9d9b4c647650dd90b4b63e0ac3185899dab7aa"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzo0NDoyNVrOFzy4Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzo0NDoyNVrOFzy4Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg1NTI3NA==", "bodyText": "This seems like a pretty rare case to run in to, but calling out that we're removing this without having deprecated it in 0.9.x.", "url": "https://github.com/awslabs/smithy/pull/305#discussion_r389855274", "createdAt": "2020-03-09T17:44:25Z", "author": {"login": "kstich"}, "path": "smithy-build/src/main/java/software/amazon/smithy/build/transforms/TraitRemovalUtils.java", "diffHunk": "@@ -16,27 +16,26 @@\n package software.amazon.smithy.build.transforms;\n \n import java.util.HashSet;\n-import java.util.List;\n import java.util.Set;\n-import software.amazon.smithy.build.ProjectionTransformer;\n-import software.amazon.smithy.model.loader.Prelude;\n import software.amazon.smithy.model.shapes.Shape;\n import software.amazon.smithy.model.shapes.ShapeId;\n import software.amazon.smithy.model.traits.Trait;\n import software.amazon.smithy.utils.Pair;\n \n-abstract class AbstractTraitRemoval implements ProjectionTransformer {\n-    Pair<Set<ShapeId>, Set<String>> parseTraits(List<String> arguments) {\n+/**\n+ * Utilities for {@link IncludeTraits} and {@link ExcludeTraits}.\n+ */\n+final class TraitRemovalUtils {\n+\n+    private TraitRemovalUtils() {}\n+\n+    static Pair<Set<ShapeId>, Set<String>> parseTraits(Set<String> ids) {\n         Set<ShapeId> traitNames = new HashSet<>();\n         Set<String> traitNamespaces = new HashSet<>();\n \n-        for (String arg : arguments) {\n+        for (String arg : ids) {\n             if (arg.endsWith(\"#\")) {\n                 traitNamespaces.add(arg.substring(0, arg.length() - 1));\n-            } else if (arg.equals(Prelude.NAMESPACE)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e9d9b4c647650dd90b4b63e0ac3185899dab7aa"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2331, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}