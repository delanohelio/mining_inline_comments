{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NTYyODA1", "number": 263, "title": "Use Gradle plugin to build protocol tests", "bodyText": "Make various improvements geared towards Gradle/CLI\nAWS protocol tests:\n\nUse the Gradle plugin to build the AWS protocol tests.\n\nSmithyBuild:\n\nOnly run parallel projections if there's more than one.\n\nSmithyCli (breaking CLI changes):\n\nto allow the writing to stderr and stdout to be completely customized\nusing a Consumer. This allows the Gradle plugin to log writes\nto stdout rather than rely on the non-thread-safe default behavior of\nintercepting calls.\nColors nows is used by calling out and err directly on an enum variant\nrather than a static method.\nAdding the --logging parameter to every command and removed the static\nconfigureLogging method.\nAdding stdout and stderr methods to the Cli. These are now called\nby Colors when writing.\nEnabling disabling ANSI colors is done on Cli and not on Colors now.\nAll of the methods used to influence the CLI globally is now all on\nthe Cli.\nLogging is only configured when a logging option is passed in. A\ncustom logger is used that makes calls to the intercepted stderr\nmethod.\nRunning build now shows validation results too.\n\nSmithyModel:\n\nValidationEvents are now sorted by filename, line number, column,\nseverity, shape ID, message, then finally the event ID.\nIntroducing the ValidationEventFormatter interface. There are\nnow implementations of the current display (showing the event on\na single line like CheckStyle), and a contextual formatter that\nshows the line of the source file that has the error.", "createdAt": "2020-01-19T18:25:04Z", "url": "https://github.com/awslabs/smithy/pull/263", "merged": true, "mergeCommit": {"oid": "7a5f415a2e7c354cf1e0ce057b7b1a73e02c0d06"}, "closed": true, "closedAt": "2020-01-27T18:37:11Z", "author": {"login": "mtdowling"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8vNb-ABqjI5Njg3NzAzMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-hFvJAFqTM0ODg4MTc3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed1451e56f6dc082c71e44d5fa8e69ae92554491", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/ed1451e56f6dc082c71e44d5fa8e69ae92554491", "committedDate": "2020-01-19T18:16:45Z", "message": "Use Gradle plugin to build protocol tests"}, "afterCommit": {"oid": "6d2c51e3b2570df7e3ba4575f207a0615e9918e1", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/6d2c51e3b2570df7e3ba4575f207a0615e9918e1", "committedDate": "2020-01-22T05:49:56Z", "message": "Make various improvements geared towards Gradle/CLI\n\nAWS protocol tests:\n- Use the Gradle plugin to build the AWS protocol tests.\n\nSmithyBuild:\n- Only run parallel projections if there's more than one.\n\nSmithyCli (breaking CLI changes):\n- to allow the writing to stderr and stdout to be completely customized\n  using a Consumer<String>. This allows the Gradle plugin to log writes\n  to stdout rather than rely on the non-thread-safe default behavior of\n  intercepting calls.\n- Colors nows is used by calling out and err directly on an enum variant\n  rather than a static method.\n- Adding the --logging parameter to every command and removed the static\n  `configureLogging` method.\n- Adding `stdout` and `stderr` methods to the Cli. These are now called\n  by Colors when writing.\n- Enabling disabling ANSI colors is done on Cli and not on Colors now.\n  All of the methods used to influence the CLI globally is now all on\n  the Cli.\n- Logging is only configured when a logging option is passed in. A\n  custom logger is used that makes calls to the intercepted stderr\n  method.\n- Running `build` now shows validation results too.\n\nSmithyModel:\n- ValidationEvents are now sorted by filename, line number, column,\n  severity, shape ID, message, then finally the event ID.\n- Introducing the ValidationEventFormatter interface. There are\n  now implementations of the current display (showing the event on\n  a single line like CheckStyle), and a contextual formatter that\n  shows the line of the source file that has the error."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6d2c51e3b2570df7e3ba4575f207a0615e9918e1", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/6d2c51e3b2570df7e3ba4575f207a0615e9918e1", "committedDate": "2020-01-22T05:49:56Z", "message": "Make various improvements geared towards Gradle/CLI\n\nAWS protocol tests:\n- Use the Gradle plugin to build the AWS protocol tests.\n\nSmithyBuild:\n- Only run parallel projections if there's more than one.\n\nSmithyCli (breaking CLI changes):\n- to allow the writing to stderr and stdout to be completely customized\n  using a Consumer<String>. This allows the Gradle plugin to log writes\n  to stdout rather than rely on the non-thread-safe default behavior of\n  intercepting calls.\n- Colors nows is used by calling out and err directly on an enum variant\n  rather than a static method.\n- Adding the --logging parameter to every command and removed the static\n  `configureLogging` method.\n- Adding `stdout` and `stderr` methods to the Cli. These are now called\n  by Colors when writing.\n- Enabling disabling ANSI colors is done on Cli and not on Colors now.\n  All of the methods used to influence the CLI globally is now all on\n  the Cli.\n- Logging is only configured when a logging option is passed in. A\n  custom logger is used that makes calls to the intercepted stderr\n  method.\n- Running `build` now shows validation results too.\n\nSmithyModel:\n- ValidationEvents are now sorted by filename, line number, column,\n  severity, shape ID, message, then finally the event ID.\n- Introducing the ValidationEventFormatter interface. There are\n  now implementations of the current display (showing the event on\n  a single line like CheckStyle), and a contextual formatter that\n  shows the line of the source file that has the error."}, "afterCommit": {"oid": "9dbae1ffebb259f60f0e225cf93499273ba0e7a6", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/9dbae1ffebb259f60f0e225cf93499273ba0e7a6", "committedDate": "2020-01-22T22:45:39Z", "message": "Make various improvements geared towards Gradle/CLI\n\nAWS protocol tests:\n- Use the Gradle plugin to build the AWS protocol tests.\n\nSmithyBuild:\n- Only run parallel projections if there's more than one.\n\nSmithyCli (breaking CLI changes):\n- to allow the writing to stderr and stdout to be completely customized\n  using a Consumer<String>. This allows the Gradle plugin to log writes\n  to stdout rather than rely on the non-thread-safe default behavior of\n  intercepting calls.\n- Colors nows is used by calling out and err directly on an enum variant\n  rather than a static method.\n- Adding the --logging parameter to every command and removed the static\n  `configureLogging` method.\n- Adding `stdout` and `stderr` methods to the Cli. These are now called\n  by Colors when writing.\n- Enabling disabling ANSI colors is done on Cli and not on Colors now.\n  All of the methods used to influence the CLI globally is now all on\n  the Cli.\n- Logging is only configured when a logging option is passed in. A\n  custom logger is used that makes calls to the intercepted stderr\n  method.\n- Running `build` now shows validation results too.\n\nSmithyModel:\n- ValidationEvents are now sorted by filename, line number, column,\n  severity, shape ID, message, then finally the event ID.\n- Introducing the ValidationEventFormatter interface. There are\n  now implementations of the current display (showing the event on\n  a single line like CheckStyle), and a contextual formatter that\n  shows the line of the source file that has the error."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2OTk0Njcx", "url": "https://github.com/awslabs/smithy/pull/263#pullrequestreview-346994671", "createdAt": "2020-01-23T00:24:33Z", "commit": {"oid": "9dbae1ffebb259f60f0e225cf93499273ba0e7a6"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMDoyNDozM1rOFgvhiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwMDozMDoxN1rOFgvnHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg3NzM4NA==", "bodyText": "Nitpick, but this should be named something like ansiColorsSupported", "url": "https://github.com/awslabs/smithy/pull/263#discussion_r369877384", "createdAt": "2020-01-23T00:24:33Z", "author": {"login": "JordonPhillips"}, "path": "smithy-cli/src/main/java/software/amazon/smithy/cli/Cli.java", "diffHunk": "@@ -148,37 +149,96 @@ public void run(String[] args) {\n         }\n     }\n \n-    private void configureLogging(String[] args) {\n-        if (configureLogging && !hasArgument(args, QUIET_LOGS)) {\n-            Handler handler = getConsoleHandler();\n-            if (hasArgument(args, DEBUG)) {\n-                handler.setFormatter(new DebugFormatter());\n-                handler.setLevel(Level.ALL);\n-                // Configure logging level of all loggers.\n-                Logger rootLogger = LogManager.getLogManager().getLogger(\"\");\n-                rootLogger.setLevel(Level.ALL);\n-                for (Handler h : rootLogger.getHandlers()) {\n-                    h.setLevel(Level.ALL);\n-                }\n-            } else {\n-                handler.setFormatter(new BasicFormatter());\n-                handler.setLevel(Level.WARNING);\n-            }\n-        }\n+    /**\n+     * Configures a custom STDOUT printer.\n+     *\n+     * @param printer Consumer responsible for writing to STDOUT.\n+     */\n+    public static void setStdout(Consumer<String> printer) {\n+        out = printer;\n+    }\n+\n+    /**\n+     * Configures a custom STDERR printer.\n+     *\n+     * @param printer Consumer responsible for writing to STDERR.\n+     */\n+    public static void setStderr(Consumer<String> printer) {\n+        err = printer;\n+    }\n+\n+    /**\n+     * Write a line of text to the configured STDOUT.\n+     *\n+     * @param message Message to write.\n+     */\n+    public static void stdout(Object message) {\n+        out.accept(String.valueOf(message));\n+    }\n+\n+    /**\n+     * Write a line of text to the configured STDERR.\n+     *\n+     * @param message Message to write.\n+     */\n+    public static void stderr(Object message) {\n+        err.accept(String.valueOf(message));\n     }\n \n-    private static Handler getConsoleHandler() {\n+    /**\n+     * Explicitly configures whether or not to use ANSI colors.\n+     *\n+     * @param useAnsiColors Set to true or false to enable/disable.\n+     */\n+    public static void setUseAnsiColors(boolean useAnsiColors) {\n+        Cli.useAnsiColors = useAnsiColors;\n+    }\n+\n+    /**\n+     * Does a really simple check to see if ANSI colors are supported.\n+     *\n+     * @return Returns true if ANSI probably works.\n+     */\n+    private static boolean useAnsi() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dbae1ffebb259f60f0e225cf93499273ba0e7a6"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg3ODgxNA==", "bodyText": "This should probably be Cli.stderr(", "url": "https://github.com/awslabs/smithy/pull/263#discussion_r369878814", "createdAt": "2020-01-23T00:30:17Z", "author": {"login": "JordonPhillips"}, "path": "smithy-cli/src/main/java/software/amazon/smithy/cli/Cli.java", "diffHunk": "@@ -309,4 +368,28 @@ public synchronized String format(LogRecord r) {\n                    + r.getMessage() + System.lineSeparator();\n         }\n     }\n+\n+    /**\n+     * Logs messages to the CLI's redirect stderr.\n+     */\n+    private static final class CliLogHandler extends Handler {\n+        private final Formatter formatter;\n+\n+        CliLogHandler(Formatter formatter) {\n+            this.formatter = formatter;\n+        }\n+\n+        @Override\n+        public void publish(LogRecord record) {\n+            if (isLoggable(record)) {\n+                Cli.err.accept(formatter.format(record));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dbae1ffebb259f60f0e225cf93499273ba0e7a6"}, "originalPosition": 273}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9dbae1ffebb259f60f0e225cf93499273ba0e7a6", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/9dbae1ffebb259f60f0e225cf93499273ba0e7a6", "committedDate": "2020-01-22T22:45:39Z", "message": "Make various improvements geared towards Gradle/CLI\n\nAWS protocol tests:\n- Use the Gradle plugin to build the AWS protocol tests.\n\nSmithyBuild:\n- Only run parallel projections if there's more than one.\n\nSmithyCli (breaking CLI changes):\n- to allow the writing to stderr and stdout to be completely customized\n  using a Consumer<String>. This allows the Gradle plugin to log writes\n  to stdout rather than rely on the non-thread-safe default behavior of\n  intercepting calls.\n- Colors nows is used by calling out and err directly on an enum variant\n  rather than a static method.\n- Adding the --logging parameter to every command and removed the static\n  `configureLogging` method.\n- Adding `stdout` and `stderr` methods to the Cli. These are now called\n  by Colors when writing.\n- Enabling disabling ANSI colors is done on Cli and not on Colors now.\n  All of the methods used to influence the CLI globally is now all on\n  the Cli.\n- Logging is only configured when a logging option is passed in. A\n  custom logger is used that makes calls to the intercepted stderr\n  method.\n- Running `build` now shows validation results too.\n\nSmithyModel:\n- ValidationEvents are now sorted by filename, line number, column,\n  severity, shape ID, message, then finally the event ID.\n- Introducing the ValidationEventFormatter interface. There are\n  now implementations of the current display (showing the event on\n  a single line like CheckStyle), and a contextual formatter that\n  shows the line of the source file that has the error."}, "afterCommit": {"oid": "6df3f6c8ede1c7643b7aa3e37937fa58eb9e29b3", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/6df3f6c8ede1c7643b7aa3e37937fa58eb9e29b3", "committedDate": "2020-01-23T01:23:10Z", "message": "Make various improvements geared towards Gradle/CLI\n\nAWS protocol tests:\n- Use the Gradle plugin to build the AWS protocol tests.\n\nSmithyBuild:\n- Only run parallel projections if there's more than one.\n\nSmithyCli (breaking CLI changes):\n- to allow the writing to stderr and stdout to be completely customized\n  using a Consumer<String>. This allows the Gradle plugin to log writes\n  to stdout rather than rely on the non-thread-safe default behavior of\n  intercepting calls.\n- Colors nows is used by calling out and err directly on an enum variant\n  rather than a static method.\n- Adding the --logging parameter to every command and removed the static\n  `configureLogging` method.\n- Adding `stdout` and `stderr` methods to the Cli. These are now called\n  by Colors when writing.\n- Enabling disabling ANSI colors is done on Cli and not on Colors now.\n  All of the methods used to influence the CLI globally is now all on\n  the Cli.\n- Logging is only configured when a logging option is passed in. A\n  custom logger is used that makes calls to the intercepted stderr\n  method.\n- Running `build` now shows validation results too.\n\nSmithyModel:\n- ValidationEvents are now sorted by filename, line number, column,\n  severity, shape ID, message, then finally the event ID.\n- Introducing the ValidationEventFormatter interface. There are\n  now implementations of the current display (showing the event on\n  a single line like CheckStyle), and a contextual formatter that\n  shows the line of the source file that has the error."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NjI0Mjg2", "url": "https://github.com/awslabs/smithy/pull/263#pullrequestreview-347624286", "createdAt": "2020-01-23T21:36:21Z", "commit": {"oid": "6df3f6c8ede1c7643b7aa3e37937fa58eb9e29b3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6df3f6c8ede1c7643b7aa3e37937fa58eb9e29b3", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/6df3f6c8ede1c7643b7aa3e37937fa58eb9e29b3", "committedDate": "2020-01-23T01:23:10Z", "message": "Make various improvements geared towards Gradle/CLI\n\nAWS protocol tests:\n- Use the Gradle plugin to build the AWS protocol tests.\n\nSmithyBuild:\n- Only run parallel projections if there's more than one.\n\nSmithyCli (breaking CLI changes):\n- to allow the writing to stderr and stdout to be completely customized\n  using a Consumer<String>. This allows the Gradle plugin to log writes\n  to stdout rather than rely on the non-thread-safe default behavior of\n  intercepting calls.\n- Colors nows is used by calling out and err directly on an enum variant\n  rather than a static method.\n- Adding the --logging parameter to every command and removed the static\n  `configureLogging` method.\n- Adding `stdout` and `stderr` methods to the Cli. These are now called\n  by Colors when writing.\n- Enabling disabling ANSI colors is done on Cli and not on Colors now.\n  All of the methods used to influence the CLI globally is now all on\n  the Cli.\n- Logging is only configured when a logging option is passed in. A\n  custom logger is used that makes calls to the intercepted stderr\n  method.\n- Running `build` now shows validation results too.\n\nSmithyModel:\n- ValidationEvents are now sorted by filename, line number, column,\n  severity, shape ID, message, then finally the event ID.\n- Introducing the ValidationEventFormatter interface. There are\n  now implementations of the current display (showing the event on\n  a single line like CheckStyle), and a contextual formatter that\n  shows the line of the source file that has the error."}, "afterCommit": {"oid": "2631fddff16b07e078fab9748419bc49598eb0d3", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/2631fddff16b07e078fab9748419bc49598eb0d3", "committedDate": "2020-01-23T21:41:46Z", "message": "Make various improvements geared towards Gradle/CLI\n\nAWS protocol tests:\n- Use the Gradle plugin to build the AWS protocol tests.\n\nSmithyBuild:\n- Only run parallel projections if there's more than one.\n\nSmithyCli (breaking CLI changes):\n- to allow the writing to stderr and stdout to be completely customized\n  using a Consumer<String>. This allows the Gradle plugin to log writes\n  to stdout rather than rely on the non-thread-safe default behavior of\n  intercepting calls.\n- Colors nows is used by calling out and err directly on an enum variant\n  rather than a static method.\n- Adding the --logging parameter to every command and removed the static\n  `configureLogging` method.\n- Adding `stdout` and `stderr` methods to the Cli. These are now called\n  by Colors when writing.\n- Enabling disabling ANSI colors is done on Cli and not on Colors now.\n  All of the methods used to influence the CLI globally is now all on\n  the Cli.\n- Logging is only configured when a logging option is passed in. A\n  custom logger is used that makes calls to the intercepted stderr\n  method.\n- Running `build` now shows validation results too.\n\nSmithyModel:\n- ValidationEvents are now sorted by filename, line number, column,\n  severity, shape ID, message, then finally the event ID.\n- Introducing the ValidationEventFormatter interface. There are\n  now implementations of the current display (showing the event on\n  a single line like CheckStyle), and a contextual formatter that\n  shows the line of the source file that has the error."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fbc82ace134f9f193fb97c81b15c3cad2ff227e", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/0fbc82ace134f9f193fb97c81b15c3cad2ff227e", "committedDate": "2020-01-24T22:48:46Z", "message": "Make various improvements geared towards Gradle/CLI\n\nAWS protocol tests:\n- Use the Gradle plugin to build the AWS protocol tests.\n\nSmithyBuild:\n- Only run parallel projections if there's more than one.\n\nSmithyCli (breaking CLI changes):\n- to allow the writing to stderr and stdout to be completely customized\n  using a Consumer<String>. This allows the Gradle plugin to log writes\n  to stdout rather than rely on the non-thread-safe default behavior of\n  intercepting calls.\n- Colors nows is used by calling out and err directly on an enum variant\n  rather than a static method.\n- Adding the --logging parameter to every command and removed the static\n  `configureLogging` method.\n- Adding `stdout` and `stderr` methods to the Cli. These are now called\n  by Colors when writing.\n- Enabling disabling ANSI colors is done on Cli and not on Colors now.\n  All of the methods used to influence the CLI globally is now all on\n  the Cli.\n- Logging is only configured when a logging option is passed in. A\n  custom logger is used that makes calls to the intercepted stderr\n  method.\n- Running `build` now shows validation results too.\n\nSmithyModel:\n- ValidationEvents are now sorted by filename, line number, column,\n  severity, shape ID, message, then finally the event ID.\n- Introducing the ValidationEventFormatter interface. There are\n  now implementations of the current display (showing the event on\n  a single line like CheckStyle), and a contextual formatter that\n  shows the line of the source file that has the error."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2631fddff16b07e078fab9748419bc49598eb0d3", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/2631fddff16b07e078fab9748419bc49598eb0d3", "committedDate": "2020-01-23T21:41:46Z", "message": "Make various improvements geared towards Gradle/CLI\n\nAWS protocol tests:\n- Use the Gradle plugin to build the AWS protocol tests.\n\nSmithyBuild:\n- Only run parallel projections if there's more than one.\n\nSmithyCli (breaking CLI changes):\n- to allow the writing to stderr and stdout to be completely customized\n  using a Consumer<String>. This allows the Gradle plugin to log writes\n  to stdout rather than rely on the non-thread-safe default behavior of\n  intercepting calls.\n- Colors nows is used by calling out and err directly on an enum variant\n  rather than a static method.\n- Adding the --logging parameter to every command and removed the static\n  `configureLogging` method.\n- Adding `stdout` and `stderr` methods to the Cli. These are now called\n  by Colors when writing.\n- Enabling disabling ANSI colors is done on Cli and not on Colors now.\n  All of the methods used to influence the CLI globally is now all on\n  the Cli.\n- Logging is only configured when a logging option is passed in. A\n  custom logger is used that makes calls to the intercepted stderr\n  method.\n- Running `build` now shows validation results too.\n\nSmithyModel:\n- ValidationEvents are now sorted by filename, line number, column,\n  severity, shape ID, message, then finally the event ID.\n- Introducing the ValidationEventFormatter interface. There are\n  now implementations of the current display (showing the event on\n  a single line like CheckStyle), and a contextual formatter that\n  shows the line of the source file that has the error."}, "afterCommit": {"oid": "0fbc82ace134f9f193fb97c81b15c3cad2ff227e", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/0fbc82ace134f9f193fb97c81b15c3cad2ff227e", "committedDate": "2020-01-24T22:48:46Z", "message": "Make various improvements geared towards Gradle/CLI\n\nAWS protocol tests:\n- Use the Gradle plugin to build the AWS protocol tests.\n\nSmithyBuild:\n- Only run parallel projections if there's more than one.\n\nSmithyCli (breaking CLI changes):\n- to allow the writing to stderr and stdout to be completely customized\n  using a Consumer<String>. This allows the Gradle plugin to log writes\n  to stdout rather than rely on the non-thread-safe default behavior of\n  intercepting calls.\n- Colors nows is used by calling out and err directly on an enum variant\n  rather than a static method.\n- Adding the --logging parameter to every command and removed the static\n  `configureLogging` method.\n- Adding `stdout` and `stderr` methods to the Cli. These are now called\n  by Colors when writing.\n- Enabling disabling ANSI colors is done on Cli and not on Colors now.\n  All of the methods used to influence the CLI globally is now all on\n  the Cli.\n- Logging is only configured when a logging option is passed in. A\n  custom logger is used that makes calls to the intercepted stderr\n  method.\n- Running `build` now shows validation results too.\n\nSmithyModel:\n- ValidationEvents are now sorted by filename, line number, column,\n  severity, shape ID, message, then finally the event ID.\n- Introducing the ValidationEventFormatter interface. There are\n  now implementations of the current display (showing the event on\n  a single line like CheckStyle), and a contextual formatter that\n  shows the line of the source file that has the error."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9702f0179461ff07019fb99d3eaf391efee6589e", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/9702f0179461ff07019fb99d3eaf391efee6589e", "committedDate": "2020-01-27T18:23:14Z", "message": "Run Smithy test suites as parameterized tests\n\nThis commit updates SmithyTestSuite to support easily running test\nsuites as JUnit 5 ParameterizedTests. This allows JUnit to control how\ntests are executed and provides better error reporting. Tests seem to\nexecute more or less in the same amount of time as before."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4ODc5OTUy", "url": "https://github.com/awslabs/smithy/pull/263#pullrequestreview-348879952", "createdAt": "2020-01-27T18:28:22Z", "commit": {"oid": "9702f0179461ff07019fb99d3eaf391efee6589e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4ODgxNzc5", "url": "https://github.com/awslabs/smithy/pull/263#pullrequestreview-348881779", "createdAt": "2020-01-27T18:31:22Z", "commit": {"oid": "0fbc82ace134f9f193fb97c81b15c3cad2ff227e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2308, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}