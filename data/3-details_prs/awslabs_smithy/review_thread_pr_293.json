{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNTA5MzU1", "number": 293, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoyOTowMFrODji6Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNzozNTo1MVrODj5UNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTk4NzExOnYy", "diffSide": "RIGHT", "path": "docs/source/guides/converting-to-openapi.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoyOTowMFrOFvabMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoyOTowMFrOFvabMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI2MDMzNw==", "bodyText": "s/which/with/", "url": "https://github.com/awslabs/smithy/pull/293#discussion_r385260337", "createdAt": "2020-02-27T17:29:00Z", "author": {"login": "JordonPhillips"}, "path": "docs/source/guides/converting-to-openapi.rst", "diffHunk": "@@ -289,6 +292,36 @@ openapi.substitutions (``Map<String, any>``)\n             }\n         }\n \n+openapi.jsonAdd (``Map<String, Node>``)\n+    Adds or replaces the JSON value in the generated OpenAPI document at the\n+    given JSON pointer locations with a different JSON value. The value must\n+    be a map where each key is a valid JSON pointer string as defined in\n+    :rfc:`6901`. Each value in the map is the JSON value to add or replace\n+    at the given target.\n+\n+    Values are added using similar semantics of the \"add\" operation of\n+    JSON Patch, as specified in :rfc:`6902`, which the exception that adding", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3479e074f0e946fb6fbf599a9e8ffa28bdaddc1"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4OTY1ODE1OnYy", "diffSide": "RIGHT", "path": "smithy-jsonschema/src/main/java/software/amazon/smithy/jsonschema/SchemaDocument.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNzozNTo1MVrOFv9JKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNzozNTo1MVrOFv9JKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTgyOTE2MQ==", "bodyText": "s/add/at", "url": "https://github.com/awslabs/smithy/pull/293#discussion_r385829161", "createdAt": "2020-02-28T17:35:51Z", "author": {"login": "kstich"}, "path": "smithy-jsonschema/src/main/java/software/amazon/smithy/jsonschema/SchemaDocument.java", "diffHunk": "@@ -182,46 +146,37 @@ public Schema getRootSchema() {\n      * @return Returns the optionally found schema definition.\n      */\n     public Optional<Schema> getDefinition(String pointer) {\n-        pointer = unescapeJsonSchema(pointer);\n+        String unescaped = NodePointer.unescape(pointer);\n \n-        if (definitions.containsKey(pointer)) {\n-            return Optional.ofNullable(definitions.get(pointer));\n-        } else if (pointer.isEmpty()) {\n-            return Optional.of(getRootSchema());\n+        // Attempt to get the unescaped pointer, as-is.\n+        if (definitions.containsKey(unescaped)) {\n+            return Optional.ofNullable(definitions.get(unescaped));\n         }\n \n-        String prefix = \"\";\n-        String[] refs = pointer.split(\"/\");\n+        List<String> pointerParts = NodePointer.parse(pointer).getParts();\n \n-        for (int position = 0; position < refs.length; position++) {\n-            if (position > 0) {\n-                prefix += \"/\" + refs[position];\n-            } else {\n-                prefix += refs[position];\n-            }\n+        // An empty pointer returns the root schema.\n+        if (pointerParts.isEmpty()) {\n+            return Optional.of(getRootSchema());\n+        }\n+\n+        // Compute the part of the pointer that points add a literal entry in", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3479e074f0e946fb6fbf599a9e8ffa28bdaddc1"}, "originalPosition": 132}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3857, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}