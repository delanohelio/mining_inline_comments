{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MTMzMjc5", "number": 496, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo1MzowN1rOEPMZLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo1MzowN1rOEPMZLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzY3MTUwOnYy", "diffSide": "RIGHT", "path": "smithy-aws-protocol-tests/model/awsJson1_0/errors.smithy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo1MzowN1rOGyxbjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTo1MzowN1rOGyxbjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5MTg1Mw==", "bodyText": "Case is missing documentation.", "url": "https://github.com/awslabs/smithy/pull/496#discussion_r455891853", "createdAt": "2020-07-16T15:53:07Z", "author": {"login": "kstich"}, "path": "smithy-aws-protocol-tests/model/awsJson1_0/errors.smithy", "diffHunk": "@@ -0,0 +1,248 @@\n+// This file defines test cases that test error serialization.\n+\n+$version: \"1.0\"\n+\n+namespace aws.protocoltests.json10\n+\n+use aws.protocols#awsJson1_0\n+use smithy.test#httpRequestTests\n+use smithy.test#httpResponseTests\n+\n+/// This operation has three possible return values:\n+///\n+/// 1. A successful response in the form of GreetingWithErrorsOutput\n+/// 2. An InvalidGreeting error.\n+/// 3. A ComplexError error.\n+///\n+/// Implementations must be able to successfully take a response and\n+/// properly deserialize successful and error responses.\n+@idempotent\n+operation GreetingWithErrors {\n+    output: GreetingWithErrorsOutput,\n+    errors: [InvalidGreeting, ComplexError, FooError]\n+}\n+\n+structure GreetingWithErrorsOutput {\n+    greeting: String,\n+}\n+\n+/// This error is thrown when an invalid greeting value is provided.\n+@error(\"client\")\n+structure InvalidGreeting {\n+    Message: String,\n+}\n+\n+apply InvalidGreeting @httpResponseTests([\n+    {\n+        id: \"AwsJson10InvalidGreetingError\",\n+        documentation: \"Parses simple JSON errors\",\n+        protocol: awsJson1_0,\n+        params: {\n+            Message: \"Hi\"\n+        },\n+        code: 400,\n+        headers: {\n+            \"Content-Type\": \"application/x-amz-json-1.0\"\n+        },\n+        body: \"\"\"\n+              {\n+                  \"__type\": \"aws.protocoltests.json10#InvalidGreeting\",\n+                  \"Message\": \"Hi\"\n+              }\"\"\",\n+        bodyMediaType: \"application/json\",\n+    },\n+])\n+\n+/// This error is thrown when a request is invalid.\n+@error(\"client\")\n+structure ComplexError {\n+    TopLevel: String,\n+    Nested: ComplexNestedErrorData,\n+}\n+\n+structure ComplexNestedErrorData {\n+    @jsonName(\"Fooooo\")\n+    Foo: String,\n+}\n+\n+apply ComplexError @httpResponseTests([\n+    {\n+        id: \"AwsJson10ComplexError\",\n+        documentation: \"Parses a complex error with no message member\",\n+        protocol: awsJson1_0,\n+        params: {\n+            TopLevel: \"Top level\",\n+            Nested: {\n+                Foo: \"bar\"\n+            }\n+        },\n+        code: 400,\n+        headers: {\n+            \"Content-Type\": \"application/x-amz-json-1.0\"\n+        },\n+        body: \"\"\"\n+              {\n+                  \"__type\": \"aws.protocoltests.json10#ComplexError\",\n+                  \"TopLevel\": \"Top level\",\n+                  \"Nested\": {\n+                      \"Fooooo\": \"bar\"\n+                  }\n+              }\"\"\",\n+        bodyMediaType: \"application/json\",\n+    },\n+    {\n+        id: \"AwsJson10EmptyComplexError\",\n+        protocol: awsJson1_0,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "53b9bb6fa3b8fb6575e1098cd818f6aebc7cc618"}, "originalPosition": 95}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3700, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}