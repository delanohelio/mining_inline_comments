{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzMTI2MTEy", "number": 481, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwNDo0MTozNlrOELbh_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwNDo0MzoyMVrOELbiSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDIwODYxOnYy", "diffSide": "RIGHT", "path": "smithy-aws-protocol-tests/model/restJson1/empty-input-output.smithy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwNDo0MTozNlrOGs_qOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwNDo0MTozNlrOGs_qOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgzMzUyOQ==", "bodyText": "Nit: we use \"Json\" everywhere else in these tests, so \"RestJsonEmptyInputAndEmptyJsonObjectOutput\"", "url": "https://github.com/awslabs/smithy/pull/481#discussion_r449833529", "createdAt": "2020-07-05T04:41:36Z", "author": {"login": "mtdowling"}, "path": "smithy-aws-protocol-tests/model/restJson1/empty-input-output.smithy", "diffHunk": "@@ -83,20 +83,28 @@ apply EmptyInputAndEmptyOutput @httpRequestTests([\n         protocol: restJson1,\n         method: \"POST\",\n         uri: \"/EmptyInputAndEmptyOutput\",\n-        body: \"{}\",\n+        body: \"\",\n         bodyMediaType: \"application/json\"\n     },\n ])\n \n apply EmptyInputAndEmptyOutput @httpResponseTests([\n     {\n         id: \"RestJsonEmptyInputAndEmptyOutput\",\n-        documentation: \"Empty output serializes no payload\",\n+        documentation: \"Empty output deserializes no payload\",\n         protocol: restJson1,\n         code: 200,\n         body: \"\",\n         bodyMediaType: \"application/json\"\n     },\n+    {\n+        id: \"RestJsonEmptyInputAndEmptyJSONObjectOutput\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "381e9567b7bfa890f382fbf51efb49b057bb1567"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDIwOTE5OnYy", "diffSide": "RIGHT", "path": "smithy-aws-protocol-tests/model/restJson1/empty-input-output.smithy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwNDo0Mjo1M1rOGs_qfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMTo0OTo1M1rOGtoNgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgzMzU5Nw==", "bodyText": "not an issue, just a clarification: these tests are about serializing requests and responses. They aren't meant to be oriented towards clients or servers, but rather just about how messages are serialized. So a service should be able to take these tests and make sure the service is implemented correctly. That's why I used the word serialized here instead of deseralize.", "url": "https://github.com/awslabs/smithy/pull/481#discussion_r449833597", "createdAt": "2020-07-05T04:42:53Z", "author": {"login": "mtdowling"}, "path": "smithy-aws-protocol-tests/model/restJson1/empty-input-output.smithy", "diffHunk": "@@ -83,20 +83,28 @@ apply EmptyInputAndEmptyOutput @httpRequestTests([\n         protocol: restJson1,\n         method: \"POST\",\n         uri: \"/EmptyInputAndEmptyOutput\",\n-        body: \"{}\",\n+        body: \"\",\n         bodyMediaType: \"application/json\"\n     },\n ])\n \n apply EmptyInputAndEmptyOutput @httpResponseTests([\n     {\n         id: \"RestJsonEmptyInputAndEmptyOutput\",\n-        documentation: \"Empty output serializes no payload\",\n+        documentation: \"Empty output deserializes no payload\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "381e9567b7bfa890f382fbf51efb49b057bb1567"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQ5NzkyMw==", "bodyText": "Thanks for clarifying that. Updating this one thinking it was a copy/paste bug. Can revert this back.", "url": "https://github.com/awslabs/smithy/pull/481#discussion_r450497923", "createdAt": "2020-07-06T21:49:53Z", "author": {"login": "jasdel"}, "path": "smithy-aws-protocol-tests/model/restJson1/empty-input-output.smithy", "diffHunk": "@@ -83,20 +83,28 @@ apply EmptyInputAndEmptyOutput @httpRequestTests([\n         protocol: restJson1,\n         method: \"POST\",\n         uri: \"/EmptyInputAndEmptyOutput\",\n-        body: \"{}\",\n+        body: \"\",\n         bodyMediaType: \"application/json\"\n     },\n ])\n \n apply EmptyInputAndEmptyOutput @httpResponseTests([\n     {\n         id: \"RestJsonEmptyInputAndEmptyOutput\",\n-        documentation: \"Empty output serializes no payload\",\n+        documentation: \"Empty output deserializes no payload\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgzMzU5Nw=="}, "originalCommit": {"oid": "381e9567b7bfa890f382fbf51efb49b057bb1567"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNDIwOTM2OnYy", "diffSide": "RIGHT", "path": "smithy-aws-protocol-tests/model/restJson1/empty-input-output.smithy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwNDo0MzoyMVrOGs_qkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNVQwNDo0MzoyMVrOGs_qkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgzMzYxOQ==", "bodyText": "\ud83d\udc4d we found out that this test was incorrectly copied from the RPC protocols.", "url": "https://github.com/awslabs/smithy/pull/481#discussion_r449833619", "createdAt": "2020-07-05T04:43:21Z", "author": {"login": "mtdowling"}, "path": "smithy-aws-protocol-tests/model/restJson1/empty-input-output.smithy", "diffHunk": "@@ -83,20 +83,28 @@ apply EmptyInputAndEmptyOutput @httpRequestTests([\n         protocol: restJson1,\n         method: \"POST\",\n         uri: \"/EmptyInputAndEmptyOutput\",\n-        body: \"{}\",\n+        body: \"\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "381e9567b7bfa890f382fbf51efb49b057bb1567"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3687, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}