{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0NDAzNTEy", "number": 326, "title": "Make enum trait a list of structures", "bodyText": "The enum trait is currently a map of enum value to the enum definition.\nThis means that models often look like this:\n@enum(foo: {}, bar: {})\nstring MyString\n\nIdeally, a name and documentation are provided too:\n@enum(\n    foo: {name: \"FOO\", documentation: \"foo docs...\"},\n    bar: {name: \"BAR\", documentation: \"bar docs...\"})\n\nHowever, the difference between the key and \"name\" has resulted in\nconfusion as to which is which. This is caused by a couple things:\n\nThe key doesn't tell you what it defines. You have to know that the\nthe key defines the value of the enum to make sense of the trait.\nThe key has to be quoted if it deviates from the allows ABNF for node\nobject keys. This has also led to confusion.\n\nAlthough this is a breaking change, using a list of structures where\neverything has a name will result in models that are easier to\nunderstand, and hopefully modelers will more often include properties\nlike name and documentation.\nThis now looks like:\n@enum([\n    {\n        value: \"foo\",\n        name: \"FOO\",\n        documentation: \"foo docs...\"\n    },\n    {\n        value: \"bar\",\n        name: \"BAR\",\n        documentation: \"bar docs...\"\n    }\n])\n\nIssue #, if available:\nDescription of changes:\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-03-26T20:27:15Z", "url": "https://github.com/awslabs/smithy/pull/326", "merged": true, "mergeCommit": {"oid": "918bab2c4b289c419a8639606add490073bcbe07"}, "closed": true, "closedAt": "2020-03-27T00:40:14Z", "author": {"login": "mtdowling"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRjV4FAFqTM4MjQ0NzU0NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRlVeGAFqTM4MjUwMzgxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNDQ3NTQ1", "url": "https://github.com/awslabs/smithy/pull/326#pullrequestreview-382447545", "createdAt": "2020-03-26T21:52:40Z", "commit": {"oid": "bb9ebae84bc4239a5d06b855114b22dbb9ea25be"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMTo1Mjo0MFrOF8b2nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMTo1Mjo0MFrOF8b2nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkxNTIzMQ==", "bodyText": "Since we're changing this anyway, we should add @length(min: 1)", "url": "https://github.com/awslabs/smithy/pull/326#discussion_r398915231", "createdAt": "2020-03-26T21:52:40Z", "author": {"login": "JordonPhillips"}, "path": "smithy-model/src/main/resources/software/amazon/smithy/model/loader/prelude-traits.smithy", "diffHunk": "@@ -317,21 +320,25 @@ string title\n /// of constant values.\n @trait(selector: \"string\")\n @tags([\"diff.error.add\", \"diff.error.remove\"])\n-map enum {\n-    key: String,\n-    value: EnumConstantBody\n+list enum {\n+    member: EnumDefinition\n }\n \n /// An enum definition for the enum trait.\n @private\n-structure EnumConstantBody {\n+structure EnumDefinition {\n+    /// Defines the enum value that is sent over the wire.\n+    @required\n+    value: String,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb9ebae84bc4239a5d06b855114b22dbb9ea25be"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb9ebae84bc4239a5d06b855114b22dbb9ea25be", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/bb9ebae84bc4239a5d06b855114b22dbb9ea25be", "committedDate": "2020-03-26T20:23:00Z", "message": "Make enum trait a list of structures\n\nThe enum trait is currently a map of enum value to the enum definition.\nThis means that models often look like this:\n\n```\n@enum(foo: {}, bar: {})\nstring MyString\n```\n\nIdeally, a name and documentation are provided too:\n\n```\n@enum(\n    foo: {name: \"FOO\", documentation: \"foo docs...\"},\n    bar: {name: \"BAR\", documentation: \"bar docs...\"})\n```\n\nHowever, the difference between the key and \"name\" has resulted in\nconfusion as to which is which. This is caused by a couple things:\n\n1. The key doesn't tell you what it defines. You have to know that the\nthe key defines the value of the enum to make sense of the trait.\n2. The key has to be quoted if it deviates from the allows ABNF for node\nobject keys. This has also led to confusion.\n\nAlthough this is a breaking change, using a list of structures where\neverything has a name will result in models that are easier to\nunderstand, and hopefully modelers will more often include properties\nlike `name` and `documentation`."}, "afterCommit": {"oid": "d60096d1dbdd973528bc8ffd143fd712cba09153", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/d60096d1dbdd973528bc8ffd143fd712cba09153", "committedDate": "2020-03-26T22:30:22Z", "message": "Make enum trait a list of structures\n\nThe enum trait is currently a map of enum value to the enum definition.\nThis means that models often look like this:\n\n```\n@enum(foo: {}, bar: {})\nstring MyString\n```\n\nIdeally, a name and documentation are provided too:\n\n```\n@enum(\n    foo: {name: \"FOO\", documentation: \"foo docs...\"},\n    bar: {name: \"BAR\", documentation: \"bar docs...\"})\n```\n\nHowever, the difference between the key and \"name\" has resulted in\nconfusion as to which is which. This is caused by a couple things:\n\n1. The key doesn't tell you what it defines. You have to know that the\nthe key defines the value of the enum to make sense of the trait.\n2. The key has to be quoted if it deviates from the allows ABNF for node\nobject keys. This has also led to confusion.\n\nAlthough this is a breaking change, using a list of structures where\neverything has a name will result in models that are easier to\nunderstand, and hopefully modelers will more often include properties\nlike `name` and `documentation`."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNDkzNzI4", "url": "https://github.com/awslabs/smithy/pull/326#pullrequestreview-382493728", "createdAt": "2020-03-26T23:42:49Z", "commit": {"oid": "d60096d1dbdd973528bc8ffd143fd712cba09153"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzo0Mjo0OVrOF8eWaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMzo0Mjo0OVrOF8eWaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk1NjEzNg==", "bodyText": "To be clear, I meant that the value shouldn't be an empty string, though the list for sure should not be empty either", "url": "https://github.com/awslabs/smithy/pull/326#discussion_r398956136", "createdAt": "2020-03-26T23:42:49Z", "author": {"login": "JordonPhillips"}, "path": "smithy-model/src/main/resources/software/amazon/smithy/model/loader/prelude-traits.smithy", "diffHunk": "@@ -317,21 +320,25 @@ string title\n /// of constant values.\n @trait(selector: \"string\")\n @tags([\"diff.error.add\", \"diff.error.remove\"])\n-map enum {\n-    key: String,\n-    value: EnumConstantBody\n+list enum {\n+    member: EnumDefinition\n }\n \n /// An enum definition for the enum trait.\n @private\n-structure EnumConstantBody {\n+structure EnumDefinition {\n+    /// Defines the enum value that is sent over the wire.\n+    @required\n+    value: String,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkxNTIzMQ=="}, "originalCommit": {"oid": "bb9ebae84bc4239a5d06b855114b22dbb9ea25be"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "baaed3a7c6276c55635c531c936c0b4c23105cba", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/baaed3a7c6276c55635c531c936c0b4c23105cba", "committedDate": "2020-03-26T23:58:12Z", "message": "Make enum trait a list of structures\n\nThe enum trait is currently a map of enum value to the enum definition.\nThis means that models often look like this:\n\n```\n@enum(foo: {}, bar: {})\nstring MyString\n```\n\nIdeally, a name and documentation are provided too:\n\n```\n@enum(\n    foo: {name: \"FOO\", documentation: \"foo docs...\"},\n    bar: {name: \"BAR\", documentation: \"bar docs...\"})\n```\n\nHowever, the difference between the key and \"name\" has resulted in\nconfusion as to which is which. This is caused by a couple things:\n\n1. The key doesn't tell you what it defines. You have to know that the\nthe key defines the value of the enum to make sense of the trait.\n2. The key has to be quoted if it deviates from the allows ABNF for node\nobject keys. This has also led to confusion.\n\nAlthough this is a breaking change, using a list of structures where\neverything has a name will result in models that are easier to\nunderstand, and hopefully modelers will more often include properties\nlike `name` and `documentation`."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d60096d1dbdd973528bc8ffd143fd712cba09153", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/d60096d1dbdd973528bc8ffd143fd712cba09153", "committedDate": "2020-03-26T22:30:22Z", "message": "Make enum trait a list of structures\n\nThe enum trait is currently a map of enum value to the enum definition.\nThis means that models often look like this:\n\n```\n@enum(foo: {}, bar: {})\nstring MyString\n```\n\nIdeally, a name and documentation are provided too:\n\n```\n@enum(\n    foo: {name: \"FOO\", documentation: \"foo docs...\"},\n    bar: {name: \"BAR\", documentation: \"bar docs...\"})\n```\n\nHowever, the difference between the key and \"name\" has resulted in\nconfusion as to which is which. This is caused by a couple things:\n\n1. The key doesn't tell you what it defines. You have to know that the\nthe key defines the value of the enum to make sense of the trait.\n2. The key has to be quoted if it deviates from the allows ABNF for node\nobject keys. This has also led to confusion.\n\nAlthough this is a breaking change, using a list of structures where\neverything has a name will result in models that are easier to\nunderstand, and hopefully modelers will more often include properties\nlike `name` and `documentation`."}, "afterCommit": {"oid": "baaed3a7c6276c55635c531c936c0b4c23105cba", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/baaed3a7c6276c55635c531c936c0b4c23105cba", "committedDate": "2020-03-26T23:58:12Z", "message": "Make enum trait a list of structures\n\nThe enum trait is currently a map of enum value to the enum definition.\nThis means that models often look like this:\n\n```\n@enum(foo: {}, bar: {})\nstring MyString\n```\n\nIdeally, a name and documentation are provided too:\n\n```\n@enum(\n    foo: {name: \"FOO\", documentation: \"foo docs...\"},\n    bar: {name: \"BAR\", documentation: \"bar docs...\"})\n```\n\nHowever, the difference between the key and \"name\" has resulted in\nconfusion as to which is which. This is caused by a couple things:\n\n1. The key doesn't tell you what it defines. You have to know that the\nthe key defines the value of the enum to make sense of the trait.\n2. The key has to be quoted if it deviates from the allows ABNF for node\nobject keys. This has also led to confusion.\n\nAlthough this is a breaking change, using a list of structures where\neverything has a name will result in models that are easier to\nunderstand, and hopefully modelers will more often include properties\nlike `name` and `documentation`."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTAzODE5", "url": "https://github.com/awslabs/smithy/pull/326#pullrequestreview-382503819", "createdAt": "2020-03-27T00:12:44Z", "commit": {"oid": "baaed3a7c6276c55635c531c936c0b4c23105cba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2341, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}