{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MzIwODkz", "number": 470, "title": "Add addTrait method to ModelAssembler", "bodyText": "This CR adds an addTrait method to the model assembler, allowing for a resolved trait to be added to a target shape within the model.\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-06-19T22:39:56Z", "url": "https://github.com/awslabs/smithy/pull/470", "merged": true, "mergeCommit": {"oid": "319dee74a01164943117022a2a1d1153463770f0"}, "closed": true, "closedAt": "2020-06-22T14:50:57Z", "author": {"login": "srchase"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcs66WvgH2gAyNDM3MzIwODkzOjZkZmJjMjhmN2ZlOTIzOWViNmY2ZmFmOGM0MjI0MmYzZTk0ZTRlMDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcs8Wp-AFqTQzNDM4NjA4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6dfbc28f7fe9239eb6f6faf8c42242f3e94e4e02", "author": {"user": {"login": "srchase", "name": "Chase Coalwell"}}, "url": "https://github.com/awslabs/smithy/commit/6dfbc28f7fe9239eb6f6faf8c42242f3e94e4e02", "committedDate": "2020-06-19T22:36:59Z", "message": "Add addTrait method to ModelAssembler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MzgwMzYz", "url": "https://github.com/awslabs/smithy/pull/470#pullrequestreview-434380363", "createdAt": "2020-06-19T23:35:35Z", "commit": {"oid": "6dfbc28f7fe9239eb6f6faf8c42242f3e94e4e02"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMzozNTozNVrOGmjUmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQyMzozNzozNFrOGmjV-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3Nzc4NA==", "bodyText": "A simpler test case could just directly create a SuppressTrait rather than needing to use a TraitFactory. Seems like the TraitFactory bit isn't under test here.", "url": "https://github.com/awslabs/smithy/pull/470#discussion_r443077784", "createdAt": "2020-06-19T23:35:35Z", "author": {"login": "mtdowling"}, "path": "smithy-model/src/test/java/software/amazon/smithy/model/loader/ModelAssemblerTest.java", "diffHunk": "@@ -88,6 +92,26 @@ public void addsExplicitShapes() {\n         assertThat(result.unwrap().getShape(ShapeId.from(\"ns.foo#Bar\")), is(Optional.of(shape)));\n     }\n \n+    @Test\n+    public void addsExplicitTraits() {\n+        StringShape shape = StringShape.builder().id(\"ns.foo#Bar\").build();\n+\n+        Node node = Node.fromStrings(\"validator\");\n+        TraitFactory provider = TraitFactory.createServiceFactory();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfbc28f7fe9239eb6f6faf8c42242f3e94e4e02"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3Nzk2Nw==", "bodyText": "Then here you could test both for the concrete trait class, no? (i.e., shape.getTrait(SuppressTrait.class))", "url": "https://github.com/awslabs/smithy/pull/470#discussion_r443077967", "createdAt": "2020-06-19T23:36:22Z", "author": {"login": "mtdowling"}, "path": "smithy-model/src/test/java/software/amazon/smithy/model/loader/ModelAssemblerTest.java", "diffHunk": "@@ -88,6 +92,26 @@ public void addsExplicitShapes() {\n         assertThat(result.unwrap().getShape(ShapeId.from(\"ns.foo#Bar\")), is(Optional.of(shape)));\n     }\n \n+    @Test\n+    public void addsExplicitTraits() {\n+        StringShape shape = StringShape.builder().id(\"ns.foo#Bar\").build();\n+\n+        Node node = Node.fromStrings(\"validator\");\n+        TraitFactory provider = TraitFactory.createServiceFactory();\n+        Optional<Trait> trait = provider.createTrait(\n+                ShapeId.from(\"smithy.api#suppress\"), shape.toShapeId(), node);\n+\n+        SuppressTrait suppress = (SuppressTrait) trait.get();\n+        ValidatedResult<Model> result = new ModelAssembler()\n+                .addShape(shape)\n+                .addTrait(shape.toShapeId(), suppress)\n+                .assemble();\n+\n+        assertThat(result.getValidationEvents(), empty());\n+        Shape resultShape = result.unwrap().getShape(ShapeId.from(\"ns.foo#Bar\")).get();\n+        assertTrue(resultShape.findTrait(\"smithy.api#suppress\").isPresent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfbc28f7fe9239eb6f6faf8c42242f3e94e4e02"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzA3ODEzOA==", "bodyText": "Nit, personal taste -- I know this comes right after some forEach calls, but I prefer a normal for loop when possible.", "url": "https://github.com/awslabs/smithy/pull/470#discussion_r443078138", "createdAt": "2020-06-19T23:37:34Z", "author": {"login": "mtdowling"}, "path": "smithy-model/src/main/java/software/amazon/smithy/model/loader/ModelAssembler.java", "diffHunk": "@@ -499,6 +517,9 @@ private LoaderVisitor createLoaderVisitor() {\n \n         shapes.forEach(visitor::onShape);\n         metadata.forEach(visitor::onMetadata);\n+        pendingTraits.forEach(pendingTrait -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dfbc28f7fe9239eb6f6faf8c42242f3e94e4e02"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d34bdc4f0f73c172b736e8adf2fd4abbdd71ead3", "author": {"user": {"login": "srchase", "name": "Chase Coalwell"}}, "url": "https://github.com/awslabs/smithy/commit/d34bdc4f0f73c172b736e8adf2fd4abbdd71ead3", "committedDate": "2020-06-20T00:13:57Z", "message": "Simplify test, use for loop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0Mzg2MDgz", "url": "https://github.com/awslabs/smithy/pull/470#pullrequestreview-434386083", "createdAt": "2020-06-20T00:17:48Z", "commit": {"oid": "d34bdc4f0f73c172b736e8adf2fd4abbdd71ead3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2191, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}