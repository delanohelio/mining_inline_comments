{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMjg5MTIx", "number": 619, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwNjoyNzo0M1rOE0BMhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwNjoyNzo0M1rOE0BMhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyOTgwOTk5OnYy", "diffSide": "RIGHT", "path": "smithy-codegen-core/src/test/java/software/amazon/smithy/codegen/core/writer/CodegenWriterTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwNjoyNzo0M1rOHrlXOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxNjowMToxOVrOHroTDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ2Mjk2OA==", "bodyText": "Oh, looks like this needs either a trailing newline, or you need to disable newlines in the writer", "url": "https://github.com/awslabs/smithy/pull/619#discussion_r515462968", "createdAt": "2020-10-31T06:27:43Z", "author": {"login": "mtdowling"}, "path": "smithy-codegen-core/src/test/java/software/amazon/smithy/codegen/core/writer/CodegenWriterTest.java", "diffHunk": "@@ -113,4 +113,18 @@ public void importsUseReferencesFromSymbols() {\n         assertThat(writer.getImportContainer().imports, hasKey(\"MyString\"));\n         assertThat(writer.getImportContainer().imports.get(\"MyString\"), equalTo(\"java.lang.String\"));\n     }\n+\n+    @Test\n+    public void canComposeSetWithSection() {\n+        String testSection = \"testSection\";\n+        MyWriter writer = new MyWriter(\"foo\");\n+\n+        writer.onSection(testSection, text -> writer.write(text + \"1, \"));\n+        writer.onSection(testSection, text -> writer.write(text + \"2, \"));\n+        writer.onSection(testSection, text -> writer.write(text + \"3\"));\n+\n+        writer.write(\"[${L@testSection}]\", \"\");\n+\n+        assertThat(writer.toString(), equalTo(\"[1, 2, 3]\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec68e0ca5d3eed4f4ac1823ea832957e45a174cd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUxMTA1Mw==", "bodyText": "I've pushed up a fix. I also moved this test to smithy-utils.", "url": "https://github.com/awslabs/smithy/pull/619#discussion_r515511053", "createdAt": "2020-10-31T16:01:19Z", "author": {"login": "mtdowling"}, "path": "smithy-codegen-core/src/test/java/software/amazon/smithy/codegen/core/writer/CodegenWriterTest.java", "diffHunk": "@@ -113,4 +113,18 @@ public void importsUseReferencesFromSymbols() {\n         assertThat(writer.getImportContainer().imports, hasKey(\"MyString\"));\n         assertThat(writer.getImportContainer().imports.get(\"MyString\"), equalTo(\"java.lang.String\"));\n     }\n+\n+    @Test\n+    public void canComposeSetWithSection() {\n+        String testSection = \"testSection\";\n+        MyWriter writer = new MyWriter(\"foo\");\n+\n+        writer.onSection(testSection, text -> writer.write(text + \"1, \"));\n+        writer.onSection(testSection, text -> writer.write(text + \"2, \"));\n+        writer.onSection(testSection, text -> writer.write(text + \"3\"));\n+\n+        writer.write(\"[${L@testSection}]\", \"\");\n+\n+        assertThat(writer.toString(), equalTo(\"[1, 2, 3]\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ2Mjk2OA=="}, "originalCommit": {"oid": "ec68e0ca5d3eed4f4ac1823ea832957e45a174cd"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3636, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}