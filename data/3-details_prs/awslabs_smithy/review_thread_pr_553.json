{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MzU5NDYz", "number": 553, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo1MjowOVrOEgE6_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo1MjoyNlrOEgE7cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDcwNTI3OnYy", "diffSide": "RIGHT", "path": "smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo1MjowOVrOHMvZNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzo1NDowNVrOHMxf5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyMTQ2Mw==", "bodyText": "Looks like this is a public interface break.", "url": "https://github.com/awslabs/smithy/pull/553#discussion_r483121463", "createdAt": "2020-09-03T16:52:09Z", "author": {"login": "kstich"}, "path": "smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java", "diffHunk": "@@ -125,16 +124,14 @@ public static PathFinder create(Model model) {\n \n     /**\n      * Finds all of the possible paths from the {@code startingShape} to the\n-     * the {@code targetShape}.\n+     * the any in the set of {@code targetShapes}.\n      *\n      * @param startingShape Starting shape to find the paths from.\n-     * @param targetShape The shape to try to find a path to.\n+     * @param targetShapes The shapes to try to find a path to.\n      * @return Returns the list of matching paths.\n      */\n-    public List<Path> search(ToShapeId startingShape, ToShapeId targetShape) {\n-        return searchFromShapeToSet(\n-                startingShape,\n-                model.getShape(targetShape.toShapeId()).map(Collections::singleton).orElse(Collections.emptySet()));\n+    public List<Path> search(ToShapeId startingShape, Collection<Shape> targetShapes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3615c8f5f86a82d83121334e54b64d58992d5dae"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1NTk0Mw==", "bodyText": "It never shipped in a tagged release, so I figured I'd just ship the more broad interface.", "url": "https://github.com/awslabs/smithy/pull/553#discussion_r483155943", "createdAt": "2020-09-03T17:54:05Z", "author": {"login": "mtdowling"}, "path": "smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java", "diffHunk": "@@ -125,16 +124,14 @@ public static PathFinder create(Model model) {\n \n     /**\n      * Finds all of the possible paths from the {@code startingShape} to the\n-     * the {@code targetShape}.\n+     * the any in the set of {@code targetShapes}.\n      *\n      * @param startingShape Starting shape to find the paths from.\n-     * @param targetShape The shape to try to find a path to.\n+     * @param targetShapes The shapes to try to find a path to.\n      * @return Returns the list of matching paths.\n      */\n-    public List<Path> search(ToShapeId startingShape, ToShapeId targetShape) {\n-        return searchFromShapeToSet(\n-                startingShape,\n-                model.getShape(targetShape.toShapeId()).map(Collections::singleton).orElse(Collections.emptySet()));\n+    public List<Path> search(ToShapeId startingShape, Collection<Shape> targetShapes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyMTQ2Mw=="}, "originalCommit": {"oid": "3615c8f5f86a82d83121334e54b64d58992d5dae"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDcwNjQxOnYy", "diffSide": "RIGHT", "path": "smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo1MjoyNlrOHMvZ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODowMDo1OVrOHMxu5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyMTY1OQ==", "bodyText": "This sentence doesn't read correctly.", "url": "https://github.com/awslabs/smithy/pull/553#discussion_r483121659", "createdAt": "2020-09-03T16:52:26Z", "author": {"login": "kstich"}, "path": "smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java", "diffHunk": "@@ -125,16 +124,14 @@ public static PathFinder create(Model model) {\n \n     /**\n      * Finds all of the possible paths from the {@code startingShape} to the\n-     * the {@code targetShape}.\n+     * the any in the set of {@code targetShapes}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3615c8f5f86a82d83121334e54b64d58992d5dae"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE1OTc4MQ==", "bodyText": "Oh, yeah. Fixed.", "url": "https://github.com/awslabs/smithy/pull/553#discussion_r483159781", "createdAt": "2020-09-03T18:00:59Z", "author": {"login": "mtdowling"}, "path": "smithy-model/src/main/java/software/amazon/smithy/model/selector/PathFinder.java", "diffHunk": "@@ -125,16 +124,14 @@ public static PathFinder create(Model model) {\n \n     /**\n      * Finds all of the possible paths from the {@code startingShape} to the\n-     * the {@code targetShape}.\n+     * the any in the set of {@code targetShapes}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzEyMTY1OQ=="}, "originalCommit": {"oid": "3615c8f5f86a82d83121334e54b64d58992d5dae"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3740, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}