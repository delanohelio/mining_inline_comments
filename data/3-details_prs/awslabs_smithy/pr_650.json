{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMzEzOTA1", "number": 650, "title": "Add HTTP header trait validation", "bodyText": "Closes #614 and also removes a non-inclusive term from the same\nvalidator.\nIssue #, if available:\nDescription of changes:\nBy submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.", "createdAt": "2020-12-02T21:56:55Z", "url": "https://github.com/awslabs/smithy/pull/650", "merged": true, "mergeCommit": {"oid": "b0788601906761549b6196f749135846f7d18f2b"}, "closed": true, "closedAt": "2020-12-03T18:00:52Z", "author": {"login": "mtdowling"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiVzzbgH2gAyNTMxMzEzOTA1OjhiZmU0MmU5MTBhNTk1ZjhhNjMzYjc3MzA1YmQ2NjliZjljMmExMmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdigiJNgFqTU0MzgwODY0NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8bfe42e910a595f8a633b77305bd669bf9c2a12c", "author": {"user": {"login": "mtdowling", "name": "Michael Dowling"}}, "url": "https://github.com/awslabs/smithy/commit/8bfe42e910a595f8a633b77305bd669bf9c2a12c", "committedDate": "2020-12-02T21:55:15Z", "message": "Add HTTP header trait validation\n\nCloses #614 and also removes a non-inclusive term from the same\nvalidator."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMzY5NjUx", "url": "https://github.com/awslabs/smithy/pull/650#pullrequestreview-543369651", "createdAt": "2020-12-03T01:22:58Z", "commit": {"oid": "8bfe42e910a595f8a633b77305bd669bf9c2a12c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzODA4NjQ1", "url": "https://github.com/awslabs/smithy/pull/650#pullrequestreview-543808645", "createdAt": "2020-12-03T10:24:42Z", "commit": {"oid": "8bfe42e910a595f8a633b77305bd669bf9c2a12c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMDoyNDo0MlrOH-Rw-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMDoyNDo0MlrOH-Rw-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA2NDgyNA==", "bodyText": "Can you put the specific character that caused the failure in the error message?", "url": "https://github.com/awslabs/smithy/pull/650#discussion_r535064824", "createdAt": "2020-12-03T10:24:42Z", "author": {"login": "JordonPhillips"}, "path": "smithy-model/src/main/java/software/amazon/smithy/model/validation/validators/HttpHeaderTraitValidator.java", "diffHunk": "@@ -68,15 +84,30 @@\n \n         events.addAll(model.shapes(MemberShape.class)\n                 .flatMap(member -> Trait.flatMapStream(member, HttpHeaderTrait.class))\n-                .filter(pair -> BLACKLIST.contains(pair.getRight().getValue().toLowerCase(Locale.US)))\n-                .map(pair -> danger(pair.getLeft(), String.format(\n-                        \"httpHeader cannot be set to `%s`\", pair.getRight().getValue()\n-                )))\n+                .flatMap(pair -> OptionalUtils.stream(validateHeader(pair.left, pair.right)))\n                 .collect(Collectors.toList()));\n \n         return events;\n     }\n \n+    private Optional<ValidationEvent> validateHeader(MemberShape member, HttpHeaderTrait trait) {\n+        String header = trait.getValue();\n+\n+        if (BLOCKLIST.contains(header.toLowerCase(Locale.ENGLISH))) {\n+            return Optional.of(danger(member, trait, String.format(\n+                    \"`%s` is not an allowed HTTP header binding\", header)));\n+        }\n+\n+        for (int i = 0; i < header.length(); i++) {\n+            if (!TCHAR.contains(header.charAt(i))) {\n+                return Optional.of(danger(member, trait, String.format(\n+                        \"`%s` is not a valid HTTP header field name according to section 3.2 of RFC 7230\", header)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bfe42e910a595f8a633b77305bd669bf9c2a12c"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2172, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}