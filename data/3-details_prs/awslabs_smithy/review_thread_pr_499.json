{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5ODEzOTE0", "number": 499, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTozNjo0NFrOEPL9jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTozOTo0M1rOEPMCag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzYwMDc2OnYy", "diffSide": "RIGHT", "path": "docs/source/1.0/spec/core/model.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTozNjo0NFrOGywvLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjowMzoxM1rOGyx3BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4MDQ5NQ==", "bodyText": "Went looking to see if this needs to be updated in the idl.rst file of the spec, but it looks like it isn't present there. Should probably add this section of the ABNF over there as well, since its heading seems to indicate completeness.", "url": "https://github.com/awslabs/smithy/pull/499#discussion_r455880495", "createdAt": "2020-07-16T15:36:44Z", "author": {"login": "kstich"}, "path": "docs/source/1.0/spec/core/model.rst", "diffHunk": "@@ -445,7 +445,9 @@ Shape IDs are formally defined by the following ABNF:\n     root_shape_id          :`absolute_root_shape_id` / `identifier`\n     absolute_root_shape_id :`namespace` \"#\" `identifier`\n     namespace              :`identifier` *(\".\" `identifier`)\n-    identifier             :(ALPHA / \"_\") *(ALPHA / DIGIT / \"_\")\n+    identifier             :identifier_start *identifier_chars", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0f98d57bced5e318ced8324bc808ee72936ee49"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg5ODg4NQ==", "bodyText": "Sphinx seems broken and doesn't allow duplicate productionlists with different names to coexist. So instead, I just added a link from the IDL to the shape ID section of the model. I think this is more appropriate than the other way around because shape IDs exist in the semantic model, the IDL, and AST.", "url": "https://github.com/awslabs/smithy/pull/499#discussion_r455898885", "createdAt": "2020-07-16T16:03:13Z", "author": {"login": "mtdowling"}, "path": "docs/source/1.0/spec/core/model.rst", "diffHunk": "@@ -445,7 +445,9 @@ Shape IDs are formally defined by the following ABNF:\n     root_shape_id          :`absolute_root_shape_id` / `identifier`\n     absolute_root_shape_id :`namespace` \"#\" `identifier`\n     namespace              :`identifier` *(\".\" `identifier`)\n-    identifier             :(ALPHA / \"_\") *(ALPHA / DIGIT / \"_\")\n+    identifier             :identifier_start *identifier_chars", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4MDQ5NQ=="}, "originalCommit": {"oid": "b0f98d57bced5e318ced8324bc808ee72936ee49"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MzYxMzIyOnYy", "diffSide": "RIGHT", "path": "smithy-model/src/main/java/software/amazon/smithy/model/shapes/ShapeId.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTozOTo0M1rOGyw3SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNTozOTo0M1rOGyw3SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTg4MjU2OA==", "bodyText": "s/e..g/e.g.", "url": "https://github.com/awslabs/smithy/pull/499#discussion_r455882568", "createdAt": "2020-07-16T15:39:43Z", "author": {"login": "kstich"}, "path": "smithy-model/src/main/java/software/amazon/smithy/model/shapes/ShapeId.java", "diffHunk": "@@ -117,21 +117,40 @@ public static boolean isValidNamespace(CharSequence namespace) {\n      * @return Returns true if this is a valid identifier.\n      */\n     public static boolean isValidIdentifier(CharSequence identifier) {\n-        if (identifier == null || identifier.length() == 0) {\n-            return false;\n+        return parseIdentifier(identifier, 0) == identifier.length();\n+    }\n+\n+    private static int parseIdentifier(CharSequence identifier, int offset) {\n+        if (identifier == null || identifier.length() <= offset) {\n+            return -1;\n         }\n \n-        if (!ParserUtils.isIdentifierStart(identifier.charAt(0))) {\n-            return false;\n+        // Parse the required identifier_start production.\n+        char startingChar = identifier.charAt(offset);\n+        if (startingChar == '_') {\n+            while (identifier.charAt(offset) == '_') {\n+                offset++;\n+            }\n+            if (!ParserUtils.isValidIdentifierCharacter(identifier.charAt(offset))) {\n+                return -1;\n+            }\n+            offset++;\n+        } else if (!ParserUtils.isAlphabetic(startingChar)) {\n+            return -1;\n         }\n \n-        for (int i = 1; i < identifier.length(); i++) {\n-            if (!ParserUtils.isValidIdentifierCharacter(identifier.charAt(i))) {\n-                return false;\n+        // Parse the optional identifier_chars production.\n+        while (offset < identifier.length()) {\n+            if (!ParserUtils.isValidIdentifierCharacter(identifier.charAt(offset))) {\n+                // Return the position of the character that stops the identifier.\n+                // This is either an invalid case (e..g, isValidIdentifier), or", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0f98d57bced5e318ced8324bc808ee72936ee49"}, "originalPosition": 84}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3706, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}