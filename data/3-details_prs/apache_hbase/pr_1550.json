{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1ODA1MzE4", "number": 1550, "title": "HBASE-24135 TableStateNotFoundException happends when table creation if rsgroup is enable", "bodyText": "https://issues.apache.org/jira/browse/HBASE-24135", "createdAt": "2020-04-20T03:41:40Z", "url": "https://github.com/apache/hbase/pull/1550", "merged": true, "mergeCommit": {"oid": "cc1f2a6087364db8820a805feab0f09ca7c2a24f"}, "closed": true, "closedAt": "2020-05-17T12:44:18Z", "author": {"login": "ddupg"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZXAXIABqjMyNDk5NzgyODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchgxx1gFqTQxMjU4MTczNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bf851ab77bae6c93bb2ecc4618d68a770479c6b", "author": {"user": {"login": "ddupg", "name": "XinSun"}}, "url": "https://github.com/apache/hbase/commit/3bf851ab77bae6c93bb2ecc4618d68a770479c6b", "committedDate": "2020-04-20T03:37:30Z", "message": "HBASE-24135 HBase RS Group"}, "afterCommit": {"oid": "d7fe1f92d150226958e5ddf5bd7dfa53ff0eb511", "author": {"user": {"login": "ddupg", "name": "XinSun"}}, "url": "https://github.com/apache/hbase/commit/d7fe1f92d150226958e5ddf5bd7dfa53ff0eb511", "committedDate": "2020-04-20T04:01:56Z", "message": "HBASE-24135 TableStateNotFoundException happends when table creation if rsgroup is enable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NjIwODY4", "url": "https://github.com/apache/hbase/pull/1550#pullrequestreview-399620868", "createdAt": "2020-04-24T03:47:36Z", "commit": {"oid": "d7fe1f92d150226958e5ddf5bd7dfa53ff0eb511"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMzo0NzozN1rOGLFGPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwMzo1MTozNFrOGLFK7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI3MTAzOA==", "bodyText": "Avoid empty throws javadoc.", "url": "https://github.com/apache/hbase/pull/1550#discussion_r414271038", "createdAt": "2020-04-24T03:47:37Z", "author": {"login": "Apache9"}, "path": "hbase-rsgroup/src/test/java/org/apache/hadoop/hbase/rsgroup/TestDetermineRSGroupInfoForTable.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.rsgroup;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.anyString;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.HConstants;\n+import org.apache.hadoop.hbase.NamespaceDescriptor;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.client.Admin;\n+import org.apache.hadoop.hbase.coprocessor.CoprocessorHost;\n+import org.apache.hadoop.hbase.master.HMaster;\n+import org.apache.hadoop.hbase.regionserver.HRegionServer;\n+import org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl.RSGroupMappingScript;\n+import org.apache.hadoop.hbase.testclassification.MediumTests;\n+import org.junit.After;\n+import org.junit.AfterClass;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Test {@link RSGroupInfoManager#determineRSGroupInfoForTable(TableName)}\n+ */\n+@Category({ MediumTests.class })\n+public class TestDetermineRSGroupInfoForTable {\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(TestDetermineRSGroupInfoForTable.class);\n+\n+  @ClassRule\n+  public static final HBaseClassTestRule CLASS_RULE =\n+    HBaseClassTestRule.forClass(TestDetermineRSGroupInfoForTable.class);\n+\n+  private static final HBaseTestingUtility UTIL = new HBaseTestingUtility();\n+\n+  private static HMaster master;\n+\n+  private static Admin admin;\n+\n+  private static RSGroupInfoManager rsGroupInfoManager;\n+\n+  private static RSGroupAdminClient rsGroupAdminClient;\n+\n+  private static final String GROUP_NAME = \"rsg\";\n+\n+  private static final String NAMESPACE_NAME = \"ns\";\n+  private static final String OTHER_NAMESPACE_NAME = \"other\";\n+\n+  private static final TableName TABLE_NAME = TableName.valueOf(NAMESPACE_NAME, \"tb\");\n+\n+  @BeforeClass\n+  public static void setUp() throws Exception {\n+    UTIL.getConfiguration().set(\n+      HConstants.HBASE_MASTER_LOADBALANCER_CLASS,\n+      RSGroupBasedLoadBalancer.class.getName());\n+    UTIL.getConfiguration().set(CoprocessorHost.MASTER_COPROCESSOR_CONF_KEY,\n+      RSGroupAdminEndpoint.class.getName());\n+    UTIL.startMiniCluster(5);\n+    master = UTIL.getMiniHBaseCluster().getMaster();\n+    admin = UTIL.getAdmin();\n+    rsGroupAdminClient = new RSGroupAdminClient(UTIL.getConnection());\n+\n+    HRegionServer rs = UTIL.getHBaseCluster().getRegionServer(0);\n+    rsGroupAdminClient.addRSGroup(GROUP_NAME);\n+    rsGroupAdminClient.moveServers(\n+      Collections.singleton(rs.getServerName().getAddress()), GROUP_NAME);\n+    admin.createNamespace(NamespaceDescriptor.create(NAMESPACE_NAME)\n+      .addConfiguration(RSGroupInfo.NAMESPACE_DESC_PROP_GROUP, GROUP_NAME)\n+      .build());\n+    admin.createNamespace(NamespaceDescriptor.create(OTHER_NAMESPACE_NAME).build());\n+  }\n+\n+  @AfterClass\n+  public static void tearDown() throws IOException {\n+    admin.deleteNamespace(NAMESPACE_NAME);\n+\n+    UTIL.shutdownMiniCluster();\n+  }\n+\n+  @Before\n+  public void setUpBeforeMethod() throws IOException {\n+    rsGroupInfoManager = RSGroupInfoManagerImpl.getInstance(master);\n+    rsGroupInfoManager.start();\n+  }\n+\n+  @After\n+  public void tearDownAfterMethod() throws IOException {\n+    rsGroupInfoManager = RSGroupInfoManagerImpl.getInstance(master);\n+  }\n+\n+  @Test\n+  public void test1() throws IOException {\n+    RSGroupInfo group =\n+      rsGroupInfoManager.determineRSGroupInfoForTable(TableName.valueOf(\"tb\"));\n+    assertEquals(group.getName(), RSGroupInfo.DEFAULT_GROUP);\n+  }\n+\n+  /**\n+   * determine by namespace config\n+   * @throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7fe1f92d150226958e5ddf5bd7dfa53ff0eb511"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI3MTEwNA==", "bodyText": "Ditto.", "url": "https://github.com/apache/hbase/pull/1550#discussion_r414271104", "createdAt": "2020-04-24T03:47:47Z", "author": {"login": "Apache9"}, "path": "hbase-rsgroup/src/test/java/org/apache/hadoop/hbase/rsgroup/TestDetermineRSGroupInfoForTable.java", "diffHunk": "@@ -0,0 +1,153 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.rsgroup;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.mockito.Mockito.anyString;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.HConstants;\n+import org.apache.hadoop.hbase.NamespaceDescriptor;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.client.Admin;\n+import org.apache.hadoop.hbase.coprocessor.CoprocessorHost;\n+import org.apache.hadoop.hbase.master.HMaster;\n+import org.apache.hadoop.hbase.regionserver.HRegionServer;\n+import org.apache.hadoop.hbase.rsgroup.RSGroupInfoManagerImpl.RSGroupMappingScript;\n+import org.apache.hadoop.hbase.testclassification.MediumTests;\n+import org.junit.After;\n+import org.junit.AfterClass;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Test {@link RSGroupInfoManager#determineRSGroupInfoForTable(TableName)}\n+ */\n+@Category({ MediumTests.class })\n+public class TestDetermineRSGroupInfoForTable {\n+\n+  private static final Logger LOG = LoggerFactory.getLogger(TestDetermineRSGroupInfoForTable.class);\n+\n+  @ClassRule\n+  public static final HBaseClassTestRule CLASS_RULE =\n+    HBaseClassTestRule.forClass(TestDetermineRSGroupInfoForTable.class);\n+\n+  private static final HBaseTestingUtility UTIL = new HBaseTestingUtility();\n+\n+  private static HMaster master;\n+\n+  private static Admin admin;\n+\n+  private static RSGroupInfoManager rsGroupInfoManager;\n+\n+  private static RSGroupAdminClient rsGroupAdminClient;\n+\n+  private static final String GROUP_NAME = \"rsg\";\n+\n+  private static final String NAMESPACE_NAME = \"ns\";\n+  private static final String OTHER_NAMESPACE_NAME = \"other\";\n+\n+  private static final TableName TABLE_NAME = TableName.valueOf(NAMESPACE_NAME, \"tb\");\n+\n+  @BeforeClass\n+  public static void setUp() throws Exception {\n+    UTIL.getConfiguration().set(\n+      HConstants.HBASE_MASTER_LOADBALANCER_CLASS,\n+      RSGroupBasedLoadBalancer.class.getName());\n+    UTIL.getConfiguration().set(CoprocessorHost.MASTER_COPROCESSOR_CONF_KEY,\n+      RSGroupAdminEndpoint.class.getName());\n+    UTIL.startMiniCluster(5);\n+    master = UTIL.getMiniHBaseCluster().getMaster();\n+    admin = UTIL.getAdmin();\n+    rsGroupAdminClient = new RSGroupAdminClient(UTIL.getConnection());\n+\n+    HRegionServer rs = UTIL.getHBaseCluster().getRegionServer(0);\n+    rsGroupAdminClient.addRSGroup(GROUP_NAME);\n+    rsGroupAdminClient.moveServers(\n+      Collections.singleton(rs.getServerName().getAddress()), GROUP_NAME);\n+    admin.createNamespace(NamespaceDescriptor.create(NAMESPACE_NAME)\n+      .addConfiguration(RSGroupInfo.NAMESPACE_DESC_PROP_GROUP, GROUP_NAME)\n+      .build());\n+    admin.createNamespace(NamespaceDescriptor.create(OTHER_NAMESPACE_NAME).build());\n+  }\n+\n+  @AfterClass\n+  public static void tearDown() throws IOException {\n+    admin.deleteNamespace(NAMESPACE_NAME);\n+\n+    UTIL.shutdownMiniCluster();\n+  }\n+\n+  @Before\n+  public void setUpBeforeMethod() throws IOException {\n+    rsGroupInfoManager = RSGroupInfoManagerImpl.getInstance(master);\n+    rsGroupInfoManager.start();\n+  }\n+\n+  @After\n+  public void tearDownAfterMethod() throws IOException {\n+    rsGroupInfoManager = RSGroupInfoManagerImpl.getInstance(master);\n+  }\n+\n+  @Test\n+  public void test1() throws IOException {\n+    RSGroupInfo group =\n+      rsGroupInfoManager.determineRSGroupInfoForTable(TableName.valueOf(\"tb\"));\n+    assertEquals(group.getName(), RSGroupInfo.DEFAULT_GROUP);\n+  }\n+\n+  /**\n+   * determine by namespace config\n+   * @throws IOException\n+   */\n+  @Test\n+  public void test2() throws IOException {\n+    RSGroupInfo group = rsGroupInfoManager.determineRSGroupInfoForTable(TABLE_NAME);\n+    assertEquals(group.getName(), GROUP_NAME);\n+\n+    group = rsGroupInfoManager.determineRSGroupInfoForTable(\n+      TableName.valueOf(OTHER_NAMESPACE_NAME, \"tb\"));\n+    assertEquals(group.getName(), RSGroupInfo.DEFAULT_GROUP);\n+  }\n+\n+  /**\n+   * determine by script\n+   * @throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7fe1f92d150226958e5ddf5bd7dfa53ff0eb511"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDI3MjIzNw==", "bodyText": "This method is removed? Then where will we call assignTableToGroup?", "url": "https://github.com/apache/hbase/pull/1550#discussion_r414272237", "createdAt": "2020-04-24T03:51:34Z", "author": {"login": "Apache9"}, "path": "hbase-rsgroup/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupAdminEndpoint.java", "diffHunk": "@@ -535,17 +476,22 @@ public void preCreateTableAction(\n       final ObserverContext<MasterCoprocessorEnvironment> ctx,\n       final TableDescriptor desc,\n       final RegionInfo[] regions) throws IOException {\n-    if (!desc.getTableName().isSystemTable() && !rsgroupHasServersOnline(desc)) {\n-      throw new HBaseIOException(\"No online servers in the rsgroup, which table \" +\n-          desc.getTableName().getNameAsString() + \" belongs to\");\n+    if (desc.getTableName().isSystemTable()) {\n+      return;\n+    }\n+    RSGroupInfo rsGroupInfo = groupInfoManager.determineRSGroupInfoForTable(desc.getTableName());\n+    if (rsGroupInfo == null) {\n+      throw new ConstraintException(\"Default RSGroup for this table \" + desc.getTableName()\n+        + \" does not exist.\");\n+    }\n+    if (!RSGroupUtil.rsGroupHasOnlineServer(master, rsGroupInfo)) {\n+      throw new HBaseIOException(\"No online servers in the rsgroup \" + rsGroupInfo.getName()\n+        + \" which table \" + desc.getTableName().getNameAsString() + \" belongs to\");\n+    }\n+    synchronized (groupInfoManager) {\n+      groupInfoManager.moveTables(\n+        Collections.singleton(desc.getTableName()), rsGroupInfo.getName());\n     }\n-  }\n-\n-  // Assign table to default RSGroup.\n-  @Override\n-  public void postCreateTable(ObserverContext<MasterCoprocessorEnvironment> ctx,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7fe1f92d150226958e5ddf5bd7dfa53ff0eb511"}, "originalPosition": 120}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d7fe1f92d150226958e5ddf5bd7dfa53ff0eb511", "author": {"user": {"login": "ddupg", "name": "XinSun"}}, "url": "https://github.com/apache/hbase/commit/d7fe1f92d150226958e5ddf5bd7dfa53ff0eb511", "committedDate": "2020-04-20T04:01:56Z", "message": "HBASE-24135 TableStateNotFoundException happends when table creation if rsgroup is enable"}, "afterCommit": {"oid": "8793e912e9b89ef811bab3d5e18cf9bcf2132d17", "author": {"user": {"login": "ddupg", "name": "XinSun"}}, "url": "https://github.com/apache/hbase/commit/8793e912e9b89ef811bab3d5e18cf9bcf2132d17", "committedDate": "2020-04-24T06:31:58Z", "message": "HBASE-24135 TableStateNotFoundException happends when table creation if rsgroup is enable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34f9a6a258b880e4300956a0bf6dab3f1894ee15", "author": {"user": {"login": "ddupg", "name": "XinSun"}}, "url": "https://github.com/apache/hbase/commit/34f9a6a258b880e4300956a0bf6dab3f1894ee15", "committedDate": "2020-04-24T06:52:05Z", "message": "HBASE-24135 TableStateNotFoundException happends when table creation if rsgroup is enable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8793e912e9b89ef811bab3d5e18cf9bcf2132d17", "author": {"user": {"login": "ddupg", "name": "XinSun"}}, "url": "https://github.com/apache/hbase/commit/8793e912e9b89ef811bab3d5e18cf9bcf2132d17", "committedDate": "2020-04-24T06:31:58Z", "message": "HBASE-24135 TableStateNotFoundException happends when table creation if rsgroup is enable"}, "afterCommit": {"oid": "34f9a6a258b880e4300956a0bf6dab3f1894ee15", "author": {"user": {"login": "ddupg", "name": "XinSun"}}, "url": "https://github.com/apache/hbase/commit/34f9a6a258b880e4300956a0bf6dab3f1894ee15", "committedDate": "2020-04-24T06:52:05Z", "message": "HBASE-24135 TableStateNotFoundException happends when table creation if rsgroup is enable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNTUzMjk0", "url": "https://github.com/apache/hbase/pull/1550#pullrequestreview-412553294", "createdAt": "2020-05-15T11:07:57Z", "commit": {"oid": "34f9a6a258b880e4300956a0bf6dab3f1894ee15"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNTgxNzM1", "url": "https://github.com/apache/hbase/pull/1550#pullrequestreview-412581735", "createdAt": "2020-05-15T11:56:55Z", "commit": {"oid": "34f9a6a258b880e4300956a0bf6dab3f1894ee15"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2193, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}