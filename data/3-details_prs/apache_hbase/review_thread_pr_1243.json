{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NjczMDU0", "number": 1243, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODowMDo0NVrODltT6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODowMTowOFrODltURg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODY2MjgyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/balancer/BalancerTestBase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODowMDo0NVrOFyv9Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODoxMTowOFrOFywKyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc1ODgwNw==", "bodyText": "Why change TreeMap to Map?", "url": "https://github.com/apache/hbase/pull/1243#discussion_r388758807", "createdAt": "2020-03-06T08:00:45Z", "author": {"login": "infraio"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/balancer/BalancerTestBase.java", "diffHunk": "@@ -402,13 +402,13 @@ protected void updateLoad(final Map<ServerName, ServerAndLoad> map,\n     return servers;\n   }\n \n-  protected HashMap<TableName, TreeMap<ServerName, List<RegionInfo>>> mockClusterServersWithTables(Map<ServerName, List<RegionInfo>> clusterServers) {\n-    HashMap<TableName, TreeMap<ServerName, List<RegionInfo>>> result = new HashMap<>();\n+  protected Map<TableName, Map<ServerName, List<RegionInfo>>> mockClusterServersWithTables(Map<ServerName, List<RegionInfo>> clusterServers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2702fe87723c4efaa0554d186fc0efce738ff318"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc2MjMxNQ==", "bodyText": "use the return value of method mockClusterServersWithTables as  clusterLoad\nthe extend feature of treeMap is no use , Map is enough", "url": "https://github.com/apache/hbase/pull/1243#discussion_r388762315", "createdAt": "2020-03-06T08:11:08Z", "author": {"login": "nyl3532016"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/balancer/BalancerTestBase.java", "diffHunk": "@@ -402,13 +402,13 @@ protected void updateLoad(final Map<ServerName, ServerAndLoad> map,\n     return servers;\n   }\n \n-  protected HashMap<TableName, TreeMap<ServerName, List<RegionInfo>>> mockClusterServersWithTables(Map<ServerName, List<RegionInfo>> clusterServers) {\n-    HashMap<TableName, TreeMap<ServerName, List<RegionInfo>>> result = new HashMap<>();\n+  protected Map<TableName, Map<ServerName, List<RegionInfo>>> mockClusterServersWithTables(Map<ServerName, List<RegionInfo>> clusterServers) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc1ODgwNw=="}, "originalCommit": {"oid": "2702fe87723c4efaa0554d186fc0efce738ff318"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODY2Mzc0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/balancer/TestDefaultLoadBalancer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODowMTowOFrOFyv9pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwODoyMjoyOVrOFywbSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc1ODk1MA==", "bodyText": "The difference of results1 and clusterLoad is?", "url": "https://github.com/apache/hbase/pull/1243#discussion_r388758950", "createdAt": "2020-03-06T08:01:08Z", "author": {"login": "infraio"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/balancer/TestDefaultLoadBalancer.java", "diffHunk": "@@ -171,20 +171,33 @@ public void testBalanceClusterOverall() throws Exception {\n    */\n   @Test\n   public void testImpactOfBalanceClusterOverall() throws Exception {\n+    testImpactOfBalanceClusterOverall(false);\n+  }\n+\n+  @Test\n+  public void testImpactOfBalanceClusterOverallWithTableClusterLoad() throws Exception {\n+    testImpactOfBalanceClusterOverall(true);\n+  }\n+\n+  private void testImpactOfBalanceClusterOverall(boolean useTableClusterLoad) throws Exception {\n     Map<TableName, Map<ServerName, List<RegionInfo>>> clusterLoad = new TreeMap<>();\n     Map<ServerName, List<RegionInfo>> clusterServers = mockUniformClusterServers(mockUniformCluster);\n     List<ServerAndLoad> clusterList = convertToList(clusterServers);\n     clusterLoad.put(TableName.valueOf(name.getMethodName()), clusterServers);\n     // use overall can achieve both table and cluster level balance\n-    HashMap<TableName, TreeMap<ServerName, List<RegionInfo>>> result1 = mockClusterServersWithTables(clusterServers);\n-    loadBalancer.setClusterLoad(clusterLoad);\n+    Map<TableName, Map<ServerName, List<RegionInfo>>> result1 = mockClusterServersWithTables(clusterServers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2702fe87723c4efaa0554d186fc0efce738ff318"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc2NjUzOA==", "bodyText": "clusterLoad's  value is map (server to all region on it , whatever region's table), clusterLoad's key is no use\nresults1's value is map(server to region ,the region only belong to the key table), results1's key is actual tableName\nin balance by table, we should use results1", "url": "https://github.com/apache/hbase/pull/1243#discussion_r388766538", "createdAt": "2020-03-06T08:22:29Z", "author": {"login": "nyl3532016"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/balancer/TestDefaultLoadBalancer.java", "diffHunk": "@@ -171,20 +171,33 @@ public void testBalanceClusterOverall() throws Exception {\n    */\n   @Test\n   public void testImpactOfBalanceClusterOverall() throws Exception {\n+    testImpactOfBalanceClusterOverall(false);\n+  }\n+\n+  @Test\n+  public void testImpactOfBalanceClusterOverallWithTableClusterLoad() throws Exception {\n+    testImpactOfBalanceClusterOverall(true);\n+  }\n+\n+  private void testImpactOfBalanceClusterOverall(boolean useTableClusterLoad) throws Exception {\n     Map<TableName, Map<ServerName, List<RegionInfo>>> clusterLoad = new TreeMap<>();\n     Map<ServerName, List<RegionInfo>> clusterServers = mockUniformClusterServers(mockUniformCluster);\n     List<ServerAndLoad> clusterList = convertToList(clusterServers);\n     clusterLoad.put(TableName.valueOf(name.getMethodName()), clusterServers);\n     // use overall can achieve both table and cluster level balance\n-    HashMap<TableName, TreeMap<ServerName, List<RegionInfo>>> result1 = mockClusterServersWithTables(clusterServers);\n-    loadBalancer.setClusterLoad(clusterLoad);\n+    Map<TableName, Map<ServerName, List<RegionInfo>>> result1 = mockClusterServersWithTables(clusterServers);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc1ODk1MA=="}, "originalCommit": {"oid": "2702fe87723c4efaa0554d186fc0efce738ff318"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1971, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}