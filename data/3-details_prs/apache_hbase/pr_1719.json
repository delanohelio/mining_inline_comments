{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4Mjg5OTk0", "number": 1719, "title": "HBASE-24370 Avoid aggressive MergeRegion and GCMultipleMergedRegionsP\u2026", "bodyText": "\u2026rocedure", "createdAt": "2020-05-14T23:09:08Z", "url": "https://github.com/apache/hbase/pull/1719", "merged": true, "mergeCommit": {"oid": "a8724e8120738488d863ac547495d3209b898e83"}, "closed": true, "closedAt": "2020-05-20T21:18:58Z", "author": {"login": "huaxiangsun"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchqapVABqjMzNDI5Mjg2NjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjNAAKAFqTQxNTU4NTUwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "222cf26302c4cccfbe63b5a682987bbba56b4234", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/222cf26302c4cccfbe63b5a682987bbba56b4234", "committedDate": "2020-05-14T23:08:24Z", "message": "HBASE-24370 Avoid aggressive MergeRegion and GCMultipleMergedRegionsProcedure"}, "afterCommit": {"oid": "1fbe693dd48bac04993ae3b9c80bebbe2c621b45", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/1fbe693dd48bac04993ae3b9c80bebbe2c621b45", "committedDate": "2020-05-15T23:10:05Z", "message": "HBASE-24370 Avoid aggressive MergeRegion and GCMultipleMergedRegionsProcedure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMTQ2OTI0", "url": "https://github.com/apache/hbase/pull/1719#pullrequestreview-413146924", "createdAt": "2020-05-17T10:11:38Z", "commit": {"oid": "1fbe693dd48bac04993ae3b9c80bebbe2c621b45"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxMDoxMTozOVrOGWfynw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxMDoxMjowMlrOGWfytg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI0MjcxOQ==", "bodyText": "Use assertNotNull instead.", "url": "https://github.com/apache/hbase/pull/1719#discussion_r426242719", "createdAt": "2020-05-17T10:11:39Z", "author": {"login": "HorizonNet"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAdmin1.java", "diffHunk": "@@ -530,25 +532,42 @@ public void testMergeRegions() throws Exception {\n       List<RegionInfo> tableRegions;\n       RegionInfo regionA;\n       RegionInfo regionB;\n+      RegionInfo regionC;\n+      RegionInfo mergedChildRegion = null;\n \n       // merge with full name\n       tableRegions = ADMIN.getRegions(tableName);\n       assertEquals(3, ADMIN.getRegions(tableName).size());\n       regionA = tableRegions.get(0);\n       regionB = tableRegions.get(1);\n+      regionC = tableRegions.get(2);\n       // TODO convert this to version that is synchronous (See HBASE-16668)\n-      ADMIN.mergeRegionsAsync(regionA.getRegionName(), regionB.getRegionName(), false).get(60,\n-        TimeUnit.SECONDS);\n+      ADMIN.mergeRegionsAsync(regionA.getRegionName(), regionB.getRegionName(),\n+        false).get(60, TimeUnit.SECONDS);\n \n-      assertEquals(2, ADMIN.getRegions(tableName).size());\n-\n-      // merge with encoded name\n       tableRegions = ADMIN.getRegions(tableName);\n-      regionA = tableRegions.get(0);\n-      regionB = tableRegions.get(1);\n+\n+      assertEquals(2, tableRegions.size());\n+      for (RegionInfo ri : tableRegions) {\n+        if (regionC.compareTo(ri) != 0) {\n+          mergedChildRegion = ri;\n+          break;\n+        }\n+      }\n+\n+      assertTrue(mergedChildRegion != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbe693dd48bac04993ae3b9c80bebbe2c621b45"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI0Mjc0Mg==", "bodyText": "Ditto", "url": "https://github.com/apache/hbase/pull/1719#discussion_r426242742", "createdAt": "2020-05-17T10:12:02Z", "author": {"login": "HorizonNet"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestAsyncRegionAdminApi2.java", "diffHunk": "@@ -161,20 +163,39 @@ public void testMergeRegions() throws Exception {\n       .getTableHRegionLocations(metaTable, tableName).get();\n     RegionInfo regionA;\n     RegionInfo regionB;\n+    RegionInfo regionC;\n+    RegionInfo mergedChildRegion = null;\n \n     // merge with full name\n     assertEquals(3, regionLocations.size());\n     regionA = regionLocations.get(0).getRegion();\n     regionB = regionLocations.get(1).getRegion();\n+    regionC = regionLocations.get(2).getRegion();\n     admin.mergeRegions(regionA.getRegionName(), regionB.getRegionName(), false).get();\n \n     regionLocations = AsyncMetaTableAccessor\n       .getTableHRegionLocations(metaTable, tableName).get();\n+\n     assertEquals(2, regionLocations.size());\n+    for (HRegionLocation rl : regionLocations) {\n+      if (regionC.compareTo(rl.getRegion()) != 0) {\n+        mergedChildRegion = rl.getRegion();\n+        break;\n+      }\n+    }\n+\n+    assertTrue(mergedChildRegion != null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbe693dd48bac04993ae3b9c80bebbe2c621b45"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1fbe693dd48bac04993ae3b9c80bebbe2c621b45", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/1fbe693dd48bac04993ae3b9c80bebbe2c621b45", "committedDate": "2020-05-15T23:10:05Z", "message": "HBASE-24370 Avoid aggressive MergeRegion and GCMultipleMergedRegionsProcedure"}, "afterCommit": {"oid": "b5762d18ab5451b11a750bf12d577efbfac70345", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/b5762d18ab5451b11a750bf12d577efbfac70345", "committedDate": "2020-05-18T05:18:37Z", "message": "HBASE-24370 Avoid aggressive MergeRegion and GCMultipleMergedRegionsProcedure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzODYwNDIy", "url": "https://github.com/apache/hbase/pull/1719#pullrequestreview-413860422", "createdAt": "2020-05-18T19:01:14Z", "commit": {"oid": "b5762d18ab5451b11a750bf12d577efbfac70345"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTowMToxNFrOGXD2ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTowMjoxMVrOGXD4UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgzMzU2Ng==", "bodyText": "I think you can add directly to putOfMerged as its value is only used once.", "url": "https://github.com/apache/hbase/pull/1719#discussion_r426833566", "createdAt": "2020-05-18T19:01:14Z", "author": {"login": "HorizonNet"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMetaFixer.java", "diffHunk": "@@ -308,6 +314,75 @@ public void testOverlapWithSmallMergeCount() throws Exception {\n     }\n   }\n \n+  /**\n+   * This test covers the case that one of merged parent regions is a merged child region that\n+   * has not been GCed but there is no reference files anymore. In this case, it will kick off\n+   * a GC procedure, but no merge will happen.\n+   */\n+  @Test\n+  public void testMergeWithMergedChildRegion() throws Exception {\n+    TableName tn = TableName.valueOf(this.name.getMethodName());\n+    Table t = TEST_UTIL.createMultiRegionTable(tn, HConstants.CATALOG_FAMILY);\n+    List<RegionInfo> ris = MetaTableAccessor.getTableRegions(TEST_UTIL.getConnection(), tn);\n+    assertTrue(ris.size() > 5);\n+    HMaster services = TEST_UTIL.getHBaseCluster().getMaster();\n+    CatalogJanitor cj = services.getCatalogJanitor();\n+    cj.scan();\n+    CatalogJanitor.Report report = cj.getLastReport();\n+    assertTrue(report.isEmpty());\n+    RegionInfo overlapRegion = makeOverlap(services, ris.get(1), ris.get(2));\n+    Threads.sleep(10000);\n+\n+    cj.scan();\n+    report = cj.getLastReport();\n+    assertEquals(2, report.getOverlaps().size());\n+\n+    // Mark it as a merged child region.\n+    RegionInfo fakedParentRegion = RegionInfoBuilder.newBuilder(tn).\n+      setStartKey(overlapRegion.getStartKey()).\n+      build();\n+\n+    Table meta = MetaTableAccessor.getMetaHTable(TEST_UTIL.getConnection());\n+    long time = HConstants.LATEST_TIMESTAMP;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5762d18ab5451b11a750bf12d577efbfac70345"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgzNDAwMA==", "bodyText": "Can this one be set to lower value?", "url": "https://github.com/apache/hbase/pull/1719#discussion_r426834000", "createdAt": "2020-05-18T19:02:11Z", "author": {"login": "HorizonNet"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMetaFixer.java", "diffHunk": "@@ -308,6 +314,75 @@ public void testOverlapWithSmallMergeCount() throws Exception {\n     }\n   }\n \n+  /**\n+   * This test covers the case that one of merged parent regions is a merged child region that\n+   * has not been GCed but there is no reference files anymore. In this case, it will kick off\n+   * a GC procedure, but no merge will happen.\n+   */\n+  @Test\n+  public void testMergeWithMergedChildRegion() throws Exception {\n+    TableName tn = TableName.valueOf(this.name.getMethodName());\n+    Table t = TEST_UTIL.createMultiRegionTable(tn, HConstants.CATALOG_FAMILY);\n+    List<RegionInfo> ris = MetaTableAccessor.getTableRegions(TEST_UTIL.getConnection(), tn);\n+    assertTrue(ris.size() > 5);\n+    HMaster services = TEST_UTIL.getHBaseCluster().getMaster();\n+    CatalogJanitor cj = services.getCatalogJanitor();\n+    cj.scan();\n+    CatalogJanitor.Report report = cj.getLastReport();\n+    assertTrue(report.isEmpty());\n+    RegionInfo overlapRegion = makeOverlap(services, ris.get(1), ris.get(2));\n+    Threads.sleep(10000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5762d18ab5451b11a750bf12d577efbfac70345"}, "originalPosition": 62}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5762d18ab5451b11a750bf12d577efbfac70345", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/b5762d18ab5451b11a750bf12d577efbfac70345", "committedDate": "2020-05-18T05:18:37Z", "message": "HBASE-24370 Avoid aggressive MergeRegion and GCMultipleMergedRegionsProcedure"}, "afterCommit": {"oid": "51c2fc221f99052a09e73fef8f568fd4ffbbf654", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/51c2fc221f99052a09e73fef8f568fd4ffbbf654", "committedDate": "2020-05-18T21:36:44Z", "message": "HBASE-24370 Avoid aggressive MergeRegion and GCMultipleMergedRegionsProcedure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3aa0954b84a4f849ab37be31e755f3a6050ffe5", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/c3aa0954b84a4f849ab37be31e755f3a6050ffe5", "committedDate": "2020-05-19T21:41:39Z", "message": "HBASE-24370 Avoid aggressive MergeRegion and GCMultipleMergedRegionsProcedure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51c2fc221f99052a09e73fef8f568fd4ffbbf654", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/51c2fc221f99052a09e73fef8f568fd4ffbbf654", "committedDate": "2020-05-18T21:36:44Z", "message": "HBASE-24370 Avoid aggressive MergeRegion and GCMultipleMergedRegionsProcedure"}, "afterCommit": {"oid": "c3aa0954b84a4f849ab37be31e755f3a6050ffe5", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/c3aa0954b84a4f849ab37be31e755f3a6050ffe5", "committedDate": "2020-05-19T21:41:39Z", "message": "HBASE-24370 Avoid aggressive MergeRegion and GCMultipleMergedRegionsProcedure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTg1NTA4", "url": "https://github.com/apache/hbase/pull/1719#pullrequestreview-415585508", "createdAt": "2020-05-20T18:02:12Z", "commit": {"oid": "c3aa0954b84a4f849ab37be31e755f3a6050ffe5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2137, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}