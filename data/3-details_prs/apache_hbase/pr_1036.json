{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNzM5Mzkx", "number": 1036, "title": "HBASE-23686 Revert binary incompatible change in ByteRangeUtils and removed reflections in CommonFSUtils", "bodyText": "Based on the feedback from Sean on #1034.", "createdAt": "2020-01-14T16:55:12Z", "url": "https://github.com/apache/hbase/pull/1036", "merged": true, "mergeCommit": {"oid": "50e264485d0f98aeb1bd0058ad3ed9d217840b7f"}, "closed": true, "closedAt": "2020-01-19T17:06:32Z", "author": {"login": "HorizonNet"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6T5vWAH2gAyMzYyNzM5MzkxOjFjYjU0Mzg4YmQxZmQ0ZTA1Zjg2NTI5OWZhODdkN2E3NjBlODI1YmM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6n-zfAFqTM0MzM0MjQ3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1cb54388bd1fd4e05f865299fa87d7a760e825bc", "author": {"user": {"login": "HorizonNet", "name": "Jan Hentschel"}}, "url": "https://github.com/apache/hbase/commit/1cb54388bd1fd4e05f865299fa87d7a760e825bc", "committedDate": "2020-01-14T16:53:48Z", "message": "HBASE-23686 Revert binary incompatible change in ByteRangeUtils and removed reflections in CommonFSUtils"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNzA3NzU1", "url": "https://github.com/apache/hbase/pull/1036#pullrequestreview-342707755", "createdAt": "2020-01-14T17:26:21Z", "commit": {"oid": "1cb54388bd1fd4e05f865299fa87d7a760e825bc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNzoyNjoyMVrOFdfrNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNzoyNjoyMVrOFdfrNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ3MTk4OQ==", "bodyText": "This should be two direct checks for RemoteException and UnsupportedOperationException respectively. Now that we're not using reflection it won't be wrapped in InvocationTargetException", "url": "https://github.com/apache/hbase/pull/1036#discussion_r366471989", "createdAt": "2020-01-14T17:26:21Z", "author": {"login": "busbey"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/util/CommonFSUtils.java", "diffHunk": "@@ -568,83 +521,54 @@ static void setStoragePolicy(final FileSystem fs, final Path path, final String\n    */\n   private static void invokeSetStoragePolicy(final FileSystem fs, final Path path,\n       final String storagePolicy) throws IOException {\n-    Method m = null;\n     Exception toThrow = null;\n+\n     try {\n-      m = fs.getClass().getDeclaredMethod(\"setStoragePolicy\", Path.class, String.class);\n-      m.setAccessible(true);\n-    } catch (NoSuchMethodException e) {\n-      toThrow = e;\n-      final String msg = \"FileSystem doesn't support setStoragePolicy; HDFS-6584, HDFS-9345 \" +\n-          \"not available. This is normal and expected on earlier Hadoop versions.\";\n-      if (!warningMap.containsKey(fs)) {\n-        warningMap.put(fs, true);\n-        LOG.warn(msg, e);\n-      } else if (LOG.isDebugEnabled()) {\n-        LOG.debug(msg, e);\n+      fs.setStoragePolicy(path, storagePolicy);\n+\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Set storagePolicy={} for path={}\", storagePolicy, path);\n       }\n-      m = null;\n-    } catch (SecurityException e) {\n+    } catch (Exception e) {\n       toThrow = e;\n-      final String msg = \"No access to setStoragePolicy on FileSystem from the SecurityManager; \" +\n-          \"HDFS-6584, HDFS-9345 not available. This is unusual and probably warrants an email \" +\n-          \"to the user@hbase mailing list. Please be sure to include a link to your configs, and \" +\n-          \"logs that include this message and period of time before it. Logs around service \" +\n-          \"start up will probably be useful as well.\";\n+      // This swallows FNFE, should we be throwing it? seems more likely to indicate dev\n+      // misuse than a runtime problem with HDFS.\n       if (!warningMap.containsKey(fs)) {\n         warningMap.put(fs, true);\n-        LOG.warn(msg, e);\n+        LOG.warn(\"Unable to set storagePolicy=\" + storagePolicy + \" for path=\" + path + \". \" +\n+            \"DEBUG log level might have more details.\", e);\n       } else if (LOG.isDebugEnabled()) {\n-        LOG.debug(msg, e);\n+        LOG.debug(\"Unable to set storagePolicy=\" + storagePolicy + \" for path=\" + path, e);\n       }\n-      m = null; // could happen on setAccessible() or getDeclaredMethod()\n-    }\n-    if (m != null) {\n-      try {\n-        m.invoke(fs, path, storagePolicy);\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Set storagePolicy={} for path={}\", storagePolicy, path);\n-        }\n-      } catch (Exception e) {\n-        toThrow = e;\n-        // This swallows FNFE, should we be throwing it? seems more likely to indicate dev\n-        // misuse than a runtime problem with HDFS.\n-        if (!warningMap.containsKey(fs)) {\n-          warningMap.put(fs, true);\n-          LOG.warn(\"Unable to set storagePolicy=\" + storagePolicy + \" for path=\" + path + \". \" +\n-              \"DEBUG log level might have more details.\", e);\n-        } else if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Unable to set storagePolicy=\" + storagePolicy + \" for path=\" + path, e);\n-        }\n-        // check for lack of HDFS-7228\n-        if (e instanceof InvocationTargetException) {\n-          final Throwable exception = e.getCause();\n-          if (exception instanceof RemoteException &&\n-              HadoopIllegalArgumentException.class.getName().equals(\n-                ((RemoteException)exception).getClassName())) {\n-            if (LOG.isDebugEnabled()) {\n-              LOG.debug(\"Given storage policy, '\" +storagePolicy +\"', was rejected and probably \" +\n-                \"isn't a valid policy for the version of Hadoop you're running. I.e. if you're \" +\n-                \"trying to use SSD related policies then you're likely missing HDFS-7228. For \" +\n-                \"more information see the 'ArchivalStorage' docs for your Hadoop release.\");\n-            }\n-          // Hadoop 2.8+, 3.0-a1+ added FileSystem.setStoragePolicy with a default implementation\n-          // that throws UnsupportedOperationException\n-          } else if (exception instanceof UnsupportedOperationException) {\n-            if (LOG.isDebugEnabled()) {\n-              LOG.debug(\"The underlying FileSystem implementation doesn't support \" +\n-                  \"setStoragePolicy. This is probably intentional on their part, since HDFS-9345 \" +\n-                  \"appears to be present in your version of Hadoop. For more information check \" +\n-                  \"the Hadoop documentation on 'ArchivalStorage', the Hadoop FileSystem \" +\n-                  \"specification docs from HADOOP-11981, and/or related documentation from the \" +\n-                  \"provider of the underlying FileSystem (its name should appear in the \" +\n-                  \"stacktrace that accompanies this message). Note in particular that Hadoop's \" +\n-                  \"local filesystem implementation doesn't support storage policies.\", exception);\n-            }\n+      // check for lack of HDFS-7228\n+      if (e instanceof InvocationTargetException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cb54388bd1fd4e05f865299fa87d7a760e825bc"}, "originalPosition": 163}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47f5ba53f6a2ce0c67e4b79e3614f5fe54fe7d73", "author": {"user": {"login": "HorizonNet", "name": "Jan Hentschel"}}, "url": "https://github.com/apache/hbase/commit/47f5ba53f6a2ce0c67e4b79e3614f5fe54fe7d73", "committedDate": "2020-01-14T17:39:53Z", "message": "HBASE-23686 Fixed review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81ea953140b3fb4477dc6181b2d1a615e7010c3b", "author": {"user": {"login": "HorizonNet", "name": "Jan Hentschel"}}, "url": "https://github.com/apache/hbase/commit/81ea953140b3fb4477dc6181b2d1a615e7010c3b", "committedDate": "2020-01-14T19:57:51Z", "message": "HBASE-23686 Removed getting the cause"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMzQyNDc5", "url": "https://github.com/apache/hbase/pull/1036#pullrequestreview-343342479", "createdAt": "2020-01-15T16:17:26Z", "commit": {"oid": "81ea953140b3fb4477dc6181b2d1a615e7010c3b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2930, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}