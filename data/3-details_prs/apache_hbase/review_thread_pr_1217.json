{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwODg2MTY4", "number": 1217, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1MDowOVrODjyZaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTo1NTowNlrODleoWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODUyNDU3OnYy", "diffSide": "RIGHT", "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/actions/GracefulRollingRestartRsAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1MDowOVrOFvyd9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1MDowOVrOFvyd9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1NDI2Mw==", "bodyText": "Could we move this to Action class, in order to avoid repeating it on different Action implementations? Just noticed we duplicate this in RollingBatchSuspendResumeRsAction.java.", "url": "https://github.com/apache/hbase/pull/1217#discussion_r385654263", "createdAt": "2020-02-28T11:50:09Z", "author": {"login": "wchevreuil"}, "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/actions/GracefulRollingRestartRsAction.java", "diffHunk": "@@ -35,15 +35,23 @@\n public class GracefulRollingRestartRsAction extends RestartActionBaseAction {\n   private static final Logger LOG = LoggerFactory.getLogger(GracefulRollingRestartRsAction.class);\n \n-  public GracefulRollingRestartRsAction(long sleepTime) {\n+  private boolean killMetaRs;\n+\n+  public GracefulRollingRestartRsAction(long sleepTime, boolean killMetaRs) {\n     super(sleepTime);\n+    this.killMetaRs = killMetaRs;\n   }\n \n   @Override\n   public void perform() throws Exception {\n     LOG.info(\"Performing action: Rolling restarting non-master region servers\");\n     List<ServerName> selectedServers = selectServers();\n \n+    if(!killMetaRs){\n+      ServerName metaServer = cluster.getServerHoldingMeta();\n+      selectedServers.remove(metaServer);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4645db4eb1a7117b917e268f2cd3d6fc6ca1ba41"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODUyNTI4OnYy", "diffSide": "RIGHT", "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/actions/RollingBatchSuspendResumeRsAction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1MDoyNVrOFvyeXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1MDoyNVrOFvyeXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1NDM2Ng==", "bodyText": "See previous comment above.", "url": "https://github.com/apache/hbase/pull/1217#discussion_r385654366", "createdAt": "2020-02-28T11:50:25Z", "author": {"login": "wchevreuil"}, "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/actions/RollingBatchSuspendResumeRsAction.java", "diffHunk": "@@ -64,6 +67,11 @@ public void perform() throws Exception {\n         (int) (ratio * 100)));\n     List<ServerName> selectedServers = selectServers();\n \n+    if(!killMetaRs){\n+      ServerName metaServer = cluster.getServerHoldingMeta();\n+      selectedServers.remove(metaServer);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4645db4eb1a7117b917e268f2cd3d6fc6ca1ba41"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODUzNjY0OnYy", "diffSide": "RIGHT", "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/factories/ServerAndDependenciesKillingMonkeyFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1NTowMVrOFvylIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1NTowMVrOFvylIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1NjA5OA==", "bodyText": "Similar suggestion as done for the Actions. Can we move this to a common method in the parent class to avoid code repetition?", "url": "https://github.com/apache/hbase/pull/1217#discussion_r385656098", "createdAt": "2020-02-28T11:55:01Z", "author": {"login": "wchevreuil"}, "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/factories/ServerAndDependenciesKillingMonkeyFactory.java", "diffHunk": "@@ -83,5 +84,8 @@ private void loadProperties() {\n     rollingBatchSuspendtRSRatio = Float.parseFloat(this.properties.getProperty(\n         MonkeyConstants.ROLLING_BATCH_SUSPEND_RS_RATIO,\n         MonkeyConstants.DEFAULT_ROLLING_BATCH_SUSPEND_RS_RATIO + \"\"));\n+    killMetaRs = Boolean.parseBoolean(this.properties.getProperty(\n+      MonkeyConstants.KILL_META_RS,\n+      MonkeyConstants.DEFAULT_KILL_META_RS + \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4645db4eb1a7117b917e268f2cd3d6fc6ca1ba41"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODUzNzI5OnYy", "diffSide": "RIGHT", "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/factories/ServerKillingMonkeyFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1NToxOFrOFvyljQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1NToxOFrOFvyljQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1NjIwNQ==", "bodyText": "See previous comment.", "url": "https://github.com/apache/hbase/pull/1217#discussion_r385656205", "createdAt": "2020-02-28T11:55:18Z", "author": {"login": "wchevreuil"}, "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/factories/ServerKillingMonkeyFactory.java", "diffHunk": "@@ -79,5 +80,8 @@ private void loadProperties() {\n     rollingBatchSuspendtRSRatio = Float.parseFloat(this.properties.getProperty(\n         MonkeyConstants.ROLLING_BATCH_SUSPEND_RS_RATIO,\n         MonkeyConstants.DEFAULT_ROLLING_BATCH_SUSPEND_RS_RATIO + \"\"));\n+    killMetaRs = Boolean.parseBoolean(this.properties.getProperty(\n+      MonkeyConstants.KILL_META_RS,\n+      MonkeyConstants.DEFAULT_KILL_META_RS + \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4645db4eb1a7117b917e268f2cd3d6fc6ca1ba41"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODUzNzk0OnYy", "diffSide": "RIGHT", "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/factories/StressAssignmentManagerMonkeyFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1NTozNFrOFvyl9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMTo1NTozNFrOFvyl9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY1NjMwOQ==", "bodyText": "See previous comment.", "url": "https://github.com/apache/hbase/pull/1217#discussion_r385656309", "createdAt": "2020-02-28T11:55:34Z", "author": {"login": "wchevreuil"}, "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/factories/StressAssignmentManagerMonkeyFactory.java", "diffHunk": "@@ -110,5 +111,8 @@ private void loadProperties() {\n     rollingBatchSuspendtRSRatio = Float.parseFloat(this.properties.getProperty(\n         MonkeyConstants.ROLLING_BATCH_SUSPEND_RS_RATIO,\n         MonkeyConstants.DEFAULT_ROLLING_BATCH_SUSPEND_RS_RATIO + \"\"));\n+    killMetaRs = Boolean.parseBoolean(this.properties.getProperty(\n+      MonkeyConstants.KILL_META_RS,\n+      MonkeyConstants.DEFAULT_KILL_META_RS + \"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4645db4eb1a7117b917e268f2cd3d6fc6ca1ba41"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjEzNjM3OnYy", "diffSide": "RIGHT", "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestBackupRestore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNToyNjo0NFrOFyYCXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzoxMjoxMFrOFycYlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM2Njk0MQ==", "bodyText": "nit: If we just overload the constructor on PolicyBasedChaosMonkey, then we don't need this extra change just to pass a null reference.", "url": "https://github.com/apache/hbase/pull/1217#discussion_r388366941", "createdAt": "2020-03-05T15:26:44Z", "author": {"login": "wchevreuil"}, "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestBackupRestore.java", "diffHunk": "@@ -139,7 +139,7 @@ public void tearDown() throws IOException {\n   public void setUpMonkey() throws Exception {\n     Policy p = new PeriodicRandomActionPolicy(sleepTime,\n       new RestartRandomRsExceptMetaAction(sleepTime));\n-    this.monkey = new PolicyBasedChaosMonkey(util, p);\n+    this.monkey = new PolicyBasedChaosMonkey(null, util, p);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3dca98d355e6997c5b654177a79fa60ede923b3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQzODE2NA==", "bodyText": "You are right, I'll fix this.", "url": "https://github.com/apache/hbase/pull/1217#discussion_r388438164", "createdAt": "2020-03-05T17:12:10Z", "author": {"login": "BukrosSzabolcs"}, "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestBackupRestore.java", "diffHunk": "@@ -139,7 +139,7 @@ public void tearDown() throws IOException {\n   public void setUpMonkey() throws Exception {\n     Policy p = new PeriodicRandomActionPolicy(sleepTime,\n       new RestartRandomRsExceptMetaAction(sleepTime));\n-    this.monkey = new PolicyBasedChaosMonkey(util, p);\n+    this.monkey = new PolicyBasedChaosMonkey(null, util, p);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM2Njk0MQ=="}, "originalCommit": {"oid": "f3dca98d355e6997c5b654177a79fa60ede923b3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjEzNzk2OnYy", "diffSide": "RIGHT", "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestRegionReplicaPerf.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNToyNzoxMVrOFyYDZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNToyNzoxMVrOFyYDZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM2NzIwNw==", "bodyText": "See previous comment.", "url": "https://github.com/apache/hbase/pull/1217#discussion_r388367207", "createdAt": "2020-03-05T15:27:11Z", "author": {"login": "wchevreuil"}, "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/IntegrationTestRegionReplicaPerf.java", "diffHunk": "@@ -195,7 +195,7 @@ public void setUpMonkey() throws Exception {\n     Policy p = new PeriodicRandomActionPolicy(sleepTime,\n       new RestartRandomRsExceptMetaAction(sleepTime),\n       new MoveRandomRegionOfTableAction(tableName));\n-    this.monkey = new PolicyBasedChaosMonkey(util, p);\n+    this.monkey = new PolicyBasedChaosMonkey(null, util, p);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3dca98d355e6997c5b654177a79fa60ede923b3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNjI1NzU1OnYy", "diffSide": "RIGHT", "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/factories/MobNoKillMonkeyFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTo1NTowNlrOFyZOPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxMDoyNToxNFrOFyz-zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NjM2NQ==", "bodyText": "Do we really need to specify extra properties when creating policy for all these factories? Otherwise, if this is just duo to the change in PolicyBasedChaosMonkey constructor, it would benefit from overloading the constructor there.", "url": "https://github.com/apache/hbase/pull/1217#discussion_r388386365", "createdAt": "2020-03-05T15:55:06Z", "author": {"login": "wchevreuil"}, "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/factories/MobNoKillMonkeyFactory.java", "diffHunk": "@@ -75,7 +75,7 @@\n \n     Action[] actions4 = new Action[] { new DumpClusterStatusAction() };\n \n-    return new PolicyBasedChaosMonkey(util,\n+    return new PolicyBasedChaosMonkey(properties, util,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3dca98d355e6997c5b654177a79fa60ede923b3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODgyNDc4MQ==", "bodyText": "I kind of had to. The issue was that Actions do not have access to these properties. This is the main reason we have this clutter in factories where we read the properties and pass them along to the actions in the action constructor, when it could have been an internal thing. So I looked for a way to get these properties to them. (It was a minor issue that Action.init could not use these properties and had to rely on the default values from the config. Passing it along fixed this too.) Anyway the best way to do this was through PolicyBasedChaosMonkey and PolicyContext. Technically I could have just created a setter on PolicyBasedChaosMonkey and leave the constructor alone and call the setter from IntegrationTestBase, but it felt like a bad practice to circumvent a factory.", "url": "https://github.com/apache/hbase/pull/1217#discussion_r388824781", "createdAt": "2020-03-06T10:25:14Z", "author": {"login": "BukrosSzabolcs"}, "path": "hbase-it/src/test/java/org/apache/hadoop/hbase/chaos/factories/MobNoKillMonkeyFactory.java", "diffHunk": "@@ -75,7 +75,7 @@\n \n     Action[] actions4 = new Action[] { new DumpClusterStatusAction() };\n \n-    return new PolicyBasedChaosMonkey(util,\n+    return new PolicyBasedChaosMonkey(properties, util,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM4NjM2NQ=="}, "originalCommit": {"oid": "f3dca98d355e6997c5b654177a79fa60ede923b3"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2103, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}