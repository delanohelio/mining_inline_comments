{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNTIzNjAw", "number": 1892, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMzoyNDo0MFrOEFNiZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjowODoyNVrOEFZnEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczOTAwMTMzOnYy", "diffSide": "RIGHT", "path": "hbase-thrift/src/main/resources/org/apache/hadoop/hbase/thrift2/hbase.thrift", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMzoyNDo0MFrOGjT1JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMzoyNDo0MFrOGjT1JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY3ODI0NQ==", "bodyText": "Use OR rather than the enum value?", "url": "https://github.com/apache/hbase/pull/1892#discussion_r439678245", "createdAt": "2020-06-12T23:24:40Z", "author": {"login": "bharathv"}, "path": "hbase-thrift/src/main/resources/org/apache/hadoop/hbase/thrift2/hbase.thrift", "diffHunk": "@@ -470,6 +475,7 @@ struct TLogQueryFilter {\n   4: optional string userName\n   5: optional i32 limit = 10\n   6: optional TLogType logType = 1\n+  7: optional TFilterByOperator filterByOperator = 2", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b26c08a28cd65bb8e29127ad5150166c07f9667"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDk3OTM5OnYy", "diffSide": "RIGHT", "path": "hbase-thrift/src/test/java/org/apache/hadoop/hbase/thrift2/TestThriftHBaseServiceHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNjowODoyNVrOGjkSVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODoyODoyMVrOGjoKqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk0Nzg2Mw==", "bodyText": "Umm, if we came this far, why not make an RPC and validate the result set too? :-)", "url": "https://github.com/apache/hbase/pull/1892#discussion_r439947863", "createdAt": "2020-06-15T06:08:25Z", "author": {"login": "bharathv"}, "path": "hbase-thrift/src/test/java/org/apache/hadoop/hbase/thrift2/TestThriftHBaseServiceHandler.java", "diffHunk": "@@ -1767,6 +1769,12 @@ public void testSlowLogResponses() throws Exception {\n     clearedResponses.forEach(Assert::assertTrue);\n     TLogQueryFilter tLogQueryFilter = new TLogQueryFilter();\n     tLogQueryFilter.setLimit(15);\n+    Assert.assertEquals(tLogQueryFilter.getFilterByOperator(), TFilterByOperator.OR);\n+    LogQueryFilter logQueryFilter = ThriftUtilities.getSlowLogQueryFromThrift(tLogQueryFilter);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f92093e141fa48d3c745be8ae1d87038c7f12b97"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAxMTQzNQ==", "bodyText": "Ah I see, yes that is quite valid point :)\nHowever, the issue with testing this way is: For our case, we don't have any Add/Update API, we just have Get API, and the event that trigger Add event is something not in client test's control (only at RpcServer level, we have control to identify if an RPC call was slow/large by nature).", "url": "https://github.com/apache/hbase/pull/1892#discussion_r440011435", "createdAt": "2020-06-15T08:28:21Z", "author": {"login": "virajjasani"}, "path": "hbase-thrift/src/test/java/org/apache/hadoop/hbase/thrift2/TestThriftHBaseServiceHandler.java", "diffHunk": "@@ -1767,6 +1769,12 @@ public void testSlowLogResponses() throws Exception {\n     clearedResponses.forEach(Assert::assertTrue);\n     TLogQueryFilter tLogQueryFilter = new TLogQueryFilter();\n     tLogQueryFilter.setLimit(15);\n+    Assert.assertEquals(tLogQueryFilter.getFilterByOperator(), TFilterByOperator.OR);\n+    LogQueryFilter logQueryFilter = ThriftUtilities.getSlowLogQueryFromThrift(tLogQueryFilter);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk0Nzg2Mw=="}, "originalCommit": {"oid": "f92093e141fa48d3c745be8ae1d87038c7f12b97"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2975, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}