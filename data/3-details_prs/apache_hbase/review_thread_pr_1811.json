{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NDQ0MTcz", "number": 1811, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTowMDozOVrOEBJ8rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTowNjoxMVrOEBetTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjQ3MDIwOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegion.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTowMDozOVrOGc2uow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTo1MDo0OFrOGdX35Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwOTk4Nw==", "bodyText": "We need to add this in here?", "url": "https://github.com/apache/hbase/pull/1811#discussion_r432909987", "createdAt": "2020-05-31T05:00:39Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegion.java", "diffHunk": "@@ -284,18 +284,21 @@ public static LocalRegion create(LocalRegionParams params) throws IOException {\n     Configuration conf = new Configuration(baseConf);\n     CommonFSUtils.setRootDir(conf, rootDir);\n     CommonFSUtils.setWALRootDir(conf, walRootDir);\n-    LocalRegionFlusherAndCompactor.setupConf(conf, params.flushSize(), params.flushPerChanges(),\n+    MasterRegionFlusherAndCompactor.setupConf(conf, params.flushSize(), params.flushPerChanges(),\n       params.flushIntervalMs());\n     conf.setInt(AbstractFSWAL.MAX_LOGS, params.maxWals());\n     if (params.useHsync() != null) {\n       conf.setBoolean(HRegion.WAL_HSYNC_CONF_KEY, params.useHsync());\n     }\n+    if (params.useMetaCellComparator() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMDcyMQ==", "bodyText": "This was missing?", "url": "https://github.com/apache/hbase/pull/1811#discussion_r432910721", "createdAt": "2020-05-31T05:15:40Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegion.java", "diffHunk": "@@ -284,18 +284,21 @@ public static LocalRegion create(LocalRegionParams params) throws IOException {\n     Configuration conf = new Configuration(baseConf);\n     CommonFSUtils.setRootDir(conf, rootDir);\n     CommonFSUtils.setWALRootDir(conf, walRootDir);\n-    LocalRegionFlusherAndCompactor.setupConf(conf, params.flushSize(), params.flushPerChanges(),\n+    MasterRegionFlusherAndCompactor.setupConf(conf, params.flushSize(), params.flushPerChanges(),\n       params.flushIntervalMs());\n     conf.setInt(AbstractFSWAL.MAX_LOGS, params.maxWals());\n     if (params.useHsync() != null) {\n       conf.setBoolean(HRegion.WAL_HSYNC_CONF_KEY, params.useHsync());\n     }\n+    if (params.useMetaCellComparator() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwOTk4Nw=="}, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMzIwNA==", "bodyText": "For used as procedure store, this is not necessary. This is for preparing for storing root table in the future, as for root table, the row key is the same with meta table, and we need to use a special comparator. I think it is fine to change the comparator in the future?", "url": "https://github.com/apache/hbase/pull/1811#discussion_r432913204", "createdAt": "2020-05-31T06:04:33Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegion.java", "diffHunk": "@@ -284,18 +284,21 @@ public static LocalRegion create(LocalRegionParams params) throws IOException {\n     Configuration conf = new Configuration(baseConf);\n     CommonFSUtils.setRootDir(conf, rootDir);\n     CommonFSUtils.setWALRootDir(conf, walRootDir);\n-    LocalRegionFlusherAndCompactor.setupConf(conf, params.flushSize(), params.flushPerChanges(),\n+    MasterRegionFlusherAndCompactor.setupConf(conf, params.flushSize(), params.flushPerChanges(),\n       params.flushIntervalMs());\n     conf.setInt(AbstractFSWAL.MAX_LOGS, params.maxWals());\n     if (params.useHsync() != null) {\n       conf.setBoolean(HRegion.WAL_HSYNC_CONF_KEY, params.useHsync());\n     }\n+    if (params.useMetaCellComparator() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwOTk4Nw=="}, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1MzAyOQ==", "bodyText": "ok", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433453029", "createdAt": "2020-06-01T19:50:48Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegion.java", "diffHunk": "@@ -284,18 +284,21 @@ public static LocalRegion create(LocalRegionParams params) throws IOException {\n     Configuration conf = new Configuration(baseConf);\n     CommonFSUtils.setRootDir(conf, rootDir);\n     CommonFSUtils.setWALRootDir(conf, walRootDir);\n-    LocalRegionFlusherAndCompactor.setupConf(conf, params.flushSize(), params.flushPerChanges(),\n+    MasterRegionFlusherAndCompactor.setupConf(conf, params.flushSize(), params.flushPerChanges(),\n       params.flushIntervalMs());\n     conf.setInt(AbstractFSWAL.MAX_LOGS, params.maxWals());\n     if (params.useHsync() != null) {\n       conf.setBoolean(HRegion.WAL_HSYNC_CONF_KEY, params.useHsync());\n     }\n+    if (params.useMetaCellComparator() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwOTk4Nw=="}, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjQ3NTI3OnYy", "diffSide": "LEFT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegionFactory.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNToxMzowNlrOGc2xGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTo1MDo1N1rOGdX4LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMDYxNg==", "bodyText": "How comes we can drop these methods?", "url": "https://github.com/apache/hbase/pull/1811#discussion_r432910616", "createdAt": "2020-05-31T05:13:06Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegionFactory.java", "diffHunk": "@@ -89,45 +82,8 @@\n   private static final TableDescriptor TABLE_DESC = TableDescriptorBuilder.newBuilder(TABLE_NAME)\n     .setColumnFamily(ColumnFamilyDescriptorBuilder.of(PROC_FAMILY)).build();\n \n-  private final LocalRegion region;\n-\n-  private LocalStore(LocalRegion region) {\n-    this.region = region;\n-  }\n-\n-  public void update(UpdateLocalRegion action) throws IOException {\n-    region.update(action);\n-  }\n-\n-  public Result get(Get get) throws IOException {\n-    return region.get(get);\n-  }\n-\n-  public RegionScanner getScanner(Scan scan) throws IOException {\n-    return region.getScanner(scan);\n-  }\n-\n-  public void close(boolean abort) {\n-    region.close(abort);\n-  }\n-\n-  @VisibleForTesting\n-  public FlushResult flush(boolean force) throws IOException {\n-    return region.flush(force);\n-  }\n-\n-  @VisibleForTesting\n-  public void requestRollAll() {\n-    region.requestRollAll();\n-  }\n-\n-  @VisibleForTesting\n-  public void waitUntilWalRollFinished() throws InterruptedException {\n-    region.waitUntilWalRollFinished();\n-  }\n-\n-  public static LocalStore create(Server server) throws IOException {\n-    LocalRegionParams params = new LocalRegionParams().server(server)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMzI1Mg==", "bodyText": "We will return MasterRegion directly after this change, so we do not need these methods any more, users can use the methods in MasterRegion directly.", "url": "https://github.com/apache/hbase/pull/1811#discussion_r432913252", "createdAt": "2020-05-31T06:05:22Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegionFactory.java", "diffHunk": "@@ -89,45 +82,8 @@\n   private static final TableDescriptor TABLE_DESC = TableDescriptorBuilder.newBuilder(TABLE_NAME)\n     .setColumnFamily(ColumnFamilyDescriptorBuilder.of(PROC_FAMILY)).build();\n \n-  private final LocalRegion region;\n-\n-  private LocalStore(LocalRegion region) {\n-    this.region = region;\n-  }\n-\n-  public void update(UpdateLocalRegion action) throws IOException {\n-    region.update(action);\n-  }\n-\n-  public Result get(Get get) throws IOException {\n-    return region.get(get);\n-  }\n-\n-  public RegionScanner getScanner(Scan scan) throws IOException {\n-    return region.getScanner(scan);\n-  }\n-\n-  public void close(boolean abort) {\n-    region.close(abort);\n-  }\n-\n-  @VisibleForTesting\n-  public FlushResult flush(boolean force) throws IOException {\n-    return region.flush(force);\n-  }\n-\n-  @VisibleForTesting\n-  public void requestRollAll() {\n-    region.requestRollAll();\n-  }\n-\n-  @VisibleForTesting\n-  public void waitUntilWalRollFinished() throws InterruptedException {\n-    region.waitUntilWalRollFinished();\n-  }\n-\n-  public static LocalStore create(Server server) throws IOException {\n-    LocalRegionParams params = new LocalRegionParams().server(server)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMDYxNg=="}, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyOTI5MA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433429290", "createdAt": "2020-06-01T19:02:39Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegionFactory.java", "diffHunk": "@@ -89,45 +82,8 @@\n   private static final TableDescriptor TABLE_DESC = TableDescriptorBuilder.newBuilder(TABLE_NAME)\n     .setColumnFamily(ColumnFamilyDescriptorBuilder.of(PROC_FAMILY)).build();\n \n-  private final LocalRegion region;\n-\n-  private LocalStore(LocalRegion region) {\n-    this.region = region;\n-  }\n-\n-  public void update(UpdateLocalRegion action) throws IOException {\n-    region.update(action);\n-  }\n-\n-  public Result get(Get get) throws IOException {\n-    return region.get(get);\n-  }\n-\n-  public RegionScanner getScanner(Scan scan) throws IOException {\n-    return region.getScanner(scan);\n-  }\n-\n-  public void close(boolean abort) {\n-    region.close(abort);\n-  }\n-\n-  @VisibleForTesting\n-  public FlushResult flush(boolean force) throws IOException {\n-    return region.flush(force);\n-  }\n-\n-  @VisibleForTesting\n-  public void requestRollAll() {\n-    region.requestRollAll();\n-  }\n-\n-  @VisibleForTesting\n-  public void waitUntilWalRollFinished() throws InterruptedException {\n-    region.waitUntilWalRollFinished();\n-  }\n-\n-  public static LocalStore create(Server server) throws IOException {\n-    LocalRegionParams params = new LocalRegionParams().server(server)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMDYxNg=="}, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ1MzEwMQ==", "bodyText": "ok", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433453101", "createdAt": "2020-06-01T19:50:57Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegionFactory.java", "diffHunk": "@@ -89,45 +82,8 @@\n   private static final TableDescriptor TABLE_DESC = TableDescriptorBuilder.newBuilder(TABLE_NAME)\n     .setColumnFamily(ColumnFamilyDescriptorBuilder.of(PROC_FAMILY)).build();\n \n-  private final LocalRegion region;\n-\n-  private LocalStore(LocalRegion region) {\n-    this.region = region;\n-  }\n-\n-  public void update(UpdateLocalRegion action) throws IOException {\n-    region.update(action);\n-  }\n-\n-  public Result get(Get get) throws IOException {\n-    return region.get(get);\n-  }\n-\n-  public RegionScanner getScanner(Scan scan) throws IOException {\n-    return region.getScanner(scan);\n-  }\n-\n-  public void close(boolean abort) {\n-    region.close(abort);\n-  }\n-\n-  @VisibleForTesting\n-  public FlushResult flush(boolean force) throws IOException {\n-    return region.flush(force);\n-  }\n-\n-  @VisibleForTesting\n-  public void requestRollAll() {\n-    region.requestRollAll();\n-  }\n-\n-  @VisibleForTesting\n-  public void waitUntilWalRollFinished() throws InterruptedException {\n-    region.waitUntilWalRollFinished();\n-  }\n-\n-  public static LocalStore create(Server server) throws IOException {\n-    LocalRegionParams params = new LocalRegionParams().server(server)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMDYxNg=="}, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTgzODg4OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODo1NTo0MFrOGdWNvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODo1NTo0MFrOGdWNvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyNTg1NA==", "bodyText": "Good.", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433425854", "createdAt": "2020-06-01T18:55:40Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -450,7 +451,7 @@ public void run() {\n   private ProcedureStore procedureStore;\n \n   // the master local storage to store procedure data, etc.\n-  private LocalStore localStore;\n+  private MasterRegion masterRegion;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTg0MzI2OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODo1NzowN1rOGdWQbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjoxOToxNVrOGdf7BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyNjU0MQ==", "bodyText": "Having everything use a single region has me a little nervous. Seems like it'll make it easy for two unrelated subsystems to step on each others' toes later on -- conflicting row keys, columns, &c. This should be fine for initial work though.", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433426541", "createdAt": "2020-06-01T18:57:07Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1563,7 +1564,7 @@ protected void stopServiceThreads() {\n   private void createProcedureExecutor() throws IOException {\n     MasterProcedureEnv procEnv = new MasterProcedureEnv(this);\n     procedureStore =\n-      new RegionProcedureStore(this, localStore, new MasterProcedureEnv.FsUtilsLeaseRecovery(this));\n+      new RegionProcedureStore(this, masterRegion, new MasterProcedureEnv.FsUtilsLeaseRecovery(this));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4NDkwMA==", "bodyText": "The idea is to use different families. There is a known risk that, if someone stores a lot data in one of the families, it will slow down the start up of the whole HMaster, even if it is not necessary. We should document this in our ref guide. Can be a follow on issue?", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433584900", "createdAt": "2020-06-02T02:19:15Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1563,7 +1564,7 @@ protected void stopServiceThreads() {\n   private void createProcedureExecutor() throws IOException {\n     MasterProcedureEnv procEnv = new MasterProcedureEnv(this);\n     procedureStore =\n-      new RegionProcedureStore(this, localStore, new MasterProcedureEnv.FsUtilsLeaseRecovery(this));\n+      new RegionProcedureStore(this, masterRegion, new MasterProcedureEnv.FsUtilsLeaseRecovery(this));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyNjU0MQ=="}, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTg1MjU5OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegion.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODo1OTo1NlrOGdWWIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjoxMToxNVrOGdfzdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyODAwMQ==", "bodyText": "We still need the wrapper class with delegation? How about have the factory manage creation of the HRegion (wiring up the wal, &c) and HMaster hold the instance of HRegion directly?", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433428001", "createdAt": "2020-06-01T18:59:56Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegion.java", "diffHunk": "@@ -79,14 +79,14 @@\n  * Notice that, you can use different root file system and WAL file system. Then the above directory\n  * will be on two file systems, the root file system will have the data directory while the WAL\n  * filesystem will have the WALs directory. The archived HFile will be moved to the global HFile\n- * archived directory with the {@link LocalRegionParams#archivedWalSuffix()} suffix. The archived\n+ * archived directory with the {@link MasterRegionParams#archivedWalSuffix()} suffix. The archived\n  * WAL will be moved to the global WAL archived directory with the\n- * {@link LocalRegionParams#archivedHFileSuffix()} suffix.\n+ * {@link MasterRegionParams#archivedHFileSuffix()} suffix.\n  */\n @InterfaceAudience.Private\n-public final class LocalRegion {\n+public final class MasterRegion {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4Mjk2NA==", "bodyText": "This is intentional. You can see the implementation of MasterRegion.update, we have to call flusherAndCompactor.onUpdate(); after each update. So if we expose the HRegion directly, the callers have to do this by their own, and I believe it will be easy to forget and then cause big problem...", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433582964", "createdAt": "2020-06-02T02:11:15Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegion.java", "diffHunk": "@@ -79,14 +79,14 @@\n  * Notice that, you can use different root file system and WAL file system. Then the above directory\n  * will be on two file systems, the root file system will have the data directory while the WAL\n  * filesystem will have the WALs directory. The archived HFile will be moved to the global HFile\n- * archived directory with the {@link LocalRegionParams#archivedWalSuffix()} suffix. The archived\n+ * archived directory with the {@link MasterRegionParams#archivedWalSuffix()} suffix. The archived\n  * WAL will be moved to the global WAL archived directory with the\n- * {@link LocalRegionParams#archivedHFileSuffix()} suffix.\n+ * {@link MasterRegionParams#archivedHFileSuffix()} suffix.\n  */\n @InterfaceAudience.Private\n-public final class LocalRegion {\n+public final class MasterRegion {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyODAwMQ=="}, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTg2NDM0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTowMzo1NVrOGdWdnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwMjoxNTowMlrOGdf3Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyOTkxNw==", "bodyText": "If this configuration point is specific to master side, should it have master in its name?", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433429917", "createdAt": "2020-06-01T19:03:55Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -258,6 +259,14 @@\n   public static final String SPECIAL_RECOVERED_EDITS_DIR =\n     \"hbase.hregion.special.recovered.edits.dir\";\n \n+  /**\n+   * Whether to use {@link MetaCellComparator} even if we are not meta region. Used when creating\n+   * master local region.\n+   */\n+  public static final String USE_META_CELL_COMPARATOR = \"hbase.region.use.meta.cell.comparator\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU4MzkxOQ==", "bodyText": "For now it is only used in HMaster but I do not think it should be prefixed with hbase.master, as it is a configuration for HRegion.", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433583919", "createdAt": "2020-06-02T02:15:02Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -258,6 +259,14 @@\n   public static final String SPECIAL_RECOVERED_EDITS_DIR =\n     \"hbase.hregion.special.recovered.edits.dir\";\n \n+  /**\n+   * Whether to use {@link MetaCellComparator} even if we are not meta region. Used when creating\n+   * master local region.\n+   */\n+  public static final String USE_META_CELL_COMPARATOR = \"hbase.region.use.meta.cell.comparator\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyOTkxNw=="}, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTg3MTUxOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTowNjoxMVrOGdWh8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTowNjoxMVrOGdWh8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzMTAyNg==", "bodyText": "It's a little nit-pick, but I like my configurations to specify components via .-separator, and use _ for component names. So this might be hbase.master.region.use_meta_cell_comparator.\nOf course, this might be conflicting with other configuration names and uses. Would need to look things over to see what else is using the \"hbase.master\" namespace.", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433431026", "createdAt": "2020-06-01T19:06:11Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -258,6 +259,14 @@\n   public static final String SPECIAL_RECOVERED_EDITS_DIR =\n     \"hbase.hregion.special.recovered.edits.dir\";\n \n+  /**\n+   * Whether to use {@link MetaCellComparator} even if we are not meta region. Used when creating\n+   * master local region.\n+   */\n+  public static final String USE_META_CELL_COMPARATOR = \"hbase.region.use.meta.cell.comparator\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2901, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}