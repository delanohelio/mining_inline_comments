{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNjc1NDMw", "number": 1137, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMjo1MDoyNVrODdjHmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjoxMTo1MlrODeKmog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMzEwNjgxOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwMjo1MDoyNVrOFmN2Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMjowNjoxM1rOFmr3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxNzEwMw==", "bodyText": "Unused import?", "url": "https://github.com/apache/hbase/pull/1137#discussion_r375617103", "createdAt": "2020-02-06T02:50:25Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -20,6 +20,7 @@\n import static org.apache.hadoop.hbase.HConstants.DEFAULT_HBASE_SPLIT_COORDINATED_BY_ZK;\n import static org.apache.hadoop.hbase.HConstants.HBASE_MASTER_LOGCLEANER_PLUGINS;\n import static org.apache.hadoop.hbase.HConstants.HBASE_SPLIT_WAL_COORDINATED_BY_ZK;\n+import static org.apache.hadoop.hbase.HConstants.MASTER_HOSTNAME_KEY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "decf924469e85bedbb1388c2a3b618f2783d8616"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg3MzUwNQ==", "bodyText": "Fixed.", "url": "https://github.com/apache/hbase/pull/1137#discussion_r375873505", "createdAt": "2020-02-06T14:43:23Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -20,6 +20,7 @@\n import static org.apache.hadoop.hbase.HConstants.DEFAULT_HBASE_SPLIT_COORDINATED_BY_ZK;\n import static org.apache.hadoop.hbase.HConstants.HBASE_MASTER_LOGCLEANER_PLUGINS;\n import static org.apache.hadoop.hbase.HConstants.HBASE_SPLIT_WAL_COORDINATED_BY_ZK;\n+import static org.apache.hadoop.hbase.HConstants.MASTER_HOSTNAME_KEY;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxNzEwMw=="}, "originalCommit": {"oid": "decf924469e85bedbb1388c2a3b618f2783d8616"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjEwODg1Mg==", "bodyText": "Actually it is needed here, I moved it to HConstants, so have to explicitly import now.", "url": "https://github.com/apache/hbase/pull/1137#discussion_r376108852", "createdAt": "2020-02-06T22:06:13Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -20,6 +20,7 @@\n import static org.apache.hadoop.hbase.HConstants.DEFAULT_HBASE_SPLIT_COORDINATED_BY_ZK;\n import static org.apache.hadoop.hbase.HConstants.HBASE_MASTER_LOGCLEANER_PLUGINS;\n import static org.apache.hadoop.hbase.HConstants.HBASE_SPLIT_WAL_COORDINATED_BY_ZK;\n+import static org.apache.hadoop.hbase.HConstants.MASTER_HOSTNAME_KEY;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTYxNzEwMw=="}, "originalCommit": {"oid": "decf924469e85bedbb1388c2a3b618f2783d8616"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTUyODg4OnYy", "diffSide": "RIGHT", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/util/DNS.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTo1MTowM1rOFnLU6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQyMzo0NzowMlrOFnSgbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYyNDM2MQ==", "bodyText": "Since this is now in a more public space, and since we have more service types than just \"master\" and \"regionserver\", perhaps the boolean isMaster should become String serviceName.", "url": "https://github.com/apache/hbase/pull/1137#discussion_r376624361", "createdAt": "2020-02-07T21:51:03Z", "author": {"login": "ndimiduk"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/util/DNS.java", "diffHunk": "@@ -66,4 +68,24 @@ public static String getDefaultHost(String strInterface, String nameserver)\n       return org.apache.hadoop.net.DNS.getDefaultHost(strInterface, nameserver);\n     }\n   }\n+\n+  /**\n+   * Get the configured hostname for master/regionserver. Gets the default hostname if not specified\n+   * in the configuration.\n+   * @param conf Configuration to look up.\n+   * @param isMaster True if master hostname needs to be looked up and false for regionserver.\n+   */\n+  public static String getHostname(Configuration conf, boolean isMaster)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98f426993e4303774ecdc166177fe598139a348"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0MTk5OA==", "bodyText": "Done.", "url": "https://github.com/apache/hbase/pull/1137#discussion_r376741998", "createdAt": "2020-02-08T23:47:02Z", "author": {"login": "bharathv"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/util/DNS.java", "diffHunk": "@@ -66,4 +68,24 @@ public static String getDefaultHost(String strInterface, String nameserver)\n       return org.apache.hadoop.net.DNS.getDefaultHost(strInterface, nameserver);\n     }\n   }\n+\n+  /**\n+   * Get the configured hostname for master/regionserver. Gets the default hostname if not specified\n+   * in the configuration.\n+   * @param conf Configuration to look up.\n+   * @param isMaster True if master hostname needs to be looked up and false for regionserver.\n+   */\n+  public static String getHostname(Configuration conf, boolean isMaster)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYyNDM2MQ=="}, "originalCommit": {"oid": "c98f426993e4303774ecdc166177fe598139a348"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTU0NDYyOnYy", "diffSide": "RIGHT", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/util/DNS.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTo1Nzo0MVrOFnLeig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQwMDowMDoxMVrOFnSiaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYyNjgyNg==", "bodyText": "This method has a number of commits sprinkled into its recent history: HBASE-12954, HBASE-12956, HBASE-13481. They appear related to property binding to 0.0.0.0 and to a configuration with multiple IP's on a network interface. How do we test changes in this part of our code?", "url": "https://github.com/apache/hbase/pull/1137#discussion_r376626826", "createdAt": "2020-02-07T21:57:41Z", "author": {"login": "ndimiduk"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/util/DNS.java", "diffHunk": "@@ -66,4 +68,24 @@ public static String getDefaultHost(String strInterface, String nameserver)\n       return org.apache.hadoop.net.DNS.getDefaultHost(strInterface, nameserver);\n     }\n   }\n+\n+  /**\n+   * Get the configured hostname for master/regionserver. Gets the default hostname if not specified\n+   * in the configuration.\n+   * @param conf Configuration to look up.\n+   * @param isMaster True if master hostname needs to be looked up and false for regionserver.\n+   */\n+  public static String getHostname(Configuration conf, boolean isMaster)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98f426993e4303774ecdc166177fe598139a348"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njc0MjUwNQ==", "bodyText": "Think those patches have reasonable test coverage and I verified they pass for me locally. If we break something about binding to wildcard address, we should know it from the nightly failures I think (ex: testMiniClusterBindToWildcard).. (Not sure if I answered your question, did I get the question right?)", "url": "https://github.com/apache/hbase/pull/1137#discussion_r376742505", "createdAt": "2020-02-09T00:00:11Z", "author": {"login": "bharathv"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/util/DNS.java", "diffHunk": "@@ -66,4 +68,24 @@ public static String getDefaultHost(String strInterface, String nameserver)\n       return org.apache.hadoop.net.DNS.getDefaultHost(strInterface, nameserver);\n     }\n   }\n+\n+  /**\n+   * Get the configured hostname for master/regionserver. Gets the default hostname if not specified\n+   * in the configuration.\n+   * @param conf Configuration to look up.\n+   * @param isMaster True if master hostname needs to be looked up and false for regionserver.\n+   */\n+  public static String getHostname(Configuration conf, boolean isMaster)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYyNjgyNg=="}, "originalCommit": {"oid": "c98f426993e4303774ecdc166177fe598139a348"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTU1Nzk1OnYy", "diffSide": "LEFT", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjowMzo0MVrOFnLmqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMjozMTozN1rOFn4BWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYyODkwNA==", "bodyText": "Head's up, this file is InterfaceAudience.Public, which means removals have to go through a full release deprecation cycle.\nFrom the sub-section titled \"Client API compatibility\" in the book:\n\nAn API needs to be deprecated for a whole major version before we will change/remove it.\n\nAn example: An API was deprecated in 2.0.1 and will be marked for deletion in 4.0.0. On the other hand, an API deprecated in 2.0.0 can be removed in 3.0.0.\n\n\nYou'll need to retain the hold field -- annotate it as deprecated and add a java doc explaining that the other method could be used in its place. You can file a follow-on ticket with a fixVersion of 4.0.0 as a task to delete the field once we get there (and maybe leave a TODO referencing that ticket).\nSadly this constant is a field not a method, which means we have no way to logging a WARN for clients who make use of it.", "url": "https://github.com/apache/hbase/pull/1137#discussion_r376628904", "createdAt": "2020-02-07T22:03:41Z", "author": {"login": "ndimiduk"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java", "diffHunk": "@@ -181,7 +181,11 @@\n   /** Configuration key for the list of master host:ports **/\n   public static final String MASTER_ADDRS_KEY = \"hbase.masters\";\n \n-  public static final String MASTER_ADDRS_DEFAULT =  \"localhost:\" + DEFAULT_MASTER_PORT;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98f426993e4303774ecdc166177fe598139a348"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY2OTIwMw==", "bodyText": "This was added by me in the feature branch. Technically this is not public yet. But I got what you are saying about client compatibility.", "url": "https://github.com/apache/hbase/pull/1137#discussion_r376669203", "createdAt": "2020-02-08T00:44:00Z", "author": {"login": "bharathv"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java", "diffHunk": "@@ -181,7 +181,11 @@\n   /** Configuration key for the list of master host:ports **/\n   public static final String MASTER_ADDRS_KEY = \"hbase.masters\";\n \n-  public static final String MASTER_ADDRS_DEFAULT =  \"localhost:\" + DEFAULT_MASTER_PORT;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYyODkwNA=="}, "originalCommit": {"oid": "c98f426993e4303774ecdc166177fe598139a348"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM0MDY1Mg==", "bodyText": "Ah okay. Let's avoid adding any fields to HConstants on the feature branch if we can.", "url": "https://github.com/apache/hbase/pull/1137#discussion_r377340652", "createdAt": "2020-02-10T21:57:08Z", "author": {"login": "ndimiduk"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java", "diffHunk": "@@ -181,7 +181,11 @@\n   /** Configuration key for the list of master host:ports **/\n   public static final String MASTER_ADDRS_KEY = \"hbase.masters\";\n \n-  public static final String MASTER_ADDRS_DEFAULT =  \"localhost:\" + DEFAULT_MASTER_PORT;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYyODkwNA=="}, "originalCommit": {"oid": "c98f426993e4303774ecdc166177fe598139a348"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzM1NjYzNA==", "bodyText": "Ack.", "url": "https://github.com/apache/hbase/pull/1137#discussion_r377356634", "createdAt": "2020-02-10T22:31:37Z", "author": {"login": "bharathv"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java", "diffHunk": "@@ -181,7 +181,11 @@\n   /** Configuration key for the list of master host:ports **/\n   public static final String MASTER_ADDRS_KEY = \"hbase.masters\";\n \n-  public static final String MASTER_ADDRS_DEFAULT =  \"localhost:\" + DEFAULT_MASTER_PORT;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYyODkwNA=="}, "originalCommit": {"oid": "c98f426993e4303774ecdc166177fe598139a348"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTU3NjAyOnYy", "diffSide": "RIGHT", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjoxMTo1MlrOFnLxYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwMDo0NjowM1rOFnOFTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzMTY0OQ==", "bodyText": "Don't add these here. In the book, they're considered \"expert\" configuration params (and the master version appears to not be documented at all).\nInstead, add them to the DNS class, from which they'll be used. Also, it's InterfaceAudience.Private so we have more maintenance/refactoring flexibility there. And don't lose their InterfaceAudience.LimitedPrivate annotations when you move them.", "url": "https://github.com/apache/hbase/pull/1137#discussion_r376631649", "createdAt": "2020-02-07T22:11:52Z", "author": {"login": "ndimiduk"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java", "diffHunk": "@@ -181,7 +181,11 @@\n   /** Configuration key for the list of master host:ports **/\n   public static final String MASTER_ADDRS_KEY = \"hbase.masters\";\n \n-  public static final String MASTER_ADDRS_DEFAULT =  \"localhost:\" + DEFAULT_MASTER_PORT;\n+  // key to the config parameter of server hostname\n+  // the specification of server hostname is optional. The hostname should be resolvable from\n+  // both master and region server\n+  public static final String RS_HOSTNAME_KEY = \"hbase.regionserver.hostname\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c98f426993e4303774ecdc166177fe598139a348"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY2OTUxOA==", "bodyText": "Gotcha, done.", "url": "https://github.com/apache/hbase/pull/1137#discussion_r376669518", "createdAt": "2020-02-08T00:46:03Z", "author": {"login": "bharathv"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/HConstants.java", "diffHunk": "@@ -181,7 +181,11 @@\n   /** Configuration key for the list of master host:ports **/\n   public static final String MASTER_ADDRS_KEY = \"hbase.masters\";\n \n-  public static final String MASTER_ADDRS_DEFAULT =  \"localhost:\" + DEFAULT_MASTER_PORT;\n+  // key to the config parameter of server hostname\n+  // the specification of server hostname is optional. The hostname should be resolvable from\n+  // both master and region server\n+  public static final String RS_HOSTNAME_KEY = \"hbase.regionserver.hostname\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzMTY0OQ=="}, "originalCommit": {"oid": "c98f426993e4303774ecdc166177fe598139a348"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2058, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}