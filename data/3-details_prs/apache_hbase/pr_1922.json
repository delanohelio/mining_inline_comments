{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MTM4MDE1", "number": 1922, "title": "HBASE-24583 Normalizer can't actually merge empty regions when neighbor is larger than average size", "bodyText": "add testMergeEmptyRegions to explicitly cover different interleaving of 0-sized regions.\nfix bug where merging a 0-size region is skipped due to large neighbor.\nremove unused splitPoint from SplitNormalizationPlan.\ngenerate toString, hashCode, and equals methods from Apache Commons Lang3 template on SplitNormalizationPlan and MergeNormalizationPlan.\nsimplify test to use equality matching over *NormalizationPlan instances as plain pojos.\ntest make use of this handy TableNameTestRule.\nfix line-length issues in TestSimpleRegionNormalizer", "createdAt": "2020-06-17T23:00:01Z", "url": "https://github.com/apache/hbase/pull/1922", "merged": true, "mergeCommit": {"oid": "2e8120a63fd545e66e9e83cfde8ade80de3d3df0"}, "closed": true, "closedAt": "2020-08-12T17:04:46Z", "author": {"login": "ndimiduk"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsXXYHAFqTQzMjk0NTMwOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-OdlHABqjM2NDg2MjQ4NDQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyOTQ1MzA5", "url": "https://github.com/apache/hbase/pull/1922#pullrequestreview-432945309", "createdAt": "2020-06-18T05:12:06Z", "commit": {"oid": "c20ec6ab9746170132f2064612ca10bd42a2d7f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNToxMjowNlrOGlf0yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwNToxMjowNlrOGlf0yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk3MTkxMg==", "bodyText": "wtb generate the hashCode at the beginning (in constructor)? instead of calculating it every time.", "url": "https://github.com/apache/hbase/pull/1922#discussion_r441971912", "createdAt": "2020-06-18T05:12:06Z", "author": {"login": "Reidddddd"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan.java", "diffHunk": "@@ -78,4 +82,30 @@ public void execute(Admin admin) {\n       LOG.error(\"Error during region merge: \", ex);\n     }\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+\n+    MergeNormalizationPlan that = (MergeNormalizationPlan) o;\n+\n+    return new EqualsBuilder()\n+      .append(firstRegion, that.firstRegion)\n+      .append(secondRegion, that.secondRegion)\n+      .isEquals();\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return new HashCodeBuilder(17, 37)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c20ec6ab9746170132f2064612ca10bd42a2d7f2"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMDU1OTAy", "url": "https://github.com/apache/hbase/pull/1922#pullrequestreview-433055902", "createdAt": "2020-06-18T08:29:28Z", "commit": {"oid": "c20ec6ab9746170132f2064612ca10bd42a2d7f2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMzc1MzUz", "url": "https://github.com/apache/hbase/pull/1922#pullrequestreview-433375353", "createdAt": "2020-06-18T15:02:20Z", "commit": {"oid": "c20ec6ab9746170132f2064612ca10bd42a2d7f2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNTowMjoyMFrOGlzkqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNToxMDozMlrOGlz5rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI5NTQ2Nw==", "bodyText": "By introducing hashCode() and equals(), comparison is no more dependant on getter methods, can we also remove getFirstRegion() and getSecondRegion()? Although they are useful, but I don't think they will be used anymore. Thought?", "url": "https://github.com/apache/hbase/pull/1922#discussion_r442295467", "createdAt": "2020-06-18T15:02:20Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan.java", "diffHunk": "@@ -78,4 +82,30 @@ public void execute(Admin admin) {\n       LOG.error(\"Error during region merge: \", ex);\n     }\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+\n+    MergeNormalizationPlan that = (MergeNormalizationPlan) o;\n+\n+    return new EqualsBuilder()\n+      .append(firstRegion, that.firstRegion)\n+      .append(secondRegion, that.secondRegion)\n+      .isEquals();\n+  }\n+\n+  @Override\n+  public int hashCode() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c20ec6ab9746170132f2064612ca10bd42a2d7f2"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI5OTM3MQ==", "bodyText": "Nice one, since we have two final RegionInfo and hopefully they are not getting mutated after plan generation, we can do this.", "url": "https://github.com/apache/hbase/pull/1922#discussion_r442299371", "createdAt": "2020-06-18T15:08:19Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan.java", "diffHunk": "@@ -78,4 +82,30 @@ public void execute(Admin admin) {\n       LOG.error(\"Error during region merge: \", ex);\n     }\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+\n+    MergeNormalizationPlan that = (MergeNormalizationPlan) o;\n+\n+    return new EqualsBuilder()\n+      .append(firstRegion, that.firstRegion)\n+      .append(secondRegion, that.secondRegion)\n+      .isEquals();\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return new HashCodeBuilder(17, 37)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk3MTkxMg=="}, "originalCommit": {"oid": "c20ec6ab9746170132f2064612ca10bd42a2d7f2"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMwMDg0Ng==", "bodyText": "Seems like a good candidate for final and setRegionInfo() can be removed?", "url": "https://github.com/apache/hbase/pull/1922#discussion_r442300846", "createdAt": "2020-06-18T15:10:32Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/SplitNormalizationPlan.java", "diffHunk": "@@ -33,11 +36,9 @@\n   private static final Logger LOG = LoggerFactory.getLogger(SplitNormalizationPlan.class.getName());\n \n   private RegionInfo regionInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c20ec6ab9746170132f2064612ca10bd42a2d7f2"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDc1NjY3", "url": "https://github.com/apache/hbase/pull/1922#pullrequestreview-433475667", "createdAt": "2020-06-18T16:57:35Z", "commit": {"oid": "c20ec6ab9746170132f2064612ca10bd42a2d7f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo1NzozNVrOGl4MTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo1NzozNVrOGl4MTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3MTE1MQ==", "bodyText": "There is a special case for size to be 0, wondering if the region size is very small but nonzero, and there is a large size neighbor region, can we do something about it?\n100 1 100  (avg size is 20), in this case, 1 wont be merged as well.  What if some logic like\ncurrentSizeMb < 0.1 * avgRegionSizeMb and currentSizeMb/nextSizeMb < 0.1 (switch currentSizeMb and nextSizeMb as well), then merge", "url": "https://github.com/apache/hbase/pull/1922#discussion_r442371151", "createdAt": "2020-06-18T16:57:35Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/SimpleRegionNormalizer.java", "diffHunk": "@@ -369,7 +369,8 @@ private boolean skipForMerge(final RegionStates regionStates, final RegionInfo r\n       }\n       final long currentSizeMb = getRegionSizeMB(current);\n       final long nextSizeMb = getRegionSizeMB(next);\n-      if (currentSizeMb + nextSizeMb < avgRegionSizeMb) {\n+      // always merge away empty regions when they present themselves.\n+      if (currentSizeMb == 0 || nextSizeMb == 0 || currentSizeMb + nextSizeMb < avgRegionSizeMb) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c20ec6ab9746170132f2064612ca10bd42a2d7f2"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NTg5OTE1", "url": "https://github.com/apache/hbase/pull/1922#pullrequestreview-435589915", "createdAt": "2020-06-23T09:09:00Z", "commit": {"oid": "c20ec6ab9746170132f2064612ca10bd42a2d7f2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTowOTowMFrOGngVtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTowOTowMFrOGngVtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA3NzQ5NQ==", "bodyText": "Step back, I don't think it ever needs hashCode() method, they are currently stored in ArrayList only. Why not implement it when needed.", "url": "https://github.com/apache/hbase/pull/1922#discussion_r444077495", "createdAt": "2020-06-23T09:09:00Z", "author": {"login": "Reidddddd"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan.java", "diffHunk": "@@ -78,4 +82,30 @@ public void execute(Admin admin) {\n       LOG.error(\"Error during region merge: \", ex);\n     }\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+\n+    MergeNormalizationPlan that = (MergeNormalizationPlan) o;\n+\n+    return new EqualsBuilder()\n+      .append(firstRegion, that.firstRegion)\n+      .append(secondRegion, that.secondRegion)\n+      .isEquals();\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    return new HashCodeBuilder(17, 37)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTk3MTkxMg=="}, "originalCommit": {"oid": "c20ec6ab9746170132f2064612ca10bd42a2d7f2"}, "originalPosition": 51}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c20ec6ab9746170132f2064612ca10bd42a2d7f2", "author": {"user": {"login": "ndimiduk", "name": "Nick Dimiduk"}}, "url": "https://github.com/apache/hbase/commit/c20ec6ab9746170132f2064612ca10bd42a2d7f2", "committedDate": "2020-06-17T22:58:23Z", "message": "HBASE-24583 Normalizer can't actually merge empty regions...\n\nwhen neighbor is larger than average size\n\n* add `testMergeEmptyRegions` to explicitly cover different\n  interleaving of 0-sized regions.\n* fix bug where merging a 0-size region is skipped due to large\n  neighbor.\n* remove unused `splitPoint` from `SplitNormalizationPlan`.\n* generate `toString`, `hashCode`, and `equals` methods from Apache\n  Commons Lang3 template on `SplitNormalizationPlan` and\n  `MergeNormalizationPlan`.\n* simplify test to use equality matching over `*NormalizationPlan`\n  instances as plain pojos.\n* test make use of this handy `TableNameTestRule`.\n* fix line-length issues in `TestSimpleRegionNormalizer`"}, "afterCommit": {"oid": "94634ad305b86dcee880be920e43a1f5fae05440", "author": {"user": {"login": "ndimiduk", "name": "Nick Dimiduk"}}, "url": "https://github.com/apache/hbase/commit/94634ad305b86dcee880be920e43a1f5fae05440", "committedDate": "2020-08-03T21:14:41Z", "message": "HBASE-24583 Normalizer can't actually merge empty regions...\n\nwhen neighbor is larger than average size\n\n* add `testMergeEmptyRegions` to explicitly cover different\n  interleaving of 0-sized regions.\n* fix bug where merging a 0-size region is skipped due to large\n  neighbor.\n* remove unused `splitPoint` from `SplitNormalizationPlan`.\n* generate `toString`, `hashCode`, and `equals` methods from Apache\n  Commons Lang3 template on `SplitNormalizationPlan` and\n  `MergeNormalizationPlan`.\n* simplify test to use equality matching over `*NormalizationPlan`\n  instances as plain pojos.\n* test make use of this handy `TableNameTestRule`.\n* fix line-length issues in `TestSimpleRegionNormalizer`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwOTM3MjQx", "url": "https://github.com/apache/hbase/pull/1922#pullrequestreview-460937241", "createdAt": "2020-08-04T15:41:18Z", "commit": {"oid": "94634ad305b86dcee880be920e43a1f5fae05440"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNzc0NDM0", "url": "https://github.com/apache/hbase/pull/1922#pullrequestreview-462774434", "createdAt": "2020-08-06T18:29:19Z", "commit": {"oid": "94634ad305b86dcee880be920e43a1f5fae05440"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94634ad305b86dcee880be920e43a1f5fae05440", "author": {"user": {"login": "ndimiduk", "name": "Nick Dimiduk"}}, "url": "https://github.com/apache/hbase/commit/94634ad305b86dcee880be920e43a1f5fae05440", "committedDate": "2020-08-03T21:14:41Z", "message": "HBASE-24583 Normalizer can't actually merge empty regions...\n\nwhen neighbor is larger than average size\n\n* add `testMergeEmptyRegions` to explicitly cover different\n  interleaving of 0-sized regions.\n* fix bug where merging a 0-size region is skipped due to large\n  neighbor.\n* remove unused `splitPoint` from `SplitNormalizationPlan`.\n* generate `toString`, `hashCode`, and `equals` methods from Apache\n  Commons Lang3 template on `SplitNormalizationPlan` and\n  `MergeNormalizationPlan`.\n* simplify test to use equality matching over `*NormalizationPlan`\n  instances as plain pojos.\n* test make use of this handy `TableNameTestRule`.\n* fix line-length issues in `TestSimpleRegionNormalizer`"}, "afterCommit": {"oid": "e121c6d070d5977b69811d87920c620ad834bfca", "author": {"user": {"login": "ndimiduk", "name": "Nick Dimiduk"}}, "url": "https://github.com/apache/hbase/commit/e121c6d070d5977b69811d87920c620ad834bfca", "committedDate": "2020-08-10T17:50:47Z", "message": "HBASE-24583 Normalizer can't actually merge empty regions...\n\nwhen neighbor is larger than average size\n\n* add `testMergeEmptyRegions` to explicitly cover different\n  interleaving of 0-sized regions.\n* fix bug where merging a 0-size region is skipped due to large\n  neighbor.\n* remove unused `splitPoint` from `SplitNormalizationPlan`.\n* generate `toString`, `hashCode`, and `equals` methods from Apache\n  Commons Lang3 template on `SplitNormalizationPlan` and\n  `MergeNormalizationPlan`.\n* simplify test to use equality matching over `*NormalizationPlan`\n  instances as plain pojos.\n* test make use of this handy `TableNameTestRule`.\n* fix line-length issues in `TestSimpleRegionNormalizer`"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e121c6d070d5977b69811d87920c620ad834bfca", "author": {"user": {"login": "ndimiduk", "name": "Nick Dimiduk"}}, "url": "https://github.com/apache/hbase/commit/e121c6d070d5977b69811d87920c620ad834bfca", "committedDate": "2020-08-10T17:50:47Z", "message": "HBASE-24583 Normalizer can't actually merge empty regions...\n\nwhen neighbor is larger than average size\n\n* add `testMergeEmptyRegions` to explicitly cover different\n  interleaving of 0-sized regions.\n* fix bug where merging a 0-size region is skipped due to large\n  neighbor.\n* remove unused `splitPoint` from `SplitNormalizationPlan`.\n* generate `toString`, `hashCode`, and `equals` methods from Apache\n  Commons Lang3 template on `SplitNormalizationPlan` and\n  `MergeNormalizationPlan`.\n* simplify test to use equality matching over `*NormalizationPlan`\n  instances as plain pojos.\n* test make use of this handy `TableNameTestRule`.\n* fix line-length issues in `TestSimpleRegionNormalizer`"}, "afterCommit": {"oid": "00642c7471e00fca24e4110d4a822ab997c4939b", "author": {"user": {"login": "ndimiduk", "name": "Nick Dimiduk"}}, "url": "https://github.com/apache/hbase/commit/00642c7471e00fca24e4110d4a822ab997c4939b", "committedDate": "2020-08-10T17:51:46Z", "message": "HBASE-24583 Normalizer can't actually merge empty regions...\n\nwhen neighbor is larger than average size\n\n* add `testMergeEmptyRegions` to explicitly cover different\n  interleaving of 0-sized regions.\n* fix bug where merging a 0-size region is skipped due to large\n  neighbor.\n* remove unused `splitPoint` from `SplitNormalizationPlan`.\n* generate `toString`, `hashCode`, and `equals` methods from Apache\n  Commons Lang3 template on `SplitNormalizationPlan` and\n  `MergeNormalizationPlan`.\n* simplify test to use equality matching over `*NormalizationPlan`\n  instances as plain pojos.\n* test make use of this handy `TableNameTestRule`.\n* fix line-length issues in `TestSimpleRegionNormalizer`\n\nSigned-off-by: Wellington Chevreuil <wchevreuil@apache.org>\nSigned-off-by: Viraj Jasani <vjasani@apache.org>\nSigned-off-by: huaxiangsun <huaxiangsun@apache.org>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1NzU0ODI2", "url": "https://github.com/apache/hbase/pull/1922#pullrequestreview-465754826", "createdAt": "2020-08-12T09:41:13Z", "commit": {"oid": "00642c7471e00fca24e4110d4a822ab997c4939b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3191b69c0b7223ff1c5999707ab5444fdbc3047e", "author": {"user": {"login": "ndimiduk", "name": "Nick Dimiduk"}}, "url": "https://github.com/apache/hbase/commit/3191b69c0b7223ff1c5999707ab5444fdbc3047e", "committedDate": "2020-08-12T17:00:01Z", "message": "HBASE-24583 Normalizer can't actually merge empty regions...\n\nwhen neighbor is larger than average size\n\n* add `testMergeEmptyRegions` to explicitly cover different\n  interleaving of 0-sized regions.\n* fix bug where merging a 0-size region is skipped due to large\n  neighbor.\n* remove unused `splitPoint` from `SplitNormalizationPlan`.\n* generate `toString`, `hashCode`, and `equals` methods from Apache\n  Commons Lang3 template on `SplitNormalizationPlan` and\n  `MergeNormalizationPlan`.\n* simplify test to use equality matching over `*NormalizationPlan`\n  instances as plain pojos.\n* test make use of this handy `TableNameTestRule`.\n* fix line-length issues in `TestSimpleRegionNormalizer`\n\nSigned-off-by: Wellington Chevreuil <wchevreuil@apache.org>\nSigned-off-by: Viraj Jasani <vjasani@apache.org>\nSigned-off-by: huaxiangsun <huaxiangsun@apache.org>\nSigned-off-by: Aman Poonia <aman.poonia.29@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "00642c7471e00fca24e4110d4a822ab997c4939b", "author": {"user": {"login": "ndimiduk", "name": "Nick Dimiduk"}}, "url": "https://github.com/apache/hbase/commit/00642c7471e00fca24e4110d4a822ab997c4939b", "committedDate": "2020-08-10T17:51:46Z", "message": "HBASE-24583 Normalizer can't actually merge empty regions...\n\nwhen neighbor is larger than average size\n\n* add `testMergeEmptyRegions` to explicitly cover different\n  interleaving of 0-sized regions.\n* fix bug where merging a 0-size region is skipped due to large\n  neighbor.\n* remove unused `splitPoint` from `SplitNormalizationPlan`.\n* generate `toString`, `hashCode`, and `equals` methods from Apache\n  Commons Lang3 template on `SplitNormalizationPlan` and\n  `MergeNormalizationPlan`.\n* simplify test to use equality matching over `*NormalizationPlan`\n  instances as plain pojos.\n* test make use of this handy `TableNameTestRule`.\n* fix line-length issues in `TestSimpleRegionNormalizer`\n\nSigned-off-by: Wellington Chevreuil <wchevreuil@apache.org>\nSigned-off-by: Viraj Jasani <vjasani@apache.org>\nSigned-off-by: huaxiangsun <huaxiangsun@apache.org>"}, "afterCommit": {"oid": "3191b69c0b7223ff1c5999707ab5444fdbc3047e", "author": {"user": {"login": "ndimiduk", "name": "Nick Dimiduk"}}, "url": "https://github.com/apache/hbase/commit/3191b69c0b7223ff1c5999707ab5444fdbc3047e", "committedDate": "2020-08-12T17:00:01Z", "message": "HBASE-24583 Normalizer can't actually merge empty regions...\n\nwhen neighbor is larger than average size\n\n* add `testMergeEmptyRegions` to explicitly cover different\n  interleaving of 0-sized regions.\n* fix bug where merging a 0-size region is skipped due to large\n  neighbor.\n* remove unused `splitPoint` from `SplitNormalizationPlan`.\n* generate `toString`, `hashCode`, and `equals` methods from Apache\n  Commons Lang3 template on `SplitNormalizationPlan` and\n  `MergeNormalizationPlan`.\n* simplify test to use equality matching over `*NormalizationPlan`\n  instances as plain pojos.\n* test make use of this handy `TableNameTestRule`.\n* fix line-length issues in `TestSimpleRegionNormalizer`\n\nSigned-off-by: Wellington Chevreuil <wchevreuil@apache.org>\nSigned-off-by: Viraj Jasani <vjasani@apache.org>\nSigned-off-by: huaxiangsun <huaxiangsun@apache.org>\nSigned-off-by: Aman Poonia <aman.poonia.29@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4343, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}