{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNjIzMTk2", "number": 1655, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOToyNjoyMVrOD5i_dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo0NDo0MVrOD5_Rng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjY4NzI0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOToyNjoyMVrOGQ4SJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMDo0ODoyOFrOGRAqkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1MjU0OA==", "bodyText": "The Scan constructor throws IOE now?? Not an issue for this patch, though", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420352548", "createdAt": "2020-05-05T19:26:21Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -34,8 +36,18 @@\n \n   private KeepDeletedCells keepDeletedCells = null;\n \n+  private Integer minVersions;\n+\n+  private final Scan scan;\n+\n   public CustomizedScanInfoBuilder(ScanInfo scanInfo) {\n     this.scanInfo = scanInfo;\n+    this.scan = new Scan();\n+  }\n+  public CustomizedScanInfoBuilder(ScanInfo scanInfo, Scan scan) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e6bf0252a5c89c28c1426179feff634a1dae3c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2ODgwNw==", "bodyText": "I was surprised too.", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420368807", "createdAt": "2020-05-05T19:56:20Z", "author": {"login": "gjacoby126"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -34,8 +36,18 @@\n \n   private KeepDeletedCells keepDeletedCells = null;\n \n+  private Integer minVersions;\n+\n+  private final Scan scan;\n+\n   public CustomizedScanInfoBuilder(ScanInfo scanInfo) {\n     this.scanInfo = scanInfo;\n+    this.scan = new Scan();\n+  }\n+  public CustomizedScanInfoBuilder(ScanInfo scanInfo, Scan scan) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1MjU0OA=="}, "originalCommit": {"oid": "d4e6bf0252a5c89c28c1426179feff634a1dae3c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ2MDY4MQ==", "bodyText": "Looks like the copy constructor for Scan has thrown IOException back since 2009, but the current code does not actually contain anything that throws it. Since I assume changing the signature is more trouble than it's worth, I just had to rethrow from the CustomizedScanInfoBuilder constructor and getScan() methods.", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420460681", "createdAt": "2020-05-05T23:10:33Z", "author": {"login": "gjacoby126"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -34,8 +36,18 @@\n \n   private KeepDeletedCells keepDeletedCells = null;\n \n+  private Integer minVersions;\n+\n+  private final Scan scan;\n+\n   public CustomizedScanInfoBuilder(ScanInfo scanInfo) {\n     this.scanInfo = scanInfo;\n+    this.scan = new Scan();\n+  }\n+  public CustomizedScanInfoBuilder(ScanInfo scanInfo, Scan scan) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1MjU0OA=="}, "originalCommit": {"oid": "d4e6bf0252a5c89c28c1426179feff634a1dae3c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ4OTg3Mw==", "bodyText": "Let's just catch the IOException in the code here and then throw an AssertionError to indicate this should not happen, and we can filed another issue to remove the IOException from throws.", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420489873", "createdAt": "2020-05-06T00:48:28Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -34,8 +36,18 @@\n \n   private KeepDeletedCells keepDeletedCells = null;\n \n+  private Integer minVersions;\n+\n+  private final Scan scan;\n+\n   public CustomizedScanInfoBuilder(ScanInfo scanInfo) {\n     this.scanInfo = scanInfo;\n+    this.scan = new Scan();\n+  }\n+  public CustomizedScanInfoBuilder(ScanInfo scanInfo, Scan scan) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1MjU0OA=="}, "originalCommit": {"oid": "d4e6bf0252a5c89c28c1426179feff634a1dae3c"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjY5NTEyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOToyODo0OFrOGQ4XOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMzoxMTowMVrOGQ-5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1Mzg1MQ==", "bodyText": "Changes made on the returned scan object will be effective and visible beyond the caller. Clone and return?", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420353851", "createdAt": "2020-05-05T19:28:48Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -80,4 +93,19 @@ public KeepDeletedCells getKeepDeletedCells() {\n     return keepDeletedCells != null ? keepDeletedCells : scanInfo.getKeepDeletedCells();\n   }\n \n+  @Override\n+  public int getMinVersions() {\n+    return minVersions != null ? minVersions : scanInfo.getMinVersions();\n+  }\n+\n+  @Override\n+  public void setMinVersions(int minVersions) {\n+    this.minVersions = minVersions;\n+  }\n+\n+  @Override\n+  public Scan getScan() {\n+    return scan;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e6bf0252a5c89c28c1426179feff634a1dae3c"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1NTQ2NQ==", "bodyText": "I didn't check to see how much of Scan is immutable...", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420355465", "createdAt": "2020-05-05T19:31:41Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -80,4 +93,19 @@ public KeepDeletedCells getKeepDeletedCells() {\n     return keepDeletedCells != null ? keepDeletedCells : scanInfo.getKeepDeletedCells();\n   }\n \n+  @Override\n+  public int getMinVersions() {\n+    return minVersions != null ? minVersions : scanInfo.getMinVersions();\n+  }\n+\n+  @Override\n+  public void setMinVersions(int minVersions) {\n+    this.minVersions = minVersions;\n+  }\n+\n+  @Override\n+  public Scan getScan() {\n+    return scan;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1Mzg1MQ=="}, "originalCommit": {"oid": "d4e6bf0252a5c89c28c1426179feff634a1dae3c"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM3MDUxNQ==", "bodyText": "Scan is mostly mutable, I think. That's a good point -- the clone in the constructor will prevent changes from executing, but a caller could still mess up the state for future callers. I'll clone in the getter.", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420370515", "createdAt": "2020-05-05T19:59:36Z", "author": {"login": "gjacoby126"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -80,4 +93,19 @@ public KeepDeletedCells getKeepDeletedCells() {\n     return keepDeletedCells != null ? keepDeletedCells : scanInfo.getKeepDeletedCells();\n   }\n \n+  @Override\n+  public int getMinVersions() {\n+    return minVersions != null ? minVersions : scanInfo.getMinVersions();\n+  }\n+\n+  @Override\n+  public void setMinVersions(int minVersions) {\n+    this.minVersions = minVersions;\n+  }\n+\n+  @Override\n+  public Scan getScan() {\n+    return scan;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1Mzg1MQ=="}, "originalCommit": {"oid": "d4e6bf0252a5c89c28c1426179feff634a1dae3c"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ2MDg1Ng==", "bodyText": "Done.", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420460856", "createdAt": "2020-05-05T23:11:01Z", "author": {"login": "gjacoby126"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -80,4 +93,19 @@ public KeepDeletedCells getKeepDeletedCells() {\n     return keepDeletedCells != null ? keepDeletedCells : scanInfo.getKeepDeletedCells();\n   }\n \n+  @Override\n+  public int getMinVersions() {\n+    return minVersions != null ? minVersions : scanInfo.getMinVersions();\n+  }\n+\n+  @Override\n+  public void setMinVersions(int minVersions) {\n+    this.minVersions = minVersions;\n+  }\n+\n+  @Override\n+  public Scan getScan() {\n+    return scan;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1Mzg1MQ=="}, "originalCommit": {"oid": "d4e6bf0252a5c89c28c1426179feff634a1dae3c"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjcwMjAzOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionCoprocessorHost.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOTozMDo0OFrOGQ4bmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOTozMDo0OFrOGQ4bmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM1NDk2OQ==", "bodyText": "Nice additional tests.", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420354969", "createdAt": "2020-05-05T19:30:48Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/TestRegionCoprocessorHost.java", "diffHunk": "@@ -74,4 +105,73 @@ public void testLoadDuplicateCoprocessor() throws Exception {\n     // Two duplicate coprocessors loaded\n     assertEquals(2, host.coprocEnvironments.size());\n   }\n-}\n\\ No newline at end of file\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4e6bf0252a5c89c28c1426179feff634a1dae3c"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzU3MzgyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMDo0NDo1M1rOGRAncQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMzoxMjoyNVrOGRCrxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ4OTA3Mw==", "bodyText": "I think this class is only used to test whether a specific CP method has been called? What is this used for?", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420489073", "createdAt": "2020-05-06T00:44:53Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java", "diffHunk": "@@ -685,6 +687,40 @@ public StoreFileReader postStoreFileReaderOpen(ObserverContext<RegionCoprocessor\n     return reader;\n   }\n \n+  @Override\n+  public void preStoreScannerOpen(ObserverContext<RegionCoprocessorEnvironment> ctx,\n+    Store store, ScanOptions options) throws IOException {\n+    if (options.getScan().getTimeRange().isAllTime()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59cde3dc6eabd0d1b898f18d0c461b6602bd7082"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyMDU1OA==", "bodyText": "See TestRegionCoprocessorHost. It's used to test that the scanner coproc hooks are wired up correctly and can alter a ScanInfo.", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420520558", "createdAt": "2020-05-06T03:00:36Z", "author": {"login": "gjacoby126"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java", "diffHunk": "@@ -685,6 +687,40 @@ public StoreFileReader postStoreFileReaderOpen(ObserverContext<RegionCoprocessor\n     return reader;\n   }\n \n+  @Override\n+  public void preStoreScannerOpen(ObserverContext<RegionCoprocessorEnvironment> ctx,\n+    Store store, ScanOptions options) throws IOException {\n+    if (options.getScan().getTimeRange().isAllTime()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ4OTA3Mw=="}, "originalCommit": {"oid": "59cde3dc6eabd0d1b898f18d0c461b6602bd7082"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyMjk0OQ==", "bodyText": "OK, the rebuild of the ScanInfo is done in RegionCoprocessorHost, I used to thought it is done in HStore on some other places.", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420522949", "createdAt": "2020-05-06T03:12:25Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/coprocessor/SimpleRegionObserver.java", "diffHunk": "@@ -685,6 +687,40 @@ public StoreFileReader postStoreFileReaderOpen(ObserverContext<RegionCoprocessor\n     return reader;\n   }\n \n+  @Override\n+  public void preStoreScannerOpen(ObserverContext<RegionCoprocessorEnvironment> ctx,\n+    Store store, ScanOptions options) throws IOException {\n+    if (options.getScan().getTimeRange().isAllTime()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ4OTA3Mw=="}, "originalCommit": {"oid": "59cde3dc6eabd0d1b898f18d0c461b6602bd7082"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzU4NzQ5OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanInfo.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMDo1Mjo1NFrOGRAu-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMzowMjoyMFrOGRCjww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5MTAwMA==", "bodyText": "Is this method still referenced? Just remove it?", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420491000", "createdAt": "2020-05-06T00:52:54Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanInfo.java", "diffHunk": "@@ -174,8 +174,13 @@ public boolean isNewVersionBehavior() {\n    * Used for CP users for customizing max versions, ttl and keepDeletedCells.\n    */\n   ScanInfo customize(int maxVersions, long ttl, KeepDeletedCells keepDeletedCells) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59cde3dc6eabd0d1b898f18d0c461b6602bd7082"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyMDg5OQ==", "bodyText": "It was used by a few tests: TestCompaction, TestDefaultCompaction, TestMajorCompaction.", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420520899", "createdAt": "2020-05-06T03:02:20Z", "author": {"login": "gjacoby126"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanInfo.java", "diffHunk": "@@ -174,8 +174,13 @@ public boolean isNewVersionBehavior() {\n    * Used for CP users for customizing max versions, ttl and keepDeletedCells.\n    */\n   ScanInfo customize(int maxVersions, long ttl, KeepDeletedCells keepDeletedCells) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5MTAwMA=="}, "originalCommit": {"oid": "59cde3dc6eabd0d1b898f18d0c461b6602bd7082"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzU5MTU0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanOptions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMDo1NTowM1rOGRAxIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMzozMzo1N1rOGRC9Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5MTU1Mg==", "bodyText": "Please add a comment to say that the returned Scan object is only for reading, changing it will have no effect to the actual scan operation.\nAnd please modify the javadoc of this class to indicate that now we can also change min versions?", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420491552", "createdAt": "2020-05-06T00:55:03Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanOptions.java", "diffHunk": "@@ -64,4 +66,10 @@ default void readAllVersions() {\n   void setKeepDeletedCells(KeepDeletedCells keepDeletedCells);\n \n   KeepDeletedCells getKeepDeletedCells();\n+\n+  int getMinVersions();\n+\n+  void setMinVersions(int minVersions);\n+\n+  Scan getScan() throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59cde3dc6eabd0d1b898f18d0c461b6602bd7082"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyNzM5MQ==", "bodyText": "Done", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420527391", "createdAt": "2020-05-06T03:33:57Z", "author": {"login": "gjacoby126"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanOptions.java", "diffHunk": "@@ -64,4 +66,10 @@ default void readAllVersions() {\n   void setKeepDeletedCells(KeepDeletedCells keepDeletedCells);\n \n   KeepDeletedCells getKeepDeletedCells();\n+\n+  int getMinVersions();\n+\n+  void setMinVersions(int minVersions);\n+\n+  Scan getScan() throws IOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQ5MTU1Mg=="}, "originalCommit": {"oid": "59cde3dc6eabd0d1b898f18d0c461b6602bd7082"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNzg1NjQwOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanOptions.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwMzo0Mjo0MFrOGRDEVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNjowMjoxNVrOGRFDBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyOTIzNw==", "bodyText": "The comment is a bit confusing as you are free to call the modification methods of the returned Scan object? So it is not 'read only'.\nMaybe better with \"The returned Scan object is just a copy, modifying it will have no effect, so treat it as read-only.\"\nOf course I'm not a native English speaker, so feel free to use your own word. Just show the meaning that 'you can modify, but no effect, so please do not modify'.", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420529237", "createdAt": "2020-05-06T03:42:40Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanOptions.java", "diffHunk": "@@ -64,4 +66,13 @@ default void readAllVersions() {\n   void setKeepDeletedCells(KeepDeletedCells keepDeletedCells);\n \n   KeepDeletedCells getKeepDeletedCells();\n+\n+  int getMinVersions();\n+\n+  void setMinVersions(int minVersions);\n+\n+  /**\n+   * Returns a read-only copy of the Scan object", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95f88022ba84fa679cd9a8e0cc5e85ad4eb3fa66"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2MTY2OA==", "bodyText": "Good point. Done.", "url": "https://github.com/apache/hbase/pull/1655#discussion_r420561668", "createdAt": "2020-05-06T06:02:15Z", "author": {"login": "gjacoby126"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/ScanOptions.java", "diffHunk": "@@ -64,4 +66,13 @@ default void readAllVersions() {\n   void setKeepDeletedCells(KeepDeletedCells keepDeletedCells);\n \n   KeepDeletedCells getKeepDeletedCells();\n+\n+  int getMinVersions();\n+\n+  void setMinVersions(int minVersions);\n+\n+  /**\n+   * Returns a read-only copy of the Scan object", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDUyOTIzNw=="}, "originalCommit": {"oid": "95f88022ba84fa679cd9a8e0cc5e85ad4eb3fa66"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTMyMTI2OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo0NDo0MVrOGRktNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxNjoyNDoxOFrOGTFi7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4MDM3Mg==", "bodyText": "Might be good at some point to have an unmodifiable subclass or wrapper of Scan, so that any modification would cause an error. (not in this PR, though)", "url": "https://github.com/apache/hbase/pull/1655#discussion_r421080372", "createdAt": "2020-05-06T20:44:41Z", "author": {"login": "lhofhansl"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -80,4 +97,23 @@ public KeepDeletedCells getKeepDeletedCells() {\n     return keepDeletedCells != null ? keepDeletedCells : scanInfo.getKeepDeletedCells();\n   }\n \n+  @Override\n+  public int getMinVersions() {\n+    return minVersions != null ? minVersions : scanInfo.getMinVersions();\n+  }\n+\n+  @Override\n+  public void setMinVersions(int minVersions) {\n+    this.minVersions = minVersions;\n+  }\n+\n+  @Override\n+  public Scan getScan() {\n+    try {\n+      return new Scan(scan);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27c2f4ef969ce625af19001afa30fe61bb2f4fe1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjU5ODA1NQ==", "bodyText": "+1 to Immutable Scan wrapper with unmodifiable getters", "url": "https://github.com/apache/hbase/pull/1655#discussion_r422598055", "createdAt": "2020-05-10T06:54:25Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -80,4 +97,23 @@ public KeepDeletedCells getKeepDeletedCells() {\n     return keepDeletedCells != null ? keepDeletedCells : scanInfo.getKeepDeletedCells();\n   }\n \n+  @Override\n+  public int getMinVersions() {\n+    return minVersions != null ? minVersions : scanInfo.getMinVersions();\n+  }\n+\n+  @Override\n+  public void setMinVersions(int minVersions) {\n+    this.minVersions = minVersions;\n+  }\n+\n+  @Override\n+  public Scan getScan() {\n+    try {\n+      return new Scan(scan);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4MDM3Mg=="}, "originalCommit": {"oid": "27c2f4ef969ce625af19001afa30fe61bb2f4fe1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYzMzk2OQ==", "bodyText": "+1..  That was something came to my mind too while reading the Jira desc. :-)", "url": "https://github.com/apache/hbase/pull/1655#discussion_r422633969", "createdAt": "2020-05-10T11:51:00Z", "author": {"login": "anoopsjohn"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -80,4 +97,23 @@ public KeepDeletedCells getKeepDeletedCells() {\n     return keepDeletedCells != null ? keepDeletedCells : scanInfo.getKeepDeletedCells();\n   }\n \n+  @Override\n+  public int getMinVersions() {\n+    return minVersions != null ? minVersions : scanInfo.getMinVersions();\n+  }\n+\n+  @Override\n+  public void setMinVersions(int minVersions) {\n+    this.minVersions = minVersions;\n+  }\n+\n+  @Override\n+  public Scan getScan() {\n+    try {\n+      return new Scan(scan);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4MDM3Mg=="}, "originalCommit": {"oid": "27c2f4ef969ce625af19001afa30fe61bb2f4fe1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYzNDA3Ng==", "bodyText": "Already the scan object been cloned while setting in this class..  Every time with get also we need to clone?", "url": "https://github.com/apache/hbase/pull/1655#discussion_r422634076", "createdAt": "2020-05-10T11:52:01Z", "author": {"login": "anoopsjohn"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -80,4 +97,23 @@ public KeepDeletedCells getKeepDeletedCells() {\n     return keepDeletedCells != null ? keepDeletedCells : scanInfo.getKeepDeletedCells();\n   }\n \n+  @Override\n+  public int getMinVersions() {\n+    return minVersions != null ? minVersions : scanInfo.getMinVersions();\n+  }\n+\n+  @Override\n+  public void setMinVersions(int minVersions) {\n+    this.minVersions = minVersions;\n+  }\n+\n+  @Override\n+  public Scan getScan() {\n+    try {\n+      return new Scan(scan);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4MDM3Mg=="}, "originalCommit": {"oid": "27c2f4ef969ce625af19001afa30fe61bb2f4fe1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY1NzYxMw==", "bodyText": "@anoopsjohn  In the original draft it was only cloned in the constructor. @apurtell pointed out that that meant that one coproc override could call getScan(), call a setter on the Scan, and that a subsequent override would see the modified Scan, so he asked me to fix that.", "url": "https://github.com/apache/hbase/pull/1655#discussion_r422657613", "createdAt": "2020-05-10T15:06:30Z", "author": {"login": "gjacoby126"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -80,4 +97,23 @@ public KeepDeletedCells getKeepDeletedCells() {\n     return keepDeletedCells != null ? keepDeletedCells : scanInfo.getKeepDeletedCells();\n   }\n \n+  @Override\n+  public int getMinVersions() {\n+    return minVersions != null ? minVersions : scanInfo.getMinVersions();\n+  }\n+\n+  @Override\n+  public void setMinVersions(int minVersions) {\n+    this.minVersions = minVersions;\n+  }\n+\n+  @Override\n+  public Scan getScan() {\n+    try {\n+      return new Scan(scan);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4MDM3Mg=="}, "originalCommit": {"oid": "27c2f4ef969ce625af19001afa30fe61bb2f4fe1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjY2Njk4OQ==", "bodyText": "Ok.  An ImmutableScan would have helped. Fine. As long as we dont have lets do this.", "url": "https://github.com/apache/hbase/pull/1655#discussion_r422666989", "createdAt": "2020-05-10T16:24:18Z", "author": {"login": "anoopsjohn"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/CustomizedScanInfoBuilder.java", "diffHunk": "@@ -80,4 +97,23 @@ public KeepDeletedCells getKeepDeletedCells() {\n     return keepDeletedCells != null ? keepDeletedCells : scanInfo.getKeepDeletedCells();\n   }\n \n+  @Override\n+  public int getMinVersions() {\n+    return minVersions != null ? minVersions : scanInfo.getMinVersions();\n+  }\n+\n+  @Override\n+  public void setMinVersions(int minVersions) {\n+    this.minVersions = minVersions;\n+  }\n+\n+  @Override\n+  public Scan getScan() {\n+    try {\n+      return new Scan(scan);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4MDM3Mg=="}, "originalCommit": {"oid": "27c2f4ef969ce625af19001afa30fe61bb2f4fe1"}, "originalPosition": 66}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1746, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}