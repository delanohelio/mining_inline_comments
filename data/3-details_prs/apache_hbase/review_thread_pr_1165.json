{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0MDY3NTIy", "number": 1165, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODozOTozNVrODfSh4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxNDo1OTowOFrODiFq3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTM2MDMyOnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODozOTozNVrOFo6FOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNjoyMDoxMlrOFuMsww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQzODk3MQ==", "bodyText": "Do we still need 'RS'? Should this be addGroup or addRegionServerGroup?", "url": "https://github.com/apache/hbase/pull/1165#discussion_r378438971", "createdAt": "2020-02-12T18:39:35Z", "author": {"login": "saintstack"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -2262,4 +2265,104 @@ boolean snapshotCleanupSwitch(final boolean on, final boolean synchronous)\n    */\n   boolean isSnapshotCleanupEnabled() throws IOException;\n \n+  /**\n+   * Creates a new RegionServer group with the given name\n+   * @param groupName the name of the group\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  void addRSGroup(String groupName) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8273b8910a17095f34df446bc1d43676f032812"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQzOTYxNw==", "bodyText": "Hmm... Yeah, Group is too generic so s/RS/RegionGroup/ ? Big change I suppose.", "url": "https://github.com/apache/hbase/pull/1165#discussion_r378439617", "createdAt": "2020-02-12T18:40:48Z", "author": {"login": "saintstack"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -2262,4 +2265,104 @@ boolean snapshotCleanupSwitch(final boolean on, final boolean synchronous)\n    */\n   boolean isSnapshotCleanupEnabled() throws IOException;\n \n+  /**\n+   * Creates a new RegionServer group with the given name\n+   * @param groupName the name of the group\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  void addRSGroup(String groupName) throws IOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQzODk3MQ=="}, "originalCommit": {"oid": "d8273b8910a17095f34df446bc1d43676f032812"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYwMTczMA==", "bodyText": "The IA.Public data structure is call RSGroupInfo so...", "url": "https://github.com/apache/hbase/pull/1165#discussion_r378601730", "createdAt": "2020-02-13T01:09:59Z", "author": {"login": "Apache9"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -2262,4 +2265,104 @@ boolean snapshotCleanupSwitch(final boolean on, final boolean synchronous)\n    */\n   boolean isSnapshotCleanupEnabled() throws IOException;\n \n+  /**\n+   * Creates a new RegionServer group with the given name\n+   * @param groupName the name of the group\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  void addRSGroup(String groupName) throws IOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQzODk3MQ=="}, "originalCommit": {"oid": "d8273b8910a17095f34df446bc1d43676f032812"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk4Njg4Mw==", "bodyText": "Ok. So, your argument is that folks using current data structures and methods will have an easier time if the names of methods, etc., have same basic pattern in the new context.\nOk.", "url": "https://github.com/apache/hbase/pull/1165#discussion_r383986883", "createdAt": "2020-02-25T16:20:12Z", "author": {"login": "saintstack"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -2262,4 +2265,104 @@ boolean snapshotCleanupSwitch(final boolean on, final boolean synchronous)\n    */\n   boolean isSnapshotCleanupEnabled() throws IOException;\n \n+  /**\n+   * Creates a new RegionServer group with the given name\n+   * @param groupName the name of the group\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  void addRSGroup(String groupName) throws IOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQzODk3MQ=="}, "originalCommit": {"oid": "d8273b8910a17095f34df446bc1d43676f032812"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTM2Nzc1OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODo0MTo1MlrOFo6J-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwOTo0OToyNVrOFukwOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ0MDE4Nw==", "bodyText": "Purge 'Configured' from this method name?", "url": "https://github.com/apache/hbase/pull/1165#discussion_r378440187", "createdAt": "2020-02-12T18:41:52Z", "author": {"login": "saintstack"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -2262,4 +2265,104 @@ boolean snapshotCleanupSwitch(final boolean on, final boolean synchronous)\n    */\n   boolean isSnapshotCleanupEnabled() throws IOException;\n \n+  /**\n+   * Creates a new RegionServer group with the given name\n+   * @param groupName the name of the group\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  void addRSGroup(String groupName) throws IOException;\n+\n+  /**\n+   * Get group info for the given group name\n+   * @param groupName the group name\n+   * @return group info\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  RSGroupInfo getRSGroup(String groupName) throws IOException;\n+\n+  /**\n+   * Get group info for the given hostPort\n+   * @param hostPort HostPort to get RSGroupInfo for\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  RSGroupInfo getRSGroup(Address hostPort) throws IOException;\n+\n+  /**\n+   * Get group info for the given table\n+   * @param tableName table name to get RSGroupInfo for\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  RSGroupInfo getRSGroup(TableName tableName) throws IOException;\n+\n+  /**\n+   * Lists current set of RegionServer groups\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  List<RSGroupInfo> listRSGroups() throws IOException;\n+\n+  /**\n+   * Get all tables in this RegionServer group.\n+   * @param groupName the group name\n+   * @throws IOException if a remote or network exception occurs\n+   * @see #getConfiguredNamespacesAndTablesInRSGroup(String)\n+   */\n+  List<TableName> listTablesInRSGroup(String groupName) throws IOException;\n+\n+  /**\n+   * Get the namespaces and tables which have this RegionServer group in descriptor.\n+   * <p/>\n+   * The difference between this method and {@link #listTablesInRSGroup(String)} is that, this\n+   * method will not include the table which is actually in this RegionServr group but without the\n+   * RegionServer group configuration in its {@link TableDescriptor}. For example, we have a group\n+   * 'A', and we make namespace 'nsA' in this group, then all the tables under this namespace will\n+   * in the group 'A', but this method will not return these tables but only the namespace 'nsA',\n+   * while the {@link #listTablesInRSGroup(String)} will return all these tables.\n+   * @param groupName the group name\n+   * @throws IOException if a remote or network exception occurs\n+   * @see #listTablesInRSGroup(String)\n+   */\n+  Pair<List<String>, List<TableName>> getConfiguredNamespacesAndTablesInRSGroup(String groupName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8273b8910a17095f34df446bc1d43676f032812"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYwMTU3Mg==", "bodyText": "But it is the 'configured' namespaces and tables. For example, you have namespace 'N' under rs group 'R', this method will only return namespace 'N', and will not return the tables under namespace 'N'...", "url": "https://github.com/apache/hbase/pull/1165#discussion_r378601572", "createdAt": "2020-02-13T01:09:22Z", "author": {"login": "Apache9"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -2262,4 +2265,104 @@ boolean snapshotCleanupSwitch(final boolean on, final boolean synchronous)\n    */\n   boolean isSnapshotCleanupEnabled() throws IOException;\n \n+  /**\n+   * Creates a new RegionServer group with the given name\n+   * @param groupName the name of the group\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  void addRSGroup(String groupName) throws IOException;\n+\n+  /**\n+   * Get group info for the given group name\n+   * @param groupName the group name\n+   * @return group info\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  RSGroupInfo getRSGroup(String groupName) throws IOException;\n+\n+  /**\n+   * Get group info for the given hostPort\n+   * @param hostPort HostPort to get RSGroupInfo for\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  RSGroupInfo getRSGroup(Address hostPort) throws IOException;\n+\n+  /**\n+   * Get group info for the given table\n+   * @param tableName table name to get RSGroupInfo for\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  RSGroupInfo getRSGroup(TableName tableName) throws IOException;\n+\n+  /**\n+   * Lists current set of RegionServer groups\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  List<RSGroupInfo> listRSGroups() throws IOException;\n+\n+  /**\n+   * Get all tables in this RegionServer group.\n+   * @param groupName the group name\n+   * @throws IOException if a remote or network exception occurs\n+   * @see #getConfiguredNamespacesAndTablesInRSGroup(String)\n+   */\n+  List<TableName> listTablesInRSGroup(String groupName) throws IOException;\n+\n+  /**\n+   * Get the namespaces and tables which have this RegionServer group in descriptor.\n+   * <p/>\n+   * The difference between this method and {@link #listTablesInRSGroup(String)} is that, this\n+   * method will not include the table which is actually in this RegionServr group but without the\n+   * RegionServer group configuration in its {@link TableDescriptor}. For example, we have a group\n+   * 'A', and we make namespace 'nsA' in this group, then all the tables under this namespace will\n+   * in the group 'A', but this method will not return these tables but only the namespace 'nsA',\n+   * while the {@link #listTablesInRSGroup(String)} will return all these tables.\n+   * @param groupName the group name\n+   * @throws IOException if a remote or network exception occurs\n+   * @see #listTablesInRSGroup(String)\n+   */\n+  Pair<List<String>, List<TableName>> getConfiguredNamespacesAndTablesInRSGroup(String groupName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ0MDE4Nw=="}, "originalCommit": {"oid": "d8273b8910a17095f34df446bc1d43676f032812"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk4ODM4OA==", "bodyText": "The 'Configure' seems redundant to me given the suffix on method name is 'InRSGroup'.", "url": "https://github.com/apache/hbase/pull/1165#discussion_r383988388", "createdAt": "2020-02-25T16:22:20Z", "author": {"login": "saintstack"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -2262,4 +2265,104 @@ boolean snapshotCleanupSwitch(final boolean on, final boolean synchronous)\n    */\n   boolean isSnapshotCleanupEnabled() throws IOException;\n \n+  /**\n+   * Creates a new RegionServer group with the given name\n+   * @param groupName the name of the group\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  void addRSGroup(String groupName) throws IOException;\n+\n+  /**\n+   * Get group info for the given group name\n+   * @param groupName the group name\n+   * @return group info\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  RSGroupInfo getRSGroup(String groupName) throws IOException;\n+\n+  /**\n+   * Get group info for the given hostPort\n+   * @param hostPort HostPort to get RSGroupInfo for\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  RSGroupInfo getRSGroup(Address hostPort) throws IOException;\n+\n+  /**\n+   * Get group info for the given table\n+   * @param tableName table name to get RSGroupInfo for\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  RSGroupInfo getRSGroup(TableName tableName) throws IOException;\n+\n+  /**\n+   * Lists current set of RegionServer groups\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  List<RSGroupInfo> listRSGroups() throws IOException;\n+\n+  /**\n+   * Get all tables in this RegionServer group.\n+   * @param groupName the group name\n+   * @throws IOException if a remote or network exception occurs\n+   * @see #getConfiguredNamespacesAndTablesInRSGroup(String)\n+   */\n+  List<TableName> listTablesInRSGroup(String groupName) throws IOException;\n+\n+  /**\n+   * Get the namespaces and tables which have this RegionServer group in descriptor.\n+   * <p/>\n+   * The difference between this method and {@link #listTablesInRSGroup(String)} is that, this\n+   * method will not include the table which is actually in this RegionServr group but without the\n+   * RegionServer group configuration in its {@link TableDescriptor}. For example, we have a group\n+   * 'A', and we make namespace 'nsA' in this group, then all the tables under this namespace will\n+   * in the group 'A', but this method will not return these tables but only the namespace 'nsA',\n+   * while the {@link #listTablesInRSGroup(String)} will return all these tables.\n+   * @param groupName the group name\n+   * @throws IOException if a remote or network exception occurs\n+   * @see #listTablesInRSGroup(String)\n+   */\n+  Pair<List<String>, List<TableName>> getConfiguredNamespacesAndTablesInRSGroup(String groupName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ0MDE4Nw=="}, "originalCommit": {"oid": "d8273b8910a17095f34df446bc1d43676f032812"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM4MDk4Nw==", "bodyText": "There is a listTablesInRSGroup method above, which will all the tables in the rs group, including the tables which are included becasue of their namespace is configued to be in the rs group...", "url": "https://github.com/apache/hbase/pull/1165#discussion_r384380987", "createdAt": "2020-02-26T09:49:25Z", "author": {"login": "Apache9"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -2262,4 +2265,104 @@ boolean snapshotCleanupSwitch(final boolean on, final boolean synchronous)\n    */\n   boolean isSnapshotCleanupEnabled() throws IOException;\n \n+  /**\n+   * Creates a new RegionServer group with the given name\n+   * @param groupName the name of the group\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  void addRSGroup(String groupName) throws IOException;\n+\n+  /**\n+   * Get group info for the given group name\n+   * @param groupName the group name\n+   * @return group info\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  RSGroupInfo getRSGroup(String groupName) throws IOException;\n+\n+  /**\n+   * Get group info for the given hostPort\n+   * @param hostPort HostPort to get RSGroupInfo for\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  RSGroupInfo getRSGroup(Address hostPort) throws IOException;\n+\n+  /**\n+   * Get group info for the given table\n+   * @param tableName table name to get RSGroupInfo for\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  RSGroupInfo getRSGroup(TableName tableName) throws IOException;\n+\n+  /**\n+   * Lists current set of RegionServer groups\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  List<RSGroupInfo> listRSGroups() throws IOException;\n+\n+  /**\n+   * Get all tables in this RegionServer group.\n+   * @param groupName the group name\n+   * @throws IOException if a remote or network exception occurs\n+   * @see #getConfiguredNamespacesAndTablesInRSGroup(String)\n+   */\n+  List<TableName> listTablesInRSGroup(String groupName) throws IOException;\n+\n+  /**\n+   * Get the namespaces and tables which have this RegionServer group in descriptor.\n+   * <p/>\n+   * The difference between this method and {@link #listTablesInRSGroup(String)} is that, this\n+   * method will not include the table which is actually in this RegionServr group but without the\n+   * RegionServer group configuration in its {@link TableDescriptor}. For example, we have a group\n+   * 'A', and we make namespace 'nsA' in this group, then all the tables under this namespace will\n+   * in the group 'A', but this method will not return these tables but only the namespace 'nsA',\n+   * while the {@link #listTablesInRSGroup(String)} will return all these tables.\n+   * @param groupName the group name\n+   * @throws IOException if a remote or network exception occurs\n+   * @see #listTablesInRSGroup(String)\n+   */\n+  Pair<List<String>, List<TableName>> getConfiguredNamespacesAndTablesInRSGroup(String groupName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ0MDE4Nw=="}, "originalCommit": {"oid": "d8273b8910a17095f34df446bc1d43676f032812"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTQxMTE4OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODo1NToxOFrOFo6l7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODo1NToxOFrOFo6l7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ0NzM0Mg==", "bodyText": "This balancer acts like old balancer when RSGroups is off? If so, just rename RSGroupBasedLB as LB?", "url": "https://github.com/apache/hbase/pull/1165#discussion_r378447342", "createdAt": "2020-02-12T18:55:18Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -382,7 +386,7 @@ public void run() {\n \n   private final LockManager lockManager = new LockManager(this);\n \n-  private LoadBalancer balancer;\n+  private RSGroupBasedLoadBalancer balancer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8273b8910a17095f34df446bc1d43676f032812"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTQxNjAxOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODo1Njo0NFrOFo6pJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODo1Njo0NFrOFo6pJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ0ODE2Nw==", "bodyText": "Yeah, can't just return 'LoadBalancer' only now LB handles RSGroups too? (Maybe not possible for RSGroupLB...)", "url": "https://github.com/apache/hbase/pull/1165#discussion_r378448167", "createdAt": "2020-02-12T18:56:44Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -3498,13 +3511,13 @@ public SplitOrMergeTracker getSplitOrMergeTracker() {\n   }\n \n   @Override\n-  public LoadBalancer getLoadBalancer() {\n+  public RSGroupBasedLoadBalancer getLoadBalancer() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8273b8910a17095f34df446bc1d43676f032812"}, "originalPosition": 161}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDcxMDY4OnYy", "diffSide": "RIGHT", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfo.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxNDo1OTowOFrOFtLemw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwOTo0MzozMlrOFukilA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxODI5OQ==", "bodyText": "Can we avoid changing the method signature on this IA.Public method?", "url": "https://github.com/apache/hbase/pull/1165#discussion_r382918299", "createdAt": "2020-02-22T14:59:08Z", "author": {"login": "busbey"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfo.java", "diffHunk": "@@ -87,7 +102,7 @@ public boolean containsServer(Address hostPort) {\n   /**\n    * Get list of servers.\n    */\n-  public Set<Address> getServers() {\n+  public SortedSet<Address> getServers() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e724329aaab955832da313fc7be14b9db94bbb2"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDM3NzQ5Mg==", "bodyText": "I think this one is fine? SortedSet is Set, and this is a new major release", "url": "https://github.com/apache/hbase/pull/1165#discussion_r384377492", "createdAt": "2020-02-26T09:43:32Z", "author": {"login": "Apache9"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfo.java", "diffHunk": "@@ -87,7 +102,7 @@ public boolean containsServer(Address hostPort) {\n   /**\n    * Get list of servers.\n    */\n-  public Set<Address> getServers() {\n+  public SortedSet<Address> getServers() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxODI5OQ=="}, "originalCommit": {"oid": "4e724329aaab955832da313fc7be14b9db94bbb2"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2071, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}