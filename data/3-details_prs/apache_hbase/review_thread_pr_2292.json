{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxOTk4NzA4", "number": 2292, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMzo1NToyN1rOEbRq5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODozMDo1MlrOEbV2aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MDM2NTE2OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwMzo1NToyN1rOHFJ2zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QwNjo0Mjo0OVrOHFKptA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2NjQxNA==", "bodyText": "This method will be called when balance? Add some comments here?", "url": "https://github.com/apache/hbase/pull/2292#discussion_r475166414", "createdAt": "2020-08-23T03:55:27Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "diffHunk": "@@ -1064,19 +1065,26 @@ private boolean isTableInGroup(TableName tableName, String groupName,\n     return rit;\n   }\n \n-  private Map<TableName, Map<ServerName, List<RegionInfo>>> getRSGroupAssignmentsByTable(\n-      String groupName) throws IOException {\n+  @VisibleForTesting\n+  Map<TableName, Map<ServerName, List<RegionInfo>>> getRSGroupAssignmentsByTable(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c2b86496a5ca7aae2d7bef7ba6ccb188048396c"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE3OTQ0NA==", "bodyText": "This method will be called when balance? Add some comments here?\n\nYes, only called by balanceRSGroup, triggered in manual way", "url": "https://github.com/apache/hbase/pull/2292#discussion_r475179444", "createdAt": "2020-08-23T06:42:49Z", "author": {"login": "nyl3532016"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "diffHunk": "@@ -1064,19 +1065,26 @@ private boolean isTableInGroup(TableName tableName, String groupName,\n     return rit;\n   }\n \n-  private Map<TableName, Map<ServerName, List<RegionInfo>>> getRSGroupAssignmentsByTable(\n-      String groupName) throws IOException {\n+  @VisibleForTesting\n+  Map<TableName, Map<ServerName, List<RegionInfo>>> getRSGroupAssignmentsByTable(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTE2NjQxNA=="}, "originalCommit": {"oid": "6c2b86496a5ca7aae2d7bef7ba6ccb188048396c"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MDY0OTAyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxMDoxMDo0NlrOHFL7IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxMzo0NjowNlrOHFNOiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIwMDI4OA==", "bodyText": "This seems an additional check to what PR title talks about. Can you please also add PR description reg this check?", "url": "https://github.com/apache/hbase/pull/2292#discussion_r475200288", "createdAt": "2020-08-23T10:10:46Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "diffHunk": "@@ -1064,19 +1065,34 @@ private boolean isTableInGroup(TableName tableName, String groupName,\n     return rit;\n   }\n \n-  private Map<TableName, Map<ServerName, List<RegionInfo>>> getRSGroupAssignmentsByTable(\n-      String groupName) throws IOException {\n+  /**\n+   * This is an EXPENSIVE clone.  Cloning though is the safest thing to do.\n+   * Can't let out original since it can change and at least the load balancer\n+   * wants to iterate this exported list.\n+   * This method is invoked by {@link #balanceRSGroup}\n+   *\n+   * @return A clone of current assignments for this group.\n+   */\n+  @VisibleForTesting\n+  Map<TableName, Map<ServerName, List<RegionInfo>>> getRSGroupAssignmentsByTable(\n+    TableStateManager tableStateManager, String groupName) throws IOException {\n     Map<TableName, Map<ServerName, List<RegionInfo>>> result = Maps.newHashMap();\n     Set<TableName> tablesInGroupCache = new HashSet<>();\n-    for (Map.Entry<RegionInfo, ServerName> entry :\n-        masterServices.getAssignmentManager().getRegionStates()\n-        .getRegionAssignments().entrySet()) {\n+    for (Map.Entry<RegionInfo, ServerName> entry : masterServices.getAssignmentManager()\n+      .getRegionStates().getRegionAssignments().entrySet()) {\n       RegionInfo region = entry.getKey();\n       TableName tn = region.getTable();\n       ServerName server = entry.getValue();\n       if (isTableInGroup(tn, groupName, tablesInGroupCache)) {\n+        if (tableStateManager\n+          .isTableState(tn, TableState.State.DISABLED, TableState.State.DISABLING)) {\n+          continue;\n+        }\n+        if (region.isSplitParent()) {\n+          continue;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9f1e30f7c7969152e7c46b5876cc8377c0108b2"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIyMTY0MQ==", "bodyText": "This seems an additional check to what PR title talks about. Can you please also add PR description reg this check?\n\nYes, I have amended the PR description", "url": "https://github.com/apache/hbase/pull/2292#discussion_r475221641", "createdAt": "2020-08-23T13:46:06Z", "author": {"login": "nyl3532016"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "diffHunk": "@@ -1064,19 +1065,34 @@ private boolean isTableInGroup(TableName tableName, String groupName,\n     return rit;\n   }\n \n-  private Map<TableName, Map<ServerName, List<RegionInfo>>> getRSGroupAssignmentsByTable(\n-      String groupName) throws IOException {\n+  /**\n+   * This is an EXPENSIVE clone.  Cloning though is the safest thing to do.\n+   * Can't let out original since it can change and at least the load balancer\n+   * wants to iterate this exported list.\n+   * This method is invoked by {@link #balanceRSGroup}\n+   *\n+   * @return A clone of current assignments for this group.\n+   */\n+  @VisibleForTesting\n+  Map<TableName, Map<ServerName, List<RegionInfo>>> getRSGroupAssignmentsByTable(\n+    TableStateManager tableStateManager, String groupName) throws IOException {\n     Map<TableName, Map<ServerName, List<RegionInfo>>> result = Maps.newHashMap();\n     Set<TableName> tablesInGroupCache = new HashSet<>();\n-    for (Map.Entry<RegionInfo, ServerName> entry :\n-        masterServices.getAssignmentManager().getRegionStates()\n-        .getRegionAssignments().entrySet()) {\n+    for (Map.Entry<RegionInfo, ServerName> entry : masterServices.getAssignmentManager()\n+      .getRegionStates().getRegionAssignments().entrySet()) {\n       RegionInfo region = entry.getKey();\n       TableName tn = region.getTable();\n       ServerName server = entry.getValue();\n       if (isTableInGroup(tn, groupName, tablesInGroupCache)) {\n+        if (tableStateManager\n+          .isTableState(tn, TableState.State.DISABLED, TableState.State.DISABLING)) {\n+          continue;\n+        }\n+        if (region.isSplitParent()) {\n+          continue;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTIwMDI4OA=="}, "originalCommit": {"oid": "e9f1e30f7c7969152e7c46b5876cc8377c0108b2"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTA1MDAwOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yM1QxODozMDo1MlrOHFO_SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwMjoyMDoxOVrOHFSidw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI1MDUwNA==", "bodyText": "Maybe for these two lines, we can mention:\nLoad balancer should iterate over this list because cloned list will ignore disabled table and split parent region cases.", "url": "https://github.com/apache/hbase/pull/2292#discussion_r475250504", "createdAt": "2020-08-23T18:30:52Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "diffHunk": "@@ -1064,19 +1065,34 @@ private boolean isTableInGroup(TableName tableName, String groupName,\n     return rit;\n   }\n \n-  private Map<TableName, Map<ServerName, List<RegionInfo>>> getRSGroupAssignmentsByTable(\n-      String groupName) throws IOException {\n+  /**\n+   * This is an EXPENSIVE clone.  Cloning though is the safest thing to do.\n+   * Can't let out original since it can change and at least the load balancer\n+   * wants to iterate this exported list.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01b0907cc1dc01308cda3772ecf2615cc3093d3c"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTMwODY2Mw==", "bodyText": "I have added this comment", "url": "https://github.com/apache/hbase/pull/2292#discussion_r475308663", "createdAt": "2020-08-24T02:20:19Z", "author": {"login": "nyl3532016"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "diffHunk": "@@ -1064,19 +1065,34 @@ private boolean isTableInGroup(TableName tableName, String groupName,\n     return rit;\n   }\n \n-  private Map<TableName, Map<ServerName, List<RegionInfo>>> getRSGroupAssignmentsByTable(\n-      String groupName) throws IOException {\n+  /**\n+   * This is an EXPENSIVE clone.  Cloning though is the safest thing to do.\n+   * Can't let out original since it can change and at least the load balancer\n+   * wants to iterate this exported list.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTI1MDUwNA=="}, "originalCommit": {"oid": "01b0907cc1dc01308cda3772ecf2615cc3093d3c"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2680, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}