{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwODU3NjA1", "number": 2286, "title": "HBASE-24913 Refactor TestJMXConnectorServer", "bodyText": "Two optimization points for TestJMXConnectorServer in this issue:\n\nJust run cluster once, not once per test case.\nUse random free port to run ConnectorServer, avoid specifying a fixed port.", "createdAt": "2020-08-20T11:53:46Z", "url": "https://github.com/apache/hbase/pull/2286", "merged": true, "mergeCommit": {"oid": "25fcc40f6a491219735eedd0b3791efc7502269f"}, "closed": true, "closedAt": "2020-08-31T02:24:00Z", "author": {"login": "ddupg"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAu2WbAH2gAyNDcwODU3NjA1OmE0YTM1NjljMTczZDU5NjFjNzI3OWE3OTljZWFiZGJjZTIxYjNmN2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDMe1ggFqTQ3NzIxODA5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a4a3569c173d5961c7279a799ceabdbce21b3f7d", "author": {"user": {"login": "ddupg", "name": "XinSun"}}, "url": "https://github.com/apache/hbase/commit/a4a3569c173d5961c7279a799ceabdbce21b3f7d", "committedDate": "2020-08-20T11:52:14Z", "message": "HBASE-24913 Refactor TestJMXConnectorServer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDEyMDg5", "url": "https://github.com/apache/hbase/pull/2286#pullrequestreview-472012089", "createdAt": "2020-08-20T21:54:00Z", "commit": {"oid": "a4a3569c173d5961c7279a799ceabdbce21b3f7d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTo1NDowMVrOHEUmcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMTo1NDowMVrOHEUmcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI5Mzg3Mg==", "bodyText": "While the port might have been 'free' when we got it, by the time we go to use it, it may have been occupied for another. See HBaseTestingUtility#setupMiniKdc where it loops until no BindException. This trick is used in a few places to get around port clash.", "url": "https://github.com/apache/hbase/pull/2286#discussion_r474293872", "createdAt": "2020-08-20T21:54:01Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestJMXConnectorServer.java", "diffHunk": "@@ -56,39 +58,47 @@\n   private static Configuration conf = null;\n   private static Admin admin;\n   // RMI registry port\n-  private static int rmiRegistryPort = 61120;\n+  private static int rmiRegistryPort;\n   // Switch for customized Accesscontroller to throw ACD exception while executing test case\n-  static boolean hasAccess;\n+  private volatile static boolean hasAccess;\n \n-  @Before\n-  public void setUp() throws Exception {\n-    UTIL = new HBaseTestingUtility();\n+  @BeforeClass\n+  public static void setUpBeforeClass() throws Exception {\n     conf = UTIL.getConfiguration();\n+    String cps = JMXListener.class.getName() + \",\" + MyAccessController.class.getName();\n+    conf.set(CoprocessorHost.MASTER_COPROCESSOR_CONF_KEY, cps);\n+    conf.set(CoprocessorHost.REGIONSERVER_COPROCESSOR_CONF_KEY, cps);\n+    rmiRegistryPort = UTIL.randomFreePort();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a3569c173d5961c7279a799ceabdbce21b3f7d"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyOTI4MTI3", "url": "https://github.com/apache/hbase/pull/2286#pullrequestreview-472928127", "createdAt": "2020-08-22T13:53:55Z", "commit": {"oid": "a4a3569c173d5961c7279a799ceabdbce21b3f7d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMzo1Mzo1NVrOHFFZxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMlQxMzo1Mzo1NVrOHFFZxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTA5MzQ0Ng==", "bodyText": "Seems only the first call will throw AccessDeny exception. Did you know why this design?", "url": "https://github.com/apache/hbase/pull/2286#discussion_r475093446", "createdAt": "2020-08-22T13:53:55Z", "author": {"login": "infraio"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestJMXConnectorServer.java", "diffHunk": "@@ -56,39 +58,47 @@\n   private static Configuration conf = null;\n   private static Admin admin;\n   // RMI registry port\n-  private static int rmiRegistryPort = 61120;\n+  private static int rmiRegistryPort;\n   // Switch for customized Accesscontroller to throw ACD exception while executing test case\n-  static boolean hasAccess;\n+  private volatile static boolean hasAccess;\n \n-  @Before\n-  public void setUp() throws Exception {\n-    UTIL = new HBaseTestingUtility();\n+  @BeforeClass\n+  public static void setUpBeforeClass() throws Exception {\n     conf = UTIL.getConfiguration();\n+    String cps = JMXListener.class.getName() + \",\" + MyAccessController.class.getName();\n+    conf.set(CoprocessorHost.MASTER_COPROCESSOR_CONF_KEY, cps);\n+    conf.set(CoprocessorHost.REGIONSERVER_COPROCESSOR_CONF_KEY, cps);\n+    rmiRegistryPort = UTIL.randomFreePort();\n+    conf.setInt(\"master.rmi.registry.port\", rmiRegistryPort);\n+    conf.setInt(\"regionserver.rmi.registry.port\", rmiRegistryPort);\n+    UTIL.startMiniCluster();\n+    admin = UTIL.getConnection().getAdmin();\n   }\n \n-  @After\n-  public void tearDown() throws Exception {\n-    // Set to true while stopping cluster\n-    hasAccess = true;\n+  @AfterClass\n+  public static void tearDownAfterClass() throws Exception {\n     admin.close();\n     UTIL.shutdownMiniCluster();\n   }\n \n+  @Before\n+  public void setUp() {\n+    hasAccess = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4a3569c173d5961c7279a799ceabdbce21b3f7d"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MjE4MDk2", "url": "https://github.com/apache/hbase/pull/2286#pullrequestreview-477218096", "createdAt": "2020-08-28T03:31:33Z", "commit": {"oid": "a4a3569c173d5961c7279a799ceabdbce21b3f7d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4944, "cost": 1, "resetAt": "2021-10-28T16:48:13Z"}}}