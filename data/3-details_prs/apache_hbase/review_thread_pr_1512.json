{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMjYyNjAx", "number": 1512, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjoxNDozN1rODx16CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjoxNDozN1rODx16CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTkwMDI0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/RegionMover.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMjoxNDozN1rOGFi5KQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzo0NzoyNVrOGGmIBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2Nzc1Mw==", "bodyText": "Is there already a test, which covers the old as well as the new behavior?", "url": "https://github.com/apache/hbase/pull/1512#discussion_r408467753", "createdAt": "2020-04-14T22:14:37Z", "author": {"login": "HorizonNet"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/RegionMover.java", "diffHunk": "@@ -755,7 +755,8 @@ private ServerName getServerNameForRegion(RegionInfo region) throws IOException\n       return null;\n     }\n     HRegionLocation loc =\n-      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(), true);\n+      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1aa504b8f8591f5fe7c2add59e941332627ddb7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY0MDEyMw==", "bodyText": "Existing test cases are good. But yes good to add additional test case specific for replicaId. @BukrosSzabolcs can you add a test case in TestRegionMover ?", "url": "https://github.com/apache/hbase/pull/1512#discussion_r408640123", "createdAt": "2020-04-15T07:37:03Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/RegionMover.java", "diffHunk": "@@ -755,7 +755,8 @@ private ServerName getServerNameForRegion(RegionInfo region) throws IOException\n       return null;\n     }\n     HRegionLocation loc =\n-      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(), true);\n+      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2Nzc1Mw=="}, "originalCommit": {"oid": "a1aa504b8f8591f5fe7c2add59e941332627ddb7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODY1MjUzNA==", "bodyText": "The issue was found by a test. IntegrationTestTimeBoundedRequestsWithRegionReplicas failed while running with chaos monkey using GracefulRollingRestartRsAction. So there is coverage just not in TestRegionMover. Would that be sufficient?", "url": "https://github.com/apache/hbase/pull/1512#discussion_r408652534", "createdAt": "2020-04-15T07:59:05Z", "author": {"login": "BukrosSzabolcs"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/RegionMover.java", "diffHunk": "@@ -755,7 +755,8 @@ private ServerName getServerNameForRegion(RegionInfo region) throws IOException\n       return null;\n     }\n     HRegionLocation loc =\n-      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(), true);\n+      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2Nzc1Mw=="}, "originalCommit": {"oid": "a1aa504b8f8591f5fe7c2add59e941332627ddb7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg0MDEwNQ==", "bodyText": "It's great that IT test found this issue but they are not run as part of QA build. Hence, if we can have one unit test, that would be really great. QA will always run it. Sounds good @BukrosSzabolcs ?", "url": "https://github.com/apache/hbase/pull/1512#discussion_r408840105", "createdAt": "2020-04-15T13:27:34Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/RegionMover.java", "diffHunk": "@@ -755,7 +755,8 @@ private ServerName getServerNameForRegion(RegionInfo region) throws IOException\n       return null;\n     }\n     HRegionLocation loc =\n-      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(), true);\n+      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2Nzc1Mw=="}, "originalCommit": {"oid": "a1aa504b8f8591f5fe7c2add59e941332627ddb7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg0MzY0Mg==", "bodyText": "However, since we have an IT that covers this, ideally it should be fine and maybe you can take up unit test as separate child Jira of this Jira.\nShould be good @HorizonNet ?", "url": "https://github.com/apache/hbase/pull/1512#discussion_r408843642", "createdAt": "2020-04-15T13:32:31Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/RegionMover.java", "diffHunk": "@@ -755,7 +755,8 @@ private ServerName getServerNameForRegion(RegionInfo region) throws IOException\n       return null;\n     }\n     HRegionLocation loc =\n-      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(), true);\n+      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2Nzc1Mw=="}, "originalCommit": {"oid": "a1aa504b8f8591f5fe7c2add59e941332627ddb7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk5ODIzMg==", "bodyText": "I realized my original description of the issue is not correct. This does not prevent the moving of the region, the result of getServerNameForRegion() is only used in the validation of the move, so it only forces the move to try to repeat itself because it does not realize the move already happened. So it just slows down the process but not break it.\nI tried to write a test for this, but the only thing I could come up with is a test that goes trough regions on a rs and checks if getServerNameForRegion founds the correct server for it. I can add it if you insist but I see very little added value.", "url": "https://github.com/apache/hbase/pull/1512#discussion_r408998232", "createdAt": "2020-04-15T17:05:45Z", "author": {"login": "BukrosSzabolcs"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/RegionMover.java", "diffHunk": "@@ -755,7 +755,8 @@ private ServerName getServerNameForRegion(RegionInfo region) throws IOException\n       return null;\n     }\n     HRegionLocation loc =\n-      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(), true);\n+      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2Nzc1Mw=="}, "originalCommit": {"oid": "a1aa504b8f8591f5fe7c2add59e941332627ddb7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU2OTI4NQ==", "bodyText": "Then let it be.", "url": "https://github.com/apache/hbase/pull/1512#discussion_r409569285", "createdAt": "2020-04-16T13:47:25Z", "author": {"login": "HorizonNet"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/RegionMover.java", "diffHunk": "@@ -755,7 +755,8 @@ private ServerName getServerNameForRegion(RegionInfo region) throws IOException\n       return null;\n     }\n     HRegionLocation loc =\n-      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(), true);\n+      conn.getRegionLocator(region.getTable()).getRegionLocation(region.getStartKey(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ2Nzc1Mw=="}, "originalCommit": {"oid": "a1aa504b8f8591f5fe7c2add59e941332627ddb7"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1928, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}