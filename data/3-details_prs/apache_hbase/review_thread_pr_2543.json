{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMjc3ODg2", "number": 2543, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTo1ODo1NlrOEtrd7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNlQwNjowODo0OFrOFmT12w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzMzNTQ4OnYy", "diffSide": "RIGHT", "path": "hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionLocationFinder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMTo1ODo1NlrOHhm0Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwMTo1Mzo1MlrOHht9ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAwMDk5MQ==", "bodyText": "Why is RegionLocationFinder in the balancer module?", "url": "https://github.com/apache/hbase/pull/2543#discussion_r505000991", "createdAt": "2020-10-14T21:58:56Z", "author": {"login": "saintstack"}, "path": "hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionLocationFinder.java", "diffHunk": "@@ -17,235 +17,186 @@\n  */\n package org.apache.hadoop.hbase.master.balancer;\n \n-import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import java.util.concurrent.Callable;\n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.Executors;\n import java.util.concurrent.TimeUnit;\n-import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.conf.Configured;\n import org.apache.hadoop.hbase.ClusterMetrics;\n import org.apache.hadoop.hbase.HDFSBlocksDistribution;\n import org.apache.hadoop.hbase.ServerName;\n import org.apache.hadoop.hbase.TableName;\n import org.apache.hadoop.hbase.client.RegionInfo;\n import org.apache.hadoop.hbase.client.TableDescriptor;\n-import org.apache.hadoop.hbase.master.MasterServices;\n-import org.apache.hadoop.hbase.master.assignment.AssignmentManager;\n-import org.apache.hadoop.hbase.regionserver.HRegion;\n import org.apache.hadoop.hbase.util.EnvironmentEdgeManager;\n import org.apache.yetus.audience.InterfaceAudience;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+\n+import org.apache.hbase.thirdparty.com.google.common.annotations.VisibleForTesting;\n import org.apache.hbase.thirdparty.com.google.common.cache.CacheBuilder;\n import org.apache.hbase.thirdparty.com.google.common.cache.CacheLoader;\n import org.apache.hbase.thirdparty.com.google.common.cache.LoadingCache;\n-import org.apache.hbase.thirdparty.com.google.common.collect.Lists;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.Futures;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.ListenableFuture;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.ListeningExecutorService;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.MoreExecutors;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.ThreadFactoryBuilder;\n \n /**\n- * This will find where data for a region is located in HDFS. It ranks\n- * {@link ServerName}'s by the size of the store files they are holding for a\n- * given region.\n- *\n+ * This will find where data for a region is located in HDFS. It ranks {@link ServerName}'s by the\n+ * size of the store files they are holding for a given region.\n  */\n @InterfaceAudience.Private\n-class RegionLocationFinder {\n+class RegionLocationFinder extends Configured {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e21cf5f71e1ecdabaa1db5bb580b021af0333287"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTExODA1Mw==", "bodyText": "Because I moved it here? The title of this issue is to move RegionLocationFinder to hbase-balancer module. Or you want to ask why it is under the balancer package? It is because that it is only used by balancer to calcuate the locality. It is a key of the master dependency. If we could move it into hbase-balancer, then it will be easier to move other classes into hbase-balancer module.", "url": "https://github.com/apache/hbase/pull/2543#discussion_r505118053", "createdAt": "2020-10-15T01:53:52Z", "author": {"login": "Apache9"}, "path": "hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionLocationFinder.java", "diffHunk": "@@ -17,235 +17,186 @@\n  */\n package org.apache.hadoop.hbase.master.balancer;\n \n-import java.io.FileNotFoundException;\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import java.util.concurrent.Callable;\n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.Executors;\n import java.util.concurrent.TimeUnit;\n-import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.conf.Configured;\n import org.apache.hadoop.hbase.ClusterMetrics;\n import org.apache.hadoop.hbase.HDFSBlocksDistribution;\n import org.apache.hadoop.hbase.ServerName;\n import org.apache.hadoop.hbase.TableName;\n import org.apache.hadoop.hbase.client.RegionInfo;\n import org.apache.hadoop.hbase.client.TableDescriptor;\n-import org.apache.hadoop.hbase.master.MasterServices;\n-import org.apache.hadoop.hbase.master.assignment.AssignmentManager;\n-import org.apache.hadoop.hbase.regionserver.HRegion;\n import org.apache.hadoop.hbase.util.EnvironmentEdgeManager;\n import org.apache.yetus.audience.InterfaceAudience;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+\n+import org.apache.hbase.thirdparty.com.google.common.annotations.VisibleForTesting;\n import org.apache.hbase.thirdparty.com.google.common.cache.CacheBuilder;\n import org.apache.hbase.thirdparty.com.google.common.cache.CacheLoader;\n import org.apache.hbase.thirdparty.com.google.common.cache.LoadingCache;\n-import org.apache.hbase.thirdparty.com.google.common.collect.Lists;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.Futures;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.ListenableFuture;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.ListeningExecutorService;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.MoreExecutors;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.ThreadFactoryBuilder;\n \n /**\n- * This will find where data for a region is located in HDFS. It ranks\n- * {@link ServerName}'s by the size of the store files they are holding for a\n- * given region.\n- *\n+ * This will find where data for a region is located in HDFS. It ranks {@link ServerName}'s by the\n+ * size of the store files they are holding for a given region.\n  */\n @InterfaceAudience.Private\n-class RegionLocationFinder {\n+class RegionLocationFinder extends Configured {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAwMDk5MQ=="}, "originalCommit": {"oid": "e21cf5f71e1ecdabaa1db5bb580b021af0333287"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc1NzA0MDYyOnYy", "diffSide": "RIGHT", "path": "hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNlQwNToxOToxOFrOI3T4xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNlQwNToxOToxOFrOI3T4xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDg2ODQyMw==", "bodyText": "This comment is odd. Is BalanceService a good name for this? There is no start/stop of this Service?  There is not even a balance method in this BalanceService?", "url": "https://github.com/apache/hbase/pull/2543#discussion_r594868423", "createdAt": "2021-03-16T05:19:18Z", "author": {"login": "saintstack"}, "path": "hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerService.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.balancer;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HDFSBlocksDistribution;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.client.RegionInfo;\n+import org.apache.hadoop.hbase.client.TableDescriptor;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * This is the cluster we want to balance. It provides methods to let us get the information we", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec3e004d6bcc0ab56fbf883b48d60900c131b790"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc1NzA2MjQzOnYy", "diffSide": "RIGHT", "path": "hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionLocationFinder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNlQwNToyOTowOVrOI3UFWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNlQwNzo0MDo1NFrOI3XQrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDg3MTY0MA==", "bodyText": "I thought this class was about finding Region locations. Now I see it is about HDFS block locations per Region... something else altogether. Seems like the class is named incorrectly? Perhaps fix?  RegionHDFSBlockLocationsFinder?", "url": "https://github.com/apache/hbase/pull/2543#discussion_r594871640", "createdAt": "2021-03-16T05:29:09Z", "author": {"login": "saintstack"}, "path": "hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionLocationFinder.java", "diffHunk": "@@ -17,235 +17,187 @@\n  */\n package org.apache.hadoop.hbase.master.balancer;\n \n-import java.io.FileNotFoundException;\n+import com.google.errorprone.annotations.RestrictedApi;\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import java.util.concurrent.Callable;\n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.Executors;\n import java.util.concurrent.TimeUnit;\n-import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.conf.Configured;\n import org.apache.hadoop.hbase.ClusterMetrics;\n import org.apache.hadoop.hbase.HDFSBlocksDistribution;\n import org.apache.hadoop.hbase.ServerName;\n import org.apache.hadoop.hbase.TableName;\n import org.apache.hadoop.hbase.client.RegionInfo;\n import org.apache.hadoop.hbase.client.TableDescriptor;\n-import org.apache.hadoop.hbase.master.MasterServices;\n-import org.apache.hadoop.hbase.master.assignment.AssignmentManager;\n-import org.apache.hadoop.hbase.regionserver.HRegion;\n import org.apache.hadoop.hbase.util.EnvironmentEdgeManager;\n import org.apache.yetus.audience.InterfaceAudience;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+\n import org.apache.hbase.thirdparty.com.google.common.cache.CacheBuilder;\n import org.apache.hbase.thirdparty.com.google.common.cache.CacheLoader;\n import org.apache.hbase.thirdparty.com.google.common.cache.LoadingCache;\n-import org.apache.hbase.thirdparty.com.google.common.collect.Lists;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.Futures;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.ListenableFuture;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.ListeningExecutorService;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.MoreExecutors;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.ThreadFactoryBuilder;\n \n /**\n- * This will find where data for a region is located in HDFS. It ranks\n- * {@link ServerName}'s by the size of the store files they are holding for a\n- * given region.\n- *\n+ * This will find where data for a region is located in HDFS. It ranks {@link ServerName}'s by the\n+ * size of the store files they are holding for a given region.\n  */\n @InterfaceAudience.Private\n-class RegionLocationFinder {\n+class RegionLocationFinder extends Configured {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec3e004d6bcc0ab56fbf883b48d60900c131b790"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDkyMzY5NQ==", "bodyText": "Agree. Let me change the name to better describe what the class wants to do.", "url": "https://github.com/apache/hbase/pull/2543#discussion_r594923695", "createdAt": "2021-03-16T07:40:54Z", "author": {"login": "Apache9"}, "path": "hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/RegionLocationFinder.java", "diffHunk": "@@ -17,235 +17,187 @@\n  */\n package org.apache.hadoop.hbase.master.balancer;\n \n-import java.io.FileNotFoundException;\n+import com.google.errorprone.annotations.RestrictedApi;\n import java.io.IOException;\n import java.util.ArrayList;\n import java.util.Collection;\n+import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n+import java.util.Map;\n import java.util.concurrent.Callable;\n import java.util.concurrent.ExecutionException;\n import java.util.concurrent.Executors;\n import java.util.concurrent.TimeUnit;\n-import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.conf.Configured;\n import org.apache.hadoop.hbase.ClusterMetrics;\n import org.apache.hadoop.hbase.HDFSBlocksDistribution;\n import org.apache.hadoop.hbase.ServerName;\n import org.apache.hadoop.hbase.TableName;\n import org.apache.hadoop.hbase.client.RegionInfo;\n import org.apache.hadoop.hbase.client.TableDescriptor;\n-import org.apache.hadoop.hbase.master.MasterServices;\n-import org.apache.hadoop.hbase.master.assignment.AssignmentManager;\n-import org.apache.hadoop.hbase.regionserver.HRegion;\n import org.apache.hadoop.hbase.util.EnvironmentEdgeManager;\n import org.apache.yetus.audience.InterfaceAudience;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n+\n import org.apache.hbase.thirdparty.com.google.common.cache.CacheBuilder;\n import org.apache.hbase.thirdparty.com.google.common.cache.CacheLoader;\n import org.apache.hbase.thirdparty.com.google.common.cache.LoadingCache;\n-import org.apache.hbase.thirdparty.com.google.common.collect.Lists;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.Futures;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.ListenableFuture;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.ListeningExecutorService;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.MoreExecutors;\n import org.apache.hbase.thirdparty.com.google.common.util.concurrent.ThreadFactoryBuilder;\n \n /**\n- * This will find where data for a region is located in HDFS. It ranks\n- * {@link ServerName}'s by the size of the store files they are holding for a\n- * given region.\n- *\n+ * This will find where data for a region is located in HDFS. It ranks {@link ServerName}'s by the\n+ * size of the store files they are holding for a given region.\n  */\n @InterfaceAudience.Private\n-class RegionLocationFinder {\n+class RegionLocationFinder extends Configured {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDg3MTY0MA=="}, "originalCommit": {"oid": "ec3e004d6bcc0ab56fbf883b48d60900c131b790"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc1NzE1MjkxOnYy", "diffSide": "RIGHT", "path": "hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xNlQwNjowODo0OFrOI3U50w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0xN1QxNzo0ODowN1rOI4oZtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDg4NTA3NQ==", "bodyText": "After reading whole patch I see that this is not a BalancerService but a subset of the MasterSerivces, those methods the Balancer can't do without.\nSuggest the class comment say that.\nThe getAssignedRegions is all assigned Regions on the cluster it seems? Add a bit of javadoc? Ditto for computeHDFSBlockDist...", "url": "https://github.com/apache/hbase/pull/2543#discussion_r594885075", "createdAt": "2021-03-16T06:08:48Z", "author": {"login": "saintstack"}, "path": "hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerService.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.balancer;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HDFSBlocksDistribution;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.client.RegionInfo;\n+import org.apache.hadoop.hbase.client.TableDescriptor;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * This is the cluster we want to balance. It provides methods to let us get the information we\n+ * want.\n+ */\n+@InterfaceAudience.Private\n+public interface BalancerService {\n+\n+  List<RegionInfo> getAssignedRegions();\n+\n+  TableDescriptor getTableDescriptor(TableName tableName) throws IOException;\n+\n+  HDFSBlocksDistribution computeHDFSBlocksDistribution(Configuration conf,\n+    TableDescriptor tableDescriptor, RegionInfo regionInfo) throws IOException;\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec3e004d6bcc0ab56fbf883b48d60900c131b790"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDkyNDM0Mw==", "bodyText": "It is used to provide information which will be used for balancer. So I agree that BalancerService is not a good name. Maybe ClusterInfoRetrivier or ClusterInfoProvider?", "url": "https://github.com/apache/hbase/pull/2543#discussion_r594924343", "createdAt": "2021-03-16T07:42:19Z", "author": {"login": "Apache9"}, "path": "hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerService.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.balancer;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HDFSBlocksDistribution;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.client.RegionInfo;\n+import org.apache.hadoop.hbase.client.TableDescriptor;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * This is the cluster we want to balance. It provides methods to let us get the information we\n+ * want.\n+ */\n+@InterfaceAudience.Private\n+public interface BalancerService {\n+\n+  List<RegionInfo> getAssignedRegions();\n+\n+  TableDescriptor getTableDescriptor(TableName tableName) throws IOException;\n+\n+  HDFSBlocksDistribution computeHDFSBlocksDistribution(Configuration conf,\n+    TableDescriptor tableDescriptor, RegionInfo regionInfo) throws IOException;\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDg4NTA3NQ=="}, "originalCommit": {"oid": "ec3e004d6bcc0ab56fbf883b48d60900c131b790"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NjI1MzEwOA==", "bodyText": "+1 on *Provider... ClusterInfoProvider is good.", "url": "https://github.com/apache/hbase/pull/2543#discussion_r596253108", "createdAt": "2021-03-17T17:48:07Z", "author": {"login": "saintstack"}, "path": "hbase-balancer/src/main/java/org/apache/hadoop/hbase/master/balancer/BalancerService.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.balancer;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HDFSBlocksDistribution;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.client.RegionInfo;\n+import org.apache.hadoop.hbase.client.TableDescriptor;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * This is the cluster we want to balance. It provides methods to let us get the information we\n+ * want.\n+ */\n+@InterfaceAudience.Private\n+public interface BalancerService {\n+\n+  List<RegionInfo> getAssignedRegions();\n+\n+  TableDescriptor getTableDescriptor(TableName tableName) throws IOException;\n+\n+  HDFSBlocksDistribution computeHDFSBlocksDistribution(Configuration conf,\n+    TableDescriptor tableDescriptor, RegionInfo regionInfo) throws IOException;\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5NDg4NTA3NQ=="}, "originalCommit": {"oid": "ec3e004d6bcc0ab56fbf883b48d60900c131b790"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2429, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}