{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NjM5MDUy", "number": 1860, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxNDoxMVrOEExmrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyNDo1OFrOEGCXQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDQyNDc5OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/OutputSink.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxNDoxMVrOGim8xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxNDoxMVrOGim8xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0MjkxNw==", "bodyText": "Same", "url": "https://github.com/apache/hbase/pull/1860#discussion_r438942917", "createdAt": "2020-06-11T17:14:11Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/OutputSink.java", "diffHunk": "@@ -129,10 +138,13 @@ long getTotalSkippedEdits() {\n \n   /**\n    * @param buffer A buffer of some number of edits for a given region.\n+   * @param status MonitoredTask instance to capture WAL splitting\n+   * @throws IOException For any IO errors\n    */\n-  abstract void append(EntryBuffers.RegionEntryBuffer buffer) throws IOException;\n+  abstract void append(EntryBuffers.RegionEntryBuffer buffer, MonitoredTask status)\n+    throws IOException;\n \n-  abstract List<Path> close() throws IOException;\n+  abstract List<Path> close(MonitoredTask status) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c6f6fa5f2a6ee35e882a8d1206d03ef1c1320e8"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDQyNjgwOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/RecoveredEditsOutputSink.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxNDo1MlrOGim-Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxNDo1MlrOGim-Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0MzI0Nw==", "bodyText": "Same", "url": "https://github.com/apache/hbase/pull/1860#discussion_r438943247", "createdAt": "2020-06-11T17:14:52Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/RecoveredEditsOutputSink.java", "diffHunk": "@@ -52,15 +53,16 @@ public RecoveredEditsOutputSink(WALSplitter walSplitter,\n   }\n \n   @Override\n-  public void append(EntryBuffers.RegionEntryBuffer buffer) throws IOException {\n+  public void append(EntryBuffers.RegionEntryBuffer buffer, MonitoredTask status)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c6f6fa5f2a6ee35e882a8d1206d03ef1c1320e8"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDQyODAxOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/RecoveredEditsOutputSink.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxNTowOVrOGim-vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxNTowOVrOGim-vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0MzQyMg==", "bodyText": "Same", "url": "https://github.com/apache/hbase/pull/1860#discussion_r438943422", "createdAt": "2020-06-11T17:15:09Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/RecoveredEditsOutputSink.java", "diffHunk": "@@ -86,26 +88,27 @@ private RecoveredEditsWriter getRecoveredEditsWriter(TableName tableName, byte[]\n   }\n \n   @Override\n-  public List<Path> close() throws IOException {\n+  public List<Path> close(MonitoredTask status) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c6f6fa5f2a6ee35e882a8d1206d03ef1c1320e8"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDQyODYxOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/RecoveredEditsOutputSink.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxNToxOFrOGim_Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxNToxOFrOGim_Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0MzUxNQ==", "bodyText": "Same", "url": "https://github.com/apache/hbase/pull/1860#discussion_r438943515", "createdAt": "2020-06-11T17:15:18Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/RecoveredEditsOutputSink.java", "diffHunk": "@@ -86,26 +88,27 @@ private RecoveredEditsWriter getRecoveredEditsWriter(TableName tableName, byte[]\n   }\n \n   @Override\n-  public List<Path> close() throws IOException {\n+  public List<Path> close(MonitoredTask status) throws IOException {\n     boolean isSuccessful = true;\n     try {\n-      isSuccessful &= finishWriterThreads();\n+      isSuccessful = finishWriterThreads();\n     } finally {\n-      isSuccessful &= closeWriters();\n+      isSuccessful &= closeWriters(status);\n     }\n     return isSuccessful ? splits : null;\n   }\n \n   /**\n    * Close all of the output streams.\n    *\n+   * @param status MonitoredTask instance to capture WAL splitting\n    * @return true when there is no error.\n    */\n-  private boolean closeWriters() throws IOException {\n+  private boolean closeWriters(MonitoredTask status) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c6f6fa5f2a6ee35e882a8d1206d03ef1c1320e8"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDQzMzQzOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/BoundedRecoveredEditsOutputSink.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxNjo1NVrOGinCaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxNjo1NVrOGinCaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NDM2Mw==", "bodyText": "Does this context have access to the OutputSink's MonitoredTask field? Can we do that instead, so we don't have to change these method signatures?", "url": "https://github.com/apache/hbase/pull/1860#discussion_r438944363", "createdAt": "2020-06-11T17:16:55Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/BoundedRecoveredEditsOutputSink.java", "diffHunk": "@@ -83,25 +85,26 @@ public void append(EntryBuffers.RegionEntryBuffer buffer) throws IOException {\n   }\n \n   @Override\n-  public List<Path> close() throws IOException {\n+  public List<Path> close(MonitoredTask status) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c6f6fa5f2a6ee35e882a8d1206d03ef1c1320e8"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNDQzMzg2OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/BoundedRecoveredEditsOutputSink.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxNzowNFrOGinCuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzoxNzowNFrOGinCuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk0NDQ0MQ==", "bodyText": "Does this context have access to the OutputSink's MonitoredTask field? Can we do that instead, so we don't have to change these method signatures?", "url": "https://github.com/apache/hbase/pull/1860#discussion_r438944441", "createdAt": "2020-06-11T17:17:04Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/BoundedRecoveredEditsOutputSink.java", "diffHunk": "@@ -57,7 +58,8 @@ public BoundedRecoveredEditsOutputSink(WALSplitter walSplitter,\n   }\n \n   @Override\n-  public void append(EntryBuffers.RegionEntryBuffer buffer) throws IOException {\n+  public void append(EntryBuffers.RegionEntryBuffer buffer, MonitoredTask status)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c6f6fa5f2a6ee35e882a8d1206d03ef1c1320e8"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzUwMDU1OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/BoundedRecoveredEditsOutputSink.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjo0MToyNlrOGkkF6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjo0MToyNlrOGkkF6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5MzI1Ng==", "bodyText": "Will take care of removal of this import.", "url": "https://github.com/apache/hbase/pull/1860#discussion_r440993256", "createdAt": "2020-06-16T16:41:26Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/BoundedRecoveredEditsOutputSink.java", "diffHunk": "@@ -29,6 +29,7 @@\n import java.util.concurrent.atomic.AtomicInteger;\n \n import org.apache.hadoop.fs.Path;\n+import org.apache.hadoop.hbase.monitoring.MonitoredTask;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3d2ea2b416eb5dda8f50679ee37d73d45083297"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzUwMTU1OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/BoundedRecoveredHFilesOutputSink.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjo0MTo0MlrOGkkGjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNjo0MTo0MlrOGkkGjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5MzQyMg==", "bodyText": "same here", "url": "https://github.com/apache/hbase/pull/1860#discussion_r440993422", "createdAt": "2020-06-16T16:41:42Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/BoundedRecoveredHFilesOutputSink.java", "diffHunk": "@@ -41,6 +41,7 @@\n import org.apache.hadoop.hbase.io.hfile.CacheConfig;\n import org.apache.hadoop.hbase.io.hfile.HFileContext;\n import org.apache.hadoop.hbase.io.hfile.HFileContextBuilder;\n+import org.apache.hadoop.hbase.monitoring.MonitoredTask;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3d2ea2b416eb5dda8f50679ee37d73d45083297"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NzY1NjM0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/AbstractRecoveredEditsOutputSink.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoyNDo1OFrOGklrlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxODoyNzoxOVrOGkoCGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxOTI4Nw==", "bodyText": "Missing null check here?", "url": "https://github.com/apache/hbase/pull/1860#discussion_r441019287", "createdAt": "2020-06-16T17:24:58Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/AbstractRecoveredEditsOutputSink.java", "diffHunk": "@@ -233,7 +251,10 @@ void writeRegionEntries(List<WAL.Entry> entries) throws IOException {\n         incrementNanoTime(System.nanoTime() - startTime);\n       } catch (IOException e) {\n         e = e instanceof RemoteException ? ((RemoteException) e).unwrapRemoteException() : e;\n-        LOG.error(HBaseMarkers.FATAL, \"Got while writing log entry to log\", e);\n+        final String errorMsg =\n+          \"Failed to write log entry \" + currentWalEntry.toString() + \" to log\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3d2ea2b416eb5dda8f50679ee37d73d45083297"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1MTE0Mg==", "bodyText": "IOException is thrown by writer.append(logEntry) and when we reach there, we are quite certain that currentWalEntry will be assigned some value for sure.", "url": "https://github.com/apache/hbase/pull/1860#discussion_r441051142", "createdAt": "2020-06-16T18:18:22Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/AbstractRecoveredEditsOutputSink.java", "diffHunk": "@@ -233,7 +251,10 @@ void writeRegionEntries(List<WAL.Entry> entries) throws IOException {\n         incrementNanoTime(System.nanoTime() - startTime);\n       } catch (IOException e) {\n         e = e instanceof RemoteException ? ((RemoteException) e).unwrapRemoteException() : e;\n-        LOG.error(HBaseMarkers.FATAL, \"Got while writing log entry to log\", e);\n+        final String errorMsg =\n+          \"Failed to write log entry \" + currentWalEntry.toString() + \" to log\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxOTI4Nw=="}, "originalCommit": {"oid": "b3d2ea2b416eb5dda8f50679ee37d73d45083297"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTA1NzgxOQ==", "bodyText": "But this brings a good point, Exception catch should rather be at a place where it is needed, entire block doesn't need to be within try/catch if only single line of code is throwing specific Exception. Let me take care of this.", "url": "https://github.com/apache/hbase/pull/1860#discussion_r441057819", "createdAt": "2020-06-16T18:27:19Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/wal/AbstractRecoveredEditsOutputSink.java", "diffHunk": "@@ -233,7 +251,10 @@ void writeRegionEntries(List<WAL.Entry> entries) throws IOException {\n         incrementNanoTime(System.nanoTime() - startTime);\n       } catch (IOException e) {\n         e = e instanceof RemoteException ? ((RemoteException) e).unwrapRemoteException() : e;\n-        LOG.error(HBaseMarkers.FATAL, \"Got while writing log entry to log\", e);\n+        final String errorMsg =\n+          \"Failed to write log entry \" + currentWalEntry.toString() + \" to log\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxOTI4Nw=="}, "originalCommit": {"oid": "b3d2ea2b416eb5dda8f50679ee37d73d45083297"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2945, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}