{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMzE2ODQ0", "number": 2657, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDo0ODoxOVrOE5zYcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwOTowMTowNVrOFBaB8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDQ2MTMwOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDo0ODoxOVrOH0f_kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOToxMToyNVrOH0rHLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxMjE3OQ==", "bodyText": "Why this change?", "url": "https://github.com/apache/hbase/pull/2657#discussion_r524812179", "createdAt": "2020-11-17T00:48:19Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java", "diffHunk": "@@ -2440,6 +2440,12 @@ public ClearDeadServersResponse clearDeadServers(RpcController controller,\n         Set<Address> clearedServers = new HashSet<>();\n         for (HBaseProtos.ServerName pbServer : request.getServerNameList()) {\n           ServerName server = ProtobufUtil.toServerName(pbServer);\n+          final boolean deadInProcess = master.getServerManager().isDeadServersInProgress(server);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71b3b5e6be2fab78761ef34e230a01f4d83c96cc"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk5NDM0OA==", "bodyText": "See code here\n\nWe need to check where region server with special server name is in processing, so i add such a method", "url": "https://github.com/apache/hbase/pull/2657#discussion_r524994348", "createdAt": "2020-11-17T09:11:25Z", "author": {"login": "yuqi1129"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java", "diffHunk": "@@ -2440,6 +2440,12 @@ public ClearDeadServersResponse clearDeadServers(RpcController controller,\n         Set<Address> clearedServers = new HashSet<>();\n         for (HBaseProtos.ServerName pbServer : request.getServerNameList()) {\n           ServerName server = ProtobufUtil.toServerName(pbServer);\n+          final boolean deadInProcess = master.getServerManager().isDeadServersInProgress(server);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxMjE3OQ=="}, "originalCommit": {"oid": "71b3b5e6be2fab78761ef34e230a01f4d83c96cc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDQ2MjE1OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMDo0ODo0M1rOH0gAEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwOToxMTozNlrOH0rHnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxMjMwNQ==", "bodyText": "Why add this method?", "url": "https://github.com/apache/hbase/pull/2657#discussion_r524812305", "createdAt": "2020-11-17T00:48:43Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java", "diffHunk": "@@ -504,7 +506,21 @@ public DeadServer getDeadServers() {\n    * @return true if any RS are being processed as dead, false if not\n    */\n   public boolean areDeadServersInProgress() {\n-    return this.deadservers.areDeadServersInProgress();\n+    try {\n+      return master.getProcedures().stream().anyMatch(p -> p instanceof ServerCrashProcedure);\n+    } catch (IOException e) {\n+      throw new RuntimeException(e);\n+    }\n+  }\n+\n+  public boolean isDeadServersInProgress(ServerName serverName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71b3b5e6be2fab78761ef34e230a01f4d83c96cc"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk5NDQ2MA==", "bodyText": "see above", "url": "https://github.com/apache/hbase/pull/2657#discussion_r524994460", "createdAt": "2020-11-17T09:11:36Z", "author": {"login": "yuqi1129"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java", "diffHunk": "@@ -504,7 +506,21 @@ public DeadServer getDeadServers() {\n    * @return true if any RS are being processed as dead, false if not\n    */\n   public boolean areDeadServersInProgress() {\n-    return this.deadservers.areDeadServersInProgress();\n+    try {\n+      return master.getProcedures().stream().anyMatch(p -> p instanceof ServerCrashProcedure);\n+    } catch (IOException e) {\n+      throw new RuntimeException(e);\n+    }\n+  }\n+\n+  public boolean isDeadServersInProgress(ServerName serverName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgxMjMwNQ=="}, "originalCommit": {"oid": "71b3b5e6be2fab78761ef34e230a01f4d83c96cc"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTcyNTU2OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwMToyODowN1rOH1SOsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNDoyNDoyOVrOH1bZ3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYzNTI1MQ==", "bodyText": "You can filter the SCP here too? I thought no need to introduce new method. Please keep the code simple. Thanks.", "url": "https://github.com/apache/hbase/pull/2657#discussion_r525635251", "createdAt": "2020-11-18T01:28:07Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java", "diffHunk": "@@ -2440,6 +2440,12 @@ public ClearDeadServersResponse clearDeadServers(RpcController controller,\n         Set<Address> clearedServers = new HashSet<>();\n         for (HBaseProtos.ServerName pbServer : request.getServerNameList()) {\n           ServerName server = ProtobufUtil.toServerName(pbServer);\n+          final boolean deadInProcess = master.getServerManager().isDeadServersInProgress(server);\n+\n+          if (!deadInProcess) {\n+            throw new RuntimeException(String.format(\"Dead server '%s' is not 'dead' in fact...\", server));\n+          }\n+\n           if (!deadServer.removeDeadServer(server)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71b3b5e6be2fab78761ef34e230a01f4d83c96cc"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTc4NTU2NQ==", "bodyText": "OK, Thanks for your suggestion", "url": "https://github.com/apache/hbase/pull/2657#discussion_r525785565", "createdAt": "2020-11-18T04:24:29Z", "author": {"login": "yuqi1129"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java", "diffHunk": "@@ -2440,6 +2440,12 @@ public ClearDeadServersResponse clearDeadServers(RpcController controller,\n         Set<Address> clearedServers = new HashSet<>();\n         for (HBaseProtos.ServerName pbServer : request.getServerNameList()) {\n           ServerName server = ProtobufUtil.toServerName(pbServer);\n+          final boolean deadInProcess = master.getServerManager().isDeadServersInProgress(server);\n+\n+          if (!deadInProcess) {\n+            throw new RuntimeException(String.format(\"Dead server '%s' is not 'dead' in fact...\", server));\n+          }\n+\n           if (!deadServer.removeDeadServer(server)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYzNTI1MQ=="}, "originalCommit": {"oid": "71b3b5e6be2fab78761ef34e230a01f4d83c96cc"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjE4MzM4OnYy", "diffSide": "LEFT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/DeadServer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoxMjozNVrOH_CVZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjoxMjozNVrOH_CVZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2MDU4Mg==", "bodyText": "These codes are not only set the server be dead, but also set it be processing.\nBut the changed codes only set it be dead.\nAs a result ,when calling ServerManager.expireServer() method, the server is firstly set be dead by moveFromOnlineToDeadServers(), but the SCP is submitted afterwards.\nSo this patch made a diff from the origin codes when calling ServerManager.areDeadServersInProgress(), because the new codes has a little delay time of submit and execute the SCP procedure.", "url": "https://github.com/apache/hbase/pull/2657#discussion_r535860582", "createdAt": "2020-12-04T06:12:35Z", "author": {"login": "sunhelly"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/DeadServer.java", "diffHunk": "@@ -96,29 +75,6 @@ synchronized boolean areDeadServersInProgress() {\n    */\n   synchronized void putIfAbsent(ServerName sn) {\n     this.deadServers.putIfAbsent(sn, EnvironmentEdgeManager.currentTime());\n-    processing(sn);\n-  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95031fb720cab6296eaf1441065ae8580f98528b"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3MDE5Mzc4OnYy", "diffSide": "LEFT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDeadServer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwOTowMTowNVrOIAHbjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQwOTowMjowNVrOIAHcfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjk5MjY1Mw==", "bodyText": "This test case should assert false, because the SCP has been done completely.", "url": "https://github.com/apache/hbase/pull/2657#discussion_r536992653", "createdAt": "2020-12-06T09:01:05Z", "author": {"login": "sunhelly"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDeadServer.java", "diffHunk": "@@ -104,15 +93,15 @@ public static void tearDownAfterClass() throws Exception {\n   }\n \n   @Test\n-  public void testCrashProcedureReplay() {\n+  public void testCrashProcedureReplay() throws IOException {\n     HMaster master = TEST_UTIL.getHBaseCluster().getMaster();\n     final ProcedureExecutor<MasterProcedureEnv> pExecutor = master.getMasterProcedureExecutor();\n     ServerCrashProcedure proc = new ServerCrashProcedure(\n       pExecutor.getEnvironment(), hostname123, false, false);\n \n     ProcedureTestingUtility.submitAndWait(pExecutor, proc);\n \n-    assertFalse(master.getServerManager().getDeadServers().areDeadServersInProgress());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95031fb720cab6296eaf1441065ae8580f98528b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjk5Mjg5NQ==", "bodyText": "@Apache9 @yuqi1129", "url": "https://github.com/apache/hbase/pull/2657#discussion_r536992895", "createdAt": "2020-12-06T09:02:05Z", "author": {"login": "sunhelly"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestDeadServer.java", "diffHunk": "@@ -104,15 +93,15 @@ public static void tearDownAfterClass() throws Exception {\n   }\n \n   @Test\n-  public void testCrashProcedureReplay() {\n+  public void testCrashProcedureReplay() throws IOException {\n     HMaster master = TEST_UTIL.getHBaseCluster().getMaster();\n     final ProcedureExecutor<MasterProcedureEnv> pExecutor = master.getMasterProcedureExecutor();\n     ServerCrashProcedure proc = new ServerCrashProcedure(\n       pExecutor.getEnvironment(), hostname123, false, false);\n \n     ProcedureTestingUtility.submitAndWait(pExecutor, proc);\n \n-    assertFalse(master.getServerManager().getDeadServers().areDeadServersInProgress());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjk5MjY1Mw=="}, "originalCommit": {"oid": "95031fb720cab6296eaf1441065ae8580f98528b"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2388, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}