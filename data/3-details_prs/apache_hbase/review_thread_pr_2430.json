{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMTM3MzQ1", "number": 2430, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwOToxMDozNlrOElkMyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwOToxOTo1OFrOElkaMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODI1ODY3OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwOToxMDozNlrOHVGyYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMDo0ODoyNVrOHWRI9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5MzM0Nw==", "bodyText": "Can we keep all accessors to ZKWatcher protected or at least, package private? In some cases, custom HBaseReplicationEndpoint implementations may need to access those.", "url": "https://github.com/apache/hbase/pull/2430#discussion_r491893347", "createdAt": "2020-09-21T09:10:36Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -63,7 +121,7 @@ protected synchronized void disconnect() {\n    * A private method used to re-establish a zookeeper session with a peer cluster.\n    * @param ke\n    */\n-  protected void reconnect(KeeperException ke) {\n+  private void reconnect(KeeperException ke) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96204882cf19bfede9862f36a05fbaeb7424426f"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkxMDY2OQ==", "bodyText": "This class is IA.Private, so it is not expected to be used by users. You can stop someone change this method this time but you can not stop them all the time. If you think this class should be used by users  so they can implement replication endpoint easier, let's promote this class to IA.LimitedPrivate?", "url": "https://github.com/apache/hbase/pull/2430#discussion_r491910669", "createdAt": "2020-09-21T09:41:00Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -63,7 +121,7 @@ protected synchronized void disconnect() {\n    * A private method used to re-establish a zookeeper session with a peer cluster.\n    * @param ke\n    */\n-  protected void reconnect(KeeperException ke) {\n+  private void reconnect(KeeperException ke) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5MzM0Nw=="}, "originalCommit": {"oid": "96204882cf19bfede9862f36a05fbaeb7424426f"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTkyOTI1Ng==", "bodyText": "Now only ReplicationEndpoint is IA.LimitedPrivate. So if one user want to use these logics, it is better to copy these code to their implementation.", "url": "https://github.com/apache/hbase/pull/2430#discussion_r491929256", "createdAt": "2020-09-21T10:11:04Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -63,7 +121,7 @@ protected synchronized void disconnect() {\n    * A private method used to re-establish a zookeeper session with a peer cluster.\n    * @param ke\n    */\n-  protected void reconnect(KeeperException ke) {\n+  private void reconnect(KeeperException ke) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5MzM0Nw=="}, "originalCommit": {"oid": "96204882cf19bfede9862f36a05fbaeb7424426f"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU4ODYyNw==", "bodyText": "So if one user want to use these logics, it is better to copy these code to their implementation.\n\nIt's not that simple, as it would actually require reimplement all other methods currently referring these private ones, leading to a reimplementation of the whole class.\nI agree with @Apache9 , if we are to guarantee a certain level of accessibility here, we should rather discuss about the interfaces audiences. I guess this would be rather a topic for a separate jira/PR, don't want to deviate this current one from it's original purpose.", "url": "https://github.com/apache/hbase/pull/2430#discussion_r492588627", "createdAt": "2020-09-22T09:15:51Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -63,7 +121,7 @@ protected synchronized void disconnect() {\n    * A private method used to re-establish a zookeeper session with a peer cluster.\n    * @param ke\n    */\n-  protected void reconnect(KeeperException ke) {\n+  private void reconnect(KeeperException ke) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5MzM0Nw=="}, "originalCommit": {"oid": "96204882cf19bfede9862f36a05fbaeb7424426f"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzExMTU0MA==", "bodyText": "There is a issue about this, see HBASE-15982.", "url": "https://github.com/apache/hbase/pull/2430#discussion_r493111540", "createdAt": "2020-09-23T00:48:25Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -63,7 +121,7 @@ protected synchronized void disconnect() {\n    * A private method used to re-establish a zookeeper session with a peer cluster.\n    * @param ke\n    */\n-  protected void reconnect(KeeperException ke) {\n+  private void reconnect(KeeperException ke) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5MzM0Nw=="}, "originalCommit": {"oid": "96204882cf19bfede9862f36a05fbaeb7424426f"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3ODI5Mjk4OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwOToxOTo1OFrOHVHG8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwOToxOTo1OFrOHVHG8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTg5ODYxMQ==", "bodyText": "Same as my previous comment. Would be nice to allow for custom implementations to access this method.", "url": "https://github.com/apache/hbase/pull/2430#discussion_r491898611", "createdAt": "2020-09-21T09:19:58Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -150,13 +202,19 @@ public boolean isAborted() {\n \n   /**\n    * Get the list of all the region servers from the specified peer\n-   * @param zkw zk connection to use\n+   *\n    * @return list of region server addresses or an empty list if the slave is unavailable\n    */\n-  protected static List<ServerName> fetchSlavesAddresses(ZKWatcher zkw)\n-      throws KeeperException {\n-    List<String> children = ZKUtil.listChildrenAndWatchForNewChildren(zkw,\n-            zkw.getZNodePaths().rsZNode);\n+  private List<ServerName> fetchSlavesAddresses() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96204882cf19bfede9862f36a05fbaeb7424426f"}, "originalPosition": 129}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2496, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}