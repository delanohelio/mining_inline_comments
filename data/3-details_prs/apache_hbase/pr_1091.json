{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3Mjc2NTU3", "number": 1091, "title": "HBASE-23731: De-flake TestFromClientSide", "bodyText": "There were a couple of issues.\n\n\nThere was a leak of a file descriptor for hbck lock file. This\nwas contributing to all the \"ConnectionRefused\" stack traces since\nit was trying to renew lease for an already expired mini dfs cluster.\nThis issue was there for a while, just that we noticed it now.\n\n\nAfter upgrade to JUnit 4.13, it looks like the behavior for test\ntimeouts has changed. Earlier the timeout seems to have applied for\neach parameterized run, but now it looks like it is applied across\nall the runs.\n\n\nThis patch fixes both the issues.", "createdAt": "2020-01-27T00:11:25Z", "url": "https://github.com/apache/hbase/pull/1091", "merged": true, "mergeCommit": {"oid": "21be4099638b745905a95d43a529b4bd1e0d3834"}, "closed": true, "closedAt": "2020-01-27T20:37:03Z", "author": {"login": "bharathv"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-VAFeABqjI5ODA0NzE3NjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-hMojAFqTM0ODg4NjM1Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d762e1cc05a4dc3b4f539018bb1d0e76bc4a50cb", "author": {"user": {"login": "bharathv", "name": "Bharath Vissapragada"}}, "url": "https://github.com/apache/hbase/commit/d762e1cc05a4dc3b4f539018bb1d0e76bc4a50cb", "committedDate": "2020-01-27T00:08:39Z", "message": "HBASE-23731: De-flake TestFromClientSide\n\nThere were a couple of issues.\n\n- There was a leak of a file descriptor for hbck lock file. This\nwas contributing to all the \"ConnectionRefused\" stack traces since\nit was trying to renew lease for an already expired mini dfs cluster.\nThis issue was there for a while, just that we noticed it now.\n\n- After upgrade to JUnit 4.13, it looks like the behavior for test\ntimeouts has changed. Earlier the timeout seems to have applied for\neach parameterized run, but now it looks like it is applied across\nall the runs.\n\nThis patch fixes both the issues."}, "afterCommit": {"oid": "56b798cfe4007557a7d3dc43966f0a4699b4975b", "author": {"user": {"login": "bharathv", "name": "Bharath Vissapragada"}}, "url": "https://github.com/apache/hbase/commit/56b798cfe4007557a7d3dc43966f0a4699b4975b", "committedDate": "2020-01-27T04:25:30Z", "message": "HBASE-23731: De-flake TestFromClientSide\n\nThere were a couple of issues.\n\n- There was a leak of a file descriptor for hbck lock file. This\nwas contributing to all the \"ConnectionRefused\" stack traces since\nit was trying to renew lease for an already expired mini dfs cluster.\nThis issue was there for a while, just that we noticed it now.\n\n- After upgrade to JUnit 4.13, it looks like the behavior for test\ntimeouts has changed. Earlier the timeout seems to have applied for\neach parameterized run, but now it looks like it is applied across\nall the runs.\n\nThis patch fixes both the issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NDQ2MDUz", "url": "https://github.com/apache/hbase/pull/1091#pullrequestreview-348446053", "createdAt": "2020-01-27T05:32:54Z", "commit": {"oid": "56b798cfe4007557a7d3dc43966f0a4699b4975b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwNTozMjo1NFrOFh4P2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QwNTozNjoxN1rOFh4Rig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2ODg4OQ==", "bodyText": "FYI, isTestParameterized is name of a method, not a variable. testParameterized would be the variable name.", "url": "https://github.com/apache/hbase/pull/1091#discussion_r371068889", "createdAt": "2020-01-27T05:32:54Z", "author": {"login": "saintstack"}, "path": "hbase-common/src/test/java/org/apache/hadoop/hbase/HBaseClassTestRule.java", "diffHunk": "@@ -82,6 +99,49 @@ private static long getTimeoutInSeconds(Class<?> clazz) {\n         clazz.getName() + \" does not have SmallTests/MediumTests/LargeTests in @Category\");\n   }\n \n+  /**\n+   * @param clazz Test class that is running.\n+   * @return the number of parameters for this given test class. If the test is not parameterized or\n+   *   if there is any issue determining the number of parameters, returns 1.\n+   */\n+  private static int getNumParameters(Class<?> clazz) {\n+    RunWith[] runWiths = clazz.getAnnotationsByType(RunWith.class);\n+    boolean isTestParameterized = runWiths != null && Arrays.stream(runWiths).anyMatch(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56b798cfe4007557a7d3dc43966f0a4699b4975b"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2OTAzMg==", "bodyText": "Can you make a test for this?", "url": "https://github.com/apache/hbase/pull/1091#discussion_r371069032", "createdAt": "2020-01-27T05:33:54Z", "author": {"login": "saintstack"}, "path": "hbase-common/src/test/java/org/apache/hadoop/hbase/HBaseClassTestRule.java", "diffHunk": "@@ -82,6 +99,49 @@ private static long getTimeoutInSeconds(Class<?> clazz) {\n         clazz.getName() + \" does not have SmallTests/MediumTests/LargeTests in @Category\");\n   }\n \n+  /**\n+   * @param clazz Test class that is running.\n+   * @return the number of parameters for this given test class. If the test is not parameterized or\n+   *   if there is any issue determining the number of parameters, returns 1.\n+   */\n+  private static int getNumParameters(Class<?> clazz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56b798cfe4007557a7d3dc43966f0a4699b4975b"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTA2OTMyMg==", "bodyText": "Style nit, rather than have an if with a big indented clause, I'd avoid the indent by testing for the opposite case and just doing an early return if succeeds -- especially when near the opening of a method. No biggie. Just a consideration for future.", "url": "https://github.com/apache/hbase/pull/1091#discussion_r371069322", "createdAt": "2020-01-27T05:36:17Z", "author": {"login": "saintstack"}, "path": "hbase-common/src/test/java/org/apache/hadoop/hbase/HBaseClassTestRule.java", "diffHunk": "@@ -82,6 +99,49 @@ private static long getTimeoutInSeconds(Class<?> clazz) {\n         clazz.getName() + \" does not have SmallTests/MediumTests/LargeTests in @Category\");\n   }\n \n+  /**\n+   * @param clazz Test class that is running.\n+   * @return the number of parameters for this given test class. If the test is not parameterized or\n+   *   if there is any issue determining the number of parameters, returns 1.\n+   */\n+  private static int getNumParameters(Class<?> clazz) {\n+    RunWith[] runWiths = clazz.getAnnotationsByType(RunWith.class);\n+    boolean isTestParameterized = runWiths != null && Arrays.stream(runWiths).anyMatch(\n+      (r) -> r.value().equals(Parameterized.class));\n+    if (isTestParameterized) {\n+      for (Method method : clazz.getMethods()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56b798cfe4007557a7d3dc43966f0a4699b4975b"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NzcyNDQ1", "url": "https://github.com/apache/hbase/pull/1091#pullrequestreview-348772445", "createdAt": "2020-01-27T15:55:37Z", "commit": {"oid": "bcc237d965f2ed5d66bcc0975523f6f55bc8c2a6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTo1NTozN1rOFiHz_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTo1NTozN1rOFiHz_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMyMzkwMA==", "bodyText": "NIT: Would it be better to split this one into three separate tests according to their categorization?\nNIT: Better put the Test annotation on a separate line.", "url": "https://github.com/apache/hbase/pull/1091#discussion_r371323900", "createdAt": "2020-01-27T15:55:37Z", "author": {"login": "HorizonNet"}, "path": "hbase-common/src/test/java/org/apache/hadoop/hbase/TestHBaseClassTestRule.java", "diffHunk": "@@ -0,0 +1,144 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase;\n+\n+import static junit.framework.TestCase.assertEquals;\n+import java.util.Arrays;\n+import java.util.Collection;\n+import java.util.List;\n+import org.apache.hadoop.hbase.testclassification.SmallTests;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Parameterized;\n+import org.junit.runners.Parameterized.Parameters;\n+import org.apache.hbase.thirdparty.com.google.common.collect.Iterables;\n+\n+/**\n+ * Tests HBaseClassTestRule.\n+ */\n+@Category(SmallTests.class)\n+public class TestHBaseClassTestRule {\n+\n+  @ClassRule\n+  public static final HBaseClassTestRule CLASS_RULE = HBaseClassTestRule.forClass(\n+      TestHBaseClassTestRule.class);\n+\n+  // Test input classes of various kinds.\n+  private static class NonParameterizedClass {\n+    void dummy() {\n+    }\n+    int dummy(int a) {\n+      return 0;\n+    }\n+  }\n+\n+  @RunWith(Parameterized.class)\n+  private static class ParameterizedClassWithNoParametersMethod {\n+    void dummy() {\n+    }\n+  }\n+\n+  @RunWith(Parameterized.class)\n+  private static class InValidParameterizedClass {\n+    // Not valid because parameters method is private.\n+    @Parameters\n+    private static List<Object> parameters() {\n+      return Arrays.asList(1, 2, 3, 4);\n+    }\n+    int dummy(int a) {\n+      return 0;\n+    }\n+  }\n+\n+  @RunWith(Parameterized.class)\n+  private static class ValidParameterizedClass1 {\n+    @Parameters\n+    public static List<Object> parameters() {\n+      return Arrays.asList(1, 2, 3, 4, 5);\n+    }\n+    int dummy(int a) {\n+      return 0;\n+    }\n+  }\n+\n+  @RunWith(Parameterized.class)\n+  private static class ValidParameterizedClass2 {\n+    @Parameters\n+    public static Object[] parameters() {\n+      return new Integer[] {1, 2, 3, 4, 5, 6};\n+    }\n+  }\n+\n+  @RunWith(Parameterized.class)\n+  private static class ValidParameterizedClass3 {\n+    @Parameters\n+    public static Iterable<Integer> parameters() {\n+      return Arrays.asList(1, 2, 3, 4, 5, 6, 7);\n+    }\n+  }\n+\n+  @RunWith(Parameterized.class)\n+  private static class ValidParameterizedClass4 {\n+    @Parameters\n+    public static Collection<Integer> parameters() {\n+      return Arrays.asList(1, 2, 3, 4, 5, 6, 7, 8, 9);\n+    }\n+  }\n+\n+\n+  @RunWith(Parameterized.class)\n+  private static class ExtendedParameterizedClass1 extends ValidParameterizedClass1 {\n+    // Should be inferred from the parent class.\n+    int dummy2(int a) {\n+      return 0;\n+    }\n+  }\n+\n+  @RunWith(Parameterized.class)\n+  private static class ExtendedParameterizedClass2 extends ValidParameterizedClass1 {\n+    // Should override the parent parameters class.\n+    @Parameters\n+    public static List<Object> parameters() {\n+      return Arrays.asList(1, 2, 3);\n+    }\n+  }\n+\n+  @Test public void testNumParameters() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcc237d965f2ed5d66bcc0975523f6f55bc8c2a6"}, "originalPosition": 123}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4ODM2NTU0", "url": "https://github.com/apache/hbase/pull/1091#pullrequestreview-348836554", "createdAt": "2020-01-27T17:19:33Z", "commit": {"oid": "bcc237d965f2ed5d66bcc0975523f6f55bc8c2a6"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c1e6ea9c5665bf8fefea74e0120740447324fa8", "author": {"user": {"login": "bharathv", "name": "Bharath Vissapragada"}}, "url": "https://github.com/apache/hbase/commit/7c1e6ea9c5665bf8fefea74e0120740447324fa8", "committedDate": "2020-01-27T17:24:58Z", "message": "HBASE-23731: De-flake TestFromClientSide\n\nThere were a couple of issues.\n\n- There was a leak of a file descriptor for hbck lock file. This\nwas contributing to all the \"ConnectionRefused\" stack traces since\nit was trying to renew lease for an already expired mini dfs cluster.\nThis issue was there for a while, just that we noticed it now.\n\n- After upgrade to JUnit 4.13, it looks like the behavior for test\ntimeouts has changed. Earlier the timeout seems to have applied for\neach parameterized run, but now it looks like it is applied across\nall the runs.\n\nThis patch fixes both the issues."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bcc237d965f2ed5d66bcc0975523f6f55bc8c2a6", "author": {"user": {"login": "bharathv", "name": "Bharath Vissapragada"}}, "url": "https://github.com/apache/hbase/commit/bcc237d965f2ed5d66bcc0975523f6f55bc8c2a6", "committedDate": "2020-01-27T08:44:49Z", "message": "Address review comments from Stack."}, "afterCommit": {"oid": "7c1e6ea9c5665bf8fefea74e0120740447324fa8", "author": {"user": {"login": "bharathv", "name": "Bharath Vissapragada"}}, "url": "https://github.com/apache/hbase/commit/7c1e6ea9c5665bf8fefea74e0120740447324fa8", "committedDate": "2020-01-27T17:24:58Z", "message": "HBASE-23731: De-flake TestFromClientSide\n\nThere were a couple of issues.\n\n- There was a leak of a file descriptor for hbck lock file. This\nwas contributing to all the \"ConnectionRefused\" stack traces since\nit was trying to renew lease for an already expired mini dfs cluster.\nThis issue was there for a while, just that we noticed it now.\n\n- After upgrade to JUnit 4.13, it looks like the behavior for test\ntimeouts has changed. Earlier the timeout seems to have applied for\neach parameterized run, but now it looks like it is applied across\nall the runs.\n\nThis patch fixes both the issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4ODc4NDM2", "url": "https://github.com/apache/hbase/pull/1091#pullrequestreview-348878436", "createdAt": "2020-01-27T18:25:52Z", "commit": {"oid": "7c1e6ea9c5665bf8fefea74e0120740447324fa8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4ODg2MzUz", "url": "https://github.com/apache/hbase/pull/1091#pullrequestreview-348886353", "createdAt": "2020-01-27T18:38:54Z", "commit": {"oid": "7c1e6ea9c5665bf8fefea74e0120740447324fa8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3037, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}