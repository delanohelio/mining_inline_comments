{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODY1NDY2", "number": 1485, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMzoxMDo0OFrODwvhQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjozNzowOFrOD5fD5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDM2ODAyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMzoxMDo0OFrOGD6FKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMDozNDo0NVrOGEMM8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc1MDUwNg==", "bodyText": "nit: ? : is good to use but here since we have some good computation, it might be preferable to return empty string if regionInfo is null initially. Better readability? WDYT?", "url": "https://github.com/apache/hbase/pull/1485#discussion_r406750506", "createdAt": "2020-04-10T13:10:48Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java", "diffHunk": "@@ -102,6 +117,27 @@ public ServerName getServerName() {\n     return serverName;\n   }\n \n+  public String getTransitioningOnServerName() {\n+    return transitioningOnServerName;\n+  }\n+\n+  public String getMergeRegionName() {\n+    return (mergeRegionInfo != null)\n+      ? mergeRegionInfo.stream()\n+                       .map(RegionInfo::getRegionName)\n+                       .map(Bytes::toStringBinary)\n+                       .collect(Collectors.joining(\", \"))\n+      : \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a490a14b48fd76da03a78f58322a7af1d65264"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0NzQxMA==", "bodyText": "This has been simplified with nullable collection. So no ? : is required here then.", "url": "https://github.com/apache/hbase/pull/1485#discussion_r407047410", "createdAt": "2020-04-11T10:34:45Z", "author": {"login": "liuml07"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java", "diffHunk": "@@ -102,6 +117,27 @@ public ServerName getServerName() {\n     return serverName;\n   }\n \n+  public String getTransitioningOnServerName() {\n+    return transitioningOnServerName;\n+  }\n+\n+  public String getMergeRegionName() {\n+    return (mergeRegionInfo != null)\n+      ? mergeRegionInfo.stream()\n+                       .map(RegionInfo::getRegionName)\n+                       .map(Bytes::toStringBinary)\n+                       .collect(Collectors.joining(\", \"))\n+      : \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc1MDUwNg=="}, "originalCommit": {"oid": "c2a490a14b48fd76da03a78f58322a7af1d65264"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNDM4ODA4OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxMzoxODo1OVrOGD6RNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQxMDozNjozM1rOGEMNjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc1MzU4OQ==", "bodyText": "A small test case to cover this would be good. Maybe in TestMaster.", "url": "https://github.com/apache/hbase/pull/1485#discussion_r406753589", "createdAt": "2020-04-10T13:18:59Z", "author": {"login": "virajjasani"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "diffHunk": "@@ -966,6 +966,22 @@ public static ServerName getServerName(final Result r, final int replicaId) {\n     }\n   }\n \n+  /**\n+   * Returns a host:port string of server where the region is transitioning on.\n+   * It reads \"sn\" column from {@link Result}, a row in catalog table.\n+   * @param r Result to pull from\n+   * @return A host:port string or null if necessary fields not found or empty.\n+   */\n+  @Nullable\n+  @InterfaceAudience.Private // for use by RegionReplicaInfo which is used by meta browser\n+  public static String getTransitioningOnServerName(final Result r, final int replicaId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2a490a14b48fd76da03a78f58322a7af1d65264"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzA0NzU2NA==", "bodyText": "I navigate the source code tree, and found another place has implemented the same logic there. So in recent commit I simply move the code to MetaTableAccessor.java so it can be reused. I hope I have not broken any stuff, so wait for the QA to confirm. Since that is exactly the existing method, I guess a test is not required? But I can work on a UT if you still suggest. Thanks,", "url": "https://github.com/apache/hbase/pull/1485#discussion_r407047564", "createdAt": "2020-04-11T10:36:33Z", "author": {"login": "liuml07"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "diffHunk": "@@ -966,6 +966,22 @@ public static ServerName getServerName(final Result r, final int replicaId) {\n     }\n   }\n \n+  /**\n+   * Returns a host:port string of server where the region is transitioning on.\n+   * It reads \"sn\" column from {@link Result}, a row in catalog table.\n+   * @param r Result to pull from\n+   * @return A host:port string or null if necessary fields not found or empty.\n+   */\n+  @Nullable\n+  @InterfaceAudience.Private // for use by RegionReplicaInfo which is used by meta browser\n+  public static String getTransitioningOnServerName(final Result r, final int replicaId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjc1MzU4OQ=="}, "originalCommit": {"oid": "c2a490a14b48fd76da03a78f58322a7af1d65264"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MDI3NDY2OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMjowMDo1MFrOGGNIQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjoxMzoyM1rOGQw7Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1OTc0NA==", "bodyText": "What is rationale for moving this method? How is it MetaTableAccessor material?", "url": "https://github.com/apache/hbase/pull/1485#discussion_r409159744", "createdAt": "2020-04-15T22:00:50Z", "author": {"login": "saintstack"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "diffHunk": "@@ -966,6 +965,33 @@ public static ServerName getServerName(final Result r, final int replicaId) {\n     }\n   }\n \n+  /**\n+   * Returns the {@link ServerName} from catalog table {@link Result} where the region is\n+   * transitioning on. It should be the same as {@link MetaTableAccessor#getServerName(Result,int)}\n+   * if the server is at OPEN state.\n+   *\n+   * @param r Result to pull the transitioning server name from\n+   * @return A ServerName instance or {@link MetaTableAccessor#getServerName(Result,int)}\n+   * if necessary fields not found or empty.\n+   */\n+  @Nullable\n+  public static ServerName getTargetServerName(final Result r, final int replicaId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "659d4422a8a76d75209d1bc34ea2fe18bec7a93b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1OTg4Mw==", "bodyText": ".. and not private to RegoinStateStore where it was originally?", "url": "https://github.com/apache/hbase/pull/1485#discussion_r409159883", "createdAt": "2020-04-15T22:01:08Z", "author": {"login": "saintstack"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "diffHunk": "@@ -966,6 +965,33 @@ public static ServerName getServerName(final Result r, final int replicaId) {\n     }\n   }\n \n+  /**\n+   * Returns the {@link ServerName} from catalog table {@link Result} where the region is\n+   * transitioning on. It should be the same as {@link MetaTableAccessor#getServerName(Result,int)}\n+   * if the server is at OPEN state.\n+   *\n+   * @param r Result to pull the transitioning server name from\n+   * @return A ServerName instance or {@link MetaTableAccessor#getServerName(Result,int)}\n+   * if necessary fields not found or empty.\n+   */\n+  @Nullable\n+  public static ServerName getTargetServerName(final Result r, final int replicaId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1OTc0NA=="}, "originalCommit": {"oid": "659d4422a8a76d75209d1bc34ea2fe18bec7a93b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIzNzAwMw==", "bodyText": "@saintstack This method is used so far by both RegionStateStore and RegionReplicaInfo (new for table.jsp). So it can not be private to RegoinStateStore. We can keep it there and make it public, or we move to MetaTableAccessor which is more generic place for Read/write hbase:meta operations. I see all getXXColumn and getXX stuff are static methods in MetaTableAccessor which are similar to what this method does. So I moved the logic reading \"info:sn\" columns to MetaTableAccessor.\nThis also came from my coding experience. When I write the first patch, I implemented my version in MetaTableAccessor instead of calling the implementation in RegoinStateStore. I simply did not know existing logic is already someplace there. Meanwhile, both RegionStateStore and MetaTableAccessor have their own getServerNameColumn() method. I guess someone previously may have missed existing implementation as I did :) So overall I prefer the central place of getting columns and data from hbase:meta. But I understand this move makes it public in client module. If that is a concern, I can move it back.", "url": "https://github.com/apache/hbase/pull/1485#discussion_r409237003", "createdAt": "2020-04-16T02:03:21Z", "author": {"login": "liuml07"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "diffHunk": "@@ -966,6 +965,33 @@ public static ServerName getServerName(final Result r, final int replicaId) {\n     }\n   }\n \n+  /**\n+   * Returns the {@link ServerName} from catalog table {@link Result} where the region is\n+   * transitioning on. It should be the same as {@link MetaTableAccessor#getServerName(Result,int)}\n+   * if the server is at OPEN state.\n+   *\n+   * @param r Result to pull the transitioning server name from\n+   * @return A ServerName instance or {@link MetaTableAccessor#getServerName(Result,int)}\n+   * if necessary fields not found or empty.\n+   */\n+  @Nullable\n+  public static ServerName getTargetServerName(final Result r, final int replicaId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1OTc0NA=="}, "originalCommit": {"oid": "659d4422a8a76d75209d1bc34ea2fe18bec7a93b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzMTk5MA==", "bodyText": "Long-stale conversation, perhaps...\nI agree with @liuml07 on this one -- it's a good thing to have a centralized place for encapsulating the serialization details of storing and retrieving content from meta. MetaTableAccessor seems like the place for it.", "url": "https://github.com/apache/hbase/pull/1485#discussion_r420231990", "createdAt": "2020-05-05T16:13:23Z", "author": {"login": "ndimiduk"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "diffHunk": "@@ -966,6 +965,33 @@ public static ServerName getServerName(final Result r, final int replicaId) {\n     }\n   }\n \n+  /**\n+   * Returns the {@link ServerName} from catalog table {@link Result} where the region is\n+   * transitioning on. It should be the same as {@link MetaTableAccessor#getServerName(Result,int)}\n+   * if the server is at OPEN state.\n+   *\n+   * @param r Result to pull the transitioning server name from\n+   * @return A ServerName instance or {@link MetaTableAccessor#getServerName(Result,int)}\n+   * if necessary fields not found or empty.\n+   */\n+  @Nullable\n+  public static ServerName getTargetServerName(final Result r, final int replicaId) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1OTc0NA=="}, "originalCommit": {"oid": "659d4422a8a76d75209d1bc34ea2fe18bec7a93b"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MDI4MjM1OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/resources/hbase-webapps/master/table.jsp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMjowMzoyOFrOGGNNDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwMTo0NDoyN1rOGGRhyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE2MDk3Mw==", "bodyText": "How we do merge? Merge names can be more merge001, merge002... we print them all out in Merge RegionNames? If so, why split different?", "url": "https://github.com/apache/hbase/pull/1485#discussion_r409160973", "createdAt": "2020-04-15T22:03:28Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/resources/hbase-webapps/master/table.jsp", "diffHunk": "@@ -387,68 +388,91 @@ if (fqtn != null && master.isInitialized()) {\n     }\n   }\n %>\n-<table class=\"table table-striped\">\n-  <tr>\n-    <th>RegionName</th>\n-    <th>Start Key</th>\n-    <th>End Key</th>\n-    <th>Replica ID</th>\n-    <th>RegionState</th>\n-    <th>ServerName</th>\n-  </tr>\n-<%\n-  final boolean metaScanHasMore;\n-  byte[] lastRow = null;\n-  try (final MetaBrowser.Results results = metaBrowser.getResults()) {\n-    for (final RegionReplicaInfo regionReplicaInfo : results) {\n-      lastRow = Optional.ofNullable(regionReplicaInfo)\n-        .map(RegionReplicaInfo::getRow)\n-        .orElse(null);\n-      if (regionReplicaInfo == null) {\n-%>\n-  <tr>\n-    <td colspan=\"6\">Null result</td>\n-  </tr>\n-<%\n-      continue;\n-    }\n+<div style=\"overflow-x: auto\">\n+  <table class=\"table table-striped nowrap\">\n+    <tr>\n+      <th>RegionName</th>\n+      <th>Start Key</th>\n+      <th>End Key</th>\n+      <th>Replica ID</th>\n+      <th>RegionState</th>\n+      <th>ServerName</th>\n+      <th>Sequence Number</th>\n+      <th>Target ServerName</th>\n+      <th>Merge RegionNames</th>\n+      <th>SplitA</th>\n+      <th>SplitB</th>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "659d4422a8a76d75209d1bc34ea2fe18bec7a93b"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTIzMTgxNw==", "bodyText": "Yes merge is all columns matching regex \"info:merge*\" in hbase:meta. Do we need to know the column name? For \"info:split*\" I think we can merge A/B into one item as well. I'll make the change as discussion in the JIRA.", "url": "https://github.com/apache/hbase/pull/1485#discussion_r409231817", "createdAt": "2020-04-16T01:44:27Z", "author": {"login": "liuml07"}, "path": "hbase-server/src/main/resources/hbase-webapps/master/table.jsp", "diffHunk": "@@ -387,68 +388,91 @@ if (fqtn != null && master.isInitialized()) {\n     }\n   }\n %>\n-<table class=\"table table-striped\">\n-  <tr>\n-    <th>RegionName</th>\n-    <th>Start Key</th>\n-    <th>End Key</th>\n-    <th>Replica ID</th>\n-    <th>RegionState</th>\n-    <th>ServerName</th>\n-  </tr>\n-<%\n-  final boolean metaScanHasMore;\n-  byte[] lastRow = null;\n-  try (final MetaBrowser.Results results = metaBrowser.getResults()) {\n-    for (final RegionReplicaInfo regionReplicaInfo : results) {\n-      lastRow = Optional.ofNullable(regionReplicaInfo)\n-        .map(RegionReplicaInfo::getRow)\n-        .orElse(null);\n-      if (regionReplicaInfo == null) {\n-%>\n-  <tr>\n-    <td colspan=\"6\">Null result</td>\n-  </tr>\n-<%\n-      continue;\n-    }\n+<div style=\"overflow-x: auto\">\n+  <table class=\"table table-striped nowrap\">\n+    <tr>\n+      <th>RegionName</th>\n+      <th>Start Key</th>\n+      <th>End Key</th>\n+      <th>Replica ID</th>\n+      <th>RegionState</th>\n+      <th>ServerName</th>\n+      <th>Sequence Number</th>\n+      <th>Target ServerName</th>\n+      <th>Merge RegionNames</th>\n+      <th>SplitA</th>\n+      <th>SplitB</th>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE2MDk3Mw=="}, "originalCommit": {"oid": "659d4422a8a76d75209d1bc34ea2fe18bec7a93b"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTk2NTc2OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjoxOTowNlrOGQxKtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjoxOTowNlrOGQxKtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzNTk1OQ==", "bodyText": "unused import.", "url": "https://github.com/apache/hbase/pull/1485#discussion_r420235959", "createdAt": "2020-05-05T16:19:06Z", "author": {"login": "ndimiduk"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/MetaTableAccessor.java", "diffHunk": "@@ -26,6 +26,7 @@\n import java.util.Arrays;\n import java.util.Collection;\n import java.util.Collections;\n+import java.util.HashMap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f8f10eb6518d39b1564f1c7597d2fb66933de39"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTk4MTk3OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjoyMjo1N1rOGQxU2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNjo1Mjo1NlrOGSsRnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzODU1Mg==", "bodyText": "A few unused imports to cleanup.", "url": "https://github.com/apache/hbase/pull/1485#discussion_r420238552", "createdAt": "2020-05-05T16:22:57Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java", "diffHunk": "@@ -17,14 +17,22 @@\n  */\n package org.apache.hadoop.hbase.master.webapp;\n \n+import static org.apache.hbase.thirdparty.org.apache.commons.collections4.ListUtils.emptyIfNull;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f8f10eb6518d39b1564f1c7597d2fb66933de39"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU3OTk5OA==", "bodyText": "Thanks! I have fixed this.\np.s. For a PR to Hadoop, I usually check the \"checkstyle\" report by Yetus and update the patch accordingly. I see the Yetus for HBase QA does not report \"checkstyle\" warnings in the comment table. I found there are report links in the \"Console output\" though. I'll follow there next time. :)", "url": "https://github.com/apache/hbase/pull/1485#discussion_r420579998", "createdAt": "2020-05-06T06:56:49Z", "author": {"login": "liuml07"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java", "diffHunk": "@@ -17,14 +17,22 @@\n  */\n package org.apache.hadoop.hbase.master.webapp;\n \n+import static org.apache.hbase.thirdparty.org.apache.commons.collections4.ListUtils.emptyIfNull;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzODU1Mg=="}, "originalCommit": {"oid": "9f8f10eb6518d39b1564f1c7597d2fb66933de39"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjI1Mjk1OQ==", "bodyText": "Due to complications around multi-jdk support, we have Yetus run in 3 different invocations. Looks like the checkstyle check gave you a +1.", "url": "https://github.com/apache/hbase/pull/1485#discussion_r422252959", "createdAt": "2020-05-08T16:52:56Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/webapp/RegionReplicaInfo.java", "diffHunk": "@@ -17,14 +17,22 @@\n  */\n package org.apache.hadoop.hbase.master.webapp;\n \n+import static org.apache.hbase.thirdparty.org.apache.commons.collections4.ListUtils.emptyIfNull;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDIzODU1Mg=="}, "originalCommit": {"oid": "9f8f10eb6518d39b1564f1c7597d2fb66933de39"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjAwNTY5OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/resources/hbase-webapps/master/table.jsp", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjoyODo0NFrOGQxj6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjoyODo0NFrOGQxj6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0MjQwOQ==", "bodyText": "s/Server where the region is transitioning on/The server to which the region is transiting/", "url": "https://github.com/apache/hbase/pull/1485#discussion_r420242409", "createdAt": "2020-05-05T16:28:44Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/resources/hbase-webapps/master/table.jsp", "diffHunk": "@@ -387,68 +388,93 @@ if (fqtn != null && master.isInitialized()) {\n     }\n   }\n %>\n-<table class=\"table table-striped\">\n-  <tr>\n-    <th>RegionName</th>\n-    <th>Start Key</th>\n-    <th>End Key</th>\n-    <th>Replica ID</th>\n-    <th>RegionState</th>\n-    <th>ServerName</th>\n-  </tr>\n-<%\n-  final boolean metaScanHasMore;\n-  byte[] lastRow = null;\n-  try (final MetaBrowser.Results results = metaBrowser.getResults()) {\n-    for (final RegionReplicaInfo regionReplicaInfo : results) {\n-      lastRow = Optional.ofNullable(regionReplicaInfo)\n-        .map(RegionReplicaInfo::getRow)\n-        .orElse(null);\n-      if (regionReplicaInfo == null) {\n-%>\n-  <tr>\n-    <td colspan=\"6\">Null result</td>\n-  </tr>\n-<%\n-      continue;\n-    }\n+<div style=\"overflow-x: auto\">\n+  <table class=\"table table-striped nowrap\">\n+    <tr>\n+      <th title=\"Region name\">RegionName</th>\n+      <th title=\"The startKey of this region\">Start Key</th>\n+      <th title=\"The endKey of this region\">End Key</th>\n+      <th title=\"Region replica id\">Replica ID</th>\n+      <th title=\"State of the region while undergoing transitions\">RegionState</th>\n+      <th title=\"Server hosting this region replica, stored in info:server column\">Server</th>\n+      <th title=\"The seqNum for the region at the time the server opened this region replica\">Sequence Number</th>\n+      <th title=\"Server where the region is transitioning on, stored in info:sn column\">Target Server</th>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f8f10eb6518d39b1564f1c7597d2fb66933de39"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjAyNTY5OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/resources/hbase-webapps/master/table.jsp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjozMzoyM1rOGQxwaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNjoyNjoyNFrOGRFf4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0NTYxMQ==", "bodyText": "It's a bit tedious, but how about we build all these labels from the values in HConstants? That way this page is captured by any future refactoring that happens down the line. For instance, the bit in this tool tip that says \"info:server\" would be replaced with + HConstants.CATALOG_FAMILY_STR + \":\" + HConstants.SERVER_QUALIFIER_STR.\nKind of fiddly. I'm not sure if it's worth it. Just a suggestion.", "url": "https://github.com/apache/hbase/pull/1485#discussion_r420245611", "createdAt": "2020-05-05T16:33:23Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/resources/hbase-webapps/master/table.jsp", "diffHunk": "@@ -387,68 +388,93 @@ if (fqtn != null && master.isInitialized()) {\n     }\n   }\n %>\n-<table class=\"table table-striped\">\n-  <tr>\n-    <th>RegionName</th>\n-    <th>Start Key</th>\n-    <th>End Key</th>\n-    <th>Replica ID</th>\n-    <th>RegionState</th>\n-    <th>ServerName</th>\n-  </tr>\n-<%\n-  final boolean metaScanHasMore;\n-  byte[] lastRow = null;\n-  try (final MetaBrowser.Results results = metaBrowser.getResults()) {\n-    for (final RegionReplicaInfo regionReplicaInfo : results) {\n-      lastRow = Optional.ofNullable(regionReplicaInfo)\n-        .map(RegionReplicaInfo::getRow)\n-        .orElse(null);\n-      if (regionReplicaInfo == null) {\n-%>\n-  <tr>\n-    <td colspan=\"6\">Null result</td>\n-  </tr>\n-<%\n-      continue;\n-    }\n+<div style=\"overflow-x: auto\">\n+  <table class=\"table table-striped nowrap\">\n+    <tr>\n+      <th title=\"Region name\">RegionName</th>\n+      <th title=\"The startKey of this region\">Start Key</th>\n+      <th title=\"The endKey of this region\">End Key</th>\n+      <th title=\"Region replica id\">Replica ID</th>\n+      <th title=\"State of the region while undergoing transitions\">RegionState</th>\n+      <th title=\"Server hosting this region replica, stored in info:server column\">Server</th>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f8f10eb6518d39b1564f1c7597d2fb66933de39"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2OTA1OA==", "bodyText": "I like the idea. I have changed that. To make this table header fit in one line, I have defined some column name variables, which can be reused.", "url": "https://github.com/apache/hbase/pull/1485#discussion_r420569058", "createdAt": "2020-05-06T06:26:24Z", "author": {"login": "liuml07"}, "path": "hbase-server/src/main/resources/hbase-webapps/master/table.jsp", "diffHunk": "@@ -387,68 +388,93 @@ if (fqtn != null && master.isInitialized()) {\n     }\n   }\n %>\n-<table class=\"table table-striped\">\n-  <tr>\n-    <th>RegionName</th>\n-    <th>Start Key</th>\n-    <th>End Key</th>\n-    <th>Replica ID</th>\n-    <th>RegionState</th>\n-    <th>ServerName</th>\n-  </tr>\n-<%\n-  final boolean metaScanHasMore;\n-  byte[] lastRow = null;\n-  try (final MetaBrowser.Results results = metaBrowser.getResults()) {\n-    for (final RegionReplicaInfo regionReplicaInfo : results) {\n-      lastRow = Optional.ofNullable(regionReplicaInfo)\n-        .map(RegionReplicaInfo::getRow)\n-        .orElse(null);\n-      if (regionReplicaInfo == null) {\n-%>\n-  <tr>\n-    <td colspan=\"6\">Null result</td>\n-  </tr>\n-<%\n-      continue;\n-    }\n+<div style=\"overflow-x: auto\">\n+  <table class=\"table table-striped nowrap\">\n+    <tr>\n+      <th title=\"Region name\">RegionName</th>\n+      <th title=\"The startKey of this region\">Start Key</th>\n+      <th title=\"The endKey of this region\">End Key</th>\n+      <th title=\"Region replica id\">Replica ID</th>\n+      <th title=\"State of the region while undergoing transitions\">RegionState</th>\n+      <th title=\"Server hosting this region replica, stored in info:server column\">Server</th>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0NTYxMQ=="}, "originalCommit": {"oid": "9f8f10eb6518d39b1564f1c7597d2fb66933de39"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjA0MzI2OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/resources/hbase-webapps/static/css/hbase.css", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNjozNzowOFrOGQx7GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNjowMDoxOFrOGRFAlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0ODM0NQ==", "bodyText": "Do you intend to change the style of all td elements, or only those under table.nowrap? If the latter, I think you need table.nowrap th, table.nowrap td.", "url": "https://github.com/apache/hbase/pull/1485#discussion_r420248345", "createdAt": "2020-05-05T16:37:08Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/resources/hbase-webapps/static/css/hbase.css", "diffHunk": "@@ -54,3 +54,7 @@ table.tablesorter thead tr .headerSortUp {\n table.tablesorter thead tr .headerSortDown {\n     background-image: url(desc.gif);\n }\n+\n+table.nowrap th, td {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f8f10eb6518d39b1564f1c7597d2fb66933de39"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU2MTA0Nw==", "bodyText": "Oh, right! No I was going to add the \"nowrap\" class only and changing default td style may make other places unhappy.", "url": "https://github.com/apache/hbase/pull/1485#discussion_r420561047", "createdAt": "2020-05-06T06:00:18Z", "author": {"login": "liuml07"}, "path": "hbase-server/src/main/resources/hbase-webapps/static/css/hbase.css", "diffHunk": "@@ -54,3 +54,7 @@ table.tablesorter thead tr .headerSortUp {\n table.tablesorter thead tr .headerSortDown {\n     background-image: url(desc.gif);\n }\n+\n+table.nowrap th, td {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI0ODM0NQ=="}, "originalCommit": {"oid": "9f8f10eb6518d39b1564f1c7597d2fb66933de39"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1902, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}