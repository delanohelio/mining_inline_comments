{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NjU5NDQ0", "number": 2754, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMToxNDowM1rOFLgkmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMDo0OTo1NVrOFL5ZkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NjEyMzEzOnYy", "diffSide": "RIGHT", "path": "dev-support/release-vm/README.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMToxNDowM1rOIOuQbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNjo0ODo1NVrOIPMLEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMwODg0Nw==", "bodyText": "I think whats missing here is that the cwd is ./release-vm so the .pub is in an importable location and the vagrant up just works?", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552308847", "createdAt": "2021-01-06T01:14:03Z", "author": {"login": "saintstack"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,63 @@\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* VirtualBox\n+* Vagrant\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in the local GPG agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+```sh\n+$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Export the public portion of your signing credentials where the guest VM can access it,\n+\n+```sh\n+$ gpg --export <you>@apache.org > gpg.<you>.apache.pub", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "342b6d142260f56a9527d6d52b0f43e26c68313a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjc3MzIzOQ==", "bodyText": "You're right, i never explicitly state this command is run from the dev-support/release-vm dir, but that working directory, the directory containing the Vagrantfile is mounted to /vagrant in the guest.", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552773239", "createdAt": "2021-01-06T16:23:21Z", "author": {"login": "ndimiduk"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,63 @@\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* VirtualBox\n+* Vagrant\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in the local GPG agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+```sh\n+$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Export the public portion of your signing credentials where the guest VM can access it,\n+\n+```sh\n+$ gpg --export <you>@apache.org > gpg.<you>.apache.pub", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMwODg0Nw=="}, "originalCommit": {"oid": "342b6d142260f56a9527d6d52b0f43e26c68313a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjc5ODk5Mg==", "bodyText": "Fix this on commit?", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552798992", "createdAt": "2021-01-06T16:48:55Z", "author": {"login": "saintstack"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,63 @@\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* VirtualBox\n+* Vagrant\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in the local GPG agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+```sh\n+$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Export the public portion of your signing credentials where the guest VM can access it,\n+\n+```sh\n+$ gpg --export <you>@apache.org > gpg.<you>.apache.pub", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMwODg0Nw=="}, "originalCommit": {"oid": "342b6d142260f56a9527d6d52b0f43e26c68313a"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NjE3OTM1OnYy", "diffSide": "RIGHT", "path": "dev-support/release-vm/README.md", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMTo0NDoyN1rOIOuwdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNjo0NzoxNlrOIPMEoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNzA0Ng==", "bodyText": "I had to resupply my password for my gpg key here. I didn't expect that. I even logged out, reset my gpg agent with\ngpgconf --kill all && gpg-connect-agent /bye\n... signed something off the vm (which required me to fill in my password)..... I then did vagrant ssh and had to provide password again.", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552317046", "createdAt": "2021-01-06T01:44:27Z", "author": {"login": "saintstack"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,63 @@\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* VirtualBox\n+* Vagrant\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in the local GPG agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+```sh\n+$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Export the public portion of your signing credentials where the guest VM can access it,\n+\n+```sh\n+$ gpg --export <you>@apache.org > gpg.<you>.apache.pub\n+```\n+\n+Launch the VM\n+\n+```sh\n+$ vagrant up\n+```\n+\n+Connect to the VM. This should forward your ssh- and gpg-agent session.\n+\n+```sh\n+$ vagrant ssh\n+```\n+\n+Now from the VM, import your identity and verify the gpg-agent passthrough is working correctly.\n+\n+```sh\n+$ gpg --no-autostart --import /vagrant/gpg.<you>.apache.pub\n+...\n+gpg: Total number processed: 1\n+gpg:               imported: 1\n+$ gpg --no-autostart --detach --armor --sign repos/hbase/pom.xml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "342b6d142260f56a9527d6d52b0f43e26c68313a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNzI0Nw==", "bodyText": "I didn't expect to have to reprovide my gpg password if forwarding going on.", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552317247", "createdAt": "2021-01-06T01:45:07Z", "author": {"login": "saintstack"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,63 @@\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* VirtualBox\n+* Vagrant\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in the local GPG agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+```sh\n+$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Export the public portion of your signing credentials where the guest VM can access it,\n+\n+```sh\n+$ gpg --export <you>@apache.org > gpg.<you>.apache.pub\n+```\n+\n+Launch the VM\n+\n+```sh\n+$ vagrant up\n+```\n+\n+Connect to the VM. This should forward your ssh- and gpg-agent session.\n+\n+```sh\n+$ vagrant ssh\n+```\n+\n+Now from the VM, import your identity and verify the gpg-agent passthrough is working correctly.\n+\n+```sh\n+$ gpg --no-autostart --import /vagrant/gpg.<you>.apache.pub\n+...\n+gpg: Total number processed: 1\n+gpg:               imported: 1\n+$ gpg --no-autostart --detach --armor --sign repos/hbase/pom.xml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNzA0Ng=="}, "originalCommit": {"oid": "342b6d142260f56a9527d6d52b0f43e26c68313a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNzQ1Mw==", "bodyText": "Signing a new file, I did not have to provide my password... which is good. I have a vm up that does not have my private key which is good.....", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552317453", "createdAt": "2021-01-06T01:45:54Z", "author": {"login": "saintstack"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,63 @@\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* VirtualBox\n+* Vagrant\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in the local GPG agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+```sh\n+$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Export the public portion of your signing credentials where the guest VM can access it,\n+\n+```sh\n+$ gpg --export <you>@apache.org > gpg.<you>.apache.pub\n+```\n+\n+Launch the VM\n+\n+```sh\n+$ vagrant up\n+```\n+\n+Connect to the VM. This should forward your ssh- and gpg-agent session.\n+\n+```sh\n+$ vagrant ssh\n+```\n+\n+Now from the VM, import your identity and verify the gpg-agent passthrough is working correctly.\n+\n+```sh\n+$ gpg --no-autostart --import /vagrant/gpg.<you>.apache.pub\n+...\n+gpg: Total number processed: 1\n+gpg:               imported: 1\n+$ gpg --no-autostart --detach --armor --sign repos/hbase/pom.xml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNzA0Ng=="}, "originalCommit": {"oid": "342b6d142260f56a9527d6d52b0f43e26c68313a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjc3OTIxNg==", "bodyText": "If agent forwarding is working, and your password expire time is set reasonably long, you shouldn't need to enter the password on the guest side. Something is not working properly.\nDid you vagrant destroy -f your VM before applying my latest changes? Specifically, you'd need to re-run the puppet provisioner in order to get the new ssh configuration.\nIt's also worth confirming that there is no gpg-agent process on the guest OS, ever. As I understand it, the gpg process run in the foreground of the guest terminal should always be communicating back to the gpg-agent process running on the host via the socket. I don't know how to ensure the process is not launched on the guest, other than via the --no-autostart argument added to the commands.", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552779216", "createdAt": "2021-01-06T16:28:34Z", "author": {"login": "ndimiduk"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,63 @@\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* VirtualBox\n+* Vagrant\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in the local GPG agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+```sh\n+$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Export the public portion of your signing credentials where the guest VM can access it,\n+\n+```sh\n+$ gpg --export <you>@apache.org > gpg.<you>.apache.pub\n+```\n+\n+Launch the VM\n+\n+```sh\n+$ vagrant up\n+```\n+\n+Connect to the VM. This should forward your ssh- and gpg-agent session.\n+\n+```sh\n+$ vagrant ssh\n+```\n+\n+Now from the VM, import your identity and verify the gpg-agent passthrough is working correctly.\n+\n+```sh\n+$ gpg --no-autostart --import /vagrant/gpg.<you>.apache.pub\n+...\n+gpg: Total number processed: 1\n+gpg:               imported: 1\n+$ gpg --no-autostart --detach --armor --sign repos/hbase/pom.xml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNzA0Ng=="}, "originalCommit": {"oid": "342b6d142260f56a9527d6d52b0f43e26c68313a"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjc5NzM0NA==", "bodyText": "I destroyed the old vm before running this test but did it in virutalbox, not with vagrant destroy. I just tried it and this time I did not have to supply my key password testing signing up in the vm.", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552797344", "createdAt": "2021-01-06T16:47:16Z", "author": {"login": "saintstack"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,63 @@\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* VirtualBox\n+* Vagrant\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in the local GPG agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+```sh\n+$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Export the public portion of your signing credentials where the guest VM can access it,\n+\n+```sh\n+$ gpg --export <you>@apache.org > gpg.<you>.apache.pub\n+```\n+\n+Launch the VM\n+\n+```sh\n+$ vagrant up\n+```\n+\n+Connect to the VM. This should forward your ssh- and gpg-agent session.\n+\n+```sh\n+$ vagrant ssh\n+```\n+\n+Now from the VM, import your identity and verify the gpg-agent passthrough is working correctly.\n+\n+```sh\n+$ gpg --no-autostart --import /vagrant/gpg.<you>.apache.pub\n+...\n+gpg: Total number processed: 1\n+gpg:               imported: 1\n+$ gpg --no-autostart --detach --armor --sign repos/hbase/pom.xml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNzA0Ng=="}, "originalCommit": {"oid": "342b6d142260f56a9527d6d52b0f43e26c68313a"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3NjE4Mzc2OnYy", "diffSide": "RIGHT", "path": "dev-support/release-vm/README.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQwMTo0NjozOFrOIOuy9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxNjo0Nzo1OVrOIPMG-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNzY4NA==", "bodyText": "Why am I doing this?", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552317684", "createdAt": "2021-01-06T01:46:38Z", "author": {"login": "saintstack"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,63 @@\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* VirtualBox\n+* Vagrant\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in the local GPG agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+```sh\n+$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Export the public portion of your signing credentials where the guest VM can access it,\n+\n+```sh\n+$ gpg --export <you>@apache.org > gpg.<you>.apache.pub\n+```\n+\n+Launch the VM\n+\n+```sh\n+$ vagrant up\n+```\n+\n+Connect to the VM. This should forward your ssh- and gpg-agent session.\n+\n+```sh\n+$ vagrant ssh\n+```\n+\n+Now from the VM, import your identity and verify the gpg-agent passthrough is working correctly.\n+\n+```sh\n+$ gpg --no-autostart --import /vagrant/gpg.<you>.apache.pub\n+...\n+gpg: Total number processed: 1\n+gpg:               imported: 1\n+$ gpg --no-autostart --detach --armor --sign repos/hbase/pom.xml\n+$ gpg --no-autostart --verify repos/hbase/pom.xml.asc\n+gpg: assuming signed data in 'repos/hbase/pom.xml'\n+...\n+$ ssh -T git@github.com", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "342b6d142260f56a9527d6d52b0f43e26c68313a"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxOTAzMw==", "bodyText": "Just to launch ssh agent? I need it?", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552319033", "createdAt": "2021-01-06T01:50:54Z", "author": {"login": "saintstack"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,63 @@\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* VirtualBox\n+* Vagrant\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in the local GPG agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+```sh\n+$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Export the public portion of your signing credentials where the guest VM can access it,\n+\n+```sh\n+$ gpg --export <you>@apache.org > gpg.<you>.apache.pub\n+```\n+\n+Launch the VM\n+\n+```sh\n+$ vagrant up\n+```\n+\n+Connect to the VM. This should forward your ssh- and gpg-agent session.\n+\n+```sh\n+$ vagrant ssh\n+```\n+\n+Now from the VM, import your identity and verify the gpg-agent passthrough is working correctly.\n+\n+```sh\n+$ gpg --no-autostart --import /vagrant/gpg.<you>.apache.pub\n+...\n+gpg: Total number processed: 1\n+gpg:               imported: 1\n+$ gpg --no-autostart --detach --armor --sign repos/hbase/pom.xml\n+$ gpg --no-autostart --verify repos/hbase/pom.xml.asc\n+gpg: assuming signed data in 'repos/hbase/pom.xml'\n+...\n+$ ssh -T git@github.com", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNzY4NA=="}, "originalCommit": {"oid": "342b6d142260f56a9527d6d52b0f43e26c68313a"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjc4MzIxOQ==", "bodyText": "In my case, I have an authentication key and a signing key in my gpg keyring, managed by gpg-agent. I have my ssh configuration set to use that gpg authorization key with GitHub. Thus, I can test agent forwarding works by issuing this command.\nMaybe the ssh incantation is adding unnecessary complexity here, as we verify gpg-agent forwarding via the gpg --sign command instead. Still, we should verify forwarding of both gpg and ssh credentials are working, as both are required during the release process (signing artifacts and tags, and pushing commits to the upstream repository).", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552783219", "createdAt": "2021-01-06T16:32:13Z", "author": {"login": "ndimiduk"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,63 @@\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* VirtualBox\n+* Vagrant\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in the local GPG agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+```sh\n+$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Export the public portion of your signing credentials where the guest VM can access it,\n+\n+```sh\n+$ gpg --export <you>@apache.org > gpg.<you>.apache.pub\n+```\n+\n+Launch the VM\n+\n+```sh\n+$ vagrant up\n+```\n+\n+Connect to the VM. This should forward your ssh- and gpg-agent session.\n+\n+```sh\n+$ vagrant ssh\n+```\n+\n+Now from the VM, import your identity and verify the gpg-agent passthrough is working correctly.\n+\n+```sh\n+$ gpg --no-autostart --import /vagrant/gpg.<you>.apache.pub\n+...\n+gpg: Total number processed: 1\n+gpg:               imported: 1\n+$ gpg --no-autostart --detach --armor --sign repos/hbase/pom.xml\n+$ gpg --no-autostart --verify repos/hbase/pom.xml.asc\n+gpg: assuming signed data in 'repos/hbase/pom.xml'\n+...\n+$ ssh -T git@github.com", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNzY4NA=="}, "originalCommit": {"oid": "342b6d142260f56a9527d6d52b0f43e26c68313a"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjc5Nzk0Ng==", "bodyText": "No harm I suppose and ensures an ssh-agent is up... so leave it.", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552797946", "createdAt": "2021-01-06T16:47:59Z", "author": {"login": "saintstack"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,63 @@\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* VirtualBox\n+* Vagrant\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in the local GPG agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+```sh\n+$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Export the public portion of your signing credentials where the guest VM can access it,\n+\n+```sh\n+$ gpg --export <you>@apache.org > gpg.<you>.apache.pub\n+```\n+\n+Launch the VM\n+\n+```sh\n+$ vagrant up\n+```\n+\n+Connect to the VM. This should forward your ssh- and gpg-agent session.\n+\n+```sh\n+$ vagrant ssh\n+```\n+\n+Now from the VM, import your identity and verify the gpg-agent passthrough is working correctly.\n+\n+```sh\n+$ gpg --no-autostart --import /vagrant/gpg.<you>.apache.pub\n+...\n+gpg: Total number processed: 1\n+gpg:               imported: 1\n+$ gpg --no-autostart --detach --armor --sign repos/hbase/pom.xml\n+$ gpg --no-autostart --verify repos/hbase/pom.xml.asc\n+gpg: assuming signed data in 'repos/hbase/pom.xml'\n+...\n+$ ssh -T git@github.com", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjMxNzY4NA=="}, "originalCommit": {"oid": "342b6d142260f56a9527d6d52b0f43e26c68313a"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3OTY3OTkzOnYy", "diffSide": "RIGHT", "path": "dev-support/release-vm/puppet/production/data/nodes/rmvm.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQxODowOToyM1rOIPQvTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMDo1MDozMFrOIPVrnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg3MzgwNA==", "bodyText": "Actually, I don't think we need any of maven, openjdk-8-jdk-headless, openjdk-11-jdk-headless because all these tools are provided by the docker environment. Is there a reason to keep these when the whole point of the VM is to establish a reasonable docker environment?", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552873804", "createdAt": "2021-01-06T18:09:23Z", "author": {"login": "ndimiduk"}, "path": "dev-support/release-vm/puppet/production/data/nodes/rmvm.yaml", "diffHunk": "@@ -0,0 +1,34 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+---\n+classes:\n+  - docker\n+  - packages::manage\n+  - ssh\n+\n+packages::latest:\n+  - curl\n+  - git\n+  - gnupg\n+  - gnupg-agent\n+  - maven", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "762e7159b9587eb61a7702c83734c0d3e87713fe"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk1NDc4Mw==", "bodyText": "+1 on stripping them.", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552954783", "createdAt": "2021-01-06T20:50:30Z", "author": {"login": "saintstack"}, "path": "dev-support/release-vm/puppet/production/data/nodes/rmvm.yaml", "diffHunk": "@@ -0,0 +1,34 @@\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one\n+# or more contributor license agreements.  See the NOTICE file\n+# distributed with this work for additional information\n+# regarding copyright ownership.  The ASF licenses this file\n+# to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance\n+# with the License.  You may obtain a copy of the License at\n+#\n+#     http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS,\n+# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+# See the License for the specific language governing permissions and\n+# limitations under the License.\n+#\n+---\n+classes:\n+  - docker\n+  - packages::manage\n+  - ssh\n+\n+packages::latest:\n+  - curl\n+  - git\n+  - gnupg\n+  - gnupg-agent\n+  - maven", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjg3MzgwNA=="}, "originalCommit": {"oid": "762e7159b9587eb61a7702c83734c0d3e87713fe"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDE5MDg4OnYy", "diffSide": "RIGHT", "path": "dev-support/release-vm/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMDo0OTo1NVrOIPVq0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMjowNjozOFrOIPXhhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk1NDU3Ng==", "bodyText": "No cd into release-vm dir?", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552954576", "createdAt": "2021-01-06T20:49:55Z", "author": {"login": "saintstack"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,141 @@\n+<!---\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* [VirtualBox](http://virtualbox.org)\n+* [Vagrant](http://virtualbox.org)\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in either the local GPG agent or\n+  local SSH agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+All terminal commands used below are assumed to be run with the current working directory as the\n+location containing the `Vagrantfile`.\n+\n+The term \"Host\" is used to mean the environment that runs the Vagrant process. The term \"Guest\" is\n+used to mean the virtual machine managed by the Host.\n+\n+### Ensure credentials work from the Host OS\n+\n+The ssh- and gpg-agent forwarding configuration used here assumes that your credentials work\n+on the Host. Verify both are working before you proceed with the Guest. Additionally, using the\n+credentials requires you to unlock the respective keyring, the state of which is persisted by the\n+agent process or processes running on the Host.\n+\n+See instructions in [`create-release`](../create-release/README.txt) regarding proper\n+configuration of ssh- and gpg-agents.\n+\n+Assuming the git repo origin is on GitHub, the following command will ensure that your ssh\n+credentials are working. On the Host, run:\n+\n+```sh\n+host:~$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Likewise, ensure you have an encryption key that can be used to sign a file. Again, on the Host,\n+run:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f7470a13045c05d9fade1b5cd7bcf600ed6f997"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk4NDk2Ng==", "bodyText": "No, not down here. See the second paragraph added up above under the \"Usage\" heading. I wrote it that way so that if this readme gets moved around later, the anchor of reference holds true.", "url": "https://github.com/apache/hbase/pull/2754#discussion_r552984966", "createdAt": "2021-01-06T22:06:38Z", "author": {"login": "ndimiduk"}, "path": "dev-support/release-vm/README.md", "diffHunk": "@@ -0,0 +1,141 @@\n+<!---\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+# HBase Release Env\n+\n+This is a vagrant project that provides a virtual machine environment suitable\n+for running an Apache HBase release.\n+\n+Requires:\n+* [VirtualBox](http://virtualbox.org)\n+* [Vagrant](http://virtualbox.org)\n+* The private portion of your signing key avilable in the local GPG agent\n+* The private portion of your Github authentication key available in either the local GPG agent or\n+  local SSH agent\n+\n+## Usage\n+\n+Unlock the local keyring before proceeding (this should prompt you for your GPG passphrase). For\n+example, assuming you have an authentication key configured in your keyring, this will do the\n+trick.\n+\n+All terminal commands used below are assumed to be run with the current working directory as the\n+location containing the `Vagrantfile`.\n+\n+The term \"Host\" is used to mean the environment that runs the Vagrant process. The term \"Guest\" is\n+used to mean the virtual machine managed by the Host.\n+\n+### Ensure credentials work from the Host OS\n+\n+The ssh- and gpg-agent forwarding configuration used here assumes that your credentials work\n+on the Host. Verify both are working before you proceed with the Guest. Additionally, using the\n+credentials requires you to unlock the respective keyring, the state of which is persisted by the\n+agent process or processes running on the Host.\n+\n+See instructions in [`create-release`](../create-release/README.txt) regarding proper\n+configuration of ssh- and gpg-agents.\n+\n+Assuming the git repo origin is on GitHub, the following command will ensure that your ssh\n+credentials are working. On the Host, run:\n+\n+```sh\n+host:~$ ssh -T git@github.com\n+Hi <you>! You've successfully authenticated, but GitHub does not provide shell access.\n+```\n+\n+Likewise, ensure you have an encryption key that can be used to sign a file. Again, on the Host,\n+run:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk1NDU3Ng=="}, "originalCommit": {"oid": "1f7470a13045c05d9fade1b5cd7bcf600ed6f997"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2334, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}