{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTM1OTE2", "number": 1455, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODoxNToyNFrODwG-Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODoxNToyNFrODwG-Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzcyNDQyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODoxNToyNFrOGC7Mqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODo1OTo0NFrOGC8ysQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyMDIzNQ==", "bodyText": "We want to close the bracket of if (LOG.isDebugEnabled()) { here right?", "url": "https://github.com/apache/hbase/pull/1455#discussion_r405720235", "createdAt": "2020-04-08T18:15:24Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java", "diffHunk": "@@ -331,28 +331,29 @@ protected boolean needsBalance(TableName tableName, Cluster cluster) {\n     for (CostFunction c : costFunctions) {\n       float multiplier = c.getMultiplier();\n       if (multiplier <= 0) {\n+        LOG.trace(\"{} not needed because multiplier is <= 0\", c.getClass().getSimpleName());\n         continue;\n       }\n       if (!c.isNeeded()) {\n-        LOG.debug(\"{} not needed\", c.getClass().getSimpleName());\n+        LOG.trace(\"{} not needed\", c.getClass().getSimpleName());\n         continue;\n       }\n       sumMultiplier += multiplier;\n       total += c.cost() * multiplier;\n     }\n \n-    if (total <= 0 || sumMultiplier <= 0\n-        || (sumMultiplier > 0 && (total / sumMultiplier) < minCostNeedBalance)) {\n+    boolean balanced = total <= 0 || sumMultiplier <= 0 ||\n+        (sumMultiplier > 0 && (total / sumMultiplier) < minCostNeedBalance);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"{} {}; total cost={}, sum multiplier={}; cost/multiplier to need a balance is {}\",\n+          balanced ? \"Skipping load balancing because balanced\" : \"We need to load balance\",\n+          isByTable ? String.format(\"table (%s)\", tableName) : \"cluster\",\n+          total, sumMultiplier, minCostNeedBalance);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e82b288aca506f210b63a571831719fc2ba7bbf7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyMzA2NA==", "bodyText": "Oh I see, this is better, avoiding additional trace guard if debug is not enabled.\nif(debugEnabled){\n  log.debug();\n  if(traceEnabled){\n    log.trace();\n  }\n}", "url": "https://github.com/apache/hbase/pull/1455#discussion_r405723064", "createdAt": "2020-04-08T18:20:10Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java", "diffHunk": "@@ -331,28 +331,29 @@ protected boolean needsBalance(TableName tableName, Cluster cluster) {\n     for (CostFunction c : costFunctions) {\n       float multiplier = c.getMultiplier();\n       if (multiplier <= 0) {\n+        LOG.trace(\"{} not needed because multiplier is <= 0\", c.getClass().getSimpleName());\n         continue;\n       }\n       if (!c.isNeeded()) {\n-        LOG.debug(\"{} not needed\", c.getClass().getSimpleName());\n+        LOG.trace(\"{} not needed\", c.getClass().getSimpleName());\n         continue;\n       }\n       sumMultiplier += multiplier;\n       total += c.cost() * multiplier;\n     }\n \n-    if (total <= 0 || sumMultiplier <= 0\n-        || (sumMultiplier > 0 && (total / sumMultiplier) < minCostNeedBalance)) {\n+    boolean balanced = total <= 0 || sumMultiplier <= 0 ||\n+        (sumMultiplier > 0 && (total / sumMultiplier) < minCostNeedBalance);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"{} {}; total cost={}, sum multiplier={}; cost/multiplier to need a balance is {}\",\n+          balanced ? \"Skipping load balancing because balanced\" : \"We need to load balance\",\n+          isByTable ? String.format(\"table (%s)\", tableName) : \"cluster\",\n+          total, sumMultiplier, minCostNeedBalance);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyMDIzNQ=="}, "originalCommit": {"oid": "e82b288aca506f210b63a571831719fc2ba7bbf7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc0NjM1Mw==", "bodyText": "yep!", "url": "https://github.com/apache/hbase/pull/1455#discussion_r405746353", "createdAt": "2020-04-08T18:59:44Z", "author": {"login": "busbey"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java", "diffHunk": "@@ -331,28 +331,29 @@ protected boolean needsBalance(TableName tableName, Cluster cluster) {\n     for (CostFunction c : costFunctions) {\n       float multiplier = c.getMultiplier();\n       if (multiplier <= 0) {\n+        LOG.trace(\"{} not needed because multiplier is <= 0\", c.getClass().getSimpleName());\n         continue;\n       }\n       if (!c.isNeeded()) {\n-        LOG.debug(\"{} not needed\", c.getClass().getSimpleName());\n+        LOG.trace(\"{} not needed\", c.getClass().getSimpleName());\n         continue;\n       }\n       sumMultiplier += multiplier;\n       total += c.cost() * multiplier;\n     }\n \n-    if (total <= 0 || sumMultiplier <= 0\n-        || (sumMultiplier > 0 && (total / sumMultiplier) < minCostNeedBalance)) {\n+    boolean balanced = total <= 0 || sumMultiplier <= 0 ||\n+        (sumMultiplier > 0 && (total / sumMultiplier) < minCostNeedBalance);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"{} {}; total cost={}, sum multiplier={}; cost/multiplier to need a balance is {}\",\n+          balanced ? \"Skipping load balancing because balanced\" : \"We need to load balance\",\n+          isByTable ? String.format(\"table (%s)\", tableName) : \"cluster\",\n+          total, sumMultiplier, minCostNeedBalance);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyMDIzNQ=="}, "originalCommit": {"oid": "e82b288aca506f210b63a571831719fc2ba7bbf7"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1891, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}