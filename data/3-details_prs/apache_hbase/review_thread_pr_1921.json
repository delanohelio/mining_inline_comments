{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1Nzk3MTMw", "number": 1921, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzo1Mjo1OVrOEGXDKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODo0MzowM1rOEGeHnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTA0NTU0OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzo1Mjo1OVrOGlG1Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowNzo0MVrOGlKUAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2MjM3NQ==", "bodyText": "Why not just catch IOException ?", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441562375", "createdAt": "2020-06-17T13:52:59Z", "author": {"login": "virajjasani"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,18 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      if(isComplete()){\n+        try {\n+          readStatus(inStream);\n+        }\n+        catch (Exception e){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e5de32a89f046b548caade6a398d4978cd99e52"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxOTQ1OA==", "bodyText": "Thanks for the feedback. You are right, that would make more sense. I'll change it.", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441619458", "createdAt": "2020-06-17T15:07:41Z", "author": {"login": "BukrosSzabolcs"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,18 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      if(isComplete()){\n+        try {\n+          readStatus(inStream);\n+        }\n+        catch (Exception e){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2MjM3NQ=="}, "originalCommit": {"oid": "0e5de32a89f046b548caade6a398d4978cd99e52"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTA1MzE1OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzo1NDo0MVrOGlG6HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDo0NzoxNVrOGlJUdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2MzY3Ng==", "bodyText": "Good to log at error level?", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441563676", "createdAt": "2020-06-17T13:54:41Z", "author": {"login": "virajjasani"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,18 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      if(isComplete()){\n+        try {\n+          readStatus(inStream);\n+        }\n+        catch (Exception e){\n+          if(e instanceof RemoteException){\n+            LOG.debug(\"Sasl connection failed: \", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e5de32a89f046b548caade6a398d4978cd99e52"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwMTAwNA==", "bodyText": "I would prefer to keep it on debug here and only log it on error level where it is handled. It keeps the log cleaner.", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441601004", "createdAt": "2020-06-17T14:44:27Z", "author": {"login": "BukrosSzabolcs"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,18 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      if(isComplete()){\n+        try {\n+          readStatus(inStream);\n+        }\n+        catch (Exception e){\n+          if(e instanceof RemoteException){\n+            LOG.debug(\"Sasl connection failed: \", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2MzY3Ng=="}, "originalCommit": {"oid": "0e5de32a89f046b548caade6a398d4978cd99e52"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwMzE5MQ==", "bodyText": "If it is handled well with error already, we are good here.\nThanks", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441603191", "createdAt": "2020-06-17T14:47:15Z", "author": {"login": "virajjasani"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,18 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      if(isComplete()){\n+        try {\n+          readStatus(inStream);\n+        }\n+        catch (Exception e){\n+          if(e instanceof RemoteException){\n+            LOG.debug(\"Sasl connection failed: \", e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2MzY3Ng=="}, "originalCommit": {"oid": "0e5de32a89f046b548caade6a398d4978cd99e52"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTA3Mjk0OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzo1ODo1OFrOGlHHJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTowMDo1M1rOGlJ-ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2NzAxMw==", "bodyText": "This should be out of if condition right? Don't we want to re-throw IOException other than RemoteException?\nWhich brings the question, why to even have if condition? I know RemoteException coming from readStatus is imp to us but we don't want to swallow IOException if inStream.readInt() throws one because inStream.readInt() is pre-requisite to know whether the status is SaslStatus.SUCCESS", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441567013", "createdAt": "2020-06-17T13:58:58Z", "author": {"login": "virajjasani"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,18 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      if(isComplete()){\n+        try {\n+          readStatus(inStream);\n+        }\n+        catch (Exception e){\n+          if(e instanceof RemoteException){\n+            LOG.debug(\"Sasl connection failed: \", e);\n+            throw e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e5de32a89f046b548caade6a398d4978cd99e52"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxMzkyNA==", "bodyText": "You are right, the if condition is not necessary, I'll fix that.\nAs far as I understand SaslStatus.SUCCESS should have been handled at this point and having no new data in the stream is a valid usecase. If we would re-throw IOExceptions we would re-throw the EOFException we would get when trying to read from such a stream.", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441613924", "createdAt": "2020-06-17T15:00:53Z", "author": {"login": "BukrosSzabolcs"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,18 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      if(isComplete()){\n+        try {\n+          readStatus(inStream);\n+        }\n+        catch (Exception e){\n+          if(e instanceof RemoteException){\n+            LOG.debug(\"Sasl connection failed: \", e);\n+            throw e;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU2NzAxMw=="}, "originalCommit": {"oid": "0e5de32a89f046b548caade6a398d4978cd99e52"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjIwMzgxOnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxODo0MzowM1rOGlSdRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTo1ODo1MlrOGloWXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1MjkwMQ==", "bodyText": "We still have this condition? I was talking about removing this condition because with this condition, we are swallowing IOException other than RemoteException, which we don't want to do. We want to re-throw all categories of IOException here, not just RemoteException.", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441752901", "createdAt": "2020-06-17T18:43:03Z", "author": {"login": "virajjasani"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,16 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      try {\n+        readStatus(inStream);\n+      }\n+      catch (IOException e){\n+        if(e instanceof RemoteException){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d9f0ab736e9ec110d70050984779c656dfcc344"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1NjU0NQ==", "bodyText": "I think you removed the outer condition instead of\nif(e instanceof RemoteException).\nLet me copy my previous comment:\nI know RemoteException coming from readStatus is imp to us but we don't want to swallow IOException if inStream.readInt() throws one because inStream.readInt() is pre-requisite to know whether the status is SaslStatus.SUCCESS\nI am talking about what is happening within readStatus(inStream) call.", "url": "https://github.com/apache/hbase/pull/1921#discussion_r441756545", "createdAt": "2020-06-17T18:48:43Z", "author": {"login": "virajjasani"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,16 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      try {\n+        readStatus(inStream);\n+      }\n+      catch (IOException e){\n+        if(e instanceof RemoteException){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1MjkwMQ=="}, "originalCommit": {"oid": "0d9f0ab736e9ec110d70050984779c656dfcc344"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA4OTI3OQ==", "bodyText": "I just run a test on a test system. This time authentication was set up correctly and the goal was to see what happens in a normal usecase.\nWhen it reached the new readStatus(inStream); The following exception was thrown:\njava.net.SocketTimeoutException: 20000 millis timeout while waiting for channel to be ready for read. ch : java.nio.channels.SocketChannel[connected local=/xxx remote=yyy ]\n        at org.apache.hadoop.net.SocketIOWithTimeout.doIO(SocketIOWithTimeout.java:164)\n        at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:161)\n        at org.apache.hadoop.net.SocketInputStream.read(SocketInputStream.java:131)\n        at java.io.FilterInputStream.read(FilterInputStream.java:133)\n        at java.io.BufferedInputStream.fill(BufferedInputStream.java:246)\n        at java.io.BufferedInputStream.read(BufferedInputStream.java:265)\n        at java.io.DataInputStream.readInt(DataInputStream.java:387)\n        at org.apache.hadoop.hbase.security.HBaseSaslRpcClient.readStatus(HBaseSaslRpcClient.java:51)\n\nThis is an IOException. This is exactly the kind of exception that we do not want to re-throw, because it is caused by the additional readStatus and would not exist otherwise. The line if(e instanceof RemoteException) is there to filter out exceptions like this.", "url": "https://github.com/apache/hbase/pull/1921#discussion_r442089279", "createdAt": "2020-06-18T09:20:18Z", "author": {"login": "BukrosSzabolcs"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,16 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      try {\n+        readStatus(inStream);\n+      }\n+      catch (IOException e){\n+        if(e instanceof RemoteException){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1MjkwMQ=="}, "originalCommit": {"oid": "0d9f0ab736e9ec110d70050984779c656dfcc344"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExMTU4MA==", "bodyText": "Thanks @BukrosSzabolcs for the explanation. Got your point.", "url": "https://github.com/apache/hbase/pull/1921#discussion_r442111580", "createdAt": "2020-06-18T09:58:52Z", "author": {"login": "virajjasani"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/security/HBaseSaslRpcClient.java", "diffHunk": "@@ -148,6 +148,16 @@ public boolean saslConnect(InputStream inS, OutputStream outS) throws IOExceptio\n           inStream.readFully(saslToken);\n         }\n       }\n+\n+      try {\n+        readStatus(inStream);\n+      }\n+      catch (IOException e){\n+        if(e instanceof RemoteException){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc1MjkwMQ=="}, "originalCommit": {"oid": "0d9f0ab736e9ec110d70050984779c656dfcc344"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2830, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}