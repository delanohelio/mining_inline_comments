{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MDg1NDYw", "number": 1279, "title": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by t\u2026", "bodyText": "\u2026able", "createdAt": "2020-03-12T07:34:05Z", "url": "https://github.com/apache/hbase/pull/1279", "merged": true, "mergeCommit": {"oid": "d4ab6455319ffcccd0424ab754ee61d9c81b156f"}, "closed": true, "closedAt": "2020-03-22T13:54:58Z", "author": {"login": "nyl3532016"}, "timelineItems": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcM203-ABqjMxMjE3Mjc4NjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQHB5ugBqjMxNTI1MjE5OTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da2faa0e9f241202f217ecf94ecdf37eba2846ca", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/da2faa0e9f241202f217ecf94ecdf37eba2846ca", "committedDate": "2020-03-12T07:31:02Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table"}, "afterCommit": {"oid": "d57bdab63832c4c3c305fcdaea91f5e8ec622d73", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/d57bdab63832c4c3c305fcdaea91f5e8ec622d73", "committedDate": "2020-03-12T07:44:17Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNDI4Mjg0", "url": "https://github.com/apache/hbase/pull/1279#pullrequestreview-373428284", "createdAt": "2020-03-12T10:17:22Z", "commit": {"oid": "d57bdab63832c4c3c305fcdaea91f5e8ec622d73"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDoxNzoyMlrOF1Yj-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxMDoxNzoyMlrOF1Yj-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyMTI3Mg==", "bodyText": "Add javadoc for the parameter of balanceCluster and balanceTable?", "url": "https://github.com/apache/hbase/pull/1279#discussion_r391521272", "createdAt": "2020-03-12T10:17:22Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/LoadBalancer.java", "diffHunk": "@@ -89,18 +89,18 @@\n   void setMasterServices(MasterServices masterServices);\n \n   /**\n-   * Perform the major balance operation\n+   * Perform the major balance operation for cluster\n    * @return List of plans\n    */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d57bdab63832c4c3c305fcdaea91f5e8ec622d73"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d57bdab63832c4c3c305fcdaea91f5e8ec622d73", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/d57bdab63832c4c3c305fcdaea91f5e8ec622d73", "committedDate": "2020-03-12T07:44:17Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table"}, "afterCommit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/5ab54d1e014b762b1cf5117c74439ca01f8bd3af", "committedDate": "2020-03-12T11:34:19Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNTg3NzYx", "url": "https://github.com/apache/hbase/pull/1279#pullrequestreview-373587761", "createdAt": "2020-03-12T14:09:17Z", "commit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowOToxN1rOF1gLiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowOToxN1rOF1gLiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NjA5MQ==", "bodyText": "Why synchronized?", "url": "https://github.com/apache/hbase/pull/1279#discussion_r391646091", "createdAt": "2020-03-12T14:09:17Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java", "diffHunk": "@@ -1639,6 +1641,44 @@ private void roundRobinAssignment(Cluster cluster, List<RegionInfo> regions,\n     }\n   }\n \n+  private Map<ServerName, List<RegionInfo>> toEnsumbleTableClusterLoad(\n+      Map<TableName, Map<ServerName, List<RegionInfo>>> clusterLoadPerTable) {\n+    Map<ServerName, List<RegionInfo>> returnMap = new TreeMap<>();\n+    for (Map<ServerName, List<RegionInfo>> serverNameListMap : clusterLoadPerTable.values()) {\n+      serverNameListMap.forEach((serverName, regionInfoList) -> {\n+        List<RegionInfo> regionInfos =\n+            returnMap.computeIfAbsent(serverName, k -> new ArrayList<>());\n+        regionInfos.addAll(regionInfoList);\n+      });\n+    }\n+    return returnMap;\n+  }\n+\n+  @Override\n+  public List<RegionPlan> balanceTable(TableName tableName, Map<ServerName, List<RegionInfo>> clusterLoad){\n+    throw new UnsupportedOperationException(\"balanceTable is not support in BaseLoadBalancer\");\n+  }\n+\n+  @Override\n+  public synchronized List<RegionPlan>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNTg4NDU3", "url": "https://github.com/apache/hbase/pull/1279#pullrequestreview-373588457", "createdAt": "2020-03-12T14:10:06Z", "commit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxMDowNlrOF1gNtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxMDowNlrOF1gNtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NjY0Ng==", "bodyText": "Unsupport? Should be abstrat method?", "url": "https://github.com/apache/hbase/pull/1279#discussion_r391646646", "createdAt": "2020-03-12T14:10:06Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java", "diffHunk": "@@ -1639,6 +1641,44 @@ private void roundRobinAssignment(Cluster cluster, List<RegionInfo> regions,\n     }\n   }\n \n+  private Map<ServerName, List<RegionInfo>> toEnsumbleTableClusterLoad(\n+      Map<TableName, Map<ServerName, List<RegionInfo>>> clusterLoadPerTable) {\n+    Map<ServerName, List<RegionInfo>> returnMap = new TreeMap<>();\n+    for (Map<ServerName, List<RegionInfo>> serverNameListMap : clusterLoadPerTable.values()) {\n+      serverNameListMap.forEach((serverName, regionInfoList) -> {\n+        List<RegionInfo> regionInfos =\n+            returnMap.computeIfAbsent(serverName, k -> new ArrayList<>());\n+        regionInfos.addAll(regionInfoList);\n+      });\n+    }\n+    return returnMap;\n+  }\n+\n+  @Override\n+  public List<RegionPlan> balanceTable(TableName tableName, Map<ServerName, List<RegionInfo>> clusterLoad){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNTg5NjE4", "url": "https://github.com/apache/hbase/pull/1279#pullrequestreview-373589618", "createdAt": "2020-03-12T14:11:25Z", "commit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxMToyNVrOF1gRRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxMToyNVrOF1gRRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0NzU1Nw==", "bodyText": "No need this?", "url": "https://github.com/apache/hbase/pull/1279#discussion_r391647557", "createdAt": "2020-03-12T14:11:25Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java", "diffHunk": "@@ -106,6 +106,12 @@ void setNextRegionForUnload(int nextRegionForUnload) {\n \n   }\n \n+  @Override\n+  public synchronized void setConf(Configuration conf) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNTkwNDI0", "url": "https://github.com/apache/hbase/pull/1279#pullrequestreview-373590424", "createdAt": "2020-03-12T14:12:18Z", "commit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxMjoxOVrOF1gTuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxMjoxOVrOF1gTuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0ODE4NQ==", "bodyText": "If call super method directly, no need to add this method here?", "url": "https://github.com/apache/hbase/pull/1279#discussion_r391648185", "createdAt": "2020-03-12T14:12:19Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/StochasticLoadBalancer.java", "diffHunk": "@@ -360,10 +356,9 @@ protected boolean needsBalance(Cluster cluster) {\n   }\n \n   @Override\n-  public synchronized List<RegionPlan> balanceCluster(TableName tableName, Map<ServerName,\n-    List<RegionInfo>> clusterState) {\n-    this.tableName = tableName;\n-    return balanceCluster(clusterState);\n+  public synchronized List<RegionPlan> balanceCluster(Map<TableName, Map<ServerName,\n+    List<RegionInfo>>> clusterLoadPerTable) {\n+    return super.balanceCluster(clusterLoadPerTable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNTkxODU2", "url": "https://github.com/apache/hbase/pull/1279#pullrequestreview-373591856", "createdAt": "2020-03-12T14:13:54Z", "commit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxMzo1NVrOF1gYGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxMzo1NVrOF1gYGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0OTMwNw==", "bodyText": "Why not support here?", "url": "https://github.com/apache/hbase/pull/1279#discussion_r391649307", "createdAt": "2020-03-12T14:13:55Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java", "diffHunk": "@@ -427,4 +419,9 @@ public void postMasterStartupInitialize() {\n   public void updateBalancerStatus(boolean status) {\n     internalBalancer.updateBalancerStatus(status);\n   }\n+\n+  @Override\n+  public List<RegionPlan> balanceTable(TableName tableName, Map<ServerName, List<RegionInfo>> clusterLoad){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af"}, "originalPosition": 148}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNTkzMTU3", "url": "https://github.com/apache/hbase/pull/1279#pullrequestreview-373593157", "createdAt": "2020-03-12T14:15:24Z", "commit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxNToyNFrOF1gb8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDoxNToyNFrOF1gb8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY1MDI4OA==", "bodyText": "The balancer should only need to override balanceTable method?", "url": "https://github.com/apache/hbase/pull/1279#discussion_r391650288", "createdAt": "2020-03-12T14:15:24Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/favored/FavoredNodeLoadBalancer.java", "diffHunk": "@@ -87,7 +87,8 @@ public synchronized void initialize() throws HBaseIOException {\n   }\n \n   @Override\n-  public List<RegionPlan> balanceCluster(Map<ServerName, List<RegionInfo>> clusterState)  {\n+  public List<RegionPlan>\n+      balanceCluster(Map<TableName, Map<ServerName, List<RegionInfo>>> clusterLoadPerTable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ab54d1e014b762b1cf5117c74439ca01f8bd3af", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/5ab54d1e014b762b1cf5117c74439ca01f8bd3af", "committedDate": "2020-03-12T11:34:19Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table"}, "afterCommit": {"oid": "4aeb3ab18953ad2fdc40ce62a7cf6650db3bf5ee", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/4aeb3ab18953ad2fdc40ce62a7cf6650db3bf5ee", "committedDate": "2020-03-13T04:39:41Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4aeb3ab18953ad2fdc40ce62a7cf6650db3bf5ee", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/4aeb3ab18953ad2fdc40ce62a7cf6650db3bf5ee", "committedDate": "2020-03-13T04:39:41Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table"}, "afterCommit": {"oid": "2d1d3f0d186a5d01add7be2bdd6f88edd44a399c", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/2d1d3f0d186a5d01add7be2bdd6f88edd44a399c", "committedDate": "2020-03-15T14:14:34Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0OTA4MzMy", "url": "https://github.com/apache/hbase/pull/1279#pullrequestreview-374908332", "createdAt": "2020-03-16T04:38:57Z", "commit": {"oid": "2d1d3f0d186a5d01add7be2bdd6f88edd44a399c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNDozODo1N1rOF2lWIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNDozODo1N1rOF2lWIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc3OTI5OQ==", "bodyText": "Add reason for why need to setClusterLoad?", "url": "https://github.com/apache/hbase/pull/1279#discussion_r392779299", "createdAt": "2020-03-16T04:38:57Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/SimpleLoadBalancer.java", "diffHunk": "@@ -594,10 +597,13 @@ private void addRegionPlan(final MinMaxPriorityQueue<RegionPlan> regionsToMove,\n     regionsToReturn.add(rp);\n   }\n \n+  /**\n+   * Override to invoke {@link #setClusterLoad} before balance\n+   */\n   @Override\n-  public List<RegionPlan> balanceCluster(TableName tableName,\n-      Map<ServerName, List<RegionInfo>> clusterState) throws HBaseIOException {\n-    LOG.debug(\"Start Generate Balance plan for table: \" + tableName);\n-    return balanceCluster(clusterState);\n+  public synchronized List<RegionPlan>\n+      balanceCluster(Map<TableName, Map<ServerName, List<RegionInfo>>> clusterLoadPerTable) {\n+    setClusterLoad(clusterLoadPerTable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d1d3f0d186a5d01add7be2bdd6f88edd44a399c"}, "originalPosition": 63}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d1d3f0d186a5d01add7be2bdd6f88edd44a399c", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/2d1d3f0d186a5d01add7be2bdd6f88edd44a399c", "committedDate": "2020-03-15T14:14:34Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}, "afterCommit": {"oid": "7e1adf9b807d3af8e1b7675128f8664cc595e535", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/7e1adf9b807d3af8e1b7675128f8664cc595e535", "committedDate": "2020-03-16T04:45:33Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e1adf9b807d3af8e1b7675128f8664cc595e535", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/7e1adf9b807d3af8e1b7675128f8664cc595e535", "committedDate": "2020-03-16T04:45:33Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}, "afterCommit": {"oid": "ca450f9d31ed251046aa2bb78f61c53e933aed74", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/ca450f9d31ed251046aa2bb78f61c53e933aed74", "committedDate": "2020-03-16T07:38:45Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca450f9d31ed251046aa2bb78f61c53e933aed74", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/ca450f9d31ed251046aa2bb78f61c53e933aed74", "committedDate": "2020-03-16T07:38:45Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}, "afterCommit": {"oid": "c5fe214eec9737fedc440f467b924f79ef7db8af", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/c5fe214eec9737fedc440f467b924f79ef7db8af", "committedDate": "2020-03-16T07:57:20Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0OTA5ODU5", "url": "https://github.com/apache/hbase/pull/1279#pullrequestreview-374909859", "createdAt": "2020-03-16T04:46:13Z", "commit": {"oid": "2d1d3f0d186a5d01add7be2bdd6f88edd44a399c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwNDo0OTowM1rOF2ldnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMzozNDo0MFrOF20YaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjc4MTIxNQ==", "bodyText": "It is wired to call balanceClsuter here. Maybe abstract a new method balanceTableInRSGroup. And balanceTable and balanceClsuter both call the new method.", "url": "https://github.com/apache/hbase/pull/1279#discussion_r392781215", "createdAt": "2020-03-16T04:49:03Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java", "diffHunk": "@@ -427,4 +421,19 @@ public void postMasterStartupInitialize() {\n   public void updateBalancerStatus(boolean status) {\n     internalBalancer.updateBalancerStatus(status);\n   }\n+\n+  /**\n+   * can achieve table balanced rather than overall balanced\n+   */\n+  @Override\n+  public List<RegionPlan> balanceTable(TableName tableName,\n+      Map<ServerName, List<RegionInfo>> clusterLoad) {\n+    Map<TableName, Map<ServerName, List<RegionInfo>>> clusterLoadThisTable = new HashMap<>();\n+    clusterLoadThisTable.put(tableName, clusterLoad);\n+    try {\n+      return balanceCluster(clusterLoadThisTable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e1adf9b807d3af8e1b7675128f8664cc595e535"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyMzQ4Ng==", "bodyText": "LoadOfTableInGroup => loadOfTablesInGroup", "url": "https://github.com/apache/hbase/pull/1279#discussion_r393023486", "createdAt": "2020-03-16T13:31:09Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java", "diffHunk": "@@ -111,51 +109,44 @@ public void setMasterServices(MasterServices masterServices) {\n     this.masterServices = masterServices;\n   }\n \n+  /**\n+   * Override to balance by RSGroup\n+   * not invoke {@link #balanceTable(TableName, Map)}\n+   */\n   @Override\n-  public List<RegionPlan> balanceCluster(TableName tableName, Map<ServerName, List<RegionInfo>>\n-      clusterState) throws IOException {\n-    return balanceCluster(clusterState);\n-  }\n-\n-  @Override\n-  public List<RegionPlan> balanceCluster(Map<ServerName, List<RegionInfo>> clusterState)\n-      throws IOException {\n+  public List<RegionPlan> balanceCluster(\n+      Map<TableName, Map<ServerName, List<RegionInfo>>> loadOfAllTable) throws IOException {\n     if (!isOnline()) {\n       throw new ConstraintException(\n           RSGroupInfoManager.class.getSimpleName() + \" is not online, unable to perform balance\");\n     }\n \n     // Calculate correct assignments and a list of RegionPlan for mis-placed regions\n-    Pair<Map<ServerName,List<RegionInfo>>, List<RegionPlan>> correctedStateAndRegionPlans =\n-        correctAssignments(clusterState);\n-    Map<ServerName,List<RegionInfo>> correctedState = correctedStateAndRegionPlans.getFirst();\n+    Pair<Map<TableName, Map<ServerName, List<RegionInfo>>>, List<RegionPlan>> correctedStateAndRegionPlans =\n+        correctAssignments(loadOfAllTable);\n+    Map<TableName, Map<ServerName, List<RegionInfo>>> correctedLoadOfAllTable =\n+        correctedStateAndRegionPlans.getFirst();\n     List<RegionPlan> regionPlans = correctedStateAndRegionPlans.getSecond();\n-\n+    RSGroupInfo defaultInfo = rsGroupInfoManager.getRSGroup(RSGroupInfo.DEFAULT_GROUP);\n     // Add RegionPlan\n     // for the regions which have been placed according to the region server group assignment\n     // into the movement list\n     try {\n-      // Record which region servers have been processed\uff0cso as to skip them after processed\n-      HashSet<ServerName> processedServers = new HashSet<>();\n-\n       // For each rsgroup\n       for (RSGroupInfo rsgroup : rsGroupInfoManager.listRSGroups()) {\n-        Map<ServerName, List<RegionInfo>> groupClusterState = new HashMap<>();\n-        Map<TableName, Map<ServerName, List<RegionInfo>>> groupClusterLoad = new HashMap<>();\n-        for (ServerName server : clusterState.keySet()) { // for each region server\n-          if (!processedServers.contains(server) // server is not processed yet\n-              && rsgroup.containsServer(server.getAddress())) { // server belongs to this rsgroup\n-            List<RegionInfo> regionsOnServer = correctedState.get(server);\n-            groupClusterState.put(server, regionsOnServer);\n-\n-            processedServers.add(server);\n+        Map<TableName, Map<ServerName, List<RegionInfo>>> LoadOfTableInGroup =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5fe214eec9737fedc440f467b924f79ef7db8af"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAyNTY0MA==", "bodyText": "This test is for SimpleLoadBalancer? Rename TestDefaultLoadBalancer to TestSimpleLoadBalancer?", "url": "https://github.com/apache/hbase/pull/1279#discussion_r393025640", "createdAt": "2020-03-16T13:34:40Z", "author": {"login": "infraio"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/balancer/TestDefaultLoadBalancer.java", "diffHunk": "@@ -58,7 +57,7 @@\n \n   private static final Logger LOG = LoggerFactory.getLogger(TestDefaultLoadBalancer.class);\n \n-  private static LoadBalancer loadBalancer;\n+  private static SimpleLoadBalancer loadBalancer;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5fe214eec9737fedc440f467b924f79ef7db8af"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5fe214eec9737fedc440f467b924f79ef7db8af", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/c5fe214eec9737fedc440f467b924f79ef7db8af", "committedDate": "2020-03-16T07:57:20Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}, "afterCommit": {"oid": "db108eb0895d687ff68caac10a1b338d0cc2cb02", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/db108eb0895d687ff68caac10a1b338d0cc2cb02", "committedDate": "2020-03-16T14:03:48Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db108eb0895d687ff68caac10a1b338d0cc2cb02", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/db108eb0895d687ff68caac10a1b338d0cc2cb02", "committedDate": "2020-03-16T14:03:48Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}, "afterCommit": {"oid": "d071969cb5ed29e4c6bf34c2191421f7c6646088", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/d071969cb5ed29e4c6bf34c2191421f7c6646088", "committedDate": "2020-03-17T02:30:21Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d071969cb5ed29e4c6bf34c2191421f7c6646088", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/d071969cb5ed29e4c6bf34c2191421f7c6646088", "committedDate": "2020-03-17T02:30:21Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}, "afterCommit": {"oid": "ce7aff7470a0c1edb671283591cbb7c363e20e0f", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/ce7aff7470a0c1edb671283591cbb7c363e20e0f", "committedDate": "2020-03-17T12:24:14Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce7aff7470a0c1edb671283591cbb7c363e20e0f", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/ce7aff7470a0c1edb671283591cbb7c363e20e0f", "committedDate": "2020-03-17T12:24:14Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}, "afterCommit": {"oid": "05965882ea72b78a16e3ed52bc5d0ac52277c543", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/05965882ea72b78a16e3ed52bc5d0ac52277c543", "committedDate": "2020-03-18T02:54:17Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MTg4NTkz", "url": "https://github.com/apache/hbase/pull/1279#pullrequestreview-378188593", "createdAt": "2020-03-20T01:08:33Z", "commit": {"oid": "05965882ea72b78a16e3ed52bc5d0ac52277c543"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMTowODozM1rOF5FPjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMTowODozM1rOF5FPjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM5OTA1NA==", "bodyText": "There is no Table ENSEMBLE_TABLE_NAME actually, need to change this log?", "url": "https://github.com/apache/hbase/pull/1279#discussion_r395399054", "createdAt": "2020-03-20T01:08:33Z", "author": {"login": "binlijin"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java", "diffHunk": "@@ -1639,6 +1637,44 @@ private void roundRobinAssignment(Cluster cluster, List<RegionInfo> regions,\n     }\n   }\n \n+  private Map<ServerName, List<RegionInfo>> toEnsumbleTableLoad(\n+      Map<TableName, Map<ServerName, List<RegionInfo>>> LoadOfAllTable) {\n+    Map<ServerName, List<RegionInfo>> returnMap = new TreeMap<>();\n+    for (Map<ServerName, List<RegionInfo>> serverNameListMap : LoadOfAllTable.values()) {\n+      serverNameListMap.forEach((serverName, regionInfoList) -> {\n+        List<RegionInfo> regionInfos =\n+            returnMap.computeIfAbsent(serverName, k -> new ArrayList<>());\n+        regionInfos.addAll(regionInfoList);\n+      });\n+    }\n+    return returnMap;\n+  }\n+\n+  @Override\n+  public abstract List<RegionPlan> balanceTable(TableName tableName,\n+      Map<ServerName, List<RegionInfo>> loadOfOneTable);\n+\n+\n+  @Override\n+  public List<RegionPlan>\n+      balanceCluster(Map<TableName, Map<ServerName, List<RegionInfo>>> loadOfAllTable) {\n+    if (isByTable) {\n+      List<RegionPlan> result = new ArrayList<>();\n+      loadOfAllTable.forEach((tableName, loadOfOneTable) -> {\n+        LOG.debug(\"Start Generate Balance plan for table: \" + tableName);\n+        List<RegionPlan> partialPlans = balanceTable(tableName, loadOfOneTable);\n+        if (partialPlans != null) {\n+          result.addAll(partialPlans);\n+        }\n+      });\n+      return result;\n+    } else {\n+      LOG.debug(\"Start Generate Balance plan for table: \" + HConstants.ENSEMBLE_TABLE_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05965882ea72b78a16e3ed52bc5d0ac52277c543"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODk4NDI2", "url": "https://github.com/apache/hbase/pull/1279#pullrequestreview-378898426", "createdAt": "2020-03-21T07:05:44Z", "commit": {"oid": "05965882ea72b78a16e3ed52bc5d0ac52277c543"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwNzowNTo0NFrOF5oCKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwNzowNTo0NFrOF5oCKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk2OTA2NA==", "bodyText": "LOG.info(\"Start generate balance plan for table: {}\", tableName);", "url": "https://github.com/apache/hbase/pull/1279#discussion_r395969064", "createdAt": "2020-03-21T07:05:44Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/balancer/BaseLoadBalancer.java", "diffHunk": "@@ -1639,6 +1637,44 @@ private void roundRobinAssignment(Cluster cluster, List<RegionInfo> regions,\n     }\n   }\n \n+  private Map<ServerName, List<RegionInfo>> toEnsumbleTableLoad(\n+      Map<TableName, Map<ServerName, List<RegionInfo>>> LoadOfAllTable) {\n+    Map<ServerName, List<RegionInfo>> returnMap = new TreeMap<>();\n+    for (Map<ServerName, List<RegionInfo>> serverNameListMap : LoadOfAllTable.values()) {\n+      serverNameListMap.forEach((serverName, regionInfoList) -> {\n+        List<RegionInfo> regionInfos =\n+            returnMap.computeIfAbsent(serverName, k -> new ArrayList<>());\n+        regionInfos.addAll(regionInfoList);\n+      });\n+    }\n+    return returnMap;\n+  }\n+\n+  @Override\n+  public abstract List<RegionPlan> balanceTable(TableName tableName,\n+      Map<ServerName, List<RegionInfo>> loadOfOneTable);\n+\n+\n+  @Override\n+  public List<RegionPlan>\n+      balanceCluster(Map<TableName, Map<ServerName, List<RegionInfo>>> loadOfAllTable) {\n+    if (isByTable) {\n+      List<RegionPlan> result = new ArrayList<>();\n+      loadOfAllTable.forEach((tableName, loadOfOneTable) -> {\n+        LOG.debug(\"Start Generate Balance plan for table: \" + tableName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05965882ea72b78a16e3ed52bc5d0ac52277c543"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODk4NTkz", "url": "https://github.com/apache/hbase/pull/1279#pullrequestreview-378898593", "createdAt": "2020-03-21T07:09:08Z", "commit": {"oid": "05965882ea72b78a16e3ed52bc5d0ac52277c543"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwNzowOTowOFrOF5oC6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwNzowOTowOFrOF5oC6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk2OTI1Nw==", "bodyText": "add log here, too?", "url": "https://github.com/apache/hbase/pull/1279#discussion_r395969257", "createdAt": "2020-03-21T07:09:08Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java", "diffHunk": "@@ -111,51 +109,45 @@ public void setMasterServices(MasterServices masterServices) {\n     this.masterServices = masterServices;\n   }\n \n+  /**\n+   * Override to balance by RSGroup\n+   * not invoke {@link #balanceTable(TableName, Map)}\n+   */\n   @Override\n-  public List<RegionPlan> balanceCluster(TableName tableName, Map<ServerName, List<RegionInfo>>\n-      clusterState) throws IOException {\n-    return balanceCluster(clusterState);\n-  }\n-\n-  @Override\n-  public List<RegionPlan> balanceCluster(Map<ServerName, List<RegionInfo>> clusterState)\n-      throws IOException {\n+  public List<RegionPlan> balanceCluster(\n+      Map<TableName, Map<ServerName, List<RegionInfo>>> loadOfAllTable) throws IOException {\n     if (!isOnline()) {\n       throw new ConstraintException(\n           RSGroupInfoManager.class.getSimpleName() + \" is not online, unable to perform balance\");\n     }\n \n     // Calculate correct assignments and a list of RegionPlan for mis-placed regions\n-    Pair<Map<ServerName,List<RegionInfo>>, List<RegionPlan>> correctedStateAndRegionPlans =\n-        correctAssignments(clusterState);\n-    Map<ServerName,List<RegionInfo>> correctedState = correctedStateAndRegionPlans.getFirst();\n+    Pair<Map<TableName, Map<ServerName, List<RegionInfo>>>, List<RegionPlan>> correctedStateAndRegionPlans =\n+        correctAssignments(loadOfAllTable);\n+    Map<TableName, Map<ServerName, List<RegionInfo>>> correctedLoadOfAllTable =\n+        correctedStateAndRegionPlans.getFirst();\n     List<RegionPlan> regionPlans = correctedStateAndRegionPlans.getSecond();\n-\n+    RSGroupInfo defaultInfo = rsGroupInfoManager.getRSGroup(RSGroupInfo.DEFAULT_GROUP);\n     // Add RegionPlan\n     // for the regions which have been placed according to the region server group assignment\n     // into the movement list\n     try {\n-      // Record which region servers have been processed\uff0cso as to skip them after processed\n-      HashSet<ServerName> processedServers = new HashSet<>();\n-\n       // For each rsgroup\n       for (RSGroupInfo rsgroup : rsGroupInfoManager.listRSGroups()) {\n-        Map<ServerName, List<RegionInfo>> groupClusterState = new HashMap<>();\n-        Map<TableName, Map<ServerName, List<RegionInfo>>> groupClusterLoad = new HashMap<>();\n-        for (ServerName server : clusterState.keySet()) { // for each region server\n-          if (!processedServers.contains(server) // server is not processed yet\n-              && rsgroup.containsServer(server.getAddress())) { // server belongs to this rsgroup\n-            List<RegionInfo> regionsOnServer = correctedState.get(server);\n-            groupClusterState.put(server, regionsOnServer);\n-\n-            processedServers.add(server);\n+        Map<TableName, Map<ServerName, List<RegionInfo>>> loadOfTablesInGroup =\n+            new HashMap<>();\n+        for (Map.Entry<TableName, Map<ServerName, List<RegionInfo>>> entry: correctedLoadOfAllTable.entrySet()) {\n+          TableName tableName = entry.getKey();\n+          RSGroupInfo targetRSGInfo = RSGroupUtil\n+              .getRSGroupInfo(masterServices, rsGroupInfoManager, tableName).orElse(defaultInfo);\n+          if (targetRSGInfo.getName().equals(rsgroup.getName())) {\n+            loadOfTablesInGroup.put(tableName, entry.getValue());\n           }\n         }\n-\n-        groupClusterLoad.put(HConstants.ENSEMBLE_TABLE_NAME, groupClusterState);\n-        this.internalBalancer.setClusterLoad(groupClusterLoad);\n-        List<RegionPlan> groupPlans = this.internalBalancer\n-            .balanceCluster(groupClusterState);\n+        List<RegionPlan> groupPlans = null;\n+        if (!loadOfTablesInGroup.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05965882ea72b78a16e3ed52bc5d0ac52277c543"}, "originalPosition": 78}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODk4NjYy", "url": "https://github.com/apache/hbase/pull/1279#pullrequestreview-378898662", "createdAt": "2020-03-21T07:10:49Z", "commit": {"oid": "05965882ea72b78a16e3ed52bc5d0ac52277c543"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05965882ea72b78a16e3ed52bc5d0ac52277c543", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/05965882ea72b78a16e3ed52bc5d0ac52277c543", "committedDate": "2020-03-18T02:54:17Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}, "afterCommit": {"oid": "eb77aa774407e7685e22c6b75f115b60a82689da", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/eb77aa774407e7685e22c6b75f115b60a82689da", "committedDate": "2020-03-21T10:25:46Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb77aa774407e7685e22c6b75f115b60a82689da", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/eb77aa774407e7685e22c6b75f115b60a82689da", "committedDate": "2020-03-21T10:25:46Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}, "afterCommit": {"oid": "43490bc6f5b6d5a74b5977f08a868d4d6f2d9662", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/43490bc6f5b6d5a74b5977f08a868d4d6f2d9662", "committedDate": "2020-03-22T09:29:32Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f7d7099c6f397d1f59897ccbd6df75d608b406d", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/7f7d7099c6f397d1f59897ccbd6df75d608b406d", "committedDate": "2020-03-22T10:19:46Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "43490bc6f5b6d5a74b5977f08a868d4d6f2d9662", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/43490bc6f5b6d5a74b5977f08a868d4d6f2d9662", "committedDate": "2020-03-22T09:29:32Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}, "afterCommit": {"oid": "7f7d7099c6f397d1f59897ccbd6df75d608b406d", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/7f7d7099c6f397d1f59897ccbd6df75d608b406d", "committedDate": "2020-03-22T10:19:46Z", "message": "HBASE-23949 refactor loadBalancer implements for rsgroup balance by table to achieve overallbalanced"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2651, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}