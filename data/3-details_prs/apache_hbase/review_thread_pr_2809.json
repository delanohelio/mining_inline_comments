{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NzU4Njcz", "number": 2809, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQwMToxMzoyNVrOFJM8aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQwNTozNjo0NlrOFJN9Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTkzNTc5OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQwMToxMzoyNVrOILf8fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQwMToxMzoyNVrOILf8fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkyODYzNw==", "bodyText": "Please use try-with-resources to close the connection.", "url": "https://github.com/apache/hbase/pull/2809#discussion_r548928637", "createdAt": "2020-12-26T01:13:25Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java", "diffHunk": "@@ -379,6 +381,36 @@ public void testUnauthorizedStopMaster() throws Exception {\n         USER_GROUP_WRITE, USER_GROUP_CREATE);\n   }\n \n+  @Test\n+  public void testUnauthorizedSetTableStateInMeta() throws Exception {\n+    AccessTestAction action = new AccessTestAction() {\n+      @Override public Object run() throws Exception {\n+        Connection conn = ConnectionFactory.createConnection(TEST_UTIL.getConfiguration()) ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2361c2b6e10f2b81d067e69062d04c5868dd5d3f"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MTkzNTk4OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQwMToxMzozNlrOILf8kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQwMToxMzozNlrOILf8kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkyODY1Nw==", "bodyText": "Ditto.", "url": "https://github.com/apache/hbase/pull/2809#discussion_r548928657", "createdAt": "2020-12-26T01:13:36Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java", "diffHunk": "@@ -379,6 +381,36 @@ public void testUnauthorizedStopMaster() throws Exception {\n         USER_GROUP_WRITE, USER_GROUP_CREATE);\n   }\n \n+  @Test\n+  public void testUnauthorizedSetTableStateInMeta() throws Exception {\n+    AccessTestAction action = new AccessTestAction() {\n+      @Override public Object run() throws Exception {\n+        Connection conn = ConnectionFactory.createConnection(TEST_UTIL.getConfiguration()) ;\n+        Hbck hbck = conn.getHbck();\n+        hbck.setTableStateInMeta(new TableState(TEST_TABLE, TableState.State.DISABLED));\n+        return null;\n+      }\n+    };\n+\n+    verifyDenied(action, USER_CREATE, USER_OWNER, USER_RW, USER_RO, USER_NONE, USER_GROUP_READ,\n+        USER_GROUP_WRITE, USER_GROUP_CREATE);\n+  }\n+\n+  @Test\n+  public void testUnauthorizedFixMeta() throws Exception {\n+    AccessTestAction action = new AccessTestAction() {\n+      @Override public Object run() throws Exception {\n+        Connection conn = ConnectionFactory.createConnection(TEST_UTIL.getConfiguration()) ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2361c2b6e10f2b81d067e69062d04c5868dd5d3f"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MjEwMTYyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQwNTozNjoyNFrOILhCAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQwNTozNjoyNFrOILhCAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk0NjQzMg==", "bodyText": "Let's use lambda here?\n    AccessTestAction action = () -> {\n...\n...\n...\n      return null;\n    };", "url": "https://github.com/apache/hbase/pull/2809#discussion_r548946432", "createdAt": "2020-12-26T05:36:24Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java", "diffHunk": "@@ -379,6 +381,36 @@ public void testUnauthorizedStopMaster() throws Exception {\n         USER_GROUP_WRITE, USER_GROUP_CREATE);\n   }\n \n+  @Test\n+  public void testUnauthorizedSetTableStateInMeta() throws Exception {\n+    AccessTestAction action = new AccessTestAction() {\n+      @Override public Object run() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2361c2b6e10f2b81d067e69062d04c5868dd5d3f"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1MjEwMTk4OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQwNTozNjo0NlrOILhCJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNlQwNTozNjo0NlrOILhCJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODk0NjQ2OQ==", "bodyText": "Same here", "url": "https://github.com/apache/hbase/pull/2809#discussion_r548946469", "createdAt": "2020-12-26T05:36:46Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/security/access/TestAccessController.java", "diffHunk": "@@ -379,6 +381,36 @@ public void testUnauthorizedStopMaster() throws Exception {\n         USER_GROUP_WRITE, USER_GROUP_CREATE);\n   }\n \n+  @Test\n+  public void testUnauthorizedSetTableStateInMeta() throws Exception {\n+    AccessTestAction action = new AccessTestAction() {\n+      @Override public Object run() throws Exception {\n+        Connection conn = ConnectionFactory.createConnection(TEST_UTIL.getConfiguration()) ;\n+        Hbck hbck = conn.getHbck();\n+        hbck.setTableStateInMeta(new TableState(TEST_TABLE, TableState.State.DISABLED));\n+        return null;\n+      }\n+    };\n+\n+    verifyDenied(action, USER_CREATE, USER_OWNER, USER_RW, USER_RO, USER_NONE, USER_GROUP_READ,\n+        USER_GROUP_WRITE, USER_GROUP_CREATE);\n+  }\n+\n+  @Test\n+  public void testUnauthorizedFixMeta() throws Exception {\n+    AccessTestAction action = new AccessTestAction() {\n+      @Override public Object run() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2361c2b6e10f2b81d067e69062d04c5868dd5d3f"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2265, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}