{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NzkyNzA4", "number": 1924, "title": "HBASE-24552 Replica region needs to check if primary region directory\u2026", "bodyText": "\u2026 exists at file system in TransitRegionStateProcedure", "createdAt": "2020-06-18T22:25:45Z", "url": "https://github.com/apache/hbase/pull/1924", "merged": true, "mergeCommit": {"oid": "82fad5d7897a3fe676570d27f728892713d2f793"}, "closed": true, "closedAt": "2020-06-24T16:43:12Z", "author": {"login": "huaxiangsun"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABct0Rg2AFqTQzNTEyOTcyMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABct2kA0gBqjM0Njk5NzExODk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MTI5NzIw", "url": "https://github.com/apache/hbase/pull/1924#pullrequestreview-435129720", "createdAt": "2020-06-22T17:23:45Z", "commit": {"oid": "3650719184e325c2c241ea1f640befef9c9488ad"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzoyMzo0NlrOGnKKwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzoyNToxM1rOGnKN7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxNDI0MQ==", "bodyText": "This is a mistake then? Master is the authority. If it can't make a call on read replicas, then read replicas are not done right?", "url": "https://github.com/apache/hbase/pull/1924#discussion_r443714241", "createdAt": "2020-06-22T17:23:46Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure.java", "diffHunk": "@@ -338,6 +345,35 @@ protected Flow executeFromState(MasterProcedureEnv env, RegionStateTransitionSta\n     try {\n       switch (state) {\n         case REGION_STATE_TRANSITION_GET_ASSIGN_CANDIDATE:\n+\n+          // Need to do some sanity check for replica region, if the region does not exist at file\n+          // system, do not try to assign the replica region, log error and return.\n+          // Do not rely on master's in-memory state, primary region got its own life, it can be\n+          // closed, offline for various reasons.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3650719184e325c2c241ea1f640befef9c9488ad"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxNTA1NA==", "bodyText": "Ouch.\nWe need follow-on to fix read replicas so Master is authority?", "url": "https://github.com/apache/hbase/pull/1924#discussion_r443715054", "createdAt": "2020-06-22T17:25:13Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure.java", "diffHunk": "@@ -338,6 +345,35 @@ protected Flow executeFromState(MasterProcedureEnv env, RegionStateTransitionSta\n     try {\n       switch (state) {\n         case REGION_STATE_TRANSITION_GET_ASSIGN_CANDIDATE:\n+\n+          // Need to do some sanity check for replica region, if the region does not exist at file\n+          // system, do not try to assign the replica region, log error and return.\n+          // Do not rely on master's in-memory state, primary region got its own life, it can be\n+          // closed, offline for various reasons.\n+          if (!RegionReplicaUtil.isDefaultReplica(regionNode.getRegionInfo())) {\n+            MasterFileSystem mfs = env.getMasterServices().getMasterFileSystem();\n+            RegionInfo replicaRI = regionNode.getRegionInfo();\n+            Path tableDir = CommonFSUtils.getTableDir(mfs.getRootDir(), regionNode.getTable());\n+            Path regionDir = FSUtils.getRegionDirFromTableDir(tableDir, replicaRI);\n+            FileSystem fs = mfs.getFileSystem();\n+            // Check if primary region directory exists\n+            if (!fs.exists(regionDir)) {\n+              LOG.error(\n+                \"Cannot assign replica region {} because its primary region {} does not exist\"\n+                  + \" at Filesystem\", replicaRI,\n+                ServerRegionReplicaUtil.getRegionInfoForDefaultReplica(replicaRI));\n+              return Flow.NO_MORE_STATE;\n+            }\n+            // check if .regionInfo exists in primary region\n+            Path regionInfoFile = new Path(regionDir, HRegionFileSystem.REGION_INFO_FILE);\n+            if (!fs.exists(regionInfoFile)) {\n+              LOG.error(\n+                \"Cannot assign replica region {} because region info file does not exist in its\"\n+                  + \" primary region {}\", replicaRI,\n+                ServerRegionReplicaUtil.getRegionInfoForDefaultReplica(replicaRI));\n+              return Flow.NO_MORE_STATE;\n+            }\n+          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3650719184e325c2c241ea1f640befef9c9488ad"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cabf822600631c324dae0211f98bb9328db31a6", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/1cabf822600631c324dae0211f98bb9328db31a6", "committedDate": "2020-06-22T20:06:24Z", "message": "HBASE-24552 Replica region needs to check if primary region directory exists at file system in TransitRegionStateProcedure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3650719184e325c2c241ea1f640befef9c9488ad", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/3650719184e325c2c241ea1f640befef9c9488ad", "committedDate": "2020-06-18T22:24:12Z", "message": "HBASE-24552 Replica region needs to check if primary region directory exists at file system in TransitRegionStateProcedure"}, "afterCommit": {"oid": "1cabf822600631c324dae0211f98bb9328db31a6", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/1cabf822600631c324dae0211f98bb9328db31a6", "committedDate": "2020-06-22T20:06:24Z", "message": "HBASE-24552 Replica region needs to check if primary region directory exists at file system in TransitRegionStateProcedure"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4350, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}