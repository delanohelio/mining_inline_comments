{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0OTg2MTEy", "number": 1803, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzozOToxMVrOEA-xug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwNjoxNzoyOFrOEBQa6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NDYzOTk0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxNzozOToxMVrOGcmKWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMDozNTo1NlrOGcvh6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzODU1NQ==", "bodyText": "In all the places we have this pattern  \"in store {} in region {}\"\nBetter we can change toString().  Include region and store name there.  Then in every log we can just refer to 'this'\n:  some format like this for toString?", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432638555", "createdAt": "2020-05-29T17:39:11Z", "author": {"login": "anoopsjohn"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -276,7 +276,8 @@ protected HStore(final HRegion region, final ColumnFamilyDescriptor family,\n     // used by ScanQueryMatcher\n     long timeToPurgeDeletes =\n         Math.max(conf.getLong(\"hbase.hstore.time.to.purge.deletes\", 0), 0);\n-    LOG.trace(\"Time to purge deletes set to {}ms in store {}\", timeToPurgeDeletes, this);\n+    LOG.trace(\"Time to purge deletes set to {}ms in store {} in region {}\", timeToPurgeDeletes,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTQzOA==", "bodyText": "I like what @anoopsjohn  says. toString could be encodedRegionName/store-name (region name is too much -- could be anything given it includes start key... could be a spew of binary characters....)", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432785438", "createdAt": "2020-05-29T23:50:55Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -276,7 +276,8 @@ protected HStore(final HRegion region, final ColumnFamilyDescriptor family,\n     // used by ScanQueryMatcher\n     long timeToPurgeDeletes =\n         Math.max(conf.getLong(\"hbase.hstore.time.to.purge.deletes\", 0), 0);\n-    LOG.trace(\"Time to purge deletes set to {}ms in store {}\", timeToPurgeDeletes, this);\n+    LOG.trace(\"Time to purge deletes set to {}ms in store {} in region {}\", timeToPurgeDeletes,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzODU1NQ=="}, "originalCommit": {"oid": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTU3OA==", "bodyText": "Otherwise I'd comment that no need of words 'store' or 'region' in log message; no need of these qualifiers.", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432785578", "createdAt": "2020-05-29T23:51:45Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -276,7 +276,8 @@ protected HStore(final HRegion region, final ColumnFamilyDescriptor family,\n     // used by ScanQueryMatcher\n     long timeToPurgeDeletes =\n         Math.max(conf.getLong(\"hbase.hstore.time.to.purge.deletes\", 0), 0);\n-    LOG.trace(\"Time to purge deletes set to {}ms in store {}\", timeToPurgeDeletes, this);\n+    LOG.trace(\"Time to purge deletes set to {}ms in store {} in region {}\", timeToPurgeDeletes,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzODU1NQ=="}, "originalCommit": {"oid": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5MjA0MA==", "bodyText": "Good suggestions, I will do more work on this, thank you for all your reviews", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432792040", "createdAt": "2020-05-30T00:35:56Z", "author": {"login": "songxincun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -276,7 +276,8 @@ protected HStore(final HRegion region, final ColumnFamilyDescriptor family,\n     // used by ScanQueryMatcher\n     long timeToPurgeDeletes =\n         Math.max(conf.getLong(\"hbase.hstore.time.to.purge.deletes\", 0), 0);\n-    LOG.trace(\"Time to purge deletes set to {}ms in store {}\", timeToPurgeDeletes, this);\n+    LOG.trace(\"Time to purge deletes set to {}ms in store {} in region {}\", timeToPurgeDeletes,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjYzODU1NQ=="}, "originalCommit": {"oid": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTU1NTc3OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzo1MjozOFrOGcvJdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMDozODo1N1rOGcvjcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTc4MQ==", "bodyText": "Why have 'HStore:' in here? Instead of 'Created HStore: Store=', just have 'Created '.", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432785781", "createdAt": "2020-05-29T23:52:38Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -331,11 +332,11 @@ protected HStore(final HRegion region, final ColumnFamilyDescriptor family,\n       confPrintThreshold = 10;\n     }\n     this.parallelPutCountPrintThreshold = confPrintThreshold;\n-    LOG.info(\"Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"\n-            + \"parallelPutCountPrintThreshold={}, encoding={}, compression={}\",\n+    LOG.info(\"Created HStore: Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5MjQzNA==", "bodyText": "Why have 'HStore:' in here? Instead of 'Created HStore: Store=', just have 'Created '.\n\nGot it", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432792434", "createdAt": "2020-05-30T00:38:57Z", "author": {"login": "songxincun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -331,11 +332,11 @@ protected HStore(final HRegion region, final ColumnFamilyDescriptor family,\n       confPrintThreshold = 10;\n     }\n     this.parallelPutCountPrintThreshold = confPrintThreshold;\n-    LOG.info(\"Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"\n-            + \"parallelPutCountPrintThreshold={}, encoding={}, compression={}\",\n+    LOG.info(\"Created HStore: Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTc4MQ=="}, "originalCommit": {"oid": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTU1NjA0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzo1Mjo1MlrOGcvJnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwNToyNjozNlrOGcww6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTgyMA==", "bodyText": "Encoded name, not full name.", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432785820", "createdAt": "2020-05-29T23:52:52Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -331,11 +332,11 @@ protected HStore(final HRegion region, final ColumnFamilyDescriptor family,\n       confPrintThreshold = 10;\n     }\n     this.parallelPutCountPrintThreshold = confPrintThreshold;\n-    LOG.info(\"Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"\n-            + \"parallelPutCountPrintThreshold={}, encoding={}, compression={}\",\n+    LOG.info(\"Created HStore: Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"\n+            + \"parallelPutCountPrintThreshold={}, encoding={}, compression={} in region {}\",\n         getColumnFamilyName(), memstore.getClass().getSimpleName(), policyName, verifyBulkLoads,\n         parallelPutCountPrintThreshold, family.getDataBlockEncoding(),\n-        family.getCompressionType());\n+        family.getCompressionType(), getRegionInfo().getRegionNameAsString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5MjQ1NQ==", "bodyText": "Encoded name, not full name.\n\nOK", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432792455", "createdAt": "2020-05-30T00:39:08Z", "author": {"login": "songxincun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -331,11 +332,11 @@ protected HStore(final HRegion region, final ColumnFamilyDescriptor family,\n       confPrintThreshold = 10;\n     }\n     this.parallelPutCountPrintThreshold = confPrintThreshold;\n-    LOG.info(\"Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"\n-            + \"parallelPutCountPrintThreshold={}, encoding={}, compression={}\",\n+    LOG.info(\"Created HStore: Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"\n+            + \"parallelPutCountPrintThreshold={}, encoding={}, compression={} in region {}\",\n         getColumnFamilyName(), memstore.getClass().getSimpleName(), policyName, verifyBulkLoads,\n         parallelPutCountPrintThreshold, family.getDataBlockEncoding(),\n-        family.getCompressionType());\n+        family.getCompressionType(), getRegionInfo().getRegionNameAsString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTgyMA=="}, "originalCommit": {"oid": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjgxMjI2NQ==", "bodyText": "Oh ya encoded name..  In fact  I wanted to say , better we can use RegionInfo#prettyPrint(encodedRegionName).. Sorry missed adding that.", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432812265", "createdAt": "2020-05-30T05:26:36Z", "author": {"login": "anoopsjohn"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -331,11 +332,11 @@ protected HStore(final HRegion region, final ColumnFamilyDescriptor family,\n       confPrintThreshold = 10;\n     }\n     this.parallelPutCountPrintThreshold = confPrintThreshold;\n-    LOG.info(\"Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"\n-            + \"parallelPutCountPrintThreshold={}, encoding={}, compression={}\",\n+    LOG.info(\"Created HStore: Store={},  memstore type={}, storagePolicy={}, verifyBulkLoads={}, \"\n+            + \"parallelPutCountPrintThreshold={}, encoding={}, compression={} in region {}\",\n         getColumnFamilyName(), memstore.getClass().getSimpleName(), policyName, verifyBulkLoads,\n         parallelPutCountPrintThreshold, family.getDataBlockEncoding(),\n-        family.getCompressionType());\n+        family.getCompressionType(), getRegionInfo().getRegionNameAsString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NTgyMA=="}, "originalCommit": {"oid": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NTU1NzMwOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMzo1NDowM1rOGcvKZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQwMDozOTozMVrOGcvjpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NjAyMw==", "bodyText": "No need of 'Store' or 'region'... its obvious that we're talking store and region. Having these works in there bulk up logging and make it harder to read/parse.", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432786023", "createdAt": "2020-05-29T23:54:03Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -1192,8 +1198,10 @@ public StoreFileWriter createWriterInTmp(long maxKeyCount, Compression.Algorithm\n       if (shouldCacheDataOnWrite) {\n         writerCacheConf.enableCacheOnWrite();\n         if (!cacheOnWriteLogged) {\n-          LOG.info(\"For Store {} , cacheDataOnWrite is true, hence enabled cacheOnWrite for \" +\n-            \"Index blocks and Bloom filter blocks\", getColumnFamilyName());\n+          LOG.info(\"For Store {} in region {}, \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc5MjQ4Nw==", "bodyText": "No need of 'Store' or 'region'... its obvious that we're talking store and region. Having these works in there bulk up logging and make it harder to read/parse.\n\nGot it", "url": "https://github.com/apache/hbase/pull/1803#discussion_r432792487", "createdAt": "2020-05-30T00:39:31Z", "author": {"login": "songxincun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -1192,8 +1198,10 @@ public StoreFileWriter createWriterInTmp(long maxKeyCount, Compression.Algorithm\n       if (shouldCacheDataOnWrite) {\n         writerCacheConf.enableCacheOnWrite();\n         if (!cacheOnWriteLogged) {\n-          LOG.info(\"For Store {} , cacheDataOnWrite is true, hence enabled cacheOnWrite for \" +\n-            \"Index blocks and Bloom filter blocks\", getColumnFamilyName());\n+          LOG.info(\"For Store {} in region {}, \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc4NjAyMw=="}, "originalCommit": {"oid": "fdec3a18238cfe084d3e31fdd1a62e67c4200d57"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NzUzMDY3OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwNjoxNzoyOFrOGc_4GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwNjoyNDozN1rOGc__uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA1OTg2NQ==", "bodyText": "add a space before is", "url": "https://github.com/apache/hbase/pull/1803#discussion_r433059865", "createdAt": "2020-06-01T06:17:28Z", "author": {"login": "binlijin"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -1953,8 +1950,7 @@ public boolean shouldPerformMajorCompaction() throws IOException {\n     }\n \n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(getRegionInfo().getEncodedName() + \" - \" + getColumnFamilyName()\n-          + \": Initiating \" + (request.isMajor() ? \"major\" : \"minor\") + \" compaction\"\n+      LOG.debug(this + \"is initiating \" + (request.isMajor() ? \"major\" : \"minor\") + \" compaction\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7a3af26d7da1abc9d62528d0bd08ded585b00b1"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA2MTgxOQ==", "bodyText": "OK", "url": "https://github.com/apache/hbase/pull/1803#discussion_r433061819", "createdAt": "2020-06-01T06:24:37Z", "author": {"login": "songxincun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HStore.java", "diffHunk": "@@ -1953,8 +1950,7 @@ public boolean shouldPerformMajorCompaction() throws IOException {\n     }\n \n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(getRegionInfo().getEncodedName() + \" - \" + getColumnFamilyName()\n-          + \": Initiating \" + (request.isMajor() ? \"major\" : \"minor\") + \" compaction\"\n+      LOG.debug(this + \"is initiating \" + (request.isMajor() ? \"major\" : \"minor\") + \" compaction\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA1OTg2NQ=="}, "originalCommit": {"oid": "f7a3af26d7da1abc9d62528d0bd08ded585b00b1"}, "originalPosition": 136}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3084, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}