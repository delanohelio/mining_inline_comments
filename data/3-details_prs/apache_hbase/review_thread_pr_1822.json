{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1ODQ0MjU3", "number": 1822, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxNDoxMjo0NVrOEDPUGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxNDoxMjo0NVrOEDPUGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxODMyMDg5OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/filter/MultipleColumnPrefixFilter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxNDoxMjo0NVrOGgJwXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wN1QxNDo1Mjo0MVrOGgJ_5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM2NzQ1NQ==", "bodyText": "Now that you are doing this improvement, maybe you can improve looping also:\n      for (byte[] prefix : prefixes) {\n        if (!sortedPrefixes.add(prefix)){\n        }\n      }", "url": "https://github.com/apache/hbase/pull/1822#discussion_r436367455", "createdAt": "2020-06-07T14:12:45Z", "author": {"login": "virajjasani"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/filter/MultipleColumnPrefixFilter.java", "diffHunk": "@@ -40,15 +42,18 @@\n  */\n @InterfaceAudience.Public\n public class MultipleColumnPrefixFilter extends FilterBase {\n+  private static final Logger LOG = LoggerFactory.getLogger(MultipleColumnPrefixFilter.class);\n   protected byte [] hint = null;\n   protected TreeSet<byte []> sortedPrefixes = createTreeSet();\n   private final static int MAX_LOG_PREFIXES = 5;\n \n   public MultipleColumnPrefixFilter(final byte [][] prefixes) {\n     if (prefixes != null) {\n       for (int i = 0; i < prefixes.length; i++) {\n-        if (!sortedPrefixes.add(prefixes[i]))\n-          throw new IllegalArgumentException (\"prefixes must be distinct\");\n+        if (!sortedPrefixes.add(prefixes[i])) {\n+          LOG.error(\"prefix {} is repeated\", Bytes.toString(prefixes[i]));\n+          throw new IllegalArgumentException(\"prefixes must be distinct\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "365cc174bf67a8c1420d87d9959796c5229b2cde"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM3MTQzMA==", "bodyText": "Fixed.\nThanks.", "url": "https://github.com/apache/hbase/pull/1822#discussion_r436371430", "createdAt": "2020-06-07T14:52:41Z", "author": {"login": "bsglz"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/filter/MultipleColumnPrefixFilter.java", "diffHunk": "@@ -40,15 +42,18 @@\n  */\n @InterfaceAudience.Public\n public class MultipleColumnPrefixFilter extends FilterBase {\n+  private static final Logger LOG = LoggerFactory.getLogger(MultipleColumnPrefixFilter.class);\n   protected byte [] hint = null;\n   protected TreeSet<byte []> sortedPrefixes = createTreeSet();\n   private final static int MAX_LOG_PREFIXES = 5;\n \n   public MultipleColumnPrefixFilter(final byte [][] prefixes) {\n     if (prefixes != null) {\n       for (int i = 0; i < prefixes.length; i++) {\n-        if (!sortedPrefixes.add(prefixes[i]))\n-          throw new IllegalArgumentException (\"prefixes must be distinct\");\n+        if (!sortedPrefixes.add(prefixes[i])) {\n+          LOG.error(\"prefix {} is repeated\", Bytes.toString(prefixes[i]));\n+          throw new IllegalArgumentException(\"prefixes must be distinct\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjM2NzQ1NQ=="}, "originalCommit": {"oid": "365cc174bf67a8c1420d87d9959796c5229b2cde"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2912, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}