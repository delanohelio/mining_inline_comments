{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MzQ5OTM5", "number": 2419, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDozODo0NlrOEk_4Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzoyNzoyOFrOEv5hVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjMwNzY3OnYy", "diffSide": "LEFT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDozODo0NlrOHUP-wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQwNjoyODowNFrOHVCBZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5NTM5NA==", "bodyText": "where else do we do the initialize?", "url": "https://github.com/apache/hbase/pull/2419#discussion_r490995394", "createdAt": "2020-09-18T14:38:46Z", "author": {"login": "busbey"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java", "diffHunk": "@@ -85,8 +85,6 @@ public HFileSystem(Configuration conf, boolean useHBaseChecksum)\n     this.fs = FileSystem.get(conf);\n     this.useHBaseChecksum = useHBaseChecksum;\n \n-    fs.initialize(getDefaultUri(conf), conf);\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29cac230b871f03edb819074ff97c33f1df9182e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5NjI4Nw==", "bodyText": "I'm presuming we need to do it once. I get that Filesystem.get should be caching and giving us back the same FileSystem in multiple HFileSystem constructions.\nSide note, why are we making multiple instances of HFileSystem?", "url": "https://github.com/apache/hbase/pull/2419#discussion_r490996287", "createdAt": "2020-09-18T14:40:00Z", "author": {"login": "busbey"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java", "diffHunk": "@@ -85,8 +85,6 @@ public HFileSystem(Configuration conf, boolean useHBaseChecksum)\n     this.fs = FileSystem.get(conf);\n     this.useHBaseChecksum = useHBaseChecksum;\n \n-    fs.initialize(getDefaultUri(conf), conf);\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5NTM5NA=="}, "originalCommit": {"oid": "29cac230b871f03edb819074ff97c33f1df9182e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5ODY3MQ==", "bodyText": "@busbey\nThanks for having a look. Yes the FileSystem.get is giving us the same instance of the Filesystem and always does an intialize also. .So we doing another initialize() is actually creating all member variables more than once. We have seen in our FS impl we have some thread pools - all those are getting created more than once.", "url": "https://github.com/apache/hbase/pull/2419#discussion_r490998671", "createdAt": "2020-09-18T14:43:46Z", "author": {"login": "ramkrish86"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java", "diffHunk": "@@ -85,8 +85,6 @@ public HFileSystem(Configuration conf, boolean useHBaseChecksum)\n     this.fs = FileSystem.get(conf);\n     this.useHBaseChecksum = useHBaseChecksum;\n \n-    fs.initialize(getDefaultUri(conf), conf);\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5NTM5NA=="}, "originalCommit": {"oid": "29cac230b871f03edb819074ff97c33f1df9182e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAwMDU2Mw==", "bodyText": "`  private static FileSystem createFileSystem(URI uri, Configuration conf\n) throws IOException {\nClass<?> clazz = getFileSystemClass(uri.getScheme(), conf);\n\nif (clazz == null) {\n\n  throw new IOException(\"No FileSystem for scheme: \" + uri.getScheme());\n\n}\n\nFileSystem fs = (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n\nfs.initialize(uri, conf);\n\nreturn fs;\n\n}`\nThis is what happens inside FileSystem.get()", "url": "https://github.com/apache/hbase/pull/2419#discussion_r491000563", "createdAt": "2020-09-18T14:46:34Z", "author": {"login": "ramkrish86"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java", "diffHunk": "@@ -85,8 +85,6 @@ public HFileSystem(Configuration conf, boolean useHBaseChecksum)\n     this.fs = FileSystem.get(conf);\n     this.useHBaseChecksum = useHBaseChecksum;\n \n-    fs.initialize(getDefaultUri(conf), conf);\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5NTM5NA=="}, "originalCommit": {"oid": "29cac230b871f03edb819074ff97c33f1df9182e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAxNDcwMg==", "bodyText": "looking at the source and javadocs for hadoop versions we use, I think we should remove this line as you have done and then also replace line 85 with\n this.fs = FileSystem.get(getDefaultUri(conf), conf);\n\nbecause the javadocs for that version of get make clear that initialize will have already been called on whatever is returned. the get method we're using now is ambiguous about it.", "url": "https://github.com/apache/hbase/pull/2419#discussion_r491014702", "createdAt": "2020-09-18T15:08:55Z", "author": {"login": "busbey"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java", "diffHunk": "@@ -85,8 +85,6 @@ public HFileSystem(Configuration conf, boolean useHBaseChecksum)\n     this.fs = FileSystem.get(conf);\n     this.useHBaseChecksum = useHBaseChecksum;\n \n-    fs.initialize(getDefaultUri(conf), conf);\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5NTM5NA=="}, "originalCommit": {"oid": "29cac230b871f03edb819074ff97c33f1df9182e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTgxNTI2OA==", "bodyText": "Sure @busbey we can change it. but pls do remember that this get() call - what ever flavor of the FS#get() we do, we have already done a call to the FS#get even before we do the HFileSystem creation.\n`public static Path getWALRootDir(final Configuration c) throws IOException {\nPath p = new Path(c.get(HBASE_WAL_DIR, c.get(HConstants.HBASE_DIR)));\n\nif (!isValidWALRootDir(p, c)) {\n\n  return getRootDir(c);\n\n}\n\nFileSystem fs = p.getFileSystem(c);\n\nreturn p.makeQualified(fs.getUri(), fs.getWorkingDirectory());\n\n}\n`\nwhen we do p.getFileSystem() we have inited the file system.", "url": "https://github.com/apache/hbase/pull/2419#discussion_r491815268", "createdAt": "2020-09-21T06:28:04Z", "author": {"login": "ramkrish86"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java", "diffHunk": "@@ -85,8 +85,6 @@ public HFileSystem(Configuration conf, boolean useHBaseChecksum)\n     this.fs = FileSystem.get(conf);\n     this.useHBaseChecksum = useHBaseChecksum;\n \n-    fs.initialize(getDefaultUri(conf), conf);\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDk5NTM5NA=="}, "originalCommit": {"oid": "29cac230b871f03edb819074ff97c33f1df9182e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NTMxMTk3OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMzo1NTo1MVrOHjdhNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwNToyMToyN1rOHj9muQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk0NTg0Nw==", "bodyText": "Mind explaining a bit why we need this change? And also add it to the comment above? And I also see later we all change to use URI instead of Path. What is the reason?", "url": "https://github.com/apache/hbase/pull/2419#discussion_r506945847", "createdAt": "2020-10-17T13:55:51Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java", "diffHunk": "@@ -82,11 +82,9 @@ public HFileSystem(Configuration conf, boolean useHBaseChecksum)\n     // Create the default filesystem with checksum verification switched on.\n     // By default, any operation to this FilterFileSystem occurs on\n     // the underlying filesystem that has checksums switched on.\n-    this.fs = FileSystem.get(conf);\n+    this.fs = FileSystem.get(getDefaultUri(conf), conf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "08934cbaf0d8d731154aa9cea0064925b1572955"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzQ3MTU0NQ==", "bodyText": "The background of this PR is that - in a normal case where we have root.dir and wal.dir set on different FS, the WAL FS is getting initialized 2 times. Those places are\npublic static Path getWALRootDir(final Configuration c) throws IOException { Path p = new Path(c.get(HBASE_WAL_DIR, c.get(HConstants.HBASE_DIR))); if (!isValidWALRootDir(p, c)) { return getRootDir(c); } FileSystem fs = p.getFileSystem(c); return p.makeQualified(fs.getUri(), fs.getWorkingDirectory()); }\nSo before even we create the HFileSystem from HRS#initializeFileSystem we tend to get the WAL's path but there we do p.getFileSystem() to get the URI and the path. That is where the filesytem gets inited without even we intentionally doing it.\nNow before this patch -  We had\nFileSystem.get(conf);  &\nfs.initialize()\nSo the file system that was already created and inited was once again getting initialized(). So there were two instances of the FS.\nSo the first thing to be done is remove the fs.initialize() and only do FileSystem.get() but the other flavour of\nFileSystem.get(URI, conf) has a clear javadoc saying that if the FS is already created we will just return the Fs or we will initialize and then return the FS. Hence the API was changed.\nBut the other change to pass URI is to avoid the unintentional init of the FS from a Util method. What we need is a URI which we set it with fs.defaultFS. So for doing that we just extract the URI from the path and set it to the fs.defaultFS. So the subsequent code in FS.get(URI, conf) can really do the actual init that we are interested in.\n@Apache9  - Hope the above clarifies. Let me know if you need further details.", "url": "https://github.com/apache/hbase/pull/2419#discussion_r507471545", "createdAt": "2020-10-19T05:21:27Z", "author": {"login": "ramkrish86"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java", "diffHunk": "@@ -82,11 +82,9 @@ public HFileSystem(Configuration conf, boolean useHBaseChecksum)\n     // Create the default filesystem with checksum verification switched on.\n     // By default, any operation to this FilterFileSystem occurs on\n     // the underlying filesystem that has checksums switched on.\n-    this.fs = FileSystem.get(conf);\n+    this.fs = FileSystem.get(getDefaultUri(conf), conf);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk0NTg0Nw=="}, "originalCommit": {"oid": "08934cbaf0d8d731154aa9cea0064925b1572955"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjYwOTUwOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzoyNzoyOFrOHlJL0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzoyNzo0NVrOH4vGpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcwOTg0Mw==", "bodyText": "To Duo's request, add in something like:\n// We take pains to funnel all of our FileSystem instantiation through this call to ensure\n// we never need to call FS.initialize ourself so that we do not have to track any state to\n// avoid calling initialize more than once.", "url": "https://github.com/apache/hbase/pull/2419#discussion_r508709843", "createdAt": "2020-10-20T17:27:28Z", "author": {"login": "busbey"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java", "diffHunk": "@@ -82,7 +82,10 @@ public HFileSystem(Configuration conf, boolean useHBaseChecksum)\n     // Create the default filesystem with checksum verification switched on.\n     // By default, any operation to this FilterFileSystem occurs on\n     // the underlying filesystem that has checksums switched on.\n-    this.fs = FileSystem.get(conf);\n+    // This FS#get(URI, conf) clearly indicates in the javadoc that if the FS is\n+    // not created it will initialize the FS and return that created FS. If it is\n+    // already created it will just return the FS that was already created.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "342517b54d323acb5106a5c92dfdbdd829e3ec93"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI1NDA1Mg==", "bodyText": "Sure let me add them and commit it.", "url": "https://github.com/apache/hbase/pull/2419#discussion_r529254052", "createdAt": "2020-11-24T07:27:45Z", "author": {"login": "ramkrish86"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/fs/HFileSystem.java", "diffHunk": "@@ -82,7 +82,10 @@ public HFileSystem(Configuration conf, boolean useHBaseChecksum)\n     // Create the default filesystem with checksum verification switched on.\n     // By default, any operation to this FilterFileSystem occurs on\n     // the underlying filesystem that has checksums switched on.\n-    this.fs = FileSystem.get(conf);\n+    // This FS#get(URI, conf) clearly indicates in the javadoc that if the FS is\n+    // not created it will initialize the FS and return that created FS. If it is\n+    // already created it will just return the FS that was already created.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcwOTg0Mw=="}, "originalCommit": {"oid": "342517b54d323acb5106a5c92dfdbdd829e3ec93"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2491, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}