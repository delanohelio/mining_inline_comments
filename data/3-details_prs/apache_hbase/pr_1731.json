{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NDE1OTYx", "number": 1731, "title": "HBASE-24387 TableSnapshotInputFormatImpl support row limit on each InputSplit", "bodyText": "In some scenario , We want to  scan limited rows on each InputSplit for sampling data extraction", "createdAt": "2020-05-18T10:42:13Z", "url": "https://github.com/apache/hbase/pull/1731", "merged": true, "mergeCommit": {"oid": "1be583f0210205aa1395fc0f7839b1f3c81d3b53"}, "closed": true, "closedAt": "2020-05-25T01:55:49Z", "author": {"login": "nyl3532016"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcit8MbgBqjMzNTAxODE1MjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjM5UbAFqTQxNTU3OTIxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b201b968a602d7edcba3bc895e6f855dc3d9395", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/0b201b968a602d7edcba3bc895e6f855dc3d9395", "committedDate": "2020-05-18T10:40:55Z", "message": "HBASE-24387 TableSnapshotInputFormatImpl support scan limit on each InputSplit"}, "afterCommit": {"oid": "2e413d5245ea220daabaa62d4c789c779e69cb96", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/2e413d5245ea220daabaa62d4c789c779e69cb96", "committedDate": "2020-05-19T05:49:04Z", "message": "HBASE-24387 TableSnapshotInputFormatImpl support scan limit on each InputSplit"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e413d5245ea220daabaa62d4c789c779e69cb96", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/2e413d5245ea220daabaa62d4c789c779e69cb96", "committedDate": "2020-05-19T05:49:04Z", "message": "HBASE-24387 TableSnapshotInputFormatImpl support scan limit on each InputSplit"}, "afterCommit": {"oid": "c4c3e4cf90376d34433fb9e782ac4aa8a0d2407e", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/c4c3e4cf90376d34433fb9e782ac4aa8a0d2407e", "committedDate": "2020-05-19T05:52:42Z", "message": "HBASE-24387 TableSnapshotInputFormatImpl support scan limit on each InputSplit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NjMwNDU4", "url": "https://github.com/apache/hbase/pull/1731#pullrequestreview-414630458", "createdAt": "2020-05-19T16:39:49Z", "commit": {"oid": "c4c3e4cf90376d34433fb9e782ac4aa8a0d2407e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NjgyNzEx", "url": "https://github.com/apache/hbase/pull/1731#pullrequestreview-414682711", "createdAt": "2020-05-19T17:46:20Z", "commit": {"oid": "c4c3e4cf90376d34433fb9e782ac4aa8a0d2407e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzo0NjoyMFrOGXrtFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzo0NjoyMFrOGXrtFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4NjQ4Nw==", "bodyText": "NIT: Can you please remove this additional empty line?", "url": "https://github.com/apache/hbase/pull/1731#discussion_r427486487", "createdAt": "2020-05-19T17:46:20Z", "author": {"login": "HorizonNet"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "diffHunk": "@@ -304,6 +304,56 @@ public void testWithMockedMapReduceWithNoStartRowStopRow() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testScanLimit() throws Exception {\n+    setupCluster();\n+    final TableName tableName = TableName.valueOf(name.getMethodName());\n+    final String snapshotName = tableName + \"Snapshot\";\n+    Table table = null;\n+    try {\n+      if (UTIL.getAdmin().tableExists(tableName)) {\n+        UTIL.deleteTable(tableName);\n+      }\n+\n+      UTIL.createTable(tableName, FAMILIES, new byte[][] { bbb, yyy });\n+\n+      Admin admin = UTIL.getAdmin();\n+\n+      int regionNum = admin.getRegions(tableName).size();\n+      // put some stuff in the table\n+      table = UTIL.getConnection().getTable(tableName);\n+      UTIL.loadTable(table, FAMILIES);\n+\n+      Path rootDir = CommonFSUtils.getRootDir(UTIL.getConfiguration());\n+      FileSystem fs = rootDir.getFileSystem(UTIL.getConfiguration());\n+\n+      SnapshotTestingUtils.createSnapshotAndValidate(admin, tableName, Arrays.asList(FAMILIES),\n+        null, snapshotName, rootDir, fs, true);\n+\n+      Job job = new Job(UTIL.getConfiguration());\n+      Path tmpTableDir = UTIL.getDataTestDirOnTestFS(snapshotName);\n+      // limit the scan\n+      Scan scan = new Scan().setLimit(10);\n+      TableMapReduceUtil.addDependencyJarsForClasses(job.getConfiguration(),\n+        TestTableSnapshotInputFormat.class);\n+\n+      TableMapReduceUtil.initTableSnapshotMapperJob(snapshotName, scan,\n+        RowCounter.RowCounterMapper.class, NullWritable.class, NullWritable.class, job, true,\n+        tmpTableDir);\n+      Assert.assertTrue(job.waitForCompletion(true));\n+      Assert.assertEquals(10 * regionNum,\n+        job.getCounters().findCounter(RowCounter.RowCounterMapper.Counters.ROWS).getValue());\n+    } finally {\n+      if (table != null) {\n+        table.close();\n+      }\n+      UTIL.getAdmin().deleteSnapshot(snapshotName);\n+      UTIL.deleteTable(tableName);\n+      tearDownCluster();\n+    }\n+  }\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c3e4cf90376d34433fb9e782ac4aa8a0d2407e"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0OTU0Nzc1", "url": "https://github.com/apache/hbase/pull/1731#pullrequestreview-414954775", "createdAt": "2020-05-20T02:43:19Z", "commit": {"oid": "c4c3e4cf90376d34433fb9e782ac4aa8a0d2407e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMjo0MzoxOVrOGX5YCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMjo0MzoxOVrOGX5YCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxMDQ3Mg==", "bodyText": "I thought this is duplicate with ScanRequest protobuf? We already have one field to means \"limit\".", "url": "https://github.com/apache/hbase/pull/1731#discussion_r427710472", "createdAt": "2020-05-20T02:43:19Z", "author": {"login": "infraio"}, "path": "hbase-protocol-shaded/src/main/protobuf/client/Client.proto", "diffHunk": "@@ -274,6 +274,7 @@ message Scan {\n   }\n   optional ReadType readType = 23 [default = DEFAULT];\n   optional bool need_cursor_result = 24 [default = false];\n+  optional uint32 limit = 25;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c3e4cf90376d34433fb9e782ac4aa8a0d2407e"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4c3e4cf90376d34433fb9e782ac4aa8a0d2407e", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/c4c3e4cf90376d34433fb9e782ac4aa8a0d2407e", "committedDate": "2020-05-19T05:52:42Z", "message": "HBASE-24387 TableSnapshotInputFormatImpl support scan limit on each InputSplit"}, "afterCommit": {"oid": "b4e1f97bf27511554a05205563d7eff185a602b1", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/b4e1f97bf27511554a05205563d7eff185a602b1", "committedDate": "2020-05-20T10:34:07Z", "message": "HBASE-24387 TableSnapshotInputFormatImpl support scan limit on each InputSplit"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b4e1f97bf27511554a05205563d7eff185a602b1", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/b4e1f97bf27511554a05205563d7eff185a602b1", "committedDate": "2020-05-20T10:34:07Z", "message": "HBASE-24387 TableSnapshotInputFormatImpl support scan limit on each InputSplit"}, "afterCommit": {"oid": "3dcefa21a7b104590b23cfa0b0cd5f18951f14d6", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/3dcefa21a7b104590b23cfa0b0cd5f18951f14d6", "committedDate": "2020-05-20T10:41:05Z", "message": "HBASE-24387 TableSnapshotInputFormatImpl support scan limit on each InputSplit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzYwMTIw", "url": "https://github.com/apache/hbase/pull/1731#pullrequestreview-415360120", "createdAt": "2020-05-20T13:54:45Z", "commit": {"oid": "3dcefa21a7b104590b23cfa0b0cd5f18951f14d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1NDo0NVrOGYM7MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1NDo0NVrOGYM7MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzMDc2OQ==", "bodyText": "Not needed?", "url": "https://github.com/apache/hbase/pull/1731#discussion_r428030769", "createdAt": "2020-05-20T13:54:45Z", "author": {"login": "infraio"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "diffHunk": "@@ -304,6 +305,57 @@ public void testWithMockedMapReduceWithNoStartRowStopRow() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testScanLimit() throws Exception {\n+    setupCluster();\n+    final TableName tableName = TableName.valueOf(name.getMethodName());\n+    final String snapshotName = tableName + \"Snapshot\";\n+    Table table = null;\n+    try {\n+      UTIL.getConfiguration().setInt(SNAPSHOT_INPUTFORMAT_ROW_LIMIT_PER_INPUTSPLIT, 10);\n+      if (UTIL.getAdmin().tableExists(tableName)) {\n+        UTIL.deleteTable(tableName);\n+      }\n+\n+      UTIL.createTable(tableName, FAMILIES, new byte[][] { bbb, yyy });\n+\n+      Admin admin = UTIL.getAdmin();\n+\n+      int regionNum = admin.getRegions(tableName).size();\n+      // put some stuff in the table\n+      table = UTIL.getConnection().getTable(tableName);\n+      UTIL.loadTable(table, FAMILIES);\n+\n+      Path rootDir = CommonFSUtils.getRootDir(UTIL.getConfiguration());\n+      FileSystem fs = rootDir.getFileSystem(UTIL.getConfiguration());\n+\n+      SnapshotTestingUtils.createSnapshotAndValidate(admin, tableName, Arrays.asList(FAMILIES),\n+        null, snapshotName, rootDir, fs, true);\n+\n+      Job job = new Job(UTIL.getConfiguration());\n+      Path tmpTableDir = UTIL.getDataTestDirOnTestFS(snapshotName);\n+      // limit the scan\n+      Scan scan = new Scan().setLimit(10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcefa21a7b104590b23cfa0b0cd5f18951f14d6"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzYwMjg3", "url": "https://github.com/apache/hbase/pull/1731#pullrequestreview-415360287", "createdAt": "2020-05-20T13:54:55Z", "commit": {"oid": "3dcefa21a7b104590b23cfa0b0cd5f18951f14d6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "169ab8c062d86fe9109fa4b88079e7e31ba9a25b", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/169ab8c062d86fe9109fa4b88079e7e31ba9a25b", "committedDate": "2020-05-20T13:58:06Z", "message": "HBASE-24387 TableSnapshotInputFormatImpl support row limit on each InputSplit"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3dcefa21a7b104590b23cfa0b0cd5f18951f14d6", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/3dcefa21a7b104590b23cfa0b0cd5f18951f14d6", "committedDate": "2020-05-20T10:41:05Z", "message": "HBASE-24387 TableSnapshotInputFormatImpl support scan limit on each InputSplit"}, "afterCommit": {"oid": "169ab8c062d86fe9109fa4b88079e7e31ba9a25b", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/169ab8c062d86fe9109fa4b88079e7e31ba9a25b", "committedDate": "2020-05-20T13:58:06Z", "message": "HBASE-24387 TableSnapshotInputFormatImpl support row limit on each InputSplit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTc5MjEx", "url": "https://github.com/apache/hbase/pull/1731#pullrequestreview-415579211", "createdAt": "2020-05-20T17:53:51Z", "commit": {"oid": "169ab8c062d86fe9109fa4b88079e7e31ba9a25b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzo1Mzo1MVrOGYXSTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzo1NDowMVrOGYXSoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwMDUyNQ==", "bodyText": "Does it make sense to move this one to a test initializer method? I see it used in several tests in here.", "url": "https://github.com/apache/hbase/pull/1731#discussion_r428200525", "createdAt": "2020-05-20T17:53:51Z", "author": {"login": "HorizonNet"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "diffHunk": "@@ -304,6 +305,56 @@ public void testWithMockedMapReduceWithNoStartRowStopRow() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testScanLimit() throws Exception {\n+    setupCluster();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "169ab8c062d86fe9109fa4b88079e7e31ba9a25b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwMDYwOA==", "bodyText": "Ditto.", "url": "https://github.com/apache/hbase/pull/1731#discussion_r428200608", "createdAt": "2020-05-20T17:54:01Z", "author": {"login": "HorizonNet"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "diffHunk": "@@ -304,6 +305,56 @@ public void testWithMockedMapReduceWithNoStartRowStopRow() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testScanLimit() throws Exception {\n+    setupCluster();\n+    final TableName tableName = TableName.valueOf(name.getMethodName());\n+    final String snapshotName = tableName + \"Snapshot\";\n+    Table table = null;\n+    try {\n+      UTIL.getConfiguration().setInt(SNAPSHOT_INPUTFORMAT_ROW_LIMIT_PER_INPUTSPLIT, 10);\n+      if (UTIL.getAdmin().tableExists(tableName)) {\n+        UTIL.deleteTable(tableName);\n+      }\n+\n+      UTIL.createTable(tableName, FAMILIES, new byte[][] { bbb, yyy });\n+\n+      Admin admin = UTIL.getAdmin();\n+\n+      int regionNum = admin.getRegions(tableName).size();\n+      // put some stuff in the table\n+      table = UTIL.getConnection().getTable(tableName);\n+      UTIL.loadTable(table, FAMILIES);\n+\n+      Path rootDir = CommonFSUtils.getRootDir(UTIL.getConfiguration());\n+      FileSystem fs = rootDir.getFileSystem(UTIL.getConfiguration());\n+\n+      SnapshotTestingUtils.createSnapshotAndValidate(admin, tableName, Arrays.asList(FAMILIES),\n+        null, snapshotName, rootDir, fs, true);\n+\n+      Job job = new Job(UTIL.getConfiguration());\n+      Path tmpTableDir = UTIL.getDataTestDirOnTestFS(snapshotName);\n+      Scan scan = new Scan();\n+      TableMapReduceUtil.addDependencyJarsForClasses(job.getConfiguration(),\n+        TestTableSnapshotInputFormat.class);\n+\n+      TableMapReduceUtil.initTableSnapshotMapperJob(snapshotName, scan,\n+        RowCounter.RowCounterMapper.class, NullWritable.class, NullWritable.class, job, true,\n+        tmpTableDir);\n+      Assert.assertTrue(job.waitForCompletion(true));\n+      Assert.assertEquals(10 * regionNum,\n+        job.getCounters().findCounter(RowCounter.RowCounterMapper.Counters.ROWS).getValue());\n+    } finally {\n+      if (table != null) {\n+        table.close();\n+      }\n+      UTIL.getConfiguration().unset(SNAPSHOT_INPUTFORMAT_ROW_LIMIT_PER_INPUTSPLIT);\n+      UTIL.getAdmin().deleteSnapshot(snapshotName);\n+      UTIL.deleteTable(tableName);\n+      tearDownCluster();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "169ab8c062d86fe9109fa4b88079e7e31ba9a25b"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4656, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}