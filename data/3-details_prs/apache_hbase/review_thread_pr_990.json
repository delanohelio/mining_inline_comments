{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MzQ3OTQ3", "number": 990, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwODo0MzoyMFrODV6jqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwODo0MzoyMFrODV6jqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MzA2MDg4OnYy", "diffSide": "RIGHT", "path": "hbase-rest/src/test/java/org/apache/hadoop/hbase/rest/PerformanceEvaluation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwODo0MzoyMFrOFaYCmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwOTo0OTo0NVrOFbRnOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIwMTE3Nw==", "bodyText": "Good to use StringBuilder may be?", "url": "https://github.com/apache/hbase/pull/990#discussion_r363201177", "createdAt": "2020-01-06T08:43:20Z", "author": {"login": "virajjasani"}, "path": "hbase-rest/src/test/java/org/apache/hadoop/hbase/rest/PerformanceEvaluation.java", "diffHunk": "@@ -708,33 +709,26 @@ private Path writeInputFile(final Configuration c) throws IOException {\n     FileSystem fs = FileSystem.get(c);\n     fs.mkdirs(inputDir);\n     Path inputFile = new Path(inputDir, \"input.txt\");\n-    PrintStream out = new PrintStream(fs.create(inputFile));\n     // Make input random.\n-    Map<Integer, String> m = new TreeMap<>();\n-    Hash h = MurmurHash.getInstance();\n-    int perClientRows = (this.R / this.N);\n-    try {\n+    try (PrintStream out = new PrintStream(fs.create(inputFile))) {\n+      Map<Integer, String> m = new TreeMap<>();\n+      Hash h = MurmurHash.getInstance();\n+      int perClientRows = (this.R / this.N);\n       for (int i = 0; i < 10; i++) {\n         for (int j = 0; j < N; j++) {\n-          String s = \"tableName=\" + this.tableName +\n-              \", startRow=\" + ((j * perClientRows) + (i * (perClientRows/10))) +\n-              \", perClientRunRows=\" + (perClientRows / 10) +\n-              \", totalRows=\" + this.R +\n-              \", clients=\" + this.N +\n-              \", flushCommits=\" + this.flushCommits +\n-              \", writeToWAL=\" + this.writeToWAL +\n-              \", useTags=\" + this.useTags +\n-              \", noOfTags=\" + this.noOfTags;\n+          String s = \"tableName=\" + this.tableName + \", startRow=\" + ((j * perClientRows) + (i * (\n+            perClientRows / 10))) + \", perClientRunRows=\" + (perClientRows / 10) + \", totalRows=\"\n+            + this.R + \", clients=\" + this.N + \", flushCommits=\" + this.flushCommits\n+            + \", writeToWAL=\" + this.writeToWAL + \", useTags=\" + this.useTags + \", noOfTags=\"\n+            + this.noOfTags;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f3da9ecd101498915f0f7d80544937e5710ea9c"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDE0NDQ0MQ==", "bodyText": "Updated the patch to use StringBuilder instead of String at this one.", "url": "https://github.com/apache/hbase/pull/990#discussion_r364144441", "createdAt": "2020-01-08T09:49:45Z", "author": {"login": "HorizonNet"}, "path": "hbase-rest/src/test/java/org/apache/hadoop/hbase/rest/PerformanceEvaluation.java", "diffHunk": "@@ -708,33 +709,26 @@ private Path writeInputFile(final Configuration c) throws IOException {\n     FileSystem fs = FileSystem.get(c);\n     fs.mkdirs(inputDir);\n     Path inputFile = new Path(inputDir, \"input.txt\");\n-    PrintStream out = new PrintStream(fs.create(inputFile));\n     // Make input random.\n-    Map<Integer, String> m = new TreeMap<>();\n-    Hash h = MurmurHash.getInstance();\n-    int perClientRows = (this.R / this.N);\n-    try {\n+    try (PrintStream out = new PrintStream(fs.create(inputFile))) {\n+      Map<Integer, String> m = new TreeMap<>();\n+      Hash h = MurmurHash.getInstance();\n+      int perClientRows = (this.R / this.N);\n       for (int i = 0; i < 10; i++) {\n         for (int j = 0; j < N; j++) {\n-          String s = \"tableName=\" + this.tableName +\n-              \", startRow=\" + ((j * perClientRows) + (i * (perClientRows/10))) +\n-              \", perClientRunRows=\" + (perClientRows / 10) +\n-              \", totalRows=\" + this.R +\n-              \", clients=\" + this.N +\n-              \", flushCommits=\" + this.flushCommits +\n-              \", writeToWAL=\" + this.writeToWAL +\n-              \", useTags=\" + this.useTags +\n-              \", noOfTags=\" + this.noOfTags;\n+          String s = \"tableName=\" + this.tableName + \", startRow=\" + ((j * perClientRows) + (i * (\n+            perClientRows / 10))) + \", perClientRunRows=\" + (perClientRows / 10) + \", totalRows=\"\n+            + this.R + \", clients=\" + this.N + \", flushCommits=\" + this.flushCommits\n+            + \", writeToWAL=\" + this.writeToWAL + \", useTags=\" + this.useTags + \", noOfTags=\"\n+            + this.noOfTags;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIwMTE3Nw=="}, "originalCommit": {"oid": "6f3da9ecd101498915f0f7d80544937e5710ea9c"}, "originalPosition": 119}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2207, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}