{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NzMxNzM4", "number": 1274, "title": "HBASE-23968 Periodically check whether a system stop is requested in compaction by time.", "bodyText": "The compaction check that the system is stopped when it reaches hbase.hstore.close.check.interval (size) or hbase.hstore.close.check.time.interval (time)\n\nhttps://issues.apache.org/jira/browse/HBASE-23968", "createdAt": "2020-03-11T14:42:18Z", "url": "https://github.com/apache/hbase/pull/1274", "merged": true, "mergeCommit": {"oid": "1b11ea2e1fd0e55f8b530494ea69df18db2b1c88"}, "closed": true, "closedAt": "2020-05-04T21:45:21Z", "author": {"login": "mwkang"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMoPJLgBqjMxMTkxMzA3Mzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVdERIABqjMyMTIxMTQ0Nzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d0e3c2f879a15d4f665516639db2752d23bf11c", "author": {"user": {"login": "mwkang", "name": "Minwoo Kang"}}, "url": "https://github.com/apache/hbase/commit/9d0e3c2f879a15d4f665516639db2752d23bf11c", "committedDate": "2020-03-11T14:35:27Z", "message": "HBASE-23968 Periodically check whether a system stop is requested in compaction by time."}, "afterCommit": {"oid": "9026f3c24edbae8a3e5c99c971506fe06291ff40", "author": {"user": {"login": "mwkang", "name": "Minwoo Kang"}}, "url": "https://github.com/apache/hbase/commit/9026f3c24edbae8a3e5c99c971506fe06291ff40", "committedDate": "2020-03-11T14:45:21Z", "message": "HBASE-23968 Periodically check whether a system stop is requested in compaction by time."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9026f3c24edbae8a3e5c99c971506fe06291ff40", "author": {"user": {"login": "mwkang", "name": "Minwoo Kang"}}, "url": "https://github.com/apache/hbase/commit/9026f3c24edbae8a3e5c99c971506fe06291ff40", "committedDate": "2020-03-11T14:45:21Z", "message": "HBASE-23968 Periodically check whether a system stop is requested in compaction by time."}, "afterCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9", "author": {"user": {"login": "mwkang", "name": "Minwoo Kang"}}, "url": "https://github.com/apache/hbase/commit/c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9", "committedDate": "2020-03-11T15:53:21Z", "message": "HBASE-23968 Periodically check whether a system stop is requested in compaction by time."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NzA5NjY4", "url": "https://github.com/apache/hbase/pull/1274#pullrequestreview-379709668", "createdAt": "2020-03-23T18:30:19Z", "commit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozMDoxOVrOF6SxYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozNjozNFrOF6TAQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTI4Mg==", "bodyText": "Single thread in here? Otherwise, perhaps this should be volatile?", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396669282", "createdAt": "2020-03-23T18:30:19Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {\n+    this.closeCheckSizeLimit = conf.getInt(SIZE_LIMIT_KEY, 10 * 1000 * 1000 /* 10 MB */);\n+    this.closeCheckTimeLimit = conf.getLong(TIME_LIMIT_KEY, 10 * 1000L /* 10 s */);\n+    this.bytesWrittenProgressForCloseCheck = 0;\n+    this.lastCloseCheckMillis = currentTime;\n+  }\n+\n+  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+    if (closeCheckSizeLimit <= 0) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck += bytesWritten;\n+    if (bytesWrittenProgressForCloseCheck <= closeCheckSizeLimit) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck = 0;\n+    return !store.areWritesEnabled();\n+  }\n+\n+  public boolean isClosedByTimeLimit(Store store, long now) {\n+    if (closeCheckTimeLimit <= 0) {\n+      return false;\n+    }\n+\n+    final long elapsedMillis = now - lastCloseCheckMillis;\n+    if (elapsedMillis <= closeCheckTimeLimit) {\n+      return false;\n+    }\n+\n+    lastCloseCheckMillis = now;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTU2Nw==", "bodyText": "Does it have to be public? Can it be package local? It is only used in this package?", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396669567", "createdAt": "2020-03-23T18:30:47Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTY3Nw==", "bodyText": "ditto", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396669677", "createdAt": "2020-03-23T18:30:55Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MTEzMw==", "bodyText": "This is a bug fix?", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396671133", "createdAt": "2020-03-23T18:33:25Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/mob/DefaultMobStoreCompactor.java", "diffHunk": "@@ -317,7 +318,14 @@ protected boolean performCompaction(FileDetails fd, InternalScanner scanner, Cel\n \n       do {\n         hasMore = scanner.next(cells, scannerContext);\n-        now = EnvironmentEdgeManager.currentTime();\n+        currentTime = EnvironmentEdgeManager.currentTime();\n+        if (LOG.isDebugEnabled()) {\n+          now = currentTime;\n+        }\n+        if (closeChecker.isClosedByTimeLimit(store, currentTime)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MTcxNQ==", "bodyText": "s/isClosedByTimeLime/isTimeLimit/ ... and s/isClosedBySizeLiimt/isSizeLimit/", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396671715", "createdAt": "2020-03-23T18:34:22Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/mob/DefaultMobStoreCompactor.java", "diffHunk": "@@ -317,7 +318,14 @@ protected boolean performCompaction(FileDetails fd, InternalScanner scanner, Cel\n \n       do {\n         hasMore = scanner.next(cells, scannerContext);\n-        now = EnvironmentEdgeManager.currentTime();\n+        currentTime = EnvironmentEdgeManager.currentTime();\n+        if (LOG.isDebugEnabled()) {\n+          now = currentTime;\n+        }\n+        if (closeChecker.isClosedByTimeLimit(store, currentTime)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MTEzMw=="}, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MjQxMw==", "bodyText": "Better if can do w/o volatile (I think compactor will only have one driving thread...)", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396672413", "createdAt": "2020-03-23T18:35:29Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {\n+    this.closeCheckSizeLimit = conf.getInt(SIZE_LIMIT_KEY, 10 * 1000 * 1000 /* 10 MB */);\n+    this.closeCheckTimeLimit = conf.getLong(TIME_LIMIT_KEY, 10 * 1000L /* 10 s */);\n+    this.bytesWrittenProgressForCloseCheck = 0;\n+    this.lastCloseCheckMillis = currentTime;\n+  }\n+\n+  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+    if (closeCheckSizeLimit <= 0) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck += bytesWritten;\n+    if (bytesWrittenProgressForCloseCheck <= closeCheckSizeLimit) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck = 0;\n+    return !store.areWritesEnabled();\n+  }\n+\n+  public boolean isClosedByTimeLimit(Store store, long now) {\n+    if (closeCheckTimeLimit <= 0) {\n+      return false;\n+    }\n+\n+    final long elapsedMillis = now - lastCloseCheckMillis;\n+    if (elapsedMillis <= closeCheckTimeLimit) {\n+      return false;\n+    }\n+\n+    lastCloseCheckMillis = now;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTI4Mg=="}, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MjcwNw==", "bodyText": "s/isClosedBySizeLimit/isSizeLimit/g", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396672707", "createdAt": "2020-03-23T18:35:59Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {\n+    this.closeCheckSizeLimit = conf.getInt(SIZE_LIMIT_KEY, 10 * 1000 * 1000 /* 10 MB */);\n+    this.closeCheckTimeLimit = conf.getLong(TIME_LIMIT_KEY, 10 * 1000L /* 10 s */);\n+    this.bytesWrittenProgressForCloseCheck = 0;\n+    this.lastCloseCheckMillis = currentTime;\n+  }\n+\n+  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MzA5MA==", "bodyText": "s/isClosedByTimeLimit/isTimeLimit/g\n... Class name provides the context ... i.e. that it is about close.", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396673090", "createdAt": "2020-03-23T18:36:34Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {\n+    this.closeCheckSizeLimit = conf.getInt(SIZE_LIMIT_KEY, 10 * 1000 * 1000 /* 10 MB */);\n+    this.closeCheckTimeLimit = conf.getLong(TIME_LIMIT_KEY, 10 * 1000L /* 10 s */);\n+    this.bytesWrittenProgressForCloseCheck = 0;\n+    this.lastCloseCheckMillis = currentTime;\n+  }\n+\n+  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+    if (closeCheckSizeLimit <= 0) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck += bytesWritten;\n+    if (bytesWrittenProgressForCloseCheck <= closeCheckSizeLimit) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck = 0;\n+    return !store.areWritesEnabled();\n+  }\n+\n+  public boolean isClosedByTimeLimit(Store store, long now) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNTkzMzUz", "url": "https://github.com/apache/hbase/pull/1274#pullrequestreview-382593353", "createdAt": "2020-03-27T05:47:01Z", "commit": {"oid": "8daa61ec6cf848dac8619f2f9027ca08233924dc"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNTo0NzowMlrOF8j7Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNTo0NzowMlrOF8j7Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA0NzQ0Ng==", "bodyText": "dang.\nok. public for now.", "url": "https://github.com/apache/hbase/pull/1274#discussion_r399047446", "createdAt": "2020-03-27T05:47:02Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTU2Nw=="}, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8daa61ec6cf848dac8619f2f9027ca08233924dc", "author": {"user": {"login": "mwkang", "name": "Minwoo Kang"}}, "url": "https://github.com/apache/hbase/commit/8daa61ec6cf848dac8619f2f9027ca08233924dc", "committedDate": "2020-03-27T02:32:05Z", "message": "HBASE-23968 Incorporated PR feedback"}, "afterCommit": {"oid": "8e7f7fd7c2e94ecdbb4f96a84d9431b68ff7e27e", "author": {"user": {"login": "mwkang", "name": "Minwoo Kang"}}, "url": "https://github.com/apache/hbase/commit/8e7f7fd7c2e94ecdbb4f96a84d9431b68ff7e27e", "committedDate": "2020-03-30T02:03:40Z", "message": "HBASE-23968 Incorporated PR feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "369641d0ed70dc17919933987687afbae6e76afc", "author": {"user": {"login": "mwkang", "name": "Minwoo Kang"}}, "url": "https://github.com/apache/hbase/commit/369641d0ed70dc17919933987687afbae6e76afc", "committedDate": "2020-03-30T06:56:00Z", "message": "HBASE-23968 Fix checkstyle error"}, "afterCommit": {"oid": "a6c4060664ed8f38815d6575b762423e08c9116e", "author": {"user": {"login": "mwkang", "name": "Minwoo Kang"}}, "url": "https://github.com/apache/hbase/commit/a6c4060664ed8f38815d6575b762423e08c9116e", "committedDate": "2020-04-07T01:05:16Z", "message": "HBASE-23968 Fix checkstyle error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0eb1f2446d7e153c8ce3fffebbce05bb58c8a795", "author": {"user": {"login": "mwkang", "name": "Minwoo Kang"}}, "url": "https://github.com/apache/hbase/commit/0eb1f2446d7e153c8ce3fffebbce05bb58c8a795", "committedDate": "2020-04-08T00:50:06Z", "message": "HBASE-23968 Periodically check whether a system stop is requested in compaction by time."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2fd0dfd09afa5bd64fecaf5ada6cf450feb37e2", "author": {"user": {"login": "mwkang", "name": "Minwoo Kang"}}, "url": "https://github.com/apache/hbase/commit/b2fd0dfd09afa5bd64fecaf5ada6cf450feb37e2", "committedDate": "2020-04-08T00:50:06Z", "message": "HBASE-23968 Incorporated PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e13e9eff0318f9bce9a4f07475e4f2f6f7095bd", "author": {"user": {"login": "mwkang", "name": "Minwoo Kang"}}, "url": "https://github.com/apache/hbase/commit/2e13e9eff0318f9bce9a4f07475e4f2f6f7095bd", "committedDate": "2020-04-08T00:50:06Z", "message": "HBASE-23968 Fix checkstyle error"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6c4060664ed8f38815d6575b762423e08c9116e", "author": {"user": {"login": "mwkang", "name": "Minwoo Kang"}}, "url": "https://github.com/apache/hbase/commit/a6c4060664ed8f38815d6575b762423e08c9116e", "committedDate": "2020-04-07T01:05:16Z", "message": "HBASE-23968 Fix checkstyle error"}, "afterCommit": {"oid": "2e13e9eff0318f9bce9a4f07475e4f2f6f7095bd", "author": {"user": {"login": "mwkang", "name": "Minwoo Kang"}}, "url": "https://github.com/apache/hbase/commit/2e13e9eff0318f9bce9a4f07475e4f2f6f7095bd", "committedDate": "2020-04-08T00:50:06Z", "message": "HBASE-23968 Fix checkstyle error"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2645, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}