{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NDQ0MTcz", "number": 1811, "title": "HBASE-24474 Rename LocalRegion to MasterRegion", "bodyText": "", "createdAt": "2020-05-30T10:01:19Z", "url": "https://github.com/apache/hbase/pull/1811", "merged": true, "mergeCommit": {"oid": "bad2d4e409ba57014e0f5931b72e54cc397e268a"}, "closed": true, "closedAt": "2020-06-02T02:37:44Z", "author": {"login": "Apache9"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmUDnHgH2gAyNDI1NDQ0MTczOjA3ZWJhMjJjYzlhZDZhNjlhZTQ3NTlhZTAyOTI1MjJiNTBiNzVhOTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnFwB_gFqTQyMjEzMzg4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91", "author": {"user": {"login": "Apache9", "name": "Duo Zhang"}}, "url": "https://github.com/apache/hbase/commit/07eba22cc9ad6a69ae4759ae0292522b50b75a91", "committedDate": "2020-05-30T09:57:15Z", "message": "HBASE-24474 Rename LocalRegion to MasterRegion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDYxNjY4", "url": "https://github.com/apache/hbase/pull/1811#pullrequestreview-421461668", "createdAt": "2020-05-31T05:00:38Z", "commit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNTowMDozOVrOGc2uow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQwNToxNTo0MFrOGc2xgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwOTk4Nw==", "bodyText": "We need to add this in here?", "url": "https://github.com/apache/hbase/pull/1811#discussion_r432909987", "createdAt": "2020-05-31T05:00:39Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegion.java", "diffHunk": "@@ -284,18 +284,21 @@ public static LocalRegion create(LocalRegionParams params) throws IOException {\n     Configuration conf = new Configuration(baseConf);\n     CommonFSUtils.setRootDir(conf, rootDir);\n     CommonFSUtils.setWALRootDir(conf, walRootDir);\n-    LocalRegionFlusherAndCompactor.setupConf(conf, params.flushSize(), params.flushPerChanges(),\n+    MasterRegionFlusherAndCompactor.setupConf(conf, params.flushSize(), params.flushPerChanges(),\n       params.flushIntervalMs());\n     conf.setInt(AbstractFSWAL.MAX_LOGS, params.maxWals());\n     if (params.useHsync() != null) {\n       conf.setBoolean(HRegion.WAL_HSYNC_CONF_KEY, params.useHsync());\n     }\n+    if (params.useMetaCellComparator() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMDYxNg==", "bodyText": "How comes we can drop these methods?", "url": "https://github.com/apache/hbase/pull/1811#discussion_r432910616", "createdAt": "2020-05-31T05:13:06Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegionFactory.java", "diffHunk": "@@ -89,45 +82,8 @@\n   private static final TableDescriptor TABLE_DESC = TableDescriptorBuilder.newBuilder(TABLE_NAME)\n     .setColumnFamily(ColumnFamilyDescriptorBuilder.of(PROC_FAMILY)).build();\n \n-  private final LocalRegion region;\n-\n-  private LocalStore(LocalRegion region) {\n-    this.region = region;\n-  }\n-\n-  public void update(UpdateLocalRegion action) throws IOException {\n-    region.update(action);\n-  }\n-\n-  public Result get(Get get) throws IOException {\n-    return region.get(get);\n-  }\n-\n-  public RegionScanner getScanner(Scan scan) throws IOException {\n-    return region.getScanner(scan);\n-  }\n-\n-  public void close(boolean abort) {\n-    region.close(abort);\n-  }\n-\n-  @VisibleForTesting\n-  public FlushResult flush(boolean force) throws IOException {\n-    return region.flush(force);\n-  }\n-\n-  @VisibleForTesting\n-  public void requestRollAll() {\n-    region.requestRollAll();\n-  }\n-\n-  @VisibleForTesting\n-  public void waitUntilWalRollFinished() throws InterruptedException {\n-    region.waitUntilWalRollFinished();\n-  }\n-\n-  public static LocalStore create(Server server) throws IOException {\n-    LocalRegionParams params = new LocalRegionParams().server(server)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMDcyMQ==", "bodyText": "This was missing?", "url": "https://github.com/apache/hbase/pull/1811#discussion_r432910721", "createdAt": "2020-05-31T05:15:40Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegion.java", "diffHunk": "@@ -284,18 +284,21 @@ public static LocalRegion create(LocalRegionParams params) throws IOException {\n     Configuration conf = new Configuration(baseConf);\n     CommonFSUtils.setRootDir(conf, rootDir);\n     CommonFSUtils.setWALRootDir(conf, walRootDir);\n-    LocalRegionFlusherAndCompactor.setupConf(conf, params.flushSize(), params.flushPerChanges(),\n+    MasterRegionFlusherAndCompactor.setupConf(conf, params.flushSize(), params.flushPerChanges(),\n       params.flushIntervalMs());\n     conf.setInt(AbstractFSWAL.MAX_LOGS, params.maxWals());\n     if (params.useHsync() != null) {\n       conf.setBoolean(HRegion.WAL_HSYNC_CONF_KEY, params.useHsync());\n     }\n+    if (params.useMetaCellComparator() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkwOTk4Nw=="}, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 131}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMDk4NjY5", "url": "https://github.com/apache/hbase/pull/1811#pullrequestreview-422098669", "createdAt": "2020-06-01T18:55:39Z", "commit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxODo1NTo0MFrOGdWNvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTowNjoxMVrOGdWh8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyNTg1NA==", "bodyText": "Good.", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433425854", "createdAt": "2020-06-01T18:55:40Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -450,7 +451,7 @@ public void run() {\n   private ProcedureStore procedureStore;\n \n   // the master local storage to store procedure data, etc.\n-  private LocalStore localStore;\n+  private MasterRegion masterRegion;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyNjU0MQ==", "bodyText": "Having everything use a single region has me a little nervous. Seems like it'll make it easy for two unrelated subsystems to step on each others' toes later on -- conflicting row keys, columns, &c. This should be fine for initial work though.", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433426541", "createdAt": "2020-06-01T18:57:07Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1563,7 +1564,7 @@ protected void stopServiceThreads() {\n   private void createProcedureExecutor() throws IOException {\n     MasterProcedureEnv procEnv = new MasterProcedureEnv(this);\n     procedureStore =\n-      new RegionProcedureStore(this, localStore, new MasterProcedureEnv.FsUtilsLeaseRecovery(this));\n+      new RegionProcedureStore(this, masterRegion, new MasterProcedureEnv.FsUtilsLeaseRecovery(this));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyODAwMQ==", "bodyText": "We still need the wrapper class with delegation? How about have the factory manage creation of the HRegion (wiring up the wal, &c) and HMaster hold the instance of HRegion directly?", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433428001", "createdAt": "2020-06-01T18:59:56Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegion.java", "diffHunk": "@@ -79,14 +79,14 @@\n  * Notice that, you can use different root file system and WAL file system. Then the above directory\n  * will be on two file systems, the root file system will have the data directory while the WAL\n  * filesystem will have the WALs directory. The archived HFile will be moved to the global HFile\n- * archived directory with the {@link LocalRegionParams#archivedWalSuffix()} suffix. The archived\n+ * archived directory with the {@link MasterRegionParams#archivedWalSuffix()} suffix. The archived\n  * WAL will be moved to the global WAL archived directory with the\n- * {@link LocalRegionParams#archivedHFileSuffix()} suffix.\n+ * {@link MasterRegionParams#archivedHFileSuffix()} suffix.\n  */\n @InterfaceAudience.Private\n-public final class LocalRegion {\n+public final class MasterRegion {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyOTI5MA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433429290", "createdAt": "2020-06-01T19:02:39Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/region/MasterRegionFactory.java", "diffHunk": "@@ -89,45 +82,8 @@\n   private static final TableDescriptor TABLE_DESC = TableDescriptorBuilder.newBuilder(TABLE_NAME)\n     .setColumnFamily(ColumnFamilyDescriptorBuilder.of(PROC_FAMILY)).build();\n \n-  private final LocalRegion region;\n-\n-  private LocalStore(LocalRegion region) {\n-    this.region = region;\n-  }\n-\n-  public void update(UpdateLocalRegion action) throws IOException {\n-    region.update(action);\n-  }\n-\n-  public Result get(Get get) throws IOException {\n-    return region.get(get);\n-  }\n-\n-  public RegionScanner getScanner(Scan scan) throws IOException {\n-    return region.getScanner(scan);\n-  }\n-\n-  public void close(boolean abort) {\n-    region.close(abort);\n-  }\n-\n-  @VisibleForTesting\n-  public FlushResult flush(boolean force) throws IOException {\n-    return region.flush(force);\n-  }\n-\n-  @VisibleForTesting\n-  public void requestRollAll() {\n-    region.requestRollAll();\n-  }\n-\n-  @VisibleForTesting\n-  public void waitUntilWalRollFinished() throws InterruptedException {\n-    region.waitUntilWalRollFinished();\n-  }\n-\n-  public static LocalStore create(Server server) throws IOException {\n-    LocalRegionParams params = new LocalRegionParams().server(server)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjkxMDYxNg=="}, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQyOTkxNw==", "bodyText": "If this configuration point is specific to master side, should it have master in its name?", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433429917", "createdAt": "2020-06-01T19:03:55Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -258,6 +259,14 @@\n   public static final String SPECIAL_RECOVERED_EDITS_DIR =\n     \"hbase.hregion.special.recovered.edits.dir\";\n \n+  /**\n+   * Whether to use {@link MetaCellComparator} even if we are not meta region. Used when creating\n+   * master local region.\n+   */\n+  public static final String USE_META_CELL_COMPARATOR = \"hbase.region.use.meta.cell.comparator\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQzMTAyNg==", "bodyText": "It's a little nit-pick, but I like my configurations to specify components via .-separator, and use _ for component names. So this might be hbase.master.region.use_meta_cell_comparator.\nOf course, this might be conflicting with other configuration names and uses. Would need to look things over to see what else is using the \"hbase.master\" namespace.", "url": "https://github.com/apache/hbase/pull/1811#discussion_r433431026", "createdAt": "2020-06-01T19:06:11Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -258,6 +259,14 @@\n   public static final String SPECIAL_RECOVERED_EDITS_DIR =\n     \"hbase.hregion.special.recovered.edits.dir\";\n \n+  /**\n+   * Whether to use {@link MetaCellComparator} even if we are not meta region. Used when creating\n+   * master local region.\n+   */\n+  public static final String USE_META_CELL_COMPARATOR = \"hbase.region.use.meta.cell.comparator\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMTMzODg5", "url": "https://github.com/apache/hbase/pull/1811#pullrequestreview-422133889", "createdAt": "2020-06-01T19:51:07Z", "commit": {"oid": "07eba22cc9ad6a69ae4759ae0292522b50b75a91"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4468, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}