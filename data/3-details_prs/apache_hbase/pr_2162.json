{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MDM2NDE2", "number": 2162, "title": "HBASE-24788: Fix the connection leaks on getting hbase admin from unclosed connection", "bodyText": "Fixing the connection leaks in hbase due to closing hbase admin without closing connection.", "createdAt": "2020-07-28T20:26:52Z", "url": "https://github.com/apache/hbase/pull/2162", "merged": true, "mergeCommit": {"oid": "d65fb87a2eb157b7f08f87b529064464861fb898"}, "closed": true, "closedAt": "2020-07-29T16:09:08Z", "author": {"login": "sandeepvinayak"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5crOLgFqTQ1Njk5NDc3OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5nrHAgFqTQ1NzM1MzgwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2OTk0Nzc4", "url": "https://github.com/apache/hbase/pull/2162#pullrequestreview-456994778", "createdAt": "2020-07-28T20:40:51Z", "commit": {"oid": "568eb12a49c5c1d5a5813fb1d5bcf1c2e933ccf2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDo0MDo1MlrOG4eAQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMDo0MjowMlrOG4eC8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg2NTAyNg==", "bodyText": "nit: Check-style might flag this for bad indentation (needs nested indent)", "url": "https://github.com/apache/hbase/pull/2162#discussion_r461865026", "createdAt": "2020-07-28T20:40:52Z", "author": {"login": "bharathv"}, "path": "hbase-mapreduce/src/main/java/org/apache/hadoop/hbase/mapreduce/TableOutputFormat.java", "diffHunk": "@@ -155,11 +155,10 @@ public void write(KEY key, Mutation value)\n    * @param context  The current task context.\n    * @return The newly created writer instance.\n    * @throws IOException When creating the writer fails.\n-   * @throws InterruptedException When the jobs is cancelled.\n    */\n   @Override\n   public RecordWriter<KEY, Mutation> getRecordWriter(TaskAttemptContext context)\n-  throws IOException, InterruptedException {\n+  throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "568eb12a49c5c1d5a5813fb1d5bcf1c2e933ccf2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg2NTUwNg==", "bodyText": "nit: remove extra newline", "url": "https://github.com/apache/hbase/pull/2162#discussion_r461865506", "createdAt": "2020-07-28T20:41:41Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/ServerRegionReplicaUtil.java", "diffHunk": "@@ -161,25 +162,27 @@ public static void setupRegionReplicaReplication(Configuration conf) throws IOEx\n     if (!isRegionReplicaReplicationEnabled(conf)) {\n       return;\n     }\n-    Admin admin = ConnectionFactory.createConnection(conf).getAdmin();\n-    ReplicationPeerConfig peerConfig = null;\n-    try {\n-      peerConfig = admin.getReplicationPeerConfig(REGION_REPLICA_REPLICATION_PEER);\n-    } catch (ReplicationPeerNotFoundException e) {\n-      LOG.warn(\"Region replica replication peer id=\" + REGION_REPLICA_REPLICATION_PEER\n-          + \" not exist\", e);\n-    }\n-    try {\n+\n+    try (Connection connection = ConnectionFactory.createConnection(conf);\n+      Admin admin = connection.getAdmin()) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "568eb12a49c5c1d5a5813fb1d5bcf1c2e933ccf2"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTg2NTcxMg==", "bodyText": "nit: can be condensed to fewer lines.", "url": "https://github.com/apache/hbase/pull/2162#discussion_r461865712", "createdAt": "2020-07-28T20:42:02Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/ServerRegionReplicaUtil.java", "diffHunk": "@@ -161,25 +162,27 @@ public static void setupRegionReplicaReplication(Configuration conf) throws IOEx\n     if (!isRegionReplicaReplicationEnabled(conf)) {\n       return;\n     }\n-    Admin admin = ConnectionFactory.createConnection(conf).getAdmin();\n-    ReplicationPeerConfig peerConfig = null;\n-    try {\n-      peerConfig = admin.getReplicationPeerConfig(REGION_REPLICA_REPLICATION_PEER);\n-    } catch (ReplicationPeerNotFoundException e) {\n-      LOG.warn(\"Region replica replication peer id=\" + REGION_REPLICA_REPLICATION_PEER\n-          + \" not exist\", e);\n-    }\n-    try {\n+\n+    try (Connection connection = ConnectionFactory.createConnection(conf);\n+      Admin admin = connection.getAdmin()) {\n+\n+      ReplicationPeerConfig peerConfig = null;\n+      try {\n+        peerConfig = admin.getReplicationPeerConfig(REGION_REPLICA_REPLICATION_PEER);\n+      } catch (ReplicationPeerNotFoundException e) {\n+        LOG.warn(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "568eb12a49c5c1d5a5813fb1d5bcf1c2e933ccf2"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MDk5ODEw", "url": "https://github.com/apache/hbase/pull/2162#pullrequestreview-457099810", "createdAt": "2020-07-28T23:36:29Z", "commit": {"oid": "6c065a8c46a89244329e93b5e09c7a91d75b2b74"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMzozNjoyOVrOG4jZDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQyMzozNjoyOVrOG4jZDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTk1MzI5Mw==", "bodyText": "this should be a try-with-resources too?", "url": "https://github.com/apache/hbase/pull/2162#discussion_r461953293", "createdAt": "2020-07-28T23:36:29Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestClearRegionBlockCache.java", "diffHunk": "@@ -149,8 +150,8 @@ public void testClearBlockCacheFromAdmin() throws Exception {\n \n   @Test\n   public void testClearBlockCacheFromAsyncAdmin() throws Exception {\n-    AsyncAdmin admin =\n-        ConnectionFactory.createAsyncConnection(HTU.getConfiguration()).get().getAdmin();\n+    AsyncConnection conn = ConnectionFactory.createAsyncConnection(HTU.getConfiguration()).get();\n+    AsyncAdmin admin = conn.getAdmin();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c065a8c46a89244329e93b5e09c7a91d75b2b74"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b445adc31c83ed1c461202e851f21cee9cb483a", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/6b445adc31c83ed1c461202e851f21cee9cb483a", "committedDate": "2020-07-29T02:34:38Z", "message": "HBASE-24788: Fix the connection leaks on getting hbase admin from unclosed connection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2b57d8ffca90bf3d6f797b7ec7051a6f09671a0", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/c2b57d8ffca90bf3d6f797b7ec7051a6f09671a0", "committedDate": "2020-07-29T02:18:54Z", "message": "Addressing the nit comments"}, "afterCommit": {"oid": "6b445adc31c83ed1c461202e851f21cee9cb483a", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/6b445adc31c83ed1c461202e851f21cee9cb483a", "committedDate": "2020-07-29T02:34:38Z", "message": "HBASE-24788: Fix the connection leaks on getting hbase admin from unclosed connection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34a897b2a5115cd62eefedf424abc7aee2982b9d", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/34a897b2a5115cd62eefedf424abc7aee2982b9d", "committedDate": "2020-07-29T07:52:43Z", "message": "Fixing the check-style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MzE2Njc2", "url": "https://github.com/apache/hbase/pull/2162#pullrequestreview-457316676", "createdAt": "2020-07-29T08:45:05Z", "commit": {"oid": "6b445adc31c83ed1c461202e851f21cee9cb483a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwODo0NTowNVrOG4utpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwODo0NTowNVrOG4utpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEzODc4OA==", "bodyText": "If we catch this Exception, don't we want to create replication peer id?\nWe can model this with:\ntry(closeables){\n  try{\n    peerConfig = admin.getReplicationPeerConfig(REGION_REPLICA_REPLICATION_PEER);\n  } catch (ReplicationPeerNotFoundException e){\n  }\n  if (peerConfig == null) {\n    .....\n  }\n}", "url": "https://github.com/apache/hbase/pull/2162#discussion_r462138788", "createdAt": "2020-07-29T08:45:05Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/ServerRegionReplicaUtil.java", "diffHunk": "@@ -161,25 +162,24 @@ public static void setupRegionReplicaReplication(Configuration conf) throws IOEx\n     if (!isRegionReplicaReplicationEnabled(conf)) {\n       return;\n     }\n-    Admin admin = ConnectionFactory.createConnection(conf).getAdmin();\n-    ReplicationPeerConfig peerConfig = null;\n-    try {\n+\n+    try (Connection connection = ConnectionFactory.createConnection(conf);\n+      Admin admin = connection.getAdmin()) {\n+      ReplicationPeerConfig peerConfig = null;\n       peerConfig = admin.getReplicationPeerConfig(REGION_REPLICA_REPLICATION_PEER);\n-    } catch (ReplicationPeerNotFoundException e) {\n-      LOG.warn(\"Region replica replication peer id=\" + REGION_REPLICA_REPLICATION_PEER\n-          + \" not exist\", e);\n-    }\n-    try {\n+\n       if (peerConfig == null) {\n         LOG.info(\"Region replica replication peer id=\" + REGION_REPLICA_REPLICATION_PEER\n-            + \" not exist. Creating...\");\n+          + \" not exist. Creating...\");\n         peerConfig = new ReplicationPeerConfig();\n         peerConfig.setClusterKey(ZKConfig.getZooKeeperClusterKey(conf));\n         peerConfig.setReplicationEndpointImpl(RegionReplicaReplicationEndpoint.class.getName());\n         admin.addReplicationPeer(REGION_REPLICA_REPLICATION_PEER, peerConfig);\n       }\n-    } finally {\n-      admin.close();\n+    } catch (ReplicationPeerNotFoundException e) {\n+      LOG.warn(\n+        \"Region replica replication peer id=\" + REGION_REPLICA_REPLICATION_PEER + \" not exist\",\n+        e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b445adc31c83ed1c461202e851f21cee9cb483a"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d087e7b5339510bd88b0c49b9a184cfd02ad3a32", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/d087e7b5339510bd88b0c49b9a184cfd02ad3a32", "committedDate": "2020-07-29T09:03:01Z", "message": "Fixing the broken tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88f9ebc53562fc2765c8c9b0204e34673363939b", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/88f9ebc53562fc2765c8c9b0204e34673363939b", "committedDate": "2020-07-29T09:28:17Z", "message": "Fixing the broken tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MzUzODA4", "url": "https://github.com/apache/hbase/pull/2162#pullrequestreview-457353808", "createdAt": "2020-07-29T09:33:09Z", "commit": {"oid": "88f9ebc53562fc2765c8c9b0204e34673363939b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4097, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}