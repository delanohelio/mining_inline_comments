{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMTI3NDk5", "number": 1047, "title": "HBASE-23683 Make HBaseInterClusterReplicationEndpoint more extensible\u2026", "bodyText": "\u2026 (#1027)\nHad opened a separate PR for branch-2, as it doesn't have AsyncClusterConnection, requiring changes on basically the whole connection creation code. One thought I had just after I had already merged previous PR in master is that the two additional create methods should refer to Connection, instead of ClusterConnection or AsyncClusterConnection, as that would shield HBaseInterClusterReplicationEndpoint extensions from changes between 2.x and 3.x.\nPing @bharathv", "createdAt": "2020-01-15T13:05:24Z", "url": "https://github.com/apache/hbase/pull/1047", "merged": true, "mergeCommit": {"oid": "62e340901fa60afeb164a1ff22e6092483b0ac48"}, "closed": true, "closedAt": "2020-01-22T09:19:15Z", "author": {"login": "wchevreuil"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6lFB1gH2gAyMzYzMTI3NDk5OmY5Yzc3MzQxZTllZDI4YWJiOTZhMjJkMGQ1YWYyNmFhNzdkZmY2MzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8iSC2AH2gAyMzYzMTI3NDk5OmZlYTEzM2I2YjllZDExNjNlMDk0OWM3MzAwNTZlMjIwOTQ5MmEyODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f9c77341e9ed28abb96a22d0d5af26aa77dff636", "author": {"user": {"login": "wchevreuil", "name": "Wellington Ramos Chevreuil"}}, "url": "https://github.com/apache/hbase/commit/f9c77341e9ed28abb96a22d0d5af26aa77dff636", "committedDate": "2020-01-15T12:54:31Z", "message": "HBASE-23683 Make HBaseInterClusterReplicationEndpoint more extensible (#1027)\n\nSigned-off-by: Bharath Vissapragada <bharathv@apache.org>\nSigned-off-by: Josh Elser <elserj@apache.org>\nSigned-off-by: binlijin <binlijin@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMzczODUy", "url": "https://github.com/apache/hbase/pull/1047#pullrequestreview-343373852", "createdAt": "2020-01-15T16:59:34Z", "commit": {"oid": "f9c77341e9ed28abb96a22d0d5af26aa77dff636"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNjo1OTozNVrOFd_fEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNzowMTo1MFrOFd_j2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5MzE2OQ==", "bodyText": "nit: redundant cast to conn.", "url": "https://github.com/apache/hbase/pull/1047#discussion_r366993169", "createdAt": "2020-01-15T16:59:35Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint.java", "diffHunk": "@@ -114,6 +114,25 @@\n   private boolean dropOnDeletedTables;\n   private boolean isSerial = false;\n \n+  /*\n+   * Some implementations of HBaseInterClusterReplicationEndpoint may require instantiate different\n+   * Connection implementations, or initialize it in a different way, so defining createConnection\n+   * as protected for possible overridings.\n+   */\n+  protected Connection createConnection(Configuration conf) throws IOException {\n+    return ConnectionFactory.createConnection(conf);\n+  }\n+\n+  /*\n+   * Some implementations of HBaseInterClusterReplicationEndpoint may require instantiate different\n+   * ReplicationSinkManager implementations, or initialize it in a different way,\n+   * so defining createReplicationSinkManager as protected for possible overridings.\n+   */\n+  protected ReplicationSinkManager createReplicationSinkManager(Connection conn) {\n+    return new ReplicationSinkManager((ClusterConnection) conn, this.ctx.getPeerId(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c77341e9ed28abb96a22d0d5af26aa77dff636"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5NDA5Ng==", "bodyText": "Do we need force createConnection() to return a connection of type ClusterConnection? Otherwise, theoretically overrides can return any type of Connection (may or may not be ClusterConnection) and the type cast here fails. Just a thought.", "url": "https://github.com/apache/hbase/pull/1047#discussion_r366994096", "createdAt": "2020-01-15T17:01:15Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint.java", "diffHunk": "@@ -133,12 +152,12 @@ public void init(Context context) throws IOException {\n     // TODO: This connection is replication specific or we should make it particular to\n     // replication and make replication specific settings such as compression or codec to use\n     // passing Cells.\n-    this.conn = (ClusterConnection) ConnectionFactory.createConnection(this.conf);\n+    this.conn = (ClusterConnection) createConnection(this.conf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c77341e9ed28abb96a22d0d5af26aa77dff636"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5NDM5Mw==", "bodyText": "nit: instantiating..", "url": "https://github.com/apache/hbase/pull/1047#discussion_r366994393", "createdAt": "2020-01-15T17:01:50Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint.java", "diffHunk": "@@ -114,6 +114,25 @@\n   private boolean dropOnDeletedTables;\n   private boolean isSerial = false;\n \n+  /*\n+   * Some implementations of HBaseInterClusterReplicationEndpoint may require instantiate different", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9c77341e9ed28abb96a22d0d5af26aa77dff636"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0MDg3NDg2", "url": "https://github.com/apache/hbase/pull/1047#pullrequestreview-344087486", "createdAt": "2020-01-16T17:26:54Z", "commit": {"oid": "f9c77341e9ed28abb96a22d0d5af26aa77dff636"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNzoyNjo1NVrOFehkhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNzoyNjo1NVrOFehkhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzU1MTYyMA==", "bodyText": "Oh I see.. I think I get the problem. Basically you are just relying on ConnectionFactory and not worried about the type it is returning. Ya, refactoring it will be a bigger patch.\nnit: How about adding a preconditions check.. Preconditions.checkState(returnedConn instanceof ClusterConnection) and back it up with a comment why it could fail?", "url": "https://github.com/apache/hbase/pull/1047#discussion_r367551620", "createdAt": "2020-01-16T17:26:55Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint.java", "diffHunk": "@@ -133,12 +152,12 @@ public void init(Context context) throws IOException {\n     // TODO: This connection is replication specific or we should make it particular to\n     // replication and make replication specific settings such as compression or codec to use\n     // passing Cells.\n-    this.conn = (ClusterConnection) ConnectionFactory.createConnection(this.conf);\n+    this.conn = (ClusterConnection) createConnection(this.conf);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5NDA5Ng=="}, "originalCommit": {"oid": "f9c77341e9ed28abb96a22d0d5af26aa77dff636"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0868dfd10bf5e3727fd0bdb41c21fb3d64fc1b60", "author": {"user": {"login": "wchevreuil", "name": "Wellington Ramos Chevreuil"}}, "url": "https://github.com/apache/hbase/commit/0868dfd10bf5e3727fd0bdb41c21fb3d64fc1b60", "committedDate": "2020-01-20T14:08:02Z", "message": "Addressing last round of reviews"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NDc5MDYw", "url": "https://github.com/apache/hbase/pull/1047#pullrequestreview-345479060", "createdAt": "2020-01-20T18:33:00Z", "commit": {"oid": "0868dfd10bf5e3727fd0bdb41c21fb3d64fc1b60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NTk1MjI1", "url": "https://github.com/apache/hbase/pull/1047#pullrequestreview-345595225", "createdAt": "2020-01-21T01:38:12Z", "commit": {"oid": "0868dfd10bf5e3727fd0bdb41c21fb3d64fc1b60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fea133b6b9ed1163e0949c730056e2209492a281", "author": {"user": {"login": "wchevreuil", "name": "Wellington Ramos Chevreuil"}}, "url": "https://github.com/apache/hbase/commit/fea133b6b9ed1163e0949c730056e2209492a281", "committedDate": "2020-01-21T14:46:52Z", "message": "changed import order"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2950, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}