{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODE2NjIw", "number": 1258, "title": "HBASE-23932 Minor improvements to Region Normalizer", "bodyText": "consolidate checks made by master on behalf of balancer and\nnormalizer: deciding if the master is in a healthy state for\nrunning any actions at all (skipRegionManagementAction). Normalizer\nnow does as balancer did previously.\nboth balancer and normalizer make one final check on above\nconditions between calculating an action plan and executing the\nplan. should make the process more responsive to shutdown\nrequests.\nchange normalizer to only consider acting on a region when it is in\nthe OPEN state. previously we would normalizer attempt to merge a\nregion that was already in a MERGING_NEW,MERGING,MERGED state.\nfix some typos in variable names.", "createdAt": "2020-03-09T21:01:20Z", "url": "https://github.com/apache/hbase/pull/1258", "merged": true, "mergeCommit": {"oid": "5750876191eb58e1f69e118b28282c4cf3f14b8c"}, "closed": true, "closedAt": "2020-03-10T17:08:38Z", "author": {"login": "ndimiduk"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMF-6cgFqTM3MTU3NDI1NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMVq8QgBqjMxMTU2NDU4OTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTc0MjU1", "url": "https://github.com/apache/hbase/pull/1258#pullrequestreview-371574255", "createdAt": "2020-03-09T22:36:24Z", "commit": {"oid": "0f4fea1149c5d069de342d44684d73ec9991ef6c"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjozNjoyNFrOFz7qiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjo0MTozOFrOFz7xWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk5OTI0Mw==", "bodyText": "Nice!", "url": "https://github.com/apache/hbase/pull/1258#discussion_r389999243", "createdAt": "2020-03-09T22:36:24Z", "author": {"login": "joshelser"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1722,21 +1723,36 @@ public boolean balance() throws IOException {\n     return balance(false);\n   }\n \n-  public boolean balance(boolean force) throws IOException {\n-    // if master not initialized, don't run balancer.\n+  /**\n+   * Checks master state before initiating action over region topology.\n+   * @param action the name of the action under consideration, for logging.\n+   * @return {@code true} when the caller should exit early, {@code false} otherwise.\n+   */\n+  private boolean skipRegionManagementAction(final String action) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f4fea1149c5d069de342d44684d73ec9991ef6c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk5OTgxNA==", "bodyText": "Nice -- wraps a null-check around isEmpty(). Had to look it up.", "url": "https://github.com/apache/hbase/pull/1258#discussion_r389999814", "createdAt": "2020-03-09T22:38:05Z", "author": {"login": "joshelser"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1868,52 +1889,50 @@ public RegionNormalizer getRegionNormalizer() {\n    *    is globally disabled)\n    */\n   public boolean normalizeRegions() throws IOException {\n-    if (!isInitialized()) {\n-      LOG.debug(\"Master has not been initialized, don't run region normalizer.\");\n-      return false;\n-    }\n-    if (this.getServerManager().isClusterShutdown()) {\n-      LOG.info(\"Cluster is shutting down, don't run region normalizer.\");\n+    if (regionNormalizerTracker == null || !regionNormalizerTracker.isNormalizerOn()) {\n+      LOG.debug(\"Region normalization is disabled, don't run region normalizer.\");\n       return false;\n     }\n-    if (isInMaintenanceMode()) {\n-      LOG.info(\"Master is in maintenance mode, don't run region normalizer.\");\n+    if (skipRegionManagementAction(\"region normalizer\")) {\n       return false;\n     }\n-    if (!this.regionNormalizerTracker.isNormalizerOn()) {\n-      LOG.debug(\"Region normalization is disabled, don't run region normalizer.\");\n+    if (assignmentManager.hasRegionsInTransition()) {\n       return false;\n     }\n \n     synchronized (this.normalizer) {\n       // Don't run the normalizer concurrently\n+\n       List<TableName> allEnabledTables = new ArrayList<>(\n         this.tableStateManager.getTablesInStates(TableState.State.ENABLED));\n \n       Collections.shuffle(allEnabledTables);\n \n       for (TableName table : allEnabledTables) {\n-        if (isInMaintenanceMode()) {\n-          LOG.debug(\"Master is in maintenance mode, stop running region normalizer.\");\n-          return false;\n-        }\n-\n         TableDescriptor tblDesc = getTableDescriptors().get(table);\n         if (table.isSystemTable() || (tblDesc != null &&\n             !tblDesc.isNormalizationEnabled())) {\n           LOG.trace(\"Skipping normalization for {}, as it's either system\"\n               + \" table or doesn't have auto normalization turned on\", table);\n           continue;\n         }\n-        List<NormalizationPlan> plans = this.normalizer.computePlanForTable(table);\n-        if (plans != null) {\n-          for (NormalizationPlan plan : plans) {\n-            plan.execute(asyncClusterConnection.toConnection().getAdmin());\n-            if (plan.getType() == PlanType.SPLIT) {\n-              splitPlanCount++;\n-            } else if (plan.getType() == PlanType.MERGE) {\n-              mergePlanCount++;\n-            }\n+\n+        // make one last check that the cluster isn't shutting down before proceeding.\n+        if (skipRegionManagementAction(\"region normalizer\")) {\n+          return false;\n+        }\n+\n+        final List<NormalizationPlan> plans = this.normalizer.computePlanForTable(table);\n+        if (CollectionUtils.isEmpty(plans)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f4fea1149c5d069de342d44684d73ec9991ef6c"}, "originalPosition": 180}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAwMDk4NQ==", "bodyText": "toConnection() returns a cached Connection but we make a new Admin object every time (at least via AsyncClusterConnectionImpl. Should we just cache this Admin once for all plans?", "url": "https://github.com/apache/hbase/pull/1258#discussion_r390000985", "createdAt": "2020-03-09T22:41:38Z", "author": {"login": "joshelser"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1868,52 +1889,50 @@ public RegionNormalizer getRegionNormalizer() {\n    *    is globally disabled)\n    */\n   public boolean normalizeRegions() throws IOException {\n-    if (!isInitialized()) {\n-      LOG.debug(\"Master has not been initialized, don't run region normalizer.\");\n-      return false;\n-    }\n-    if (this.getServerManager().isClusterShutdown()) {\n-      LOG.info(\"Cluster is shutting down, don't run region normalizer.\");\n+    if (regionNormalizerTracker == null || !regionNormalizerTracker.isNormalizerOn()) {\n+      LOG.debug(\"Region normalization is disabled, don't run region normalizer.\");\n       return false;\n     }\n-    if (isInMaintenanceMode()) {\n-      LOG.info(\"Master is in maintenance mode, don't run region normalizer.\");\n+    if (skipRegionManagementAction(\"region normalizer\")) {\n       return false;\n     }\n-    if (!this.regionNormalizerTracker.isNormalizerOn()) {\n-      LOG.debug(\"Region normalization is disabled, don't run region normalizer.\");\n+    if (assignmentManager.hasRegionsInTransition()) {\n       return false;\n     }\n \n     synchronized (this.normalizer) {\n       // Don't run the normalizer concurrently\n+\n       List<TableName> allEnabledTables = new ArrayList<>(\n         this.tableStateManager.getTablesInStates(TableState.State.ENABLED));\n \n       Collections.shuffle(allEnabledTables);\n \n       for (TableName table : allEnabledTables) {\n-        if (isInMaintenanceMode()) {\n-          LOG.debug(\"Master is in maintenance mode, stop running region normalizer.\");\n-          return false;\n-        }\n-\n         TableDescriptor tblDesc = getTableDescriptors().get(table);\n         if (table.isSystemTable() || (tblDesc != null &&\n             !tblDesc.isNormalizationEnabled())) {\n           LOG.trace(\"Skipping normalization for {}, as it's either system\"\n               + \" table or doesn't have auto normalization turned on\", table);\n           continue;\n         }\n-        List<NormalizationPlan> plans = this.normalizer.computePlanForTable(table);\n-        if (plans != null) {\n-          for (NormalizationPlan plan : plans) {\n-            plan.execute(asyncClusterConnection.toConnection().getAdmin());\n-            if (plan.getType() == PlanType.SPLIT) {\n-              splitPlanCount++;\n-            } else if (plan.getType() == PlanType.MERGE) {\n-              mergePlanCount++;\n-            }\n+\n+        // make one last check that the cluster isn't shutting down before proceeding.\n+        if (skipRegionManagementAction(\"region normalizer\")) {\n+          return false;\n+        }\n+\n+        final List<NormalizationPlan> plans = this.normalizer.computePlanForTable(table);\n+        if (CollectionUtils.isEmpty(plans)) {\n+          return true;\n+        }\n+\n+        for (NormalizationPlan plan : plans) {\n+          plan.execute(asyncClusterConnection.toConnection().getAdmin());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f4fea1149c5d069de342d44684d73ec9991ef6c"}, "originalPosition": 185}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNjIxNjc4", "url": "https://github.com/apache/hbase/pull/1258#pullrequestreview-371621678", "createdAt": "2020-03-10T01:04:11Z", "commit": {"oid": "0f4fea1149c5d069de342d44684d73ec9991ef6c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9feadc3026a6b5fbfa018c7c090a8ad69ab6995", "author": {"user": {"login": "ndimiduk", "name": "Nick Dimiduk"}}, "url": "https://github.com/apache/hbase/commit/c9feadc3026a6b5fbfa018c7c090a8ad69ab6995", "committedDate": "2020-03-10T17:04:33Z", "message": "HBASE-23932 Minor improvements to Region Normalizer\n\n - consolidate checks made by master on behalf of balancer and\n   normalizer: deciding if the master is in a healthy state for\n   running any actions at all (skipRegionManagementAction). Normalizer\n   now does as balancer did previously.\n - both balancer and normalizer make one final check on above\n   conditions between calculating an action plan and executing the\n   plan. should make the process more responsive to shutdown\n   requests.\n - change normalizer to only consider acting on a region when it is in\n   the OPEN state. previously we would normalizer attempt to merge a\n   region that was already in a MERGING_NEW,MERGING,MERGED state.\n - fix some typos in variable names.\n\nSigned-off-by: Josh Elser <elserj@apache.org>\nSigned-off-by: binlijin <binlijin@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f4fea1149c5d069de342d44684d73ec9991ef6c", "author": {"user": {"login": "ndimiduk", "name": "Nick Dimiduk"}}, "url": "https://github.com/apache/hbase/commit/0f4fea1149c5d069de342d44684d73ec9991ef6c", "committedDate": "2020-03-09T20:52:13Z", "message": "HBASE-23932 Minor improvements to Region Normalizer\n\n - consolidate checks made by master on behalf of balancer and\n   normalizer: deciding if the master is in a healthy state for\n   running any actions at all (skipRegionManagementAction). Normalizer\n   now does as balancer did previously.\n - both balancer and normalizer make one final check on above\n   conditions between calculating an action plan and executing the\n   plan. should make the process more responsive to shutdown\n   requests.\n - change normalizer to only consider acting on a region when it is in\n   the OPEN state. previously we would normalizer attempt to merge a\n   region that was already in a MERGING_NEW,MERGING,MERGED state.\n - fix some typos in variable names."}, "afterCommit": {"oid": "c9feadc3026a6b5fbfa018c7c090a8ad69ab6995", "author": {"user": {"login": "ndimiduk", "name": "Nick Dimiduk"}}, "url": "https://github.com/apache/hbase/commit/c9feadc3026a6b5fbfa018c7c090a8ad69ab6995", "committedDate": "2020-03-10T17:04:33Z", "message": "HBASE-23932 Minor improvements to Region Normalizer\n\n - consolidate checks made by master on behalf of balancer and\n   normalizer: deciding if the master is in a healthy state for\n   running any actions at all (skipRegionManagementAction). Normalizer\n   now does as balancer did previously.\n - both balancer and normalizer make one final check on above\n   conditions between calculating an action plan and executing the\n   plan. should make the process more responsive to shutdown\n   requests.\n - change normalizer to only consider acting on a region when it is in\n   the OPEN state. previously we would normalizer attempt to merge a\n   region that was already in a MERGING_NEW,MERGING,MERGED state.\n - fix some typos in variable names.\n\nSigned-off-by: Josh Elser <elserj@apache.org>\nSigned-off-by: binlijin <binlijin@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2602, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}