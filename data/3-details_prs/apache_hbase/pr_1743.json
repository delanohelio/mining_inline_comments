{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNTExNTk5", "number": 1743, "title": "HBASE-24403 FsDelegationToken Should Cache Token After Acquired A New One", "bodyText": "Problem Description\nWhen doing Bulkload, we find that FsDelegationToken will acquire token of NameNode every time for a single file, although, from the comment of acquireDelegationToken(), it claims that it is trying to find token in cache firstly, but the newly requested token is never put to cache and thus the cache is still empty for the following request;\nIn cases there are many files to do the bulk load,  the token request will cause big shock to NameNode.\n  public void acquireDelegationToken(final String tokenKind, final FileSystem fs)\n      throws IOException {\n    Objects.requireNonNull(tokenKind, \"tokenKind:null\");\n    if (userProvider.isHadoopSecurityEnabled()) {\n      this.fs = fs;\n      userToken = userProvider.getCurrent().getToken(tokenKind, fs.getCanonicalServiceName());\n      if (userToken == null) {\n        hasForwardedToken = false;\n        try {\n          userToken = fs.getDelegationToken(renewer);\n          userProvider.getCurrent().addToken(userToken);\n        } catch (NullPointerException npe) {\n          // we need to handle NullPointerException in case HADOOP-10009 is missing\n          LOG.error(\"Failed to get token for \" + renewer);\n        }\n      } else {\n        hasForwardedToken = true;\n        LOG.info(\"Use the existing token: \" + userToken);\n      }\n    }\n  }\n\n\nToken Expiration Processing Logic\nIf we use a cached token, we must renew or apply for new token before token is expired;\nMy solution is:\nWhen Should We Apply for New Token\nWhen and only below condition, we will apply for a new DelegationToken from HDFS:\n\nWe cannot find corresponding token in cache\nWe could find the cached token, but the token is expiring or already expired.\n\nHow to figure out whether or not the cached token is expiring?\nEverything we apply for a brand new token, we quickly renew the token to get the token expiration time. Then, we configured a time buffer(By default 10min), which means that everytime we want to use the cached token, we need to confirm that current time has not reached the tokenExpiration time - timebuffer. If reached, we need to acquire a new token.", "createdAt": "2020-05-20T05:14:52Z", "url": "https://github.com/apache/hbase/pull/1743", "merged": true, "mergeCommit": {"oid": "7b396e9b8ca93361de6a6c4bc8a40442db77c4da"}, "closed": true, "closedAt": "2020-06-10T00:46:59Z", "author": {"login": "VicoWu"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjB_9kAH2gAyNDIwNTExNTk5OjhiZmUyMjBlYjc2ZjNlY2E3M2M3ZDdhOWI5NjNlOTc1NmM1YmVlNmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpuvyAAFqTQyNzYzODIzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8bfe220eb76f3eca73c7d7a9b963e9756c5bee6d", "author": {"user": {"login": "VicoWu", "name": "Vico.Wu"}}, "url": "https://github.com/apache/hbase/commit/8bfe220eb76f3eca73c7d7a9b963e9756c5bee6d", "committedDate": "2020-05-20T05:13:12Z", "message": "cache token for current ugi"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTMzMzU3", "url": "https://github.com/apache/hbase/pull/1743#pullrequestreview-415533357", "createdAt": "2020-05-20T16:53:47Z", "commit": {"oid": "8bfe220eb76f3eca73c7d7a9b963e9756c5bee6d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTgxODg1", "url": "https://github.com/apache/hbase/pull/1743#pullrequestreview-415581885", "createdAt": "2020-05-20T17:57:28Z", "commit": {"oid": "8bfe220eb76f3eca73c7d7a9b963e9756c5bee6d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzo1NzoyOFrOGYXaqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzo1NzoyOFrOGYXaqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwMjY2NA==", "bodyText": "LGTM. Does it make sense to add a small test to have it covered/verified?", "url": "https://github.com/apache/hbase/pull/1743#discussion_r428202664", "createdAt": "2020-05-20T17:57:28Z", "author": {"login": "HorizonNet"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/security/token/FsDelegationToken.java", "diffHunk": "@@ -104,6 +104,7 @@ public void acquireDelegationToken(final String tokenKind, final FileSystem fs)\n         hasForwardedToken = false;\n         try {\n           userToken = fs.getDelegationToken(renewer);\n+          userProvider.getCurrent().addToken(userToken);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bfe220eb76f3eca73c7d7a9b963e9756c5bee6d"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96aa214011a2e5be1c8fabed2c4cd044f7ae9792", "author": {"user": {"login": "VicoWu", "name": "Vico.Wu"}}, "url": "https://github.com/apache/hbase/commit/96aa214011a2e5be1c8fabed2c4cd044f7ae9792", "committedDate": "2020-05-21T08:53:52Z", "message": "add some test case for this new feature"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "277ec84fa2a5dd556a41807a14304e8ec5124785", "author": {"user": {"login": "VicoWu", "name": "Vico.Wu"}}, "url": "https://github.com/apache/hbase/commit/277ec84fa2a5dd556a41807a14304e8ec5124785", "committedDate": "2020-05-23T02:19:15Z", "message": "add retry logic for token expiration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94f1546d1872da9cc5d1892b3317ac1d366334ed", "author": {"user": {"login": "VicoWu", "name": "Vico.Wu"}}, "url": "https://github.com/apache/hbase/commit/94f1546d1872da9cc5d1892b3317ac1d366334ed", "committedDate": "2020-05-28T02:04:23Z", "message": "add token expiration process logic"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMTY3OTIx", "url": "https://github.com/apache/hbase/pull/1743#pullrequestreview-423167921", "createdAt": "2020-06-03T01:55:33Z", "commit": {"oid": "94f1546d1872da9cc5d1892b3317ac1d366334ed"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50d0bcbf217d8d5cf6462234882ff29482a065d8", "author": {"user": {"login": "VicoWu", "name": "Vico.Wu"}}, "url": "https://github.com/apache/hbase/commit/50d0bcbf217d8d5cf6462234882ff29482a065d8", "committedDate": "2020-06-03T02:14:42Z", "message": "fix the checkstyle issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e4ca0fd4018d9dcc1ffe04ef3d4ed1f9904f912", "author": {"user": {"login": "VicoWu", "name": "Vico.Wu"}}, "url": "https://github.com/apache/hbase/commit/8e4ca0fd4018d9dcc1ffe04ef3d4ed1f9904f912", "committedDate": "2020-06-03T05:19:00Z", "message": "stacktrace for token exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67c5e6658d784c2af27fd6d3e391becfe2072dcf", "author": {"user": {"login": "VicoWu", "name": "Vico.Wu"}}, "url": "https://github.com/apache/hbase/commit/67c5e6658d784c2af27fd6d3e391becfe2072dcf", "committedDate": "2020-06-03T07:52:23Z", "message": "fix testing issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NjM4MjMy", "url": "https://github.com/apache/hbase/pull/1743#pullrequestreview-427638232", "createdAt": "2020-06-10T00:44:48Z", "commit": {"oid": "67c5e6658d784c2af27fd6d3e391becfe2072dcf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4680, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}