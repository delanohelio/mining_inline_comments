{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NjE2MzAz", "number": 1945, "title": "HBASE-24603: Make Zookeeper sync() call synchronous", "bodyText": "Writing a test for this is tricky. There is enough coverage for\nfunctional tests. Only concern is performance, but there is enough\nlogging for it to detect timed out/badly performing sync calls.", "createdAt": "2020-06-21T23:32:35Z", "url": "https://github.com/apache/hbase/pull/1945", "merged": true, "mergeCommit": {"oid": "84e246f9b197bfa4307172db5465214771b78d38"}, "closed": true, "closedAt": "2020-06-25T20:27:39Z", "author": {"login": "bharathv"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctsAecgFqTQzNDY3MDYyMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuyrEvAFqTQzNzczODU5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NjcwNjIy", "url": "https://github.com/apache/hbase/pull/1945#pullrequestreview-434670622", "createdAt": "2020-06-22T07:35:46Z", "commit": {"oid": "9bde262b066b94877f53066c01b024f14ded5107"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNzozNTo0NlrOGm1FFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNzozODoxMlrOGm1Jug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2ODcyNw==", "bodyText": "IMHO error is fine but better to keep it warn. We anyways have warn for InterruptedException also.", "url": "https://github.com/apache/hbase/pull/1945#discussion_r443368727", "createdAt": "2020-06-22T07:35:46Z", "author": {"login": "virajjasani"}, "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -595,9 +604,28 @@ private void connectionEvent(WatchedEvent event) {\n    * data of an existing node and delete or transition that node, utilizing the\n    * previously read version and data.  We want to ensure that the version read\n    * is up-to-date from when we begin the operation.\n+   * <p>\n    */\n-  public void sync(String path) throws KeeperException {\n-    this.recoverableZooKeeper.sync(path, null, null);\n+  public void syncOrTimeout(String path) throws KeeperException {\n+    final CountDownLatch latch = new CountDownLatch(1);\n+    long startTime = EnvironmentEdgeManager.currentTime();\n+    this.recoverableZooKeeper.sync(path, (i, s, o) -> latch.countDown(), null);\n+    try {\n+      if (!latch.await(zkSyncTimeout, TimeUnit.MILLISECONDS)) {\n+        LOG.error(\"sync() operation to ZK timed out. Configured timeout: {}ms. This usually points \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bde262b066b94877f53066c01b024f14ded5107"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2OTkxNA==", "bodyText": "RecoverableZooKeeper is IA.Private. Can we remove last argument Object ctx as part of this PR? Anyways we pass null context to actual API.", "url": "https://github.com/apache/hbase/pull/1945#discussion_r443369914", "createdAt": "2020-06-22T07:38:12Z", "author": {"login": "virajjasani"}, "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -595,9 +604,28 @@ private void connectionEvent(WatchedEvent event) {\n    * data of an existing node and delete or transition that node, utilizing the\n    * previously read version and data.  We want to ensure that the version read\n    * is up-to-date from when we begin the operation.\n+   * <p>\n    */\n-  public void sync(String path) throws KeeperException {\n-    this.recoverableZooKeeper.sync(path, null, null);\n+  public void syncOrTimeout(String path) throws KeeperException {\n+    final CountDownLatch latch = new CountDownLatch(1);\n+    long startTime = EnvironmentEdgeManager.currentTime();\n+    this.recoverableZooKeeper.sync(path, (i, s, o) -> latch.countDown(), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bde262b066b94877f53066c01b024f14ded5107"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MTM0NTkz", "url": "https://github.com/apache/hbase/pull/1945#pullrequestreview-435134593", "createdAt": "2020-06-22T17:30:33Z", "commit": {"oid": "9bde262b066b94877f53066c01b024f14ded5107"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzozMDozM1rOGnKZRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzozMDo1OVrOGnKaEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxNzk1Ng==", "bodyText": "This has to be backported to branch-1, which requires Java 7 compatible code, and there's no real need for a lambda here. We have guaranteed code divergence between the branches in exchange for perhaps some improved readability. Is it worth it?", "url": "https://github.com/apache/hbase/pull/1945#discussion_r443717956", "createdAt": "2020-06-22T17:30:33Z", "author": {"login": "apurtell"}, "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -595,9 +604,28 @@ private void connectionEvent(WatchedEvent event) {\n    * data of an existing node and delete or transition that node, utilizing the\n    * previously read version and data.  We want to ensure that the version read\n    * is up-to-date from when we begin the operation.\n+   * <p>\n    */\n-  public void sync(String path) throws KeeperException {\n-    this.recoverableZooKeeper.sync(path, null, null);\n+  public void syncOrTimeout(String path) throws KeeperException {\n+    final CountDownLatch latch = new CountDownLatch(1);\n+    long startTime = EnvironmentEdgeManager.currentTime();\n+    this.recoverableZooKeeper.sync(path, (i, s, o) -> latch.countDown(), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9bde262b066b94877f53066c01b024f14ded5107"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxODE2Mg==", "bodyText": "This should be WARN.", "url": "https://github.com/apache/hbase/pull/1945#discussion_r443718162", "createdAt": "2020-06-22T17:30:59Z", "author": {"login": "apurtell"}, "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -595,9 +604,28 @@ private void connectionEvent(WatchedEvent event) {\n    * data of an existing node and delete or transition that node, utilizing the\n    * previously read version and data.  We want to ensure that the version read\n    * is up-to-date from when we begin the operation.\n+   * <p>\n    */\n-  public void sync(String path) throws KeeperException {\n-    this.recoverableZooKeeper.sync(path, null, null);\n+  public void syncOrTimeout(String path) throws KeeperException {\n+    final CountDownLatch latch = new CountDownLatch(1);\n+    long startTime = EnvironmentEdgeManager.currentTime();\n+    this.recoverableZooKeeper.sync(path, (i, s, o) -> latch.countDown(), null);\n+    try {\n+      if (!latch.await(zkSyncTimeout, TimeUnit.MILLISECONDS)) {\n+        LOG.error(\"sync() operation to ZK timed out. Configured timeout: {}ms. This usually points \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzM2ODcyNw=="}, "originalCommit": {"oid": "9bde262b066b94877f53066c01b024f14ded5107"}, "originalPosition": 60}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9bde262b066b94877f53066c01b024f14ded5107", "author": {"user": {"login": "bharathv", "name": "Bharath Vissapragada"}}, "url": "https://github.com/apache/hbase/commit/9bde262b066b94877f53066c01b024f14ded5107", "committedDate": "2020-06-21T23:24:45Z", "message": "HBASE-24603: Make Zookeeper sync() call synchronous\n\nWriting a test for this is tricky. There is enough coverage for\nfunctional tests. Only concern is performance, but there is enough\nlogging for it to detect timed out/badly performing sync calls."}, "afterCommit": {"oid": "23e9e963c0c708bf7b36f2621199dee47f2b14ba", "author": {"user": {"login": "bharathv", "name": "Bharath Vissapragada"}}, "url": "https://github.com/apache/hbase/commit/23e9e963c0c708bf7b36f2621199dee47f2b14ba", "committedDate": "2020-06-25T02:43:24Z", "message": "HBASE-24603: Make Zookeeper sync() call synchronous\n\nWriting a test for this is tricky. There is enough coverage for\nfunctional tests. Only concern is performance, but there is enough\nlogging for it to detect timed out/badly performing sync calls.\n\nAdditionally, this patch decouples the ZK event processing into it's\nown thread rather than doing it in the EventThread's context. That\navoids deadlocks and stalls of the event thread."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23e9e963c0c708bf7b36f2621199dee47f2b14ba", "author": {"user": {"login": "bharathv", "name": "Bharath Vissapragada"}}, "url": "https://github.com/apache/hbase/commit/23e9e963c0c708bf7b36f2621199dee47f2b14ba", "committedDate": "2020-06-25T02:43:24Z", "message": "HBASE-24603: Make Zookeeper sync() call synchronous\n\nWriting a test for this is tricky. There is enough coverage for\nfunctional tests. Only concern is performance, but there is enough\nlogging for it to detect timed out/badly performing sync calls.\n\nAdditionally, this patch decouples the ZK event processing into it's\nown thread rather than doing it in the EventThread's context. That\navoids deadlocks and stalls of the event thread."}, "afterCommit": {"oid": "75846a7e6a11f9a7befe88370efc81f0e1cb7b3b", "author": {"user": {"login": "bharathv", "name": "Bharath Vissapragada"}}, "url": "https://github.com/apache/hbase/commit/75846a7e6a11f9a7befe88370efc81f0e1cb7b3b", "committedDate": "2020-06-25T16:20:34Z", "message": "HBASE-24603: Make Zookeeper sync() call synchronous\n\nWriting a test for this is tricky. There is enough coverage for\nfunctional tests. Only concern is performance, but there is enough\nlogging for it to detect timed out/badly performing sync calls.\n\nAdditionally, this patch decouples the ZK event processing into it's\nown thread rather than doing it in the EventThread's context. That\navoids deadlocks and stalls of the event thread."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NjU3Nzk1", "url": "https://github.com/apache/hbase/pull/1945#pullrequestreview-437657795", "createdAt": "2020-06-25T16:22:58Z", "commit": {"oid": "75846a7e6a11f9a7befe88370efc81f0e1cb7b3b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NjY3NDM4", "url": "https://github.com/apache/hbase/pull/1945#pullrequestreview-437667438", "createdAt": "2020-06-25T16:34:56Z", "commit": {"oid": "75846a7e6a11f9a7befe88370efc81f0e1cb7b3b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjozNDo1NlrOGpCwSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNjo0ODo0M1rOGpDRSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY4OTkzMQ==", "bodyText": "Yeah, this looks better.", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445689931", "createdAt": "2020-06-25T16:34:56Z", "author": {"login": "virajjasani"}, "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -530,10 +539,26 @@ public void process(WatchedEvent event) {\n         break;\n       }\n       default:\n-        throw new IllegalStateException(\"Received event is not valid: \" + event.getState());\n+        LOG.error(\"Invalid event of type {} received for path {}. Ignoring.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75846a7e6a11f9a7befe88370efc81f0e1cb7b3b"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5NTMzNA==", "bodyText": "keep it private?", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445695334", "createdAt": "2020-06-25T16:43:56Z", "author": {"login": "virajjasani"}, "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -479,29 +502,15 @@ public ZNodePaths getZNodePaths() {\n     return znodePaths;\n   }\n \n-  /**\n-   * Method called from ZooKeeper for events and connection status.\n-   * <p>\n-   * Valid events are passed along to listeners.  Connection status changes\n-   * are dealt with locally.\n-   */\n-  @Override\n-  public void process(WatchedEvent event) {\n-    LOG.debug(prefix(\"Received ZooKeeper Event, \" +\n-        \"type=\" + event.getType() + \", \" +\n-        \"state=\" + event.getState() + \", \" +\n-        \"path=\" + event.getPath()));\n-\n+  void processEvent(WatchedEvent event) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75846a7e6a11f9a7befe88370efc81f0e1cb7b3b"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTY5ODM3OQ==", "bodyText": "Why not use new ThreadFactoryBuilder() and set name format?", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445698379", "createdAt": "2020-06-25T16:48:43Z", "author": {"login": "virajjasani"}, "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -79,8 +86,22 @@\n   // listeners to be notified\n   private final List<ZKListener> listeners = new CopyOnWriteArrayList<>();\n \n+  // Single threaded executor pool that processes event notifications from Zookeeper. Events are\n+  // processed in the order in which they arrive (pool backed by an unbounded fifo queue). We do\n+  // this to decouple the event processing from Zookeeper's ClientCnxn's EventThread context.\n+  // EventThread internally runs a single while loop to serially process all the events. When events\n+  // are processed by the listeners in the same thread, that blocks the EventThread from processing\n+  // subsequent events. Processing events in a separate thread frees up the event thread to continue\n+  // and further prevents deadlocks if the process method itself makes other zookeeper calls.\n+  // It is ok to do it in a single thread because the Zookeeper ClientCnxn already serializes the\n+  // requests using a single while loop and hence there is no performance degradation.\n+  private final ExecutorService zkEventProcessor =\n+      Executors.newSingleThreadExecutor(Threads.getNamedThreadFactory(\"zk-event-processor\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75846a7e6a11f9a7befe88370efc81f0e1cb7b3b"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93f268d3c405715a1513154dc0a3da0bd4463540", "author": {"user": {"login": "bharathv", "name": "Bharath Vissapragada"}}, "url": "https://github.com/apache/hbase/commit/93f268d3c405715a1513154dc0a3da0bd4463540", "committedDate": "2020-06-25T17:38:10Z", "message": "HBASE-24603: Make Zookeeper sync() call synchronous\n\nWriting a test for this is tricky. There is enough coverage for\nfunctional tests. Only concern is performance, but there is enough\nlogging for it to detect timed out/badly performing sync calls.\n\nAdditionally, this patch decouples the ZK event processing into it's\nown thread rather than doing it in the EventThread's context. That\navoids deadlocks and stalls of the event thread."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "75846a7e6a11f9a7befe88370efc81f0e1cb7b3b", "author": {"user": {"login": "bharathv", "name": "Bharath Vissapragada"}}, "url": "https://github.com/apache/hbase/commit/75846a7e6a11f9a7befe88370efc81f0e1cb7b3b", "committedDate": "2020-06-25T16:20:34Z", "message": "HBASE-24603: Make Zookeeper sync() call synchronous\n\nWriting a test for this is tricky. There is enough coverage for\nfunctional tests. Only concern is performance, but there is enough\nlogging for it to detect timed out/badly performing sync calls.\n\nAdditionally, this patch decouples the ZK event processing into it's\nown thread rather than doing it in the EventThread's context. That\navoids deadlocks and stalls of the event thread."}, "afterCommit": {"oid": "93f268d3c405715a1513154dc0a3da0bd4463540", "author": {"user": {"login": "bharathv", "name": "Bharath Vissapragada"}}, "url": "https://github.com/apache/hbase/commit/93f268d3c405715a1513154dc0a3da0bd4463540", "committedDate": "2020-06-25T17:38:10Z", "message": "HBASE-24603: Make Zookeeper sync() call synchronous\n\nWriting a test for this is tricky. There is enough coverage for\nfunctional tests. Only concern is performance, but there is enough\nlogging for it to detect timed out/badly performing sync calls.\n\nAdditionally, this patch decouples the ZK event processing into it's\nown thread rather than doing it in the EventThread's context. That\navoids deadlocks and stalls of the event thread."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NzI2ODY5", "url": "https://github.com/apache/hbase/pull/1945#pullrequestreview-437726869", "createdAt": "2020-06-25T17:52:57Z", "commit": {"oid": "93f268d3c405715a1513154dc0a3da0bd4463540"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzo1Mjo1N1rOGpFiEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzo1Mjo1N1rOGpFiEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTczNTQ0Mg==", "bodyText": "I see, this was at the root of the test failures.", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445735442", "createdAt": "2020-06-25T17:52:57Z", "author": {"login": "apurtell"}, "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -79,8 +86,22 @@\n   // listeners to be notified\n   private final List<ZKListener> listeners = new CopyOnWriteArrayList<>();\n \n+  // Single threaded executor pool that processes event notifications from Zookeeper. Events are\n+  // processed in the order in which they arrive (pool backed by an unbounded fifo queue). We do\n+  // this to decouple the event processing from Zookeeper's ClientCnxn's EventThread context.\n+  // EventThread internally runs a single while loop to serially process all the events. When events\n+  // are processed by the listeners in the same thread, that blocks the EventThread from processing\n+  // subsequent events. Processing events in a separate thread frees up the event thread to continue", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93f268d3c405715a1513154dc0a3da0bd4463540"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NzI3NzM2", "url": "https://github.com/apache/hbase/pull/1945#pullrequestreview-437727736", "createdAt": "2020-06-25T17:54:03Z", "commit": {"oid": "93f268d3c405715a1513154dc0a3da0bd4463540"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzo1NDowM1rOGpFkug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQxNzo1NDowM1rOGpFkug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTczNjEyMg==", "bodyText": "Do we need the lambda here? branch-1....", "url": "https://github.com/apache/hbase/pull/1945#discussion_r445736122", "createdAt": "2020-06-25T17:54:03Z", "author": {"login": "apurtell"}, "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKWatcher.java", "diffHunk": "@@ -530,10 +539,26 @@ public void process(WatchedEvent event) {\n         break;\n       }\n       default:\n-        throw new IllegalStateException(\"Received event is not valid: \" + event.getState());\n+        LOG.error(\"Invalid event of type {} received for path {}. Ignoring.\",\n+            event.getState(), event.getPath());\n     }\n   }\n \n+  /**\n+   * Method called from ZooKeeper for events and connection status.\n+   * <p>\n+   * Valid events are passed along to listeners.  Connection status changes\n+   * are dealt with locally.\n+   */\n+  @Override\n+  public void process(WatchedEvent event) {\n+    LOG.debug(prefix(\"Received ZooKeeper Event, \" +\n+        \"type=\" + event.getType() + \", \" +\n+        \"state=\" + event.getState() + \", \" +\n+        \"path=\" + event.getPath()));\n+    zkEventProcessor.submit(() -> processEvent(event));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93f268d3c405715a1513154dc0a3da0bd4463540"}, "originalPosition": 106}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NzI4NDk2", "url": "https://github.com/apache/hbase/pull/1945#pullrequestreview-437728496", "createdAt": "2020-06-25T17:55:05Z", "commit": {"oid": "93f268d3c405715a1513154dc0a3da0bd4463540"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3NzM4NTk5", "url": "https://github.com/apache/hbase/pull/1945#pullrequestreview-437738599", "createdAt": "2020-06-25T18:08:54Z", "commit": {"oid": "93f268d3c405715a1513154dc0a3da0bd4463540"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4381, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}