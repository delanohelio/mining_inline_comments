{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNDkwODYw", "number": 1742, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDo1MjowNVrOD-KVlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNzozMToxMFrOD-gKpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTA3NjcxOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDo1MjowNVrOGYGAig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzoxNDo0N1rOGYLAsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkxNzQ1MA==", "bodyText": "Can we also add debug message for when max cell size check is disabled?", "url": "https://github.com/apache/hbase/pull/1742#discussion_r427917450", "createdAt": "2020-05-20T10:52:05Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,16 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(msg);\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(msg);\n+          }\n+          throw new DoNotRetryIOException(msg);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69a3875cecee4dbe189a936b1a9da9efcf03d804"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk5OTQxMQ==", "bodyText": "I will add debug msg.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r427999411", "createdAt": "2020-05-20T13:14:47Z", "author": {"login": "wenbang"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,16 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(msg);\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(msg);\n+          }\n+          throw new DoNotRetryIOException(msg);\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkxNzQ1MA=="}, "originalCommit": {"oid": "69a3875cecee4dbe189a936b1a9da9efcf03d804"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTA5MDYzOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide5.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDo1NjoxMlrOGYGJMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzoxOToxOVrOGYLONw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkxOTY2NA==", "bodyText": "NIT: For clarity, can we use HRegion.DEFAULT_MAX_CELL_SIZE + 1, instead?", "url": "https://github.com/apache/hbase/pull/1742#discussion_r427919664", "createdAt": "2020-05-20T10:56:12Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide5.java", "diffHunk": "@@ -2274,6 +2274,20 @@ public void testCellSizeLimit() throws IOException {\n         // expected\n       }\n     }\n+    //test cell size no limit\n+    final TableName noLimitTable = TableName.valueOf(\"testCellSizeNoLimit\");\n+    TableDescriptorBuilder.ModifyableTableDescriptor noLimitTableDescriptor =\n+      new TableDescriptorBuilder.ModifyableTableDescriptor(noLimitTable)\n+        .setValue(HRegion.HBASE_MAX_CELL_SIZE_KEY, Integer.toString(0));\n+    noLimitTableDescriptor.setColumnFamily(familyDescriptor);\n+    try (Admin admin = TEST_UTIL.getAdmin()) {\n+      admin.createTable(noLimitTableDescriptor);\n+    }\n+    // Will succeed\n+    try (Table nt = TEST_UTIL.getConnection().getTable(noLimitTable)) {\n+      nt.put(new Put(ROW).addColumn(FAMILY, QUALIFIER,  new byte[9 * 1024 * 1024]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69a3875cecee4dbe189a936b1a9da9efcf03d804"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAwMjg3MQ==", "bodyText": "Since the client will also check hbase.client.keyvalue.maxsize, i use HRegion.DEFAULT_MAX_CELL_SIZE - 1024 and 1024 + 1, instead.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428002871", "createdAt": "2020-05-20T13:19:19Z", "author": {"login": "wenbang"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide5.java", "diffHunk": "@@ -2274,6 +2274,20 @@ public void testCellSizeLimit() throws IOException {\n         // expected\n       }\n     }\n+    //test cell size no limit\n+    final TableName noLimitTable = TableName.valueOf(\"testCellSizeNoLimit\");\n+    TableDescriptorBuilder.ModifyableTableDescriptor noLimitTableDescriptor =\n+      new TableDescriptorBuilder.ModifyableTableDescriptor(noLimitTable)\n+        .setValue(HRegion.HBASE_MAX_CELL_SIZE_KEY, Integer.toString(0));\n+    noLimitTableDescriptor.setColumnFamily(familyDescriptor);\n+    try (Admin admin = TEST_UTIL.getAdmin()) {\n+      admin.createTable(noLimitTableDescriptor);\n+    }\n+    // Will succeed\n+    try (Table nt = TEST_UTIL.getConnection().getTable(noLimitTable)) {\n+      nt.put(new Put(ROW).addColumn(FAMILY, QUALIFIER,  new byte[9 * 1024 * 1024]));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkxOTY2NA=="}, "originalCommit": {"oid": "69a3875cecee4dbe189a936b1a9da9efcf03d804"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTkwMTA4OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoxNTo1M1rOGYN-9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxMToxM1rOGYQqCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0ODExNg==", "bodyText": "We should use log4j parameterized messages feature, that way we don't need the concatenation logic, nor the if statement.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428048116", "createdAt": "2020-05-20T14:15:53Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,22 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(msg);\n+          }\n+          throw new DoNotRetryIOException(msg);\n+        }\n+      } else {\n+        String msg = \"Cell size check is disabled because of maxCellSize is set to\" +\n+          this.maxCellSize;\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(msg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd0585e7af058971209f2626a9efbfbe385a1aa4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5MTkxMw==", "bodyText": "ok", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428091913", "createdAt": "2020-05-20T15:11:13Z", "author": {"login": "wenbang"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,22 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(msg);\n+          }\n+          throw new DoNotRetryIOException(msg);\n+        }\n+      } else {\n+        String msg = \"Cell size check is disabled because of maxCellSize is set to\" +\n+          this.maxCellSize;\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(msg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0ODExNg=="}, "originalCommit": {"oid": "fd0585e7af058971209f2626a9efbfbe385a1aa4"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTkwMTg3OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoxNjowM1rOGYN_fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxMToyMVrOGYQqYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0ODI1Mw==", "bodyText": "We should use log4j parameterized messages feature, that way we don't need the concatenation logic, nor the if statement.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428048253", "createdAt": "2020-05-20T14:16:03Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java", "diffHunk": "@@ -983,6 +983,11 @@ private void checkCellSizeLimit(final HRegion r, final Mutation m) throws IOExce\n           throw new DoNotRetryIOException(msg);\n         }\n       }\n+    } else {\n+      String msg = \"Cell size check is disabled because of maxCellSize is set to\" + r.maxCellSize;\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(msg);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd0585e7af058971209f2626a9efbfbe385a1aa4"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5MjAwMQ==", "bodyText": "ok", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428092001", "createdAt": "2020-05-20T15:11:21Z", "author": {"login": "wenbang"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java", "diffHunk": "@@ -983,6 +983,11 @@ private void checkCellSizeLimit(final HRegion r, final Mutation m) throws IOExce\n           throw new DoNotRetryIOException(msg);\n         }\n       }\n+    } else {\n+      String msg = \"Cell size check is disabled because of maxCellSize is set to\" + r.maxCellSize;\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(msg);\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0ODI1Mw=="}, "originalCommit": {"oid": "fd0585e7af058971209f2626a9efbfbe385a1aa4"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTkwNjEyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoxNjo1NVrOGYOCIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNToxNjo1NlrOGYQ7KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0ODkyOQ==", "bodyText": "We should use log4j parameterized messages feature, that way we don't need the concatenation logic, nor the if (LOG.isDebugEnabled()) check.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428048929", "createdAt": "2020-05-20T14:16:55Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,22 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(msg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd0585e7af058971209f2626a9efbfbe385a1aa4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA5NjI5Ng==", "bodyText": "I only removed the if (LOG.isDebugEnabled()) check, because msg is also used for DoNotRetryIOException.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428096296", "createdAt": "2020-05-20T15:16:56Z", "author": {"login": "wenbang"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,22 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(msg);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0ODkyOQ=="}, "originalCommit": {"oid": "fd0585e7af058971209f2626a9efbfbe385a1aa4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Njg3MzE5OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide5.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODowNzo0NFrOGYXyHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMjo0NDoyM1rOGYkYdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwODY2OQ==", "bodyText": "Use the @Rule provided in this class instead of a String for the table name, such as name.getMethodName().", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428208669", "createdAt": "2020-05-20T18:07:44Z", "author": {"login": "HorizonNet"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide5.java", "diffHunk": "@@ -2274,6 +2274,21 @@ public void testCellSizeLimit() throws IOException {\n         // expected\n       }\n     }\n+    //test cell size no limit\n+    final TableName noLimitTable = TableName.valueOf(\"testCellSizeNoLimit\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQxNTA5NA==", "bodyText": "Good suggestion, done.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428415094", "createdAt": "2020-05-21T02:44:23Z", "author": {"login": "wenbang"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide5.java", "diffHunk": "@@ -2274,6 +2274,21 @@ public void testCellSizeLimit() throws IOException {\n         // expected\n       }\n     }\n+    //test cell size no limit\n+    final TableName noLimitTable = TableName.valueOf(\"testCellSizeNoLimit\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwODY2OQ=="}, "originalCommit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODAzNjczOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMToyMjoyMFrOGYjJ0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMDo0Mjo1NVrOGZSvvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NDk2Mw==", "bodyText": "Don't need to log this everytime? Only log once is enough when regionserver start.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428394963", "createdAt": "2020-05-21T01:22:20Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,17 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n-        if (LOG.isDebugEnabled()) {\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n           LOG.debug(msg);\n+          throw new DoNotRetryIOException(msg);\n         }\n-        throw new DoNotRetryIOException(msg);\n+      } else {\n+        LOG.debug(\"Cell size check is disabled because of maxCellSize is set to {}.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQwNzA4Ng==", "bodyText": "This parameter can be configured to the column family of the table, different tables can have different values.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428407086", "createdAt": "2020-05-21T02:11:48Z", "author": {"login": "wenbang"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,17 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n-        if (LOG.isDebugEnabled()) {\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n           LOG.debug(msg);\n+          throw new DoNotRetryIOException(msg);\n         }\n-        throw new DoNotRetryIOException(msg);\n+      } else {\n+        LOG.debug(\"Cell size check is disabled because of maxCellSize is set to {}.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NDk2Mw=="}, "originalCommit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ5MjAwMw==", "bodyText": "ok. I thought this log is not needed. If log this everytime, there are too many logs.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428492003", "createdAt": "2020-05-21T07:31:02Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,17 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n-        if (LOG.isDebugEnabled()) {\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n           LOG.debug(msg);\n+          throw new DoNotRetryIOException(msg);\n         }\n-        throw new DoNotRetryIOException(msg);\n+      } else {\n+        LOG.debug(\"Cell size check is disabled because of maxCellSize is set to {}.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NDk2Mw=="}, "originalCommit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ5ODY1Mg==", "bodyText": "This log may be not very helpful, @wchevreuil  what do you think ?", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428498652", "createdAt": "2020-05-21T07:47:07Z", "author": {"login": "wenbang"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,17 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n-        if (LOG.isDebugEnabled()) {\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n           LOG.debug(msg);\n+          throw new DoNotRetryIOException(msg);\n         }\n-        throw new DoNotRetryIOException(msg);\n+      } else {\n+        LOG.debug(\"Cell size check is disabled because of maxCellSize is set to {}.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NDk2Mw=="}, "originalCommit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU0NDg1NA==", "bodyText": "I removed this log,  because there may be too many logs and not very helpful.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428544854", "createdAt": "2020-05-21T09:27:24Z", "author": {"login": "wenbang"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,17 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n-        if (LOG.isDebugEnabled()) {\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n           LOG.debug(msg);\n+          throw new DoNotRetryIOException(msg);\n         }\n-        throw new DoNotRetryIOException(msg);\n+      } else {\n+        LOG.debug(\"Cell size check is disabled because of maxCellSize is set to {}.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NDk2Mw=="}, "originalCommit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc3ODc5Ng==", "bodyText": "I removed this log, because there may be too many logs and not very helpful.\n\nWell, that's why I suggested it to be DEBUG. Logging it only once may not be sufficient in cases where log rolls too quickly.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428778796", "createdAt": "2020-05-21T16:47:56Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,17 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n-        if (LOG.isDebugEnabled()) {\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n           LOG.debug(msg);\n+          throw new DoNotRetryIOException(msg);\n         }\n-        throw new DoNotRetryIOException(msg);\n+      } else {\n+        LOG.debug(\"Cell size check is disabled because of maxCellSize is set to {}.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NDk2Mw=="}, "originalCommit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA3NjMxOQ==", "bodyText": "Well, that's why I suggested it to be DEBUG. Logging it only once may not be sufficient in cases where log rolls too quickly.\n\nWe could check it in the regionserver configuration and table desc. It \u2019s OK to remove this log?", "url": "https://github.com/apache/hbase/pull/1742#discussion_r429076319", "createdAt": "2020-05-22T07:01:11Z", "author": {"login": "wenbang"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,17 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n-        if (LOG.isDebugEnabled()) {\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n           LOG.debug(msg);\n+          throw new DoNotRetryIOException(msg);\n         }\n-        throw new DoNotRetryIOException(msg);\n+      } else {\n+        LOG.debug(\"Cell size check is disabled because of maxCellSize is set to {}.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NDk2Mw=="}, "originalCommit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE3NDcxOA==", "bodyText": "Many users and even experienced developers may not be aware of this changed behaviour. When things don't seem to work as expected, and one doesn't have an idea about why, decreasing the log level to gather as much info as possible is a common practice. I know it would be verbose, but that's why we should make it either a DEBUG or a TRACE level message. The message then would give a clear clue for those who didn't even know about the config property or table attribute.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r429174718", "createdAt": "2020-05-22T10:42:55Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,17 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n-        if (LOG.isDebugEnabled()) {\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n           LOG.debug(msg);\n+          throw new DoNotRetryIOException(msg);\n         }\n-        throw new DoNotRetryIOException(msg);\n+      } else {\n+        LOG.debug(\"Cell size check is disabled because of maxCellSize is set to {}.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NDk2Mw=="}, "originalCommit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODY1MzE4OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNzozMToxMFrOGYpFEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwOToyODo0MlrOGYsVgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ5MjA0OA==", "bodyText": "Ditto.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428492048", "createdAt": "2020-05-21T07:31:10Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java", "diffHunk": "@@ -977,12 +977,12 @@ private void checkCellSizeLimit(final HRegion r, final Mutation m) throws IOExce\n         int size = PrivateCellUtil.estimatedSerializedSizeOf(cells.current());\n         if (size > r.maxCellSize) {\n           String msg = \"Cell with size \" + size + \" exceeds limit of \" + r.maxCellSize + \" bytes\";\n-          if (LOG.isDebugEnabled()) {\n-            LOG.debug(msg);\n-          }\n+          LOG.debug(msg);\n           throw new DoNotRetryIOException(msg);\n         }\n       }\n+    } else {\n+      LOG.debug(\"Cell size check is disabled because of maxCellSize is set to {}.\", r.maxCellSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc8e993bf9cee199b77b92eda5242e337f161e86"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU0NTQxMA==", "bodyText": "Removed this log.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428545410", "createdAt": "2020-05-21T09:28:42Z", "author": {"login": "wenbang"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java", "diffHunk": "@@ -977,12 +977,12 @@ private void checkCellSizeLimit(final HRegion r, final Mutation m) throws IOExce\n         int size = PrivateCellUtil.estimatedSerializedSizeOf(cells.current());\n         if (size > r.maxCellSize) {\n           String msg = \"Cell with size \" + size + \" exceeds limit of \" + r.maxCellSize + \" bytes\";\n-          if (LOG.isDebugEnabled()) {\n-            LOG.debug(msg);\n-          }\n+          LOG.debug(msg);\n           throw new DoNotRetryIOException(msg);\n         }\n       }\n+    } else {\n+      LOG.debug(\"Cell size check is disabled because of maxCellSize is set to {}.\", r.maxCellSize);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ5MjA0OA=="}, "originalCommit": {"oid": "fc8e993bf9cee199b77b92eda5242e337f161e86"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3009, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}