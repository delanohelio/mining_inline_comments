{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzODgzNzA2", "number": 2104, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzoyMzo1MFrOEQZ-kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzoyNToxMlrOEQZ_rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjM4MjkxOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotManifest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzoyMzo1MFrOG0inzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzoyMzo1MFrOG0inzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0NjM4Mw==", "bodyText": "nit: parameterized logging", "url": "https://github.com/apache/hbase/pull/2104#discussion_r457746383", "createdAt": "2020-07-20T23:23:50Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/snapshot/SnapshotManifest.java", "diffHunk": "@@ -478,7 +494,7 @@ public void consolidate() throws IOException {\n       FSTableDescriptors.createTableDescriptorForTableDirectory(workingDirFs, workingDir, htd,\n           false);\n     } else {\n-      LOG.debug(\"Convert to Single Snapshot Manifest\");\n+      LOG.debug(\"Convert to Single Snapshot Manifest for \" + this.desc.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "840cf090dc944e55452c219f2794b00b24a0af61"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjM4NTE2OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzoyNTowMVrOG0ipLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzoyNTowMVrOG0ipLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0NjczMg==", "bodyText": "nit: This still requires the isDebugEnabled() guard because ClientSnapshotDescriptionUtils.toString(..) is not a trivial call.", "url": "https://github.com/apache/hbase/pull/2104#discussion_r457746732", "createdAt": "2020-07-20T23:25:01Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java", "diffHunk": "@@ -654,14 +654,16 @@ private void takeSnapshotInternal(SnapshotDescription snapshot) throws IOExcepti\n     TableName snapshotTable = TableName.valueOf(snapshot.getTable());\n     if (master.getTableStateManager().isTableState(snapshotTable,\n         TableState.State.ENABLED)) {\n-      LOG.debug(\"Table enabled, starting distributed snapshot.\");\n+      LOG.debug(\"Table enabled, starting distributed snapshots for {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "840cf090dc944e55452c219f2794b00b24a0af61"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NjM4NTcyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzoyNToxMlrOG0ipcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMzoyNToxMlrOG0ipcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzc0NjgwMw==", "bodyText": "same as above.", "url": "https://github.com/apache/hbase/pull/2104#discussion_r457746803", "createdAt": "2020-07-20T23:25:12Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/snapshot/SnapshotManager.java", "diffHunk": "@@ -654,14 +654,16 @@ private void takeSnapshotInternal(SnapshotDescription snapshot) throws IOExcepti\n     TableName snapshotTable = TableName.valueOf(snapshot.getTable());\n     if (master.getTableStateManager().isTableState(snapshotTable,\n         TableState.State.ENABLED)) {\n-      LOG.debug(\"Table enabled, starting distributed snapshot.\");\n+      LOG.debug(\"Table enabled, starting distributed snapshots for {}\",\n+        ClientSnapshotDescriptionUtils.toString(snapshot));\n       snapshotEnabledTable(snapshot);\n       LOG.debug(\"Started snapshot: \" + ClientSnapshotDescriptionUtils.toString(snapshot));\n     }\n     // For disabled table, snapshot is created by the master\n     else if (master.getTableStateManager().isTableState(snapshotTable,\n         TableState.State.DISABLED)) {\n-      LOG.debug(\"Table is disabled, running snapshot entirely on master.\");\n+        LOG.debug(\"Table is disabled, running snapshot entirely on master for {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "840cf090dc944e55452c219f2794b00b24a0af61"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2818, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}