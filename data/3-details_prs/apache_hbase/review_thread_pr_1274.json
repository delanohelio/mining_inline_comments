{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NzMxNzM4", "number": 1274, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozMDoxOVrODqgRpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozNjozNFrODqgbEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODk1NTkxOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozMDoxOVrOF6SxYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMjoxNDozNFrOF8g3XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTI4Mg==", "bodyText": "Single thread in here? Otherwise, perhaps this should be volatile?", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396669282", "createdAt": "2020-03-23T18:30:19Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {\n+    this.closeCheckSizeLimit = conf.getInt(SIZE_LIMIT_KEY, 10 * 1000 * 1000 /* 10 MB */);\n+    this.closeCheckTimeLimit = conf.getLong(TIME_LIMIT_KEY, 10 * 1000L /* 10 s */);\n+    this.bytesWrittenProgressForCloseCheck = 0;\n+    this.lastCloseCheckMillis = currentTime;\n+  }\n+\n+  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+    if (closeCheckSizeLimit <= 0) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck += bytesWritten;\n+    if (bytesWrittenProgressForCloseCheck <= closeCheckSizeLimit) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck = 0;\n+    return !store.areWritesEnabled();\n+  }\n+\n+  public boolean isClosedByTimeLimit(Store store, long now) {\n+    if (closeCheckTimeLimit <= 0) {\n+      return false;\n+    }\n+\n+    final long elapsedMillis = now - lastCloseCheckMillis;\n+    if (elapsedMillis <= closeCheckTimeLimit) {\n+      return false;\n+    }\n+\n+    lastCloseCheckMillis = now;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MjQxMw==", "bodyText": "Better if can do w/o volatile (I think compactor will only have one driving thread...)", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396672413", "createdAt": "2020-03-23T18:35:29Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {\n+    this.closeCheckSizeLimit = conf.getInt(SIZE_LIMIT_KEY, 10 * 1000 * 1000 /* 10 MB */);\n+    this.closeCheckTimeLimit = conf.getLong(TIME_LIMIT_KEY, 10 * 1000L /* 10 s */);\n+    this.bytesWrittenProgressForCloseCheck = 0;\n+    this.lastCloseCheckMillis = currentTime;\n+  }\n+\n+  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+    if (closeCheckSizeLimit <= 0) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck += bytesWritten;\n+    if (bytesWrittenProgressForCloseCheck <= closeCheckSizeLimit) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck = 0;\n+    return !store.areWritesEnabled();\n+  }\n+\n+  public boolean isClosedByTimeLimit(Store store, long now) {\n+    if (closeCheckTimeLimit <= 0) {\n+      return false;\n+    }\n+\n+    final long elapsedMillis = now - lastCloseCheckMillis;\n+    if (elapsedMillis <= closeCheckTimeLimit) {\n+      return false;\n+    }\n+\n+    lastCloseCheckMillis = now;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTI4Mg=="}, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk5NzM0MQ==", "bodyText": "CloseChecker is created and used in performCompaction.\nprotected boolean performCompaction() throws IOException {\n    CloseChecker closeChecker = new CloseChecker(conf, currentTime);\n    try {\n      do {\n          // ...\n      }\n}\nI think unuse volatile is okay.", "url": "https://github.com/apache/hbase/pull/1274#discussion_r398997341", "createdAt": "2020-03-27T02:14:34Z", "author": {"login": "mwkang"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {\n+    this.closeCheckSizeLimit = conf.getInt(SIZE_LIMIT_KEY, 10 * 1000 * 1000 /* 10 MB */);\n+    this.closeCheckTimeLimit = conf.getLong(TIME_LIMIT_KEY, 10 * 1000L /* 10 s */);\n+    this.bytesWrittenProgressForCloseCheck = 0;\n+    this.lastCloseCheckMillis = currentTime;\n+  }\n+\n+  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+    if (closeCheckSizeLimit <= 0) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck += bytesWritten;\n+    if (bytesWrittenProgressForCloseCheck <= closeCheckSizeLimit) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck = 0;\n+    return !store.areWritesEnabled();\n+  }\n+\n+  public boolean isClosedByTimeLimit(Store store, long now) {\n+    if (closeCheckTimeLimit <= 0) {\n+      return false;\n+    }\n+\n+    final long elapsedMillis = now - lastCloseCheckMillis;\n+    if (elapsedMillis <= closeCheckTimeLimit) {\n+      return false;\n+    }\n+\n+    lastCloseCheckMillis = now;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTI4Mg=="}, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODk1NzkwOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozMDo0N1rOF6Syfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwNTo0NzowMlrOF8j7Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTU2Nw==", "bodyText": "Does it have to be public? Can it be package local? It is only used in this package?", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396669567", "createdAt": "2020-03-23T18:30:47Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk5ODMzMw==", "bodyText": "I think it would be good to use package local.\nHowever, The package of FaultyMobStoreCompactor is not the same as CloseChecker.\nThe package of FaultyMobStoreCompactor is org.apache.hadoop.hbase.mob.", "url": "https://github.com/apache/hbase/pull/1274#discussion_r398998333", "createdAt": "2020-03-27T02:18:41Z", "author": {"login": "mwkang"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTU2Nw=="}, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTA0NzQ0Ng==", "bodyText": "dang.\nok. public for now.", "url": "https://github.com/apache/hbase/pull/1274#discussion_r399047446", "createdAt": "2020-03-27T05:47:02Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTU2Nw=="}, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODk1ODYzOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozMDo1NVrOF6Sy7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozMDo1NVrOF6Sy7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY2OTY3Nw==", "bodyText": "ditto", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396669677", "createdAt": "2020-03-23T18:30:55Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODk2Nzc1OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/mob/DefaultMobStoreCompactor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozMzoyNVrOF6S4nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QwMjoyMDoxOFrOF8g8yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MTEzMw==", "bodyText": "This is a bug fix?", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396671133", "createdAt": "2020-03-23T18:33:25Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/mob/DefaultMobStoreCompactor.java", "diffHunk": "@@ -317,7 +318,14 @@ protected boolean performCompaction(FileDetails fd, InternalScanner scanner, Cel\n \n       do {\n         hasMore = scanner.next(cells, scannerContext);\n-        now = EnvironmentEdgeManager.currentTime();\n+        currentTime = EnvironmentEdgeManager.currentTime();\n+        if (LOG.isDebugEnabled()) {\n+          now = currentTime;\n+        }\n+        if (closeChecker.isClosedByTimeLimit(store, currentTime)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MTcxNQ==", "bodyText": "s/isClosedByTimeLime/isTimeLimit/ ... and s/isClosedBySizeLiimt/isSizeLimit/", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396671715", "createdAt": "2020-03-23T18:34:22Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/mob/DefaultMobStoreCompactor.java", "diffHunk": "@@ -317,7 +318,14 @@ protected boolean performCompaction(FileDetails fd, InternalScanner scanner, Cel\n \n       do {\n         hasMore = scanner.next(cells, scannerContext);\n-        now = EnvironmentEdgeManager.currentTime();\n+        currentTime = EnvironmentEdgeManager.currentTime();\n+        if (LOG.isDebugEnabled()) {\n+          now = currentTime;\n+        }\n+        if (closeChecker.isClosedByTimeLimit(store, currentTime)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MTEzMw=="}, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODk5ODcyOA==", "bodyText": "This is a bug fix?\n\nNo, It is not a bug fix. I think it is improvement.\n\ns/isClosedByTimeLime/isTimeLimit/ ... and s/isClosedBySizeLiimt/isSizeLimit/\n\nOkay.", "url": "https://github.com/apache/hbase/pull/1274#discussion_r398998728", "createdAt": "2020-03-27T02:20:18Z", "author": {"login": "mwkang"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/mob/DefaultMobStoreCompactor.java", "diffHunk": "@@ -317,7 +318,14 @@ protected boolean performCompaction(FileDetails fd, InternalScanner scanner, Cel\n \n       do {\n         hasMore = scanner.next(cells, scannerContext);\n-        now = EnvironmentEdgeManager.currentTime();\n+        currentTime = EnvironmentEdgeManager.currentTime();\n+        if (LOG.isDebugEnabled()) {\n+          now = currentTime;\n+        }\n+        if (closeChecker.isClosedByTimeLimit(store, currentTime)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MTEzMw=="}, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODk3NzcyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozNTo1OVrOF6S-ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozNTo1OVrOF6S-ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MjcwNw==", "bodyText": "s/isClosedBySizeLimit/isSizeLimit/g", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396672707", "createdAt": "2020-03-23T18:35:59Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {\n+    this.closeCheckSizeLimit = conf.getInt(SIZE_LIMIT_KEY, 10 * 1000 * 1000 /* 10 MB */);\n+    this.closeCheckTimeLimit = conf.getLong(TIME_LIMIT_KEY, 10 * 1000L /* 10 s */);\n+    this.bytesWrittenProgressForCloseCheck = 0;\n+    this.lastCloseCheckMillis = currentTime;\n+  }\n+\n+  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODk4MDAyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozNjozNFrOF6TAQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxODozNjozNFrOF6TAQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY3MzA5MA==", "bodyText": "s/isClosedByTimeLimit/isTimeLimit/g\n... Class name provides the context ... i.e. that it is about close.", "url": "https://github.com/apache/hbase/pull/1274#discussion_r396673090", "createdAt": "2020-03-23T18:36:34Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/compactions/CloseChecker.java", "diffHunk": "@@ -0,0 +1,70 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.regionserver.compactions;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.regionserver.Store;\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * Check periodically to see if a system stop is requested\n+ */\n+@InterfaceAudience.Private\n+public class CloseChecker {\n+  public static final String SIZE_LIMIT_KEY = \"hbase.hstore.close.check.interval\";\n+  public static final String TIME_LIMIT_KEY = \"hbase.hstore.close.check.time.interval\";\n+\n+  private final int closeCheckSizeLimit;\n+  private final long closeCheckTimeLimit;\n+\n+  private long bytesWrittenProgressForCloseCheck;\n+  private long lastCloseCheckMillis;\n+\n+  public CloseChecker(Configuration conf, long currentTime) {\n+    this.closeCheckSizeLimit = conf.getInt(SIZE_LIMIT_KEY, 10 * 1000 * 1000 /* 10 MB */);\n+    this.closeCheckTimeLimit = conf.getLong(TIME_LIMIT_KEY, 10 * 1000L /* 10 s */);\n+    this.bytesWrittenProgressForCloseCheck = 0;\n+    this.lastCloseCheckMillis = currentTime;\n+  }\n+\n+  public boolean isClosedBySizeLimit(Store store, long bytesWritten) {\n+    if (closeCheckSizeLimit <= 0) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck += bytesWritten;\n+    if (bytesWrittenProgressForCloseCheck <= closeCheckSizeLimit) {\n+      return false;\n+    }\n+\n+    bytesWrittenProgressForCloseCheck = 0;\n+    return !store.areWritesEnabled();\n+  }\n+\n+  public boolean isClosedByTimeLimit(Store store, long now) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a54a018ae43d3c3a0f129b3db30beb34a8d3b9"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1996, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}