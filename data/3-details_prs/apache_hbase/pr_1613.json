{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExMTc0NjUy", "number": 1613, "title": "HBASE-24273 HBCK's \"Orphan Regions on FileSystem\" reports regions wit\u2026", "bodyText": "\u2026h referenced HFiles", "createdAt": "2020-04-30T06:18:19Z", "url": "https://github.com/apache/hbase/pull/1613", "merged": true, "mergeCommit": {"oid": "a240ba8214f23443b01db8ced6849a4f6efbd8ca"}, "closed": true, "closedAt": "2020-05-05T18:10:02Z", "author": {"login": "huaxiangsun"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccuoDygFqTQwMzYyMDQ3OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdKNcKgFqTQwNDQ0NTM1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzNjIwNDc4", "url": "https://github.com/apache/hbase/pull/1613#pullrequestreview-403620478", "createdAt": "2020-04-30T15:15:21Z", "commit": {"oid": "3e4d080cdf848a307c62010193865fb0cceb7431"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNToxNToyMVrOGOuBKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNToxNToyMVrOGOuBKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA4NzIwOQ==", "bodyText": "would it make sense to make it a bit more generic and have \"loadRegionsFromMeta()\" function (similar to loadRegionsFromInMemoryState/loadRegionsFromRSReport) as then you'd have another source to compare against - hbase:meta. Then loadRegionsFromFS() would check against that state to see if a region is merged or not.", "url": "https://github.com/apache/hbase/pull/1613#discussion_r418087209", "createdAt": "2020-04-30T15:15:21Z", "author": {"login": "timoha"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HbckChore.java", "diffHunk": "@@ -134,7 +135,7 @@ protected synchronized void chore() {\n       loadRegionsFromInMemoryState();\n       loadRegionsFromRSReport();\n       try {\n-        loadRegionsFromFS();\n+        loadRegionsFromFS(scanForMergedParentRegions());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e4d080cdf848a307c62010193865fb0cceb7431"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzNjI0Mjkz", "url": "https://github.com/apache/hbase/pull/1613#pullrequestreview-403624293", "createdAt": "2020-04-30T15:19:34Z", "commit": {"oid": "3e4d080cdf848a307c62010193865fb0cceb7431"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNToxOTozNFrOGOuMHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNToxOTozNFrOGOuMHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA5MDAxMw==", "bodyText": "if it's not in in-memory database but it is in merged regions, that seems like a problem as well and should be reported?", "url": "https://github.com/apache/hbase/pull/1613#discussion_r418090013", "createdAt": "2020-04-30T15:19:34Z", "author": {"login": "timoha"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HbckChore.java", "diffHunk": "@@ -271,12 +297,12 @@ private void loadRegionsFromFS() throws IOException {\n           continue;\n         }\n         HbckRegionInfo hri = regionInfoMap.get(encodedRegionName);\n-        if (hri == null) {\n+        // If it is not in in-memory database and not a merged region,\n+        // report it as an orphan region.\n+        if (hri == null && !mergedParentRegions.contains(encodedRegionName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e4d080cdf848a307c62010193865fb0cceb7431"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzNjI0NjMw", "url": "https://github.com/apache/hbase/pull/1613#pullrequestreview-403624630", "createdAt": "2020-04-30T15:19:55Z", "commit": {"oid": "3e4d080cdf848a307c62010193865fb0cceb7431"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e4d080cdf848a307c62010193865fb0cceb7431", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/3e4d080cdf848a307c62010193865fb0cceb7431", "committedDate": "2020-04-30T06:15:29Z", "message": "HBASE-24273 HBCK's \"Orphan Regions on FileSystem\" reports regions with referenced HFiles"}, "afterCommit": {"oid": "aceba6fcf009cf2d673c95cadf777e48f47f73ca", "author": {"user": {"login": "songxincun", "name": "xincunSong"}}, "url": "https://github.com/apache/hbase/commit/aceba6fcf009cf2d673c95cadf777e48f47f73ca", "committedDate": "2020-05-01T01:42:32Z", "message": "HBASE-24282 'scanDetail' log message is missing when responseTooSlow happens on the first scan rpc call (#1604)\n\nSigned-off-by: Guangxu Cheng <gxcheng@apache.org>\nSigned-off-by: stack <stack@apache.org>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aceba6fcf009cf2d673c95cadf777e48f47f73ca", "author": {"user": {"login": "songxincun", "name": "xincunSong"}}, "url": "https://github.com/apache/hbase/commit/aceba6fcf009cf2d673c95cadf777e48f47f73ca", "committedDate": "2020-05-01T01:42:32Z", "message": "HBASE-24282 'scanDetail' log message is missing when responseTooSlow happens on the first scan rpc call (#1604)\n\nSigned-off-by: Guangxu Cheng <gxcheng@apache.org>\nSigned-off-by: stack <stack@apache.org>"}, "afterCommit": {"oid": "2b53c068b9beeace2cdf2f3e7b8ff9fe556d5477", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/2b53c068b9beeace2cdf2f3e7b8ff9fe556d5477", "committedDate": "2020-05-01T01:40:26Z", "message": "HBASE-24273 HBCK's \"Orphan Regions on FileSystem\" reports regions with referenced HFiles"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MjQ1Nzc4", "url": "https://github.com/apache/hbase/pull/1613#pullrequestreview-404245778", "createdAt": "2020-05-01T16:08:40Z", "commit": {"oid": "2b53c068b9beeace2cdf2f3e7b8ff9fe556d5477"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjowODo0MFrOGPN9tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxNjoxNTozMlrOGPOJ1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYxMDYxMw==", "bodyText": "Does InMemoryState not have the needed merge info in it? If not, maybe it should.\nThe CatalogJanitor is what manages when merge references are let go so this scan of meta is probably necessary.\nTo the @timoha point, are there other places in hbckchore where we need currrent picture of hbase:meta?", "url": "https://github.com/apache/hbase/pull/1613#discussion_r418610613", "createdAt": "2020-05-01T16:08:40Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HbckChore.java", "diffHunk": "@@ -134,7 +135,7 @@ protected synchronized void chore() {\n       loadRegionsFromInMemoryState();\n       loadRegionsFromRSReport();\n       try {\n-        loadRegionsFromFS();\n+        loadRegionsFromFS(scanForMergedParentRegions());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA4NzIwOQ=="}, "originalCommit": {"oid": "3e4d080cdf848a307c62010193865fb0cceb7431"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYxMTcwNA==", "bodyText": "Yeah, may be no way around it given the scan for merged parents is so specialized.\nThis looks good.", "url": "https://github.com/apache/hbase/pull/1613#discussion_r418611704", "createdAt": "2020-05-01T16:10:57Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HbckChore.java", "diffHunk": "@@ -187,6 +188,31 @@ private void saveCheckResultToSnapshot() {\n     }\n   }\n \n+  /**\n+   * Scan hbase:meta to get set of merged parent regions, this is a very heavy scan.\n+   *\n+   * @return Return generated {@link HashSet}\n+   */\n+  private HashSet<String> scanForMergedParentRegions() throws IOException {\n+    HashSet<String> mergedParentRegions = new HashSet<>();\n+    // Null tablename means scan all of meta.\n+    MetaTableAccessor.scanMetaForTableRegions(this.master.getConnection(),\n+      r -> {\n+        List<RegionInfo> mergeParents = MetaTableAccessor.getMergeRegions(r.rawCells());\n+        if (mergeParents != null) {\n+          for (RegionInfo mergeRegion : mergeParents) {\n+            if (mergeRegion != null) {\n+              // This region is already being merged\n+              mergedParentRegions.add(mergeRegion.getEncodedName());\n+            }\n+          }\n+        }\n+        return true;\n+        },\n+      null);\n+    return mergedParentRegions;\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b53c068b9beeace2cdf2f3e7b8ff9fe556d5477"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYxMjg4NQ==", "bodyText": "Oh, merge parents are NOT in in-memory state because they are not active. We just have this background cleaner task that is doing janitorial work on hbase:meta cleaning up meta and filesystem....", "url": "https://github.com/apache/hbase/pull/1613#discussion_r418612885", "createdAt": "2020-05-01T16:13:40Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HbckChore.java", "diffHunk": "@@ -271,12 +297,12 @@ private void loadRegionsFromFS() throws IOException {\n           continue;\n         }\n         HbckRegionInfo hri = regionInfoMap.get(encodedRegionName);\n-        if (hri == null) {\n+        // If it is not in in-memory database and not a merged region,\n+        // report it as an orphan region.\n+        if (hri == null && !mergedParentRegions.contains(encodedRegionName)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODA5MDAxMw=="}, "originalCommit": {"oid": "3e4d080cdf848a307c62010193865fb0cceb7431"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYxMzUxOA==", "bodyText": "ok. good. lets keep an eye on this one because sometimes fun, unexpected conditions when change order of operations.", "url": "https://github.com/apache/hbase/pull/1613#discussion_r418613518", "createdAt": "2020-05-01T16:15:02Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -1859,11 +1859,17 @@ public void markRegionAsMerged(final RegionInfo child, final ServerName serverNa\n       throws IOException {\n     final RegionStateNode node = regionStates.getOrCreateRegionStateNode(child);\n     node.setState(State.MERGED);\n+    regionStateStore.mergeRegions(child, mergeParents, serverName);\n+\n+    // The order of adding merge qualifers and deleting from regionStates is important.\n+    // hbck chore depends on these merge qualifers and regionStates to check if a region on FS\n+    // is an orphan. If deleting from regionStates first, then there is a small gap that\n+    // a region is not in regionStates and there is no merge qualifer for this region, it will be\n+    // reported as an orphan.\n     for (RegionInfo ri: mergeParents) {\n       regionStates.deleteRegion(ri);\n \n     }\n-    regionStateStore.mergeRegions(child, mergeParents, serverName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b53c068b9beeace2cdf2f3e7b8ff9fe556d5477"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODYxMzcxNw==", "bodyText": "Empty javadoc like this provokes complaint by checkstyle. Just remove it.", "url": "https://github.com/apache/hbase/pull/1613#discussion_r418613717", "createdAt": "2020-05-01T16:15:32Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/HConnectionTestingUtility.java", "diffHunk": "@@ -39,12 +39,17 @@\n    * probably not what you want.\n    * @param conf configuration\n    * @return ConnectionImplementation object for <code>conf</code>\n-   * @throws ZooKeeperConnectionException\n+   * @throws IOException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b53c068b9beeace2cdf2f3e7b8ff9fe556d5477"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d895fa0c0070ac927e315e8f81d428d49d922bfc", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/d895fa0c0070ac927e315e8f81d428d49d922bfc", "committedDate": "2020-05-01T22:30:53Z", "message": "HBASE-24273 HBCK's \"Orphan Regions on FileSystem\" reports regions with referenced HFiles"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b53c068b9beeace2cdf2f3e7b8ff9fe556d5477", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/2b53c068b9beeace2cdf2f3e7b8ff9fe556d5477", "committedDate": "2020-05-01T01:40:26Z", "message": "HBASE-24273 HBCK's \"Orphan Regions on FileSystem\" reports regions with referenced HFiles"}, "afterCommit": {"oid": "d895fa0c0070ac927e315e8f81d428d49d922bfc", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/d895fa0c0070ac927e315e8f81d428d49d922bfc", "committedDate": "2020-05-01T22:30:53Z", "message": "HBASE-24273 HBCK's \"Orphan Regions on FileSystem\" reports regions with referenced HFiles"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDQ1MzUw", "url": "https://github.com/apache/hbase/pull/1613#pullrequestreview-404445350", "createdAt": "2020-05-01T23:23:37Z", "commit": {"oid": "d895fa0c0070ac927e315e8f81d428d49d922bfc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2271, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}