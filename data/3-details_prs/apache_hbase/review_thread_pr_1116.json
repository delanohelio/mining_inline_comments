{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMDU0OTY0", "number": 1116, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo0NTo0N1rODcvE-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDo1NDo0M1rODeJfTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDU4MDQwOnYy", "diffSide": "RIGHT", "path": "hbase-http/src/test/java/org/apache/hadoop/hbase/http/TestSSLHttpServer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo0NTo0N1rOFk73hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo0NTo0N1rOFk73hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3MzkyNA==", "bodyText": "Statics. normally capitalized as in HTU rather than htu.", "url": "https://github.com/apache/hbase/pull/1116#discussion_r374273924", "createdAt": "2020-02-03T18:45:47Z", "author": {"login": "saintstack"}, "path": "hbase-http/src/test/java/org/apache/hadoop/hbase/http/TestSSLHttpServer.java", "diffHunk": "@@ -51,62 +52,65 @@\n \n   @ClassRule\n   public static final HBaseClassTestRule CLASS_RULE =\n-      HBaseClassTestRule.forClass(TestSSLHttpServer.class);\n+    HBaseClassTestRule.forClass(TestSSLHttpServer.class);\n \n   private static final String BASEDIR = System.getProperty(\"test.build.dir\",\n-      \"target/test-dir\") + \"/\" + TestSSLHttpServer.class.getSimpleName();\n+    \"target/test-dir\") + \"/\" + TestSSLHttpServer.class.getSimpleName();\n \n   private static final Logger LOG = LoggerFactory.getLogger(TestSSLHttpServer.class);\n   private static Configuration conf;\n   private static HttpServer server;\n   private static URL baseUrl;\n-  private static String keystoresDir;\n+  private static File keystoresDir;\n   private static String sslConfDir;\n   private static SSLFactory clientSslFactory;\n+  private static HBaseCommonTestingUtility htu;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "271ab347e09fb8531a250e3a40abd437f6749f07"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDU4NDcxOnYy", "diffSide": "RIGHT", "path": "hbase-http/src/test/java/org/apache/hadoop/hbase/http/TestSSLHttpServer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo0NzowNFrOFk75-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQwMjoxODoyN1rOFlGOjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NDU1Mw==", "bodyText": "Above its sslconf... you want conf here?", "url": "https://github.com/apache/hbase/pull/1116#discussion_r374274553", "createdAt": "2020-02-03T18:47:04Z", "author": {"login": "saintstack"}, "path": "hbase-http/src/test/java/org/apache/hadoop/hbase/http/TestSSLHttpServer.java", "diffHunk": "@@ -51,62 +52,65 @@\n \n   @ClassRule\n   public static final HBaseClassTestRule CLASS_RULE =\n-      HBaseClassTestRule.forClass(TestSSLHttpServer.class);\n+    HBaseClassTestRule.forClass(TestSSLHttpServer.class);\n \n   private static final String BASEDIR = System.getProperty(\"test.build.dir\",\n-      \"target/test-dir\") + \"/\" + TestSSLHttpServer.class.getSimpleName();\n+    \"target/test-dir\") + \"/\" + TestSSLHttpServer.class.getSimpleName();\n \n   private static final Logger LOG = LoggerFactory.getLogger(TestSSLHttpServer.class);\n   private static Configuration conf;\n   private static HttpServer server;\n   private static URL baseUrl;\n-  private static String keystoresDir;\n+  private static File keystoresDir;\n   private static String sslConfDir;\n   private static SSLFactory clientSslFactory;\n+  private static HBaseCommonTestingUtility htu;\n \n   @BeforeClass\n   public static void setup() throws Exception {\n     conf = new Configuration();\n     conf.setInt(HttpServer.HTTP_MAX_THREADS, TestHttpServer.MAX_THREADS);\n \n-    File base = new File(BASEDIR);\n-    FileUtil.fullyDelete(base);\n-    base.mkdirs();\n-    keystoresDir = new File(BASEDIR).getAbsolutePath();\n+    htu = new HBaseCommonTestingUtility(conf);\n+\n+    keystoresDir = new File(htu.getDataTestDir(\"keystore\").toString());\n+    keystoresDir.mkdirs();\n+\n     sslConfDir = KeyStoreTestUtil.getClasspathDir(TestSSLHttpServer.class);\n \n-    KeyStoreTestUtil.setupSSLConfig(keystoresDir, sslConfDir, conf, false);\n+    KeyStoreTestUtil.setupSSLConfig(keystoresDir.getAbsolutePath(), sslConfDir, conf, false);\n     Configuration sslConf = new Configuration(false);\n-    sslConf.addResource(\"ssl-server.xml\");\n-    sslConf.addResource(\"ssl-client.xml\");\n-\n+    sslConf.addResource(conf.get(SSLFactory.SSL_CLIENT_CONF_KEY));\n+    conf.addResource(conf.get(SSLFactory.SSL_SERVER_CONF_KEY));\n+    sslConf.set(SSLFactory.SSL_CLIENT_CONF_KEY, conf.get(SSLFactory.SSL_CLIENT_CONF_KEY));\n+    \n     clientSslFactory = new SSLFactory(SSLFactory.Mode.CLIENT, sslConf);\n     clientSslFactory.init();\n \n     server = new HttpServer.Builder()\n-        .setName(\"test\")\n-        .addEndpoint(new URI(\"https://localhost\"))\n-        .setConf(conf)\n-        .keyPassword(HBaseConfiguration.getPassword(sslConf, \"ssl.server.keystore.keypassword\",\n-            null))\n-        .keyStore(sslConf.get(\"ssl.server.keystore.location\"),\n-            HBaseConfiguration.getPassword(sslConf, \"ssl.server.keystore.password\", null),\n-            sslConf.get(\"ssl.server.keystore.type\", \"jks\"))\n-        .trustStore(sslConf.get(\"ssl.server.truststore.location\"),\n-            HBaseConfiguration.getPassword(sslConf, \"ssl.server.truststore.password\", null),\n-            sslConf.get(\"ssl.server.truststore.type\", \"jks\")).build();\n+      .setName(\"test\")\n+      .addEndpoint(new URI(\"https://localhost\"))\n+      .setConf(conf)\n+      .keyPassword(HBaseConfiguration.getPassword(conf, \"ssl.server.keystore.keypassword\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "271ab347e09fb8531a250e3a40abd437f6749f07"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQ0MzY2MA==", "bodyText": "It's more client / server now, tried a rename", "url": "https://github.com/apache/hbase/pull/1116#discussion_r374443660", "createdAt": "2020-02-04T02:18:27Z", "author": {"login": "markrmiller"}, "path": "hbase-http/src/test/java/org/apache/hadoop/hbase/http/TestSSLHttpServer.java", "diffHunk": "@@ -51,62 +52,65 @@\n \n   @ClassRule\n   public static final HBaseClassTestRule CLASS_RULE =\n-      HBaseClassTestRule.forClass(TestSSLHttpServer.class);\n+    HBaseClassTestRule.forClass(TestSSLHttpServer.class);\n \n   private static final String BASEDIR = System.getProperty(\"test.build.dir\",\n-      \"target/test-dir\") + \"/\" + TestSSLHttpServer.class.getSimpleName();\n+    \"target/test-dir\") + \"/\" + TestSSLHttpServer.class.getSimpleName();\n \n   private static final Logger LOG = LoggerFactory.getLogger(TestSSLHttpServer.class);\n   private static Configuration conf;\n   private static HttpServer server;\n   private static URL baseUrl;\n-  private static String keystoresDir;\n+  private static File keystoresDir;\n   private static String sslConfDir;\n   private static SSLFactory clientSslFactory;\n+  private static HBaseCommonTestingUtility htu;\n \n   @BeforeClass\n   public static void setup() throws Exception {\n     conf = new Configuration();\n     conf.setInt(HttpServer.HTTP_MAX_THREADS, TestHttpServer.MAX_THREADS);\n \n-    File base = new File(BASEDIR);\n-    FileUtil.fullyDelete(base);\n-    base.mkdirs();\n-    keystoresDir = new File(BASEDIR).getAbsolutePath();\n+    htu = new HBaseCommonTestingUtility(conf);\n+\n+    keystoresDir = new File(htu.getDataTestDir(\"keystore\").toString());\n+    keystoresDir.mkdirs();\n+\n     sslConfDir = KeyStoreTestUtil.getClasspathDir(TestSSLHttpServer.class);\n \n-    KeyStoreTestUtil.setupSSLConfig(keystoresDir, sslConfDir, conf, false);\n+    KeyStoreTestUtil.setupSSLConfig(keystoresDir.getAbsolutePath(), sslConfDir, conf, false);\n     Configuration sslConf = new Configuration(false);\n-    sslConf.addResource(\"ssl-server.xml\");\n-    sslConf.addResource(\"ssl-client.xml\");\n-\n+    sslConf.addResource(conf.get(SSLFactory.SSL_CLIENT_CONF_KEY));\n+    conf.addResource(conf.get(SSLFactory.SSL_SERVER_CONF_KEY));\n+    sslConf.set(SSLFactory.SSL_CLIENT_CONF_KEY, conf.get(SSLFactory.SSL_CLIENT_CONF_KEY));\n+    \n     clientSslFactory = new SSLFactory(SSLFactory.Mode.CLIENT, sslConf);\n     clientSslFactory.init();\n \n     server = new HttpServer.Builder()\n-        .setName(\"test\")\n-        .addEndpoint(new URI(\"https://localhost\"))\n-        .setConf(conf)\n-        .keyPassword(HBaseConfiguration.getPassword(sslConf, \"ssl.server.keystore.keypassword\",\n-            null))\n-        .keyStore(sslConf.get(\"ssl.server.keystore.location\"),\n-            HBaseConfiguration.getPassword(sslConf, \"ssl.server.keystore.password\", null),\n-            sslConf.get(\"ssl.server.keystore.type\", \"jks\"))\n-        .trustStore(sslConf.get(\"ssl.server.truststore.location\"),\n-            HBaseConfiguration.getPassword(sslConf, \"ssl.server.truststore.password\", null),\n-            sslConf.get(\"ssl.server.truststore.type\", \"jks\")).build();\n+      .setName(\"test\")\n+      .addEndpoint(new URI(\"https://localhost\"))\n+      .setConf(conf)\n+      .keyPassword(HBaseConfiguration.getPassword(conf, \"ssl.server.keystore.keypassword\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NDU1Mw=="}, "originalCommit": {"oid": "271ab347e09fb8531a250e3a40abd437f6749f07"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDU4NzA1OnYy", "diffSide": "RIGHT", "path": "hbase-http/src/test/java/org/apache/hadoop/hbase/http/TestSSLHttpServer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo0Nzo1MVrOFk77eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo0Nzo1MVrOFk77eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NDkzNg==", "bodyText": "Ditto. We use conf instead of sslconf here... That intentional?", "url": "https://github.com/apache/hbase/pull/1116#discussion_r374274936", "createdAt": "2020-02-03T18:47:51Z", "author": {"login": "saintstack"}, "path": "hbase-http/src/test/java/org/apache/hadoop/hbase/http/TestSSLHttpServer.java", "diffHunk": "@@ -51,62 +52,65 @@\n \n   @ClassRule\n   public static final HBaseClassTestRule CLASS_RULE =\n-      HBaseClassTestRule.forClass(TestSSLHttpServer.class);\n+    HBaseClassTestRule.forClass(TestSSLHttpServer.class);\n \n   private static final String BASEDIR = System.getProperty(\"test.build.dir\",\n-      \"target/test-dir\") + \"/\" + TestSSLHttpServer.class.getSimpleName();\n+    \"target/test-dir\") + \"/\" + TestSSLHttpServer.class.getSimpleName();\n \n   private static final Logger LOG = LoggerFactory.getLogger(TestSSLHttpServer.class);\n   private static Configuration conf;\n   private static HttpServer server;\n   private static URL baseUrl;\n-  private static String keystoresDir;\n+  private static File keystoresDir;\n   private static String sslConfDir;\n   private static SSLFactory clientSslFactory;\n+  private static HBaseCommonTestingUtility htu;\n \n   @BeforeClass\n   public static void setup() throws Exception {\n     conf = new Configuration();\n     conf.setInt(HttpServer.HTTP_MAX_THREADS, TestHttpServer.MAX_THREADS);\n \n-    File base = new File(BASEDIR);\n-    FileUtil.fullyDelete(base);\n-    base.mkdirs();\n-    keystoresDir = new File(BASEDIR).getAbsolutePath();\n+    htu = new HBaseCommonTestingUtility(conf);\n+\n+    keystoresDir = new File(htu.getDataTestDir(\"keystore\").toString());\n+    keystoresDir.mkdirs();\n+\n     sslConfDir = KeyStoreTestUtil.getClasspathDir(TestSSLHttpServer.class);\n \n-    KeyStoreTestUtil.setupSSLConfig(keystoresDir, sslConfDir, conf, false);\n+    KeyStoreTestUtil.setupSSLConfig(keystoresDir.getAbsolutePath(), sslConfDir, conf, false);\n     Configuration sslConf = new Configuration(false);\n-    sslConf.addResource(\"ssl-server.xml\");\n-    sslConf.addResource(\"ssl-client.xml\");\n-\n+    sslConf.addResource(conf.get(SSLFactory.SSL_CLIENT_CONF_KEY));\n+    conf.addResource(conf.get(SSLFactory.SSL_SERVER_CONF_KEY));\n+    sslConf.set(SSLFactory.SSL_CLIENT_CONF_KEY, conf.get(SSLFactory.SSL_CLIENT_CONF_KEY));\n+    \n     clientSslFactory = new SSLFactory(SSLFactory.Mode.CLIENT, sslConf);\n     clientSslFactory.init();\n \n     server = new HttpServer.Builder()\n-        .setName(\"test\")\n-        .addEndpoint(new URI(\"https://localhost\"))\n-        .setConf(conf)\n-        .keyPassword(HBaseConfiguration.getPassword(sslConf, \"ssl.server.keystore.keypassword\",\n-            null))\n-        .keyStore(sslConf.get(\"ssl.server.keystore.location\"),\n-            HBaseConfiguration.getPassword(sslConf, \"ssl.server.keystore.password\", null),\n-            sslConf.get(\"ssl.server.keystore.type\", \"jks\"))\n-        .trustStore(sslConf.get(\"ssl.server.truststore.location\"),\n-            HBaseConfiguration.getPassword(sslConf, \"ssl.server.truststore.password\", null),\n-            sslConf.get(\"ssl.server.truststore.type\", \"jks\")).build();\n+      .setName(\"test\")\n+      .addEndpoint(new URI(\"https://localhost\"))\n+      .setConf(conf)\n+      .keyPassword(HBaseConfiguration.getPassword(conf, \"ssl.server.keystore.keypassword\",\n+        null))\n+      .keyStore(conf.get(\"ssl.server.keystore.location\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "271ab347e09fb8531a250e3a40abd437f6749f07"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDU5MjIwOnYy", "diffSide": "RIGHT", "path": "hbase-http/src/test/java/org/apache/hadoop/hbase/http/log/TestLogLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo0OTozM1rOFk7-kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo0OTozM1rOFk7-kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NTczMQ==", "bodyText": "Capitalize", "url": "https://github.com/apache/hbase/pull/1116#discussion_r374275731", "createdAt": "2020-02-03T18:49:33Z", "author": {"login": "saintstack"}, "path": "hbase-http/src/test/java/org/apache/hadoop/hbase/http/log/TestLogLevel.java", "diffHunk": "@@ -84,31 +83,29 @@\n   private final static String KEYTAB  = \"loglevel.keytab\";\n \n   private static MiniKdc kdc;\n-  private static HBaseCommonTestingUtility htu = new HBaseCommonTestingUtility();\n \n   private static final String LOCALHOST = \"localhost\";\n   private static final String clientPrincipal = \"client/\" + LOCALHOST;\n   private static String HTTP_PRINCIPAL = \"HTTP/\" + LOCALHOST;\n-\n-  private static final File KEYTAB_FILE = new File(\n-      htu.getDataTestDir(\"keytab\").toUri().getPath());\n+  private static HBaseCommonTestingUtility htu;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "271ab347e09fb8531a250e3a40abd437f6749f07"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDU5Njg3OnYy", "diffSide": "RIGHT", "path": "hbase-http/src/test/java/org/apache/hadoop/hbase/http/log/TestLogLevel.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo1MDo1N1rOFk8BTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODo1MDo1N1rOFk8BTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI3NjQyOQ==", "bodyText": "And maybe you want to use the HTU's conf. Do HTU.getConfiguration instead of creating a 'new Configuration()' in line above ... and FYI, for configs that will include hbase config, you want HBaseConfiguration.create.... instead of new Configuration.", "url": "https://github.com/apache/hbase/pull/1116#discussion_r374276429", "createdAt": "2020-02-03T18:50:57Z", "author": {"login": "saintstack"}, "path": "hbase-http/src/test/java/org/apache/hadoop/hbase/http/log/TestLogLevel.java", "diffHunk": "@@ -84,31 +83,29 @@\n   private final static String KEYTAB  = \"loglevel.keytab\";\n \n   private static MiniKdc kdc;\n-  private static HBaseCommonTestingUtility htu = new HBaseCommonTestingUtility();\n \n   private static final String LOCALHOST = \"localhost\";\n   private static final String clientPrincipal = \"client/\" + LOCALHOST;\n   private static String HTTP_PRINCIPAL = \"HTTP/\" + LOCALHOST;\n-\n-  private static final File KEYTAB_FILE = new File(\n-      htu.getDataTestDir(\"keytab\").toUri().getPath());\n+  private static HBaseCommonTestingUtility htu;\n+  private static File keyTabFile;\n \n   @BeforeClass\n   public static void setUp() throws Exception {\n-    BASEDIR = new File(htu.getDataTestDir().toUri().getPath());\n-\n-    FileUtil.fullyDelete(BASEDIR);\n-    if (!BASEDIR.mkdirs()) {\n-      throw new Exception(\"unable to create the base directory for testing\");\n-    }\n     serverConf = new Configuration();\n+    htu = new HBaseCommonTestingUtility(serverConf);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "271ab347e09fb8531a250e3a40abd437f6749f07"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTM5MzQwOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDo1NDo0M1rOFnKAjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwMDo1Nzo1MVrOFnOMWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwMjc2Nw==", "bodyText": "Hey @markrmiller  I don't think this variable is defined anywhere. Missing some other change someplace?", "url": "https://github.com/apache/hbase/pull/1116#discussion_r376602767", "createdAt": "2020-02-07T20:54:43Z", "author": {"login": "ndimiduk"}, "path": "pom.xml", "diffHunk": "@@ -729,6 +729,8 @@\n             <skip>${surefire.skipFirstPart}</skip>\n             <forkCount>${surefire.firstPartForkCount}</forkCount>\n             <reuseForks>false</reuseForks>\n+            <reportsDirectory>${surefire.reportsDirectory}</reportsDirectory>\n+            <tempDir>${surefire.tempDir}</tempDir>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b67ca24bf4baf1d84abea59b88740a76a8a77c6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY0NTUxMQ==", "bodyText": "It was initially just meant to be harmless - it allows you to override via system property but does not yet try to manage tmp dirs internally. I'll file a small follow up issue to look at that. Just wanted fast, safe way to override without patching.", "url": "https://github.com/apache/hbase/pull/1116#discussion_r376645511", "createdAt": "2020-02-07T22:55:25Z", "author": {"login": "markrmiller"}, "path": "pom.xml", "diffHunk": "@@ -729,6 +729,8 @@\n             <skip>${surefire.skipFirstPart}</skip>\n             <forkCount>${surefire.firstPartForkCount}</forkCount>\n             <reuseForks>false</reuseForks>\n+            <reportsDirectory>${surefire.reportsDirectory}</reportsDirectory>\n+            <tempDir>${surefire.tempDir}</tempDir>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwMjc2Nw=="}, "originalCommit": {"oid": "7b67ca24bf4baf1d84abea59b88740a76a8a77c6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY3MTMyMQ==", "bodyText": "According to the docs, it can already be overridden via the tempDir property. that not working for you?\nhttp://maven.apache.org/surefire/maven-surefire-plugin/test-mojo.html#tempDir", "url": "https://github.com/apache/hbase/pull/1116#discussion_r376671321", "createdAt": "2020-02-08T00:57:51Z", "author": {"login": "ndimiduk"}, "path": "pom.xml", "diffHunk": "@@ -729,6 +729,8 @@\n             <skip>${surefire.skipFirstPart}</skip>\n             <forkCount>${surefire.firstPartForkCount}</forkCount>\n             <reuseForks>false</reuseForks>\n+            <reportsDirectory>${surefire.reportsDirectory}</reportsDirectory>\n+            <tempDir>${surefire.tempDir}</tempDir>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwMjc2Nw=="}, "originalCommit": {"oid": "7b67ca24bf4baf1d84abea59b88740a76a8a77c6"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2197, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}