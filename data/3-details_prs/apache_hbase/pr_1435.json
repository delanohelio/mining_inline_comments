{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4NjI3OTM1", "number": 1435, "title": "HBASE-24112 [RSGroup] Support renaming rsgroup", "bodyText": "JIRA link: https://issues.apache.org/jira/browse/HBASE-24112", "createdAt": "2020-04-04T15:49:30Z", "url": "https://github.com/apache/hbase/pull/1435", "merged": true, "mergeCommit": {"oid": "22675d8070bdc833d71365e44757e3acc2cb9f88"}, "closed": true, "closedAt": "2020-04-13T06:04:33Z", "author": {"login": "Reidddddd"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUr2eNgFqTM4NzgyOTQwOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXVfZ9gFqTM5MjQ0MTAzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3ODI5NDA5", "url": "https://github.com/apache/hbase/pull/1435#pullrequestreview-387829409", "createdAt": "2020-04-05T15:15:01Z", "commit": {"oid": "9dd5c861442065e2440b6dc3fff918b8581c83b5"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNToxNTowMVrOGBA1dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQxNToyNjoxOVrOGBA7SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTQ0Ng==", "bodyText": "Would you like to provide any validation for both strings? e.g. non-empty", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403715446", "createdAt": "2020-04-05T15:15:01Z", "author": {"login": "virajjasani"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncHBaseAdmin.java", "diffHunk": "@@ -4146,4 +4148,21 @@ private void getProcedureResult(long procId, CompletableFuture<Void> future, int\n           resp -> resp.hasRSGroupInfo() ? ProtobufUtil.toGroupInfo(resp.getRSGroupInfo()) : null)))\n       .call();\n   }\n+\n+  @Override\n+  public CompletableFuture<Void> renameRSGroup(String oldName, String newName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dd5c861442065e2440b6dc3fff918b8581c83b5"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNTk2Mw==", "bodyText": "nit: simplify to newGroupMap.put(newName, newRSG); ?", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403715963", "createdAt": "2020-04-05T15:18:58Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "diffHunk": "@@ -1221,4 +1221,33 @@ public String determineRSGroupInfoForTable(TableName tableName) {\n     return script.getRSGroup(tableName.getNamespaceAsString(), tableName.getQualifierAsString());\n   }\n \n+  @Override\n+  public synchronized void renameRSGroup(String oldName, String newName) throws IOException {\n+    if (oldName.equals(RSGroupInfo.DEFAULT_GROUP)) {\n+      throw new ConstraintException(RSGroupInfo.DEFAULT_GROUP + \" can't be rename\");\n+    }\n+    checkGroupName(newName);\n+\n+    RSGroupInfo oldRSG = getRSGroupInfo(oldName);\n+    Map<String, RSGroupInfo> rsGroupMap = holder.groupName2Group;\n+    Map<String, RSGroupInfo> newGroupMap = Maps.newHashMap(rsGroupMap);\n+    newGroupMap.remove(oldRSG.getName());\n+    RSGroupInfo newRSG = new RSGroupInfo(newName, oldRSG.getServers());\n+    newGroupMap.put(newRSG.getName(), newRSG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dd5c861442065e2440b6dc3fff918b8581c83b5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNjYzMQ==", "bodyText": "Instead of sleep(), we can use HBASE_TESTING_UTILITY.waitFor:\ne.g.\nHBASE_TESTING_UTILITY.waitFor(1000,\n      () -> {\n          oldgroup = ADMIN.getRSGroup(oldgroup.getName());\n          return oldgroup.getServers().size() == 2 && ADMIN.getRSGroup(tb).getName().equals(oldgroup.getName());\n      });\n\nThis way we will ensure, we wait for specific period of time until our predicate returns true.", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403716631", "createdAt": "2020-04-05T15:23:44Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsAdmin1.java", "diffHunk": "@@ -468,4 +468,31 @@ public boolean evaluate() throws Exception {\n     // Cleanup\n     TEST_UTIL.deleteTable(tn1);\n   }\n+\n+  @Test\n+  public void testRenameRSGroup() throws Exception {\n+    // Add rsgroup, and assign 2 servers and a table to it.\n+    RSGroupInfo oldgroup = addGroup(\"oldgroup\", 2);\n+    TableName tb = TableName.valueOf(\"testRename\");\n+    TEST_UTIL.createTable(tb, \"tr\");\n+    ADMIN.setRSGroup(Sets.newHashSet(tb), oldgroup.getName());\n+    Thread.sleep(500);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dd5c861442065e2440b6dc3fff918b8581c83b5"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNjkzNg==", "bodyText": "Is this redundant assert? assertEquals(servers.size(), newgroup.getServers().size()); is already taking care of it?", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403716936", "createdAt": "2020-04-05T15:26:19Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsAdmin1.java", "diffHunk": "@@ -468,4 +468,31 @@ public boolean evaluate() throws Exception {\n     // Cleanup\n     TEST_UTIL.deleteTable(tn1);\n   }\n+\n+  @Test\n+  public void testRenameRSGroup() throws Exception {\n+    // Add rsgroup, and assign 2 servers and a table to it.\n+    RSGroupInfo oldgroup = addGroup(\"oldgroup\", 2);\n+    TableName tb = TableName.valueOf(\"testRename\");\n+    TEST_UTIL.createTable(tb, \"tr\");\n+    ADMIN.setRSGroup(Sets.newHashSet(tb), oldgroup.getName());\n+    Thread.sleep(500);\n+    oldgroup = ADMIN.getRSGroup(oldgroup.getName());\n+    assertEquals(2, oldgroup.getServers().size());\n+    assertEquals(oldgroup.getName(), ADMIN.getRSGroup(tb).getName());\n+\n+    // Rename rsgroup\n+    ADMIN.renameRSGroup(oldgroup.getName(), \"newgroup\");\n+    Set<Address> servers = oldgroup.getServers();\n+    RSGroupInfo newgroup = ADMIN.getRSGroup(\"newgroup\");\n+    assertEquals(servers.size(), newgroup.getServers().size());\n+    int match = 0;\n+    for (Address addr : newgroup.getServers()) {\n+      if (servers.contains(addr)) {\n+        match++;\n+      }\n+    }\n+    assertEquals(servers.size(), match);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dd5c861442065e2440b6dc3fff918b8581c83b5"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c473f0fe1710165950409b90f7de2ef41bb5768", "author": {"user": {"login": "Reidddddd", "name": "Reid Chan"}}, "url": "https://github.com/apache/hbase/commit/9c473f0fe1710165950409b90f7de2ef41bb5768", "committedDate": "2020-04-06T03:00:24Z", "message": "HBASE-24112 [RSGroup] Support renaming rsgroup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "610591418d65edf5fa7bc9d4c00cb82a0dfca606", "author": {"user": {"login": "Reidddddd", "name": "Reid Chan"}}, "url": "https://github.com/apache/hbase/commit/610591418d65edf5fa7bc9d4c00cb82a0dfca606", "committedDate": "2020-04-06T03:22:26Z", "message": "Address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9dd5c861442065e2440b6dc3fff918b8581c83b5", "author": {"user": {"login": "Reidddddd", "name": "Reid Chan"}}, "url": "https://github.com/apache/hbase/commit/9dd5c861442065e2440b6dc3fff918b8581c83b5", "committedDate": "2020-04-04T15:48:22Z", "message": "HBASE-24112 [RSGroup] Support renaming rsgroup"}, "afterCommit": {"oid": "610591418d65edf5fa7bc9d4c00cb82a0dfca606", "author": {"user": {"login": "Reidddddd", "name": "Reid Chan"}}, "url": "https://github.com/apache/hbase/commit/610591418d65edf5fa7bc9d4c00cb82a0dfca606", "committedDate": "2020-04-06T03:22:26Z", "message": "Address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3OTE4Njgx", "url": "https://github.com/apache/hbase/pull/1435#pullrequestreview-387918681", "createdAt": "2020-04-06T03:48:55Z", "commit": {"oid": "610591418d65edf5fa7bc9d4c00cb82a0dfca606"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMzo0ODo1NVrOGBG9og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMzo1NzoxNFrOGBHEHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxNTg0Mg==", "bodyText": "Because we do not store the table informations in RSGroupInfo anymore, if you use the new API to get RSGroupInfo, the tables will always be empty.", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403815842", "createdAt": "2020-04-06T03:48:55Z", "author": {"login": "Apache9"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfo.java", "diffHunk": "@@ -38,6 +38,9 @@\n   // Keep servers in a sorted set so has an expected ordering when displayed.\n   private final SortedSet<Address> servers;\n   // Keep tables sorted too.\n+\n+  // TODO: Don't understand why all these should be deprecated. we have table -> rsgroup mapping.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "610591418d65edf5fa7bc9d4c00cb82a0dfca606"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgxNzUwMw==", "bodyText": "When you call setRSGroup here, all the regions will be reopened... No difference to the old implementation...\nI think the approach maybe possible on branch-2 but on master, it is a bit tricky as we need to change the table descriptor without reopening the regions, which may lead to unexpected behavior...", "url": "https://github.com/apache/hbase/pull/1435#discussion_r403817503", "createdAt": "2020-04-06T03:57:14Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "diffHunk": "@@ -1221,4 +1221,33 @@ public String determineRSGroupInfoForTable(TableName tableName) {\n     return script.getRSGroup(tableName.getNamespaceAsString(), tableName.getQualifierAsString());\n   }\n \n+  @Override\n+  public synchronized void renameRSGroup(String oldName, String newName) throws IOException {\n+    if (oldName.equals(RSGroupInfo.DEFAULT_GROUP)) {\n+      throw new ConstraintException(RSGroupInfo.DEFAULT_GROUP + \" can't be rename\");\n+    }\n+    checkGroupName(newName);\n+\n+    RSGroupInfo oldRSG = getRSGroupInfo(oldName);\n+    Map<String, RSGroupInfo> rsGroupMap = holder.groupName2Group;\n+    Map<String, RSGroupInfo> newGroupMap = Maps.newHashMap(rsGroupMap);\n+    newGroupMap.remove(oldRSG.getName());\n+    RSGroupInfo newRSG = new RSGroupInfo(newName, oldRSG.getServers());\n+    newGroupMap.put(newName, newRSG);\n+    flushConfig(newGroupMap);\n+\n+    TableDescriptors tableDescriptors = masterServices.getTableDescriptors();\n+    Set<TableName> updateTables = new HashSet<>();\n+    for (Map.Entry<String, TableDescriptor> table : tableDescriptors.getAll().entrySet()) {\n+      Optional<String> rsgroup = table.getValue().getRegionServerGroup();\n+      if (!rsgroup.isPresent()) {\n+        continue;\n+      }\n+      if (rsgroup.get().equals(oldName)) {\n+        updateTables.add(table.getValue().getTableName());\n+      }\n+    }\n+    setRSGroup(updateTables, newName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "610591418d65edf5fa7bc9d4c00cb82a0dfca606"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4163d68ccfa1f84ee05a6ba5b1b2fc44769ce8a", "author": {"user": {"login": "Reidddddd", "name": "Reid Chan"}}, "url": "https://github.com/apache/hbase/commit/d4163d68ccfa1f84ee05a6ba5b1b2fc44769ce8a", "committedDate": "2020-04-06T04:23:06Z", "message": "Avoid reopen regions, since there's no location changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65a7b19f9b464b67298e7b926c505174c7d8f05c", "author": {"user": {"login": "Reidddddd", "name": "Reid Chan"}}, "url": "https://github.com/apache/hbase/commit/65a7b19f9b464b67298e7b926c505174c7d8f05c", "committedDate": "2020-04-07T10:29:02Z", "message": "Rolled back to previous version which is the right approach so far"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTY0OTIz", "url": "https://github.com/apache/hbase/pull/1435#pullrequestreview-389564923", "createdAt": "2020-04-07T23:46:58Z", "commit": {"oid": "65a7b19f9b464b67298e7b926c505174c7d8f05c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMzo0Njo1OFrOGCaG4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDowMToxNVrOGCaYSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3ODA4Mg==", "bodyText": "Set<TableName> updateTables = new HashSet<>();\nTableDescriptors tableDescriptors = masterServices.getTableDescriptors();\nfor (Map.Entry<String, TableDescriptor> table : tableDescriptors.getAll().entrySet()) {\n  Optional<String> rsgroup = table.getValue().getRegionServerGroup();\n  if (!rsgroup.isPresent()) {\n    continue;\n  }\n  if (rsgroup.get().equals(oldName)) {\n    updateTables.add(table.getValue().getTableName());\n  }\n}\n\ncan be replaced with, if stream is preferred, following code (not tested):\nSet<TableName> updateTables = masterServices.getTableDescriptors().getAll().values()\n  .stream()\n  .filter(t -> oldName.equals(t.getRegionServerGroup().orElse(null)))\n  .map(TableDescriptor::getTableName)\n  .collect(Collectors.toSet());", "url": "https://github.com/apache/hbase/pull/1435#discussion_r405178082", "createdAt": "2020-04-07T23:46:58Z", "author": {"login": "liuml07"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupInfoManagerImpl.java", "diffHunk": "@@ -1221,4 +1221,32 @@ public String determineRSGroupInfoForTable(TableName tableName) {\n     return script.getRSGroup(tableName.getNamespaceAsString(), tableName.getQualifierAsString());\n   }\n \n+  @Override\n+  public synchronized void renameRSGroup(String oldName, String newName) throws IOException {\n+    if (oldName.equals(RSGroupInfo.DEFAULT_GROUP)) {\n+      throw new ConstraintException(RSGroupInfo.DEFAULT_GROUP + \" can't be rename\");\n+    }\n+    checkGroupName(newName);\n+\n+    RSGroupInfo oldRSG = getRSGroupInfo(oldName);\n+    Map<String, RSGroupInfo> rsGroupMap = holder.groupName2Group;\n+    Map<String, RSGroupInfo> newGroupMap = Maps.newHashMap(rsGroupMap);\n+    newGroupMap.remove(oldRSG.getName());\n+    RSGroupInfo newRSG = new RSGroupInfo(newName, oldRSG.getServers());\n+    newGroupMap.put(newName, newRSG);\n+    flushConfig(newGroupMap);\n+    Set<TableName> updateTables = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65a7b19f9b464b67298e7b926c505174c7d8f05c"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjUzNw==", "bodyText": "Yes I agree this is useful assertion.\nActually I was wondering if we can add more context to this test as well as assertions. For example, we create and assign another table to another rsgroup. So the \"if\" clause checking rsgroup name in RSGroupInfoManagerImpl.java will get tested. Otherwise this test may still pass even when we remove the \"if\". By the \"if\" I mean:\nif (rsgroup.get().equals(oldName)) {\n    updateTables.add(table.getValue().getTableName());\n  }", "url": "https://github.com/apache/hbase/pull/1435#discussion_r405182537", "createdAt": "2020-04-08T00:01:15Z", "author": {"login": "liuml07"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsAdmin1.java", "diffHunk": "@@ -468,4 +468,31 @@ public boolean evaluate() throws Exception {\n     // Cleanup\n     TEST_UTIL.deleteTable(tn1);\n   }\n+\n+  @Test\n+  public void testRenameRSGroup() throws Exception {\n+    // Add rsgroup, and assign 2 servers and a table to it.\n+    RSGroupInfo oldgroup = addGroup(\"oldgroup\", 2);\n+    TableName tb = TableName.valueOf(\"testRename\");\n+    TEST_UTIL.createTable(tb, \"tr\");\n+    ADMIN.setRSGroup(Sets.newHashSet(tb), oldgroup.getName());\n+    Thread.sleep(500);\n+    oldgroup = ADMIN.getRSGroup(oldgroup.getName());\n+    assertEquals(2, oldgroup.getServers().size());\n+    assertEquals(oldgroup.getName(), ADMIN.getRSGroup(tb).getName());\n+\n+    // Rename rsgroup\n+    ADMIN.renameRSGroup(oldgroup.getName(), \"newgroup\");\n+    Set<Address> servers = oldgroup.getServers();\n+    RSGroupInfo newgroup = ADMIN.getRSGroup(\"newgroup\");\n+    assertEquals(servers.size(), newgroup.getServers().size());\n+    int match = 0;\n+    for (Address addr : newgroup.getServers()) {\n+      if (servers.contains(addr)) {\n+        match++;\n+      }\n+    }\n+    assertEquals(servers.size(), match);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzcxNjkzNg=="}, "originalCommit": {"oid": "9dd5c861442065e2440b6dc3fff918b8581c83b5"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f2ade5bd2af1a139bf3b979f6ae0d8b08b27d81", "author": {"user": {"login": "Reidddddd", "name": "Reid Chan"}}, "url": "https://github.com/apache/hbase/commit/1f2ade5bd2af1a139bf3b979f6ae0d8b08b27d81", "committedDate": "2020-04-08T03:40:47Z", "message": "Use lambda expression and add more context in TestRSGroupsAdmin1 to ensure it works as expectation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxOTExMzAy", "url": "https://github.com/apache/hbase/pull/1435#pullrequestreview-391911302", "createdAt": "2020-04-13T00:56:09Z", "commit": {"oid": "1f2ade5bd2af1a139bf3b979f6ae0d8b08b27d81"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNDQxMDM3", "url": "https://github.com/apache/hbase/pull/1435#pullrequestreview-392441037", "createdAt": "2020-04-13T21:08:39Z", "commit": {"oid": "1f2ade5bd2af1a139bf3b979f6ae0d8b08b27d81"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2298, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}