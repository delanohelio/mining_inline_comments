{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4ODk0NDg1", "number": 2174, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNzoyNDoyOVrOETj4wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNzoyNDoyOVrOETj4wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4OTQ2MzY4OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNzoyNDoyOVrOG5XGmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzozNzoyM1rOG5jXyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgwMDUzOA==", "bodyText": "nit: We are not expecting this condition for upgrade to 3.0.0 right? We can either roll this out to branch-2.2+ except master or we can remove behavior of hbase versions older than 1.4 from log msg at least in master branch to treat this as generic condition regardless of how HBase version<1.4 treated negative rowLockDuration. For branch-2.2+, log msg as is should be good (i.e behavior of hbase versions older than 1.4 suits well to branch-2.x).\nThought?", "url": "https://github.com/apache/hbase/pull/2174#discussion_r462800538", "createdAt": "2020-07-30T07:24:29Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -793,8 +793,15 @@ public HRegion(final HRegionFileSystem fs, final WAL wal, final Configuration co\n       throw new IllegalArgumentException(MEMSTORE_FLUSH_PER_CHANGES + \" can not exceed \"\n           + MAX_FLUSH_PER_CHANGES);\n     }\n-    this.rowLockWaitDuration = conf.getInt(\"hbase.rowlock.wait.duration\",\n-                    DEFAULT_ROWLOCK_WAIT_DURATION);\n+    int tmpRowLockDuration = conf.getInt(\"hbase.rowlock.wait.duration\",\n+        DEFAULT_ROWLOCK_WAIT_DURATION);\n+    if (tmpRowLockDuration <= 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bdce35efb512b712594573fafe811db0ae86684"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MDEyMw==", "bodyText": "I dunno. If the reason we're treating it as 1ms, rather than e.g. refusing to open the region, is because in old hbase versions you could rely on this behavior then that's no less true in hbase 4 then in hbase 1.7.0.", "url": "https://github.com/apache/hbase/pull/2174#discussion_r462950123", "createdAt": "2020-07-30T12:09:19Z", "author": {"login": "busbey"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -793,8 +793,15 @@ public HRegion(final HRegionFileSystem fs, final WAL wal, final Configuration co\n       throw new IllegalArgumentException(MEMSTORE_FLUSH_PER_CHANGES + \" can not exceed \"\n           + MAX_FLUSH_PER_CHANGES);\n     }\n-    this.rowLockWaitDuration = conf.getInt(\"hbase.rowlock.wait.duration\",\n-                    DEFAULT_ROWLOCK_WAIT_DURATION);\n+    int tmpRowLockDuration = conf.getInt(\"hbase.rowlock.wait.duration\",\n+        DEFAULT_ROWLOCK_WAIT_DURATION);\n+    if (tmpRowLockDuration <= 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgwMDUzOA=="}, "originalCommit": {"oid": "6bdce35efb512b712594573fafe811db0ae86684"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk1MTA0NQ==", "bodyText": "We could remove mention of the reasoning about old versions of hbase all the time though and just say we are doing it since not doing so will mean the region won't allow row locks?", "url": "https://github.com/apache/hbase/pull/2174#discussion_r462951045", "createdAt": "2020-07-30T12:11:02Z", "author": {"login": "busbey"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -793,8 +793,15 @@ public HRegion(final HRegionFileSystem fs, final WAL wal, final Configuration co\n       throw new IllegalArgumentException(MEMSTORE_FLUSH_PER_CHANGES + \" can not exceed \"\n           + MAX_FLUSH_PER_CHANGES);\n     }\n-    this.rowLockWaitDuration = conf.getInt(\"hbase.rowlock.wait.duration\",\n-                    DEFAULT_ROWLOCK_WAIT_DURATION);\n+    int tmpRowLockDuration = conf.getInt(\"hbase.rowlock.wait.duration\",\n+        DEFAULT_ROWLOCK_WAIT_DURATION);\n+    if (tmpRowLockDuration <= 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgwMDUzOA=="}, "originalCommit": {"oid": "6bdce35efb512b712594573fafe811db0ae86684"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzAwMTU0NA==", "bodyText": "Sure, removing the mention of old HBase version behaviour sounds good \ud83d\udc4d\nBecause the logic of keeping negative value or 0 to 1 ms (quite low but still) is definitely required.", "url": "https://github.com/apache/hbase/pull/2174#discussion_r463001544", "createdAt": "2020-07-30T13:37:23Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -793,8 +793,15 @@ public HRegion(final HRegionFileSystem fs, final WAL wal, final Configuration co\n       throw new IllegalArgumentException(MEMSTORE_FLUSH_PER_CHANGES + \" can not exceed \"\n           + MAX_FLUSH_PER_CHANGES);\n     }\n-    this.rowLockWaitDuration = conf.getInt(\"hbase.rowlock.wait.duration\",\n-                    DEFAULT_ROWLOCK_WAIT_DURATION);\n+    int tmpRowLockDuration = conf.getInt(\"hbase.rowlock.wait.duration\",\n+        DEFAULT_ROWLOCK_WAIT_DURATION);\n+    if (tmpRowLockDuration <= 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgwMDUzOA=="}, "originalCommit": {"oid": "6bdce35efb512b712594573fafe811db0ae86684"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2725, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}