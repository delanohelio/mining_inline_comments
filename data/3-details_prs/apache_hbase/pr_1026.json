{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxOTA2Njk3", "number": 1026, "title": "HBASE-23682 Fix NPE when disable DeadServerMetricRegionChore", "bodyText": "", "createdAt": "2020-01-13T02:47:12Z", "url": "https://github.com/apache/hbase/pull/1026", "merged": true, "mergeCommit": {"oid": "24823ecfc9ddc9bbb473657d2ccf73cbd971ee2b"}, "closed": true, "closedAt": "2020-02-08T23:20:24Z", "author": {"login": "binlijin"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5_2iWAFqTM0MjAxMzk4Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcB5AYsgFqTM1NDk0NjE5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMDEzOTg3", "url": "https://github.com/apache/hbase/pull/1026#pullrequestreview-342013987", "createdAt": "2020-01-13T17:32:12Z", "commit": {"oid": "3cef49d9c4350c82ca054d89b84e8a1f708d7c6f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjU2MDc5", "url": "https://github.com/apache/hbase/pull/1026#pullrequestreview-342256079", "createdAt": "2020-01-14T02:12:29Z", "commit": {"oid": "3cef49d9c4350c82ca054d89b84e8a1f708d7c6f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMjoxMjoyOVrOFdKZQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMjoxMzowOVrOFdKaAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMzMzMQ==", "bodyText": "I think it is usually better to do nullable annotations with issues like this to make the contracts clear at the API level.  It also helps static code analyzers to catch issues like these.\nFor example you could do @nullable in this case..", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366123331", "createdAt": "2020-01-14T02:12:29Z", "author": {"login": "bharathv"}, "path": "hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/ProcedureExecutor.java", "diffHunk": "@@ -733,6 +733,9 @@ public long getKeepAliveTime(final TimeUnit timeUnit) {\n    * @param chore the chore to add\n    */\n   public void addChore(ProcedureInMemoryChore<TEnvironment> chore) {\n+    if (chore == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cef49d9c4350c82ca054d89b84e8a1f708d7c6f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMzUyMw==", "bodyText": "nit: Guess this is redundant if the method accepts null values.", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366123523", "createdAt": "2020-01-14T02:13:09Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -1378,7 +1378,9 @@ public void joinCluster() throws IOException {\n \n     // Start the chores\n     master.getMasterProcedureExecutor().addChore(this.ritChore);\n-    master.getMasterProcedureExecutor().addChore(this.deadMetricChore);\n+    if (this.deadMetricChore != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cef49d9c4350c82ca054d89b84e8a1f708d7c6f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNzE4ODc4", "url": "https://github.com/apache/hbase/pull/1026#pullrequestreview-342718878", "createdAt": "2020-01-14T17:44:19Z", "commit": {"oid": "8cebce3675a9cbd7c5e33511b6e302be232d2de7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNzo0NDoyMFrOFdgNHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNzo0NTo1OVrOFdgQHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MDY2OQ==", "bodyText": "Copy + paste leftovers?", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366480669", "createdAt": "2020-01-14T17:44:20Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.testclassification.LargeTests;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.util.FSUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cebce3675a9cbd7c5e33511b6e302be232d2de7"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MDc5NA==", "bodyText": "This would be MediumTest, no?", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366480794", "createdAt": "2020-01-14T17:44:36Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.testclassification.LargeTests;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.util.FSUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+/**\n+ * Base class for AM test.\n+ */\n+@Category({ MasterTests.class, LargeTests.class })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cebce3675a9cbd7c5e33511b6e302be232d2de7"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MTI0Nw==", "bodyText": "Again looks like a remnant of copy+paste from TestAssignment...", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366481247", "createdAt": "2020-01-14T17:45:36Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.testclassification.LargeTests;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.util.FSUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+/**\n+ * Base class for AM test.\n+ */\n+@Category({ MasterTests.class, LargeTests.class })\n+public class TestDeadServerMetricRegionChore {\n+\n+  @ClassRule\n+  public static final HBaseClassTestRule CLASS_RULE =\n+    HBaseClassTestRule.forClass(TestDeadServerMetricRegionChore.class);\n+\n+  protected HBaseTestingUtility util;\n+\n+  protected void setupConfiguration(Configuration conf) throws Exception {\n+    FSUtils.setRootDir(conf, util.getDataTestDir());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cebce3675a9cbd7c5e33511b6e302be232d2de7"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ4MTQzNg==", "bodyText": "Move to tearDown()?", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366481436", "createdAt": "2020-01-14T17:45:59Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.conf.Configuration;\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.testclassification.LargeTests;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.util.FSUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+/**\n+ * Base class for AM test.\n+ */\n+@Category({ MasterTests.class, LargeTests.class })\n+public class TestDeadServerMetricRegionChore {\n+\n+  @ClassRule\n+  public static final HBaseClassTestRule CLASS_RULE =\n+    HBaseClassTestRule.forClass(TestDeadServerMetricRegionChore.class);\n+\n+  protected HBaseTestingUtility util;\n+\n+  protected void setupConfiguration(Configuration conf) throws Exception {\n+    FSUtils.setRootDir(conf, util.getDataTestDir());\n+    // Disable DeadServerMetricRegionChore\n+    conf.setInt(AssignmentManager.DEAD_REGION_METRIC_CHORE_INTERVAL_MSEC_CONF_KEY, -1);\n+  }\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    util = new HBaseTestingUtility();\n+    setupConfiguration(util.getConfiguration());\n+  }\n+\n+  @After\n+  public void tearDown() throws Exception {\n+  }\n+\n+  @Test\n+  public void testDeadServerMetricRegionChore() throws Exception {\n+    try {\n+      this.util.startMiniCluster();\n+      // Master start up normal.\n+      final TableName tableName = TableName.valueOf(\"testDeadServerMetricRegionChore\");\n+      this.util.createTable(tableName, \"f\");\n+      this.util.waitTableAvailable(tableName);\n+    } finally {\n+      this.util.killMiniHBaseCluster();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cebce3675a9cbd7c5e33511b6e302be232d2de7"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzMzY3ODM5", "url": "https://github.com/apache/hbase/pull/1026#pullrequestreview-343367839", "createdAt": "2020-01-15T16:51:17Z", "commit": {"oid": "0419b2aea6a5acab96cd739957297069154ab10f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNjo1MToxN1rOFd_M2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNjo1NDowMFrOFd_S8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4ODUwNA==", "bodyText": "I mean .. we can get rid of this if block? addChore has a similar check right?", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366988504", "createdAt": "2020-01-15T16:51:17Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -1378,7 +1378,9 @@ public void joinCluster() throws IOException {\n \n     // Start the chores\n     master.getMasterProcedureExecutor().addChore(this.ritChore);\n-    master.getMasterProcedureExecutor().addChore(this.deadMetricChore);\n+    if (this.deadMetricChore != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMzUyMw=="}, "originalCommit": {"oid": "3cef49d9c4350c82ca054d89b84e8a1f708d7c6f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4OTg5Mw==", "bodyText": "Still don't understand why we cant move startMiniCluster() to setUp() and shutDownMiniCLuster() to tearDown().\nI get the point that without the patch, startMiniCluster() throws, but with the patch, it shouldn't, right? Did I miss something.", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366989893", "createdAt": "2020-01-15T16:53:42Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.testclassification.MediumTests;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+/**\n+ * Testcase for HBASE-23682.\n+ */\n+@Category({ MasterTests.class, MediumTests.class })\n+public class TestDeadServerMetricRegionChore {\n+\n+  @ClassRule\n+  public static final HBaseClassTestRule CLASS_RULE =\n+    HBaseClassTestRule.forClass(TestDeadServerMetricRegionChore.class);\n+\n+  protected HBaseTestingUtility util;\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    util = new HBaseTestingUtility();\n+    // Disable DeadServerMetricRegionChore\n+    util.getConfiguration()\n+      .setInt(AssignmentManager.DEAD_REGION_METRIC_CHORE_INTERVAL_MSEC_CONF_KEY, -1);\n+  }\n+\n+  @After\n+  public void tearDown() throws Exception {\n+  }\n+\n+  @Test\n+  public void testDeadServerMetricRegionChore() throws Exception {\n+    try {\n+      this.util.startMiniCluster();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0419b2aea6a5acab96cd739957297069154ab10f"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5MDA2Ng==", "bodyText": "nit: /*", "url": "https://github.com/apache/hbase/pull/1026#discussion_r366990066", "createdAt": "2020-01-15T16:54:00Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0419b2aea6a5acab96cd739957297069154ab10f"}, "originalPosition": 1}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c60ab4cabd68ad8b6b162c01f9e7dee66ccf10f", "author": {"user": {"login": "binlijin", "name": null}}, "url": "https://github.com/apache/hbase/commit/0c60ab4cabd68ad8b6b162c01f9e7dee66ccf10f", "committedDate": "2020-01-16T07:28:41Z", "message": "fix comment"}, "afterCommit": {"oid": "5689acdb8e307234832c3c3bc8a4cbf2721cbfd7", "author": {"user": {"login": "binlijin", "name": null}}, "url": "https://github.com/apache/hbase/commit/5689acdb8e307234832c3c3bc8a4cbf2721cbfd7", "committedDate": "2020-01-16T10:39:39Z", "message": "HBASE-23682 Fix NPE when disable DeadServerMetricRegionChore"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "182ac1a31cc87c73081dfd72a7bd7bb703476684", "author": {"user": {"login": "binlijin", "name": null}}, "url": "https://github.com/apache/hbase/commit/182ac1a31cc87c73081dfd72a7bd7bb703476684", "committedDate": "2020-01-16T10:46:51Z", "message": "fix comment"}, "afterCommit": {"oid": "6580fa0a6cc0aff8116ba8a84499632fb46ed10a", "author": {"user": {"login": "binlijin", "name": null}}, "url": "https://github.com/apache/hbase/commit/6580fa0a6cc0aff8116ba8a84499632fb46ed10a", "committedDate": "2020-01-17T01:50:07Z", "message": "HBASE-23682 Fix NPE when disable DeadServerMetricRegionChore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MTAzNDIx", "url": "https://github.com/apache/hbase/pull/1026#pullrequestreview-354103421", "createdAt": "2020-02-05T23:05:00Z", "commit": {"oid": "6580fa0a6cc0aff8116ba8a84499632fb46ed10a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMzowNTowMFrOFmKQfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQyMzowNToyOVrOFmKRAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU1ODI3MQ==", "bodyText": "nit: Remove the if condition here, since the method's args are Nullable?", "url": "https://github.com/apache/hbase/pull/1026#discussion_r375558271", "createdAt": "2020-02-05T23:05:00Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -1378,7 +1378,9 @@ public void joinCluster() throws IOException {\n \n     // Start the chores\n     master.getMasterProcedureExecutor().addChore(this.ritChore);\n-    master.getMasterProcedureExecutor().addChore(this.deadMetricChore);\n+    if (this.deadMetricChore != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEyMzUyMw=="}, "originalCommit": {"oid": "3cef49d9c4350c82ca054d89b84e8a1f708d7c6f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTU1ODQwMg==", "bodyText": "Didn't address this yet?", "url": "https://github.com/apache/hbase/pull/1026#discussion_r375558402", "createdAt": "2020-02-05T23:05:29Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.testclassification.MediumTests;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+/**\n+ * Testcase for HBASE-23682.\n+ */\n+@Category({ MasterTests.class, MediumTests.class })\n+public class TestDeadServerMetricRegionChore {\n+\n+  @ClassRule\n+  public static final HBaseClassTestRule CLASS_RULE =\n+    HBaseClassTestRule.forClass(TestDeadServerMetricRegionChore.class);\n+\n+  protected HBaseTestingUtility util;\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    util = new HBaseTestingUtility();\n+    // Disable DeadServerMetricRegionChore\n+    util.getConfiguration()\n+      .setInt(AssignmentManager.DEAD_REGION_METRIC_CHORE_INTERVAL_MSEC_CONF_KEY, -1);\n+  }\n+\n+  @After\n+  public void tearDown() throws Exception {\n+  }\n+\n+  @Test\n+  public void testDeadServerMetricRegionChore() throws Exception {\n+    try {\n+      this.util.startMiniCluster();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4OTg5Mw=="}, "originalCommit": {"oid": "0419b2aea6a5acab96cd739957297069154ab10f"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5b7eb8307adf324151a978e5e806e35c03e1977", "author": {"user": {"login": "binlijin", "name": null}}, "url": "https://github.com/apache/hbase/commit/c5b7eb8307adf324151a978e5e806e35c03e1977", "committedDate": "2020-02-06T07:27:44Z", "message": "HBASE-23682 Fix NPE when disable DeadServerMetricRegionChore"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6580fa0a6cc0aff8116ba8a84499632fb46ed10a", "author": {"user": {"login": "binlijin", "name": null}}, "url": "https://github.com/apache/hbase/commit/6580fa0a6cc0aff8116ba8a84499632fb46ed10a", "committedDate": "2020-01-17T01:50:07Z", "message": "HBASE-23682 Fix NPE when disable DeadServerMetricRegionChore"}, "afterCommit": {"oid": "c5b7eb8307adf324151a978e5e806e35c03e1977", "author": {"user": {"login": "binlijin", "name": null}}, "url": "https://github.com/apache/hbase/commit/c5b7eb8307adf324151a978e5e806e35c03e1977", "committedDate": "2020-02-06T07:27:44Z", "message": "HBASE-23682 Fix NPE when disable DeadServerMetricRegionChore"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0MjQzNTk1", "url": "https://github.com/apache/hbase/pull/1026#pullrequestreview-354243595", "createdAt": "2020-02-06T07:30:10Z", "commit": {"oid": "c5b7eb8307adf324151a978e5e806e35c03e1977"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzozMDoxMVrOFmRZLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQwNzozMDoxMVrOFmRZLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTY3NTE4MA==", "bodyText": "shutdownMiniCluster() already move to tearDown(), shoud have addressed it.", "url": "https://github.com/apache/hbase/pull/1026#discussion_r375675180", "createdAt": "2020-02-06T07:30:11Z", "author": {"login": "binlijin"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/assignment/TestDeadServerMetricRegionChore.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.master.assignment;\n+\n+import org.apache.hadoop.hbase.HBaseClassTestRule;\n+import org.apache.hadoop.hbase.HBaseTestingUtility;\n+import org.apache.hadoop.hbase.TableName;\n+import org.apache.hadoop.hbase.testclassification.MasterTests;\n+import org.apache.hadoop.hbase.testclassification.MediumTests;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+\n+/**\n+ * Testcase for HBASE-23682.\n+ */\n+@Category({ MasterTests.class, MediumTests.class })\n+public class TestDeadServerMetricRegionChore {\n+\n+  @ClassRule\n+  public static final HBaseClassTestRule CLASS_RULE =\n+    HBaseClassTestRule.forClass(TestDeadServerMetricRegionChore.class);\n+\n+  protected HBaseTestingUtility util;\n+\n+  @Before\n+  public void setUp() throws Exception {\n+    util = new HBaseTestingUtility();\n+    // Disable DeadServerMetricRegionChore\n+    util.getConfiguration()\n+      .setInt(AssignmentManager.DEAD_REGION_METRIC_CHORE_INTERVAL_MSEC_CONF_KEY, -1);\n+  }\n+\n+  @After\n+  public void tearDown() throws Exception {\n+  }\n+\n+  @Test\n+  public void testDeadServerMetricRegionChore() throws Exception {\n+    try {\n+      this.util.startMiniCluster();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk4OTg5Mw=="}, "originalCommit": {"oid": "0419b2aea6a5acab96cd739957297069154ab10f"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NDk3NDY1", "url": "https://github.com/apache/hbase/pull/1026#pullrequestreview-354497465", "createdAt": "2020-02-06T14:37:39Z", "commit": {"oid": "c5b7eb8307adf324151a978e5e806e35c03e1977"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0OTQ2MTk0", "url": "https://github.com/apache/hbase/pull/1026#pullrequestreview-354946194", "createdAt": "2020-02-07T06:05:01Z", "commit": {"oid": "c5b7eb8307adf324151a978e5e806e35c03e1977"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2903, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}