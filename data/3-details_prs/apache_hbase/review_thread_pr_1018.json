{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNDc5NTI4", "number": 1018, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMToyMDozM1rODX_dVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMToyNDowN1rODX_g7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NDgzNTQyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMToyMDozM1rOFdmJIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMToyMDozM1rOFdmJIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3Nzk1NQ==", "bodyText": "nit: \"Migrated {} existing procedures from the old storage format.\"", "url": "https://github.com/apache/hbase/pull/1018#discussion_r366577955", "createdAt": "2020-01-14T21:20:33Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore.java", "diffHunk": "@@ -347,6 +393,22 @@ public void handleCorrupted(ProcedureIterator procIter) throws IOException {\n         }\n       }\n     });\n+\n+    // check whether there are unsupported procedures, this could happen when we are migrating from\n+    // 2.1-. We used to do this in HMaster, after loading all the procedures from procedure store,\n+    // but here we have to do it before migrating, otherwise, if we find some unsupported\n+    // procedures, the users can not go back to 2.1 to finish them any more, as all the data are now\n+    // in the new region based procedure store, which is not supported in 2.1-.\n+    checkUnsupportedProcedure(activeProcsByType);\n+\n+    MutableLong maxProcIdFromProcs = new MutableLong(-1);\n+    for (Procedure<?> proc : procs) {\n+      update(proc);\n+      if (proc.getProcId() > maxProcIdFromProcs.longValue()) {\n+        maxProcIdFromProcs.setValue(proc.getProcId());\n+      }\n+    }\n+    LOG.info(\"Migrated {} procedures\", procs.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf753ae8a3bf098f542c05cf410b8d273836e7bf"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NDg0MDkwOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMToyMjozNFrOFdmMfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMToyMjozNFrOFdmMfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3ODgxNQ==", "bodyText": "Both of these error messages should include a link to https://hbase.apache.org/book.html#upgrade2.2", "url": "https://github.com/apache/hbase/pull/1018#discussion_r366578815", "createdAt": "2020-01-14T21:22:34Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore.java", "diffHunk": "@@ -298,6 +307,45 @@ private HRegion open(Configuration conf, FileSystem fs, Path rootDir) throws IOE\n       null);\n   }\n \n+  @SuppressWarnings(\"deprecation\")\n+  private static final ImmutableSet<Class<?>> UNSUPPORTED_PROCEDURES =\n+    ImmutableSet.of(RecoverMetaProcedure.class, AssignProcedure.class, UnassignProcedure.class,\n+      MoveRegionProcedure.class);\n+\n+  /**\n+   * In HBASE-20811, we have introduced a new TRSP to assign/unassign/move regions, and it is\n+   * incompatible with the old AssignProcedure/UnassignProcedure/MoveRegionProcedure. So we need to\n+   * make sure that there are none these procedures when upgrading. If there are, the master will\n+   * quit, you need to go back to the old version to finish these procedures first before upgrading.\n+   */\n+  private void checkUnsupportedProcedure(Map<Class<?>, List<Procedure<?>>> procsByType)\n+    throws HBaseIOException {\n+    // Confirm that we do not have unfinished assign/unassign related procedures. It is not easy to\n+    // support both the old assign/unassign procedures and the new TransitRegionStateProcedure as\n+    // there will be conflict in the code for AM. We should finish all these procedures before\n+    // upgrading.\n+    for (Class<?> clazz : UNSUPPORTED_PROCEDURES) {\n+      List<Procedure<?>> procs = procsByType.get(clazz);\n+      if (procs != null) {\n+        LOG.error(\n+          \"Unsupported procedure type {} found, please rollback your master to the old\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf753ae8a3bf098f542c05cf410b8d273836e7bf"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NDg0NDYyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMToyNDowN1rOFdmO8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNjo0MToxM1rOFegFTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3OTQ0Mg==", "bodyText": "nit: this if check reads a bit easier with some newlines\nif (procsByType.getOrDefault(ServerCrashProcedure.class, Collections.emptyList())\n       .stream()\n       .map(p -> (ServerCrashProcedure) p)\n       .anyMatch(ServerCrashProcedure::isInRecoverMetaState)) {", "url": "https://github.com/apache/hbase/pull/1018#discussion_r366579442", "createdAt": "2020-01-14T21:24:07Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore.java", "diffHunk": "@@ -298,6 +307,45 @@ private HRegion open(Configuration conf, FileSystem fs, Path rootDir) throws IOE\n       null);\n   }\n \n+  @SuppressWarnings(\"deprecation\")\n+  private static final ImmutableSet<Class<?>> UNSUPPORTED_PROCEDURES =\n+    ImmutableSet.of(RecoverMetaProcedure.class, AssignProcedure.class, UnassignProcedure.class,\n+      MoveRegionProcedure.class);\n+\n+  /**\n+   * In HBASE-20811, we have introduced a new TRSP to assign/unassign/move regions, and it is\n+   * incompatible with the old AssignProcedure/UnassignProcedure/MoveRegionProcedure. So we need to\n+   * make sure that there are none these procedures when upgrading. If there are, the master will\n+   * quit, you need to go back to the old version to finish these procedures first before upgrading.\n+   */\n+  private void checkUnsupportedProcedure(Map<Class<?>, List<Procedure<?>>> procsByType)\n+    throws HBaseIOException {\n+    // Confirm that we do not have unfinished assign/unassign related procedures. It is not easy to\n+    // support both the old assign/unassign procedures and the new TransitRegionStateProcedure as\n+    // there will be conflict in the code for AM. We should finish all these procedures before\n+    // upgrading.\n+    for (Class<?> clazz : UNSUPPORTED_PROCEDURES) {\n+      List<Procedure<?>> procs = procsByType.get(clazz);\n+      if (procs != null) {\n+        LOG.error(\n+          \"Unsupported procedure type {} found, please rollback your master to the old\" +\n+            \" version to finish them, and then try to upgrade again. The full procedure list: {}\",\n+          clazz, procs);\n+        throw new HBaseIOException(\"Unsupported procedure type \" + clazz + \" found\");\n+      }\n+    }\n+    // A special check for SCP, as we do not support RecoverMetaProcedure any more so we need to\n+    // make sure that no one will try to schedule it but SCP does have a state which will schedule\n+    // it.\n+    if (procsByType.getOrDefault(ServerCrashProcedure.class, Collections.emptyList()).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf753ae8a3bf098f542c05cf410b8d273836e7bf"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzI1OTEyNA==", "bodyText": "Just use eclipse formatter and it will make them in the same line if possible...", "url": "https://github.com/apache/hbase/pull/1018#discussion_r367259124", "createdAt": "2020-01-16T07:04:17Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore.java", "diffHunk": "@@ -298,6 +307,45 @@ private HRegion open(Configuration conf, FileSystem fs, Path rootDir) throws IOE\n       null);\n   }\n \n+  @SuppressWarnings(\"deprecation\")\n+  private static final ImmutableSet<Class<?>> UNSUPPORTED_PROCEDURES =\n+    ImmutableSet.of(RecoverMetaProcedure.class, AssignProcedure.class, UnassignProcedure.class,\n+      MoveRegionProcedure.class);\n+\n+  /**\n+   * In HBASE-20811, we have introduced a new TRSP to assign/unassign/move regions, and it is\n+   * incompatible with the old AssignProcedure/UnassignProcedure/MoveRegionProcedure. So we need to\n+   * make sure that there are none these procedures when upgrading. If there are, the master will\n+   * quit, you need to go back to the old version to finish these procedures first before upgrading.\n+   */\n+  private void checkUnsupportedProcedure(Map<Class<?>, List<Procedure<?>>> procsByType)\n+    throws HBaseIOException {\n+    // Confirm that we do not have unfinished assign/unassign related procedures. It is not easy to\n+    // support both the old assign/unassign procedures and the new TransitRegionStateProcedure as\n+    // there will be conflict in the code for AM. We should finish all these procedures before\n+    // upgrading.\n+    for (Class<?> clazz : UNSUPPORTED_PROCEDURES) {\n+      List<Procedure<?>> procs = procsByType.get(clazz);\n+      if (procs != null) {\n+        LOG.error(\n+          \"Unsupported procedure type {} found, please rollback your master to the old\" +\n+            \" version to finish them, and then try to upgrade again. The full procedure list: {}\",\n+          clazz, procs);\n+        throw new HBaseIOException(\"Unsupported procedure type \" + clazz + \" found\");\n+      }\n+    }\n+    // A special check for SCP, as we do not support RecoverMetaProcedure any more so we need to\n+    // make sure that no one will try to schedule it but SCP does have a state which will schedule\n+    // it.\n+    if (procsByType.getOrDefault(ServerCrashProcedure.class, Collections.emptyList()).stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3OTQ0Mg=="}, "originalCommit": {"oid": "bf753ae8a3bf098f542c05cf410b8d273836e7bf"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzUyNzI0NQ==", "bodyText": "::nod::\nI disagree with eclipse formatter. I don't think it's been updated since java8.", "url": "https://github.com/apache/hbase/pull/1018#discussion_r367527245", "createdAt": "2020-01-16T16:41:13Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore.java", "diffHunk": "@@ -298,6 +307,45 @@ private HRegion open(Configuration conf, FileSystem fs, Path rootDir) throws IOE\n       null);\n   }\n \n+  @SuppressWarnings(\"deprecation\")\n+  private static final ImmutableSet<Class<?>> UNSUPPORTED_PROCEDURES =\n+    ImmutableSet.of(RecoverMetaProcedure.class, AssignProcedure.class, UnassignProcedure.class,\n+      MoveRegionProcedure.class);\n+\n+  /**\n+   * In HBASE-20811, we have introduced a new TRSP to assign/unassign/move regions, and it is\n+   * incompatible with the old AssignProcedure/UnassignProcedure/MoveRegionProcedure. So we need to\n+   * make sure that there are none these procedures when upgrading. If there are, the master will\n+   * quit, you need to go back to the old version to finish these procedures first before upgrading.\n+   */\n+  private void checkUnsupportedProcedure(Map<Class<?>, List<Procedure<?>>> procsByType)\n+    throws HBaseIOException {\n+    // Confirm that we do not have unfinished assign/unassign related procedures. It is not easy to\n+    // support both the old assign/unassign procedures and the new TransitRegionStateProcedure as\n+    // there will be conflict in the code for AM. We should finish all these procedures before\n+    // upgrading.\n+    for (Class<?> clazz : UNSUPPORTED_PROCEDURES) {\n+      List<Procedure<?>> procs = procsByType.get(clazz);\n+      if (procs != null) {\n+        LOG.error(\n+          \"Unsupported procedure type {} found, please rollback your master to the old\" +\n+            \" version to finish them, and then try to upgrade again. The full procedure list: {}\",\n+          clazz, procs);\n+        throw new HBaseIOException(\"Unsupported procedure type \" + clazz + \" found\");\n+      }\n+    }\n+    // A special check for SCP, as we do not support RecoverMetaProcedure any more so we need to\n+    // make sure that no one will try to schedule it but SCP does have a state which will schedule\n+    // it.\n+    if (procsByType.getOrDefault(ServerCrashProcedure.class, Collections.emptyList()).stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjU3OTQ0Mg=="}, "originalCommit": {"oid": "bf753ae8a3bf098f542c05cf410b8d273836e7bf"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2226, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}