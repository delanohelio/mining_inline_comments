{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0MDc2MDM1", "number": 2616, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzo0ODoyN1rOE06ogg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzo1MDozN1rOE06sAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTIyMDUwOnYy", "diffSide": "RIGHT", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/io/TimeRange.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzo0ODoyN1rOHs6AOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjo1NzowMVrOHtHfqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg0OTcyMg==", "bodyText": "Probably this needs to be called out separately in the release notes as it is not binary-compatible. Shouldn't matter as it is introduced in major release, but probably worth it.", "url": "https://github.com/apache/hbase/pull/2616#discussion_r516849722", "createdAt": "2020-11-03T17:48:27Z", "author": {"login": "HorizonNet"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/io/TimeRange.java", "diffHunk": "@@ -18,24 +18,23 @@\n \n package org.apache.hadoop.hbase.io;\n \n-import org.apache.hadoop.hbase.util.Bytes;\n import org.apache.yetus.audience.InterfaceAudience;\n \n /**\n  * Represents an interval of version timestamps. Presumes timestamps between\n  * {@link #INITIAL_MIN_TIMESTAMP} and {@link #INITIAL_MAX_TIMESTAMP} only. Gets freaked out if\n  * passed a timestamp that is < {@link #INITIAL_MIN_TIMESTAMP},\n- * <p>\n+ * <p/>\n  * Evaluated according to minStamp &lt;= timestamp &lt; maxStamp or [minStamp,maxStamp) in interval\n  * notation.\n- * <p>\n+ * <p/>\n  * Can be returned and read by clients. Should not be directly created by clients. Thus, all\n  * constructors are purposely @InterfaceAudience.Private.\n- * <p>\n+ * <p/>\n  * Immutable. Thread-safe.\n  */\n @InterfaceAudience.Public\n-public class TimeRange {\n+public final class TimeRange {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f3f1169a9ceaee4c2064f5b614f5a5027cf59b5"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA3MDc2MQ==", "bodyText": "Will mention this in release note. We removed all the public constructors so it should be final...", "url": "https://github.com/apache/hbase/pull/2616#discussion_r517070761", "createdAt": "2020-11-04T02:57:01Z", "author": {"login": "Apache9"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/io/TimeRange.java", "diffHunk": "@@ -18,24 +18,23 @@\n \n package org.apache.hadoop.hbase.io;\n \n-import org.apache.hadoop.hbase.util.Bytes;\n import org.apache.yetus.audience.InterfaceAudience;\n \n /**\n  * Represents an interval of version timestamps. Presumes timestamps between\n  * {@link #INITIAL_MIN_TIMESTAMP} and {@link #INITIAL_MAX_TIMESTAMP} only. Gets freaked out if\n  * passed a timestamp that is < {@link #INITIAL_MIN_TIMESTAMP},\n- * <p>\n+ * <p/>\n  * Evaluated according to minStamp &lt;= timestamp &lt; maxStamp or [minStamp,maxStamp) in interval\n  * notation.\n- * <p>\n+ * <p/>\n  * Can be returned and read by clients. Should not be directly created by clients. Thus, all\n  * constructors are purposely @InterfaceAudience.Private.\n- * <p>\n+ * <p/>\n  * Immutable. Thread-safe.\n  */\n @InterfaceAudience.Public\n-public class TimeRange {\n+public final class TimeRange {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg0OTcyMg=="}, "originalCommit": {"oid": "7f3f1169a9ceaee4c2064f5b614f5a5027cf59b5"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzOTIyOTQ0OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Append.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzo1MDozN1rOHs6Fqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwMjo1NzoxOFrOHtHf5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg1MTExNQ==", "bodyText": "Seems to be unrelated to the actual change.", "url": "https://github.com/apache/hbase/pull/2616#discussion_r516851115", "createdAt": "2020-11-03T17:50:37Z", "author": {"login": "HorizonNet"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Append.java", "diffHunk": "@@ -162,10 +162,9 @@ public Append addColumn(byte[] family, byte[] qualifier, byte[] value) {\n \n   /**\n    * Add column and value to this Append operation.\n-   * @param cell\n    * @return This instance\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f3f1169a9ceaee4c2064f5b614f5a5027cf59b5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzA3MDgyMg==", "bodyText": "Just some minor fix on checkstyle.", "url": "https://github.com/apache/hbase/pull/2616#discussion_r517070822", "createdAt": "2020-11-04T02:57:18Z", "author": {"login": "Apache9"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Append.java", "diffHunk": "@@ -162,10 +162,9 @@ public Append addColumn(byte[] family, byte[] qualifier, byte[] value) {\n \n   /**\n    * Add column and value to this Append operation.\n-   * @param cell\n    * @return This instance\n    */\n-  @SuppressWarnings(\"unchecked\")\n+  @Override", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg1MTExNQ=="}, "originalCommit": {"oid": "7f3f1169a9ceaee4c2064f5b614f5a5027cf59b5"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2363, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}