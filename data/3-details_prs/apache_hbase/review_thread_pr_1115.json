{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMDExODI2", "number": 1115, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxODoxNjozM1rODceyjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMzo1Mzo1NVrODc0PNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTkxMTgyOnYy", "diffSide": "LEFT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSTableDescriptors.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxODoxNjozM1rOFki5Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxODoxNjozM1rOFki5Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2NDczMA==", "bodyText": "Looks like this constructor can have just these initializations:\n    this.fs = fs;\n    this.rootdir = rootdir;\n    this.fsreadonly = fsreadonly;\n    this.usecache = usecache;", "url": "https://github.com/apache/hbase/pull/1115#discussion_r373864730", "createdAt": "2020-02-02T18:16:33Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSTableDescriptors.java", "diffHunk": "@@ -153,7 +148,6 @@ public FSTableDescriptors(final Configuration conf, final FileSystem fs,\n         updateTableDescriptor(td);\n       }\n     }\n-    this.metaTableDescriptor = td;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e6964b3360593b805f2010814b066461e3481bb"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDMyNjk1OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestHBaseMetaEdit.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzoyMjo0MlrOFk5ZOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNzoyMjo0MlrOFk5ZOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDIzMzQwMQ==", "bodyText": "Nice test", "url": "https://github.com/apache/hbase/pull/1115#discussion_r374233401", "createdAt": "2020-02-03T17:22:42Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestHBaseMetaEdit.java", "diffHunk": "@@ -63,6 +63,23 @@ public void after() throws Exception {\n     UTIL.shutdownMiniCluster();\n   }\n \n+  // make sure that with every possible way, we get the same meta table descriptor.\n+  private TableDescriptor getMetaDescriptor() throws TableNotFoundException, IOException {\n+    Admin admin = UTIL.getAdmin();\n+    TableDescriptor get = admin.getDescriptor(TableName.META_TABLE_NAME);\n+    TableDescriptor list =\n+      admin.listTableDescriptors(true).stream().filter(td -> td.isMetaTable()).findAny().get();\n+    TableDescriptor listByName =\n+      admin.listTableDescriptors(Collections.singletonList(TableName.META_TABLE_NAME)).get(0);\n+    TableDescriptor listByNs =\n+      admin.listTableDescriptorsByNamespace(NamespaceDescriptor.SYSTEM_NAMESPACE_NAME).stream()\n+        .filter(td -> td.isMetaTable()).findAny().get();\n+    assertEquals(get, list);\n+    assertEquals(get, listByName);\n+    assertEquals(get, listByNs);\n+    return get;\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea986e5c04c96dc6284a03f9aa6d04b6a426465a"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNTQyNTgwOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSTableDescriptors.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMzo1Mzo1NVrOFlEB_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QyMzo1Mzo1NVrOFlEB_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDQwNzY3Nw==", "bodyText": "Just FYI, this change broke the error prone build.\nhttps://builds.apache.org/job/HBase%20Nightly/job/master/1618/artifact/output-general/patch-compile-root.txt\n[ERROR] /home/jenkins/jenkins-slave/workspace/HBase_Nightly_master@2/component/hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSTableDescriptors.java:[147,28] error: [ReturnValueIgnored] Return value of this method must be used\n(see https://errorprone.info/bugpattern/ReturnValueIgnored)\nDid you mean to remove this line?\n[INFO] 1 error\nYou can reproduce with \"mvn clean compile -DskipTests -PerrorProne\"", "url": "https://github.com/apache/hbase/pull/1115#discussion_r374407677", "createdAt": "2020-02-03T23:53:55Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/FSTableDescriptors.java", "diffHunk": "@@ -135,33 +130,30 @@ public FSTableDescriptors(final Configuration conf, final FileSystem fs,\n    *                     see HMaster#finishActiveMasterInitialization\n    *                     TODO: This is a workaround. Should remove this ugly code...\n    */\n-  public FSTableDescriptors(final Configuration conf, final FileSystem fs,\n-       final Path rootdir, final boolean fsreadonly, final boolean usecache,\n-       Function<TableDescriptorBuilder, TableDescriptorBuilder> metaObserver) throws IOException {\n+  public FSTableDescriptors(final Configuration conf, final FileSystem fs, final Path rootdir,\n+    final boolean fsreadonly, final boolean usecache,\n+    Function<TableDescriptorBuilder, TableDescriptorBuilder> metaObserver) throws IOException {\n     this.fs = fs;\n     this.rootdir = rootdir;\n     this.fsreadonly = fsreadonly;\n     this.usecache = usecache;\n-    TableDescriptor td = null;\n-    try {\n-      td = getTableDescriptorFromFs(fs, rootdir, TableName.META_TABLE_NAME);\n-    } catch (TableInfoMissingException e) {\n-      td = metaObserver == null? createMetaTableDescriptor(conf):\n-        metaObserver.apply(createMetaTableDescriptorBuilder(conf)).build();\n-      if (!fsreadonly) {\n+    if (!fsreadonly) {\n+      // see if we already have meta descriptor on fs. Write one if not.\n+      try {\n+        getTableDescriptorFromFs(fs, rootdir, TableName.META_TABLE_NAME);\n+      } catch (TableInfoMissingException e) {\n+        TableDescriptorBuilder builder = createMetaTableDescriptorBuilder(conf);\n+        if (metaObserver != null) {\n+          metaObserver.apply(builder);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea986e5c04c96dc6284a03f9aa6d04b6a426465a"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2195, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}