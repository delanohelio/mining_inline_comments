{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NDEyNjk2", "number": 1546, "title": "HBASE-24211: Create table is slow in large cluster when AccessController is enabled.", "bodyText": "Create table is slow in large cluster when AccessController is enabled.", "createdAt": "2020-04-18T00:41:41Z", "url": "https://github.com/apache/hbase/pull/1546", "merged": true, "mergeCommit": {"oid": "e6cc5eb2f0623f02eaa3542308fc3d82fd3abd9f"}, "closed": true, "closedAt": "2020-04-25T12:11:44Z", "author": {"login": "arshadmohammad"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYq6jbAH2gAyNDA1NDEyNjk2OmQxOTU2M2FiMWU4NWI3MWRhMzk1YzMxODNjNWM3MjNiMWQxOGMzNmU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaXTWgAFqTM5ODgwODk3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d19563ab1e85b71da395c3183c5c723b1d18c36e", "author": {"user": {"login": "arshadmohammad", "name": "Mohammad Arshad"}}, "url": "https://github.com/apache/hbase/commit/d19563ab1e85b71da395c3183c5c723b1d18c36e", "committedDate": "2020-04-18T00:40:14Z", "message": "HBASE-24211: Create table is slow in large cluster when AccessController is enabled."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTEwNzA3", "url": "https://github.com/apache/hbase/pull/1546#pullrequestreview-395910707", "createdAt": "2020-04-18T12:43:46Z", "commit": {"oid": "d19563ab1e85b71da395c3183c5c723b1d18c36e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxMjo0Mzo0N1rOGHqu0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxMjo0NTozMlrOGHqvvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MzMzMQ==", "bodyText": "returning Collections.emptyList() would be better", "url": "https://github.com/apache/hbase/pull/1546#discussion_r410693331", "createdAt": "2020-04-18T12:43:47Z", "author": {"login": "virajjasani"}, "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java", "diffHunk": "@@ -741,6 +741,10 @@ public static int getNumberOfChildren(ZKWatcher zkw, String znode)\n     if (nodes != null) {\n       List<NodeAndData> newNodes = new ArrayList<>();\n       for (String node : nodes) {\n+        if (Thread.interrupted()) {\n+          // Partial data should not be processed. Cancel processing by sending empty list.\n+          return new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d19563ab1e85b71da395c3183c5c723b1d18c36e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MzQ0NA==", "bodyText": "Please user {} for LOG param path", "url": "https://github.com/apache/hbase/pull/1546#discussion_r410693444", "createdAt": "2020-04-18T12:44:39Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java", "diffHunk": "@@ -185,25 +185,27 @@ public void run() {\n   public void nodeChildrenChanged(final String path) {\n     waitUntilStarted();\n     if (path.equals(aclZNode)) {\n-      try {\n-        final List<ZKUtil.NodeAndData> nodeList =\n-            ZKUtil.getChildDataAndWatchForNewChildren(watcher, aclZNode);\n-        // preempt any existing nodeChildrenChanged event processing\n-        if (childrenChangedFuture != null && !childrenChangedFuture.isDone()) {\n-          boolean cancelled = childrenChangedFuture.cancel(true);\n-          if (!cancelled) {\n-            // task may have finished between our check and attempted cancel, this is fine.\n-            if (! childrenChangedFuture.isDone()) {\n-              LOG.warn(\"Could not cancel processing node children changed event, \" +\n-                  \"please file a JIRA and attach logs if possible.\");\n-            }\n+      // preempt any existing nodeChildrenChanged event processing\n+      if (childrenChangedFuture != null && !childrenChangedFuture.isDone()) {\n+        boolean cancelled = childrenChangedFuture.cancel(true);\n+        if (!cancelled) {\n+          // task may have finished between our check and attempted cancel, this is fine.\n+          if (!childrenChangedFuture.isDone()) {\n+            LOG.warn(\"Could not cancel processing node children changed event, \"\n+              + \"please file a JIRA and attach logs if possible.\");\n           }\n         }\n-        childrenChangedFuture = asyncProcessNodeUpdate(() -> refreshNodes(nodeList));\n-      } catch (KeeperException ke) {\n-        LOG.error(\"Error reading data from zookeeper for path \"+path, ke);\n-        watcher.abort(\"ZooKeeper error get node children for path \"+path, ke);\n       }\n+      childrenChangedFuture = asyncProcessNodeUpdate(() -> {\n+        try {\n+          final List<ZKUtil.NodeAndData> nodeList =\n+            ZKUtil.getChildDataAndWatchForNewChildren(watcher, aclZNode);\n+          refreshNodes(nodeList);\n+        } catch (KeeperException ke) {\n+          LOG.error(\"Error reading data from zookeeper for path \" + path, ke);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d19563ab1e85b71da395c3183c5c723b1d18c36e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MzU2NQ==", "bodyText": "Or better create a string variable and use it for both LOG.error and abort message.", "url": "https://github.com/apache/hbase/pull/1546#discussion_r410693565", "createdAt": "2020-04-18T12:45:32Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/security/access/ZKPermissionWatcher.java", "diffHunk": "@@ -185,25 +185,27 @@ public void run() {\n   public void nodeChildrenChanged(final String path) {\n     waitUntilStarted();\n     if (path.equals(aclZNode)) {\n-      try {\n-        final List<ZKUtil.NodeAndData> nodeList =\n-            ZKUtil.getChildDataAndWatchForNewChildren(watcher, aclZNode);\n-        // preempt any existing nodeChildrenChanged event processing\n-        if (childrenChangedFuture != null && !childrenChangedFuture.isDone()) {\n-          boolean cancelled = childrenChangedFuture.cancel(true);\n-          if (!cancelled) {\n-            // task may have finished between our check and attempted cancel, this is fine.\n-            if (! childrenChangedFuture.isDone()) {\n-              LOG.warn(\"Could not cancel processing node children changed event, \" +\n-                  \"please file a JIRA and attach logs if possible.\");\n-            }\n+      // preempt any existing nodeChildrenChanged event processing\n+      if (childrenChangedFuture != null && !childrenChangedFuture.isDone()) {\n+        boolean cancelled = childrenChangedFuture.cancel(true);\n+        if (!cancelled) {\n+          // task may have finished between our check and attempted cancel, this is fine.\n+          if (!childrenChangedFuture.isDone()) {\n+            LOG.warn(\"Could not cancel processing node children changed event, \"\n+              + \"please file a JIRA and attach logs if possible.\");\n           }\n         }\n-        childrenChangedFuture = asyncProcessNodeUpdate(() -> refreshNodes(nodeList));\n-      } catch (KeeperException ke) {\n-        LOG.error(\"Error reading data from zookeeper for path \"+path, ke);\n-        watcher.abort(\"ZooKeeper error get node children for path \"+path, ke);\n       }\n+      childrenChangedFuture = asyncProcessNodeUpdate(() -> {\n+        try {\n+          final List<ZKUtil.NodeAndData> nodeList =\n+            ZKUtil.getChildDataAndWatchForNewChildren(watcher, aclZNode);\n+          refreshNodes(nodeList);\n+        } catch (KeeperException ke) {\n+          LOG.error(\"Error reading data from zookeeper for path \" + path, ke);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDY5MzQ0NA=="}, "originalCommit": {"oid": "d19563ab1e85b71da395c3183c5c723b1d18c36e"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "446560124c1f11dd111279eee745bd2470a7823b", "author": {"user": {"login": "arshadmohammad", "name": "Mohammad Arshad"}}, "url": "https://github.com/apache/hbase/commit/446560124c1f11dd111279eee745bd2470a7823b", "committedDate": "2020-04-18T14:48:48Z", "message": "Fixed review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1OTIyNDQy", "url": "https://github.com/apache/hbase/pull/1546#pullrequestreview-395922442", "createdAt": "2020-04-18T15:15:35Z", "commit": {"oid": "446560124c1f11dd111279eee745bd2470a7823b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxNToxNTozNVrOGHryTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxNToxNTozNVrOGHryTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMDYwNQ==", "bodyText": "@arshadmohammad have you seen this issue being the cause for create table being slow or this is an improvement over preempting any existing nodeChildrenChanged event processing (done in ZKPermissionWatcher)?\nBasically, when thread is interrupted and we return empty list, what could be the catch? Some incorrect decision could be taken by HMaster?", "url": "https://github.com/apache/hbase/pull/1546#discussion_r410710605", "createdAt": "2020-04-18T15:15:35Z", "author": {"login": "virajjasani"}, "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java", "diffHunk": "@@ -741,6 +741,10 @@ public static int getNumberOfChildren(ZKWatcher zkw, String znode)\n     if (nodes != null) {\n       List<NodeAndData> newNodes = new ArrayList<>();\n       for (String node : nodes) {\n+        if (Thread.interrupted()) {\n+          // Partial data should not be processed. Cancel processing by sending empty list.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "446560124c1f11dd111279eee745bd2470a7823b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NTQ0MDY1", "url": "https://github.com/apache/hbase/pull/1546#pullrequestreview-397544065", "createdAt": "2020-04-21T17:58:04Z", "commit": {"oid": "446560124c1f11dd111279eee745bd2470a7823b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzo1ODowNFrOGJRLbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNzo1ODowNFrOGJRLbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjM3MTgyMA==", "bodyText": "Oh okk, while looking into asyncProcessNodeUpdate(), I was actually referring to the current code and not your patch, hence I didn't find call stack from ZKPermissionWatcher -> ZKUtil#getChildDataAndWatchForNewChildren().\nGot it, all good.\nThanks", "url": "https://github.com/apache/hbase/pull/1546#discussion_r412371820", "createdAt": "2020-04-21T17:58:04Z", "author": {"login": "virajjasani"}, "path": "hbase-zookeeper/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java", "diffHunk": "@@ -741,6 +741,10 @@ public static int getNumberOfChildren(ZKWatcher zkw, String znode)\n     if (nodes != null) {\n       List<NodeAndData> newNodes = new ArrayList<>();\n       for (String node : nodes) {\n+        if (Thread.interrupted()) {\n+          // Partial data should not be processed. Cancel processing by sending empty list.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDcxMDYwNQ=="}, "originalCommit": {"oid": "446560124c1f11dd111279eee745bd2470a7823b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4ODA4OTcz", "url": "https://github.com/apache/hbase/pull/1546#pullrequestreview-398808973", "createdAt": "2020-04-23T06:57:04Z", "commit": {"oid": "446560124c1f11dd111279eee745bd2470a7823b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2179, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}