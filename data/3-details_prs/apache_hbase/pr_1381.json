{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NzI1NzYz", "number": 1381, "title": "HBASE-23678 : Builder API for version management - setVersionsWithTim\u2026", "bodyText": "\u2026eToLive", "createdAt": "2020-03-30T15:27:06Z", "url": "https://github.com/apache/hbase/pull/1381", "merged": true, "mergeCommit": {"oid": "834f89da7b1d793b850d712af43943d6ee81cacf"}, "closed": true, "closedAt": "2020-04-01T10:46:41Z", "author": {"login": "virajjasani"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSwK3lAH2gAyMzk1NzI1NzYzOjkzZGU3ZGQ1ZTA4YmM2M2ExYTUzZDg5YjFkOGZkYjBmYWU2OGM5ZjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTSc7gAH2gAyMzk1NzI1NzYzOmU4Yzc0NjY0OGQ1ZDQxNzZlYmE0YWZiMDEyYzE5YmMzZmZkNWI3OGY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "93de7dd5e08bc63a1a53d89b1d8fdb0fae68c9f1", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/93de7dd5e08bc63a1a53d89b1d8fdb0fae68c9f1", "committedDate": "2020-03-30T15:24:02Z", "message": "HBASE-23678 : Builder API for version management - setVersionsWithTimeToLive"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0OTcyNTA4", "url": "https://github.com/apache/hbase/pull/1381#pullrequestreview-384972508", "createdAt": "2020-03-31T17:55:56Z", "commit": {"oid": "93de7dd5e08bc63a1a53d89b1d8fdb0fae68c9f1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNzo1NTo1N1rOF-hiAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNzo1NTo1N1rOF-hiAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTEwNTQwOQ==", "bodyText": "extra space line", "url": "https://github.com/apache/hbase/pull/1381#discussion_r401105409", "createdAt": "2020-03-31T17:55:57Z", "author": {"login": "xcangCRM"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestMinVersions.java", "diffHunk": "@@ -528,80 +530,147 @@ public void testMinVersionsWithKeepDeletedCellsTTL() throws Exception {\n     int ttl = 4;\n     ColumnFamilyDescriptor cfd =\n       ColumnFamilyDescriptorBuilder.newBuilder(c0)\n-        .setMinVersions(2).setMaxVersions(Integer.MAX_VALUE).setTimeToLive(ttl).\n-        setKeepDeletedCells(KeepDeletedCells.TTL).build();\n+        .setVersionsWithTimeToLive(ttl, 2).build();\n+    verifyVersionedCellKeyValues(ttl, cfd);\n+\n+    cfd = ColumnFamilyDescriptorBuilder.newBuilder(c0)\n+      .setMinVersions(2)\n+      .setMaxVersions(Integer.MAX_VALUE)\n+      .setTimeToLive(ttl)\n+      .setKeepDeletedCells(KeepDeletedCells.TTL)\n+      .build();\n+    verifyVersionedCellKeyValues(ttl, cfd);\n+  }\n \n+  private void verifyVersionedCellKeyValues(int ttl, ColumnFamilyDescriptor cfd)\n+      throws IOException {\n     TableDescriptor htd = TableDescriptorBuilder.\n       newBuilder(TableName.valueOf(name.getMethodName())).setColumnFamily(cfd).build();\n \n     HRegion region = hbu.createLocalHRegion(htd, null, null);\n \n-    long startTS = EnvironmentEdgeManager.currentTime();\n-    ManualEnvironmentEdge injectEdge = new ManualEnvironmentEdge();\n-    injectEdge.setValue(startTS);\n-    EnvironmentEdgeManager.injectEdge(injectEdge);\n+    try {\n+      long startTS = EnvironmentEdgeManager.currentTime();\n+      ManualEnvironmentEdge injectEdge = new ManualEnvironmentEdge();\n+      injectEdge.setValue(startTS);\n+      EnvironmentEdgeManager.injectEdge(injectEdge);\n+\n+      long ts = startTS - 2000;\n+      putFourVersions(region, ts);\n+\n+      Get get;\n+      Result result;\n+\n+      //check we can still see all versions before compaction\n+      get = new Get(T1);\n+      get.readAllVersions();\n+      get.setTimeRange(0, ts);\n+      result = region.get(get);\n+      checkResult(result, c0, T4, T3, T2, T1);\n+\n+      region.flush(true);\n+      region.compact(true);\n+      Assert.assertEquals(startTS, EnvironmentEdgeManager.currentTime());\n+      long expiredTime = EnvironmentEdgeManager.currentTime() - ts - 4;\n+      Assert.assertTrue(\"TTL for T1 has expired\", expiredTime < (ttl * 1000));\n+      //check that nothing was purged yet\n+      verifyBeforeCompaction(region, ts);\n+\n+      injectEdge.incValue(ttl * 1000);\n+\n+      region.flush(true);\n+      region.compact(true);\n+      verifyAfterTtl(region, ts);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93de7dd5e08bc63a1a53d89b1d8fdb0fae68c9f1"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8c746648d5d4176eba4afb012c19bc3ffd5b78f", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/e8c746648d5d4176eba4afb012c19bc3ffd5b78f", "committedDate": "2020-04-01T07:20:32Z", "message": "removing extra lines"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2513, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}