{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MzQxNjEw", "number": 2476, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDoxMTo0MVrOEqKALA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDoyOTowM1rOEqKIMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjM5NTMyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStateStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDoxMTo0MVrOHcNK-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDoxMTo0MVrOHcNK-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMzNzk3OA==", "bodyText": "If old and new  replica counts are equal, we just pass through -- that seems right.", "url": "https://github.com/apache/hbase/pull/2476#discussion_r499337978", "createdAt": "2020-10-05T04:11:41Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStateStore.java", "diffHunk": "@@ -545,6 +547,83 @@ public void overwriteRegions(List<RegionInfo> regionInfos, int regionReplication\n     LOG.debug(\"Overwritten regions: {} \", regionInfos);\n   }\n \n+  /**\n+   * Update region replicas if necessary by adding new replica locations or removing unused region\n+   * replicas\n+   */\n+  public void updateRegionReplicas(TableName tableName, int oldReplicaCount, int newReplicaCount)\n+    throws IOException {\n+    if (newReplicaCount < oldReplicaCount) {\n+      removeRegionReplicas(tableName, oldReplicaCount, newReplicaCount);\n+    } else if (newReplicaCount > oldReplicaCount) {\n+      addRegionReplicas(tableName, oldReplicaCount, newReplicaCount);\n+    }\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7352590896fb4f102667b9e19425334861d46b6"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjM5OTE5OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStateStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDoxNDozMFrOHcNNEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDoxNDozMFrOHcNNEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTMzODUxMw==", "bodyText": "Not your fault but this is ugly... Pity replica columns were not tied together w/ a prefix (or in their on column family). For later.", "url": "https://github.com/apache/hbase/pull/2476#discussion_r499338513", "createdAt": "2020-10-05T04:14:30Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStateStore.java", "diffHunk": "@@ -545,6 +547,83 @@ public void overwriteRegions(List<RegionInfo> regionInfos, int regionReplication\n     LOG.debug(\"Overwritten regions: {} \", regionInfos);\n   }\n \n+  /**\n+   * Update region replicas if necessary by adding new replica locations or removing unused region\n+   * replicas\n+   */\n+  public void updateRegionReplicas(TableName tableName, int oldReplicaCount, int newReplicaCount)\n+    throws IOException {\n+    if (newReplicaCount < oldReplicaCount) {\n+      removeRegionReplicas(tableName, oldReplicaCount, newReplicaCount);\n+    } else if (newReplicaCount > oldReplicaCount) {\n+      addRegionReplicas(tableName, oldReplicaCount, newReplicaCount);\n+    }\n+  }\n+\n+  private Scan getScanForUpdateRegionReplicas(TableName tableName) {\n+    return MetaTableAccessor.getScanForTableName(master.getConfiguration(), tableName)\n+      .addColumn(HConstants.CATALOG_FAMILY, HConstants.REGIONINFO_QUALIFIER);\n+  }\n+\n+  private void removeRegionReplicas(TableName tableName, int oldReplicaCount, int newReplicaCount)\n+    throws IOException {\n+    Scan scan = getScanForUpdateRegionReplicas(tableName);\n+    List<Delete> deletes = new ArrayList<>();\n+    long now = EnvironmentEdgeManager.currentTime();\n+    try (Table metaTable = getMetaTable(); ResultScanner scanner = metaTable.getScanner(scan)) {\n+      for (;;) {\n+        Result result = scanner.next();\n+        if (result == null) {\n+          break;\n+        }\n+        RegionInfo primaryRegionInfo = CatalogFamilyFormat.getRegionInfo(result);\n+        if (primaryRegionInfo == null || primaryRegionInfo.isSplitParent()) {\n+          continue;\n+        }\n+        Delete delete = new Delete(result.getRow());\n+        for (int i = newReplicaCount; i < oldReplicaCount; i++) {\n+          delete.addColumns(HConstants.CATALOG_FAMILY, CatalogFamilyFormat.getServerColumn(i), now);\n+          delete.addColumns(HConstants.CATALOG_FAMILY, CatalogFamilyFormat.getSeqNumColumn(i), now);\n+          delete.addColumns(HConstants.CATALOG_FAMILY, CatalogFamilyFormat.getStartCodeColumn(i),\n+            now);\n+          delete.addColumns(HConstants.CATALOG_FAMILY, CatalogFamilyFormat.getServerNameColumn(i),\n+            now);\n+          delete.addColumns(HConstants.CATALOG_FAMILY, CatalogFamilyFormat.getRegionStateColumn(i),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7352590896fb4f102667b9e19425334861d46b6"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjQxNTg3OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/DeleteTableProcedure.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNDoyOTowM1rOHcNWhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMzoyOTozNFrOHcdGiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM0MDkzMg==", "bodyText": "You don't want to make this a try (Table metaTalbe = env.getMaster....) .. instead so it gets auto-closed? (nit)", "url": "https://github.com/apache/hbase/pull/2476#discussion_r499340932", "createdAt": "2020-10-05T04:29:03Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/DeleteTableProcedure.java", "diffHunk": "@@ -357,22 +358,29 @@ protected static void deleteFromFs(final MasterProcedureEnv env,\n   /**\n    * There may be items for this table still up in hbase:meta in the case where the info:regioninfo\n    * column was empty because of some write error. Remove ALL rows from hbase:meta that have to do\n-   * with this table. See HBASE-12980.\n+   * with this table.\n+   * <p/>\n+   * See HBASE-12980.\n    */\n   private static void cleanRegionsInMeta(final MasterProcedureEnv env, final TableName tableName)\n-      throws IOException {\n-    Connection connection = env.getMasterServices().getConnection();\n-    Scan tableScan = MetaTableAccessor.getScanForTableName(connection, tableName);\n-    try (Table metaTable = connection.getTable(TableName.META_TABLE_NAME)) {\n-      List<Delete> deletes = new ArrayList<>();\n-      try (ResultScanner resScanner = metaTable.getScanner(tableScan)) {\n-        for (Result result : resScanner) {\n-          deletes.add(new Delete(result.getRow()));\n+    throws IOException {\n+    Scan tableScan = MetaTableAccessor.getScanForTableName(env.getMasterConfiguration(), tableName)\n+      .setFilter(new KeyOnlyFilter());\n+    long now = EnvironmentEdgeManager.currentTime();\n+    List<Delete> deletes = new ArrayList<>();\n+    try (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7352590896fb4f102667b9e19425334861d46b6"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM0MTAzMA==", "bodyText": "Ditto on the ResultScanner?", "url": "https://github.com/apache/hbase/pull/2476#discussion_r499341030", "createdAt": "2020-10-05T04:29:38Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/DeleteTableProcedure.java", "diffHunk": "@@ -357,22 +358,29 @@ protected static void deleteFromFs(final MasterProcedureEnv env,\n   /**\n    * There may be items for this table still up in hbase:meta in the case where the info:regioninfo\n    * column was empty because of some write error. Remove ALL rows from hbase:meta that have to do\n-   * with this table. See HBASE-12980.\n+   * with this table.\n+   * <p/>\n+   * See HBASE-12980.\n    */\n   private static void cleanRegionsInMeta(final MasterProcedureEnv env, final TableName tableName)\n-      throws IOException {\n-    Connection connection = env.getMasterServices().getConnection();\n-    Scan tableScan = MetaTableAccessor.getScanForTableName(connection, tableName);\n-    try (Table metaTable = connection.getTable(TableName.META_TABLE_NAME)) {\n-      List<Delete> deletes = new ArrayList<>();\n-      try (ResultScanner resScanner = metaTable.getScanner(tableScan)) {\n-        for (Result result : resScanner) {\n-          deletes.add(new Delete(result.getRow()));\n+    throws IOException {\n+    Scan tableScan = MetaTableAccessor.getScanForTableName(env.getMasterConfiguration(), tableName)\n+      .setFilter(new KeyOnlyFilter());\n+    long now = EnvironmentEdgeManager.currentTime();\n+    List<Delete> deletes = new ArrayList<>();\n+    try (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM0MDkzMg=="}, "originalCommit": {"oid": "d7352590896fb4f102667b9e19425334861d46b6"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTU5ODk4NQ==", "bodyText": "They are in the try-with-resources section? This is a '(' not a '{'...", "url": "https://github.com/apache/hbase/pull/2476#discussion_r499598985", "createdAt": "2020-10-05T13:29:34Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/procedure/DeleteTableProcedure.java", "diffHunk": "@@ -357,22 +358,29 @@ protected static void deleteFromFs(final MasterProcedureEnv env,\n   /**\n    * There may be items for this table still up in hbase:meta in the case where the info:regioninfo\n    * column was empty because of some write error. Remove ALL rows from hbase:meta that have to do\n-   * with this table. See HBASE-12980.\n+   * with this table.\n+   * <p/>\n+   * See HBASE-12980.\n    */\n   private static void cleanRegionsInMeta(final MasterProcedureEnv env, final TableName tableName)\n-      throws IOException {\n-    Connection connection = env.getMasterServices().getConnection();\n-    Scan tableScan = MetaTableAccessor.getScanForTableName(connection, tableName);\n-    try (Table metaTable = connection.getTable(TableName.META_TABLE_NAME)) {\n-      List<Delete> deletes = new ArrayList<>();\n-      try (ResultScanner resScanner = metaTable.getScanner(tableScan)) {\n-        for (Result result : resScanner) {\n-          deletes.add(new Delete(result.getRow()));\n+    throws IOException {\n+    Scan tableScan = MetaTableAccessor.getScanForTableName(env.getMasterConfiguration(), tableName)\n+      .setFilter(new KeyOnlyFilter());\n+    long now = EnvironmentEdgeManager.currentTime();\n+    List<Delete> deletes = new ArrayList<>();\n+    try (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM0MDkzMg=="}, "originalCommit": {"oid": "d7352590896fb4f102667b9e19425334861d46b6"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2538, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}