{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5ODY0Nzc1", "number": 2077, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNDowMjozOVrOEO9D_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzoyODoxOFrOEQuZOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTE1OTY1OnYy", "diffSide": "LEFT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNDowMjozOVrOGyZTjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwODo0NzoxMFrOGyhOUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NjU5MQ==", "bodyText": "Should be compatible with the old ZK impl. Cannot remove them directly?", "url": "https://github.com/apache/hbase/pull/2077#discussion_r455496591", "createdAt": "2020-07-16T04:02:39Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -148,27 +149,30 @@ public boolean isAborted() {\n     return false;\n   }\n \n+  /**\n+   * Get the connection to peer cluster\n+   * @return connection to peer cluster\n+   * @throws IOException\n+   */\n+  protected synchronized Connection getPeerConnection() throws IOException {\n+    if (peerConnection == null) {\n+      peerConnection = ConnectionFactory.createConnection(ctx.getConfiguration());\n+    }\n+    return peerConnection;\n+  }\n+\n   /**\n    * Get the list of all the region servers from the specified peer\n-   * @param zkw zk connection to use\n    * @return list of region server addresses or an empty list if the slave is unavailable\n    */\n-  protected static List<ServerName> fetchSlavesAddresses(ZKWatcher zkw)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c06e150a5d065c3865e9335c611db61dc042572"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTYyNjMyMQ==", "bodyText": "OK\uff0ctry new impl firstly and old ZK impl secondly, is that OK?", "url": "https://github.com/apache/hbase/pull/2077#discussion_r455626321", "createdAt": "2020-07-16T08:47:10Z", "author": {"login": "ddupg"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -148,27 +149,30 @@ public boolean isAborted() {\n     return false;\n   }\n \n+  /**\n+   * Get the connection to peer cluster\n+   * @return connection to peer cluster\n+   * @throws IOException\n+   */\n+  protected synchronized Connection getPeerConnection() throws IOException {\n+    if (peerConnection == null) {\n+      peerConnection = ConnectionFactory.createConnection(ctx.getConfiguration());\n+    }\n+    return peerConnection;\n+  }\n+\n   /**\n    * Get the list of all the region servers from the specified peer\n-   * @param zkw zk connection to use\n    * @return list of region server addresses or an empty list if the slave is unavailable\n    */\n-  protected static List<ServerName> fetchSlavesAddresses(ZKWatcher zkw)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NjU5MQ=="}, "originalCommit": {"oid": "7c06e150a5d065c3865e9335c611db61dc042572"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1OTcyNzk0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxNzoyODoxOFrOG1CbZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjo1MDoxNlrOG2k0iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NzQ5Mg==", "bodyText": "Would it be interesting to also add a config flag allowing 3+ versions to optionally still use ZK?", "url": "https://github.com/apache/hbase/pull/2077#discussion_r458267492", "createdAt": "2020-07-21T17:28:18Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -87,8 +108,24 @@ public void stop() {\n   }\n \n   @Override\n-  protected void doStart() {\n+  protected synchronized void doStart() {\n     try {\n+      try (Admin admin = getPeerConnection().getAdmin()) {\n+        String version = admin.getClusterMetrics().getHBaseVersion();\n+        LOG.info(\"Peer cluster version is {} for peer {}\", version, ctx.getPeerId());\n+        if (Integer.parseInt(version.split(\"\\\\.\")[0]) >= 3) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "955791ed0ddbcda4f48f753ea085203723a9be2c"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODUyMDAzOA==", "bodyText": "Thanks @wchevreuil for reviewing.\nReplicationSinkManager.chooseSinks will be called to re-fetch the sinks when HBaseInterClusterReplicationEndpoint.replicate catches ConnectException or UnknownHostException, It's same as before.\nAnd I've added a config \"hbase.replication.fetch.servers.usezk\" to optionally still use ZK impl.", "url": "https://github.com/apache/hbase/pull/2077#discussion_r458520038", "createdAt": "2020-07-22T04:00:09Z", "author": {"login": "ddupg"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -87,8 +108,24 @@ public void stop() {\n   }\n \n   @Override\n-  protected void doStart() {\n+  protected synchronized void doStart() {\n     try {\n+      try (Admin admin = getPeerConnection().getAdmin()) {\n+        String version = admin.getClusterMetrics().getHBaseVersion();\n+        LOG.info(\"Peer cluster version is {} for peer {}\", version, ctx.getPeerId());\n+        if (Integer.parseInt(version.split(\"\\\\.\")[0]) >= 3) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NzQ5Mg=="}, "originalCommit": {"oid": "955791ed0ddbcda4f48f753ea085203723a9be2c"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODY2ODc5OQ==", "bodyText": "ReplicationSinkManager.chooseSinks will be called to re-fetch the sinks when HBaseInterClusterReplicationEndpoint.replicate catches ConnectException or UnknownHostException, It's same as before.\n\nYeah, haven't looked at the outer catch from replicate. Another thought them is if we really need the new chore? I wonder how effective it would really be to avoid trying stale sinks.", "url": "https://github.com/apache/hbase/pull/2077#discussion_r458668799", "createdAt": "2020-07-22T09:42:17Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -87,8 +108,24 @@ public void stop() {\n   }\n \n   @Override\n-  protected void doStart() {\n+  protected synchronized void doStart() {\n     try {\n+      try (Admin admin = getPeerConnection().getAdmin()) {\n+        String version = admin.getClusterMetrics().getHBaseVersion();\n+        LOG.info(\"Peer cluster version is {} for peer {}\", version, ctx.getPeerId());\n+        if (Integer.parseInt(version.split(\"\\\\.\")[0]) >= 3) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NzQ5Mg=="}, "originalCommit": {"oid": "955791ed0ddbcda4f48f753ea085203723a9be2c"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg3OTU2Mw==", "bodyText": "Another thought them is if we really need the new chore? I wonder how effective it would really be to avoid trying stale sinks.\n\nThank @wchevreuil  for thinking about this.\nI had a thought, there is some differences between regionServers stored in HBaseReplicationEndpoint and sinks stored in ReplicationSinkManager. The latter is a random part of the former. The new chore can remove abandoned servers and discover new servers. If there is no such chore, new servers can't be sinks unless exceptions happen due to RSs crash.", "url": "https://github.com/apache/hbase/pull/2077#discussion_r459879563", "createdAt": "2020-07-24T06:50:16Z", "author": {"login": "ddupg"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/HBaseReplicationEndpoint.java", "diffHunk": "@@ -87,8 +108,24 @@ public void stop() {\n   }\n \n   @Override\n-  protected void doStart() {\n+  protected synchronized void doStart() {\n     try {\n+      try (Admin admin = getPeerConnection().getAdmin()) {\n+        String version = admin.getClusterMetrics().getHBaseVersion();\n+        LOG.info(\"Peer cluster version is {} for peer {}\", version, ctx.getPeerId());\n+        if (Integer.parseInt(version.split(\"\\\\.\")[0]) >= 3) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODI2NzQ5Mg=="}, "originalCommit": {"oid": "955791ed0ddbcda4f48f753ea085203723a9be2c"}, "originalPosition": 65}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2804, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}