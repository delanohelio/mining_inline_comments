{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MDQ3NDY4", "number": 1840, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOToxOTowMlrOECElNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOToyMTo0N1rOECEo_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjA3NjcxOnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/RegionInfoBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOToxOTowMlrOGeTWyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOToxOTowMlrOGeTWyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyNzU5Mg==", "bodyText": "This marked as IA.Private. Can remove this directly?", "url": "https://github.com/apache/hbase/pull/1840#discussion_r434427592", "createdAt": "2020-06-03T09:19:02Z", "author": {"login": "infraio"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/RegionInfoBuilder.java", "diffHunk": "@@ -115,14 +109,18 @@ public RegionInfoBuilder setOffline(boolean offLine) {\n     return this;\n   }\n \n+  /**\n+   * @deprecated Since 2.3.0, will be removed in 4.0.0. Calling this method will have no effect as\n+   *             the encoded name will be generated by region name.\n+   */\n+  @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "791658770a70d8c489efd30d39d411df54e8961b"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjA4Mzg3OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/shaded/protobuf/ProtobufUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOToyMDo1OVrOGeTbdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOTo1Njo0N1rOGeUvrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyODc4OA==", "bodyText": "When this happen?", "url": "https://github.com/apache/hbase/pull/1840#discussion_r434428788", "createdAt": "2020-06-03T09:20:59Z", "author": {"login": "infraio"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/shaded/protobuf/ProtobufUtil.java", "diffHunk": "@@ -3355,8 +3354,10 @@ public static String toLockJson(List<LockServiceProtos.LockedResource> lockedRes\n     if (proto.hasOffline()) {\n       rib.setOffline(proto.getOffline());\n     }\n-    if (proto.hasRegionEncodedName()) {\n-      rib.setEncodedName(proto.getRegionEncodedName());\n+    org.apache.hadoop.hbase.client.RegionInfo ri = rib.build();\n+    if (proto.hasRegionEncodedName() && !proto.getRegionEncodedName().equals(ri.getEncodedName())) {\n+      LOG.warn(\"The converted region info is {}, but the encoded name in proto is {}\", ri,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "791658770a70d8c489efd30d39d411df54e8961b"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ1MDM1MQ==", "bodyText": "The proto could be recevied from network so there is no guarantee that this will not happen?", "url": "https://github.com/apache/hbase/pull/1840#discussion_r434450351", "createdAt": "2020-06-03T09:56:47Z", "author": {"login": "Apache9"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/shaded/protobuf/ProtobufUtil.java", "diffHunk": "@@ -3355,8 +3354,10 @@ public static String toLockJson(List<LockServiceProtos.LockedResource> lockedRes\n     if (proto.hasOffline()) {\n       rib.setOffline(proto.getOffline());\n     }\n-    if (proto.hasRegionEncodedName()) {\n-      rib.setEncodedName(proto.getRegionEncodedName());\n+    org.apache.hadoop.hbase.client.RegionInfo ri = rib.build();\n+    if (proto.hasRegionEncodedName() && !proto.getRegionEncodedName().equals(ri.getEncodedName())) {\n+      LOG.warn(\"The converted region info is {}, but the encoded name in proto is {}\", ri,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyODc4OA=="}, "originalCommit": {"oid": "791658770a70d8c489efd30d39d411df54e8961b"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjA4NjM5OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionInfoBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwOToyMTo0N1rOGeTdLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDozNTowOFrOGeWA0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyOTIzMQ==", "bodyText": "Add more test case?", "url": "https://github.com/apache/hbase/pull/1840#discussion_r434429231", "createdAt": "2020-06-03T09:21:47Z", "author": {"login": "infraio"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionInfoBuilder.java", "diffHunk": "@@ -302,30 +283,28 @@ public void testConvert() {\n     HBaseProtos.RegionInfo info = HBaseProtos.RegionInfo.newBuilder()\n       .setTableName(HBaseProtos.TableName.newBuilder()\n         .setQualifier(UnsafeByteOperations.unsafeWrap(tableName.getQualifier()))\n-        .setNamespace(UnsafeByteOperations.unsafeWrap(tableName.getNamespace()))\n-        .build())\n+        .setNamespace(UnsafeByteOperations.unsafeWrap(tableName.getNamespace())).build())\n       .setStartKey(UnsafeByteOperations.unsafeWrap(startKey))\n-      .setEndKey(UnsafeByteOperations.unsafeWrap(endKey))\n-      .setSplit(split)\n-      .setRegionId(regionId)\n+      .setEndKey(UnsafeByteOperations.unsafeWrap(endKey)).setSplit(split).setRegionId(regionId)\n       .build();\n \n     convertedRi = ProtobufUtil.toRegionInfo(info);\n-    RegionInfo expectedRi = RegionInfoBuilder.newBuilder(tableName)\n-            .setStartKey(startKey)\n-            .setEndKey(endKey)\n-            .setSplit(split)\n-            .setRegionId(regionId)\n-            .setReplicaId(0).build();\n+    RegionInfo expectedRi = RegionInfoBuilder.newBuilder(tableName).setStartKey(startKey)\n+      .setEndKey(endKey).setSplit(split).setRegionId(regionId).setReplicaId(0).build();\n \n     assertEquals(expectedRi, convertedRi);\n   }\n \n-  // Duplicated method in TestRegionInfoDisplay too.\n-  private HRegionInfo convert(RegionInfo ri) {\n-    HRegionInfo hri = new HRegionInfo(\n-    ri.getTable(), ri.getStartKey(), ri.getEndKey(), ri.isSplit(), ri.getRegionId());\n-    hri.setOffline(ri.isOffline());\n-    return hri;\n+  @Test\n+  public void testNewBuilderWithRegionInfo() {\n+    RegionInfo ri = RegionInfoBuilder.newBuilder(name.getTableName()).build();\n+    RegionInfo ri2 = RegionInfoBuilder.newBuilder(ri).build();\n+    assertEquals(ri, ri2);\n+\n+    // make sure that the region name and encoded name are changed, see HBASE-24500 for more\n+    // details.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "791658770a70d8c489efd30d39d411df54e8961b"}, "originalPosition": 312}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ1MDY2OQ==", "bodyText": "For example? I think this is enough?", "url": "https://github.com/apache/hbase/pull/1840#discussion_r434450669", "createdAt": "2020-06-03T09:57:21Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionInfoBuilder.java", "diffHunk": "@@ -302,30 +283,28 @@ public void testConvert() {\n     HBaseProtos.RegionInfo info = HBaseProtos.RegionInfo.newBuilder()\n       .setTableName(HBaseProtos.TableName.newBuilder()\n         .setQualifier(UnsafeByteOperations.unsafeWrap(tableName.getQualifier()))\n-        .setNamespace(UnsafeByteOperations.unsafeWrap(tableName.getNamespace()))\n-        .build())\n+        .setNamespace(UnsafeByteOperations.unsafeWrap(tableName.getNamespace())).build())\n       .setStartKey(UnsafeByteOperations.unsafeWrap(startKey))\n-      .setEndKey(UnsafeByteOperations.unsafeWrap(endKey))\n-      .setSplit(split)\n-      .setRegionId(regionId)\n+      .setEndKey(UnsafeByteOperations.unsafeWrap(endKey)).setSplit(split).setRegionId(regionId)\n       .build();\n \n     convertedRi = ProtobufUtil.toRegionInfo(info);\n-    RegionInfo expectedRi = RegionInfoBuilder.newBuilder(tableName)\n-            .setStartKey(startKey)\n-            .setEndKey(endKey)\n-            .setSplit(split)\n-            .setRegionId(regionId)\n-            .setReplicaId(0).build();\n+    RegionInfo expectedRi = RegionInfoBuilder.newBuilder(tableName).setStartKey(startKey)\n+      .setEndKey(endKey).setSplit(split).setRegionId(regionId).setReplicaId(0).build();\n \n     assertEquals(expectedRi, convertedRi);\n   }\n \n-  // Duplicated method in TestRegionInfoDisplay too.\n-  private HRegionInfo convert(RegionInfo ri) {\n-    HRegionInfo hri = new HRegionInfo(\n-    ri.getTable(), ri.getStartKey(), ri.getEndKey(), ri.isSplit(), ri.getRegionId());\n-    hri.setOffline(ri.isOffline());\n-    return hri;\n+  @Test\n+  public void testNewBuilderWithRegionInfo() {\n+    RegionInfo ri = RegionInfoBuilder.newBuilder(name.getTableName()).build();\n+    RegionInfo ri2 = RegionInfoBuilder.newBuilder(ri).build();\n+    assertEquals(ri, ri2);\n+\n+    // make sure that the region name and encoded name are changed, see HBASE-24500 for more\n+    // details.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyOTIzMQ=="}, "originalCommit": {"oid": "791658770a70d8c489efd30d39d411df54e8961b"}, "originalPosition": 312}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ3MTEyMQ==", "bodyText": "As you said on the issue desc, set different startkey or endkey?", "url": "https://github.com/apache/hbase/pull/1840#discussion_r434471121", "createdAt": "2020-06-03T10:35:08Z", "author": {"login": "infraio"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestRegionInfoBuilder.java", "diffHunk": "@@ -302,30 +283,28 @@ public void testConvert() {\n     HBaseProtos.RegionInfo info = HBaseProtos.RegionInfo.newBuilder()\n       .setTableName(HBaseProtos.TableName.newBuilder()\n         .setQualifier(UnsafeByteOperations.unsafeWrap(tableName.getQualifier()))\n-        .setNamespace(UnsafeByteOperations.unsafeWrap(tableName.getNamespace()))\n-        .build())\n+        .setNamespace(UnsafeByteOperations.unsafeWrap(tableName.getNamespace())).build())\n       .setStartKey(UnsafeByteOperations.unsafeWrap(startKey))\n-      .setEndKey(UnsafeByteOperations.unsafeWrap(endKey))\n-      .setSplit(split)\n-      .setRegionId(regionId)\n+      .setEndKey(UnsafeByteOperations.unsafeWrap(endKey)).setSplit(split).setRegionId(regionId)\n       .build();\n \n     convertedRi = ProtobufUtil.toRegionInfo(info);\n-    RegionInfo expectedRi = RegionInfoBuilder.newBuilder(tableName)\n-            .setStartKey(startKey)\n-            .setEndKey(endKey)\n-            .setSplit(split)\n-            .setRegionId(regionId)\n-            .setReplicaId(0).build();\n+    RegionInfo expectedRi = RegionInfoBuilder.newBuilder(tableName).setStartKey(startKey)\n+      .setEndKey(endKey).setSplit(split).setRegionId(regionId).setReplicaId(0).build();\n \n     assertEquals(expectedRi, convertedRi);\n   }\n \n-  // Duplicated method in TestRegionInfoDisplay too.\n-  private HRegionInfo convert(RegionInfo ri) {\n-    HRegionInfo hri = new HRegionInfo(\n-    ri.getTable(), ri.getStartKey(), ri.getEndKey(), ri.isSplit(), ri.getRegionId());\n-    hri.setOffline(ri.isOffline());\n-    return hri;\n+  @Test\n+  public void testNewBuilderWithRegionInfo() {\n+    RegionInfo ri = RegionInfoBuilder.newBuilder(name.getTableName()).build();\n+    RegionInfo ri2 = RegionInfoBuilder.newBuilder(ri).build();\n+    assertEquals(ri, ri2);\n+\n+    // make sure that the region name and encoded name are changed, see HBASE-24500 for more\n+    // details.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQyOTIzMQ=="}, "originalCommit": {"oid": "791658770a70d8c489efd30d39d411df54e8961b"}, "originalPosition": 312}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2926, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}