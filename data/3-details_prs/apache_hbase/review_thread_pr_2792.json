{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyOTIwNjc5", "number": 2792, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQxODozNTo1OVrOFHeksw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQxODozODowNlrOFHelag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMzg1MjY3OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/NettyRpcDuplexHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQxODozNTo1OVrOII9nOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwMzoxODowMVrOIJAX3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI2ODk4Nw==", "bodyText": "This a bug fix? Passing the executor?", "url": "https://github.com/apache/hbase/pull/2792#discussion_r546268987", "createdAt": "2020-12-19T18:35:59Z", "author": {"login": "saintstack"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/NettyRpcDuplexHandler.java", "diffHunk": "@@ -103,8 +103,8 @@ private void writeRequest(ChannelHandlerContext ctx, Call call, ChannelPromise p\n         ctx.write(buf, withoutCellBlockPromise);\n         ChannelPromise cellBlockPromise = ctx.newPromise();\n         ctx.write(cellBlock, cellBlockPromise);\n-        PromiseCombiner combiner = new PromiseCombiner();\n-        combiner.addAll(withoutCellBlockPromise, cellBlockPromise);\n+        PromiseCombiner combiner = new PromiseCombiner(ctx.executor());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce0b8417b788999a11f91d8d305af264aa9d25f"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMxNDIwNw==", "bodyText": "The default constructor has been deprecated.\nhttps://github.com/netty/netty/blob/3e8e52725bbd9d999873880956bc8f241372daa8/common/src/main/java/io/netty/util/concurrent/PromiseCombiner.java#L73", "url": "https://github.com/apache/hbase/pull/2792#discussion_r546314207", "createdAt": "2020-12-20T03:18:01Z", "author": {"login": "Apache9"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/NettyRpcDuplexHandler.java", "diffHunk": "@@ -103,8 +103,8 @@ private void writeRequest(ChannelHandlerContext ctx, Call call, ChannelPromise p\n         ctx.write(buf, withoutCellBlockPromise);\n         ChannelPromise cellBlockPromise = ctx.newPromise();\n         ctx.write(cellBlock, cellBlockPromise);\n-        PromiseCombiner combiner = new PromiseCombiner();\n-        combiner.addAll(withoutCellBlockPromise, cellBlockPromise);\n+        PromiseCombiner combiner = new PromiseCombiner(ctx.executor());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI2ODk4Nw=="}, "originalCommit": {"oid": "2ce0b8417b788999a11f91d8d305af264aa9d25f"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMzg1NDUwOnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/NettyRpcDuplexHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOVQxODozODowNlrOII9oGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMFQwMzoxOToyNlrOIJAYXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI2OTIxMQ==", "bodyText": "We need a cast is needed so we call a subclass method ?", "url": "https://github.com/apache/hbase/pull/2792#discussion_r546269211", "createdAt": "2020-12-19T18:38:06Z", "author": {"login": "saintstack"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/NettyRpcDuplexHandler.java", "diffHunk": "@@ -103,8 +103,8 @@ private void writeRequest(ChannelHandlerContext ctx, Call call, ChannelPromise p\n         ctx.write(buf, withoutCellBlockPromise);\n         ChannelPromise cellBlockPromise = ctx.newPromise();\n         ctx.write(cellBlock, cellBlockPromise);\n-        PromiseCombiner combiner = new PromiseCombiner();\n-        combiner.addAll(withoutCellBlockPromise, cellBlockPromise);\n+        PromiseCombiner combiner = new PromiseCombiner(ctx.executor());\n+        combiner.addAll((ChannelFuture) withoutCellBlockPromise, cellBlockPromise);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ce0b8417b788999a11f91d8d305af264aa9d25f"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjMxNDMzNA==", "bodyText": "The method which takes Promises as parameters is deprecated.\nhttps://github.com/netty/netty/blob/3e8e52725bbd9d999873880956bc8f241372daa8/common/src/main/java/io/netty/util/concurrent/PromiseCombiner.java#L123\nSo here we cast the first one to a future to let it call the method which takes Futures as parameters(Promise is a sub interface of Future).", "url": "https://github.com/apache/hbase/pull/2792#discussion_r546314334", "createdAt": "2020-12-20T03:19:26Z", "author": {"login": "Apache9"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/ipc/NettyRpcDuplexHandler.java", "diffHunk": "@@ -103,8 +103,8 @@ private void writeRequest(ChannelHandlerContext ctx, Call call, ChannelPromise p\n         ctx.write(buf, withoutCellBlockPromise);\n         ChannelPromise cellBlockPromise = ctx.newPromise();\n         ctx.write(cellBlock, cellBlockPromise);\n-        PromiseCombiner combiner = new PromiseCombiner();\n-        combiner.addAll(withoutCellBlockPromise, cellBlockPromise);\n+        PromiseCombiner combiner = new PromiseCombiner(ctx.executor());\n+        combiner.addAll((ChannelFuture) withoutCellBlockPromise, cellBlockPromise);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjI2OTIxMQ=="}, "originalCommit": {"oid": "2ce0b8417b788999a11f91d8d305af264aa9d25f"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2249, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}