{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NjIzNDc3", "number": 1903, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjoyNTozNFrOEFm9zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTozMDo1OVrOEGfP-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzE2NzQ5OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMetaWithReplicas.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNjoyNTozNFrOGj5o3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjoyNDozMVrOGl28CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI5NzY5NQ==", "bodyText": "As the main purpose of the change is to allow Master to complete initialisation in case of meta replica failures, shouldn't this test assert that HMaster.finishActiveMasterInitialization completes properly even with the induced replicas assignment failures? I can see we are asserting that replicas assignment fails, which is not what we actually want to safeguard from.", "url": "https://github.com/apache/hbase/pull/1903#discussion_r440297695", "createdAt": "2020-06-15T16:25:34Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMetaWithReplicas.java", "diffHunk": "@@ -355,4 +362,58 @@ public void testShutdownOfReplicaHolder() throws Exception {\n       assertNotEquals(3, i);\n     }\n   }\n+\n+  @Test\n+  public void testFailedReplicaAssigment() throws InterruptedException, IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "368b5f71e370690c365e3e762c144074c9bcfe87"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg1MTkxOA==", "bodyText": "Thanks for the feedback @wchevreuil ! I added a few extra checks to show that the partial meta replica assignment had happened and master is still active and running.", "url": "https://github.com/apache/hbase/pull/1903#discussion_r440851918", "createdAt": "2020-06-16T13:32:19Z", "author": {"login": "BukrosSzabolcs"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMetaWithReplicas.java", "diffHunk": "@@ -355,4 +362,58 @@ public void testShutdownOfReplicaHolder() throws Exception {\n       assertNotEquals(3, i);\n     }\n   }\n+\n+  @Test\n+  public void testFailedReplicaAssigment() throws InterruptedException, IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI5NzY5NQ=="}, "originalCommit": {"oid": "368b5f71e370690c365e3e762c144074c9bcfe87"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc5NTYxNg==", "bodyText": "Have one question about the test case, do not see any exceptions thrown out during assigning meta replica regions, how do we make sure the following code is working.\n    try {\n      metaBootstrap.assignMetaReplicas();\n    } catch (HBaseIOException e){\n\nIf we can make sure that the test can compile with or without the changes in non-test modules, it will be great as we can verify that without those changes, the test will fail. Seems with current implementation, it is not possible.", "url": "https://github.com/apache/hbase/pull/1903#discussion_r441795616", "createdAt": "2020-06-17T19:52:28Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMetaWithReplicas.java", "diffHunk": "@@ -355,4 +362,58 @@ public void testShutdownOfReplicaHolder() throws Exception {\n       assertNotEquals(3, i);\n     }\n   }\n+\n+  @Test\n+  public void testFailedReplicaAssigment() throws InterruptedException, IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI5NzY5NQ=="}, "originalCommit": {"oid": "368b5f71e370690c365e3e762c144074c9bcfe87"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM1MDYwMQ==", "bodyText": "@BukrosSzabolcs Your explain about how the test works addressed my concerns, thanks.", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442350601", "createdAt": "2020-06-18T16:24:31Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestMetaWithReplicas.java", "diffHunk": "@@ -355,4 +362,58 @@ public void testShutdownOfReplicaHolder() throws Exception {\n       assertNotEquals(3, i);\n     }\n   }\n+\n+  @Test\n+  public void testFailedReplicaAssigment() throws InterruptedException, IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI5NzY5NQ=="}, "originalCommit": {"oid": "368b5f71e370690c365e3e762c144074c9bcfe87"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjM4MjQ0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOToyODo0NlrOGlUTxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjozOToyMVrOGmCcFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzIzNw==", "bodyText": "assignMetaReplicas() throws IOException, InterruptedException, and KeeperException. Why only HBaseIOException is processed here? Should it catch all exceptions and totally ignore all exceptions caused by assignMetaReplicas()?", "url": "https://github.com/apache/hbase/pull/1903#discussion_r441783237", "createdAt": "2020-06-17T19:28:46Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1166,7 +1166,11 @@ private void finishActiveMasterInitialization(MonitoredTask status) throws IOExc\n     assignmentManager.checkIfShouldMoveSystemRegionAsync();\n     status.setStatus(\"Assign meta replicas\");\n     MasterMetaBootstrap metaBootstrap = createMetaBootstrap();\n-    metaBootstrap.assignMetaReplicas();\n+    try {\n+      metaBootstrap.assignMetaReplicas();\n+    } catch (HBaseIOException e){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "368b5f71e370690c365e3e762c144074c9bcfe87"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE1MzMxNQ==", "bodyText": "Good question. The idea was, that as far as I can tell InterruptedException is never actually thrown and KeeperException represent a serious issue outside the scope of meta replication, that we should not hide. So I skipped those. Do you think some of them should be included?", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442153315", "createdAt": "2020-06-18T11:19:59Z", "author": {"login": "BukrosSzabolcs"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1166,7 +1166,11 @@ private void finishActiveMasterInitialization(MonitoredTask status) throws IOExc\n     assignmentManager.checkIfShouldMoveSystemRegionAsync();\n     status.setStatus(\"Assign meta replicas\");\n     MasterMetaBootstrap metaBootstrap = createMetaBootstrap();\n-    metaBootstrap.assignMetaReplicas();\n+    try {\n+      metaBootstrap.assignMetaReplicas();\n+    } catch (HBaseIOException e){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzIzNw=="}, "originalCommit": {"oid": "368b5f71e370690c365e3e762c144074c9bcfe87"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM0MzM5Nw==", "bodyText": "Most of KeeperException has been handled inside the methods when I looked through the code path. IMO, if we do not want meta replicas to prevent master to become active, we should just catch and log it, let the other critical modules to decide if it needs to abort/block.", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442343397", "createdAt": "2020-06-18T16:12:57Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1166,7 +1166,11 @@ private void finishActiveMasterInitialization(MonitoredTask status) throws IOExc\n     assignmentManager.checkIfShouldMoveSystemRegionAsync();\n     status.setStatus(\"Assign meta replicas\");\n     MasterMetaBootstrap metaBootstrap = createMetaBootstrap();\n-    metaBootstrap.assignMetaReplicas();\n+    try {\n+      metaBootstrap.assignMetaReplicas();\n+    } catch (HBaseIOException e){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzIzNw=="}, "originalCommit": {"oid": "368b5f71e370690c365e3e762c144074c9bcfe87"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2NDQ2MA==", "bodyText": "Checked other places in the code and I see your point. I'll add KeeperException to the catch.", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442364460", "createdAt": "2020-06-18T16:46:14Z", "author": {"login": "BukrosSzabolcs"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1166,7 +1166,11 @@ private void finishActiveMasterInitialization(MonitoredTask status) throws IOExc\n     assignmentManager.checkIfShouldMoveSystemRegionAsync();\n     status.setStatus(\"Assign meta replicas\");\n     MasterMetaBootstrap metaBootstrap = createMetaBootstrap();\n-    metaBootstrap.assignMetaReplicas();\n+    try {\n+      metaBootstrap.assignMetaReplicas();\n+    } catch (HBaseIOException e){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzIzNw=="}, "originalCommit": {"oid": "368b5f71e370690c365e3e762c144074c9bcfe87"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzODkwOA==", "bodyText": "void assignMetaReplicas()\n      throws IOException, InterruptedException, KeeperException {\n\n\nI think there is no InterruptedException, we can remove it from the prototype. In your patch, only HBaseIOException is handled, how about other IOException? Can we just catch IOException as well? Thanks.", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442538908", "createdAt": "2020-06-18T22:38:58Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1166,7 +1166,11 @@ private void finishActiveMasterInitialization(MonitoredTask status) throws IOExc\n     assignmentManager.checkIfShouldMoveSystemRegionAsync();\n     status.setStatus(\"Assign meta replicas\");\n     MasterMetaBootstrap metaBootstrap = createMetaBootstrap();\n-    metaBootstrap.assignMetaReplicas();\n+    try {\n+      metaBootstrap.assignMetaReplicas();\n+    } catch (HBaseIOException e){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzIzNw=="}, "originalCommit": {"oid": "368b5f71e370690c365e3e762c144074c9bcfe87"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzOTAzMA==", "bodyText": "That is the last comment I have, +1 otherwise.", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442539030", "createdAt": "2020-06-18T22:39:21Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1166,7 +1166,11 @@ private void finishActiveMasterInitialization(MonitoredTask status) throws IOExc\n     assignmentManager.checkIfShouldMoveSystemRegionAsync();\n     status.setStatus(\"Assign meta replicas\");\n     MasterMetaBootstrap metaBootstrap = createMetaBootstrap();\n-    metaBootstrap.assignMetaReplicas();\n+    try {\n+      metaBootstrap.assignMetaReplicas();\n+    } catch (HBaseIOException e){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4MzIzNw=="}, "originalCommit": {"oid": "368b5f71e370690c365e3e762c144074c9bcfe87"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MjM4OTA0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxOTozMDo1OVrOGlUYEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMTo1Mjo0NVrOGlr3Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4NDMzNg==", "bodyText": "Most of this method's code is a duplicate  of the assign() above, the common part can be wrapped in a private method.", "url": "https://github.com/apache/hbase/pull/1903#discussion_r441784336", "createdAt": "2020-06-17T19:30:59Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -616,6 +616,24 @@ public long assign(RegionInfo regionInfo) throws IOException {\n     return assign(regionInfo, null);\n   }\n \n+  public Future<byte[]> assignAsync(RegionInfo regionInfo, ServerName sn) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "368b5f71e370690c365e3e762c144074c9bcfe87"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4NTIwNA==", "bodyText": "If we are adding a new public method, can we have doc for these two new methods?", "url": "https://github.com/apache/hbase/pull/1903#discussion_r441785204", "createdAt": "2020-06-17T19:32:28Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -616,6 +616,24 @@ public long assign(RegionInfo regionInfo) throws IOException {\n     return assign(regionInfo, null);\n   }\n \n+  public Future<byte[]> assignAsync(RegionInfo regionInfo, ServerName sn) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4NDMzNg=="}, "originalCommit": {"oid": "368b5f71e370690c365e3e762c144074c9bcfe87"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjE2OTEyNg==", "bodyText": "You are absolutely right. I'll fix this.", "url": "https://github.com/apache/hbase/pull/1903#discussion_r442169126", "createdAt": "2020-06-18T11:52:45Z", "author": {"login": "BukrosSzabolcs"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/AssignmentManager.java", "diffHunk": "@@ -616,6 +616,24 @@ public long assign(RegionInfo regionInfo) throws IOException {\n     return assign(regionInfo, null);\n   }\n \n+  public Future<byte[]> assignAsync(RegionInfo regionInfo, ServerName sn) throws IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTc4NDMzNg=="}, "originalCommit": {"oid": "368b5f71e370690c365e3e762c144074c9bcfe87"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2982, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}