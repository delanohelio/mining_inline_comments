{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxODUzNzUy", "number": 1138, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjozMTowOVrODeK3hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODoxODowNVrODfpjIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTYxOTI1OnYy", "diffSide": "RIGHT", "path": "hbase-shell/src/main/ruby/hbase/admin.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjozMTowOVrOFnMLhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwMjowODoyMFrOFnOoww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzODM0Mg==", "bodyText": "Can we add support for the previous syntax? and not just when an array is used?", "url": "https://github.com/apache/hbase/pull/1138#discussion_r376638342", "createdAt": "2020-02-07T22:31:09Z", "author": {"login": "esteban"}, "path": "hbase-shell/src/main/ruby/hbase/admin.rb", "diffHunk": "@@ -535,14 +535,20 @@ def move(encoded_region_name, server = nil)\n     end\n \n     #----------------------------------------------------------------------------------------------\n-    # Merge two regions\n-    def merge_region(region_a_name, region_b_name, force)\n-      @admin.mergeRegionsAsync(\n-        region_a_name.to_java_bytes,\n-        region_b_name.to_java_bytes,\n-        java.lang.Boolean.valueOf(force)\n+    # Merge multiple regions\n+    def merge_region(regions = [], force)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24aa84086618126da6880cadf81b255053b4ec29"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY3ODU5NQ==", "bodyText": "Sure", "url": "https://github.com/apache/hbase/pull/1138#discussion_r376678595", "createdAt": "2020-02-08T02:08:20Z", "author": {"login": "jatsakthi"}, "path": "hbase-shell/src/main/ruby/hbase/admin.rb", "diffHunk": "@@ -535,14 +535,20 @@ def move(encoded_region_name, server = nil)\n     end\n \n     #----------------------------------------------------------------------------------------------\n-    # Merge two regions\n-    def merge_region(region_a_name, region_b_name, force)\n-      @admin.mergeRegionsAsync(\n-        region_a_name.to_java_bytes,\n-        region_b_name.to_java_bytes,\n-        java.lang.Boolean.valueOf(force)\n+    # Merge multiple regions\n+    def merge_region(regions = [], force)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzODM0Mg=="}, "originalCommit": {"oid": "24aa84086618126da6880cadf81b255053b4ec29"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTYyMTA0OnYy", "diffSide": "RIGHT", "path": "hbase-shell/src/main/ruby/shell/commands/merge_region.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMjozMjowMVrOFnMMpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOFQwMjowODoxMVrOFnOovg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzODYzMA==", "bodyText": "As my previous comment, if we keep support of the syntax for adding only two regions and multiple regions we should keep both examples.", "url": "https://github.com/apache/hbase/pull/1138#discussion_r376638630", "createdAt": "2020-02-07T22:32:01Z", "author": {"login": "esteban"}, "path": "hbase-shell/src/main/ruby/shell/commands/merge_region.rb", "diffHunk": "@@ -33,16 +33,18 @@ def help\n \n Examples:\n \n-  hbase> merge_region 'FULL_REGIONNAME', 'FULL_REGIONNAME'\n-  hbase> merge_region 'FULL_REGIONNAME', 'FULL_REGIONNAME', true\n+  hbase> merge_region ['FULL_REGIONNAME', 'FULL_REGIONNAME']\n+  hbase> merge_region ['FULL_REGIONNAME', 'FULL_REGIONNAME', 'FULL_REGIONNAME', ...]\n+  hbase> merge_region ['FULL_REGIONNAME', 'FULL_REGIONNAME', 'FULL_REGIONNAME', ...], true\n \n-  hbase> merge_region 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME'\n-  hbase> merge_region 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', true\n+  hbase> merge_region ['ENCODED_REGIONNAME', 'ENCODED_REGIONNAME']\n+  hbase> merge_region ['ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', ...]\n+  hbase> merge_region ['ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', ...], true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24aa84086618126da6880cadf81b255053b4ec29"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjY3ODU5MA==", "bodyText": "Done.", "url": "https://github.com/apache/hbase/pull/1138#discussion_r376678590", "createdAt": "2020-02-08T02:08:11Z", "author": {"login": "jatsakthi"}, "path": "hbase-shell/src/main/ruby/shell/commands/merge_region.rb", "diffHunk": "@@ -33,16 +33,18 @@ def help\n \n Examples:\n \n-  hbase> merge_region 'FULL_REGIONNAME', 'FULL_REGIONNAME'\n-  hbase> merge_region 'FULL_REGIONNAME', 'FULL_REGIONNAME', true\n+  hbase> merge_region ['FULL_REGIONNAME', 'FULL_REGIONNAME']\n+  hbase> merge_region ['FULL_REGIONNAME', 'FULL_REGIONNAME', 'FULL_REGIONNAME', ...]\n+  hbase> merge_region ['FULL_REGIONNAME', 'FULL_REGIONNAME', 'FULL_REGIONNAME', ...], true\n \n-  hbase> merge_region 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME'\n-  hbase> merge_region 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', true\n+  hbase> merge_region ['ENCODED_REGIONNAME', 'ENCODED_REGIONNAME']\n+  hbase> merge_region ['ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', ...]\n+  hbase> merge_region ['ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', ...], true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYzODYzMA=="}, "originalCommit": {"oid": "24aa84086618126da6880cadf81b255053b4ec29"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTEzMTg1OnYy", "diffSide": "RIGHT", "path": "hbase-shell/src/main/ruby/shell/commands/merge_region.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODoxODowNVrOFpedDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxODo1Njo1OVrOFpft0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAzNDg5NA==", "bodyText": "nit: \"at least\"", "url": "https://github.com/apache/hbase/pull/1138#discussion_r379034894", "createdAt": "2020-02-13T18:18:05Z", "author": {"login": "joshelser"}, "path": "hbase-shell/src/main/ruby/shell/commands/merge_region.rb", "diffHunk": "@@ -31,18 +31,42 @@ def help\n TestTable,0094429456,1289497600452.527db22f95c8a9e0116f0cc13c680396. then\n the encoded region name portion is 527db22f95c8a9e0116f0cc13c680396\n \n+You can either pass the list of regions as comma separated values or as an\n+array of regions as shown:\n+\n Examples:\n \n   hbase> merge_region 'FULL_REGIONNAME', 'FULL_REGIONNAME'\n-  hbase> merge_region 'FULL_REGIONNAME', 'FULL_REGIONNAME', true\n+  hbase> merge_region 'FULL_REGIONNAME', 'FULL_REGIONNAME', 'FULL_REGIONNAME', ...\n+  hbase> merge_region 'FULL_REGIONNAME', 'FULL_REGIONNAME', 'FULL_REGIONNAME', ..., true\n+\n+  hbase> merge_region ['FULL_REGIONNAME', 'FULL_REGIONNAME']\n+  hbase> merge_region ['FULL_REGIONNAME', 'FULL_REGIONNAME', 'FULL_REGIONNAME', ...]\n+  hbase> merge_region ['FULL_REGIONNAME', 'FULL_REGIONNAME', 'FULL_REGIONNAME', ..., true]\n \n   hbase> merge_region 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME'\n-  hbase> merge_region 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', true\n+  hbase> merge_region 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', ...\n+  hbase> merge_region 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', ..., true\n+\n+  hbase> merge_region ['ENCODED_REGIONNAME', 'ENCODED_REGIONNAME']\n+  hbase> merge_region ['ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', ...]\n+  hbase> merge_region ['ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', ..., true]\n EOF\n       end\n \n-      def command(region_a_name, region_b_name, force = 'false')\n-        admin.merge_region(region_a_name, region_b_name, force)\n+      def command(*args)\n+        args = args.flatten.compact\n+        args_len = args.length\n+        raise(ArgumentError, 'Must pass atleast 2 regions to merge') unless args_len > 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c921a2015a41fc89ac14a37c85c53d5be6113d"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA1NTU2OQ==", "bodyText": "thanks @joshelser let me make a quick change and push the new commit", "url": "https://github.com/apache/hbase/pull/1138#discussion_r379055569", "createdAt": "2020-02-13T18:56:59Z", "author": {"login": "jatsakthi"}, "path": "hbase-shell/src/main/ruby/shell/commands/merge_region.rb", "diffHunk": "@@ -31,18 +31,42 @@ def help\n TestTable,0094429456,1289497600452.527db22f95c8a9e0116f0cc13c680396. then\n the encoded region name portion is 527db22f95c8a9e0116f0cc13c680396\n \n+You can either pass the list of regions as comma separated values or as an\n+array of regions as shown:\n+\n Examples:\n \n   hbase> merge_region 'FULL_REGIONNAME', 'FULL_REGIONNAME'\n-  hbase> merge_region 'FULL_REGIONNAME', 'FULL_REGIONNAME', true\n+  hbase> merge_region 'FULL_REGIONNAME', 'FULL_REGIONNAME', 'FULL_REGIONNAME', ...\n+  hbase> merge_region 'FULL_REGIONNAME', 'FULL_REGIONNAME', 'FULL_REGIONNAME', ..., true\n+\n+  hbase> merge_region ['FULL_REGIONNAME', 'FULL_REGIONNAME']\n+  hbase> merge_region ['FULL_REGIONNAME', 'FULL_REGIONNAME', 'FULL_REGIONNAME', ...]\n+  hbase> merge_region ['FULL_REGIONNAME', 'FULL_REGIONNAME', 'FULL_REGIONNAME', ..., true]\n \n   hbase> merge_region 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME'\n-  hbase> merge_region 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', true\n+  hbase> merge_region 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', ...\n+  hbase> merge_region 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', ..., true\n+\n+  hbase> merge_region ['ENCODED_REGIONNAME', 'ENCODED_REGIONNAME']\n+  hbase> merge_region ['ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', ...]\n+  hbase> merge_region ['ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', 'ENCODED_REGIONNAME', ..., true]\n EOF\n       end\n \n-      def command(region_a_name, region_b_name, force = 'false')\n-        admin.merge_region(region_a_name, region_b_name, force)\n+      def command(*args)\n+        args = args.flatten.compact\n+        args_len = args.length\n+        raise(ArgumentError, 'Must pass atleast 2 regions to merge') unless args_len > 1", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTAzNDg5NA=="}, "originalCommit": {"oid": "d4c921a2015a41fc89ac14a37c85c53d5be6113d"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2060, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}