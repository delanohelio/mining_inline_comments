{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3NDYyNjcw", "number": 1417, "title": "HBASE-24102 : Remove decommissioned RS from target servers while unlo\u2026", "bodyText": "\u2026ading regions", "createdAt": "2020-04-02T09:33:32Z", "url": "https://github.com/apache/hbase/pull/1417", "merged": true, "mergeCommit": {"oid": "2a95fffb3b42b9cf0f6c3cabd934a47c7d675556"}, "closed": true, "closedAt": "2020-04-03T12:58:50Z", "author": {"login": "virajjasani"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTo7poAH2gAyMzk3NDYyNjcwOmYwMmM5OWQxZjhiMThlZjA0NDk0NTIwZjgyZTEzMjI1NDdmZmViMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcT_S6NgH2gAyMzk3NDYyNjcwOmVkNTVjOGI5OGQ2NjUyZWRkYjM4NzRjNTIyZmEyYmJkZTJjNzk5ZWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f02c99d1f8b18ef04494520f82e1322547ffeb19", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/f02c99d1f8b18ef04494520f82e1322547ffeb19", "committedDate": "2020-04-02T09:32:00Z", "message": "HBASE-24102 : Remove decommissioned RS from target servers while unloading regions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a33dfdbecde864b75aaf86b2eca0d47a9404a5e", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/4a33dfdbecde864b75aaf86b2eca0d47a9404a5e", "committedDate": "2020-04-02T14:41:56Z", "message": "adding tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NjA0NDk5", "url": "https://github.com/apache/hbase/pull/1417#pullrequestreview-386604499", "createdAt": "2020-04-02T16:40:21Z", "commit": {"oid": "4a33dfdbecde864b75aaf86b2eca0d47a9404a5e"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e18b4696c2961da8131ece67353b62bf27cff89", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/8e18b4696c2961da8131ece67353b62bf27cff89", "committedDate": "2020-04-02T17:20:23Z", "message": "review comment - refactor test code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NjUzNTQ3", "url": "https://github.com/apache/hbase/pull/1417#pullrequestreview-386653547", "createdAt": "2020-04-02T17:39:46Z", "commit": {"oid": "8e18b4696c2961da8131ece67353b62bf27cff89"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNzozOTo0NlrOF_2YWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNzozOTo0NlrOF_2YWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ5NTU3OA==", "bodyText": "Should we wait for the decom to happen or just start the region mover tool and then finally assert that none of the regions are in the decom node - assuming the region plan was created even before the decom was completed. Else LGTM.", "url": "https://github.com/apache/hbase/pull/1417#discussion_r402495578", "createdAt": "2020-04-02T17:39:46Z", "author": {"login": "ramkrish86"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestRegionMover.java", "diffHunk": "@@ -238,4 +245,139 @@ public void testTargetServerDeadWhenLoading() throws Exception {\n       assertFalse(rm.load());\n     }\n   }\n+\n+  @Test\n+  public void testDecomServerExclusionWithAck() throws Exception {\n+    MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n+    HRegionServer excludeServer = cluster.getRegionServer(1);\n+    List<HRegion> regions = excludeServer.getRegions();\n+    int regionsExcludeServer = excludeServer.getNumberOfOnlineRegions();\n+    TEST_UTIL.getAdmin().decommissionRegionServers(\n+      Collections.singletonList(excludeServer.getServerName()), false);\n+\n+    waitForServerDecom(excludeServer);\n+\n+    HRegionServer regionServer = cluster.getRegionServer(0);\n+    String rsName = regionServer.getServerName().getHostname();\n+    int port = regionServer.getServerName().getPort();\n+    String hostname = rsName + \":\" + Integer.toString(port);\n+    RegionMoverBuilder rmBuilder = new RegionMoverBuilder(hostname, TEST_UTIL.getConfiguration())\n+      .ack(true);\n+\n+    int targetServerRegions = cluster.getRegionServer(2).getRegions().size();\n+    int sourceServerRegions = regionServer.getRegions().size();\n+\n+    try (RegionMover regionMover = rmBuilder.build()) {\n+      Assert.assertTrue(regionMover.unload());\n+      LOG.info(\"Unloading {}\", hostname);\n+      assertEquals(0, regionServer.getNumberOfOnlineRegions());\n+      assertEquals(regionsExcludeServer, cluster.getRegionServer(1).getNumberOfOnlineRegions());\n+      LOG.info(\"Before:\" + regionsExcludeServer + \" After:\" +\n+        cluster.getRegionServer(1).getNumberOfOnlineRegions());\n+      List<HRegion> regionList = cluster.getRegionServer(1).getRegions();\n+      int index = 0;\n+      for (HRegion hRegion : regionList) {\n+        Assert.assertEquals(hRegion, regions.get(index++));\n+      }\n+      Assert.assertEquals(targetServerRegions + sourceServerRegions,\n+        cluster.getRegionServer(2).getNumberOfOnlineRegions());\n+      Assert.assertTrue(regionMover.load());\n+    }\n+\n+    TEST_UTIL.getAdmin().recommissionRegionServer(excludeServer.getServerName(),\n+      Collections.emptyList());\n+  }\n+\n+  private void waitForServerDecom(HRegionServer excludeServer) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e18b4696c2961da8131ece67353b62bf27cff89"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NjUzMzY5", "url": "https://github.com/apache/hbase/pull/1417#pullrequestreview-386653369", "createdAt": "2020-04-02T17:39:31Z", "commit": {"oid": "8e18b4696c2961da8131ece67353b62bf27cff89"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNzozOTozMVrOF_2XXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNzozOTo0NVrOF_2YTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ5NTMyNw==", "bodyText": "Add debug logging at least of set of decommissioned RS found?", "url": "https://github.com/apache/hbase/pull/1417#discussion_r402495327", "createdAt": "2020-04-02T17:39:31Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/util/RegionMover.java", "diffHunk": "@@ -432,6 +434,11 @@ public boolean unload() throws InterruptedException, ExecutionException, Timeout\n         }\n         // Remove RS present in the exclude file\n         stripExcludes(regionServers);\n+\n+        // Remove decommissioned RS\n+        Set<ServerName> decommissionedRS = new HashSet<>(admin.listDecommissionedRegionServers());\n+        regionServers.removeIf(decommissionedRS::contains);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e18b4696c2961da8131ece67353b62bf27cff89"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQ5NTU2Nw==", "bodyText": "Good", "url": "https://github.com/apache/hbase/pull/1417#discussion_r402495567", "createdAt": "2020-04-02T17:39:45Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestRegionMover.java", "diffHunk": "@@ -51,7 +58,7 @@\n  * Tests for Region Mover Load/Unload functionality with and without ack mode and also to test\n  * exclude functionality useful for rack decommissioning\n  */\n-@Category({ MiscTests.class, MediumTests.class })\n+@Category({MiscTests.class, LargeTests.class})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e18b4696c2961da8131ece67353b62bf27cff89"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "832a67d119ed1c48a259d597a962abe044e5dad5", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/832a67d119ed1c48a259d597a962abe044e5dad5", "committedDate": "2020-04-02T18:53:28Z", "message": "review comment - adding debug log & updating some access specifiers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODA4MTI2", "url": "https://github.com/apache/hbase/pull/1417#pullrequestreview-386808126", "createdAt": "2020-04-02T22:00:54Z", "commit": {"oid": "832a67d119ed1c48a259d597a962abe044e5dad5"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjowMDo1NFrOF_-Crg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMjowMTo1M1rOF_-ERQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYyMTEwMg==", "bodyText": "extra space line", "url": "https://github.com/apache/hbase/pull/1417#discussion_r402621102", "createdAt": "2020-04-02T22:00:54Z", "author": {"login": "xcangCRM"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestRegionMover.java", "diffHunk": "@@ -238,4 +245,139 @@ public void testTargetServerDeadWhenLoading() throws Exception {\n       assertFalse(rm.load());\n     }\n   }\n+\n+  @Test\n+  public void testDecomServerExclusionWithAck() throws Exception {\n+    MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n+    HRegionServer excludeServer = cluster.getRegionServer(1);\n+    List<HRegion> regions = excludeServer.getRegions();\n+    int regionsExcludeServer = excludeServer.getNumberOfOnlineRegions();\n+    TEST_UTIL.getAdmin().decommissionRegionServers(\n+      Collections.singletonList(excludeServer.getServerName()), false);\n+\n+    waitForServerDecom(excludeServer);\n+\n+    HRegionServer regionServer = cluster.getRegionServer(0);\n+    String rsName = regionServer.getServerName().getHostname();\n+    int port = regionServer.getServerName().getPort();\n+    String hostname = rsName + \":\" + Integer.toString(port);\n+    RegionMoverBuilder rmBuilder = new RegionMoverBuilder(hostname, TEST_UTIL.getConfiguration())\n+      .ack(true);\n+\n+    int targetServerRegions = cluster.getRegionServer(2).getRegions().size();\n+    int sourceServerRegions = regionServer.getRegions().size();\n+\n+    try (RegionMover regionMover = rmBuilder.build()) {\n+      Assert.assertTrue(regionMover.unload());\n+      LOG.info(\"Unloading {}\", hostname);\n+      assertEquals(0, regionServer.getNumberOfOnlineRegions());\n+      assertEquals(regionsExcludeServer, cluster.getRegionServer(1).getNumberOfOnlineRegions());\n+      LOG.info(\"Before:\" + regionsExcludeServer + \" After:\" +\n+        cluster.getRegionServer(1).getNumberOfOnlineRegions());\n+      List<HRegion> regionList = cluster.getRegionServer(1).getRegions();\n+      int index = 0;\n+      for (HRegion hRegion : regionList) {\n+        Assert.assertEquals(hRegion, regions.get(index++));\n+      }\n+      Assert.assertEquals(targetServerRegions + sourceServerRegions,\n+        cluster.getRegionServer(2).getNumberOfOnlineRegions());\n+      Assert.assertTrue(regionMover.load());\n+    }\n+\n+    TEST_UTIL.getAdmin().recommissionRegionServer(excludeServer.getServerName(),\n+      Collections.emptyList());\n+  }\n+\n+  private void waitForServerDecom(HRegionServer excludeServer) throws IOException {\n+\n+    TEST_UTIL.getAdmin().decommissionRegionServers(\n+      Collections.singletonList(excludeServer.getServerName()), false);\n+\n+    TEST_UTIL.waitFor(3000, () -> {\n+      try {\n+        List<ServerName> decomServers = TEST_UTIL.getAdmin().listDecommissionedRegionServers();\n+        return decomServers.size() == 1\n+          && decomServers.get(0).equals(excludeServer.getServerName());\n+      } catch (IOException e) {\n+        throw new RuntimeException(e);\n+      }\n+    });\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "832a67d119ed1c48a259d597a962abe044e5dad5"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYyMTUwOQ==", "bodyText": "is this 3s? If so, is this enough?", "url": "https://github.com/apache/hbase/pull/1417#discussion_r402621509", "createdAt": "2020-04-02T22:01:53Z", "author": {"login": "xcangCRM"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/util/TestRegionMover.java", "diffHunk": "@@ -238,4 +245,139 @@ public void testTargetServerDeadWhenLoading() throws Exception {\n       assertFalse(rm.load());\n     }\n   }\n+\n+  @Test\n+  public void testDecomServerExclusionWithAck() throws Exception {\n+    MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n+    HRegionServer excludeServer = cluster.getRegionServer(1);\n+    List<HRegion> regions = excludeServer.getRegions();\n+    int regionsExcludeServer = excludeServer.getNumberOfOnlineRegions();\n+    TEST_UTIL.getAdmin().decommissionRegionServers(\n+      Collections.singletonList(excludeServer.getServerName()), false);\n+\n+    waitForServerDecom(excludeServer);\n+\n+    HRegionServer regionServer = cluster.getRegionServer(0);\n+    String rsName = regionServer.getServerName().getHostname();\n+    int port = regionServer.getServerName().getPort();\n+    String hostname = rsName + \":\" + Integer.toString(port);\n+    RegionMoverBuilder rmBuilder = new RegionMoverBuilder(hostname, TEST_UTIL.getConfiguration())\n+      .ack(true);\n+\n+    int targetServerRegions = cluster.getRegionServer(2).getRegions().size();\n+    int sourceServerRegions = regionServer.getRegions().size();\n+\n+    try (RegionMover regionMover = rmBuilder.build()) {\n+      Assert.assertTrue(regionMover.unload());\n+      LOG.info(\"Unloading {}\", hostname);\n+      assertEquals(0, regionServer.getNumberOfOnlineRegions());\n+      assertEquals(regionsExcludeServer, cluster.getRegionServer(1).getNumberOfOnlineRegions());\n+      LOG.info(\"Before:\" + regionsExcludeServer + \" After:\" +\n+        cluster.getRegionServer(1).getNumberOfOnlineRegions());\n+      List<HRegion> regionList = cluster.getRegionServer(1).getRegions();\n+      int index = 0;\n+      for (HRegion hRegion : regionList) {\n+        Assert.assertEquals(hRegion, regions.get(index++));\n+      }\n+      Assert.assertEquals(targetServerRegions + sourceServerRegions,\n+        cluster.getRegionServer(2).getNumberOfOnlineRegions());\n+      Assert.assertTrue(regionMover.load());\n+    }\n+\n+    TEST_UTIL.getAdmin().recommissionRegionServer(excludeServer.getServerName(),\n+      Collections.emptyList());\n+  }\n+\n+  private void waitForServerDecom(HRegionServer excludeServer) throws IOException {\n+\n+    TEST_UTIL.getAdmin().decommissionRegionServers(\n+      Collections.singletonList(excludeServer.getServerName()), false);\n+\n+    TEST_UTIL.waitFor(3000, () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "832a67d119ed1c48a259d597a962abe044e5dad5"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODgyNDg5", "url": "https://github.com/apache/hbase/pull/1417#pullrequestreview-386882489", "createdAt": "2020-04-03T01:27:03Z", "commit": {"oid": "832a67d119ed1c48a259d597a962abe044e5dad5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee976772d9c0bf09fcb52acf9e13159ae654455f", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/ee976772d9c0bf09fcb52acf9e13159ae654455f", "committedDate": "2020-04-03T07:36:18Z", "message": "removing extra space"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed55c8b98d6652eddb3874c522fa2bbde2c799ea", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/ed55c8b98d6652eddb3874c522fa2bbde2c799ea", "committedDate": "2020-04-03T11:35:19Z", "message": "minor formatter changes"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2542, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}