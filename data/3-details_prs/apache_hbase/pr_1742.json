{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNDkwODYw", "number": 1742, "title": "HBASE-24401 Cell size limit check on append should consider 0 or less\u2026", "bodyText": "\u2026 value to disable the check", "createdAt": "2020-05-20T03:57:53Z", "url": "https://github.com/apache/hbase/pull/1742", "merged": true, "mergeCommit": {"oid": "006e4d5e4676583e2bd03ffc3dc2f14752b59704"}, "closed": true, "closedAt": "2020-05-25T01:58:02Z", "author": {"login": "wenbang"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjG2OAgFqTQxNTIxNTAwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjs2pygFqTQxNjY5MzQwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MjE1MDAy", "url": "https://github.com/apache/hbase/pull/1742#pullrequestreview-415215002", "createdAt": "2020-05-20T10:52:05Z", "commit": {"oid": "69a3875cecee4dbe189a936b1a9da9efcf03d804"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDo1MjowNVrOGYGAig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDo1MjowNVrOGYGAig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkxNzQ1MA==", "bodyText": "Can we also add debug message for when max cell size check is disabled?", "url": "https://github.com/apache/hbase/pull/1742#discussion_r427917450", "createdAt": "2020-05-20T10:52:05Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,16 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(msg);\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(msg);\n+          }\n+          throw new DoNotRetryIOException(msg);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69a3875cecee4dbe189a936b1a9da9efcf03d804"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MjE3Njc0", "url": "https://github.com/apache/hbase/pull/1742#pullrequestreview-415217674", "createdAt": "2020-05-20T10:56:11Z", "commit": {"oid": "69a3875cecee4dbe189a936b1a9da9efcf03d804"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDo1NjoxMlrOGYGJMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDo1NjoxMlrOGYGJMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkxOTY2NA==", "bodyText": "NIT: For clarity, can we use HRegion.DEFAULT_MAX_CELL_SIZE + 1, instead?", "url": "https://github.com/apache/hbase/pull/1742#discussion_r427919664", "createdAt": "2020-05-20T10:56:12Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide5.java", "diffHunk": "@@ -2274,6 +2274,20 @@ public void testCellSizeLimit() throws IOException {\n         // expected\n       }\n     }\n+    //test cell size no limit\n+    final TableName noLimitTable = TableName.valueOf(\"testCellSizeNoLimit\");\n+    TableDescriptorBuilder.ModifyableTableDescriptor noLimitTableDescriptor =\n+      new TableDescriptorBuilder.ModifyableTableDescriptor(noLimitTable)\n+        .setValue(HRegion.HBASE_MAX_CELL_SIZE_KEY, Integer.toString(0));\n+    noLimitTableDescriptor.setColumnFamily(familyDescriptor);\n+    try (Admin admin = TEST_UTIL.getAdmin()) {\n+      admin.createTable(noLimitTableDescriptor);\n+    }\n+    // Will succeed\n+    try (Table nt = TEST_UTIL.getConnection().getTable(noLimitTable)) {\n+      nt.put(new Put(ROW).addColumn(FAMILY, QUALIFIER,  new byte[9 * 1024 * 1024]));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "69a3875cecee4dbe189a936b1a9da9efcf03d804"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MjE4MTY3", "url": "https://github.com/apache/hbase/pull/1742#pullrequestreview-415218167", "createdAt": "2020-05-20T10:56:53Z", "commit": {"oid": "69a3875cecee4dbe189a936b1a9da9efcf03d804"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzgyMzYy", "url": "https://github.com/apache/hbase/pull/1742#pullrequestreview-415382362", "createdAt": "2020-05-20T14:15:53Z", "commit": {"oid": "fd0585e7af058971209f2626a9efbfbe385a1aa4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoxNTo1M1rOGYN-9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoxNjo1NVrOGYOCIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0ODExNg==", "bodyText": "We should use log4j parameterized messages feature, that way we don't need the concatenation logic, nor the if statement.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428048116", "createdAt": "2020-05-20T14:15:53Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,22 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(msg);\n+          }\n+          throw new DoNotRetryIOException(msg);\n+        }\n+      } else {\n+        String msg = \"Cell size check is disabled because of maxCellSize is set to\" +\n+          this.maxCellSize;\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(msg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd0585e7af058971209f2626a9efbfbe385a1aa4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0ODI1Mw==", "bodyText": "We should use log4j parameterized messages feature, that way we don't need the concatenation logic, nor the if statement.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428048253", "createdAt": "2020-05-20T14:16:03Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java", "diffHunk": "@@ -983,6 +983,11 @@ private void checkCellSizeLimit(final HRegion r, final Mutation m) throws IOExce\n           throw new DoNotRetryIOException(msg);\n         }\n       }\n+    } else {\n+      String msg = \"Cell size check is disabled because of maxCellSize is set to\" + r.maxCellSize;\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(msg);\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd0585e7af058971209f2626a9efbfbe385a1aa4"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0ODkyOQ==", "bodyText": "We should use log4j parameterized messages feature, that way we don't need the concatenation logic, nor the if (LOG.isDebugEnabled()) check.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428048929", "createdAt": "2020-05-20T14:16:55Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,22 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(msg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd0585e7af058971209f2626a9efbfbe385a1aa4"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTg2MzA1", "url": "https://github.com/apache/hbase/pull/1742#pullrequestreview-415586305", "createdAt": "2020-05-20T18:03:21Z", "commit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NTg5Mzg3", "url": "https://github.com/apache/hbase/pull/1742#pullrequestreview-415589387", "createdAt": "2020-05-20T18:07:43Z", "commit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODowNzo0NFrOGYXyHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxODowNzo0NFrOGYXyHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwODY2OQ==", "bodyText": "Use the @Rule provided in this class instead of a String for the table name, such as name.getMethodName().", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428208669", "createdAt": "2020-05-20T18:07:44Z", "author": {"login": "HorizonNet"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/client/TestFromClientSide5.java", "diffHunk": "@@ -2274,6 +2274,21 @@ public void testCellSizeLimit() throws IOException {\n         // expected\n       }\n     }\n+    //test cell size no limit\n+    final TableName noLimitTable = TableName.valueOf(\"testCellSizeNoLimit\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1ODE4OTY5", "url": "https://github.com/apache/hbase/pull/1742#pullrequestreview-415818969", "createdAt": "2020-05-21T01:22:20Z", "commit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMToyMjoyMFrOGYjJ0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMToyMjoyMFrOGYjJ0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5NDk2Mw==", "bodyText": "Don't need to log this everytime? Only log once is enough when regionserver start.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428394963", "createdAt": "2020-05-21T01:22:20Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegion.java", "diffHunk": "@@ -8265,14 +8265,17 @@ private WALEdit reckonDeltas(Operation op, Mutation mutation, Durability effecti\n           break;\n         default: throw new UnsupportedOperationException(op.toString());\n       }\n-      int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n-      if (newCellSize > this.maxCellSize) {\n-        String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n-          + \" bytes in region \" + this;\n-        if (LOG.isDebugEnabled()) {\n+      if (this.maxCellSize > 0) {\n+        int newCellSize = PrivateCellUtil.estimatedSerializedSizeOf(newCell);\n+        if (newCellSize > this.maxCellSize) {\n+          String msg = \"Cell with size \" + newCellSize + \" exceeds limit of \" + this.maxCellSize\n+            + \" bytes in region \" + this;\n           LOG.debug(msg);\n+          throw new DoNotRetryIOException(msg);\n         }\n-        throw new DoNotRetryIOException(msg);\n+      } else {\n+        LOG.debug(\"Cell size check is disabled because of maxCellSize is set to {}.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85d18707ea15a750d96ec7226f01697d87ffe5a6"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1OTM2NzU3", "url": "https://github.com/apache/hbase/pull/1742#pullrequestreview-415936757", "createdAt": "2020-05-21T07:31:10Z", "commit": {"oid": "fc8e993bf9cee199b77b92eda5242e337f161e86"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNzozMToxMFrOGYpFEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNzozMToxMFrOGYpFEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ5MjA0OA==", "bodyText": "Ditto.", "url": "https://github.com/apache/hbase/pull/1742#discussion_r428492048", "createdAt": "2020-05-21T07:31:10Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/RSRpcServices.java", "diffHunk": "@@ -977,12 +977,12 @@ private void checkCellSizeLimit(final HRegion r, final Mutation m) throws IOExce\n         int size = PrivateCellUtil.estimatedSerializedSizeOf(cells.current());\n         if (size > r.maxCellSize) {\n           String msg = \"Cell with size \" + size + \" exceeds limit of \" + r.maxCellSize + \" bytes\";\n-          if (LOG.isDebugEnabled()) {\n-            LOG.debug(msg);\n-          }\n+          LOG.debug(msg);\n           throw new DoNotRetryIOException(msg);\n         }\n       }\n+    } else {\n+      LOG.debug(\"Cell size check is disabled because of maxCellSize is set to {}.\", r.maxCellSize);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc8e993bf9cee199b77b92eda5242e337f161e86"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37440aa97ffa08c4cd68cf112bcfceafc094d6a6", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/37440aa97ffa08c4cd68cf112bcfceafc094d6a6", "committedDate": "2020-05-21T09:14:39Z", "message": "HBASE-24401 Cell size limit check on append should consider 0\n or less value to disable the check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NjU5MjMz", "url": "https://github.com/apache/hbase/pull/1742#pullrequestreview-416659233", "createdAt": "2020-05-22T05:38:15Z", "commit": {"oid": "37440aa97ffa08c4cd68cf112bcfceafc094d6a6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NjkzNDA1", "url": "https://github.com/apache/hbase/pull/1742#pullrequestreview-416693405", "createdAt": "2020-05-22T07:08:58Z", "commit": {"oid": "37440aa97ffa08c4cd68cf112bcfceafc094d6a6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4676, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}