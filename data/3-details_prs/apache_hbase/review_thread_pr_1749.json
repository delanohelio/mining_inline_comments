{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMDE0NzY2", "number": 1749, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMTowMzowN1rOD-cOag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOToyNzoyMFrOD_DSZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODAwNzQ2OnYy", "diffSide": "RIGHT", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMTowMzowN1rOGYi3wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToyNzoyNFrOGfYpZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MDMzNw==", "bodyText": "log the start time, too? If the debug was enabled between execution, may get a wrong execution time?", "url": "https://github.com/apache/hbase/pull/1749#discussion_r428390337", "createdAt": "2020-05-21T01:03:07Z", "author": {"login": "infraio"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "diffHunk": "@@ -183,18 +176,21 @@ public void run() {\n       if (LOG.isInfoEnabled()) LOG.info(\"Chore: \" + getName() + \" was stopped\");\n     } else {\n       try {\n+        // TODO: Histogram metrics per chore name.\n+        // For now, just measure and log if DEBUG level logging is enabled.\n+        long start = 0;\n+        if (LOG.isDebugEnabled()) {\n+          start = System.nanoTime();\n+        }\n         if (!initialChoreComplete) {\n           initialChoreComplete = initialChore();\n         } else {\n-          timeMeasurement.measure(() -> {\n             chore();\n-            return null;\n-          });\n-          if (LOG.isInfoEnabled() && (System.nanoTime() - lastLog > FIVE_MINUTES_IN_NANOS)) {\n-            LOG.info(\"{} average execution time: {} ns.\", getName(),\n-                (long)(timeMeasurement.getAverageTime()));\n-            lastLog = System.nanoTime();\n-          }\n+        }\n+        if (LOG.isDebugEnabled()) {\n+          long end = System.nanoTime();\n+          LOG.debug(\"{} execution time: {} ms.\", getName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "068b54cae428b01f9e214e6ea66a0c0bc5a5ec75"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQxODM4Mg==", "bodyText": "Oh, fun edge case @infraio :) How about a check that start > 0 and only log in that case?", "url": "https://github.com/apache/hbase/pull/1749#discussion_r429418382", "createdAt": "2020-05-22T19:22:10Z", "author": {"login": "ndimiduk"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "diffHunk": "@@ -183,18 +176,21 @@ public void run() {\n       if (LOG.isInfoEnabled()) LOG.info(\"Chore: \" + getName() + \" was stopped\");\n     } else {\n       try {\n+        // TODO: Histogram metrics per chore name.\n+        // For now, just measure and log if DEBUG level logging is enabled.\n+        long start = 0;\n+        if (LOG.isDebugEnabled()) {\n+          start = System.nanoTime();\n+        }\n         if (!initialChoreComplete) {\n           initialChoreComplete = initialChore();\n         } else {\n-          timeMeasurement.measure(() -> {\n             chore();\n-            return null;\n-          });\n-          if (LOG.isInfoEnabled() && (System.nanoTime() - lastLog > FIVE_MINUTES_IN_NANOS)) {\n-            LOG.info(\"{} average execution time: {} ns.\", getName(),\n-                (long)(timeMeasurement.getAverageTime()));\n-            lastLog = System.nanoTime();\n-          }\n+        }\n+        if (LOG.isDebugEnabled()) {\n+          long end = System.nanoTime();\n+          LOG.debug(\"{} execution time: {} ms.\", getName(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MDMzNw=="}, "originalCommit": {"oid": "068b54cae428b01f9e214e6ea66a0c0bc5a5ec75"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ1MjU2MA==", "bodyText": "Yes we can do that. Will update", "url": "https://github.com/apache/hbase/pull/1749#discussion_r429452560", "createdAt": "2020-05-22T21:10:44Z", "author": {"login": "apurtell"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "diffHunk": "@@ -183,18 +176,21 @@ public void run() {\n       if (LOG.isInfoEnabled()) LOG.info(\"Chore: \" + getName() + \" was stopped\");\n     } else {\n       try {\n+        // TODO: Histogram metrics per chore name.\n+        // For now, just measure and log if DEBUG level logging is enabled.\n+        long start = 0;\n+        if (LOG.isDebugEnabled()) {\n+          start = System.nanoTime();\n+        }\n         if (!initialChoreComplete) {\n           initialChoreComplete = initialChore();\n         } else {\n-          timeMeasurement.measure(() -> {\n             chore();\n-            return null;\n-          });\n-          if (LOG.isInfoEnabled() && (System.nanoTime() - lastLog > FIVE_MINUTES_IN_NANOS)) {\n-            LOG.info(\"{} average execution time: {} ns.\", getName(),\n-                (long)(timeMeasurement.getAverageTime()));\n-            lastLog = System.nanoTime();\n-          }\n+        }\n+        if (LOG.isDebugEnabled()) {\n+          long end = System.nanoTime();\n+          LOG.debug(\"{} execution time: {} ms.\", getName(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MDMzNw=="}, "originalCommit": {"oid": "068b54cae428b01f9e214e6ea66a0c0bc5a5ec75"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2Mjg1NA==", "bodyText": "I was expecting to find something like if (LOG.isDebugEnabled() && start > 0) { here. Was this comment addressed elsewhere? Thanks.", "url": "https://github.com/apache/hbase/pull/1749#discussion_r435562854", "createdAt": "2020-06-04T21:27:24Z", "author": {"login": "ndimiduk"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "diffHunk": "@@ -183,18 +176,21 @@ public void run() {\n       if (LOG.isInfoEnabled()) LOG.info(\"Chore: \" + getName() + \" was stopped\");\n     } else {\n       try {\n+        // TODO: Histogram metrics per chore name.\n+        // For now, just measure and log if DEBUG level logging is enabled.\n+        long start = 0;\n+        if (LOG.isDebugEnabled()) {\n+          start = System.nanoTime();\n+        }\n         if (!initialChoreComplete) {\n           initialChoreComplete = initialChore();\n         } else {\n-          timeMeasurement.measure(() -> {\n             chore();\n-            return null;\n-          });\n-          if (LOG.isInfoEnabled() && (System.nanoTime() - lastLog > FIVE_MINUTES_IN_NANOS)) {\n-            LOG.info(\"{} average execution time: {} ns.\", getName(),\n-                (long)(timeMeasurement.getAverageTime()));\n-            lastLog = System.nanoTime();\n-          }\n+        }\n+        if (LOG.isDebugEnabled()) {\n+          long end = System.nanoTime();\n+          LOG.debug(\"{} execution time: {} ms.\", getName(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODM5MDMzNw=="}, "originalCommit": {"oid": "068b54cae428b01f9e214e6ea66a0c0bc5a5ec75"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDQwNDczOnYy", "diffSide": "RIGHT", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOToyNjowOVrOGZhtQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToyNjozM1rOGfYn5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQxOTg0MA==", "bodyText": "A question of clarification. I think what you have is correct, but I'm asking anyway. We have EnvironmentEdgeManager, which abstracts a form of clock. System.nanoTime() is a different form of clock. Is there some case where we'd want the nanoTime to be abstracted behind EnvironmentEdgeManager? My understanding is no, we don't have such a use-case, because EnvironmentEdgeManager is for abstracting over a clock-time (a la java.time.Instant), while nanoTime is providing a timer for calculating a time duration, something that is abstract from a clock-time.", "url": "https://github.com/apache/hbase/pull/1749#discussion_r429419840", "createdAt": "2020-05-22T19:26:09Z", "author": {"login": "ndimiduk"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "diffHunk": "@@ -183,18 +176,21 @@ public void run() {\n       if (LOG.isInfoEnabled()) LOG.info(\"Chore: \" + getName() + \" was stopped\");\n     } else {\n       try {\n+        // TODO: Histogram metrics per chore name.\n+        // For now, just measure and log if DEBUG level logging is enabled.\n+        long start = 0;\n+        if (LOG.isDebugEnabled()) {\n+          start = System.nanoTime();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "068b54cae428b01f9e214e6ea66a0c0bc5a5ec75"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ1MjczMg==", "bodyText": "We don't, but we could. Would be another scope of change I think.", "url": "https://github.com/apache/hbase/pull/1749#discussion_r429452732", "createdAt": "2020-05-22T21:11:20Z", "author": {"login": "apurtell"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "diffHunk": "@@ -183,18 +176,21 @@ public void run() {\n       if (LOG.isInfoEnabled()) LOG.info(\"Chore: \" + getName() + \" was stopped\");\n     } else {\n       try {\n+        // TODO: Histogram metrics per chore name.\n+        // For now, just measure and log if DEBUG level logging is enabled.\n+        long start = 0;\n+        if (LOG.isDebugEnabled()) {\n+          start = System.nanoTime();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQxOTg0MA=="}, "originalCommit": {"oid": "068b54cae428b01f9e214e6ea66a0c0bc5a5ec75"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ2NjE5OA==", "bodyText": "Yeah I was kind of caviler about the ifdebug guards. Will fix", "url": "https://github.com/apache/hbase/pull/1749#discussion_r429466198", "createdAt": "2020-05-22T21:52:00Z", "author": {"login": "apurtell"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "diffHunk": "@@ -183,18 +176,21 @@ public void run() {\n       if (LOG.isInfoEnabled()) LOG.info(\"Chore: \" + getName() + \" was stopped\");\n     } else {\n       try {\n+        // TODO: Histogram metrics per chore name.\n+        // For now, just measure and log if DEBUG level logging is enabled.\n+        long start = 0;\n+        if (LOG.isDebugEnabled()) {\n+          start = System.nanoTime();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQxOTg0MA=="}, "originalCommit": {"oid": "068b54cae428b01f9e214e6ea66a0c0bc5a5ec75"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2MjQ2OA==", "bodyText": "I'm not asking for a scope change, just clarifying my understanding.", "url": "https://github.com/apache/hbase/pull/1749#discussion_r435562468", "createdAt": "2020-06-04T21:26:33Z", "author": {"login": "ndimiduk"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "diffHunk": "@@ -183,18 +176,21 @@ public void run() {\n       if (LOG.isInfoEnabled()) LOG.info(\"Chore: \" + getName() + \" was stopped\");\n     } else {\n       try {\n+        // TODO: Histogram metrics per chore name.\n+        // For now, just measure and log if DEBUG level logging is enabled.\n+        long start = 0;\n+        if (LOG.isDebugEnabled()) {\n+          start = System.nanoTime();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQxOTg0MA=="}, "originalCommit": {"oid": "068b54cae428b01f9e214e6ea66a0c0bc5a5ec75"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NDQwNzQzOnYy", "diffSide": "LEFT", "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOToyNzoyMFrOGZhu-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToyNTo0N1rOGfYmkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyMDI4Mw==", "bodyText": "Do we want some duration threshold that triggers escalating the log level to info (or warn), as was done before?", "url": "https://github.com/apache/hbase/pull/1749#discussion_r429420283", "createdAt": "2020-05-22T19:27:20Z", "author": {"login": "ndimiduk"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "diffHunk": "@@ -183,18 +176,21 @@ public void run() {\n       if (LOG.isInfoEnabled()) LOG.info(\"Chore: \" + getName() + \" was stopped\");\n     } else {\n       try {\n+        // TODO: Histogram metrics per chore name.\n+        // For now, just measure and log if DEBUG level logging is enabled.\n+        long start = 0;\n+        if (LOG.isDebugEnabled()) {\n+          start = System.nanoTime();\n+        }\n         if (!initialChoreComplete) {\n           initialChoreComplete = initialChore();\n         } else {\n-          timeMeasurement.measure(() -> {\n             chore();\n-            return null;\n-          });\n-          if (LOG.isInfoEnabled() && (System.nanoTime() - lastLog > FIVE_MINUTES_IN_NANOS)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "068b54cae428b01f9e214e6ea66a0c0bc5a5ec75"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ1MzE3OA==", "bodyText": "Not opposed to the idea at all, but it's going to depend on the chore, right?", "url": "https://github.com/apache/hbase/pull/1749#discussion_r429453178", "createdAt": "2020-05-22T21:12:38Z", "author": {"login": "apurtell"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "diffHunk": "@@ -183,18 +176,21 @@ public void run() {\n       if (LOG.isInfoEnabled()) LOG.info(\"Chore: \" + getName() + \" was stopped\");\n     } else {\n       try {\n+        // TODO: Histogram metrics per chore name.\n+        // For now, just measure and log if DEBUG level logging is enabled.\n+        long start = 0;\n+        if (LOG.isDebugEnabled()) {\n+          start = System.nanoTime();\n+        }\n         if (!initialChoreComplete) {\n           initialChoreComplete = initialChore();\n         } else {\n-          timeMeasurement.measure(() -> {\n             chore();\n-            return null;\n-          });\n-          if (LOG.isInfoEnabled() && (System.nanoTime() - lastLog > FIVE_MINUTES_IN_NANOS)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyMDI4Mw=="}, "originalCommit": {"oid": "068b54cae428b01f9e214e6ea66a0c0bc5a5ec75"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU2MjEzMA==", "bodyText": "yeah i think you're right. let's leave it for now.", "url": "https://github.com/apache/hbase/pull/1749#discussion_r435562130", "createdAt": "2020-06-04T21:25:47Z", "author": {"login": "ndimiduk"}, "path": "hbase-common/src/main/java/org/apache/hadoop/hbase/ScheduledChore.java", "diffHunk": "@@ -183,18 +176,21 @@ public void run() {\n       if (LOG.isInfoEnabled()) LOG.info(\"Chore: \" + getName() + \" was stopped\");\n     } else {\n       try {\n+        // TODO: Histogram metrics per chore name.\n+        // For now, just measure and log if DEBUG level logging is enabled.\n+        long start = 0;\n+        if (LOG.isDebugEnabled()) {\n+          start = System.nanoTime();\n+        }\n         if (!initialChoreComplete) {\n           initialChoreComplete = initialChore();\n         } else {\n-          timeMeasurement.measure(() -> {\n             chore();\n-            return null;\n-          });\n-          if (LOG.isInfoEnabled() && (System.nanoTime() - lastLog > FIVE_MINUTES_IN_NANOS)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQyMDI4Mw=="}, "originalCommit": {"oid": "068b54cae428b01f9e214e6ea66a0c0bc5a5ec75"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3024, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}