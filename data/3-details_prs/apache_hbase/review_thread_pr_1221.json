{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMTkxMzky", "number": 1221, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxODozMTo0N1rODkYCZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOTowNDo0MVrODluT_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NDY5MTU4OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxODozMTo0N1rOFwqbTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNjo0MjozM1rOFw55Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3MTA4Nw==", "bodyText": "Will this work?\nWe still might get another's rpc when the RpcServer is called because the row key clashes?", "url": "https://github.com/apache/hbase/pull/1221#discussion_r386571087", "createdAt": "2020-03-02T18:31:47Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore.java", "diffHunk": "@@ -552,11 +586,12 @@ public void insert(Procedure<?> proc, Procedure<?>[] subProcs) {\n       for (Procedure<?> subProc : subProcs) {\n         serializePut(subProc, mutations, rowsToLock);\n       }\n-      region.mutateRowsWithLocks(mutations, rowsToLock, NO_NONCE, NO_NONCE);\n+      executeInsert(mutations, rowsToLock);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c14ac5f4f520d024a331f9e408ca18aebd8107c"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgyNDUwMw==", "bodyText": "Let me write a ut to verify this.", "url": "https://github.com/apache/hbase/pull/1221#discussion_r386824503", "createdAt": "2020-03-03T06:42:33Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore.java", "diffHunk": "@@ -552,11 +586,12 @@ public void insert(Procedure<?> proc, Procedure<?>[] subProcs) {\n       for (Procedure<?> subProc : subProcs) {\n         serializePut(subProc, mutations, rowsToLock);\n       }\n-      region.mutateRowsWithLocks(mutations, rowsToLock, NO_NONCE, NO_NONCE);\n+      executeInsert(mutations, rowsToLock);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU3MTA4Nw=="}, "originalCommit": {"oid": "7c14ac5f4f520d024a331f9e408ca18aebd8107c"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODgyNjg2OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOTowNDo0MVrOFyxhVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOTowNDo0MVrOFyxhVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NDQ3MQ==", "bodyText": "Pity we have to write the comment three times...\nCan be a follow on, to abstract a method for this logic...", "url": "https://github.com/apache/hbase/pull/1221#discussion_r388784471", "createdAt": "2020-03-06T09:04:41Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/procedure2/store/region/RegionProcedureStore.java", "diffHunk": "@@ -547,6 +551,10 @@ public void insert(Procedure<?> proc, Procedure<?>[] subProcs) {\n     }\n     List<Mutation> mutations = new ArrayList<>(subProcs.length + 1);\n     List<byte[]> rowsToLock = new ArrayList<>(subProcs.length + 1);\n+    // Insert procedure may be called by master's rpc call. There are some check about the rpc call\n+    // when mutate region. Here unset the current rpc call and set it back in finally block.\n+    // See HBASE-23895 for more details.\n+    Optional<RpcCall> rpcCall = RpcServer.unsetCurrentCall();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d79960bec990d549e85a5a259f8c970ad1763d9"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2108, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}