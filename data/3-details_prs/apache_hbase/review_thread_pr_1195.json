{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NTI4NDQ1", "number": 1195, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDo0MTozMFrODjO7rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODoxMjo1NFrODlJlhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjcxNDA2OnYy", "diffSide": "RIGHT", "path": "dev-support/Jenkinsfile_GitHub", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDo0MTozMFrOFu7cFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMDozNTozOFrOFvl-gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1MjY2Mw==", "bodyText": "huh. I thought multijdk handling of unit tests didn't work. ref: https://s.apache.org/fqjcn", "url": "https://github.com/apache/hbase/pull/1195#discussion_r384752663", "createdAt": "2020-02-26T20:41:30Z", "author": {"login": "busbey"}, "path": "dev-support/Jenkinsfile_GitHub", "diffHunk": "@@ -144,8 +143,9 @@ pipeline {\n                         YETUS_ARGS+=(\"--docker\")\n                         YETUS_ARGS+=(\"--dockerfile=${DOCKERFILE}\")\n                         YETUS_ARGS+=(\"--mvn-custom-repos\")\n-                        YETUS_ARGS+=(\"--multijdkdirs=/usr/lib/jvm/java-8-openjdk-amd64\")\n-                        YETUS_ARGS+=(\"--findbugs-home=/usr\")\n+                        YETUS_ARGS+=(\"--java-home=/usr/lib/jvm/java-8\")\n+                        YETUS_ARGS+=(\"--multijdkdirs=/usr/lib/jvm/java-8,/usr/lib/jvm/java-11\")\n+                        YETUS_ARGS+=(\"--multijdktests=compile,unit\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb082378ba6f898cef7291f08c4ac12847815648"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg0ODMzMg==", "bodyText": "I'm not sure what to tell you. This looks like explicit support to me, at least for running the unit tests with all supplied JDKs.\nhttps://github.com/apache/yetus/blob/138de2232a351e9d9f4c3d751e7d25e52804dfe0/precommit/src/main/shell/test-patch.sh#L2103-L2105", "url": "https://github.com/apache/hbase/pull/1195#discussion_r384848332", "createdAt": "2020-02-27T00:27:39Z", "author": {"login": "ndimiduk"}, "path": "dev-support/Jenkinsfile_GitHub", "diffHunk": "@@ -144,8 +143,9 @@ pipeline {\n                         YETUS_ARGS+=(\"--docker\")\n                         YETUS_ARGS+=(\"--dockerfile=${DOCKERFILE}\")\n                         YETUS_ARGS+=(\"--mvn-custom-repos\")\n-                        YETUS_ARGS+=(\"--multijdkdirs=/usr/lib/jvm/java-8-openjdk-amd64\")\n-                        YETUS_ARGS+=(\"--findbugs-home=/usr\")\n+                        YETUS_ARGS+=(\"--java-home=/usr/lib/jvm/java-8\")\n+                        YETUS_ARGS+=(\"--multijdkdirs=/usr/lib/jvm/java-8,/usr/lib/jvm/java-11\")\n+                        YETUS_ARGS+=(\"--multijdktests=compile,unit\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1MjY2Mw=="}, "originalCommit": {"oid": "eb082378ba6f898cef7291f08c4ac12847815648"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NzAwOQ==", "bodyText": "Hurm. The test report still looks like a mixed bag. The test failures table shows both jdks, but the test vote table only has jdk8. The footer entry with the link to unit test console output also only has jdk8.", "url": "https://github.com/apache/hbase/pull/1195#discussion_r384867009", "createdAt": "2020-02-27T01:32:58Z", "author": {"login": "busbey"}, "path": "dev-support/Jenkinsfile_GitHub", "diffHunk": "@@ -144,8 +143,9 @@ pipeline {\n                         YETUS_ARGS+=(\"--docker\")\n                         YETUS_ARGS+=(\"--dockerfile=${DOCKERFILE}\")\n                         YETUS_ARGS+=(\"--mvn-custom-repos\")\n-                        YETUS_ARGS+=(\"--multijdkdirs=/usr/lib/jvm/java-8-openjdk-amd64\")\n-                        YETUS_ARGS+=(\"--findbugs-home=/usr\")\n+                        YETUS_ARGS+=(\"--java-home=/usr/lib/jvm/java-8\")\n+                        YETUS_ARGS+=(\"--multijdkdirs=/usr/lib/jvm/java-8,/usr/lib/jvm/java-11\")\n+                        YETUS_ARGS+=(\"--multijdktests=compile,unit\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1MjY2Mw=="}, "originalCommit": {"oid": "eb082378ba6f898cef7291f08c4ac12847815648"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI1MzMwNw==", "bodyText": "Okay. Let me break the JDK11 check out of a multijdk block and into separate stages. Do you prefer parallel or serial stages?", "url": "https://github.com/apache/hbase/pull/1195#discussion_r385253307", "createdAt": "2020-02-27T17:18:09Z", "author": {"login": "ndimiduk"}, "path": "dev-support/Jenkinsfile_GitHub", "diffHunk": "@@ -144,8 +143,9 @@ pipeline {\n                         YETUS_ARGS+=(\"--docker\")\n                         YETUS_ARGS+=(\"--dockerfile=${DOCKERFILE}\")\n                         YETUS_ARGS+=(\"--mvn-custom-repos\")\n-                        YETUS_ARGS+=(\"--multijdkdirs=/usr/lib/jvm/java-8-openjdk-amd64\")\n-                        YETUS_ARGS+=(\"--findbugs-home=/usr\")\n+                        YETUS_ARGS+=(\"--java-home=/usr/lib/jvm/java-8\")\n+                        YETUS_ARGS+=(\"--multijdkdirs=/usr/lib/jvm/java-8,/usr/lib/jvm/java-11\")\n+                        YETUS_ARGS+=(\"--multijdktests=compile,unit\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1MjY2Mw=="}, "originalCommit": {"oid": "eb082378ba6f898cef7291f08c4ac12847815648"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI5NzcwNA==", "bodyText": "I personally prefer parallel. especially once we get the github integration in place to list the tests and check them off as we go it'll be nice.\nhowever, if we do serial I believe jenkins will optimize executor reuse. so that might give a better experience (both us being nice to others and minimizing total time to be \"done\") prior to that incremental progress reporting.\ndo whichever you like.", "url": "https://github.com/apache/hbase/pull/1195#discussion_r385297704", "createdAt": "2020-02-27T18:39:50Z", "author": {"login": "busbey"}, "path": "dev-support/Jenkinsfile_GitHub", "diffHunk": "@@ -144,8 +143,9 @@ pipeline {\n                         YETUS_ARGS+=(\"--docker\")\n                         YETUS_ARGS+=(\"--dockerfile=${DOCKERFILE}\")\n                         YETUS_ARGS+=(\"--mvn-custom-repos\")\n-                        YETUS_ARGS+=(\"--multijdkdirs=/usr/lib/jvm/java-8-openjdk-amd64\")\n-                        YETUS_ARGS+=(\"--findbugs-home=/usr\")\n+                        YETUS_ARGS+=(\"--java-home=/usr/lib/jvm/java-8\")\n+                        YETUS_ARGS+=(\"--multijdkdirs=/usr/lib/jvm/java-8,/usr/lib/jvm/java-11\")\n+                        YETUS_ARGS+=(\"--multijdktests=compile,unit\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1MjY2Mw=="}, "originalCommit": {"oid": "eb082378ba6f898cef7291f08c4ac12847815648"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ0OTYwMA==", "bodyText": "Hurm. The test report still looks like a mixed bag. The test failures table shows both jdks, but the test vote table only has jdk8. The footer entry with the link to unit test console output also only has jdk8.\n\nYou're right. Have a look at the table printed over on #1214 (comment). This should be filed as a bug/feature in Yetus?\n\ndo whichever you like.\n\nI've started plumbing in for parallel steps, since that's what nightly does and I can follow along. This is more involved than I originally imagined. I'm not sure how reporting of each check's success will work out -- right now we have a single summary written by Yetus, after this I expect we'll have 3 summaries (general, jdk8, jdk11), each written back independently. I'm inclined to not bother also collecting and writing a summary and the reports, given that we want to invest in HBASE-23902.", "url": "https://github.com/apache/hbase/pull/1195#discussion_r385449600", "createdAt": "2020-02-28T00:35:38Z", "author": {"login": "ndimiduk"}, "path": "dev-support/Jenkinsfile_GitHub", "diffHunk": "@@ -144,8 +143,9 @@ pipeline {\n                         YETUS_ARGS+=(\"--docker\")\n                         YETUS_ARGS+=(\"--dockerfile=${DOCKERFILE}\")\n                         YETUS_ARGS+=(\"--mvn-custom-repos\")\n-                        YETUS_ARGS+=(\"--multijdkdirs=/usr/lib/jvm/java-8-openjdk-amd64\")\n-                        YETUS_ARGS+=(\"--findbugs-home=/usr\")\n+                        YETUS_ARGS+=(\"--java-home=/usr/lib/jvm/java-8\")\n+                        YETUS_ARGS+=(\"--multijdkdirs=/usr/lib/jvm/java-8,/usr/lib/jvm/java-11\")\n+                        YETUS_ARGS+=(\"--multijdktests=compile,unit\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1MjY2Mw=="}, "originalCommit": {"oid": "eb082378ba6f898cef7291f08c4ac12847815648"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjcxNjgyOnYy", "diffSide": "RIGHT", "path": "dev-support/docker/Dockerfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDo0MjoyNFrOFu7d0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDo0MjoyNFrOFu7d0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1MzEwNw==", "bodyText": "nit: s/Yetus/HBase or HBase's use of Apache Yetus", "url": "https://github.com/apache/hbase/pull/1195#discussion_r384753107", "createdAt": "2020-02-26T20:42:24Z", "author": {"login": "busbey"}, "path": "dev-support/docker/Dockerfile", "diffHunk": "@@ -14,47 +14,162 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n-# Dockerfile for installing the necessary dependencies for building Hadoop.\n-# See BUILDING.txt.\n-\n-FROM maven:3.5-jdk-8\n-\n-RUN apt-get -q update && apt-get -q install --no-install-recommends -y \\\n-       git \\\n-       bats \\\n-       findbugs \\\n-       libperl-critic-perl \\\n-       pylint \\\n-       python-dateutil \\\n-       rsync \\\n-       make \\\n-       gcc \\\n-       libc6-dev \\\n-       ruby \\\n-       ruby-dev \\\n-       wget \\\n-       && \\\n-    gem install --no-document rake rubocop ruby-lint\n-\n-ENV FINDBUGS_HOME /usr\n-\n-####\n-# Install shellcheck\n-###\n-RUN mkdir -p /opt/shellcheck && \\\n-    curl -L -s -S \\\n-        https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.x86_64.tar.xz \\\n-        -o /opt/shellcheck.tar.xz && \\\n-    tar xJf /opt/shellcheck.tar.xz --strip-components 1 -C /opt/shellcheck && \\\n-    ln -s /opt/shellcheck/shellcheck /usr/bin/shellcheck && \\\n-    rm -f /opt/shellcheck.tar.xz\n+#\n+# Dockerfile used as the build and test environment for Yetus.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb082378ba6f898cef7291f08c4ac12847815648"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjcyMzQwOnYy", "diffSide": "RIGHT", "path": "dev-support/docker/Dockerfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDo0NDozMFrOFu7h8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMDoyOToyMFrOFvBT2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1NDE2Mg==", "bodyText": "TODO HBASE-23077 / HBASE-22383", "url": "https://github.com/apache/hbase/pull/1195#discussion_r384754162", "createdAt": "2020-02-26T20:44:30Z", "author": {"login": "busbey"}, "path": "dev-support/docker/Dockerfile", "diffHunk": "@@ -14,47 +14,162 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n-# Dockerfile for installing the necessary dependencies for building Hadoop.\n-# See BUILDING.txt.\n-\n-FROM maven:3.5-jdk-8\n-\n-RUN apt-get -q update && apt-get -q install --no-install-recommends -y \\\n-       git \\\n-       bats \\\n-       findbugs \\\n-       libperl-critic-perl \\\n-       pylint \\\n-       python-dateutil \\\n-       rsync \\\n-       make \\\n-       gcc \\\n-       libc6-dev \\\n-       ruby \\\n-       ruby-dev \\\n-       wget \\\n-       && \\\n-    gem install --no-document rake rubocop ruby-lint\n-\n-ENV FINDBUGS_HOME /usr\n-\n-####\n-# Install shellcheck\n-###\n-RUN mkdir -p /opt/shellcheck && \\\n-    curl -L -s -S \\\n-        https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.x86_64.tar.xz \\\n-        -o /opt/shellcheck.tar.xz && \\\n-    tar xJf /opt/shellcheck.tar.xz --strip-components 1 -C /opt/shellcheck && \\\n-    ln -s /opt/shellcheck/shellcheck /usr/bin/shellcheck && \\\n-    rm -f /opt/shellcheck.tar.xz\n+#\n+# Dockerfile used as the build and test environment for Yetus.\n+#\n+# Built in multiple stages so as to avoid re-downloading large binaries when\n+# tweaking unrelated aspects of the image.\n \n-###\n-# Avoid out of memory errors in builds\n-###\n-ENV MAVEN_OPTS -Xmx3g\n+# start with a minimal image into which we can download remote tarballs\n+FROM ubuntu:18.04 AS BASE_IMAGE\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+\n+# hadolint ignore=DL3009\n+RUN DEBIAN_FRONTEND=noninteractive apt-get -qq update && \\\n+  DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n+    ca-certificates=20180409 \\\n+    curl=7.58.0-2ubuntu3.8 \\\n+    locales=2.27-3ubuntu1\n+\n+RUN locale-gen en_US.UTF-8\n+ENV LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\n+\n+##\n+# download sundry dependencies\n+#\n+\n+FROM BASE_IMAGE AS FINDBUGS_DOWNLOAD_IMAGE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb082378ba6f898cef7291f08c4ac12847815648"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg0ODg1Ng==", "bodyText": "nod", "url": "https://github.com/apache/hbase/pull/1195#discussion_r384848856", "createdAt": "2020-02-27T00:29:20Z", "author": {"login": "ndimiduk"}, "path": "dev-support/docker/Dockerfile", "diffHunk": "@@ -14,47 +14,162 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n-# Dockerfile for installing the necessary dependencies for building Hadoop.\n-# See BUILDING.txt.\n-\n-FROM maven:3.5-jdk-8\n-\n-RUN apt-get -q update && apt-get -q install --no-install-recommends -y \\\n-       git \\\n-       bats \\\n-       findbugs \\\n-       libperl-critic-perl \\\n-       pylint \\\n-       python-dateutil \\\n-       rsync \\\n-       make \\\n-       gcc \\\n-       libc6-dev \\\n-       ruby \\\n-       ruby-dev \\\n-       wget \\\n-       && \\\n-    gem install --no-document rake rubocop ruby-lint\n-\n-ENV FINDBUGS_HOME /usr\n-\n-####\n-# Install shellcheck\n-###\n-RUN mkdir -p /opt/shellcheck && \\\n-    curl -L -s -S \\\n-        https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.x86_64.tar.xz \\\n-        -o /opt/shellcheck.tar.xz && \\\n-    tar xJf /opt/shellcheck.tar.xz --strip-components 1 -C /opt/shellcheck && \\\n-    ln -s /opt/shellcheck/shellcheck /usr/bin/shellcheck && \\\n-    rm -f /opt/shellcheck.tar.xz\n+#\n+# Dockerfile used as the build and test environment for Yetus.\n+#\n+# Built in multiple stages so as to avoid re-downloading large binaries when\n+# tweaking unrelated aspects of the image.\n \n-###\n-# Avoid out of memory errors in builds\n-###\n-ENV MAVEN_OPTS -Xmx3g\n+# start with a minimal image into which we can download remote tarballs\n+FROM ubuntu:18.04 AS BASE_IMAGE\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+\n+# hadolint ignore=DL3009\n+RUN DEBIAN_FRONTEND=noninteractive apt-get -qq update && \\\n+  DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n+    ca-certificates=20180409 \\\n+    curl=7.58.0-2ubuntu3.8 \\\n+    locales=2.27-3ubuntu1\n+\n+RUN locale-gen en_US.UTF-8\n+ENV LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\n+\n+##\n+# download sundry dependencies\n+#\n+\n+FROM BASE_IMAGE AS FINDBUGS_DOWNLOAD_IMAGE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1NDE2Mg=="}, "originalCommit": {"oid": "eb082378ba6f898cef7291f08c4ac12847815648"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjcyNTAyOnYy", "diffSide": "RIGHT", "path": "dev-support/docker/Dockerfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDo0NTowNVrOFu7i9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDo0NTowNVrOFu7i9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1NDQyMg==", "bodyText": "personal nit: long curl options much easier to maintain since most of our contributor don't have curl short flags memorized.", "url": "https://github.com/apache/hbase/pull/1195#discussion_r384754422", "createdAt": "2020-02-26T20:45:05Z", "author": {"login": "busbey"}, "path": "dev-support/docker/Dockerfile", "diffHunk": "@@ -14,47 +14,162 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n-# Dockerfile for installing the necessary dependencies for building Hadoop.\n-# See BUILDING.txt.\n-\n-FROM maven:3.5-jdk-8\n-\n-RUN apt-get -q update && apt-get -q install --no-install-recommends -y \\\n-       git \\\n-       bats \\\n-       findbugs \\\n-       libperl-critic-perl \\\n-       pylint \\\n-       python-dateutil \\\n-       rsync \\\n-       make \\\n-       gcc \\\n-       libc6-dev \\\n-       ruby \\\n-       ruby-dev \\\n-       wget \\\n-       && \\\n-    gem install --no-document rake rubocop ruby-lint\n-\n-ENV FINDBUGS_HOME /usr\n-\n-####\n-# Install shellcheck\n-###\n-RUN mkdir -p /opt/shellcheck && \\\n-    curl -L -s -S \\\n-        https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.x86_64.tar.xz \\\n-        -o /opt/shellcheck.tar.xz && \\\n-    tar xJf /opt/shellcheck.tar.xz --strip-components 1 -C /opt/shellcheck && \\\n-    ln -s /opt/shellcheck/shellcheck /usr/bin/shellcheck && \\\n-    rm -f /opt/shellcheck.tar.xz\n+#\n+# Dockerfile used as the build and test environment for Yetus.\n+#\n+# Built in multiple stages so as to avoid re-downloading large binaries when\n+# tweaking unrelated aspects of the image.\n \n-###\n-# Avoid out of memory errors in builds\n-###\n-ENV MAVEN_OPTS -Xmx3g\n+# start with a minimal image into which we can download remote tarballs\n+FROM ubuntu:18.04 AS BASE_IMAGE\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+\n+# hadolint ignore=DL3009\n+RUN DEBIAN_FRONTEND=noninteractive apt-get -qq update && \\\n+  DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n+    ca-certificates=20180409 \\\n+    curl=7.58.0-2ubuntu3.8 \\\n+    locales=2.27-3ubuntu1\n+\n+RUN locale-gen en_US.UTF-8\n+ENV LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\n+\n+##\n+# download sundry dependencies\n+#\n+\n+FROM BASE_IMAGE AS FINDBUGS_DOWNLOAD_IMAGE\n+ENV FINDBUGS_VERSION '3.0.1'\n+ENV FINDBUGS_URL \"https://downloads.sourceforge.net/project/findbugs/findbugs/${FINDBUGS_VERSION}/findbugs-${FINDBUGS_VERSION}.tar.gz\"\n+ENV FINDBUGS_SHA256 'e80e0da0c213a27504ef3188ef25f107651700ffc66433eac6a7454bbe336419'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/findbugs.tar.gz \"${FINDBUGS_URL}\" && \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb082378ba6f898cef7291f08c4ac12847815648"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MjczMzA4OnYy", "diffSide": "RIGHT", "path": "dev-support/docker/Dockerfile", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMDo0NzoyN1rOFu7n0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwMToyODo0OVrOFvCWKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1NTY2Ng==", "bodyText": "what happened to jdk7?", "url": "https://github.com/apache/hbase/pull/1195#discussion_r384755666", "createdAt": "2020-02-26T20:47:27Z", "author": {"login": "busbey"}, "path": "dev-support/docker/Dockerfile", "diffHunk": "@@ -14,47 +14,162 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n-# Dockerfile for installing the necessary dependencies for building Hadoop.\n-# See BUILDING.txt.\n-\n-FROM maven:3.5-jdk-8\n-\n-RUN apt-get -q update && apt-get -q install --no-install-recommends -y \\\n-       git \\\n-       bats \\\n-       findbugs \\\n-       libperl-critic-perl \\\n-       pylint \\\n-       python-dateutil \\\n-       rsync \\\n-       make \\\n-       gcc \\\n-       libc6-dev \\\n-       ruby \\\n-       ruby-dev \\\n-       wget \\\n-       && \\\n-    gem install --no-document rake rubocop ruby-lint\n-\n-ENV FINDBUGS_HOME /usr\n-\n-####\n-# Install shellcheck\n-###\n-RUN mkdir -p /opt/shellcheck && \\\n-    curl -L -s -S \\\n-        https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.x86_64.tar.xz \\\n-        -o /opt/shellcheck.tar.xz && \\\n-    tar xJf /opt/shellcheck.tar.xz --strip-components 1 -C /opt/shellcheck && \\\n-    ln -s /opt/shellcheck/shellcheck /usr/bin/shellcheck && \\\n-    rm -f /opt/shellcheck.tar.xz\n+#\n+# Dockerfile used as the build and test environment for Yetus.\n+#\n+# Built in multiple stages so as to avoid re-downloading large binaries when\n+# tweaking unrelated aspects of the image.\n \n-###\n-# Avoid out of memory errors in builds\n-###\n-ENV MAVEN_OPTS -Xmx3g\n+# start with a minimal image into which we can download remote tarballs\n+FROM ubuntu:18.04 AS BASE_IMAGE\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+\n+# hadolint ignore=DL3009\n+RUN DEBIAN_FRONTEND=noninteractive apt-get -qq update && \\\n+  DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n+    ca-certificates=20180409 \\\n+    curl=7.58.0-2ubuntu3.8 \\\n+    locales=2.27-3ubuntu1\n+\n+RUN locale-gen en_US.UTF-8\n+ENV LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\n+\n+##\n+# download sundry dependencies\n+#\n+\n+FROM BASE_IMAGE AS FINDBUGS_DOWNLOAD_IMAGE\n+ENV FINDBUGS_VERSION '3.0.1'\n+ENV FINDBUGS_URL \"https://downloads.sourceforge.net/project/findbugs/findbugs/${FINDBUGS_VERSION}/findbugs-${FINDBUGS_VERSION}.tar.gz\"\n+ENV FINDBUGS_SHA256 'e80e0da0c213a27504ef3188ef25f107651700ffc66433eac6a7454bbe336419'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/findbugs.tar.gz \"${FINDBUGS_URL}\" && \\\n+  echo \"${FINDBUGS_SHA256} */tmp/findbugs.tar.gz\" | sha256sum -c -\n+\n+FROM BASE_IMAGE AS HADOLINT_DOWNLOAD_IMAGE\n+ENV HADOLINT_VERSION '1.17.5'\n+ENV HADOLINT_URL \"https://github.com/hadolint/hadolint/releases/download/v${HADOLINT_VERSION}/hadolint-Linux-x86_64\"\n+ENV HADOLINT_SHA256 '20dd38bc0602040f19268adc14c3d1aae11af27b463af43f3122076baf827a35'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/hadolint \"${HADOLINT_URL}\" && \\\n+  echo \"${HADOLINT_SHA256} */tmp/hadolint\" | sha256sum -c -\n+\n+FROM BASE_IMAGE AS MAVEN_DOWNLOAD_IMAGE\n+ENV MAVEN_VERSION='3.5.4'\n+ENV MAVEN_URL \"https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz\"\n+ENV MAVEN_SHA256 'ce50b1c91364cb77efe3776f756a6d92b76d9038b0a0782f7d53acf1e997a14d'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/maven.tar.gz \"${MAVEN_URL}\" && \\\n+  echo \"${MAVEN_SHA256} */tmp/maven.tar.gz\" | sha256sum -c -\n+\n+FROM BASE_IMAGE AS OPENJDK8_DOWNLOAD_IMAGE\n+ENV OPENJDK8_URL 'https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u232-b09/OpenJDK8U-jdk_x64_linux_hotspot_8u232b09.tar.gz'\n+ENV OPENJDK8_SHA256 '7b7884f2eb2ba2d47f4c0bf3bb1a2a95b73a3a7734bd47ebf9798483a7bcc423'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/adoptopenjdk8.tar.gz \"${OPENJDK8_URL}\" && \\\n+  echo \"${OPENJDK8_SHA256} */tmp/adoptopenjdk8.tar.gz\" | sha256sum -c -\n+\n+FROM BASE_IMAGE AS OPENJDK11_DOWNLOAD_IMAGE\n+ENV OPENJDK11_URL 'https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.6%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.6_10.tar.gz'\n+ENV OPENJDK11_SHA256 '330d19a2eaa07ed02757d7a785a77bab49f5ee710ea03b4ee2fa220ddd0feffc'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/adoptopenjdk11.tar.gz \"${OPENJDK11_URL}\" && \\\n+  echo \"${OPENJDK11_SHA256} */tmp/adoptopenjdk11.tar.gz\" | sha256sum -c -\n+\n+##\n+# build the final image\n+#\n+\n+FROM BASE_IMAGE\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+\n+##\n+# install dependencies from system packages.\n+# be careful not to install any system packages (i.e., findbugs) that will\n+# pull in the default-jre.\n+#\n+\n+# bring the base image into conformance with the expectations imposed by\n+# Yetus and our personality file of what a build environment looks like.\n+RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n+  bash=4.4.18-2ubuntu1.2 \\\n+  build-essential=12.4ubuntu1 \\\n+  curl=7.58.0-2ubuntu3.8 \\\n+  diffutils=1:3.6-1 \\\n+  git=1:2.17.1-1ubuntu0.5 \\\n+  rsync=3.1.2-2.1ubuntu1 \\\n+  tar=1.29b-2ubuntu0.1 \\\n+  wget=1.19.4-1ubuntu2.2\n+\n+# install the dependencies required in order to enable the sundry precommit\n+# checks/features provided by Yetus plugins.\n+RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n+  bats=0.4.0-1.1 \\\n+  libperl-critic-perl=1.130-1 \\\n+  python3=3.6.7-1~18.04 \\\n+  python3-pip=9.0.1-2.3~ubuntu1.18.04.1 \\\n+  python3-setuptools=39.0.1-2 \\\n+  ruby=1:2.5.1 \\\n+  ruby-dev=1:2.5.1 \\\n+  shellcheck=0.4.6-1 \\\n+  && \\\n+  apt-get clean && \\\n+  rm -rf /var/lib/apt/lists/*\n+\n+RUN python3 -mpip install --upgrade pip && \\\n+  python3 -mpip install pylint==2.4.4\n+\n+RUN gem install --no-document \\\n+  rake:13.0.1 \\\n+  rubocop:0.80.0 \\\n+  ruby-lint:2.3.1\n+\n+# hadolint ignore=DL3010\n+COPY --from=FINDBUGS_DOWNLOAD_IMAGE /tmp/findbugs.tar.gz /tmp/findbugs.tar.gz\n+RUN tar xzf /tmp/findbugs.tar.gz -C /opt && \\\n+  ln -s \"/opt/$(dirname \"$(tar -tf /tmp/findbugs.tar.gz | head -n1)\")\" /opt/findbugs && \\\n+  rm /tmp/findbugs.tar.gz\n+\n+COPY --from=HADOLINT_DOWNLOAD_IMAGE /tmp/hadolint /tmp/hadolint\n+RUN mv /tmp/hadolint /usr/local/bin && \\\n+  chmod a+x /usr/local/bin/hadolint\n+\n+# hadolint ignore=DL3010\n+COPY --from=MAVEN_DOWNLOAD_IMAGE /tmp/maven.tar.gz /tmp/maven.tar.gz\n+RUN tar xzf /tmp/maven.tar.gz -C /opt && \\\n+  ln -s \"/opt/$(dirname \"$(tar -tf /tmp/maven.tar.gz | head -n1)\")\" /opt/maven && \\\n+  rm /tmp/maven.tar.gz\n+\n+##\n+# ensure JVMs are available under `/usr/lib/jvm` and prefix each installation\n+# as `java-` so as to conform with Yetus's assumptions.\n+#\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eb082378ba6f898cef7291f08c4ac12847815648"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg0OTIzOA==", "bodyText": "I dropped it following our discussion last friday, and realizing that the migration to all branches building for the same Dockerfile will be a larger effort. It can be restored if feel strongly, but I don't think it provides any benefit at this time.", "url": "https://github.com/apache/hbase/pull/1195#discussion_r384849238", "createdAt": "2020-02-27T00:30:34Z", "author": {"login": "ndimiduk"}, "path": "dev-support/docker/Dockerfile", "diffHunk": "@@ -14,47 +14,162 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n-# Dockerfile for installing the necessary dependencies for building Hadoop.\n-# See BUILDING.txt.\n-\n-FROM maven:3.5-jdk-8\n-\n-RUN apt-get -q update && apt-get -q install --no-install-recommends -y \\\n-       git \\\n-       bats \\\n-       findbugs \\\n-       libperl-critic-perl \\\n-       pylint \\\n-       python-dateutil \\\n-       rsync \\\n-       make \\\n-       gcc \\\n-       libc6-dev \\\n-       ruby \\\n-       ruby-dev \\\n-       wget \\\n-       && \\\n-    gem install --no-document rake rubocop ruby-lint\n-\n-ENV FINDBUGS_HOME /usr\n-\n-####\n-# Install shellcheck\n-###\n-RUN mkdir -p /opt/shellcheck && \\\n-    curl -L -s -S \\\n-        https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.x86_64.tar.xz \\\n-        -o /opt/shellcheck.tar.xz && \\\n-    tar xJf /opt/shellcheck.tar.xz --strip-components 1 -C /opt/shellcheck && \\\n-    ln -s /opt/shellcheck/shellcheck /usr/bin/shellcheck && \\\n-    rm -f /opt/shellcheck.tar.xz\n+#\n+# Dockerfile used as the build and test environment for Yetus.\n+#\n+# Built in multiple stages so as to avoid re-downloading large binaries when\n+# tweaking unrelated aspects of the image.\n \n-###\n-# Avoid out of memory errors in builds\n-###\n-ENV MAVEN_OPTS -Xmx3g\n+# start with a minimal image into which we can download remote tarballs\n+FROM ubuntu:18.04 AS BASE_IMAGE\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+\n+# hadolint ignore=DL3009\n+RUN DEBIAN_FRONTEND=noninteractive apt-get -qq update && \\\n+  DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n+    ca-certificates=20180409 \\\n+    curl=7.58.0-2ubuntu3.8 \\\n+    locales=2.27-3ubuntu1\n+\n+RUN locale-gen en_US.UTF-8\n+ENV LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\n+\n+##\n+# download sundry dependencies\n+#\n+\n+FROM BASE_IMAGE AS FINDBUGS_DOWNLOAD_IMAGE\n+ENV FINDBUGS_VERSION '3.0.1'\n+ENV FINDBUGS_URL \"https://downloads.sourceforge.net/project/findbugs/findbugs/${FINDBUGS_VERSION}/findbugs-${FINDBUGS_VERSION}.tar.gz\"\n+ENV FINDBUGS_SHA256 'e80e0da0c213a27504ef3188ef25f107651700ffc66433eac6a7454bbe336419'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/findbugs.tar.gz \"${FINDBUGS_URL}\" && \\\n+  echo \"${FINDBUGS_SHA256} */tmp/findbugs.tar.gz\" | sha256sum -c -\n+\n+FROM BASE_IMAGE AS HADOLINT_DOWNLOAD_IMAGE\n+ENV HADOLINT_VERSION '1.17.5'\n+ENV HADOLINT_URL \"https://github.com/hadolint/hadolint/releases/download/v${HADOLINT_VERSION}/hadolint-Linux-x86_64\"\n+ENV HADOLINT_SHA256 '20dd38bc0602040f19268adc14c3d1aae11af27b463af43f3122076baf827a35'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/hadolint \"${HADOLINT_URL}\" && \\\n+  echo \"${HADOLINT_SHA256} */tmp/hadolint\" | sha256sum -c -\n+\n+FROM BASE_IMAGE AS MAVEN_DOWNLOAD_IMAGE\n+ENV MAVEN_VERSION='3.5.4'\n+ENV MAVEN_URL \"https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz\"\n+ENV MAVEN_SHA256 'ce50b1c91364cb77efe3776f756a6d92b76d9038b0a0782f7d53acf1e997a14d'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/maven.tar.gz \"${MAVEN_URL}\" && \\\n+  echo \"${MAVEN_SHA256} */tmp/maven.tar.gz\" | sha256sum -c -\n+\n+FROM BASE_IMAGE AS OPENJDK8_DOWNLOAD_IMAGE\n+ENV OPENJDK8_URL 'https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u232-b09/OpenJDK8U-jdk_x64_linux_hotspot_8u232b09.tar.gz'\n+ENV OPENJDK8_SHA256 '7b7884f2eb2ba2d47f4c0bf3bb1a2a95b73a3a7734bd47ebf9798483a7bcc423'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/adoptopenjdk8.tar.gz \"${OPENJDK8_URL}\" && \\\n+  echo \"${OPENJDK8_SHA256} */tmp/adoptopenjdk8.tar.gz\" | sha256sum -c -\n+\n+FROM BASE_IMAGE AS OPENJDK11_DOWNLOAD_IMAGE\n+ENV OPENJDK11_URL 'https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.6%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.6_10.tar.gz'\n+ENV OPENJDK11_SHA256 '330d19a2eaa07ed02757d7a785a77bab49f5ee710ea03b4ee2fa220ddd0feffc'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/adoptopenjdk11.tar.gz \"${OPENJDK11_URL}\" && \\\n+  echo \"${OPENJDK11_SHA256} */tmp/adoptopenjdk11.tar.gz\" | sha256sum -c -\n+\n+##\n+# build the final image\n+#\n+\n+FROM BASE_IMAGE\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+\n+##\n+# install dependencies from system packages.\n+# be careful not to install any system packages (i.e., findbugs) that will\n+# pull in the default-jre.\n+#\n+\n+# bring the base image into conformance with the expectations imposed by\n+# Yetus and our personality file of what a build environment looks like.\n+RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n+  bash=4.4.18-2ubuntu1.2 \\\n+  build-essential=12.4ubuntu1 \\\n+  curl=7.58.0-2ubuntu3.8 \\\n+  diffutils=1:3.6-1 \\\n+  git=1:2.17.1-1ubuntu0.5 \\\n+  rsync=3.1.2-2.1ubuntu1 \\\n+  tar=1.29b-2ubuntu0.1 \\\n+  wget=1.19.4-1ubuntu2.2\n+\n+# install the dependencies required in order to enable the sundry precommit\n+# checks/features provided by Yetus plugins.\n+RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n+  bats=0.4.0-1.1 \\\n+  libperl-critic-perl=1.130-1 \\\n+  python3=3.6.7-1~18.04 \\\n+  python3-pip=9.0.1-2.3~ubuntu1.18.04.1 \\\n+  python3-setuptools=39.0.1-2 \\\n+  ruby=1:2.5.1 \\\n+  ruby-dev=1:2.5.1 \\\n+  shellcheck=0.4.6-1 \\\n+  && \\\n+  apt-get clean && \\\n+  rm -rf /var/lib/apt/lists/*\n+\n+RUN python3 -mpip install --upgrade pip && \\\n+  python3 -mpip install pylint==2.4.4\n+\n+RUN gem install --no-document \\\n+  rake:13.0.1 \\\n+  rubocop:0.80.0 \\\n+  ruby-lint:2.3.1\n+\n+# hadolint ignore=DL3010\n+COPY --from=FINDBUGS_DOWNLOAD_IMAGE /tmp/findbugs.tar.gz /tmp/findbugs.tar.gz\n+RUN tar xzf /tmp/findbugs.tar.gz -C /opt && \\\n+  ln -s \"/opt/$(dirname \"$(tar -tf /tmp/findbugs.tar.gz | head -n1)\")\" /opt/findbugs && \\\n+  rm /tmp/findbugs.tar.gz\n+\n+COPY --from=HADOLINT_DOWNLOAD_IMAGE /tmp/hadolint /tmp/hadolint\n+RUN mv /tmp/hadolint /usr/local/bin && \\\n+  chmod a+x /usr/local/bin/hadolint\n+\n+# hadolint ignore=DL3010\n+COPY --from=MAVEN_DOWNLOAD_IMAGE /tmp/maven.tar.gz /tmp/maven.tar.gz\n+RUN tar xzf /tmp/maven.tar.gz -C /opt && \\\n+  ln -s \"/opt/$(dirname \"$(tar -tf /tmp/maven.tar.gz | head -n1)\")\" /opt/maven && \\\n+  rm /tmp/maven.tar.gz\n+\n+##\n+# ensure JVMs are available under `/usr/lib/jvm` and prefix each installation\n+# as `java-` so as to conform with Yetus's assumptions.\n+#\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1NTY2Ng=="}, "originalCommit": {"oid": "eb082378ba6f898cef7291f08c4ac12847815648"}, "originalPosition": 172}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDg2NTgzMw==", "bodyText": "Ah. That makes sense. Fine by me.", "url": "https://github.com/apache/hbase/pull/1195#discussion_r384865833", "createdAt": "2020-02-27T01:28:49Z", "author": {"login": "busbey"}, "path": "dev-support/docker/Dockerfile", "diffHunk": "@@ -14,47 +14,162 @@\n # See the License for the specific language governing permissions and\n # limitations under the License.\n \n-# Dockerfile for installing the necessary dependencies for building Hadoop.\n-# See BUILDING.txt.\n-\n-FROM maven:3.5-jdk-8\n-\n-RUN apt-get -q update && apt-get -q install --no-install-recommends -y \\\n-       git \\\n-       bats \\\n-       findbugs \\\n-       libperl-critic-perl \\\n-       pylint \\\n-       python-dateutil \\\n-       rsync \\\n-       make \\\n-       gcc \\\n-       libc6-dev \\\n-       ruby \\\n-       ruby-dev \\\n-       wget \\\n-       && \\\n-    gem install --no-document rake rubocop ruby-lint\n-\n-ENV FINDBUGS_HOME /usr\n-\n-####\n-# Install shellcheck\n-###\n-RUN mkdir -p /opt/shellcheck && \\\n-    curl -L -s -S \\\n-        https://storage.googleapis.com/shellcheck/shellcheck-stable.linux.x86_64.tar.xz \\\n-        -o /opt/shellcheck.tar.xz && \\\n-    tar xJf /opt/shellcheck.tar.xz --strip-components 1 -C /opt/shellcheck && \\\n-    ln -s /opt/shellcheck/shellcheck /usr/bin/shellcheck && \\\n-    rm -f /opt/shellcheck.tar.xz\n+#\n+# Dockerfile used as the build and test environment for Yetus.\n+#\n+# Built in multiple stages so as to avoid re-downloading large binaries when\n+# tweaking unrelated aspects of the image.\n \n-###\n-# Avoid out of memory errors in builds\n-###\n-ENV MAVEN_OPTS -Xmx3g\n+# start with a minimal image into which we can download remote tarballs\n+FROM ubuntu:18.04 AS BASE_IMAGE\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+\n+# hadolint ignore=DL3009\n+RUN DEBIAN_FRONTEND=noninteractive apt-get -qq update && \\\n+  DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n+    ca-certificates=20180409 \\\n+    curl=7.58.0-2ubuntu3.8 \\\n+    locales=2.27-3ubuntu1\n+\n+RUN locale-gen en_US.UTF-8\n+ENV LANG=en_US.UTF-8 LANGUAGE=en_US:en LC_ALL=en_US.UTF-8\n+\n+##\n+# download sundry dependencies\n+#\n+\n+FROM BASE_IMAGE AS FINDBUGS_DOWNLOAD_IMAGE\n+ENV FINDBUGS_VERSION '3.0.1'\n+ENV FINDBUGS_URL \"https://downloads.sourceforge.net/project/findbugs/findbugs/${FINDBUGS_VERSION}/findbugs-${FINDBUGS_VERSION}.tar.gz\"\n+ENV FINDBUGS_SHA256 'e80e0da0c213a27504ef3188ef25f107651700ffc66433eac6a7454bbe336419'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/findbugs.tar.gz \"${FINDBUGS_URL}\" && \\\n+  echo \"${FINDBUGS_SHA256} */tmp/findbugs.tar.gz\" | sha256sum -c -\n+\n+FROM BASE_IMAGE AS HADOLINT_DOWNLOAD_IMAGE\n+ENV HADOLINT_VERSION '1.17.5'\n+ENV HADOLINT_URL \"https://github.com/hadolint/hadolint/releases/download/v${HADOLINT_VERSION}/hadolint-Linux-x86_64\"\n+ENV HADOLINT_SHA256 '20dd38bc0602040f19268adc14c3d1aae11af27b463af43f3122076baf827a35'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/hadolint \"${HADOLINT_URL}\" && \\\n+  echo \"${HADOLINT_SHA256} */tmp/hadolint\" | sha256sum -c -\n+\n+FROM BASE_IMAGE AS MAVEN_DOWNLOAD_IMAGE\n+ENV MAVEN_VERSION='3.5.4'\n+ENV MAVEN_URL \"https://archive.apache.org/dist/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz\"\n+ENV MAVEN_SHA256 'ce50b1c91364cb77efe3776f756a6d92b76d9038b0a0782f7d53acf1e997a14d'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/maven.tar.gz \"${MAVEN_URL}\" && \\\n+  echo \"${MAVEN_SHA256} */tmp/maven.tar.gz\" | sha256sum -c -\n+\n+FROM BASE_IMAGE AS OPENJDK8_DOWNLOAD_IMAGE\n+ENV OPENJDK8_URL 'https://github.com/AdoptOpenJDK/openjdk8-binaries/releases/download/jdk8u232-b09/OpenJDK8U-jdk_x64_linux_hotspot_8u232b09.tar.gz'\n+ENV OPENJDK8_SHA256 '7b7884f2eb2ba2d47f4c0bf3bb1a2a95b73a3a7734bd47ebf9798483a7bcc423'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/adoptopenjdk8.tar.gz \"${OPENJDK8_URL}\" && \\\n+  echo \"${OPENJDK8_SHA256} */tmp/adoptopenjdk8.tar.gz\" | sha256sum -c -\n+\n+FROM BASE_IMAGE AS OPENJDK11_DOWNLOAD_IMAGE\n+ENV OPENJDK11_URL 'https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.6%2B10/OpenJDK11U-jdk_x64_linux_hotspot_11.0.6_10.tar.gz'\n+ENV OPENJDK11_SHA256 '330d19a2eaa07ed02757d7a785a77bab49f5ee710ea03b4ee2fa220ddd0feffc'\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+RUN curl -LfsSo /tmp/adoptopenjdk11.tar.gz \"${OPENJDK11_URL}\" && \\\n+  echo \"${OPENJDK11_SHA256} */tmp/adoptopenjdk11.tar.gz\" | sha256sum -c -\n+\n+##\n+# build the final image\n+#\n+\n+FROM BASE_IMAGE\n+SHELL [\"/bin/bash\", \"-o\", \"pipefail\", \"-c\"]\n+\n+##\n+# install dependencies from system packages.\n+# be careful not to install any system packages (i.e., findbugs) that will\n+# pull in the default-jre.\n+#\n+\n+# bring the base image into conformance with the expectations imposed by\n+# Yetus and our personality file of what a build environment looks like.\n+RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n+  bash=4.4.18-2ubuntu1.2 \\\n+  build-essential=12.4ubuntu1 \\\n+  curl=7.58.0-2ubuntu3.8 \\\n+  diffutils=1:3.6-1 \\\n+  git=1:2.17.1-1ubuntu0.5 \\\n+  rsync=3.1.2-2.1ubuntu1 \\\n+  tar=1.29b-2ubuntu0.1 \\\n+  wget=1.19.4-1ubuntu2.2\n+\n+# install the dependencies required in order to enable the sundry precommit\n+# checks/features provided by Yetus plugins.\n+RUN DEBIAN_FRONTEND=noninteractive apt-get -qq install --no-install-recommends -y \\\n+  bats=0.4.0-1.1 \\\n+  libperl-critic-perl=1.130-1 \\\n+  python3=3.6.7-1~18.04 \\\n+  python3-pip=9.0.1-2.3~ubuntu1.18.04.1 \\\n+  python3-setuptools=39.0.1-2 \\\n+  ruby=1:2.5.1 \\\n+  ruby-dev=1:2.5.1 \\\n+  shellcheck=0.4.6-1 \\\n+  && \\\n+  apt-get clean && \\\n+  rm -rf /var/lib/apt/lists/*\n+\n+RUN python3 -mpip install --upgrade pip && \\\n+  python3 -mpip install pylint==2.4.4\n+\n+RUN gem install --no-document \\\n+  rake:13.0.1 \\\n+  rubocop:0.80.0 \\\n+  ruby-lint:2.3.1\n+\n+# hadolint ignore=DL3010\n+COPY --from=FINDBUGS_DOWNLOAD_IMAGE /tmp/findbugs.tar.gz /tmp/findbugs.tar.gz\n+RUN tar xzf /tmp/findbugs.tar.gz -C /opt && \\\n+  ln -s \"/opt/$(dirname \"$(tar -tf /tmp/findbugs.tar.gz | head -n1)\")\" /opt/findbugs && \\\n+  rm /tmp/findbugs.tar.gz\n+\n+COPY --from=HADOLINT_DOWNLOAD_IMAGE /tmp/hadolint /tmp/hadolint\n+RUN mv /tmp/hadolint /usr/local/bin && \\\n+  chmod a+x /usr/local/bin/hadolint\n+\n+# hadolint ignore=DL3010\n+COPY --from=MAVEN_DOWNLOAD_IMAGE /tmp/maven.tar.gz /tmp/maven.tar.gz\n+RUN tar xzf /tmp/maven.tar.gz -C /opt && \\\n+  ln -s \"/opt/$(dirname \"$(tar -tf /tmp/maven.tar.gz | head -n1)\")\" /opt/maven && \\\n+  rm /tmp/maven.tar.gz\n+\n+##\n+# ensure JVMs are available under `/usr/lib/jvm` and prefix each installation\n+# as `java-` so as to conform with Yetus's assumptions.\n+#\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDc1NTY2Ng=="}, "originalCommit": {"oid": "eb082378ba6f898cef7291f08c4ac12847815648"}, "originalPosition": 172}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjY2ODM3OnYy", "diffSide": "RIGHT", "path": "dev-support/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNzozMDo0M1rOFx2uLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTowMzowM1rOFx5xSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyMTEwMQ==", "bodyText": "I believe we produce different shaded jars with different hadoop versions. is it worth pulling that check over into the hadoop specific builds? it shouldn't vary by jdk version.", "url": "https://github.com/apache/hbase/pull/1195#discussion_r387821101", "createdAt": "2020-03-04T17:30:43Z", "author": {"login": "busbey"}, "path": "dev-support/Jenkinsfile", "diffHunk": "@@ -49,6 +50,8 @@ pipeline {\n     // These tests currently have known failures. Once they burn down to 0, remove from here so that new problems will cause a failure.\n     TESTS_FILTER = 'cc,checkstyle,javac,javadoc,pylint,shellcheck,whitespace,perlcritic,ruby-lint,rubocop,mvnsite'\n     EXCLUDE_TESTS_URL = \"${JENKINS_URL}/job/HBase-Find-Flaky-Tests/job/${BRANCH_NAME}/lastSuccessfulBuild/artifact/excludes\"\n+    SHALLOW_CHECKS = 'all,-unit,-findbugs' // run by the 'yetus general check'\n+    DEEP_CHECKS = 'maven,mvninstall,compile,javac,unit,htmlout' // run by 'yetus jdkX HadoopY checks'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd362a4caf3942ba4e64a9116418de065e594a8e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg0MzQyMg==", "bodyText": "You're the expert in this area, I'll do as you suggest. That one is just called shadedjars ?", "url": "https://github.com/apache/hbase/pull/1195#discussion_r387843422", "createdAt": "2020-03-04T18:11:47Z", "author": {"login": "ndimiduk"}, "path": "dev-support/Jenkinsfile", "diffHunk": "@@ -49,6 +50,8 @@ pipeline {\n     // These tests currently have known failures. Once they burn down to 0, remove from here so that new problems will cause a failure.\n     TESTS_FILTER = 'cc,checkstyle,javac,javadoc,pylint,shellcheck,whitespace,perlcritic,ruby-lint,rubocop,mvnsite'\n     EXCLUDE_TESTS_URL = \"${JENKINS_URL}/job/HBase-Find-Flaky-Tests/job/${BRANCH_NAME}/lastSuccessfulBuild/artifact/excludes\"\n+    SHALLOW_CHECKS = 'all,-unit,-findbugs' // run by the 'yetus general check'\n+    DEEP_CHECKS = 'maven,mvninstall,compile,javac,unit,htmlout' // run by 'yetus jdkX HadoopY checks'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyMTEwMQ=="}, "originalCommit": {"oid": "bd362a4caf3942ba4e64a9116418de065e594a8e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3MTA1MA==", "bodyText": "yes shadedjars is correct.", "url": "https://github.com/apache/hbase/pull/1195#discussion_r387871050", "createdAt": "2020-03-04T19:03:03Z", "author": {"login": "busbey"}, "path": "dev-support/Jenkinsfile", "diffHunk": "@@ -49,6 +50,8 @@ pipeline {\n     // These tests currently have known failures. Once they burn down to 0, remove from here so that new problems will cause a failure.\n     TESTS_FILTER = 'cc,checkstyle,javac,javadoc,pylint,shellcheck,whitespace,perlcritic,ruby-lint,rubocop,mvnsite'\n     EXCLUDE_TESTS_URL = \"${JENKINS_URL}/job/HBase-Find-Flaky-Tests/job/${BRANCH_NAME}/lastSuccessfulBuild/artifact/excludes\"\n+    SHALLOW_CHECKS = 'all,-unit,-findbugs' // run by the 'yetus general check'\n+    DEEP_CHECKS = 'maven,mvninstall,compile,javac,unit,htmlout' // run by 'yetus jdkX HadoopY checks'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzgyMTEwMQ=="}, "originalCommit": {"oid": "bd362a4caf3942ba4e64a9116418de065e594a8e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjgwOTY0OnYy", "diffSide": "RIGHT", "path": "dev-support/Jenkinsfile", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxODoxMjo1NFrOFx4HvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODowNToxM1rOFyeMpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg0NDAyOA==", "bodyText": "Actually, why do we skip findbugs entirely? It should be done either as a shallow check or as a deep check, yes?", "url": "https://github.com/apache/hbase/pull/1195#discussion_r387844028", "createdAt": "2020-03-04T18:12:54Z", "author": {"login": "ndimiduk"}, "path": "dev-support/Jenkinsfile", "diffHunk": "@@ -49,6 +50,8 @@ pipeline {\n     // These tests currently have known failures. Once they burn down to 0, remove from here so that new problems will cause a failure.\n     TESTS_FILTER = 'cc,checkstyle,javac,javadoc,pylint,shellcheck,whitespace,perlcritic,ruby-lint,rubocop,mvnsite'\n     EXCLUDE_TESTS_URL = \"${JENKINS_URL}/job/HBase-Find-Flaky-Tests/job/${BRANCH_NAME}/lastSuccessfulBuild/artifact/excludes\"\n+    SHALLOW_CHECKS = 'all,-unit,-findbugs' // run by the 'yetus general check'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25e2df681679f74bc10f24707113fbd731d9fa08"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg2OTQyMA==", "bodyText": "we used to do findbugs just during one of the hadoop checks I think. line 345 prior to this changest.", "url": "https://github.com/apache/hbase/pull/1195#discussion_r387869420", "createdAt": "2020-03-04T19:00:00Z", "author": {"login": "busbey"}, "path": "dev-support/Jenkinsfile", "diffHunk": "@@ -49,6 +50,8 @@ pipeline {\n     // These tests currently have known failures. Once they burn down to 0, remove from here so that new problems will cause a failure.\n     TESTS_FILTER = 'cc,checkstyle,javac,javadoc,pylint,shellcheck,whitespace,perlcritic,ruby-lint,rubocop,mvnsite'\n     EXCLUDE_TESTS_URL = \"${JENKINS_URL}/job/HBase-Find-Flaky-Tests/job/${BRANCH_NAME}/lastSuccessfulBuild/artifact/excludes\"\n+    SHALLOW_CHECKS = 'all,-unit,-findbugs' // run by the 'yetus general check'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg0NDAyOA=="}, "originalCommit": {"oid": "25e2df681679f74bc10f24707113fbd731d9fa08"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg2OTgwNw==", "bodyText": "so long as the general check is jdk8 then doing it in general is good. IIRC when we were sharing this jenkinsfile with branch-1 it was in jdk8-hadoop2 because that was jdk8 on both sets of branches.", "url": "https://github.com/apache/hbase/pull/1195#discussion_r387869807", "createdAt": "2020-03-04T19:00:45Z", "author": {"login": "busbey"}, "path": "dev-support/Jenkinsfile", "diffHunk": "@@ -49,6 +50,8 @@ pipeline {\n     // These tests currently have known failures. Once they burn down to 0, remove from here so that new problems will cause a failure.\n     TESTS_FILTER = 'cc,checkstyle,javac,javadoc,pylint,shellcheck,whitespace,perlcritic,ruby-lint,rubocop,mvnsite'\n     EXCLUDE_TESTS_URL = \"${JENKINS_URL}/job/HBase-Find-Flaky-Tests/job/${BRANCH_NAME}/lastSuccessfulBuild/artifact/excludes\"\n+    SHALLOW_CHECKS = 'all,-unit,-findbugs' // run by the 'yetus general check'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg0NDAyOA=="}, "originalCommit": {"oid": "25e2df681679f74bc10f24707113fbd731d9fa08"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2Nzg3Nw==", "bodyText": "Oh, I see. Thanks for the pointer.\nReading through the nightly code again, I'm back to believing that I'll break branch-1. Let me add back JDK7 to the docker file as well.", "url": "https://github.com/apache/hbase/pull/1195#discussion_r388467877", "createdAt": "2020-03-05T18:05:13Z", "author": {"login": "ndimiduk"}, "path": "dev-support/Jenkinsfile", "diffHunk": "@@ -49,6 +50,8 @@ pipeline {\n     // These tests currently have known failures. Once they burn down to 0, remove from here so that new problems will cause a failure.\n     TESTS_FILTER = 'cc,checkstyle,javac,javadoc,pylint,shellcheck,whitespace,perlcritic,ruby-lint,rubocop,mvnsite'\n     EXCLUDE_TESTS_URL = \"${JENKINS_URL}/job/HBase-Find-Flaky-Tests/job/${BRANCH_NAME}/lastSuccessfulBuild/artifact/excludes\"\n+    SHALLOW_CHECKS = 'all,-unit,-findbugs' // run by the 'yetus general check'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg0NDAyOA=="}, "originalCommit": {"oid": "25e2df681679f74bc10f24707113fbd731d9fa08"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2089, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}