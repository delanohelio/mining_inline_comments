{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NDA4MzAw", "number": 2034, "title": "Backport \"HBASE-24625 AsyncFSWAL.getLogFileSizeIfBeingWritten does not return the expected synced file length. (#1970)\" to branch-2", "bodyText": "This PR is different from #1970 as follows, which makes the AsyncFSWAL.doShutdown consistent with the master:\n\nIn AsyncFSWAL.doShutdown method, after we invoke closeWriter(), we set the writer to null\nAt the end of TestWALEntryStream.testReplicationSourceWALReaderRecovered :\n -    // Actually this should be true but we haven't handled this yet since for a normal queue the\n -    // last one is always open... Not a big deal for now.\n -    assertFalse(batch.isEndOfFile());\n +    assertTrue(batch.isEndOfFile());", "createdAt": "2020-07-07T13:19:28Z", "url": "https://github.com/apache/hbase/pull/2034", "merged": true, "mergeCommit": {"oid": "deff4c88d3c83687654a79fd6163b0a436a800f2"}, "closed": true, "closedAt": "2020-07-11T08:35:11Z", "author": {"login": "comnetwork"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcylrKuAH2gAyNDQ1NDA4MzAwOjk5MmU0YzEzMTkxZmNjOTA5ZDY0MjFlZDk2ZGQ1MzRiMDA0MWFjZjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcznoUCgFqTQ0NjU5NzY0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "992e4c13191fcc909d6421ed96dd534b0041acf2", "author": {"user": {"login": "comnetwork", "name": "chenglei"}}, "url": "https://github.com/apache/hbase/commit/992e4c13191fcc909d6421ed96dd534b0041acf2", "committedDate": "2020-07-07T13:15:56Z", "message": "HBASE-24625"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b00cf398e22badbc287acac076dad00f808eb6cd", "author": {"user": {"login": "comnetwork", "name": "chenglei"}}, "url": "https://github.com/apache/hbase/commit/b00cf398e22badbc287acac076dad00f808eb6cd", "committedDate": "2020-07-07T14:45:04Z", "message": "make closeWriter consistent with master."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d0de8ab89792b5018fdc1d93ea2a5fc7ec5eb61", "author": {"user": {"login": "comnetwork", "name": "chenglei"}}, "url": "https://github.com/apache/hbase/commit/2d0de8ab89792b5018fdc1d93ea2a5fc7ec5eb61", "committedDate": "2020-07-08T03:18:28Z", "message": "Merge remote-tracking branch 'upstream/branch-2' into branch-2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19", "author": {"user": {"login": "comnetwork", "name": "chenglei"}}, "url": "https://github.com/apache/hbase/commit/7c54c7262b300918a5b7da32a167781c1a21cb19", "committedDate": "2020-07-09T03:11:30Z", "message": "Merge remote-tracking branch 'upstream/branch-2' into branch-2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDE3MTkw", "url": "https://github.com/apache/hbase/pull/2034#pullrequestreview-446017190", "createdAt": "2020-07-09T22:44:55Z", "commit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjo0NDo1NVrOGvkOzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjo0OTowNFrOGvkT5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyOTg2OQ==", "bodyText": "I had asked in #1970 if this can be implemented with an AtomicLong instead. @Apache9 responded with an analysis and alternative suggestion. Following his suggestion, it would be nice to add a comment on WrapperAsyncFSOutput stating that we expect an instance to be used only from a single thread, foregoing synchronization for the sake of performance.", "url": "https://github.com/apache/hbase/pull/2034#discussion_r452529869", "createdAt": "2020-07-09T22:44:55Z", "author": {"login": "ndimiduk"}, "path": "hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/WrapperAsyncFSOutput.java", "diffHunk": "@@ -91,7 +93,11 @@ private void flush0(CompletableFuture<Long> future, ByteArrayOutputStream buffer\n           out.hflush();\n         }\n       }\n-      future.complete(out.getPos());\n+      long pos = out.getPos();\n+      if(pos > this.syncedLength) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzMDI4Ng==", "bodyText": "nit: this is unnecessary.", "url": "https://github.com/apache/hbase/pull/2034#discussion_r452530286", "createdAt": "2020-07-09T22:46:07Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/AsyncProtobufLogWriter.java", "diffHunk": "@@ -231,4 +231,9 @@ protected long writeWALTrailerAndMagic(WALTrailer trailer, byte[] magic) throws\n   protected OutputStream getOutputStreamForCellEncoder() {\n     return asyncOutputWrapper;\n   }\n+\n+  @Override\n+  public long getSyncedLength() {\n+    return this.output.getSyncedLength();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzMTE3NA==", "bodyText": "I believe I mentioned elsewhere that I think AtomicUtils.updateMax can be replaced with AtomicLong.getAndAccumulate, something like\nsyncedLength.getAndAccumulate(fsdos.getPos(), Math::max)", "url": "https://github.com/apache/hbase/pull/2034#discussion_r452531174", "createdAt": "2020-07-09T22:49:04Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java", "diffHunk": "@@ -85,6 +90,12 @@ public void sync(boolean forceSync) throws IOException {\n     } else {\n       fsdos.hflush();\n     }\n+    AtomicUtils.updateMax(this.syncedLength, fsdos.getPos());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MTk2ODM5", "url": "https://github.com/apache/hbase/pull/2034#pullrequestreview-446196839", "createdAt": "2020-07-10T07:55:39Z", "commit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NTk3NjQx", "url": "https://github.com/apache/hbase/pull/2034#pullrequestreview-446597641", "createdAt": "2020-07-10T18:06:33Z", "commit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4216, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}