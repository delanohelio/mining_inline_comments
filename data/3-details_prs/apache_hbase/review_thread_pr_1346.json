{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNzI0MDYz", "number": 1346, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwNzoyMzoyN1rODsY-oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTowODo1NVrODtShJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODczMTg1OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwNzoyMzoyN1rOF9PSbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwNzoyMzoyN1rOF9PSbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc1NzkzMg==", "bodyText": "@bharathv I am planning to change SlowLogRecord to OnlineLogRecord and SlowLogQueryFilter to OnlineLogQueryFilter. Will make that change before merging the PR because this class is being referred at multiple places (in thrift), so will be redundant refactor for now (to make review relevant to actual changes).\nAlso, the overall change is providing new API in Admin and shell command and to have 2 flags at server side (isSlowLog and isLargeLog) to fetch relevant records from server.", "url": "https://github.com/apache/hbase/pull/1346#discussion_r399757932", "createdAt": "2020-03-29T07:23:27Z", "author": {"login": "virajjasani"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -2276,6 +2276,18 @@ boolean snapshotCleanupSwitch(final boolean on, final boolean synchronous)\n   List<SlowLogRecord> getSlowLogResponses(final Set<ServerName> serverNames,\n       final SlowLogQueryFilter slowLogQueryFilter) throws IOException;\n \n+  /**\n+   * Retrieves online large RPC logs from the provided list of\n+   * RegionServers\n+   *\n+   * @param serverNames Server names to get slowlog responses from\n+   * @param largeLogQueryFilter filter to be used if provided\n+   * @return online slowlog response list\n+   * @throws IOException if a remote or network exception occurs\n+   */\n+  List<SlowLogRecord> getLargeLogResponses(final Set<ServerName> serverNames,\n+    final SlowLogQueryFilter largeLogQueryFilter) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f7b4336ead1ff4b8b06d86e8302e349ca96d0f1"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzI0MzUzOnYy", "diffSide": "RIGHT", "path": "hbase-protocol-shaded/src/main/protobuf/Admin.proto", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOToyNDoxNFrOF94zjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNzo0MDowMFrOF-g7Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQzODE1OA==", "bodyText": "use an enum? OnlineLogType for ex.. Also, you don't need to have two separate RPCs if you pass this \"type\" as a param to the RPC call (we can potentially have other \"types\" in the future in which case we don't want to add a new set of RPCs).", "url": "https://github.com/apache/hbase/pull/1346#discussion_r400438158", "createdAt": "2020-03-30T19:24:14Z", "author": {"login": "bharathv"}, "path": "hbase-protocol-shaded/src/main/protobuf/Admin.proto", "diffHunk": "@@ -287,6 +287,8 @@ message SlowLogResponseRequest {\n   optional string client_address = 3;\n   optional string user_name = 4;\n   optional uint32 limit = 5 [default = 10];\n+  optional bool is_slow_log = 6 [default = false];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f7b4336ead1ff4b8b06d86e8302e349ca96d0f1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU1OTAyMQ==", "bodyText": "Another thought..why not implement this type as a LogQueryFilter? that makes it much simpler right?", "url": "https://github.com/apache/hbase/pull/1346#discussion_r400559021", "createdAt": "2020-03-30T23:41:53Z", "author": {"login": "bharathv"}, "path": "hbase-protocol-shaded/src/main/protobuf/Admin.proto", "diffHunk": "@@ -287,6 +287,8 @@ message SlowLogResponseRequest {\n   optional string client_address = 3;\n   optional string user_name = 4;\n   optional uint32 limit = 5 [default = 10];\n+  optional bool is_slow_log = 6 [default = false];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQzODE1OA=="}, "originalCommit": {"oid": "8f7b4336ead1ff4b8b06d86e8302e349ca96d0f1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY2NDQyMg==", "bodyText": "IMHO having separate shell command and Admin API should be good and clean for operators rather than having \"type\" as a filter. I agree on implementing enum for \"type\" on server side including this proto file. We can have filter logic at server side but having separate API for client would be better because all filters that we want to provide to client should be related to actual data filters - client, user, region, table etc rather than type.\nMost of the time, user would not use filter so we don't want them to use filter just for log type.\nget_slowlog_responses '*' and get_largelog_responses '*' might be mostly used (without filters).", "url": "https://github.com/apache/hbase/pull/1346#discussion_r400664422", "createdAt": "2020-03-31T06:09:43Z", "author": {"login": "virajjasani"}, "path": "hbase-protocol-shaded/src/main/protobuf/Admin.proto", "diffHunk": "@@ -287,6 +287,8 @@ message SlowLogResponseRequest {\n   optional string client_address = 3;\n   optional string user_name = 4;\n   optional uint32 limit = 5 [default = 10];\n+  optional bool is_slow_log = 6 [default = false];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQzODE1OA=="}, "originalCommit": {"oid": "8f7b4336ead1ff4b8b06d86e8302e349ca96d0f1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA3OTgxMw==", "bodyText": "IMHO having separate shell command and Admin API should be good and clean for operators rather than having \"type\" as a filter.\n\nUmm.. shell command is fine, probably makes it easier for operators...whats the use of having a separate Admin API? All of these requests fall under the same \"get_log\" category, so probably good to logically group them into same API (which takes Type parameter) and avoid code bloat?", "url": "https://github.com/apache/hbase/pull/1346#discussion_r401079813", "createdAt": "2020-03-31T17:14:48Z", "author": {"login": "bharathv"}, "path": "hbase-protocol-shaded/src/main/protobuf/Admin.proto", "diffHunk": "@@ -287,6 +287,8 @@ message SlowLogResponseRequest {\n   optional string client_address = 3;\n   optional string user_name = 4;\n   optional uint32 limit = 5 [default = 10];\n+  optional bool is_slow_log = 6 [default = false];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQzODE1OA=="}, "originalCommit": {"oid": "8f7b4336ead1ff4b8b06d86e8302e349ca96d0f1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA4MjU1MA==", "bodyText": "I believe we follow 1:1 shell command to Admin API right? This is to ensure operator using shell commands and Java/Thrift clients using Admin API have similar experience. No?", "url": "https://github.com/apache/hbase/pull/1346#discussion_r401082550", "createdAt": "2020-03-31T17:19:02Z", "author": {"login": "virajjasani"}, "path": "hbase-protocol-shaded/src/main/protobuf/Admin.proto", "diffHunk": "@@ -287,6 +287,8 @@ message SlowLogResponseRequest {\n   optional string client_address = 3;\n   optional string user_name = 4;\n   optional uint32 limit = 5 [default = 10];\n+  optional bool is_slow_log = 6 [default = false];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQzODE1OA=="}, "originalCommit": {"oid": "8f7b4336ead1ff4b8b06d86e8302e349ca96d0f1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA5MjI3MA==", "bodyText": "They still have the same experience, its just what each client does with the API. For example, there are 10 (or more) ways of creating a table from shell but only 3 corresponding create admin APIs. All these 10 map to one of these 3 APIs. Java/Thrift clients for this API build the TableDescriptor and use one of these 3 API calls. It is somewhat a similar case here. At least this is my understanding.", "url": "https://github.com/apache/hbase/pull/1346#discussion_r401092270", "createdAt": "2020-03-31T17:34:38Z", "author": {"login": "bharathv"}, "path": "hbase-protocol-shaded/src/main/protobuf/Admin.proto", "diffHunk": "@@ -287,6 +287,8 @@ message SlowLogResponseRequest {\n   optional string client_address = 3;\n   optional string user_name = 4;\n   optional uint32 limit = 5 [default = 10];\n+  optional bool is_slow_log = 6 [default = false];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQzODE1OA=="}, "originalCommit": {"oid": "8f7b4336ead1ff4b8b06d86e8302e349ca96d0f1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTA5NTQ5MA==", "bodyText": "Hmm yeah makes sense. I am not too strong of an opinion to keep 1:1 for slow and large logs. Just thought of keeping them same but yes having single API with LogQueryFilter to differentiate between slow and large logs seems better approach.", "url": "https://github.com/apache/hbase/pull/1346#discussion_r401095490", "createdAt": "2020-03-31T17:40:00Z", "author": {"login": "virajjasani"}, "path": "hbase-protocol-shaded/src/main/protobuf/Admin.proto", "diffHunk": "@@ -287,6 +287,8 @@ message SlowLogResponseRequest {\n   optional string client_address = 3;\n   optional string user_name = 4;\n   optional uint32 limit = 5 [default = 10];\n+  optional bool is_slow_log = 6 [default = false];", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQzODE1OA=="}, "originalCommit": {"oid": "8f7b4336ead1ff4b8b06d86e8302e349ca96d0f1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzMxODYwOnYy", "diffSide": "RIGHT", "path": "hbase-shell/src/main/ruby/shell/commands/get_largelog_responses.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTo0NjoxOVrOF95i8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwNjoxMTo0NVrOF-Gp0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1MDI4OA==", "bodyText": "This can probably be simplified too with 'TYPE' => LARGE_LOGS", "url": "https://github.com/apache/hbase/pull/1346#discussion_r400450288", "createdAt": "2020-03-30T19:46:19Z", "author": {"login": "bharathv"}, "path": "hbase-shell/src/main/ruby/shell/commands/get_largelog_responses.rb", "diffHunk": "@@ -0,0 +1,78 @@\n+#\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements. See the NOTICE file distributed with this\n+# work for additional information regarding copyright ownership. The ASF\n+# licenses this file to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+# License for the specific language governing permissions and limitations\n+# under the License.\n+\n+# Retrieve latest large log responses maintained in memory by RegionServers\n+\n+module Shell\n+  module Commands\n+    # Retrieve latest large log responses\n+    class GetLargelogResponses < Command\n+      def help\n+        <<-EOF\n+Retrieve latest LargeLog Responses maintained by each or specific RegionServers.\n+Specify '*' to include all RS otherwise array of server names for specific\n+RS. A server name is the host, port plus startcode of a RegionServer.\n+e.g.: host187.example.com,60020,1289493121758 (find servername in\n+master ui or when you do detailed status in shell)\n+\n+Provide optional filter parameters as Hash.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f7b4336ead1ff4b8b06d86e8302e349ca96d0f1"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDY2NTA0Mg==", "bodyText": "Same as above. Let's have type filter for server side logic but have clean, separate shell command and Admin API. Anyways, code would not be too much and would be simple for client to differentiate.", "url": "https://github.com/apache/hbase/pull/1346#discussion_r400665042", "createdAt": "2020-03-31T06:11:45Z", "author": {"login": "virajjasani"}, "path": "hbase-shell/src/main/ruby/shell/commands/get_largelog_responses.rb", "diffHunk": "@@ -0,0 +1,78 @@\n+#\n+#\n+# Licensed to the Apache Software Foundation (ASF) under one or more\n+# contributor license agreements. See the NOTICE file distributed with this\n+# work for additional information regarding copyright ownership. The ASF\n+# licenses this file to you under the Apache License, Version 2.0 (the\n+# \"License\"); you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+# http://www.apache.org/licenses/LICENSE-2.0\n+#\n+# Unless required by applicable law or agreed to in writing, software\n+# distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n+# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n+# License for the specific language governing permissions and limitations\n+# under the License.\n+\n+# Retrieve latest large log responses maintained in memory by RegionServers\n+\n+module Shell\n+  module Commands\n+    # Retrieve latest large log responses\n+    class GetLargelogResponses < Command\n+      def help\n+        <<-EOF\n+Retrieve latest LargeLog Responses maintained by each or specific RegionServers.\n+Specify '*' to include all RS otherwise array of server names for specific\n+RS. A server name is the host, port plus startcode of a RegionServer.\n+e.g.: host187.example.com,60020,1289493121758 (find servername in\n+master ui or when you do detailed status in shell)\n+\n+Provide optional filter parameters as Hash.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ1MDI4OA=="}, "originalCommit": {"oid": "8f7b4336ead1ff4b8b06d86e8302e349ca96d0f1"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODE1MDYzOnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncHBaseAdmin.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTowNjoxNFrOF-oPEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzo0NTo0MVrOF-0krQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIxNTI1MA==", "bodyText": "Why this branch on the client? Can't the server side infer the type and respond accordingly?", "url": "https://github.com/apache/hbase/pull/1346#discussion_r401215250", "createdAt": "2020-03-31T21:06:14Z", "author": {"login": "bharathv"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncHBaseAdmin.java", "diffHunk": "@@ -3952,17 +3952,27 @@ private void getProcedureResult(long procId, CompletableFuture<Void> future, int\n \n   @Override\n   public CompletableFuture<List<SlowLogRecord>> getSlowLogResponses(\n-    @Nullable final Set<ServerName> serverNames,\n+      @Nullable final Set<ServerName> serverNames,\n     final SlowLogQueryFilter slowLogQueryFilter) {\n     if (CollectionUtils.isEmpty(serverNames)) {\n       return CompletableFuture.completedFuture(Collections.emptyList());\n     }\n-    return CompletableFuture.supplyAsync(() -> serverNames.stream()\n-      .map((ServerName serverName) ->\n-        getSlowLogResponseFromServer(serverName, slowLogQueryFilter))\n-      .map(CompletableFuture::join)\n-      .flatMap(List::stream)\n-      .collect(Collectors.toList()));\n+    if (slowLogQueryFilter.getType() == null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "351f16526e70e9a1d3ab8232c7d158d50b06699f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxNzM4OQ==", "bodyText": "Nope, both can't use same enum because at server side, we have enum in TooSlowLog.proto which we save in Queue, whereas this enum is for client side filter object. We need to compare each attribute present in client side filter with server side data.\nHaving this branch on client side is better compared to passing it on to server because otherwise we will need to have it in Admin.proto too to pass it over in RPC call (too many places).", "url": "https://github.com/apache/hbase/pull/1346#discussion_r401417389", "createdAt": "2020-04-01T07:45:41Z", "author": {"login": "virajjasani"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncHBaseAdmin.java", "diffHunk": "@@ -3952,17 +3952,27 @@ private void getProcedureResult(long procId, CompletableFuture<Void> future, int\n \n   @Override\n   public CompletableFuture<List<SlowLogRecord>> getSlowLogResponses(\n-    @Nullable final Set<ServerName> serverNames,\n+      @Nullable final Set<ServerName> serverNames,\n     final SlowLogQueryFilter slowLogQueryFilter) {\n     if (CollectionUtils.isEmpty(serverNames)) {\n       return CompletableFuture.completedFuture(Collections.emptyList());\n     }\n-    return CompletableFuture.supplyAsync(() -> serverNames.stream()\n-      .map((ServerName serverName) ->\n-        getSlowLogResponseFromServer(serverName, slowLogQueryFilter))\n-      .map(CompletableFuture::join)\n-      .flatMap(List::stream)\n-      .collect(Collectors.toList()));\n+    if (slowLogQueryFilter.getType() == null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIxNTI1MA=="}, "originalCommit": {"oid": "351f16526e70e9a1d3ab8232c7d158d50b06699f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODE1MzYwOnYy", "diffSide": "RIGHT", "path": "hbase-protocol-shaded/src/main/protobuf/TooSlowLog.proto", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTowNzoxNlrOF-oRBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjo1MDo1NFrOF-_EtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIxNTc0OA==", "bodyText": "nit: Helps to have a code comment about what a SLOW log is and what a LARGE log is..", "url": "https://github.com/apache/hbase/pull/1346#discussion_r401215748", "createdAt": "2020-03-31T21:07:16Z", "author": {"login": "bharathv"}, "path": "hbase-protocol-shaded/src/main/protobuf/TooSlowLog.proto", "diffHunk": "@@ -42,4 +42,12 @@ message SlowLogPayload {\n   optional int32 multi_gets = 12 [default = 0];\n   optional int32 multi_mutations = 13 [default = 0];\n   optional int32 multi_service_calls = 14 [default = 0];\n+  required Type type = 15;\n+\n+  enum Type {\n+    SLOW_LOG = 0;\n+    LARGE_LOG = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "351f16526e70e9a1d3ab8232c7d158d50b06699f"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU4OTQyOA==", "bodyText": "Done", "url": "https://github.com/apache/hbase/pull/1346#discussion_r401589428", "createdAt": "2020-04-01T12:50:54Z", "author": {"login": "virajjasani"}, "path": "hbase-protocol-shaded/src/main/protobuf/TooSlowLog.proto", "diffHunk": "@@ -42,4 +42,12 @@ message SlowLogPayload {\n   optional int32 multi_gets = 12 [default = 0];\n   optional int32 multi_mutations = 13 [default = 0];\n   optional int32 multi_service_calls = 14 [default = 0];\n+  required Type type = 15;\n+\n+  enum Type {\n+    SLOW_LOG = 0;\n+    LARGE_LOG = 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIxNTc0OA=="}, "originalCommit": {"oid": "351f16526e70e9a1d3ab8232c7d158d50b06699f"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODE1OTA5OnYy", "diffSide": "RIGHT", "path": "hbase-protocol-shaded/src/main/protobuf/Admin.proto", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTowODo1NVrOF-oUgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMDowOToxNVrOF-5zmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIxNjY0MA==", "bodyText": "same question as above.. we can get rid of this one, right? (I thought that was our discussion in the PR earlier).", "url": "https://github.com/apache/hbase/pull/1346#discussion_r401216640", "createdAt": "2020-03-31T21:08:55Z", "author": {"login": "bharathv"}, "path": "hbase-protocol-shaded/src/main/protobuf/Admin.proto", "diffHunk": "@@ -369,6 +369,9 @@ service AdminService {\n   rpc GetSlowLogResponses(SlowLogResponseRequest)\n     returns(SlowLogResponses);\n \n+  rpc GetLargeLogResponses(SlowLogResponseRequest)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "351f16526e70e9a1d3ab8232c7d158d50b06699f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzODQ5Mw==", "bodyText": "We discussed about getting rid of separate Admin API and have a same endpoint. This one is for RS RPC services. Since we don't want to have multiple enums in Admin.proto, TooSlowLogs.proto, we need this separately and it's only used in RSRpcServices with minimal code.", "url": "https://github.com/apache/hbase/pull/1346#discussion_r401438493", "createdAt": "2020-04-01T08:23:29Z", "author": {"login": "virajjasani"}, "path": "hbase-protocol-shaded/src/main/protobuf/Admin.proto", "diffHunk": "@@ -369,6 +369,9 @@ service AdminService {\n   rpc GetSlowLogResponses(SlowLogResponseRequest)\n     returns(SlowLogResponses);\n \n+  rpc GetLargeLogResponses(SlowLogResponseRequest)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIxNjY0MA=="}, "originalCommit": {"oid": "351f16526e70e9a1d3ab8232c7d158d50b06699f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUwMzEzMQ==", "bodyText": "Another reason why we must have this is to find out sometimes which specific Get API was slow or large in nature even between get_slow and get_large responses.\nSample response:\n{\n  \"startTime\": 1585735414657,\n  \"processingTime\": 1,\n  \"queueTime\": 0,\n  \"responseSize\": 2351,\n  \"clientAddress\": \"171.30.20.8:63571\",\n  \"serverClass\": \"HRegionServer\",\n  \"methodName\": \"GetLargeLogResponses\",\n  \"callDetails\": \"GetLargeLogResponses(org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$SlowLogResponseRequest)\",\n  \"param\": \"class org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$SlowLogResponseRequest\",\n  \"userName\": \"vjasani\"\n}\n{\n  \"startTime\": 1585735372313,\n  \"processingTime\": 1,\n  \"queueTime\": 0,\n  \"responseSize\": 2260,\n  \"clientAddress\": \"171.30.20.8:63571\",\n  \"serverClass\": \"HRegionServer\",\n  \"methodName\": \"GetSlowLogResponses\",\n  \"callDetails\": \"GetSlowLogResponses(org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$SlowLogResponseRequest)\",\n  \"param\": \"class org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos$SlowLogResponseRequest\",\n  \"userName\": \"vjasani\"\n}\n\nFor this differentiation, we need to have:\nrpc GetLargeLogResponses(SlowLogResponseRequest)", "url": "https://github.com/apache/hbase/pull/1346#discussion_r401503131", "createdAt": "2020-04-01T10:09:15Z", "author": {"login": "virajjasani"}, "path": "hbase-protocol-shaded/src/main/protobuf/Admin.proto", "diffHunk": "@@ -369,6 +369,9 @@ service AdminService {\n   rpc GetSlowLogResponses(SlowLogResponseRequest)\n     returns(SlowLogResponses);\n \n+  rpc GetLargeLogResponses(SlowLogResponseRequest)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIxNjY0MA=="}, "originalCommit": {"oid": "351f16526e70e9a1d3ab8232c7d158d50b06699f"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1942, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}