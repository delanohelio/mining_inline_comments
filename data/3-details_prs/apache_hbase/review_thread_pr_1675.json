{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NzkzMzgz", "number": 1675, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxOToyMzo1NlrOD6wI1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxOToyMzo1NlrOD6wI1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTMyNjkyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/conf/ConfigurationManager.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxOToyMzo1N1rOGSw2LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMFQxMDo0NjozNFrOGTDDPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyNzg1Mg==", "bodyText": "This is used by tests only.  But still how this synchronized block helps here?  We are directly returning that object which is not thread safe. IMO we should add a method like containObserver (or a better name?) and just return a boolean.", "url": "https://github.com/apache/hbase/pull/1675#discussion_r422327852", "createdAt": "2020-05-08T19:23:57Z", "author": {"login": "anoopsjohn"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/conf/ConfigurationManager.java", "diffHunk": "@@ -137,4 +138,14 @@ public int getNumObservers() {\n       return configurationObservers.size();\n     }\n   }\n+\n+  /**\n+   * @return the observers\n+   */\n+  @VisibleForTesting\n+  public Set<ConfigurationObserver> getConfigurationObservers() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e497bc2edba5582bea40b834ad4e089595fccd99"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYyNDU4NQ==", "bodyText": "Good point! The synchronization here doesn't prevent multithread-access afterwards, right? Or we may not consider the multi-thread access cos it is used in unittest only? What do you think about it, Anoops ? I added a synchronized method which returns a boolean for now, looking forward to your opinion.", "url": "https://github.com/apache/hbase/pull/1675#discussion_r422624585", "createdAt": "2020-05-10T10:33:26Z", "author": {"login": "Joseph295"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/conf/ConfigurationManager.java", "diffHunk": "@@ -137,4 +138,14 @@ public int getNumObservers() {\n       return configurationObservers.size();\n     }\n   }\n+\n+  /**\n+   * @return the observers\n+   */\n+  @VisibleForTesting\n+  public Set<ConfigurationObserver> getConfigurationObservers() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyNzg1Mg=="}, "originalCommit": {"oid": "e497bc2edba5582bea40b834ad4e089595fccd99"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYyNDkzOQ==", "bodyText": "Here the boolean based API is enough.  That is what u did now.\nNit change method name   containObserver  -> containsObserver", "url": "https://github.com/apache/hbase/pull/1675#discussion_r422624939", "createdAt": "2020-05-10T10:36:44Z", "author": {"login": "anoopsjohn"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/conf/ConfigurationManager.java", "diffHunk": "@@ -137,4 +138,14 @@ public int getNumObservers() {\n       return configurationObservers.size();\n     }\n   }\n+\n+  /**\n+   * @return the observers\n+   */\n+  @VisibleForTesting\n+  public Set<ConfigurationObserver> getConfigurationObservers() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyNzg1Mg=="}, "originalCommit": {"oid": "e497bc2edba5582bea40b834ad4e089595fccd99"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjYyNjExMA==", "bodyText": "Yeah, thanks", "url": "https://github.com/apache/hbase/pull/1675#discussion_r422626110", "createdAt": "2020-05-10T10:46:34Z", "author": {"login": "Joseph295"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/conf/ConfigurationManager.java", "diffHunk": "@@ -137,4 +138,14 @@ public int getNumObservers() {\n       return configurationObservers.size();\n     }\n   }\n+\n+  /**\n+   * @return the observers\n+   */\n+  @VisibleForTesting\n+  public Set<ConfigurationObserver> getConfigurationObservers() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjMyNzg1Mg=="}, "originalCommit": {"oid": "e497bc2edba5582bea40b834ad4e089595fccd99"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1754, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}