{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3NDExNzM2", "number": 2769, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOVQwMTowNzozOVrOFMt22g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yNFQyMTowMToxNFrOFqEB0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4ODc4NTU0OnYy", "diffSide": "LEFT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestClockSkewDetection.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOVQwMTowNzozOVrOIQlyDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wOVQwMTowNzozOVrOIQlyDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDI2NzE0OA==", "bodyText": "undo this?", "url": "https://github.com/apache/hbase/pull/2769#discussion_r554267148", "createdAt": "2021-01-09T01:07:39Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestClockSkewDetection.java", "diffHunk": "@@ -111,4 +111,4 @@ public void testClockSkewDetection() throws Exception {\n     request.setServerCurrentTime(System.currentTimeMillis() + warningSkew * 2);\n     sm.regionServerStartup(request.build(), 0, \"0.0.0\", ia5);\n   }\n-}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40cf6a3036993d4cd0f54a7f0592d3c19c0850fc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNjkxMTAzOnYy", "diffSide": "LEFT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwMzoxMzoyMVrOITNnIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwMzoxMzoyMVrOITNnIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzAxNjg2NA==", "bodyText": "method javadoc needs updation. Also please add the detail that the regionserver will be added in it's first report (for readers).", "url": "https://github.com/apache/hbase/pull/2769#discussion_r557016864", "createdAt": "2021-01-14T03:13:21Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/ServerManager.java", "diffHunk": "@@ -227,10 +227,6 @@ ServerName regionServerStartup(RegionServerStartupRequest request, int versionNu\n     ServerName sn = ServerName.valueOf(hostname, request.getPort(), request.getServerStartCode());\n     checkClockSkew(sn, request.getServerCurrentTime());\n     checkIsDead(sn, \"STARTUP\");\n-    if (!checkAndRecordNewServer(sn, ServerMetricsBuilder.of(sn, versionNumber, version))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3d802143698d1efe704645c8d60dc70224c6126"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNjkxODEzOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMaster.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwMzoxNjozMlrOITNq5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwMzoxNjozMlrOITNq5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzAxNzgzMA==", "bodyText": "nit: Add some detail about what this test does? (preferably with a reference to the jira ID).", "url": "https://github.com/apache/hbase/pull/2769#discussion_r557017830", "createdAt": "2021-01-14T03:16:32Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMaster.java", "diffHunk": "@@ -100,6 +104,25 @@ public static void afterAllTests() throws Exception {\n     TEST_UTIL.shutdownMiniCluster();\n   }\n \n+  @Test\n+  public void testRegionServerStartup() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3d802143698d1efe704645c8d60dc70224c6126"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNjkyNDU0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMaster.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwMzoxOTowNVrOITNuRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQwMzoxOTowNVrOITNuRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzAxODY5Mg==", "bodyText": "The test also passes without the patch, did I miss something?  Not sure I fully understand the intent here, if you get an exception with add_peer RPC, its not added, right?", "url": "https://github.com/apache/hbase/pull/2769#discussion_r557018692", "createdAt": "2021-01-14T03:19:05Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/TestMaster.java", "diffHunk": "@@ -100,6 +104,25 @@ public static void afterAllTests() throws Exception {\n     TEST_UTIL.shutdownMiniCluster();\n   }\n \n+  @Test\n+  public void testRegionServerStartup() throws Exception {\n+    MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n+    HMaster m = cluster.getMaster();\n+    // Check there are 2 regionservers in master's online servers list\n+    Assert.assertEquals(2, m.getServerManager().countOfRegionServers());\n+    // Add invalid peer so that regionserver startup will take a long time\n+    try {\n+      ReplicationPeerConfig rpc = new ReplicationPeerConfig();\n+      admin.addReplicationPeer(\"INVALID-PEER\", rpc);\n+    } catch (DoNotRetryIOException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3d802143698d1efe704645c8d60dc70224c6126"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc4NTI2NDMwOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "isResolved": false, "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yMlQyMjo0Njo1NlrOI7Xtdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yNFQwNDo0MTowOVrOI8XCCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw==", "bodyText": "I'm curious why these are needed in multiple places, hardcoding makes these tests flaky?", "url": "https://github.com/apache/hbase/pull/2769#discussion_r599125367", "createdAt": "2021-03-22T22:46:56Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTE2ODY1Nw==", "bodyText": "startRegionServer and startRegionServerAndWait do the same thing except the latter waits up to the passed in timeout to poll for the rs's online status in master (it will return early if it finds the rs is online before the timeout). the startRegionServerAndWait method gives the master a bit more time to get the updated online status from regionserver (which is updated after HRegionServer.handleReportForDutyResponse but only reported to master a while later, in HRegionServer.tryRegionServerReport). that's why master often needs an extra second to know the rs is alive, and if we try to proceed to do other tasks without this wait (such as assign regions), master will run into errors because it doesn't know the rs is alive yet.\nto be safe, we could make the passed in timeout longer. it won't change the behavior because the method will return early if it finds the rs status is online, but it'll reduce chance of flakiness. it seems like 2000ms is enough for most cases though.", "url": "https://github.com/apache/hbase/pull/2769#discussion_r599168657", "createdAt": "2021-03-23T00:46:40Z", "author": {"login": "caroliney14"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTE3NTUxNQ==", "bodyText": "There seems to be a race condition. Multiple tests rely on this guarantee that the regionserver is up by the time this call is returned. A fixed sleep doesn't seem like a right solution.  Instead we should fix the following method\n  /**\n     * Block until the region server has come online, indicating it is ready\n     * to be used.\n     */\n    public void waitForServerOnline() {\n      // The server is marked online after the init method completes inside of\n      // the HRS#run method.  HRS#init can fail for whatever region.  In those\n      // cases, we'll jump out of the run without setting online flag.  Check\n      // stopRequested so we don't wait here a flag that will never be flipped.\n      regionServer.waitForServerOnline();\n    }\n  }\n\nThat translates to when online is marked in HRegionServer. Currently it is marked\n public void waitForServerOnline(){\n    while (!isStopped() && !isOnline()) {\n      synchronized (online) {\n        try {\n          online.wait(msgInterval);\n        } catch (InterruptedException ie) {\n          Thread.currentThread().interrupt();\n          break;\n        }\n      }\n    }\n  }\n\nInstead shouldn't it check when it is marked online by master (which happens after the first report is sent)? (block until the regionserver is marked online in the active master's server manager)\n@saintstack WDYT? This doesn't cause test flakes?", "url": "https://github.com/apache/hbase/pull/2769#discussion_r599175515", "createdAt": "2021-03-23T01:08:20Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTE4MDU5MQ==", "bodyText": "I think your advice solid.  I did not realize it a wait; it will be flakey on different platforms. I like the idea of checking online atomic", "url": "https://github.com/apache/hbase/pull/2769#discussion_r599180591", "createdAt": "2021-03-23T01:24:27Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTE5MzU4NA==", "bodyText": "@bharathv if we want to get the online servers list from the active master in the JVMClusterUtil.waitForServerOnline method, wouldn't we have to change the signature of the method to pass in a list of masters?", "url": "https://github.com/apache/hbase/pull/2769#discussion_r599193584", "createdAt": "2021-03-23T02:02:42Z", "author": {"login": "caroliney14"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTI2NzAyNw==", "bodyText": "@caroliney14 please say more. I'm not sure I follow sir.", "url": "https://github.com/apache/hbase/pull/2769#discussion_r599267027", "createdAt": "2021-03-23T04:45:44Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTI5MzE3MQ==", "bodyText": "@saintstack Its the other way around. After this patch, \"online\" atomic is not set to true at the right place. It is being set in handleReportForDutyResponse() which doesn't mean the RS is online. It should either be set after the first RS report or _ waitForServerOnline_ should check the active master's online list of masters.\nI was suggesting the latter to avoid extra code refactoring. So yes, we should pass the active master object to it or we could just switch to using HBaseCluster#waitForRegionServerToStart() that relies on the onlineServers from active master. Latter approach might be easier to refactor IIUC.", "url": "https://github.com/apache/hbase/pull/2769#discussion_r599293171", "createdAt": "2021-03-23T06:08:48Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTc4MzM5NQ==", "bodyText": "@bharathv I'm not sure I follow -- HBaseCluster.waitForRegionServerToStart uses the same rs online checking logic as the MiniHBaseCluster.startRegionServerAndWait that is currently being used. Both query master's onlineServers list for the rs's online status (using getClusterMetrics().getLiveServerMetrics()) and both time out if the rs cannot be found within that list within the given timeout. Is there any difference to using HBaseCluster.waitForRegionServerToStart/MiniHBaseCluster.startRegionServerAndWait versus refactoring waitForServerOnline to query the master? If we refactored waitForServerOnline it would still have to use a polling mechanism with timeout, right?", "url": "https://github.com/apache/hbase/pull/2769#discussion_r599783395", "createdAt": "2021-03-23T17:26:51Z", "author": {"login": "caroliney14"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTk5NzYzNA==", "bodyText": "Thanks @bharathv  ... I'd think RS#online should change as part of this patch else we'll all be confused going forward around what 'online' means.\nand both time out if the rs cannot be found within that list within the given timeout. \nWhy does it timeout do you think @caroliney14 ? Its not something like foreground thread holding up the RS startup?\n(This is a nice PR)", "url": "https://github.com/apache/hbase/pull/2769#discussion_r599997634", "createdAt": "2021-03-23T22:22:41Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDAzMjE5OA==", "bodyText": "and both time out if the rs cannot be found within that list within the given timeout.\n\n@saintstack What I meant by this is, the behavior of the HBaseCluster.waitForRegionServerToStart and MiniHBaseCluster.startRegionServerAndWait methods are such that the methods themselves will time out and throw an exception if the rs is not found in master's online servers list within a specified time period. The method shouldn't time out if the master/rs communication logic is correct (when I tested locally, it doesn't). See method pasted below:\n/**\n   * Wait for the specified region server to join the cluster\n   * @throws IOException if something goes wrong or timeout occurs\n   */\n  public void waitForRegionServerToStart(String hostname, int port, long timeout)\n      throws IOException {\n    long start = System.currentTimeMillis();\n    while ((System.currentTimeMillis() - start) < timeout) {\n      for (ServerName server : getClusterMetrics().getLiveServerMetrics().keySet()) {\n        if (server.getHostname().equals(hostname) && server.getPort() == port) {\n          return;\n        }\n      }\n      Threads.sleep(100);\n    }\n    throw new IOException(\"did timeout \" + timeout + \"ms waiting for region server to start: \"\n        + hostname);\n  }\n\nAs for changing where rs's online flag is set -- I guess it depends on what we wish to define as \"online\" for a regionserver. If \"online\" for a regionserver means that the regionserver has finished setup, then it's fine where it is. If \"online\" for a regionserver should mean that the regionserver has communicated to master it's ready to be assigned regions, then online should be set after the first reportForDuty.", "url": "https://github.com/apache/hbase/pull/2769#discussion_r600032198", "createdAt": "2021-03-23T23:35:12Z", "author": {"login": "caroliney14"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDAzNDQ1Nw==", "bodyText": "Sorry I was busy, just reading thru the comments.\n\nIf \"online\" for a regionserver should mean that the regionserver has communicated to master it's ready to be assigned regions, then online should be set after the first reportForDuty.\n\nThis... Earlier (without your patch), \"online\" meant this ^^. Now with your patch, the semantics have changed, so what @saintstack is saying (IIUC) is to preserve those semantics by setting it after the first reportForDuty and then you don't have to make any changes to the tests (if this theory is correct).", "url": "https://github.com/apache/hbase/pull/2769#discussion_r600034457", "createdAt": "2021-03-23T23:41:14Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDA1MjU0NQ==", "bodyText": "sorry, I meant to say \"If online for a regionserver should mean that the regionserver has communicated to master it's ready to be assigned regions, then online should be set after the first tryRegionServerReport,\" since online is currently being set in handleReportForDuty, after reportForDuty finishes (see this line). if we agree on this semantic, then I'll make the change, within this block. it would look something like this:\n      // Run mode.\n      long lastMsg = System.currentTimeMillis();\n      long oldRequestCount = -1;\n      boolean firstReport = true;\n      // The main run loop.\n      while (!isStopped() && isHealthy()) {\n      ...\n      long now = System.currentTimeMillis();\n        if ((now - lastMsg) >= msgInterval) {\n          // Register with the Master now that our setup is complete.\n          tryRegionServerReport(lastMsg, now);\n          if (firstReport) {\n            // Wake up anyone waiting for this server to online\n            synchronized (online) {\n              online.set(true);\n              online.notifyAll();\n            }\n            firstReport = false;\n          }\n          lastMsg = System.currentTimeMillis();\n        }\n        if (!isStopped() && !isAborted()) {\n          this.sleeper.sleep();\n        }\n      ...", "url": "https://github.com/apache/hbase/pull/2769#discussion_r600052545", "createdAt": "2021-03-24T00:20:13Z", "author": {"login": "caroliney14"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDE0MDY2Nw==", "bodyText": "Makes sense to me. You need do this only if tryRegionServerReport() is successful. It can also return without a successful report if the exception thrown is not YouAreDeadException. You may need to make that method return a boolean that tells the caller if the report was successfully sent.\nAnother nit: you don't need a separate boolean firstReport\nif (!online.get()) {\n  synchronized(online) {\n    ....\n  }\n}\n\nAlso please undo the test changes along with this change to validate if they are passing now.", "url": "https://github.com/apache/hbase/pull/2769#discussion_r600140667", "createdAt": "2021-03-24T03:43:15Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDE2MjgyNg==", "bodyText": "Testing locally, this way seems to work. I've undone all changes to the tests except for two test files which actually have bugs. Will wait to see whether the latest build passes.", "url": "https://github.com/apache/hbase/pull/2769#discussion_r600162826", "createdAt": "2021-03-24T04:41:09Z", "author": {"login": "caroliney14"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/TestZooKeeper.java", "diffHunk": "@@ -176,7 +176,7 @@ private void testSanity(final String testName) throws Exception {\n   @Test\n   public void testRegionAssignmentAfterMasterRecoveryDueToZKExpiry() throws Exception {\n     MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n-    cluster.startRegionServer();\n+    cluster.startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTM2Nw=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc4NTI2NzMyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsBase.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yMlQyMjo0Nzo0OVrOI7XvGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yM1QwMDo1NzoxNFrOI7ajuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTc4Ng==", "bodyText": "I believe there was a test for this in the first version of the patch thats now been deleted. Do we need one for this patch?", "url": "https://github.com/apache/hbase/pull/2769#discussion_r599125786", "createdAt": "2021-03-22T22:47:49Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsBase.java", "diffHunk": "@@ -159,7 +159,7 @@ public void tearDownAfterMethod() throws Exception {\n     int missing = NUM_SLAVES_BASE - getNumServers();\n     LOG.info(\"Restoring servers: \" + missing);\n     for (int i = 0; i < missing; i++) {\n-      ((MiniHBaseCluster) CLUSTER).startRegionServer();\n+      ((MiniHBaseCluster) CLUSTER).startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTE2OTI3Ng==", "bodyText": "I think the existing tests cover the change (seeing as we had many test failures resulting from the change which had to be fixed)", "url": "https://github.com/apache/hbase/pull/2769#discussion_r599169276", "createdAt": "2021-03-23T00:48:22Z", "author": {"login": "caroliney14"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsBase.java", "diffHunk": "@@ -159,7 +159,7 @@ public void tearDownAfterMethod() throws Exception {\n     int missing = NUM_SLAVES_BASE - getNumServers();\n     LOG.info(\"Restoring servers: \" + missing);\n     for (int i = 0; i < missing; i++) {\n-      ((MiniHBaseCluster) CLUSTER).startRegionServer();\n+      ((MiniHBaseCluster) CLUSTER).startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTc4Ng=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTE3MjAyNQ==", "bodyText": "Cool, ok.", "url": "https://github.com/apache/hbase/pull/2769#discussion_r599172025", "createdAt": "2021-03-23T00:57:14Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/rsgroup/TestRSGroupsBase.java", "diffHunk": "@@ -159,7 +159,7 @@ public void tearDownAfterMethod() throws Exception {\n     int missing = NUM_SLAVES_BASE - getNumServers();\n     LOG.info(\"Restoring servers: \" + missing);\n     for (int i = 0; i < missing; i++) {\n-      ((MiniHBaseCluster) CLUSTER).startRegionServer();\n+      ((MiniHBaseCluster) CLUSTER).startRegionServerAndWait(2000);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5OTEyNTc4Ng=="}, "originalCommit": {"oid": "886fb1c32e1deb1271c196f7926726959fa75db7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc5NDkyMzY5OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yNFQxNTo1ODo1NlrOI8zP3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yNFQxNTo1ODo1NlrOI8zP3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDYyNTExNw==", "bodyText": "@caroliney14 You missed my last comment on checking whether tryRegionServerReport() was successful. It can also return without sending a report successfully. Ex: RS starts before master is up. Quoting my last comment here again\n\nYou need do this only if tryRegionServerReport() is successful. It can also return without a successful report if the exception thrown is not YouAreDeadException. You may need to make that method return a boolean that tells the caller if the report was successfully sent.\n\nSo the code should be something like\nboolean reportSuccess = tryRegionServerReport(...)\nif (reportSuccess && !online.get()) {\n ....\n}\n\n+1 once that is done.", "url": "https://github.com/apache/hbase/pull/2769#discussion_r600625117", "createdAt": "2021-03-24T15:58:56Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java", "diffHunk": "@@ -1084,7 +1084,15 @@ public void run() {\n         }\n         long now = System.currentTimeMillis();\n         if ((now - lastMsg) >= msgInterval) {\n+          // Register with the Master now that our setup is complete.\n           tryRegionServerReport(lastMsg, now);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b24cf3da05281c542b07ead45c51f342e461338"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzc5NjUwNTEzOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yNFQyMTowMToxNFrOI9CP4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yNVQyMjoxOToyN1rOI9_k9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDg3MDg4Mg==", "bodyText": "How about setting this lastMsg here should be set to Long.MAX_LONG so we heartbeat immediately after the report-for-duty... so no lag before the RS is 'online'?", "url": "https://github.com/apache/hbase/pull/2769#discussion_r600870882", "createdAt": "2021-03-24T21:01:14Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java", "diffHunk": "@@ -1050,7 +1050,7 @@ public void run() {\n         }\n       }\n \n-      // We registered with the Master.  Go into run mode.\n+      // Run mode.\n       long lastMsg = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2eb52a77829a048252c52d91445fb3df21d7956a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDkyNDk0OA==", "bodyText": "I think you mean set it to LONG.MIN_LONG (or 0), since the line that checks it says if ((now - lastMsg) >= msgInterval), but yes good one \ud83d\udc4d", "url": "https://github.com/apache/hbase/pull/2769#discussion_r600924948", "createdAt": "2021-03-24T22:50:22Z", "author": {"login": "caroliney14"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java", "diffHunk": "@@ -1050,7 +1050,7 @@ public void run() {\n         }\n       }\n \n-      // We registered with the Master.  Go into run mode.\n+      // Run mode.\n       long lastMsg = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDg3MDg4Mg=="}, "originalCommit": {"oid": "2eb52a77829a048252c52d91445fb3df21d7956a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTc2NjkxOA==", "bodyText": "You are right.", "url": "https://github.com/apache/hbase/pull/2769#discussion_r601766918", "createdAt": "2021-03-25T19:03:48Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java", "diffHunk": "@@ -1050,7 +1050,7 @@ public void run() {\n         }\n       }\n \n-      // We registered with the Master.  Go into run mode.\n+      // Run mode.\n       long lastMsg = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDg3MDg4Mg=="}, "originalCommit": {"oid": "2eb52a77829a048252c52d91445fb3df21d7956a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTc2OTQyMA==", "bodyText": "So, do in a follow-on @caroliney14  ?", "url": "https://github.com/apache/hbase/pull/2769#discussion_r601769420", "createdAt": "2021-03-25T19:07:55Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java", "diffHunk": "@@ -1050,7 +1050,7 @@ public void run() {\n         }\n       }\n \n-      // We registered with the Master.  Go into run mode.\n+      // Run mode.\n       long lastMsg = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDg3MDg4Mg=="}, "originalCommit": {"oid": "2eb52a77829a048252c52d91445fb3df21d7956a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTgzODE0NA==", "bodyText": "@saintstack do we have to do this one? asking because the lastMsg timestamp ultimately ends up getting stored here, not sure if it'll have any impact we care about. also, one stage of the PR build kept failing for some unknown reason when I had pushed up the change long lastMsg = 0; which is why I ended up undoing it", "url": "https://github.com/apache/hbase/pull/2769#discussion_r601838144", "createdAt": "2021-03-25T21:03:53Z", "author": {"login": "caroliney14"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java", "diffHunk": "@@ -1050,7 +1050,7 @@ public void run() {\n         }\n       }\n \n-      // We registered with the Master.  Go into run mode.\n+      // Run mode.\n       long lastMsg = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDg3MDg4Mg=="}, "originalCommit": {"oid": "2eb52a77829a048252c52d91445fb3df21d7956a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTg3MDAzNg==", "bodyText": "No. We not have to do it. It was suggestion.  You've done a mountain of great work in here already.\nI'll keep an eye on it. Was thinking we heartbeat immediately but that might not be a good idea on a big cluster....", "url": "https://github.com/apache/hbase/pull/2769#discussion_r601870036", "createdAt": "2021-03-25T22:06:39Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java", "diffHunk": "@@ -1050,7 +1050,7 @@ public void run() {\n         }\n       }\n \n-      // We registered with the Master.  Go into run mode.\n+      // Run mode.\n       long lastMsg = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDg3MDg4Mg=="}, "originalCommit": {"oid": "2eb52a77829a048252c52d91445fb3df21d7956a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMTg3NTcwMg==", "bodyText": "sounds good, thank you @saintstack", "url": "https://github.com/apache/hbase/pull/2769#discussion_r601875702", "createdAt": "2021-03-25T22:19:27Z", "author": {"login": "caroliney14"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java", "diffHunk": "@@ -1050,7 +1050,7 @@ public void run() {\n         }\n       }\n \n-      // We registered with the Master.  Go into run mode.\n+      // Run mode.\n       long lastMsg = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMDg3MDg4Mg=="}, "originalCommit": {"oid": "2eb52a77829a048252c52d91445fb3df21d7956a"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2354, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}