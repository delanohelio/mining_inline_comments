{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NzMxNDYz", "number": 2326, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMDoxMjowMVrOEgMiFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjo0NTozNVrOElo_IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTk1MjIwOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/resources/hbase-webapps/master/table.jsp", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMDoxMjowMVrOHM7Vvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQwMjowOTo1MVrOHM9HcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMxNzE4Mw==", "bodyText": "1 sec is too short? And another way is: get the compaction state from master's memory and avoid rpc call.", "url": "https://github.com/apache/hbase/pull/2326#discussion_r483317183", "createdAt": "2020-09-04T00:12:01Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/resources/hbase-webapps/master/table.jsp", "diffHunk": "@@ -655,12 +656,14 @@\n <%\n   if (master.getAssignmentManager().isTableEnabled(table.getName())) {\n     try {\n-      CompactionState compactionState = admin.getCompactionState(table.getName()).get();\n+      CompactionState compactionState = admin.getCompactionState(table.getName()).get(1, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ddf0f116baf3482d4e76c6d7f2436dcd36a6cfd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzM0NjI4OA==", "bodyText": "Thanks for the suggestion, let me try.", "url": "https://github.com/apache/hbase/pull/2326#discussion_r483346288", "createdAt": "2020-09-04T02:09:51Z", "author": {"login": "bsglz"}, "path": "hbase-server/src/main/resources/hbase-webapps/master/table.jsp", "diffHunk": "@@ -655,12 +656,14 @@\n <%\n   if (master.getAssignmentManager().isTableEnabled(table.getName())) {\n     try {\n-      CompactionState compactionState = admin.getCompactionState(table.getName()).get();\n+      CompactionState compactionState = admin.getCompactionState(table.getName()).get(1, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzMxNzE4Mw=="}, "originalCommit": {"oid": "9ddf0f116baf3482d4e76c6d7f2436dcd36a6cfd"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTAzMjIxOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjo0MzoxMlrOHVOH3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjoxNzo1N1rOHVoQ6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzUzMg==", "bodyText": "Debug log?", "url": "https://github.com/apache/hbase/pull/2326#discussion_r492013532", "createdAt": "2020-09-21T12:43:12Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java", "diffHunk": "@@ -1741,9 +1741,10 @@ RegionLoad createRegionLoad(final HRegion r, RegionLoad.Builder regionLoadBldr,\n       .setBlocksLocalWeight(blocksLocalWeight)\n       .setBlocksLocalWithSsdWeight(blocksLocalWithSsdWeight)\n       .setBlocksTotalWeight(blocksTotalWeight)\n+      .setCompactionState(ProtobufUtil.createCompactionStateForRegionLoad(r.getCompactionState()))\n       .setLastMajorCompactionTs(r.getOldestHfileTs(true));\n     r.setCompleteSequenceId(regionLoadBldr);\n-\n+    LOG.info(\">>>>>>setCompactionState:{}\",r.getCompactionState());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcf271f6645f1ea905797aa4d555df85187a6260"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0MTgzNQ==", "bodyText": "Will fix, thanks.", "url": "https://github.com/apache/hbase/pull/2326#discussion_r492441835", "createdAt": "2020-09-22T02:17:57Z", "author": {"login": "bsglz"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/HRegionServer.java", "diffHunk": "@@ -1741,9 +1741,10 @@ RegionLoad createRegionLoad(final HRegion r, RegionLoad.Builder regionLoadBldr,\n       .setBlocksLocalWeight(blocksLocalWeight)\n       .setBlocksLocalWithSsdWeight(blocksLocalWithSsdWeight)\n       .setBlocksTotalWeight(blocksTotalWeight)\n+      .setCompactionState(ProtobufUtil.createCompactionStateForRegionLoad(r.getCompactionState()))\n       .setLastMajorCompactionTs(r.getOldestHfileTs(true));\n     r.setCompleteSequenceId(regionLoadBldr);\n-\n+    LOG.info(\">>>>>>setCompactionState:{}\",r.getCompactionState());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzUzMg=="}, "originalCommit": {"oid": "dcf271f6645f1ea905797aa4d555df85187a6260"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTAzNDQ2OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjo0MzozNlrOHVOJRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjo1OTowOVrOHVowWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzg5Mg==", "bodyText": "Why full class name here?", "url": "https://github.com/apache/hbase/pull/2326#discussion_r492013892", "createdAt": "2020-09-21T12:43:36Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -3907,4 +3909,51 @@ public MetaRegionLocationCache getMetaRegionLocationCache() {\n   public RSGroupInfoManager getRSGroupInfoManager() {\n     return rsGroupInfoManager;\n   }\n+\n+  /**\n+   * Get the compaction state of the table\n+   *\n+   * @param tableName The table name\n+   * @return CompactionState Compaction state of the table\n+   */\n+  public org.apache.hadoop.hbase.client.CompactionState getCompactionState(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcf271f6645f1ea905797aa4d555df85187a6260"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0Nzc5Mg==", "bodyText": "Conflict with org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos.GetRegionInfoResponse.CompactionState", "url": "https://github.com/apache/hbase/pull/2326#discussion_r492447792", "createdAt": "2020-09-22T02:48:41Z", "author": {"login": "bsglz"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -3907,4 +3909,51 @@ public MetaRegionLocationCache getMetaRegionLocationCache() {\n   public RSGroupInfoManager getRSGroupInfoManager() {\n     return rsGroupInfoManager;\n   }\n+\n+  /**\n+   * Get the compaction state of the table\n+   *\n+   * @param tableName The table name\n+   * @return CompactionState Compaction state of the table\n+   */\n+  public org.apache.hadoop.hbase.client.CompactionState getCompactionState(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzg5Mg=="}, "originalCommit": {"oid": "dcf271f6645f1ea905797aa4d555df85187a6260"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0ODM3MA==", "bodyText": "Then better not import org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos.GetRegionInfoResponse.CompactionState directly? Import org.apache.hadoop.hbase.shaded.protobuf.generated.AdminProtos.GetRegionInfoResponse, and then use GetRegionInfoResponse.CompactionState to reference the protobuf message.", "url": "https://github.com/apache/hbase/pull/2326#discussion_r492448370", "createdAt": "2020-09-22T02:51:38Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -3907,4 +3909,51 @@ public MetaRegionLocationCache getMetaRegionLocationCache() {\n   public RSGroupInfoManager getRSGroupInfoManager() {\n     return rsGroupInfoManager;\n   }\n+\n+  /**\n+   * Get the compaction state of the table\n+   *\n+   * @param tableName The table name\n+   * @return CompactionState Compaction state of the table\n+   */\n+  public org.apache.hadoop.hbase.client.CompactionState getCompactionState(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzg5Mg=="}, "originalCommit": {"oid": "dcf271f6645f1ea905797aa4d555df85187a6260"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0OTg4MQ==", "bodyText": "Good idea, will fix, thanks.", "url": "https://github.com/apache/hbase/pull/2326#discussion_r492449881", "createdAt": "2020-09-22T02:59:09Z", "author": {"login": "bsglz"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -3907,4 +3909,51 @@ public MetaRegionLocationCache getMetaRegionLocationCache() {\n   public RSGroupInfoManager getRSGroupInfoManager() {\n     return rsGroupInfoManager;\n   }\n+\n+  /**\n+   * Get the compaction state of the table\n+   *\n+   * @param tableName The table name\n+   * @return CompactionState Compaction state of the table\n+   */\n+  public org.apache.hadoop.hbase.client.CompactionState getCompactionState(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxMzg5Mg=="}, "originalCommit": {"oid": "dcf271f6645f1ea905797aa4d555df85187a6260"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTAzNzU5OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/RegionMetricsBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjo0NDoxM1rOHVOLIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjo1MDozOFrOHVopuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxNDM3MA==", "bodyText": "New line here?", "url": "https://github.com/apache/hbase/pull/2326#discussion_r492014370", "createdAt": "2020-09-21T12:44:13Z", "author": {"login": "Apache9"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/RegionMetricsBuilder.java", "diffHunk": "@@ -263,6 +268,10 @@ public RegionMetricsBuilder setBlocksTotalWeight(long value) {\n     this.blocksTotalWeight = value;\n     return this;\n   }\n+  public RegionMetricsBuilder setCompactionState(CompactionState compactionState) {\n+    this.compactionState = compactionState;\n+    return this;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcf271f6645f1ea905797aa4d555df85187a6260"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0ODE4Nw==", "bodyText": "Ok, will fix.", "url": "https://github.com/apache/hbase/pull/2326#discussion_r492448187", "createdAt": "2020-09-22T02:50:38Z", "author": {"login": "bsglz"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/RegionMetricsBuilder.java", "diffHunk": "@@ -263,6 +268,10 @@ public RegionMetricsBuilder setBlocksTotalWeight(long value) {\n     this.blocksTotalWeight = value;\n     return this;\n   }\n+  public RegionMetricsBuilder setCompactionState(CompactionState compactionState) {\n+    this.compactionState = compactionState;\n+    return this;\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxNDM3MA=="}, "originalCommit": {"oid": "dcf271f6645f1ea905797aa4d555df85187a6260"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3OTA0Mjg4OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactionState.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMjo0NTozNVrOHVOOWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjo1NToxOFrOHVotXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxNTE5Mg==", "bodyText": "I think this test is for testing the HBaseAdmin.getCompactionState so we should not change to use master?", "url": "https://github.com/apache/hbase/pull/2326#discussion_r492015192", "createdAt": "2020-09-21T12:45:35Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactionState.java", "diffHunk": "@@ -164,10 +166,10 @@ private void compaction(final String tableName, final int flushes,\n       long curt = System.currentTimeMillis();\n       long waitTime = 5000;\n       long endt = curt + waitTime;\n-      CompactionState state = admin.getCompactionState(table);\n+      CompactionState state = master.getCompactionState(table);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcf271f6645f1ea905797aa4d555df85187a6260"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0OTExNg==", "bodyText": "Make sense, will fix later, thanks.", "url": "https://github.com/apache/hbase/pull/2326#discussion_r492449116", "createdAt": "2020-09-22T02:55:18Z", "author": {"login": "bsglz"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/regionserver/TestCompactionState.java", "diffHunk": "@@ -164,10 +166,10 @@ private void compaction(final String tableName, final int flushes,\n       long curt = System.currentTimeMillis();\n       long waitTime = 5000;\n       long endt = curt + waitTime;\n-      CompactionState state = admin.getCompactionState(table);\n+      CompactionState state = master.getCompactionState(table);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAxNTE5Mg=="}, "originalCommit": {"oid": "dcf271f6645f1ea905797aa4d555df85187a6260"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2584, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}