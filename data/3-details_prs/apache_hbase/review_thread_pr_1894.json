{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzODQzMjY1", "number": 1894, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMTo1MDowM1rOEFMrfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDo1OTozOVrOEFkwgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODg2MDc3OnYy", "diffSide": "RIGHT", "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMTo1MDowM1rOGjSfGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwOTozODo0M1rOGjqsDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY1NjIxNw==", "bodyText": "This should be SizeOfLogQueue, or?", "url": "https://github.com/apache/hbase/pull/1894#discussion_r439656217", "createdAt": "2020-06-12T21:50:03Z", "author": {"login": "HorizonNet"}, "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "diffHunk": "@@ -2629,6 +2629,91 @@ You can use the HBase Shell command `status 'replication'` to monitor the replic\n * `status 'replication', 'source'` -- prints the status for each replication source, sorted by hostname.\n * `status 'replication', 'sink'` -- prints the status for each replication sink, sorted by hostname.\n \n+==== Understanding the output\n+\n+The command output will vary according to the state of replication. For example right after a restart\n+and if destination peer is not reachable, no replication source threads would be running,\n+so no metrics would get displayed:\n+\n+----\n+hbase01.home:\n+SOURCE: PeerID=1\n+Normal Queue: 1\n+No Reader/Shipper threads runnning yet.\n+SINK: TimeStampStarted=1591985197350, Waiting for OPs...\n+----\n+\n+Under normal circumstances, a healthy, active-active replication deployment would\n+show the following:\n+\n+----\n+    hbase01.home:\n+      SOURCE: PeerID=1\n+         Normal Queue: 1\n+           AgeOfLastShippedOp=0, TimeStampOfLastShippedOp=Fri Jun 12 18:49:23 BST 2020, SizeOfLogQueue=1, EditsReadFromLogQueue=1, OpsShippedToTarget=1, TimeStampOfNextToReplicate=Fri Jun 12 18:49:23 BST 2020, Replication Lag=0\n+      SINK: TimeStampStarted=1591983663458, AgeOfLastAppliedOp=0, TimeStampsOfLastAppliedOp=Fri Jun 12 18:57:18 BST 2020\n+----\n+\n+The definition for each of these metrics is detailed below:\n+\n+[cols=\"1,1,1\", options=\"header\"]\n+|===\n+| Type\n+| Metric Name\n+| Description\n+\n+| Source\n+| AgeOfLastShippedOp\n+| How long last successfully shipped edit took to effectively get replicated on target.\n+\n+| Source\n+| TimeStampOfLastShippedOp\n+| The actual date of last successful edit shipment.\n+\n+| Source\n+| `", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffc4e0ca4d0af6bd978dfc513c92919b258c4a2c"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA1Mjc1MQ==", "bodyText": "Yes.", "url": "https://github.com/apache/hbase/pull/1894#discussion_r440052751", "createdAt": "2020-06-15T09:38:43Z", "author": {"login": "wchevreuil"}, "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "diffHunk": "@@ -2629,6 +2629,91 @@ You can use the HBase Shell command `status 'replication'` to monitor the replic\n * `status 'replication', 'source'` -- prints the status for each replication source, sorted by hostname.\n * `status 'replication', 'sink'` -- prints the status for each replication sink, sorted by hostname.\n \n+==== Understanding the output\n+\n+The command output will vary according to the state of replication. For example right after a restart\n+and if destination peer is not reachable, no replication source threads would be running,\n+so no metrics would get displayed:\n+\n+----\n+hbase01.home:\n+SOURCE: PeerID=1\n+Normal Queue: 1\n+No Reader/Shipper threads runnning yet.\n+SINK: TimeStampStarted=1591985197350, Waiting for OPs...\n+----\n+\n+Under normal circumstances, a healthy, active-active replication deployment would\n+show the following:\n+\n+----\n+    hbase01.home:\n+      SOURCE: PeerID=1\n+         Normal Queue: 1\n+           AgeOfLastShippedOp=0, TimeStampOfLastShippedOp=Fri Jun 12 18:49:23 BST 2020, SizeOfLogQueue=1, EditsReadFromLogQueue=1, OpsShippedToTarget=1, TimeStampOfNextToReplicate=Fri Jun 12 18:49:23 BST 2020, Replication Lag=0\n+      SINK: TimeStampStarted=1591983663458, AgeOfLastAppliedOp=0, TimeStampsOfLastAppliedOp=Fri Jun 12 18:57:18 BST 2020\n+----\n+\n+The definition for each of these metrics is detailed below:\n+\n+[cols=\"1,1,1\", options=\"header\"]\n+|===\n+| Type\n+| Metric Name\n+| Description\n+\n+| Source\n+| AgeOfLastShippedOp\n+| How long last successfully shipped edit took to effectively get replicated on target.\n+\n+| Source\n+| TimeStampOfLastShippedOp\n+| The actual date of last successful edit shipment.\n+\n+| Source\n+| `", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY1NjIxNw=="}, "originalCommit": {"oid": "ffc4e0ca4d0af6bd978dfc513c92919b258c4a2c"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODg2NTEwOnYy", "diffSide": "RIGHT", "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMTo1MjoyMFrOGjSh4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwOTozODo1N1rOGjqsjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY1NjkyOA==", "bodyText": "There seems to be a space missing before \"command\".", "url": "https://github.com/apache/hbase/pull/1894#discussion_r439656928", "createdAt": "2020-06-12T21:52:20Z", "author": {"login": "HorizonNet"}, "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "diffHunk": "@@ -2629,6 +2629,91 @@ You can use the HBase Shell command `status 'replication'` to monitor the replic\n * `status 'replication', 'source'` -- prints the status for each replication source, sorted by hostname.\n * `status 'replication', 'sink'` -- prints the status for each replication sink, sorted by hostname.\n \n+==== Understanding the output\n+\n+The command output will vary according to the state of replication. For example right after a restart\n+and if destination peer is not reachable, no replication source threads would be running,\n+so no metrics would get displayed:\n+\n+----\n+hbase01.home:\n+SOURCE: PeerID=1\n+Normal Queue: 1\n+No Reader/Shipper threads runnning yet.\n+SINK: TimeStampStarted=1591985197350, Waiting for OPs...\n+----\n+\n+Under normal circumstances, a healthy, active-active replication deployment would\n+show the following:\n+\n+----\n+    hbase01.home:\n+      SOURCE: PeerID=1\n+         Normal Queue: 1\n+           AgeOfLastShippedOp=0, TimeStampOfLastShippedOp=Fri Jun 12 18:49:23 BST 2020, SizeOfLogQueue=1, EditsReadFromLogQueue=1, OpsShippedToTarget=1, TimeStampOfNextToReplicate=Fri Jun 12 18:49:23 BST 2020, Replication Lag=0\n+      SINK: TimeStampStarted=1591983663458, AgeOfLastAppliedOp=0, TimeStampsOfLastAppliedOp=Fri Jun 12 18:57:18 BST 2020\n+----\n+\n+The definition for each of these metrics is detailed below:\n+\n+[cols=\"1,1,1\", options=\"header\"]\n+|===\n+| Type\n+| Metric Name\n+| Description\n+\n+| Source\n+| AgeOfLastShippedOp\n+| How long last successfully shipped edit took to effectively get replicated on target.\n+\n+| Source\n+| TimeStampOfLastShippedOp\n+| The actual date of last successful edit shipment.\n+\n+| Source\n+| `\n+| Number of wal files on this given queue.\n+\n+| Source\n+| EditsReadFromLogQueue\n+| How many edits have been read from this given queue since this source thread started.\n+\n+| Source\n+| OpsShippedToTarget\n+| How many edits have been shipped to target since this source thread started.\n+\n+| Source\n+| TimeStampOfNextToReplicate\n+| Date of the current edit been attempted to replicate.\n+\n+| Source\n+| Replication Lag\n+| The elapsed time (in millis), since the last edit to replicate was read by this source\n+thread and effectively replicated to target\n+\n+| Sink\n+| TimeStampStarted\n+| Date (in millis) of when this Sink thread started.\n+\n+| Sink\n+| AgeOfLastAppliedOp\n+| How long it took to apply the last successful shipped edit.\n+\n+| Sink\n+| TimeStampsOfLastAppliedOp\n+| Date of last successful applied edit.\n+\n+|===\n+\n+Growing values for `Source.TimeStampsOfLastAppliedOp` and/or\n+`Source.Replication Lag` would indicate replication delays. If those numbers keep going\n+up, while `Source.TimeStampOfLastShippedOp`, `Source.EditsReadFromLogQueue`,\n+`Source.OpsShippedToTarget` or `Source.TimeStampOfNextToReplicate` do not change at all,\n+ then replication flow is failing to progress, and there might be problems within\n+clusters communication. This could also happen if replication is manually paused\n+(via hbase shell `disable_peer`command, for example), but date keeps getting ingested", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffc4e0ca4d0af6bd978dfc513c92919b258c4a2c"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA1Mjg3OQ==", "bodyText": "Definitely.", "url": "https://github.com/apache/hbase/pull/1894#discussion_r440052879", "createdAt": "2020-06-15T09:38:57Z", "author": {"login": "wchevreuil"}, "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "diffHunk": "@@ -2629,6 +2629,91 @@ You can use the HBase Shell command `status 'replication'` to monitor the replic\n * `status 'replication', 'source'` -- prints the status for each replication source, sorted by hostname.\n * `status 'replication', 'sink'` -- prints the status for each replication sink, sorted by hostname.\n \n+==== Understanding the output\n+\n+The command output will vary according to the state of replication. For example right after a restart\n+and if destination peer is not reachable, no replication source threads would be running,\n+so no metrics would get displayed:\n+\n+----\n+hbase01.home:\n+SOURCE: PeerID=1\n+Normal Queue: 1\n+No Reader/Shipper threads runnning yet.\n+SINK: TimeStampStarted=1591985197350, Waiting for OPs...\n+----\n+\n+Under normal circumstances, a healthy, active-active replication deployment would\n+show the following:\n+\n+----\n+    hbase01.home:\n+      SOURCE: PeerID=1\n+         Normal Queue: 1\n+           AgeOfLastShippedOp=0, TimeStampOfLastShippedOp=Fri Jun 12 18:49:23 BST 2020, SizeOfLogQueue=1, EditsReadFromLogQueue=1, OpsShippedToTarget=1, TimeStampOfNextToReplicate=Fri Jun 12 18:49:23 BST 2020, Replication Lag=0\n+      SINK: TimeStampStarted=1591983663458, AgeOfLastAppliedOp=0, TimeStampsOfLastAppliedOp=Fri Jun 12 18:57:18 BST 2020\n+----\n+\n+The definition for each of these metrics is detailed below:\n+\n+[cols=\"1,1,1\", options=\"header\"]\n+|===\n+| Type\n+| Metric Name\n+| Description\n+\n+| Source\n+| AgeOfLastShippedOp\n+| How long last successfully shipped edit took to effectively get replicated on target.\n+\n+| Source\n+| TimeStampOfLastShippedOp\n+| The actual date of last successful edit shipment.\n+\n+| Source\n+| `\n+| Number of wal files on this given queue.\n+\n+| Source\n+| EditsReadFromLogQueue\n+| How many edits have been read from this given queue since this source thread started.\n+\n+| Source\n+| OpsShippedToTarget\n+| How many edits have been shipped to target since this source thread started.\n+\n+| Source\n+| TimeStampOfNextToReplicate\n+| Date of the current edit been attempted to replicate.\n+\n+| Source\n+| Replication Lag\n+| The elapsed time (in millis), since the last edit to replicate was read by this source\n+thread and effectively replicated to target\n+\n+| Sink\n+| TimeStampStarted\n+| Date (in millis) of when this Sink thread started.\n+\n+| Sink\n+| AgeOfLastAppliedOp\n+| How long it took to apply the last successful shipped edit.\n+\n+| Sink\n+| TimeStampsOfLastAppliedOp\n+| Date of last successful applied edit.\n+\n+|===\n+\n+Growing values for `Source.TimeStampsOfLastAppliedOp` and/or\n+`Source.Replication Lag` would indicate replication delays. If those numbers keep going\n+up, while `Source.TimeStampOfLastShippedOp`, `Source.EditsReadFromLogQueue`,\n+`Source.OpsShippedToTarget` or `Source.TimeStampOfNextToReplicate` do not change at all,\n+ then replication flow is failing to progress, and there might be problems within\n+clusters communication. This could also happen if replication is manually paused\n+(via hbase shell `disable_peer`command, for example), but date keeps getting ingested", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTY1NjkyOA=="}, "originalCommit": {"oid": "ffc4e0ca4d0af6bd978dfc513c92919b258c4a2c"}, "originalPosition": 86}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MjgwNTc4OnYy", "diffSide": "RIGHT", "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDo1OTo0MFrOGj2Ftg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwOTozMjo0OVrOGkTOwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzOTU0Mg==", "bodyText": "Just a question: For active-active replication, in order to get peerId of both clusters (defined in each other), we need to run status 'replication' at both clusters side right?\nGetting ageOfLastShipped etc metric values from remote cluster is also not that easy even if we want to display here.", "url": "https://github.com/apache/hbase/pull/1894#discussion_r440239542", "createdAt": "2020-06-15T14:59:40Z", "author": {"login": "virajjasani"}, "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "diffHunk": "@@ -2629,6 +2629,91 @@ You can use the HBase Shell command `status 'replication'` to monitor the replic\n * `status 'replication', 'source'` -- prints the status for each replication source, sorted by hostname.\n * `status 'replication', 'sink'` -- prints the status for each replication sink, sorted by hostname.\n \n+==== Understanding the output\n+\n+The command output will vary according to the state of replication. For example right after a restart\n+and if destination peer is not reachable, no replication source threads would be running,\n+so no metrics would get displayed:\n+\n+----\n+hbase01.home:\n+SOURCE: PeerID=1\n+Normal Queue: 1\n+No Reader/Shipper threads runnning yet.\n+SINK: TimeStampStarted=1591985197350, Waiting for OPs...\n+----\n+\n+Under normal circumstances, a healthy, active-active replication deployment would\n+show the following:\n+\n+----\n+    hbase01.home:\n+      SOURCE: PeerID=1\n+         Normal Queue: 1\n+           AgeOfLastShippedOp=0, TimeStampOfLastShippedOp=Fri Jun 12 18:49:23 BST 2020, SizeOfLogQueue=1, EditsReadFromLogQueue=1, OpsShippedToTarget=1, TimeStampOfNextToReplicate=Fri Jun 12 18:49:23 BST 2020, Replication Lag=0\n+      SINK: TimeStampStarted=1591983663458, AgeOfLastAppliedOp=0, TimeStampsOfLastAppliedOp=Fri Jun 12 18:57:18 BST 2020", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6610602513738a1ea9f6dc89660e202f52120dc"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMzNTUzMA==", "bodyText": "Just a question: For active-active replication, in order to get peerId of both clusters (defined in each other), we need to run status 'replication' at both clusters side right?\n\nYes. The command only shows the context of an individual cluster, listing overall stats about the given cluster source queues and sink threads.\n\nGetting ageOfLastShipped etc metric values from remote cluster is also not that easy even if we want to display here.\n\nThis \"ageOfLastShipped\" metric is related to the source cluster. On the source, we have ReplicationSourceShipper thread reading entries from the WAL and making synchronous RPC calls to ReplicationSink in the target. If the call is success, we get that time in ReplicationSourceShipper, decrease from the edit entry time and record it as \"ageOfLastShipped\". So \"ageOfLastShipped\" is how long a given edit took since it entered on source cluster until source cluster assumed it was successful replicated.\n@virajjasani would you think this metric description should be improved? Looks like current text was not that clear.", "url": "https://github.com/apache/hbase/pull/1894#discussion_r440335530", "createdAt": "2020-06-15T17:32:07Z", "author": {"login": "wchevreuil"}, "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "diffHunk": "@@ -2629,6 +2629,91 @@ You can use the HBase Shell command `status 'replication'` to monitor the replic\n * `status 'replication', 'source'` -- prints the status for each replication source, sorted by hostname.\n * `status 'replication', 'sink'` -- prints the status for each replication sink, sorted by hostname.\n \n+==== Understanding the output\n+\n+The command output will vary according to the state of replication. For example right after a restart\n+and if destination peer is not reachable, no replication source threads would be running,\n+so no metrics would get displayed:\n+\n+----\n+hbase01.home:\n+SOURCE: PeerID=1\n+Normal Queue: 1\n+No Reader/Shipper threads runnning yet.\n+SINK: TimeStampStarted=1591985197350, Waiting for OPs...\n+----\n+\n+Under normal circumstances, a healthy, active-active replication deployment would\n+show the following:\n+\n+----\n+    hbase01.home:\n+      SOURCE: PeerID=1\n+         Normal Queue: 1\n+           AgeOfLastShippedOp=0, TimeStampOfLastShippedOp=Fri Jun 12 18:49:23 BST 2020, SizeOfLogQueue=1, EditsReadFromLogQueue=1, OpsShippedToTarget=1, TimeStampOfNextToReplicate=Fri Jun 12 18:49:23 BST 2020, Replication Lag=0\n+      SINK: TimeStampStarted=1591983663458, AgeOfLastAppliedOp=0, TimeStampsOfLastAppliedOp=Fri Jun 12 18:57:18 BST 2020", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzOTU0Mg=="}, "originalCommit": {"oid": "f6610602513738a1ea9f6dc89660e202f52120dc"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2NzczNw==", "bodyText": "Oh no, my bad. I know ageOfLastShipped metric, I just took it's example to state that we can't get similar metrics from destination cluster anyways.\nMy question was, do we really have any metric (from replication viewpoint) available to us from destination cluster? (I don't know of any such metric so far, I hope we can't know), like cluster A knows it's own ageOfLastShipped and ageOfLastApplied but does it know cluster B's ageOfLastShipped and ageOfLastApplied if both clusters are each other's pairs?\nAnd by this command output, I was thinking what if we could display both clusters' metrics together (in case of active-active), but that might not be possible (and might not even be worth spending time)\nSomething like this could be really fancy but nothing necessary (hbase01.home belongs to cluster A and hbase02.home belongs to cluster B, only if we have 2 way replication setup):\n    hbase01.home:\n      SOURCE: PeerID=1\n         Normal Queue: 1\n           AgeOfLastShippedOp=0, TimeStampOfLastShippedOp=Fri Jun 12 18:49:23 BST 2020, SizeOfLogQueue=1, EditsReadFromLogQueue=1, OpsShippedToTarget=1, TimeStampOfNextToReplicate=Fri Jun 12 18:49:23 BST 2020, Replication Lag=0\n      SINK: TimeStampStarted=1591983663458, AgeOfLastAppliedOp=0, TimeStampsOfLastAppliedOp=Fri Jun 12 18:57:18 BST 2020\n\n    hbase02.home:\n      SOURCE: PeerID=1\n         Normal Queue: 1\n           AgeOfLastShippedOp=0, TimeStampOfLastShippedOp=Fri Jun 12 18:49:23 BST 2020, SizeOfLogQueue=1, EditsReadFromLogQueue=1, OpsShippedToTarget=1, TimeStampOfNextToReplicate=Fri Jun 12 18:49:23 BST 2020, Replication Lag=0\n      SINK: TimeStampStarted=1591983663458, AgeOfLastAppliedOp=0, TimeStampsOfLastAppliedOp=Fri Jun 12 18:57:18 BST 2020", "url": "https://github.com/apache/hbase/pull/1894#discussion_r440367737", "createdAt": "2020-06-15T18:32:01Z", "author": {"login": "virajjasani"}, "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "diffHunk": "@@ -2629,6 +2629,91 @@ You can use the HBase Shell command `status 'replication'` to monitor the replic\n * `status 'replication', 'source'` -- prints the status for each replication source, sorted by hostname.\n * `status 'replication', 'sink'` -- prints the status for each replication sink, sorted by hostname.\n \n+==== Understanding the output\n+\n+The command output will vary according to the state of replication. For example right after a restart\n+and if destination peer is not reachable, no replication source threads would be running,\n+so no metrics would get displayed:\n+\n+----\n+hbase01.home:\n+SOURCE: PeerID=1\n+Normal Queue: 1\n+No Reader/Shipper threads runnning yet.\n+SINK: TimeStampStarted=1591985197350, Waiting for OPs...\n+----\n+\n+Under normal circumstances, a healthy, active-active replication deployment would\n+show the following:\n+\n+----\n+    hbase01.home:\n+      SOURCE: PeerID=1\n+         Normal Queue: 1\n+           AgeOfLastShippedOp=0, TimeStampOfLastShippedOp=Fri Jun 12 18:49:23 BST 2020, SizeOfLogQueue=1, EditsReadFromLogQueue=1, OpsShippedToTarget=1, TimeStampOfNextToReplicate=Fri Jun 12 18:49:23 BST 2020, Replication Lag=0\n+      SINK: TimeStampStarted=1591983663458, AgeOfLastAppliedOp=0, TimeStampsOfLastAppliedOp=Fri Jun 12 18:57:18 BST 2020", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzOTU0Mg=="}, "originalCommit": {"oid": "f6610602513738a1ea9f6dc89660e202f52120dc"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2OTg1Mw==", "bodyText": "Anyways, even if one cluster can know another one's metrics, it's not related to this PR, it is good to merge anyways :)\nMoreover, description looks all good to me.", "url": "https://github.com/apache/hbase/pull/1894#discussion_r440369853", "createdAt": "2020-06-15T18:35:46Z", "author": {"login": "virajjasani"}, "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "diffHunk": "@@ -2629,6 +2629,91 @@ You can use the HBase Shell command `status 'replication'` to monitor the replic\n * `status 'replication', 'source'` -- prints the status for each replication source, sorted by hostname.\n * `status 'replication', 'sink'` -- prints the status for each replication sink, sorted by hostname.\n \n+==== Understanding the output\n+\n+The command output will vary according to the state of replication. For example right after a restart\n+and if destination peer is not reachable, no replication source threads would be running,\n+so no metrics would get displayed:\n+\n+----\n+hbase01.home:\n+SOURCE: PeerID=1\n+Normal Queue: 1\n+No Reader/Shipper threads runnning yet.\n+SINK: TimeStampStarted=1591985197350, Waiting for OPs...\n+----\n+\n+Under normal circumstances, a healthy, active-active replication deployment would\n+show the following:\n+\n+----\n+    hbase01.home:\n+      SOURCE: PeerID=1\n+         Normal Queue: 1\n+           AgeOfLastShippedOp=0, TimeStampOfLastShippedOp=Fri Jun 12 18:49:23 BST 2020, SizeOfLogQueue=1, EditsReadFromLogQueue=1, OpsShippedToTarget=1, TimeStampOfNextToReplicate=Fri Jun 12 18:49:23 BST 2020, Replication Lag=0\n+      SINK: TimeStampStarted=1591983663458, AgeOfLastAppliedOp=0, TimeStampsOfLastAppliedOp=Fri Jun 12 18:57:18 BST 2020", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzOTU0Mg=="}, "originalCommit": {"oid": "f6610602513738a1ea9f6dc89660e202f52120dc"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5Nzk2MQ==", "bodyText": "My question was, do we really have any metric (from replication viewpoint) available to us from destination cluster? (I don't know of any such metric so far, I hope we can't know), like cluster A knows it's own ageOfLastShipped and ageOfLastApplied but does it know cluster B's ageOfLastShipped and ageOfLastApplied if both clusters are each other's pairs?\n\nAh, yeah, metrics from remote cluster are not available at source, and vice-versa.\n\nAnd by this command output, I was thinking what if we could display both clusters' metrics together (in case of active-active), but that might not be possible (and might not even be worth spending time)\n\nMaybe too much for shell command, but looks like a great idea for the replication stats page on the UI. Main problem I see is that it's not so easy to identify if a given cluster is actually a target, as it always exposes the sink rpc interface. I will dig further around and see if I can come with something not too complex.", "url": "https://github.com/apache/hbase/pull/1894#discussion_r440697961", "createdAt": "2020-06-16T09:01:23Z", "author": {"login": "wchevreuil"}, "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "diffHunk": "@@ -2629,6 +2629,91 @@ You can use the HBase Shell command `status 'replication'` to monitor the replic\n * `status 'replication', 'source'` -- prints the status for each replication source, sorted by hostname.\n * `status 'replication', 'sink'` -- prints the status for each replication sink, sorted by hostname.\n \n+==== Understanding the output\n+\n+The command output will vary according to the state of replication. For example right after a restart\n+and if destination peer is not reachable, no replication source threads would be running,\n+so no metrics would get displayed:\n+\n+----\n+hbase01.home:\n+SOURCE: PeerID=1\n+Normal Queue: 1\n+No Reader/Shipper threads runnning yet.\n+SINK: TimeStampStarted=1591985197350, Waiting for OPs...\n+----\n+\n+Under normal circumstances, a healthy, active-active replication deployment would\n+show the following:\n+\n+----\n+    hbase01.home:\n+      SOURCE: PeerID=1\n+         Normal Queue: 1\n+           AgeOfLastShippedOp=0, TimeStampOfLastShippedOp=Fri Jun 12 18:49:23 BST 2020, SizeOfLogQueue=1, EditsReadFromLogQueue=1, OpsShippedToTarget=1, TimeStampOfNextToReplicate=Fri Jun 12 18:49:23 BST 2020, Replication Lag=0\n+      SINK: TimeStampStarted=1591983663458, AgeOfLastAppliedOp=0, TimeStampsOfLastAppliedOp=Fri Jun 12 18:57:18 BST 2020", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzOTU0Mg=="}, "originalCommit": {"oid": "f6610602513738a1ea9f6dc89660e202f52120dc"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcxNjk5Mg==", "bodyText": "I agree, for shell, it is too much, and also the fact that determining whether the target cluster is also actively pushing WAL Edits to current cluster is not that straightforward.\nAnyways, this was just a thought, maybe for some time in future, who knows we might have this status display feature in future :)", "url": "https://github.com/apache/hbase/pull/1894#discussion_r440716992", "createdAt": "2020-06-16T09:32:49Z", "author": {"login": "virajjasani"}, "path": "src/main/asciidoc/_chapters/ops_mgt.adoc", "diffHunk": "@@ -2629,6 +2629,91 @@ You can use the HBase Shell command `status 'replication'` to monitor the replic\n * `status 'replication', 'source'` -- prints the status for each replication source, sorted by hostname.\n * `status 'replication', 'sink'` -- prints the status for each replication sink, sorted by hostname.\n \n+==== Understanding the output\n+\n+The command output will vary according to the state of replication. For example right after a restart\n+and if destination peer is not reachable, no replication source threads would be running,\n+so no metrics would get displayed:\n+\n+----\n+hbase01.home:\n+SOURCE: PeerID=1\n+Normal Queue: 1\n+No Reader/Shipper threads runnning yet.\n+SINK: TimeStampStarted=1591985197350, Waiting for OPs...\n+----\n+\n+Under normal circumstances, a healthy, active-active replication deployment would\n+show the following:\n+\n+----\n+    hbase01.home:\n+      SOURCE: PeerID=1\n+         Normal Queue: 1\n+           AgeOfLastShippedOp=0, TimeStampOfLastShippedOp=Fri Jun 12 18:49:23 BST 2020, SizeOfLogQueue=1, EditsReadFromLogQueue=1, OpsShippedToTarget=1, TimeStampOfNextToReplicate=Fri Jun 12 18:49:23 BST 2020, Replication Lag=0\n+      SINK: TimeStampStarted=1591983663458, AgeOfLastAppliedOp=0, TimeStampsOfLastAppliedOp=Fri Jun 12 18:57:18 BST 2020", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzOTU0Mg=="}, "originalCommit": {"oid": "f6610602513738a1ea9f6dc89660e202f52120dc"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2979, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}