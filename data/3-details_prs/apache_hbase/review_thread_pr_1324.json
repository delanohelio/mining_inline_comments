{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMTg3Nzky", "number": 1324, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMjowNjoxMlrODqnpiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMjowNjoxMlrODqnpiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDE2MzkyOnYy", "diffSide": "RIGHT", "path": "hbase-rsgroup/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMjowNjoxMlrOF6enMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMjozMzoyMFrOF6fBAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2MzI4Mg==", "bodyText": "format the comment into two line?", "url": "https://github.com/apache/hbase/pull/1324#discussion_r396863282", "createdAt": "2020-03-24T02:06:12Z", "author": {"login": "binlijin"}, "path": "hbase-rsgroup/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java", "diffHunk": "@@ -110,50 +108,46 @@ public void setMasterServices(MasterServices masterServices) {\n     this.masterServices = masterServices;\n   }\n \n+  /**\n+   * Override to balance by RSGroup\n+   * not invoke {@link #balanceTable(TableName, Map)}\n+   */\n   @Override\n-  public List<RegionPlan> balanceCluster(TableName tableName, Map<ServerName, List<RegionInfo>>\n-      clusterState) throws HBaseIOException {\n-    return balanceCluster(clusterState);\n-  }\n-\n-  @Override\n-  public List<RegionPlan> balanceCluster(Map<ServerName, List<RegionInfo>> clusterState)\n-      throws HBaseIOException {\n+  public List<RegionPlan> balanceCluster(\n+      Map<TableName, Map<ServerName, List<RegionInfo>>> loadOfAllTable) throws IOException {\n     if (!isOnline()) {\n       throw new ConstraintException(RSGroupInfoManager.RSGROUP_TABLE_NAME +\n           \" is not online, unable to perform balance\");\n     }\n-\n-    Map<ServerName,List<RegionInfo>> correctedState = correctAssignments(clusterState);\n-    List<RegionPlan> regionPlans = new ArrayList<>();\n-\n-    List<RegionInfo> misplacedRegions = correctedState.get(LoadBalancer.BOGUS_SERVER_NAME);\n-    for (RegionInfo regionInfo : misplacedRegions) {\n-      ServerName serverName = findServerForRegion(clusterState, regionInfo);\n-      regionPlans.add(new RegionPlan(regionInfo, serverName, null));\n-    }\n+    // Calculate correct assignments and a list of RegionPlan for mis-placed regions\n+    Pair<Map<TableName, Map<ServerName, List<RegionInfo>>>, List<RegionPlan>>\n+      correctedStateAndRegionPlans = correctAssignments(loadOfAllTable);\n+    Map<TableName, Map<ServerName, List<RegionInfo>>> correctedLoadOfAllTable =\n+        correctedStateAndRegionPlans.getFirst();\n+    List<RegionPlan> regionPlans = correctedStateAndRegionPlans.getSecond();\n+    // Add RegionPlan", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8be5953971f19fa9cefe692c2b61277ec0de7a23"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2OTIzMQ==", "bodyText": "ok, I format it", "url": "https://github.com/apache/hbase/pull/1324#discussion_r396869231", "createdAt": "2020-03-24T02:30:40Z", "author": {"login": "nyl3532016"}, "path": "hbase-rsgroup/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java", "diffHunk": "@@ -110,50 +108,46 @@ public void setMasterServices(MasterServices masterServices) {\n     this.masterServices = masterServices;\n   }\n \n+  /**\n+   * Override to balance by RSGroup\n+   * not invoke {@link #balanceTable(TableName, Map)}\n+   */\n   @Override\n-  public List<RegionPlan> balanceCluster(TableName tableName, Map<ServerName, List<RegionInfo>>\n-      clusterState) throws HBaseIOException {\n-    return balanceCluster(clusterState);\n-  }\n-\n-  @Override\n-  public List<RegionPlan> balanceCluster(Map<ServerName, List<RegionInfo>> clusterState)\n-      throws HBaseIOException {\n+  public List<RegionPlan> balanceCluster(\n+      Map<TableName, Map<ServerName, List<RegionInfo>>> loadOfAllTable) throws IOException {\n     if (!isOnline()) {\n       throw new ConstraintException(RSGroupInfoManager.RSGROUP_TABLE_NAME +\n           \" is not online, unable to perform balance\");\n     }\n-\n-    Map<ServerName,List<RegionInfo>> correctedState = correctAssignments(clusterState);\n-    List<RegionPlan> regionPlans = new ArrayList<>();\n-\n-    List<RegionInfo> misplacedRegions = correctedState.get(LoadBalancer.BOGUS_SERVER_NAME);\n-    for (RegionInfo regionInfo : misplacedRegions) {\n-      ServerName serverName = findServerForRegion(clusterState, regionInfo);\n-      regionPlans.add(new RegionPlan(regionInfo, serverName, null));\n-    }\n+    // Calculate correct assignments and a list of RegionPlan for mis-placed regions\n+    Pair<Map<TableName, Map<ServerName, List<RegionInfo>>>, List<RegionPlan>>\n+      correctedStateAndRegionPlans = correctAssignments(loadOfAllTable);\n+    Map<TableName, Map<ServerName, List<RegionInfo>>> correctedLoadOfAllTable =\n+        correctedStateAndRegionPlans.getFirst();\n+    List<RegionPlan> regionPlans = correctedStateAndRegionPlans.getSecond();\n+    // Add RegionPlan", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2MzI4Mg=="}, "originalCommit": {"oid": "8be5953971f19fa9cefe692c2b61277ec0de7a23"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2OTg4OA==", "bodyText": "see TestRSGroupBasedLoadBalancer#testBalanceCluster , we add test for rsgroup with bytable", "url": "https://github.com/apache/hbase/pull/1324#discussion_r396869888", "createdAt": "2020-03-24T02:33:20Z", "author": {"login": "nyl3532016"}, "path": "hbase-rsgroup/src/main/java/org/apache/hadoop/hbase/rsgroup/RSGroupBasedLoadBalancer.java", "diffHunk": "@@ -110,50 +108,46 @@ public void setMasterServices(MasterServices masterServices) {\n     this.masterServices = masterServices;\n   }\n \n+  /**\n+   * Override to balance by RSGroup\n+   * not invoke {@link #balanceTable(TableName, Map)}\n+   */\n   @Override\n-  public List<RegionPlan> balanceCluster(TableName tableName, Map<ServerName, List<RegionInfo>>\n-      clusterState) throws HBaseIOException {\n-    return balanceCluster(clusterState);\n-  }\n-\n-  @Override\n-  public List<RegionPlan> balanceCluster(Map<ServerName, List<RegionInfo>> clusterState)\n-      throws HBaseIOException {\n+  public List<RegionPlan> balanceCluster(\n+      Map<TableName, Map<ServerName, List<RegionInfo>>> loadOfAllTable) throws IOException {\n     if (!isOnline()) {\n       throw new ConstraintException(RSGroupInfoManager.RSGROUP_TABLE_NAME +\n           \" is not online, unable to perform balance\");\n     }\n-\n-    Map<ServerName,List<RegionInfo>> correctedState = correctAssignments(clusterState);\n-    List<RegionPlan> regionPlans = new ArrayList<>();\n-\n-    List<RegionInfo> misplacedRegions = correctedState.get(LoadBalancer.BOGUS_SERVER_NAME);\n-    for (RegionInfo regionInfo : misplacedRegions) {\n-      ServerName serverName = findServerForRegion(clusterState, regionInfo);\n-      regionPlans.add(new RegionPlan(regionInfo, serverName, null));\n-    }\n+    // Calculate correct assignments and a list of RegionPlan for mis-placed regions\n+    Pair<Map<TableName, Map<ServerName, List<RegionInfo>>>, List<RegionPlan>>\n+      correctedStateAndRegionPlans = correctAssignments(loadOfAllTable);\n+    Map<TableName, Map<ServerName, List<RegionInfo>>> correctedLoadOfAllTable =\n+        correctedStateAndRegionPlans.getFirst();\n+    List<RegionPlan> regionPlans = correctedStateAndRegionPlans.getSecond();\n+    // Add RegionPlan", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njg2MzI4Mg=="}, "originalCommit": {"oid": "8be5953971f19fa9cefe692c2b61277ec0de7a23"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1934, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}