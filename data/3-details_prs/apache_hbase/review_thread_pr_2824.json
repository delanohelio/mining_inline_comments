{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2Mjk0OTc0", "number": 2824, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzo1MTozN1rOFJtM-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQxNDo1NDozNlrOFKevsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NzIyMTA0OnYy", "diffSide": "RIGHT", "path": "hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNzo1MTozN1rOIMJNoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQxMjoyMjowMFrOIMOEnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYwNDc2OQ==", "bodyText": "Should we abort for all exception or only for OOM?", "url": "https://github.com/apache/hbase/pull/2824#discussion_r549604769", "createdAt": "2020-12-29T07:51:37Z", "author": {"login": "pankaj72981"}, "path": "hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java", "diffHunk": "@@ -306,15 +315,22 @@ public TimeoutExecutorThread() {\n     @Override\n     public void run() {\n       while (running.get()) {\n-        final DelayedWithTimeout task = DelayedUtil.takeWithoutInterrupt(queue);\n-        if (task == null || task == DelayedUtil.DELAYED_POISON) {\n-          // the executor may be shutting down, and the task is just the shutdown request\n-          continue;\n-        }\n-        if (task instanceof DelayedTask) {\n-          threadPool.execute(((DelayedTask) task).getObject());\n-        } else {\n-          ((BufferNode) task).dispatch();\n+        try {\n+          final DelayedWithTimeout task = DelayedUtil.takeWithoutInterrupt(queue);\n+          if (task == null || task == DelayedUtil.DELAYED_POISON) {\n+            // the executor may be shutting down, and the task is just the shutdown request\n+            continue;\n+          }\n+          if (task instanceof DelayedTask) {\n+            threadPool.execute(((DelayedTask) task).getObject());\n+          } else {\n+            ((BufferNode) task).dispatch();\n+          }\n+        } catch (Throwable e) {\n+          LOG.error(\"Caught error\", e);\n+          if (timeoutExecutorError != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "801c359896e4719ca151b40fe9cf4908fb69c9ba"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTY4NDM4MQ==", "bodyText": "yes. whatever the exception, the thread exits...", "url": "https://github.com/apache/hbase/pull/2824#discussion_r549684381", "createdAt": "2020-12-29T12:22:00Z", "author": {"login": "cuibo01"}, "path": "hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java", "diffHunk": "@@ -306,15 +315,22 @@ public TimeoutExecutorThread() {\n     @Override\n     public void run() {\n       while (running.get()) {\n-        final DelayedWithTimeout task = DelayedUtil.takeWithoutInterrupt(queue);\n-        if (task == null || task == DelayedUtil.DELAYED_POISON) {\n-          // the executor may be shutting down, and the task is just the shutdown request\n-          continue;\n-        }\n-        if (task instanceof DelayedTask) {\n-          threadPool.execute(((DelayedTask) task).getObject());\n-        } else {\n-          ((BufferNode) task).dispatch();\n+        try {\n+          final DelayedWithTimeout task = DelayedUtil.takeWithoutInterrupt(queue);\n+          if (task == null || task == DelayedUtil.DELAYED_POISON) {\n+            // the executor may be shutting down, and the task is just the shutdown request\n+            continue;\n+          }\n+          if (task instanceof DelayedTask) {\n+            threadPool.execute(((DelayedTask) task).getObject());\n+          } else {\n+            ((BufferNode) task).dispatch();\n+          }\n+        } catch (Throwable e) {\n+          LOG.error(\"Caught error\", e);\n+          if (timeoutExecutorError != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTYwNDc2OQ=="}, "originalCommit": {"oid": "801c359896e4719ca151b40fe9cf4908fb69c9ba"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ2NTMzODA4OnYy", "diffSide": "RIGHT", "path": "hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQxNDo1NDozNlrOINQrhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wMVQxNDo1NDozNlrOINQrhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDc3NTY4Ng==", "bodyText": "Better name it something else? Like setTimeoutExecutorUncaughtExceptionHandler? As we have a method all getUncaugtExceptionHandler in this class, for getting uncaughtExceptionHandler for the thread pool.", "url": "https://github.com/apache/hbase/pull/2824#discussion_r550775686", "createdAt": "2021-01-01T14:54:36Z", "author": {"login": "Apache9"}, "path": "hbase-procedure/src/main/java/org/apache/hadoop/hbase/procedure2/RemoteProcedureDispatcher.java", "diffHunk": "@@ -106,6 +106,10 @@ public boolean start() {\n     return true;\n   }\n \n+  protected void setUncaughtExceptionHandler(UncaughtExceptionHandler eh) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eefa73d10f7c448e985f03715f6ad9bf2c10fa3"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2280, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}