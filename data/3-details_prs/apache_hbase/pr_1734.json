{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5Njk0OTE1", "number": 1734, "title": "HBASE-24376 MergeNormalizer is merging non-adjacent regions and causi\u2026", "bodyText": "\u2026ng region overlaps/holes.", "createdAt": "2020-05-18T19:22:05Z", "url": "https://github.com/apache/hbase/pull/1734", "merged": true, "mergeCommit": {"oid": "80b64ef4dc5088d825714bc66eb8dbbc1b99735f"}, "closed": true, "closedAt": "2020-05-21T17:08:44Z", "author": {"login": "huaxiangsun"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABciliAGABqjMzNDg5MTM3NjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjRa9iAFqTQxNTc3NTg3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "625b6cfdcb344e72e15530295dcd6d07968c419a", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/625b6cfdcb344e72e15530295dcd6d07968c419a", "committedDate": "2020-05-18T19:21:17Z", "message": "HBASE-24376 MergeNormalizer is merging non-adjacent regions and causing region overlaps/holes."}, "afterCommit": {"oid": "056fcbbb48d6eb96af5bd8e6e2abc9290ed10e1a", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/056fcbbb48d6eb96af5bd8e6e2abc9290ed10e1a", "committedDate": "2020-05-18T20:02:55Z", "message": "HBASE-24376 MergeNormalizer is merging non-adjacent regions and causing region overlaps/holes."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "056fcbbb48d6eb96af5bd8e6e2abc9290ed10e1a", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/056fcbbb48d6eb96af5bd8e6e2abc9290ed10e1a", "committedDate": "2020-05-18T20:02:55Z", "message": "HBASE-24376 MergeNormalizer is merging non-adjacent regions and causing region overlaps/holes."}, "afterCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/2a22c5e7006527ded9269b16e168733643a52f4c", "committedDate": "2020-05-18T20:34:01Z", "message": "HBASE-24376 MergeNormalizer is merging non-adjacent regions and causing region overlaps/holes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTQ4NDMw", "url": "https://github.com/apache/hbase/pull/1734#pullrequestreview-413948430", "createdAt": "2020-05-18T21:23:04Z", "commit": {"oid": "056fcbbb48d6eb96af5bd8e6e2abc9290ed10e1a"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMToyMzoyMFrOGXH86A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMToyMzozMFrOGXH9Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMDcxMg==", "bodyText": "Duh", "url": "https://github.com/apache/hbase/pull/1734#discussion_r426900712", "createdAt": "2020-05-18T21:23:20Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/AbstractRegionNormalizer.java", "diffHunk": "@@ -170,6 +170,8 @@ private static boolean skipForMerge(final RegionState state) {\n         + \"number of regions: {}\",\n       table, avgRegionSize, table, tableRegions.size());\n \n+    // Sorting based on RegionInfo.COMPARATOR.\n+    tableRegions.sort(RegionInfo.COMPARATOR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMDc5NQ==", "bodyText": "Great", "url": "https://github.com/apache/hbase/pull/1734#discussion_r426900795", "createdAt": "2020-05-18T21:23:30Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan.java", "diffHunk": "@@ -69,8 +69,11 @@ public String toString() {\n   public void execute(Admin admin) {\n     LOG.info(\"Executing merging normalization plan: \" + this);\n     try {\n+      // Do not use force=true as corner cases can happen, non adjacent regions,\n+      // merge with a merged child region with no GC done yet, it is going to\n+      // cause all different issues.\n       admin.mergeRegionsAsync(firstRegion.getEncodedNameAsBytes(),\n-        secondRegion.getEncodedNameAsBytes(), true);\n+        secondRegion.getEncodedNameAsBytes(), false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTUzODk5", "url": "https://github.com/apache/hbase/pull/1734#pullrequestreview-413953899", "createdAt": "2020-05-18T21:32:46Z", "commit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMTozMjo0NlrOGXINGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMTozMzoyMFrOGXIOHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwNDg1OA==", "bodyText": "Can you please add the missing Javadoc?", "url": "https://github.com/apache/hbase/pull/1734#discussion_r426904858", "createdAt": "2020-05-18T21:32:46Z", "author": {"login": "HorizonNet"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java", "diffHunk": "@@ -1519,6 +1519,17 @@ public Table createMultiRegionTable(TableName tableName, byte[][] families) thro\n     return createTable(tableName, families, KEYS_FOR_HBA_CREATE_TABLE);\n   }\n \n+  /**\n+   * Create a table with multiple regions.\n+   * @param tableName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwNTExNg==", "bodyText": "What deprecations are needed here?", "url": "https://github.com/apache/hbase/pull/1734#discussion_r426905116", "createdAt": "2020-05-18T21:33:20Z", "author": {"login": "HorizonNet"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizerOnCluster.java", "diffHunk": "@@ -179,6 +182,71 @@ void testRegionNormalizationSplitOnCluster(boolean limitedByQuota) throws Except\n     admin.deleteTable(TABLENAME);\n   }\n \n+  // This test is to make sure that normalizer is only going to merge adjacent regions.\n+  @Test\n+  @SuppressWarnings(\"deprecation\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTY3MzQ2", "url": "https://github.com/apache/hbase/pull/1734#pullrequestreview-413967346", "createdAt": "2020-05-18T21:59:07Z", "commit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMTo1OTowN1rOGXI3MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjowNjo1MlrOGXJCdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNTYzMw==", "bodyText": "This should be unnecessary. Why does the AssignmentManager not provide them in sorted order? I guess it doesn't hurt anything to check.. just seems redundant.", "url": "https://github.com/apache/hbase/pull/1734#discussion_r426915633", "createdAt": "2020-05-18T21:59:07Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/AbstractRegionNormalizer.java", "diffHunk": "@@ -170,6 +170,8 @@ private static boolean skipForMerge(final RegionState state) {\n         + \"number of regions: {}\",\n       table, avgRegionSize, table, tableRegions.size());\n \n+    // Sorting based on RegionInfo.COMPARATOR.\n+    tableRegions.sort(RegionInfo.COMPARATOR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjMwMw==", "bodyText": "This method does nothing at all. Is it necessary? Does it help code readability so much that it's worth adding?", "url": "https://github.com/apache/hbase/pull/1734#discussion_r426916303", "createdAt": "2020-05-18T22:00:53Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/HBaseTestingUtility.java", "diffHunk": "@@ -1519,6 +1519,17 @@ public Table createMultiRegionTable(TableName tableName, byte[][] families) thro\n     return createTable(tableName, families, KEYS_FOR_HBA_CREATE_TABLE);\n   }\n \n+  /**\n+   * Create a table with multiple regions.\n+   * @param tableName\n+   * @param families\n+   * @return A Table instance for the created table.\n+   * @throws IOException\n+   */\n+  public Table createMultiRegionTable(TableName tableName, byte[][] families, final byte[][]  keys) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjk2Mg==", "bodyText": "Is there a condition you can waitFor instead of a fixed sleep? These fixed sleeps lead to slow and flakey tests :(", "url": "https://github.com/apache/hbase/pull/1734#discussion_r426916962", "createdAt": "2020-05-18T22:02:42Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizerOnCluster.java", "diffHunk": "@@ -179,6 +182,71 @@ void testRegionNormalizationSplitOnCluster(boolean limitedByQuota) throws Except\n     admin.deleteTable(TABLENAME);\n   }\n \n+  // This test is to make sure that normalizer is only going to merge adjacent regions.\n+  @Test\n+  @SuppressWarnings(\"deprecation\")\n+  public void testNormalizerCannotMergeNonAdjacentRegions() throws Exception {\n+    final TableName tableName = TableName.valueOf(name.getMethodName());\n+    MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n+    HMaster m = cluster.getMaster();\n+\n+    // create 5 regions with sizes to trigger merge of small regions\n+    final byte[][] keys = {\n+      Bytes.toBytes(\"aa\"),\n+      Bytes.toBytes(\"aa1\"),\n+      Bytes.toBytes(\"aa1!\"),\n+      Bytes.toBytes(\"aa2\")\n+    };\n+\n+    try (Table ht = TEST_UTIL.createMultiRegionTable(tableName, new byte[][]{FAMILYNAME}, keys)) {\n+      // Need to get sorted list of regions here, the order is\n+      // [, \"aa\"), [\"aa\", \"aa1\"), [\"aa1\", \"aa1!\"), [\"aa1!\", \"aa2\"), [\"aa2\", )\n+      List<HRegion> generatedRegions = TEST_UTIL.getHBaseCluster().getRegions(tableName);\n+      Collections.sort(generatedRegions, Comparator.comparing(HRegion::getRegionInfo, RegionInfo.COMPARATOR));\n+\n+      // Region [\"aa\", \"aa1\") and [\"aa1!\", \"aa2\") are not adjacent, they are not supposed to\n+      // merged.\n+      HRegion region = generatedRegions.get(0);\n+      generateTestData(region, 3);\n+      region.flush(true);\n+\n+      region = generatedRegions.get(1);\n+      generateTestData(region, 1);\n+      region.flush(true);\n+\n+      region = generatedRegions.get(2);\n+      generateTestData(region, 3);\n+      region.flush(true);\n+\n+      region = generatedRegions.get(3);\n+      generateTestData(region, 1);\n+      region.flush(true);\n+\n+      region = generatedRegions.get(4);\n+      generateTestData(region, 5);\n+      region.flush(true);\n+\n+      ModifyableTableDescriptor htd = new ModifyableTableDescriptor(tableName,\n+        admin.getDescriptor(tableName));\n+\n+      htd.setNormalizationEnabled(true);\n+      admin.modifyTable(htd);\n+\n+      admin.flush(tableName);\n+\n+      assertEquals(5, MetaTableAccessor.getRegionCount(TEST_UTIL.getConnection(), tableName));\n+\n+      Thread.sleep(5000); // to let region load to update", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNzE1NA==", "bodyText": "I think this should be wrapped in if admin.exists(tableName), otherwise flakey test.", "url": "https://github.com/apache/hbase/pull/1734#discussion_r426917154", "createdAt": "2020-05-18T22:03:15Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizerOnCluster.java", "diffHunk": "@@ -179,6 +182,71 @@ void testRegionNormalizationSplitOnCluster(boolean limitedByQuota) throws Except\n     admin.deleteTable(TABLENAME);\n   }\n \n+  // This test is to make sure that normalizer is only going to merge adjacent regions.\n+  @Test\n+  @SuppressWarnings(\"deprecation\")\n+  public void testNormalizerCannotMergeNonAdjacentRegions() throws Exception {\n+    final TableName tableName = TableName.valueOf(name.getMethodName());\n+    MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n+    HMaster m = cluster.getMaster();\n+\n+    // create 5 regions with sizes to trigger merge of small regions\n+    final byte[][] keys = {\n+      Bytes.toBytes(\"aa\"),\n+      Bytes.toBytes(\"aa1\"),\n+      Bytes.toBytes(\"aa1!\"),\n+      Bytes.toBytes(\"aa2\")\n+    };\n+\n+    try (Table ht = TEST_UTIL.createMultiRegionTable(tableName, new byte[][]{FAMILYNAME}, keys)) {\n+      // Need to get sorted list of regions here, the order is\n+      // [, \"aa\"), [\"aa\", \"aa1\"), [\"aa1\", \"aa1!\"), [\"aa1!\", \"aa2\"), [\"aa2\", )\n+      List<HRegion> generatedRegions = TEST_UTIL.getHBaseCluster().getRegions(tableName);\n+      Collections.sort(generatedRegions, Comparator.comparing(HRegion::getRegionInfo, RegionInfo.COMPARATOR));\n+\n+      // Region [\"aa\", \"aa1\") and [\"aa1!\", \"aa2\") are not adjacent, they are not supposed to\n+      // merged.\n+      HRegion region = generatedRegions.get(0);\n+      generateTestData(region, 3);\n+      region.flush(true);\n+\n+      region = generatedRegions.get(1);\n+      generateTestData(region, 1);\n+      region.flush(true);\n+\n+      region = generatedRegions.get(2);\n+      generateTestData(region, 3);\n+      region.flush(true);\n+\n+      region = generatedRegions.get(3);\n+      generateTestData(region, 1);\n+      region.flush(true);\n+\n+      region = generatedRegions.get(4);\n+      generateTestData(region, 5);\n+      region.flush(true);\n+\n+      ModifyableTableDescriptor htd = new ModifyableTableDescriptor(tableName,\n+        admin.getDescriptor(tableName));\n+\n+      htd.setNormalizationEnabled(true);\n+      admin.modifyTable(htd);\n+\n+      admin.flush(tableName);\n+\n+      assertEquals(5, MetaTableAccessor.getRegionCount(TEST_UTIL.getConnection(), tableName));\n+\n+      Thread.sleep(5000); // to let region load to update\n+\n+      // Compute the plan, no merge plan returned as they are not adjacent.\n+      final List<NormalizationPlan> plans = m.getRegionNormalizer().computePlanForTable(tableName);\n+      assertNull(plans);\n+    } finally {\n+      admin.disableTable(tableName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxODUxOQ==", "bodyText": "There's a new API you can use instead of this deprecated one. I think you want something like\n    final TableDescriptor td = TableDescriptorBuilder\n      .newBuilder(admin.getDescriptor(TABLENAME))\n      .setNormalizationEnabled(true)\n      .build();\n    admin.modifyTable(td);", "url": "https://github.com/apache/hbase/pull/1734#discussion_r426918519", "createdAt": "2020-05-18T22:06:52Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizerOnCluster.java", "diffHunk": "@@ -179,6 +182,71 @@ void testRegionNormalizationSplitOnCluster(boolean limitedByQuota) throws Except\n     admin.deleteTable(TABLENAME);\n   }\n \n+  // This test is to make sure that normalizer is only going to merge adjacent regions.\n+  @Test\n+  @SuppressWarnings(\"deprecation\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwNTExNg=="}, "originalCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "originalPosition": 25}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/2a22c5e7006527ded9269b16e168733643a52f4c", "committedDate": "2020-05-18T20:34:01Z", "message": "HBASE-24376 MergeNormalizer is merging non-adjacent regions and causing region overlaps/holes."}, "afterCommit": {"oid": "6834afd4b7aa9aa4571c332c12ae6bb316840c73", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/6834afd4b7aa9aa4571c332c12ae6bb316840c73", "committedDate": "2020-05-19T00:00:45Z", "message": "HBASE-24376 MergeNormalizer is merging non-adjacent regions and causing region overlaps/holes."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6834afd4b7aa9aa4571c332c12ae6bb316840c73", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/6834afd4b7aa9aa4571c332c12ae6bb316840c73", "committedDate": "2020-05-19T00:00:45Z", "message": "HBASE-24376 MergeNormalizer is merging non-adjacent regions and causing region overlaps/holes."}, "afterCommit": {"oid": "5bc4aec00a8870d56cc70ec5d17537a3e8033610", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/5bc4aec00a8870d56cc70ec5d17537a3e8033610", "committedDate": "2020-05-19T00:05:13Z", "message": "HBASE-24376 MergeNormalizer is merging non-adjacent regions and causing region overlaps/holes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MzYwMTkx", "url": "https://github.com/apache/hbase/pull/1734#pullrequestreview-414360191", "createdAt": "2020-05-19T11:41:37Z", "commit": {"oid": "5bc4aec00a8870d56cc70ec5d17537a3e8033610"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTo0MTozN1rOGXcaMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTo0MzowOVrOGXcdjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzNTg5MA==", "bodyText": "Wondering if this is the only change required.", "url": "https://github.com/apache/hbase/pull/1734#discussion_r427235890", "createdAt": "2020-05-19T11:41:37Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan.java", "diffHunk": "@@ -69,8 +69,11 @@ public String toString() {\n   public void execute(Admin admin) {\n     LOG.info(\"Executing merging normalization plan: \" + this);\n     try {\n+      // Do not use force=true as corner cases can happen, non adjacent regions,\n+      // merge with a merged child region with no GC done yet, it is going to\n+      // cause all different issues.\n       admin.mergeRegionsAsync(firstRegion.getEncodedNameAsBytes(),\n-        secondRegion.getEncodedNameAsBytes(), true);\n+        secondRegion.getEncodedNameAsBytes(), false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMDc5NQ=="}, "originalCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzNjc1MQ==", "bodyText": "Maybe we can do manual server metrics update followed by sleep and then assert null plan?", "url": "https://github.com/apache/hbase/pull/1734#discussion_r427236751", "createdAt": "2020-05-19T11:43:09Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/master/normalizer/TestSimpleRegionNormalizerOnCluster.java", "diffHunk": "@@ -179,6 +182,71 @@ void testRegionNormalizationSplitOnCluster(boolean limitedByQuota) throws Except\n     admin.deleteTable(TABLENAME);\n   }\n \n+  // This test is to make sure that normalizer is only going to merge adjacent regions.\n+  @Test\n+  @SuppressWarnings(\"deprecation\")\n+  public void testNormalizerCannotMergeNonAdjacentRegions() throws Exception {\n+    final TableName tableName = TableName.valueOf(name.getMethodName());\n+    MiniHBaseCluster cluster = TEST_UTIL.getHBaseCluster();\n+    HMaster m = cluster.getMaster();\n+\n+    // create 5 regions with sizes to trigger merge of small regions\n+    final byte[][] keys = {\n+      Bytes.toBytes(\"aa\"),\n+      Bytes.toBytes(\"aa1\"),\n+      Bytes.toBytes(\"aa1!\"),\n+      Bytes.toBytes(\"aa2\")\n+    };\n+\n+    try (Table ht = TEST_UTIL.createMultiRegionTable(tableName, new byte[][]{FAMILYNAME}, keys)) {\n+      // Need to get sorted list of regions here, the order is\n+      // [, \"aa\"), [\"aa\", \"aa1\"), [\"aa1\", \"aa1!\"), [\"aa1!\", \"aa2\"), [\"aa2\", )\n+      List<HRegion> generatedRegions = TEST_UTIL.getHBaseCluster().getRegions(tableName);\n+      Collections.sort(generatedRegions, Comparator.comparing(HRegion::getRegionInfo, RegionInfo.COMPARATOR));\n+\n+      // Region [\"aa\", \"aa1\") and [\"aa1!\", \"aa2\") are not adjacent, they are not supposed to\n+      // merged.\n+      HRegion region = generatedRegions.get(0);\n+      generateTestData(region, 3);\n+      region.flush(true);\n+\n+      region = generatedRegions.get(1);\n+      generateTestData(region, 1);\n+      region.flush(true);\n+\n+      region = generatedRegions.get(2);\n+      generateTestData(region, 3);\n+      region.flush(true);\n+\n+      region = generatedRegions.get(3);\n+      generateTestData(region, 1);\n+      region.flush(true);\n+\n+      region = generatedRegions.get(4);\n+      generateTestData(region, 5);\n+      region.flush(true);\n+\n+      ModifyableTableDescriptor htd = new ModifyableTableDescriptor(tableName,\n+        admin.getDescriptor(tableName));\n+\n+      htd.setNormalizationEnabled(true);\n+      admin.modifyTable(htd);\n+\n+      admin.flush(tableName);\n+\n+      assertEquals(5, MetaTableAccessor.getRegionCount(TEST_UTIL.getConnection(), tableName));\n+\n+      Thread.sleep(5000); // to let region load to update", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNjk2Mg=="}, "originalCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTUwMTkx", "url": "https://github.com/apache/hbase/pull/1734#pullrequestreview-414550191", "createdAt": "2020-05-19T15:12:21Z", "commit": {"oid": "5bc4aec00a8870d56cc70ec5d17537a3e8033610"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxMjoyMVrOGXlTmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNToxMjoyMVrOGXlTmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM4MTY1OQ==", "bodyText": "Okk I just saw the conversation on why tableRegions.sort(RegionInfo.COMPARATOR) is required.", "url": "https://github.com/apache/hbase/pull/1734#discussion_r427381659", "createdAt": "2020-05-19T15:12:21Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/MergeNormalizationPlan.java", "diffHunk": "@@ -69,8 +69,11 @@ public String toString() {\n   public void execute(Admin admin) {\n     LOG.info(\"Executing merging normalization plan: \" + this);\n     try {\n+      // Do not use force=true as corner cases can happen, non adjacent regions,\n+      // merge with a merged child region with no GC done yet, it is going to\n+      // cause all different issues.\n       admin.mergeRegionsAsync(firstRegion.getEncodedNameAsBytes(),\n-        secondRegion.getEncodedNameAsBytes(), true);\n+        secondRegion.getEncodedNameAsBytes(), false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMDc5NQ=="}, "originalCommit": {"oid": "2a22c5e7006527ded9269b16e168733643a52f4c"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d78ebf2d4316f2c95489dfbe4caf433c507bba0", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/0d78ebf2d4316f2c95489dfbe4caf433c507bba0", "committedDate": "2020-05-19T20:58:03Z", "message": "HBASE-24376 MergeNormalizer is merging non-adjacent regions and causing region overlaps/holes."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5bc4aec00a8870d56cc70ec5d17537a3e8033610", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/5bc4aec00a8870d56cc70ec5d17537a3e8033610", "committedDate": "2020-05-19T00:05:13Z", "message": "HBASE-24376 MergeNormalizer is merging non-adjacent regions and causing region overlaps/holes."}, "afterCommit": {"oid": "0d78ebf2d4316f2c95489dfbe4caf433c507bba0", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/0d78ebf2d4316f2c95489dfbe4caf433c507bba0", "committedDate": "2020-05-19T20:58:03Z", "message": "HBASE-24376 MergeNormalizer is merging non-adjacent regions and causing region overlaps/holes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NzU2NjM2", "url": "https://github.com/apache/hbase/pull/1734#pullrequestreview-415756636", "createdAt": "2020-05-20T22:24:39Z", "commit": {"oid": "0d78ebf2d4316f2c95489dfbe4caf433c507bba0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1Nzc1ODcy", "url": "https://github.com/apache/hbase/pull/1734#pullrequestreview-415775872", "createdAt": "2020-05-20T23:11:16Z", "commit": {"oid": "0d78ebf2d4316f2c95489dfbe4caf433c507bba0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4661, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}