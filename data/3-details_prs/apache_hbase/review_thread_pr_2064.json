{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NzYwMDI2", "number": 2064, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzoxMzowN1rOEO5xdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODoyOTowM1rOEW6QWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDYyMDcxOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzoxMzowN1rOGyUdHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzoxMzowN1rOGyUdHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxNzExNw==", "bodyText": "nit: method javadoc", "url": "https://github.com/apache/hbase/pull/2064#discussion_r455417117", "createdAt": "2020-07-15T23:13:07Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface.java", "diffHunk": "@@ -192,4 +188,8 @@ default boolean isSyncReplication() {\n   default boolean isRecovered() {\n     return false;\n   }\n+\n+  void logPosition(WALEntryBatch entryBatch);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41d7989bc53f6c8ad6b7429c0fb915183662d2c"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDYyMDk0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzoxMzoxN1rOGyUdQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzoxMzoxN1rOGyUdQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxNzE1NQ==", "bodyText": "nit: method javadoc", "url": "https://github.com/apache/hbase/pull/2064#discussion_r455417155", "createdAt": "2020-07-15T23:13:17Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceInterface.java", "diffHunk": "@@ -192,4 +188,8 @@ default boolean isSyncReplication() {\n   default boolean isRecovered() {\n     return false;\n   }\n+\n+  void logPosition(WALEntryBatch entryBatch);\n+\n+  void cleanOldLogs(String walName, boolean inclusive);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41d7989bc53f6c8ad6b7429c0fb915183662d2c"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDYzNDIzOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzoxOTowNlrOGyUk7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMTozODo1OFrOGyXBDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxOTExNw==", "bodyText": "You don't need the manager in the c'tor anymore?", "url": "https://github.com/apache/hbase/pull/2064#discussion_r455419117", "createdAt": "2020-07-15T23:19:06Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -139,17 +144,16 @@\n    * Instantiation method used by region servers\n    * @param conf configuration to use\n    * @param fs file system to use\n-   * @param manager replication manager to ping to\n    * @param server the server for this region server\n    * @param queueId the id of our replication queue\n    * @param clusterId unique UUID for the cluster\n    * @param metrics metrics for replication source\n    */\n   @Override\n-  public void init(Configuration conf, FileSystem fs, ReplicationSourceManager manager,\n+  public void init(Configuration conf, FileSystem fs, Path walDir, ReplicationSourceManager manager,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41d7989bc53f6c8ad6b7429c0fb915183662d2c"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ0ODI3NA==", "bodyText": "There are one typre ReplicationSource which called RecoveredReplicationSource, which replicate the WAL queues from a dead RegionServer. For RecoveredReplicationSource, the replication stream will finished when all WALs was replicated because the dead server cannot generate new WAL. Here need manager because RecoveredReplicationSource need to finish itself and clear the related reference from ReplicationSourceManager. When move to ReplicationServer future, need a ReplicationServer instead of this manager.", "url": "https://github.com/apache/hbase/pull/2064#discussion_r455448274", "createdAt": "2020-07-16T00:57:56Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -139,17 +144,16 @@\n    * Instantiation method used by region servers\n    * @param conf configuration to use\n    * @param fs file system to use\n-   * @param manager replication manager to ping to\n    * @param server the server for this region server\n    * @param queueId the id of our replication queue\n    * @param clusterId unique UUID for the cluster\n    * @param metrics metrics for replication source\n    */\n   @Override\n-  public void init(Configuration conf, FileSystem fs, ReplicationSourceManager manager,\n+  public void init(Configuration conf, FileSystem fs, Path walDir, ReplicationSourceManager manager,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxOTExNw=="}, "originalCommit": {"oid": "c41d7989bc53f6c8ad6b7429c0fb915183662d2c"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1OTA4NA==", "bodyText": "Oh, I see, didn't realize you didn't change the recovered source.", "url": "https://github.com/apache/hbase/pull/2064#discussion_r455459084", "createdAt": "2020-07-16T01:38:58Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -139,17 +144,16 @@\n    * Instantiation method used by region servers\n    * @param conf configuration to use\n    * @param fs file system to use\n-   * @param manager replication manager to ping to\n    * @param server the server for this region server\n    * @param queueId the id of our replication queue\n    * @param clusterId unique UUID for the cluster\n    * @param metrics metrics for replication source\n    */\n   @Override\n-  public void init(Configuration conf, FileSystem fs, ReplicationSourceManager manager,\n+  public void init(Configuration conf, FileSystem fs, Path walDir, ReplicationSourceManager manager,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxOTExNw=="}, "originalCommit": {"oid": "c41d7989bc53f6c8ad6b7429c0fb915183662d2c"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDYzNzE0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzoyMDoyNVrOGyUmjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzoyMDoyNVrOGyUmjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQxOTUzNQ==", "bodyText": "move this to the interface?", "url": "https://github.com/apache/hbase/pull/2064#discussion_r455419535", "createdAt": "2020-07-15T23:20:25Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -729,4 +728,143 @@ void removeWorker(ReplicationSourceShipper worker) {\n   private String logPeerId(){\n     return \"[Source for peer \" + this.getPeer().getId() + \"]:\";\n   }\n+\n+  @VisibleForTesting\n+  public void logPosition(WALEntryBatch entryBatch) {\n+    String fileName = entryBatch.getLastWalPath().getName();\n+    interruptOrAbortWhenFail(() -> this.queueStorage\n+      .setWALPosition(server.getServerName(), getQueueId(), fileName,\n+        entryBatch.getLastWalPosition(), entryBatch.getLastSeqIds()));\n+  }\n+\n+  /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41d7989bc53f6c8ad6b7429c0fb915183662d2c"}, "originalPosition": 149}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDY0MDc1OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzoyMTo1OVrOGyUojQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMTozOTo0M1rOGyXB0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyMDA0NQ==", "bodyText": "curious why this change?", "url": "https://github.com/apache/hbase/pull/2064#discussion_r455420045", "createdAt": "2020-07-15T23:21:59Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java", "diffHunk": "@@ -926,7 +799,8 @@ public void join() {\n    * @return list of all normal sources\n    */\n   public List<ReplicationSourceInterface> getSources() {\n-    return new ArrayList<>(this.sources.values());\n+    return this.sources.values().stream().filter(source -> source.isSourceActive())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41d7989bc53f6c8ad6b7429c0fb915183662d2c"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ0ODU4Ng==", "bodyText": "This is for the ut TestMasterReplication#testLoopedReplication. Will remove this after HBASE-24743.", "url": "https://github.com/apache/hbase/pull/2064#discussion_r455448586", "createdAt": "2020-07-16T00:59:07Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java", "diffHunk": "@@ -926,7 +799,8 @@ public void join() {\n    * @return list of all normal sources\n    */\n   public List<ReplicationSourceInterface> getSources() {\n-    return new ArrayList<>(this.sources.values());\n+    return this.sources.values().stream().filter(source -> source.isSourceActive())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyMDA0NQ=="}, "originalCommit": {"oid": "c41d7989bc53f6c8ad6b7429c0fb915183662d2c"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ1OTI4Mw==", "bodyText": "ok", "url": "https://github.com/apache/hbase/pull/2064#discussion_r455459283", "createdAt": "2020-07-16T01:39:43Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java", "diffHunk": "@@ -926,7 +799,8 @@ public void join() {\n    * @return list of all normal sources\n    */\n   public List<ReplicationSourceInterface> getSources() {\n-    return new ArrayList<>(this.sources.values());\n+    return this.sources.values().stream().filter(source -> source.isSourceActive())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyMDA0NQ=="}, "originalCommit": {"oid": "c41d7989bc53f6c8ad6b7429c0fb915183662d2c"}, "originalPosition": 186}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MDY0MjkyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/WALEntryBatch.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzoyMzowMVrOGyUpww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMzoyMzowMVrOGyUpww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQyMDM1NQ==", "bodyText": "I think this is not needed.", "url": "https://github.com/apache/hbase/pull/2064#discussion_r455420355", "createdAt": "2020-07-15T23:23:01Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/WALEntryBatch.java", "diffHunk": "@@ -30,8 +30,7 @@\n /**\n  * Holds a batch of WAL entries to replicate, along with some statistics\n  */\n-@InterfaceAudience.Private\n-class WALEntryBatch {\n+@InterfaceAudience.Private public class WALEntryBatch {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c41d7989bc53f6c8ad6b7429c0fb915183662d2c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDU3NTQyOnYy", "diffSide": "LEFT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODoyNTo0NVrOG-aRvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMTowOToyMFrOG-k4hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA5NTQyMw==", "bodyText": "Since we are cleaning out this extra, unnecessary variable, could we make \"this.manager\" package private (or provide a package private getter), so that source readers and source shippers don't have to define an additional reference to ReplicationSourceManager?", "url": "https://github.com/apache/hbase/pull/2064#discussion_r468095423", "createdAt": "2020-08-10T18:25:45Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -130,8 +137,6 @@\n   protected final ConcurrentHashMap<String, ReplicationSourceShipper> workerThreads =\n       new ConcurrentHashMap<>();\n \n-  private AtomicLong totalBufferUsed;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "027690e8712cd484ffafeeda4818c0a76bf6d2d7"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2OTE4OA==", "bodyText": "Good idea. Let me refator it. And after I rethink about this, the ReplicationSourceManager is still needed by ReplicationSource. But only need the getTotalBuffered/getTotalLimit/getGlobalMetrics now. Maybe introduce a new interface in the future.", "url": "https://github.com/apache/hbase/pull/2064#discussion_r468269188", "createdAt": "2020-08-11T01:09:20Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -130,8 +137,6 @@\n   protected final ConcurrentHashMap<String, ReplicationSourceShipper> workerThreads =\n       new ConcurrentHashMap<>();\n \n-  private AtomicLong totalBufferUsed;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA5NTQyMw=="}, "originalCommit": {"oid": "027690e8712cd484ffafeeda4818c0a76bf6d2d7"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDU3OTUyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODoyNzowM1rOG-aUQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODoyNzowM1rOG-aUQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA5NjA2NQ==", "bodyText": "Might not be needed if we make \"ReplicationSource.manager\" accessible (see my comments above).", "url": "https://github.com/apache/hbase/pull/2064#discussion_r468096065", "createdAt": "2020-08-10T18:27:03Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -398,10 +402,11 @@ protected ReplicationSourceShipper createNewShipper(String walGroupId,\n   }\n \n   private ReplicationSourceWALReader createNewWALReader(String walGroupId,\n-      PriorityBlockingQueue<Path> queue, long startPosition) {\n-    return replicationPeer.getPeerConfig().isSerial()\n-      ? new SerialReplicationSourceWALReader(fs, conf, queue, startPosition, walEntryFilter, this)\n-      : new ReplicationSourceWALReader(fs, conf, queue, startPosition, walEntryFilter, this);\n+    PriorityBlockingQueue<Path> queue, long startPosition) {\n+    return replicationPeer.getPeerConfig().isSerial() ?\n+      new SerialReplicationSourceWALReader(fs, conf, queue, startPosition, walEntryFilter, this,\n+        manager) :\n+      new ReplicationSourceWALReader(fs, conf, queue, startPosition, walEntryFilter, this, manager);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "027690e8712cd484ffafeeda4818c0a76bf6d2d7"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNDU4NTg0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODoyOTowM1rOG-aYQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwMDo1NzoxOVrOG-ksTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA5NzA5MQ==", "bodyText": "Better use IA.Private, instead. See: See: https://lists.apache.org/thread.html/r9a2df6a3b58e00c0c482d8660434d8ce6075863c18700978e6ea8b21%40%3Cdev.hbase.apache.org%3E", "url": "https://github.com/apache/hbase/pull/2064#discussion_r468097091", "createdAt": "2020-08-10T18:29:03Z", "author": {"login": "wchevreuil"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -770,4 +770,137 @@ void removeWorker(ReplicationSourceShipper worker) {\n   private String logPeerId(){\n     return \"[Source for peer \" + this.getPeer().getId() + \"]:\";\n   }\n+\n+  @VisibleForTesting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "027690e8712cd484ffafeeda4818c0a76bf6d2d7"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODI2NjA2MQ==", "bodyText": "Got it.", "url": "https://github.com/apache/hbase/pull/2064#discussion_r468266061", "createdAt": "2020-08-11T00:57:19Z", "author": {"login": "infraio"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java", "diffHunk": "@@ -770,4 +770,137 @@ void removeWorker(ReplicationSourceShipper worker) {\n   private String logPeerId(){\n     return \"[Source for peer \" + this.getPeer().getId() + \"]:\";\n   }\n+\n+  @VisibleForTesting", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA5NzA5MQ=="}, "originalCommit": {"oid": "027690e8712cd484ffafeeda4818c0a76bf6d2d7"}, "originalPosition": 107}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2792, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}