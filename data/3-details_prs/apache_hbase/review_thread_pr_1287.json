{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4MDgyODUy", "number": 1287, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMTozNTo0NVrODoBeiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMTozNTo0NVrODoBeiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMjkzODMzOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStates.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMTozNTo0NVrOF2XDMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQxMDoxMDo1OFrOF5otIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU0NTA3NQ==", "bodyText": "This is not correct, if there is no value yet putIfAbsent will returns null...\nAnd here I think we could add an assert, that putIfAbsent should always return null, and then return the node above.", "url": "https://github.com/apache/hbase/pull/1287#discussion_r392545075", "createdAt": "2020-03-14T01:35:45Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStates.java", "diffHunk": "@@ -130,8 +130,7 @@ RegionStateNode createRegionStateNode(RegionInfo regionInfo) {\n     synchronized (regionsMapLock) {\n       RegionStateNode node = regionsMap.computeIfAbsent(regionInfo.getRegionName(),\n         key -> new RegionStateNode(regionInfo, regionInTransition));\n-      encodedRegionsMap.putIfAbsent(regionInfo.getEncodedName(), node);\n-      return node;\n+      return encodedRegionsMap.putIfAbsent(regionInfo.getEncodedName(), node);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "802cd49896d1181fa8edd805eadb9068d2bc157f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDc0NTg5NA==", "bodyText": "How about using put rather than putIfAbsent?\nBecause the value of encodedRegionsMap must always be the same as the valuesMap.\nI used putIfAbsent because I didn't want to put it all the time when encodedRegionsMap already had a value.\nI think compare the value of encodedRegionsMap and node and it to put only when different.\nRegionStateNode node = regionsMap.computeIfAbsent(regionInfo.getRegionName(),\n  key -> new RegionStateNode(regionInfo, regionInTransition));\nif (encodedRegionsMap.get(regionInfo.getEncodedName()) != node) {\n  encodedRegionsMap.put(regionInfo.getEncodedName(), node);\n}\nreturn node;\nI'm sorry to bother you.", "url": "https://github.com/apache/hbase/pull/1287#discussion_r394745894", "createdAt": "2020-03-19T01:47:44Z", "author": {"login": "mwkang"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStates.java", "diffHunk": "@@ -130,8 +130,7 @@ RegionStateNode createRegionStateNode(RegionInfo regionInfo) {\n     synchronized (regionsMapLock) {\n       RegionStateNode node = regionsMap.computeIfAbsent(regionInfo.getRegionName(),\n         key -> new RegionStateNode(regionInfo, regionInTransition));\n-      encodedRegionsMap.putIfAbsent(regionInfo.getEncodedName(), node);\n-      return node;\n+      return encodedRegionsMap.putIfAbsent(regionInfo.getEncodedName(), node);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU0NTA3NQ=="}, "originalCommit": {"oid": "802cd49896d1181fa8edd805eadb9068d2bc157f"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk4MDA2NA==", "bodyText": "I'm fine with using put, as there is a lock here...", "url": "https://github.com/apache/hbase/pull/1287#discussion_r395980064", "createdAt": "2020-03-21T10:10:58Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/RegionStates.java", "diffHunk": "@@ -130,8 +130,7 @@ RegionStateNode createRegionStateNode(RegionInfo regionInfo) {\n     synchronized (regionsMapLock) {\n       RegionStateNode node = regionsMap.computeIfAbsent(regionInfo.getRegionName(),\n         key -> new RegionStateNode(regionInfo, regionInTransition));\n-      encodedRegionsMap.putIfAbsent(regionInfo.getEncodedName(), node);\n-      return node;\n+      return encodedRegionsMap.putIfAbsent(regionInfo.getEncodedName(), node);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU0NTA3NQ=="}, "originalCommit": {"oid": "802cd49896d1181fa8edd805eadb9068d2bc157f"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2010, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}