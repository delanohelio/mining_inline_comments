{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5ODg5MDUy", "number": 1441, "title": "HBASE-24120 Flakey Test: TestReplicationAdminWithClusters timeout", "bodyText": "When remove peer happens, it may interrupt ReplicationSourceShipper thread.\ninterruptOrAbortWhenFail will throw out a RunTimeException which is not handled\nand will abort Region Server. The solution is not to throw out a RunTimeException.", "createdAt": "2020-04-06T20:30:23Z", "url": "https://github.com/apache/hbase/pull/1441", "merged": true, "mergeCommit": {"oid": "ed830222dad50520f5957703cfc31cfc36edd05d"}, "closed": true, "closedAt": "2020-04-08T16:28:52Z", "author": {"login": "huaxiangsun"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVE3gCAFqTM4ODU5ODg0OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVhtpWgBqjMyMTI2Njg3NzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTk4ODQ4", "url": "https://github.com/apache/hbase/pull/1441#pullrequestreview-388598848", "createdAt": "2020-04-06T20:38:44Z", "commit": {"oid": "1c89328b2fa7128663877ce71ea34cf3aa690165"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NjUzMzU3", "url": "https://github.com/apache/hbase/pull/1441#pullrequestreview-388653357", "createdAt": "2020-04-06T22:09:02Z", "commit": {"oid": "1c89328b2fa7128663877ce71ea34cf3aa690165"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMjowOTowMlrOGBrvnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMjoxMDowN1rOGBrxQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQxODQ2Mw==", "bodyText": "You sure you don't want to propagate the InterruptedException? Looks like run loop in ReplicationSourceShipper is designed to handle that exception. return here would continue the thread executing, which I think is not what we want.", "url": "https://github.com/apache/hbase/pull/1441#discussion_r404418463", "createdAt": "2020-04-06T22:09:02Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java", "diffHunk": "@@ -579,8 +579,8 @@ private void interruptOrAbortWhenFail(ReplicationQueueOperation op) {\n       if (e.getCause() != null && e.getCause() instanceof KeeperException.SystemErrorException\n           && e.getCause().getCause() != null && e.getCause()\n           .getCause() instanceof InterruptedException) {\n-        throw new RuntimeException(\n-            \"Thread is interrupted, the replication source may be terminated\");\n+        LOG.info(\"Thread is interrupted, the replication source may be terminated\");\n+        return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c89328b2fa7128663877ce71ea34cf3aa690165"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQxODg4MQ==", "bodyText": "I tried rewriting this big nasty if-expression using an Optional. Tell me what you think\n      if (Optional.of(e.getCause())\n        .filter(c -> c instanceof KeeperException.SystemErrorException)\n        .map(c -> (KeeperException.SystemErrorException) c)\n        .map(Exception::getCause)\n        .filter(c -> c instanceof InterruptedException)\n        .isPresent()) {", "url": "https://github.com/apache/hbase/pull/1441#discussion_r404418881", "createdAt": "2020-04-06T22:10:07Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceManager.java", "diffHunk": "@@ -579,8 +579,8 @@ private void interruptOrAbortWhenFail(ReplicationQueueOperation op) {\n       if (e.getCause() != null && e.getCause() instanceof KeeperException.SystemErrorException", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c89328b2fa7128663877ce71ea34cf3aa690165"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NjkzMDU2", "url": "https://github.com/apache/hbase/pull/1441#pullrequestreview-388693056", "createdAt": "2020-04-06T23:44:32Z", "commit": {"oid": "1c89328b2fa7128663877ce71ea34cf3aa690165"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c89328b2fa7128663877ce71ea34cf3aa690165", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/1c89328b2fa7128663877ce71ea34cf3aa690165", "committedDate": "2020-04-06T20:28:05Z", "message": "HBASE-24120 Flakey Test: TestReplicationAdminWithClusters timeout\n\nWhen remove peer happens, it may interrupt ReplicationSourceShipper thread.\n\ninterruptOrAbortWhenFail will throw out a RunTimeException which is not handled\nand will abort Region Server. The solution is not to throw out a RunTimeException."}, "afterCommit": {"oid": "80fb7551eb3246106da3f9f4ddea90292c7cf683", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/80fb7551eb3246106da3f9f4ddea90292c7cf683", "committedDate": "2020-04-08T00:30:10Z", "message": "HBASE-24120 Flakey Test: TestReplicationAdminWithClusters timeout"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80fb7551eb3246106da3f9f4ddea90292c7cf683", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/80fb7551eb3246106da3f9f4ddea90292c7cf683", "committedDate": "2020-04-08T00:30:10Z", "message": "HBASE-24120 Flakey Test: TestReplicationAdminWithClusters timeout"}, "afterCommit": {"oid": "328b048ee94b4a7275133c6fc6bb9532300a260a", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/328b048ee94b4a7275133c6fc6bb9532300a260a", "committedDate": "2020-04-08T01:09:49Z", "message": "HBASE-24120 Flakey Test: TestReplicationAdminWithClusters timeout"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTkxMDcz", "url": "https://github.com/apache/hbase/pull/1441#pullrequestreview-389591073", "createdAt": "2020-04-08T01:11:53Z", "commit": {"oid": "328b048ee94b4a7275133c6fc6bb9532300a260a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMToxMTo1M1rOGCbkxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMToxMTo1M1rOGCbkxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIwMjExOA==", "bodyText": "Added this check because the flakey test run into the following Nullpointer exception.\n2020-04-07 03:30:03,677 WARN  [RS_REFRESH_PEER-regionserver/asf905:0-0.replicationSource,2.replicationSource.wal-reader.asf905.gq1.ygridcore.net%2C41391%2C1586230117579,2] impl.BlockReaderFactory(768): I/O error constructing remote block reader. java.nio.channels.ClosedByInterruptException at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202) at sun.nio.ch.SocketChannelImpl.connect(SocketChannelImpl.java:659) at org.apache.hadoop.net.SocketIOWithTimeout.connect(SocketIOWithTimeout.java:192) at org.apache.hadoop.net.NetUtils.connect(NetUtils.java:531) at org.apache.hadoop.hdfs.DFSClient.newConnectedPeer(DFSClient.java:2881) at org.apache.hadoop.hdfs.client.impl.BlockReaderFactory.nextTcpPeer(BlockReaderFactory.java:825) at org.apache.hadoop.hdfs.client.impl.BlockReaderFactory.getRemoteBlockReaderFromTcp(BlockReaderFactory.java:750) at org.apache.hadoop.hdfs.client.impl.BlockReaderFactory.build(BlockReaderFactory.java:387) at org.apache.hadoop.hdfs.DFSInputStream.getBlockReader(DFSInputStream.java:717) at org.apache.hadoop.hdfs.DFSInputStream.blockSeekTo(DFSInputStream.java:665) at org.apache.hadoop.hdfs.DFSInputStream.seekToBlockSource(DFSInputStream.java:1697) at org.apache.hadoop.hdfs.DFSInputStream.readBuffer(DFSInputStream.java:915) at org.apache.hadoop.hdfs.DFSInputStream.readWithStrategy(DFSInputStream.java:950) at org.apache.hadoop.hdfs.DFSInputStream.read(DFSInputStream.java:996) at java.io.DataInputStream.read(DataInputStream.java:149) at java.io.FilterInputStream.read(FilterInputStream.java:133) at java.io.PushbackInputStream.read(PushbackInputStream.java:186) at org.apache.hadoop.io.IOUtils.readFully(IOUtils.java:209) at org.apache.hadoop.hbase.KeyValueUtil.createKeyValueFromInputStream(KeyValueUtil.java:716) at org.apache.hadoop.hbase.codec.KeyValueCodecWithTags$KeyValueDecoder.parseCell(KeyValueCodecWithTags.java:81) at org.apache.hadoop.hbase.codec.BaseDecoder.advance(BaseDecoder.java:68) at org.apache.hadoop.hbase.wal.WALEdit.readFromCells(WALEdit.java:276) at org.apache.hadoop.hbase.regionserver.wal.ProtobufLogReader.readNext(ProtobufLogReader.java:382) at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next(ReaderBase.java:98) at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next(ReaderBase.java:86) at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.readNextEntryAndRecordReaderPosition(WALEntryStream.java:263) at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.tryAdvanceEntry(WALEntryStream.java:176) at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.hasNext(WALEntryStream.java:101) at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.readWALEntries(ReplicationSourceWALReader.java:221) at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.run(ReplicationSourceWALReader.java:138) 2020-04-07 03:30:03,678 ERROR [RS_REFRESH_PEER-regionserver/asf905:0-0.replicationSource,2.replicationSource.wal-reader.asf905.gq1.ygridcore.net%2C41391%2C1586230117579,2] regionserver.ReplicationSource(397): Unexpected exception in RS_REFRESH_PEER-regionserver/asf905:0-0.replicationSource,2.replicationSource.wal-reader.asf905.gq1.ygridcore.net%2C41391%2C1586230117579,2 currentPath=hdfs://localhost:37359/user/jenkins/test-data/260e1f0f-a3fd-6192-b1d7-6568614aef58/WALs/asf905.gq1.ygridcore.net,41391,1586230117579/asf905.gq1.ygridcore.net%2C41391%2C1586230117579.1586230122806 java.lang.NullPointerException at org.apache.hadoop.hbase.regionserver.wal.ProtobufLogReader.extractHiddenEof(ProtobufLogReader.java:449) at org.apache.hadoop.hbase.regionserver.wal.ProtobufLogReader.readNext(ProtobufLogReader.java:396) at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next(ReaderBase.java:98) at org.apache.hadoop.hbase.regionserver.wal.ReaderBase.next(ReaderBase.java:86) at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.readNextEntryAndRecordReaderPosition(WALEntryStream.java:263) at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.tryAdvanceEntry(WALEntryStream.java:176) at org.apache.hadoop.hbase.replication.regionserver.WALEntryStream.hasNext(WALEntryStream.java:101) at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.readWALEntries(ReplicationSourceWALReader.java:221) at org.apache.hadoop.hbase.replication.regionserver.ReplicationSourceWALReader.run(ReplicationSourceWALReader.java:138)", "url": "https://github.com/apache/hbase/pull/1441#discussion_r405202118", "createdAt": "2020-04-08T01:11:53Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java", "diffHunk": "@@ -445,7 +445,7 @@ private IOException extractHiddenEof(Exception ex) {\n         && ex.getCause() != null && ex.getCause() instanceof IOException) {\n       ioEx = (IOException)ex.getCause();\n     }\n-    if (ioEx != null) {\n+    if ((ioEx != null) && (ioEx.getMessage() != null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328b048ee94b4a7275133c6fc6bb9532300a260a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTkxMzU1", "url": "https://github.com/apache/hbase/pull/1441#pullrequestreview-389591355", "createdAt": "2020-04-08T01:12:47Z", "commit": {"oid": "328b048ee94b4a7275133c6fc6bb9532300a260a"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMToxMjo0N1rOGCblsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMToxMzo1NVrOGCbm9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIwMjM1Mw==", "bodyText": "I think we could do this\ncatch (InterruptedException | ReplicationRuntimeException e) {\n  blabla\n}", "url": "https://github.com/apache/hbase/pull/1441#discussion_r405202353", "createdAt": "2020-04-08T01:12:47Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSourceShipper.java", "diffHunk": "@@ -122,6 +122,10 @@ public final void run() {\n       } catch (InterruptedException e) {\n         LOG.trace(\"Interrupted while waiting for next replication entry batch\", e);\n         Thread.currentThread().interrupt();\n+      } catch (ReplicationRuntimeException rre) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328b048ee94b4a7275133c6fc6bb9532300a260a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIwMjUwNg==", "bodyText": "Add a  so it will not be reformated by IDE.", "url": "https://github.com/apache/hbase/pull/1441#discussion_r405202506", "createdAt": "2020-04-08T01:13:23Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationRuntimeException.java", "diffHunk": "@@ -0,0 +1,40 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.hadoop.hbase.replication.regionserver;\n+\n+import org.apache.yetus.audience.InterfaceAudience;\n+\n+/**\n+ * This exception is thrown when replication source is terminated and source threads got\n+ * interrupted.\n+ *", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328b048ee94b4a7275133c6fc6bb9532300a260a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTIwMjY3Ng==", "bodyText": "Good.", "url": "https://github.com/apache/hbase/pull/1441#discussion_r405202676", "createdAt": "2020-04-08T01:13:55Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogReader.java", "diffHunk": "@@ -445,7 +445,7 @@ private IOException extractHiddenEof(Exception ex) {\n         && ex.getCause() != null && ex.getCause() instanceof IOException) {\n       ioEx = (IOException)ex.getCause();\n     }\n-    if (ioEx != null) {\n+    if ((ioEx != null) && (ioEx.getMessage() != null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "328b048ee94b4a7275133c6fc6bb9532300a260a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "306ce75e4dc7d78a63f31b84260b2ac456c9535a", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/306ce75e4dc7d78a63f31b84260b2ac456c9535a", "committedDate": "2020-04-08T06:13:50Z", "message": "HBASE-24120 Flakey Test: TestReplicationAdminWithClusters timeout"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "328b048ee94b4a7275133c6fc6bb9532300a260a", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/328b048ee94b4a7275133c6fc6bb9532300a260a", "committedDate": "2020-04-08T01:09:49Z", "message": "HBASE-24120 Flakey Test: TestReplicationAdminWithClusters timeout"}, "afterCommit": {"oid": "306ce75e4dc7d78a63f31b84260b2ac456c9535a", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/306ce75e4dc7d78a63f31b84260b2ac456c9535a", "committedDate": "2020-04-08T06:13:50Z", "message": "HBASE-24120 Flakey Test: TestReplicationAdminWithClusters timeout"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2323, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}