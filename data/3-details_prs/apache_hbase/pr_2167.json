{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MjMzMzQy", "number": 2167, "title": "HBASE-24791 Improve HFileOutputFormat2 to avoid always call getTableRelativePath method", "bodyText": "HBASE-24791 Improve HFileOutputFormat2 to avoid always call getTableRelativePath method", "createdAt": "2020-07-29T06:49:38Z", "url": "https://github.com/apache/hbase/pull/2167", "merged": true, "mergeCommit": {"oid": "8e33bb04bc2058c33750a1ad40f4188bd96926c3"}, "closed": true, "closedAt": "2020-08-03T08:02:49Z", "author": {"login": "utf7"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5loeqAFqTQ1NzI0OTUzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7M7YUAFqTQ1OTgwNTg3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MjQ5NTM5", "url": "https://github.com/apache/hbase/pull/2167#pullrequestreview-457249539", "createdAt": "2020-07-29T07:09:15Z", "commit": {"oid": "e7553034bd68b13666e4571530974df0a7625ebd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzowOToxNVrOG4rbFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzowOToxNVrOG4rbFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA4NDg4NQ==", "bodyText": "Remove HBASE-24790  related change in this PR.", "url": "https://github.com/apache/hbase/pull/2167#discussion_r462084885", "createdAt": "2020-07-29T07:09:15Z", "author": {"login": "pankaj72981"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/SplitLogCounters.java", "diffHunk": "@@ -32,8 +32,6 @@\n   public final static LongAdder tot_mgr_log_split_batch_start = new LongAdder();\n   public final static LongAdder tot_mgr_log_split_batch_success = new LongAdder();\n   public final static LongAdder tot_mgr_log_split_batch_err = new LongAdder();\n-  public final static LongAdder tot_mgr_new_unexpected_wals = new LongAdder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7553034bd68b13666e4571530974df0a7625ebd"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3Mjc0NDI0", "url": "https://github.com/apache/hbase/pull/2167#pullrequestreview-457274424", "createdAt": "2020-07-29T07:47:48Z", "commit": {"oid": "e7553034bd68b13666e4571530974df0a7625ebd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzo0Nzo0OFrOG4spqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNzo0Nzo0OFrOG4spqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEwNTAwMA==", "bodyText": "That is a nice find.\nBTW reading this part of code, I think so much of optimization we can do.  It might not be relevant as this change. Though good to do IMO\n...\n} else {\ntableNameBytes = Bytes.toBytes(writeTableNames);\n}\nString tableName = Bytes.toString(tableNameBytes);\n...\nOnly in case of multiTable, we need create tableName  and tableNameBytes  again and again for every write. So we can make sure this is created at 1st and do not create every time for not multiTable case.\nprivate Path getTableRelativePath(byte[] tableNameBytes) {\nString tableName = Bytes.toString(tableNameBytes);\nString[] tableNameParts = tableName.split(\":\");\nPath tableRelPath = new Path(tableName.split(\":\")[0]);\nif (tableNameParts.length > 1) {\ntableRelPath = new Path(tableRelPath, tableName.split(\":\")[1]);\n}\nreturn tableRelPath;\n}\nsplit is done 3 times. We can just refer tableNameParts[0], tableNameParts[1] and other places.\nCan u pls include these kind of fixes also in PR?", "url": "https://github.com/apache/hbase/pull/2167#discussion_r462105000", "createdAt": "2020-07-29T07:47:48Z", "author": {"login": "anoopsjohn"}, "path": "hbase-mapreduce/src/main/java/org/apache/hadoop/hbase/mapreduce/HFileOutputFormat2.java", "diffHunk": "@@ -248,7 +248,6 @@ public void write(ImmutableBytesWritable row, V cell) throws IOException {\n           tableNameBytes = Bytes.toBytes(writeTableNames);\n         }\n         String tableName = Bytes.toString(tableNameBytes);\n-        Path tableRelPath = getTableRelativePath(tableNameBytes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7553034bd68b13666e4571530974df0a7625ebd"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68dcef9376b8ec9e5f97834d53a439e7d40bed9e", "author": {"user": {"login": "utf7", "name": "Yechao Chen"}}, "url": "https://github.com/apache/hbase/commit/68dcef9376b8ec9e5f97834d53a439e7d40bed9e", "committedDate": "2020-07-29T09:14:45Z", "message": "HBASE-24791 Improve HFileOutputFormat2 to avoid always call getTableRelativePath method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3Mzk5Mjc1", "url": "https://github.com/apache/hbase/pull/2167#pullrequestreview-457399275", "createdAt": "2020-07-29T10:36:40Z", "commit": {"oid": "68dcef9376b8ec9e5f97834d53a439e7d40bed9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMDozNjo0MVrOG4yrWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMDozNjo0MVrOG4yrWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjIwMzczNw==", "bodyText": "Remove extra semicolon at end.", "url": "https://github.com/apache/hbase/pull/2167#discussion_r462203737", "createdAt": "2020-07-29T10:36:41Z", "author": {"login": "pankaj72981"}, "path": "hbase-mapreduce/src/main/java/org/apache/hadoop/hbase/mapreduce/HFileOutputFormat2.java", "diffHunk": "@@ -222,6 +222,7 @@ public RegionLocator getRegionLocator() {\n       private final Map<byte[], WriterLength> writers = new TreeMap<>(Bytes.BYTES_COMPARATOR);\n       private final Map<byte[], byte[]> previousRows = new TreeMap<>(Bytes.BYTES_COMPARATOR);\n       private final long now = EnvironmentEdgeManager.currentTime();\n+      private byte[] tableNameBytes =  Bytes.toBytes(writeTableNames);;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68dcef9376b8ec9e5f97834d53a439e7d40bed9e"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bd75fac9e8256e2c5135a5da7981823aa6afe9a", "author": {"user": {"login": "utf7", "name": "Yechao Chen"}}, "url": "https://github.com/apache/hbase/commit/0bd75fac9e8256e2c5135a5da7981823aa6afe9a", "committedDate": "2020-07-29T14:05:02Z", "message": "Code format and remove extra semicolon"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3ODkxMzc1", "url": "https://github.com/apache/hbase/pull/2167#pullrequestreview-457891375", "createdAt": "2020-07-29T20:57:12Z", "commit": {"oid": "0bd75fac9e8256e2c5135a5da7981823aa6afe9a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDo1NzoxM1rOG5J4OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQyMDo1NzoxM1rOG5J4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjU4Mzg2NA==", "bodyText": "Does this apply when LOCALITY_SENSITIVE_CONF_KEY check on line 274 is false ?", "url": "https://github.com/apache/hbase/pull/2167#discussion_r462583864", "createdAt": "2020-07-29T20:57:13Z", "author": {"login": "tedyu"}, "path": "hbase-mapreduce/src/main/java/org/apache/hadoop/hbase/mapreduce/HFileOutputFormat2.java", "diffHunk": "@@ -274,39 +270,36 @@ public void write(ImmutableBytesWritable row, V cell) throws IOException {\n \n         // create a new WAL writer, if necessary\n         if (wl == null || wl.writer == null) {\n+          InetSocketAddress[] favoredNodes = null;\n           if (conf.getBoolean(LOCALITY_SENSITIVE_CONF_KEY, DEFAULT_LOCALITY_SENSITIVE)) {\n             HRegionLocation loc = null;\n-\n+            String tableName = Bytes.toString(tableNameBytes);\n             if (tableName != null) {\n               try (Connection connection = ConnectionFactory.createConnection(conf);\n-                     RegionLocator locator =\n-                       connection.getRegionLocator(TableName.valueOf(tableName))) {\n+                RegionLocator locator = connection.getRegionLocator(TableName.valueOf(tableName))) {\n                 loc = locator.getRegionLocation(rowKey);\n               } catch (Throwable e) {\n-                LOG.warn(\"Something wrong locating rowkey {} in {}\",\n-                  Bytes.toString(rowKey), tableName, e);\n+                LOG.warn(\"Something wrong locating rowkey {} in {}\", Bytes.toString(rowKey),\n+                  tableName, e);\n                 loc = null;\n-              } }\n-\n+              }\n+            }\n             if (null == loc) {\n               LOG.trace(\"Failed get of location, use default writer {}\", Bytes.toString(rowKey));\n-              wl = getNewWriter(tableNameBytes, family, conf, null);\n             } else {\n               LOG.debug(\"First rowkey: [{}]\", Bytes.toString(rowKey));\n               InetSocketAddress initialIsa =\n                   new InetSocketAddress(loc.getHostname(), loc.getPort());\n               if (initialIsa.isUnresolved()) {\n                 LOG.trace(\"Failed resolve address {}, use default writer\", loc.getHostnamePort());\n-                wl = getNewWriter(tableNameBytes, family, conf, null);\n               } else {\n                 LOG.debug(\"Use favored nodes writer: {}\", initialIsa.getHostString());\n-                wl = getNewWriter(tableNameBytes, family, conf, new InetSocketAddress[] { initialIsa\n-                });\n+                favoredNodes = new InetSocketAddress[] { initialIsa};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bd75fac9e8256e2c5135a5da7981823aa6afe9a"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NzI0OTUx", "url": "https://github.com/apache/hbase/pull/2167#pullrequestreview-459724951", "createdAt": "2020-08-03T03:12:38Z", "commit": {"oid": "0bd75fac9e8256e2c5135a5da7981823aa6afe9a"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMzoxMjozOVrOG6q30A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QwMzoyMTozMlrOG6q_Bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE3MzAwOA==", "bodyText": "Looks like a format issue here?", "url": "https://github.com/apache/hbase/pull/2167#discussion_r464173008", "createdAt": "2020-08-03T03:12:39Z", "author": {"login": "anoopsjohn"}, "path": "hbase-mapreduce/src/main/java/org/apache/hadoop/hbase/mapreduce/HFileOutputFormat2.java", "diffHunk": "@@ -274,39 +270,36 @@ public void write(ImmutableBytesWritable row, V cell) throws IOException {\n \n         // create a new WAL writer, if necessary\n         if (wl == null || wl.writer == null) {\n+          InetSocketAddress[] favoredNodes = null;\n           if (conf.getBoolean(LOCALITY_SENSITIVE_CONF_KEY, DEFAULT_LOCALITY_SENSITIVE)) {\n             HRegionLocation loc = null;\n-\n+            String tableName = Bytes.toString(tableNameBytes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bd75fac9e8256e2c5135a5da7981823aa6afe9a"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE3MzEzOQ==", "bodyText": "Here also.", "url": "https://github.com/apache/hbase/pull/2167#discussion_r464173139", "createdAt": "2020-08-03T03:13:17Z", "author": {"login": "anoopsjohn"}, "path": "hbase-mapreduce/src/main/java/org/apache/hadoop/hbase/mapreduce/HFileOutputFormat2.java", "diffHunk": "@@ -274,39 +270,36 @@ public void write(ImmutableBytesWritable row, V cell) throws IOException {\n \n         // create a new WAL writer, if necessary\n         if (wl == null || wl.writer == null) {\n+          InetSocketAddress[] favoredNodes = null;\n           if (conf.getBoolean(LOCALITY_SENSITIVE_CONF_KEY, DEFAULT_LOCALITY_SENSITIVE)) {\n             HRegionLocation loc = null;\n-\n+            String tableName = Bytes.toString(tableNameBytes);\n             if (tableName != null) {\n               try (Connection connection = ConnectionFactory.createConnection(conf);\n-                     RegionLocator locator =\n-                       connection.getRegionLocator(TableName.valueOf(tableName))) {\n+                RegionLocator locator = connection.getRegionLocator(TableName.valueOf(tableName))) {\n                 loc = locator.getRegionLocation(rowKey);\n               } catch (Throwable e) {\n-                LOG.warn(\"Something wrong locating rowkey {} in {}\",\n-                  Bytes.toString(rowKey), tableName, e);\n+                LOG.warn(\"Something wrong locating rowkey {} in {}\", Bytes.toString(rowKey),\n+                  tableName, e);\n                 loc = null;\n-              } }\n-\n+              }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bd75fac9e8256e2c5135a5da7981823aa6afe9a"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE3MzM4NA==", "bodyText": "Pls check format issue at these changed/added lines once.", "url": "https://github.com/apache/hbase/pull/2167#discussion_r464173384", "createdAt": "2020-08-03T03:14:21Z", "author": {"login": "anoopsjohn"}, "path": "hbase-mapreduce/src/main/java/org/apache/hadoop/hbase/mapreduce/HFileOutputFormat2.java", "diffHunk": "@@ -376,16 +369,15 @@ private WriterLength getNewWriter(byte[] tableName, byte[] family, Configuration\n         DataBlockEncoding encoding = overriddenEncoding;\n         encoding = encoding == null ? datablockEncodingMap.get(tableAndFamily) : encoding;\n         encoding = encoding == null ? DataBlockEncoding.NONE : encoding;\n-        HFileContextBuilder contextBuilder = new HFileContextBuilder()\n-          .withCompression(compression).withChecksumType(HStore.getChecksumType(conf))\n-          .withBytesPerCheckSum(HStore.getBytesPerChecksum(conf)).withBlockSize(blockSize)\n-          .withColumnFamily(family).withTableName(tableName);\n+        HFileContextBuilder contextBuilder = new HFileContextBuilder().withCompression(compression)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bd75fac9e8256e2c5135a5da7981823aa6afe9a"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDE3NDg1NA==", "bodyText": "Should we do this under writeMultipleTables check?\nprivate byte[] tableNameBytes = (writeMultipleTables)? null: Bytes.toBytes(writeTableNames);", "url": "https://github.com/apache/hbase/pull/2167#discussion_r464174854", "createdAt": "2020-08-03T03:21:32Z", "author": {"login": "anoopsjohn"}, "path": "hbase-mapreduce/src/main/java/org/apache/hadoop/hbase/mapreduce/HFileOutputFormat2.java", "diffHunk": "@@ -222,6 +222,7 @@ public RegionLocator getRegionLocator() {\n       private final Map<byte[], WriterLength> writers = new TreeMap<>(Bytes.BYTES_COMPARATOR);\n       private final Map<byte[], byte[]> previousRows = new TreeMap<>(Bytes.BYTES_COMPARATOR);\n       private final long now = EnvironmentEdgeManager.currentTime();\n+      private byte[] tableNameBytes = Bytes.toBytes(writeTableNames);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0bd75fac9e8256e2c5135a5da7981823aa6afe9a"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29b4332b96d3d0b871c519a582abd5bf78138995", "author": {"user": {"login": "utf7", "name": "Yechao Chen"}}, "url": "https://github.com/apache/hbase/commit/29b4332b96d3d0b871c519a582abd5bf78138995", "committedDate": "2020-08-03T06:10:57Z", "message": "Code format"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5ODA1ODc3", "url": "https://github.com/apache/hbase/pull/2167#pullrequestreview-459805877", "createdAt": "2020-08-03T07:31:20Z", "commit": {"oid": "29b4332b96d3d0b871c519a582abd5bf78138995"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4108, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}