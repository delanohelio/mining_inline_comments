{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxOTk0MzA1", "number": 1879, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODo0NDozOVrOEEAo2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDowMDoyMVrOEECKaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjQwMjE2OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODo0NDozOVrOGhXnbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjozNzoxM1rOGh9YZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0MzExNw==", "bodyText": "ZooKeeper 3.6 throws NPE if the multi list is empty", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437643117", "createdAt": "2020-06-09T18:44:39Z", "author": {"login": "apurtell"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java", "diffHunk": "@@ -1811,9 +1811,10 @@ private static Op toZooKeeperOp(ZooKeeperWatcher zkw, ZKUtilOp op)\n    */\n   public static void multiOrSequential(ZooKeeperWatcher zkw, List<ZKUtilOp> ops,\n       boolean runSequentialOnMultiFailure) throws KeeperException {\n-    if (ops == null) return;\n+    if (ops == null || ops.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2MTg2Mg==", "bodyText": "Did our unit tests catch this one or you knew it already? I just want to know what preparation we should do while upgrading ZK or any other heavy dependency.", "url": "https://github.com/apache/hbase/pull/1879#discussion_r438261862", "createdAt": "2020-06-10T16:37:13Z", "author": {"login": "virajjasani"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/ZKUtil.java", "diffHunk": "@@ -1811,9 +1811,10 @@ private static Op toZooKeeperOp(ZooKeeperWatcher zkw, ZKUtilOp op)\n    */\n   public static void multiOrSequential(ZooKeeperWatcher zkw, List<ZKUtilOp> ops,\n       boolean runSequentialOnMultiFailure) throws KeeperException {\n-    if (ops == null) return;\n+    if (ops == null || ops.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0MzExNw=="}, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjQwMzkyOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxODo0NToxMFrOGhXogQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjozNzo0NVrOGh9ZsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0MzM5Mw==", "bodyText": "3.6.0 removed getRevision; 3.6.1 puts it back. Do we need it? I think: no", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437643393", "createdAt": "2020-06-09T18:45:10Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon", "diffHunk": "@@ -294,7 +294,7 @@ AssignmentManager assignmentManager = master.getAssignmentManager();\n                 </tr>\n                 <tr>\n                     <td>ZooKeeper Client Version</td>\n-                    <td><% org.apache.zookeeper.Version.getVersion() %>, revision=<% org.apache.zookeeper.Version.getRevision() %></td>\n+                    <td><% org.apache.zookeeper.Version.getVersion() %></td>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2MjE5Mw==", "bodyText": "Agree, no need of revision IMHO", "url": "https://github.com/apache/hbase/pull/1879#discussion_r438262193", "createdAt": "2020-06-10T16:37:45Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/jamon/org/apache/hadoop/hbase/tmpl/master/MasterStatusTmpl.jamon", "diffHunk": "@@ -294,7 +294,7 @@ AssignmentManager assignmentManager = master.getAssignmentManager();\n                 </tr>\n                 <tr>\n                     <td>ZooKeeper Client Version</td>\n-                    <td><% org.apache.zookeeper.Version.getVersion() %>, revision=<% org.apache.zookeeper.Version.getRevision() %></td>\n+                    <td><% org.apache.zookeeper.Version.getVersion() %></td>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY0MzM5Mw=="}, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjYzNTQwOnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/HQuorumPeer.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo1NTozN1rOGhZ8ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMTo1ODoyMlrOGhd5Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MTI1Mw==", "bodyText": "UnknownHostException is also an IOE, so I think you can just remove UnknownHostException from the method signature and all is good? no need to try/catch/wrap blocks?", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437681253", "createdAt": "2020-06-09T19:55:37Z", "author": {"login": "bharathv"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/HQuorumPeer.java", "diffHunk": "@@ -85,14 +85,20 @@ public static void main(String[] args) {\n   }\n \n   private static void runZKServer(QuorumPeerConfig zkConfig) throws UnknownHostException, IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzczNzUwNQ==", "bodyText": "The current signature proposes we throw IOException or UnknownHostException. ZK 3.6 throws another type of checked exception, which causes a compilation error. Therefore I catch that and potentially others, and wrap it into an IOE.\nAdding the new checked exception to the signature would cause a compilation problem with 3.4, so that is not possible due to this legacy.", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437737505", "createdAt": "2020-06-09T21:38:27Z", "author": {"login": "apurtell"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/HQuorumPeer.java", "diffHunk": "@@ -85,14 +85,20 @@ public static void main(String[] args) {\n   }\n \n   private static void runZKServer(QuorumPeerConfig zkConfig) throws UnknownHostException, IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MTI1Mw=="}, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzczODE3MQ==", "bodyText": "UnknownHostException is also an IOE\n\nMight be true but the method signature here was what it was and there is no need to fix it. I have little opinion either way other than a preference to minimize change.", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437738171", "createdAt": "2020-06-09T21:40:05Z", "author": {"login": "apurtell"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/HQuorumPeer.java", "diffHunk": "@@ -85,14 +85,20 @@ public static void main(String[] args) {\n   }\n \n   private static void runZKServer(QuorumPeerConfig zkConfig) throws UnknownHostException, IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MTI1Mw=="}, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc0NTkyMw==", "bodyText": "Ah, okay. I missed the AdminServerException exception from the signature, wfm to keep it as-is.", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437745923", "createdAt": "2020-06-09T21:58:22Z", "author": {"login": "bharathv"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/zookeeper/HQuorumPeer.java", "diffHunk": "@@ -85,14 +85,20 @@ public static void main(String[] args) {\n   }\n \n   private static void runZKServer(QuorumPeerConfig zkConfig) throws UnknownHostException, IOException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MTI1Mw=="}, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjY0NzYzOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperMainServer.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxOTo1OTowMFrOGhaD0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMzo1Nzo0OFrOGhj__Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MzE1Mw==", "bodyText": "Why this? Any un-checked exception is propagated as-is?", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437683153", "createdAt": "2020-06-09T19:59:00Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperMainServer.java", "diffHunk": "@@ -66,8 +66,14 @@ public HACK_UNTIL_ZOOKEEPER_1897_ZooKeeperMain(String[] args)\n      * @throws IOException\n      * @throws InterruptedException\n      */\n-    void runCmdLine() throws KeeperException, IOException, InterruptedException {\n-      processCmd(this.cl);\n+    void runCmdLine() throws IOException, InterruptedException {\n+      try {\n+        processCmd(this.cl);\n+      } catch (IOException | InterruptedException e) {\n+        throw e;\n+      } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzczNzEzNA==", "bodyText": "The current signature proposes we throw IOException or InterruptedException. ZK 3.6 throws another type of checked exception, which causes a compilation error. Therefore I catch that and potentially others, and wrap it into an IOE.\nAdding the new checked exception to the signature would cause a compilation problem with 3.4, so that is not possible due to this legacy.", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437737134", "createdAt": "2020-06-09T21:37:35Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperMainServer.java", "diffHunk": "@@ -66,8 +66,14 @@ public HACK_UNTIL_ZOOKEEPER_1897_ZooKeeperMain(String[] args)\n      * @throws IOException\n      * @throws InterruptedException\n      */\n-    void runCmdLine() throws KeeperException, IOException, InterruptedException {\n-      processCmd(this.cl);\n+    void runCmdLine() throws IOException, InterruptedException {\n+      try {\n+        processCmd(this.cl);\n+      } catch (IOException | InterruptedException e) {\n+        throw e;\n+      } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MzE1Mw=="}, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc0Nzg5OQ==", "bodyText": "ZK 3.6 throws another type of checked exception, which causes a compilation error\n\nI didn't see it here [1], hence my question.  May be I missed something.\n[1] https://github.com/apache/zookeeper/blob/branch-3.6/zookeeper-server/src/main/java/org/apache/zookeeper/ZooKeeperMain.java#L380", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437747899", "createdAt": "2020-06-09T22:03:15Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperMainServer.java", "diffHunk": "@@ -66,8 +66,14 @@ public HACK_UNTIL_ZOOKEEPER_1897_ZooKeeperMain(String[] args)\n      * @throws IOException\n      * @throws InterruptedException\n      */\n-    void runCmdLine() throws KeeperException, IOException, InterruptedException {\n-      processCmd(this.cl);\n+    void runCmdLine() throws IOException, InterruptedException {\n+      try {\n+        processCmd(this.cl);\n+      } catch (IOException | InterruptedException e) {\n+        throw e;\n+      } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MzE1Mw=="}, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4NzI3NA==", "bodyText": "This is a port of internal work, let me remove this hunk and check again.", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437787274", "createdAt": "2020-06-10T00:02:02Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperMainServer.java", "diffHunk": "@@ -66,8 +66,14 @@ public HACK_UNTIL_ZOOKEEPER_1897_ZooKeeperMain(String[] args)\n      * @throws IOException\n      * @throws InterruptedException\n      */\n-    void runCmdLine() throws KeeperException, IOException, InterruptedException {\n-      processCmd(this.cl);\n+    void runCmdLine() throws IOException, InterruptedException {\n+      try {\n+        processCmd(this.cl);\n+      } catch (IOException | InterruptedException e) {\n+        throw e;\n+      } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MzE1Mw=="}, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc4ODQ2Mw==", "bodyText": "[ERROR] Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:compile (default-compile) on project hbase-server: Compilation failure\n[ERROR] /Users/apurtell/src/hbase/hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperMainServer.java:[70,17] unreported exception org.apache.zookeeper.cli.CliException; must be caught or declared to be thrown", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437788463", "createdAt": "2020-06-10T00:06:10Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperMainServer.java", "diffHunk": "@@ -66,8 +66,14 @@ public HACK_UNTIL_ZOOKEEPER_1897_ZooKeeperMain(String[] args)\n      * @throws IOException\n      * @throws InterruptedException\n      */\n-    void runCmdLine() throws KeeperException, IOException, InterruptedException {\n-      processCmd(this.cl);\n+    void runCmdLine() throws IOException, InterruptedException {\n+      try {\n+        processCmd(this.cl);\n+      } catch (IOException | InterruptedException e) {\n+        throw e;\n+      } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MzE1Mw=="}, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg0NjAxMw==", "bodyText": "Looks like the root cause is this https://issues.apache.org/jira/browse/ZOOKEEPER-3760. I was looking in the branch-3.6 but the release bits of 3.6.0 didn't include this patch.", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437846013", "createdAt": "2020-06-10T03:57:48Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/zookeeper/ZooKeeperMainServer.java", "diffHunk": "@@ -66,8 +66,14 @@ public HACK_UNTIL_ZOOKEEPER_1897_ZooKeeperMain(String[] args)\n      * @throws IOException\n      * @throws InterruptedException\n      */\n-    void runCmdLine() throws KeeperException, IOException, InterruptedException {\n-      processCmd(this.cl);\n+    void runCmdLine() throws IOException, InterruptedException {\n+      try {\n+        processCmd(this.cl);\n+      } catch (IOException | InterruptedException e) {\n+        throw e;\n+      } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MzE1Mw=="}, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjY1MTkzOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/zookeeper/TestHQuorumPeer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMDowMDoyMVrOGhaGvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQyMTo0MDo1NFrOGhdcMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MzkwMA==", "bodyText": "nit: I think this for cross-version compatibility, a quick comment would be nice.", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437683900", "createdAt": "2020-06-09T20:00:21Z", "author": {"login": "bharathv"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/zookeeper/TestHQuorumPeer.java", "diffHunk": "@@ -111,25 +115,39 @@\n     QuorumPeerConfig config = new QuorumPeerConfig();\n     config.parseProperties(properties);\n \n-    assertEquals(this.dataDir.toString(), config.getDataDir());\n+    assertEquals(this.dataDir.toString(), config.getDataDir().toString());\n     assertEquals(2181, config.getClientPortAddress().getPort());\n     Map<Long,QuorumServer> servers = config.getServers();\n     assertEquals(3, servers.size());\n     assertTrue(servers.containsKey(Long.valueOf(0)));\n     QuorumServer server = servers.get(Long.valueOf(0));\n-    assertEquals(\"localhost\", server.addr.getHostName());\n+    assertEquals(\"localhost\", getHostName(server));\n \n     // Override with system property.\n     System.setProperty(\"hbase.master.hostname\", \"foo.bar\");\n     is = new ByteArrayInputStream(s.getBytes());\n     properties = ZKConfig.parseZooCfg(conf, is);\n     assertEquals(\"foo.bar:2888:3888\", properties.get(\"server.0\"));\n-\n     config.parseProperties(properties);\n \n     servers = config.getServers();\n     server = servers.get(Long.valueOf(0));\n-    assertEquals(\"foo.bar\", server.addr.getHostName());\n+    assertEquals(\"foo.bar\", getHostName(server));\n+  }\n+\n+  private static String getHostName(QuorumServer server) throws Exception {\n+    String hostname;\n+    switch (server.addr.getClass().getName()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzczODU0NA==", "bodyText": "I can add a comment. I think the cross-version issues are clear enough by this resort to reflection :-(", "url": "https://github.com/apache/hbase/pull/1879#discussion_r437738544", "createdAt": "2020-06-09T21:40:54Z", "author": {"login": "apurtell"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/zookeeper/TestHQuorumPeer.java", "diffHunk": "@@ -111,25 +115,39 @@\n     QuorumPeerConfig config = new QuorumPeerConfig();\n     config.parseProperties(properties);\n \n-    assertEquals(this.dataDir.toString(), config.getDataDir());\n+    assertEquals(this.dataDir.toString(), config.getDataDir().toString());\n     assertEquals(2181, config.getClientPortAddress().getPort());\n     Map<Long,QuorumServer> servers = config.getServers();\n     assertEquals(3, servers.size());\n     assertTrue(servers.containsKey(Long.valueOf(0)));\n     QuorumServer server = servers.get(Long.valueOf(0));\n-    assertEquals(\"localhost\", server.addr.getHostName());\n+    assertEquals(\"localhost\", getHostName(server));\n \n     // Override with system property.\n     System.setProperty(\"hbase.master.hostname\", \"foo.bar\");\n     is = new ByteArrayInputStream(s.getBytes());\n     properties = ZKConfig.parseZooCfg(conf, is);\n     assertEquals(\"foo.bar:2888:3888\", properties.get(\"server.0\"));\n-\n     config.parseProperties(properties);\n \n     servers = config.getServers();\n     server = servers.get(Long.valueOf(0));\n-    assertEquals(\"foo.bar\", server.addr.getHostName());\n+    assertEquals(\"foo.bar\", getHostName(server));\n+  }\n+\n+  private static String getHostName(QuorumServer server) throws Exception {\n+    String hostname;\n+    switch (server.addr.getClass().getName()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzY4MzkwMA=="}, "originalCommit": {"oid": "291537e063f9abe11168d59ad9b71e80126cb013"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2966, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}