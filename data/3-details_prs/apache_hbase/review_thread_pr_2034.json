{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NDA4MzAw", "number": 2034, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjo0NDo1NVrOENFK_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjo0OTowNFrOENFOZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTUxNjc5OnYy", "diffSide": "RIGHT", "path": "hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/WrapperAsyncFSOutput.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjo0NDo1NVrOGvkOzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDo1MDo1N1rOGvpxFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyOTg2OQ==", "bodyText": "I had asked in #1970 if this can be implemented with an AtomicLong instead. @Apache9 responded with an analysis and alternative suggestion. Following his suggestion, it would be nice to add a comment on WrapperAsyncFSOutput stating that we expect an instance to be used only from a single thread, foregoing synchronization for the sake of performance.", "url": "https://github.com/apache/hbase/pull/2034#discussion_r452529869", "createdAt": "2020-07-09T22:44:55Z", "author": {"login": "ndimiduk"}, "path": "hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/WrapperAsyncFSOutput.java", "diffHunk": "@@ -91,7 +93,11 @@ private void flush0(CompletableFuture<Long> future, ByteArrayOutputStream buffer\n           out.hflush();\n         }\n       }\n-      future.complete(out.getPos());\n+      long pos = out.getPos();\n+      if(pos > this.syncedLength) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYyMDU2Ng==", "bodyText": "Yes, I agree with you, and even the 'if(pos > this.syncedLength) {' could be removed as @Apache9  suggested, but the current PR is backport ,so we'd better keep it in sync with the one applied to master.After this PR is applied to 2.x, I would open another addnum PR for both master and 2.x to incorporate your suggestions.", "url": "https://github.com/apache/hbase/pull/2034#discussion_r452620566", "createdAt": "2020-07-10T04:50:57Z", "author": {"login": "comnetwork"}, "path": "hbase-asyncfs/src/main/java/org/apache/hadoop/hbase/io/asyncfs/WrapperAsyncFSOutput.java", "diffHunk": "@@ -91,7 +93,11 @@ private void flush0(CompletableFuture<Long> future, ByteArrayOutputStream buffer\n           out.hflush();\n         }\n       }\n-      future.complete(out.getPos());\n+      long pos = out.getPos();\n+      if(pos > this.syncedLength) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUyOTg2OQ=="}, "originalCommit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTUxOTU0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/AsyncProtobufLogWriter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjo0NjowN1rOGvkQbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxODowNTo0N1rOGwAnNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzMDI4Ng==", "bodyText": "nit: this is unnecessary.", "url": "https://github.com/apache/hbase/pull/2034#discussion_r452530286", "createdAt": "2020-07-09T22:46:07Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/AsyncProtobufLogWriter.java", "diffHunk": "@@ -231,4 +231,9 @@ protected long writeWALTrailerAndMagic(WALTrailer trailer, byte[] magic) throws\n   protected OutputStream getOutputStreamForCellEncoder() {\n     return asyncOutputWrapper;\n   }\n+\n+  @Override\n+  public long getSyncedLength() {\n+    return this.output.getSyncedLength();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYyMDk0OA==", "bodyText": "Just as above mentioned, because  current PR is backport, after this PR is applied to 2.x, I would open another addnum PR for both master and 2.x to incorporate your suggestions.", "url": "https://github.com/apache/hbase/pull/2034#discussion_r452620948", "createdAt": "2020-07-10T04:52:37Z", "author": {"login": "comnetwork"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/AsyncProtobufLogWriter.java", "diffHunk": "@@ -231,4 +231,9 @@ protected long writeWALTrailerAndMagic(WALTrailer trailer, byte[] magic) throws\n   protected OutputStream getOutputStreamForCellEncoder() {\n     return asyncOutputWrapper;\n   }\n+\n+  @Override\n+  public long getSyncedLength() {\n+    return this.output.getSyncedLength();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzMDI4Ng=="}, "originalCommit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjk5NDg3MQ==", "bodyText": "Yep, understood. Thanks.", "url": "https://github.com/apache/hbase/pull/2034#discussion_r452994871", "createdAt": "2020-07-10T18:05:47Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/AsyncProtobufLogWriter.java", "diffHunk": "@@ -231,4 +231,9 @@ protected long writeWALTrailerAndMagic(WALTrailer trailer, byte[] magic) throws\n   protected OutputStream getOutputStreamForCellEncoder() {\n     return asyncOutputWrapper;\n   }\n+\n+  @Override\n+  public long getSyncedLength() {\n+    return this.output.getSyncedLength();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzMDI4Ng=="}, "originalCommit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTUyNTUxOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMjo0OTowNFrOGvkT5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxOTo1Nzo0NlrOG1yA4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzMTE3NA==", "bodyText": "I believe I mentioned elsewhere that I think AtomicUtils.updateMax can be replaced with AtomicLong.getAndAccumulate, something like\nsyncedLength.getAndAccumulate(fsdos.getPos(), Math::max)", "url": "https://github.com/apache/hbase/pull/2034#discussion_r452531174", "createdAt": "2020-07-09T22:49:04Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java", "diffHunk": "@@ -85,6 +90,12 @@ public void sync(boolean forceSync) throws IOException {\n     } else {\n       fsdos.hflush();\n     }\n+    AtomicUtils.updateMax(this.syncedLength, fsdos.getPos());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwMjkwMA==", "bodyText": "Good. Anyway I think this could be another issue to just remove the AtomicUtils class? The current PR is backport so we'd better keep it in sync with the one applied to master.", "url": "https://github.com/apache/hbase/pull/2034#discussion_r452602900", "createdAt": "2020-07-10T03:28:42Z", "author": {"login": "Apache9"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java", "diffHunk": "@@ -85,6 +90,12 @@ public void sync(boolean forceSync) throws IOException {\n     } else {\n       fsdos.hflush();\n     }\n+    AtomicUtils.updateMax(this.syncedLength, fsdos.getPos());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzMTE3NA=="}, "originalCommit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTA0NzEzOA==", "bodyText": "@Apache9 I read your later comments about keeping AtomicUtils because the built-in AtomicLong does not provide the short-circuit semantics you have implemented there. Sorry, I cannot find that thread to reply there. I dug around and don't see any intrinsics in the JVM that would implement this for us, so I agree with keeping our implementation.", "url": "https://github.com/apache/hbase/pull/2034#discussion_r459047138", "createdAt": "2020-07-22T19:57:46Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/regionserver/wal/ProtobufLogWriter.java", "diffHunk": "@@ -85,6 +90,12 @@ public void sync(boolean forceSync) throws IOException {\n     } else {\n       fsdos.hflush();\n     }\n+    AtomicUtils.updateMax(this.syncedLength, fsdos.getPos());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjUzMTE3NA=="}, "originalCommit": {"oid": "7c54c7262b300918a5b7da32a167781c1a21cb19"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2766, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}