{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMjU1MzEz", "number": 1623, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDowMToxMlrOD4eDqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMjo1MzoxNlrOD4xNxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTM5MzA0OnYy", "diffSide": "RIGHT", "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestSyncTable.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMDowMToxMlrOGPUM5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxODo1ODo1OVrOGPujvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxMjgwNA==", "bodyText": "If you make timestamps a Pair, that would make this a little more terse (avoid the ability for the caller to give you a single timestamp, or three timestamps)", "url": "https://github.com/apache/hbase/pull/1623#discussion_r418712804", "createdAt": "2020-05-01T20:01:12Z", "author": {"login": "joshelser"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestSyncTable.java", "diffHunk": "@@ -463,26 +490,28 @@ private void writeTestData(TableName sourceTableName, TableName targetTableName)\n     int numRows = 100;\n     int sourceRegions = 10;\n     int targetRegions = 6;\n+    if (ArrayUtils.isEmpty(timestamps)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1458027bdae381512c26d5d367a6715c9a6ae9c4"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzM5OA==", "bodyText": "Decided to use varargs so that I didn't need to change other existing methods already calling writeTestData.", "url": "https://github.com/apache/hbase/pull/1623#discussion_r418933398", "createdAt": "2020-05-02T08:56:47Z", "author": {"login": "wchevreuil"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestSyncTable.java", "diffHunk": "@@ -463,26 +490,28 @@ private void writeTestData(TableName sourceTableName, TableName targetTableName)\n     int numRows = 100;\n     int sourceRegions = 10;\n     int targetRegions = 6;\n+    if (ArrayUtils.isEmpty(timestamps)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxMjgwNA=="}, "originalCommit": {"oid": "1458027bdae381512c26d5d367a6715c9a6ae9c4"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE0NDYzNw==", "bodyText": "Ok, sounds good.", "url": "https://github.com/apache/hbase/pull/1623#discussion_r419144637", "createdAt": "2020-05-03T18:58:59Z", "author": {"login": "joshelser"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestSyncTable.java", "diffHunk": "@@ -463,26 +490,28 @@ private void writeTestData(TableName sourceTableName, TableName targetTableName)\n     int numRows = 100;\n     int sourceRegions = 10;\n     int targetRegions = 6;\n+    if (ArrayUtils.isEmpty(timestamps)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODcxMjgwNA=="}, "originalCommit": {"oid": "1458027bdae381512c26d5d367a6715c9a6ae9c4"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODUzMDgyOnYy", "diffSide": "RIGHT", "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestSyncTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMjo1MjoxMVrOGPrzUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMzo0MjoxNFrOGPsLPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5OTQ3Mg==", "bodyText": "NIT, add spaces around the plus.", "url": "https://github.com/apache/hbase/pull/1623#discussion_r419099472", "createdAt": "2020-05-03T12:52:11Z", "author": {"login": "HorizonNet"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestSyncTable.java", "diffHunk": "@@ -426,18 +451,19 @@ private Counters syncTables(TableName sourceTableName, TableName targetTableName\n     return syncTable.counters;\n   }\n \n-  private void hashSourceTable(TableName sourceTableName, Path testDir) throws Exception {\n+  private void hashSourceTable(TableName sourceTableName, Path testDir, String... options)\n+      throws Exception {\n     int numHashFiles = 3;\n     long batchSize = 100;  // should be 2 batches per region\n     int scanBatch = 1;\n     HashTable hashTable = new HashTable(TEST_UTIL.getConfiguration());\n-    int code = hashTable.run(new String[] {\n-      \"--batchsize=\" + batchSize,\n-      \"--numhashfiles=\" + numHashFiles,\n-      \"--scanbatch=\" + scanBatch,\n-      sourceTableName.getNameAsString(),\n-      testDir.toString()\n-    });\n+    String[] args = Arrays.copyOf(options, options.length+5);\n+    args[options.length] = \"--batchsize=\" + batchSize;\n+    args[options.length+1] = \"--numhashfiles=\" + numHashFiles;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fb5893a4613251b381c873b8e7d50f31e7d974b"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwNTU5Ng==", "bodyText": "Indeed, fixed on latest commit.", "url": "https://github.com/apache/hbase/pull/1623#discussion_r419105596", "createdAt": "2020-05-03T13:42:14Z", "author": {"login": "wchevreuil"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestSyncTable.java", "diffHunk": "@@ -426,18 +451,19 @@ private Counters syncTables(TableName sourceTableName, TableName targetTableName\n     return syncTable.counters;\n   }\n \n-  private void hashSourceTable(TableName sourceTableName, Path testDir) throws Exception {\n+  private void hashSourceTable(TableName sourceTableName, Path testDir, String... options)\n+      throws Exception {\n     int numHashFiles = 3;\n     long batchSize = 100;  // should be 2 batches per region\n     int scanBatch = 1;\n     HashTable hashTable = new HashTable(TEST_UTIL.getConfiguration());\n-    int code = hashTable.run(new String[] {\n-      \"--batchsize=\" + batchSize,\n-      \"--numhashfiles=\" + numHashFiles,\n-      \"--scanbatch=\" + scanBatch,\n-      sourceTableName.getNameAsString(),\n-      testDir.toString()\n-    });\n+    String[] args = Arrays.copyOf(options, options.length+5);\n+    args[options.length] = \"--batchsize=\" + batchSize;\n+    args[options.length+1] = \"--numhashfiles=\" + numHashFiles;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5OTQ3Mg=="}, "originalCommit": {"oid": "2fb5893a4613251b381c873b8e7d50f31e7d974b"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODUzMTg4OnYy", "diffSide": "RIGHT", "path": "hbase-mapreduce/src/main/java/org/apache/hadoop/hbase/mapreduce/SyncTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMjo1MzoxNlrOGPrz0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMzo0MTo1OVrOGPsLJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5OTYwMQ==", "bodyText": "Seems to duplicate the if-branch above. Could be moved into a separate method.", "url": "https://github.com/apache/hbase/pull/1623#discussion_r419099601", "createdAt": "2020-05-03T12:53:16Z", "author": {"login": "HorizonNet"}, "path": "hbase-mapreduce/src/main/java/org/apache/hadoop/hbase/mapreduce/SyncTable.java", "diffHunk": "@@ -546,6 +567,19 @@ private boolean syncRowCells(Context context, byte[] rowKey, CellScanner sourceC\n               if (put == null) {\n                 put = new Put(rowKey);\n               }\n+              if (ignoreTimestamp) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fb5893a4613251b381c873b8e7d50f31e7d974b"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwNTU3Mw==", "bodyText": "Indeed, fixed on latest commit.", "url": "https://github.com/apache/hbase/pull/1623#discussion_r419105573", "createdAt": "2020-05-03T13:41:59Z", "author": {"login": "wchevreuil"}, "path": "hbase-mapreduce/src/main/java/org/apache/hadoop/hbase/mapreduce/SyncTable.java", "diffHunk": "@@ -546,6 +567,19 @@ private boolean syncRowCells(Context context, byte[] rowKey, CellScanner sourceC\n               if (put == null) {\n                 put = new Put(rowKey);\n               }\n+              if (ignoreTimestamp) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTA5OTYwMQ=="}, "originalCommit": {"oid": "2fb5893a4613251b381c873b8e7d50f31e7d974b"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1850, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}