{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NDE1OTYx", "number": 1731, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzo0NjoyMFrOD95-qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzo1NDowMVrOD-VAXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjM5NjU4OnYy", "diffSide": "RIGHT", "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzo0NjoyMFrOGXrtFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzo0NjoyMFrOGXrtFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ4NjQ4Nw==", "bodyText": "NIT: Can you please remove this additional empty line?", "url": "https://github.com/apache/hbase/pull/1731#discussion_r427486487", "createdAt": "2020-05-19T17:46:20Z", "author": {"login": "HorizonNet"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "diffHunk": "@@ -304,6 +304,56 @@ public void testWithMockedMapReduceWithNoStartRowStopRow() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testScanLimit() throws Exception {\n+    setupCluster();\n+    final TableName tableName = TableName.valueOf(name.getMethodName());\n+    final String snapshotName = tableName + \"Snapshot\";\n+    Table table = null;\n+    try {\n+      if (UTIL.getAdmin().tableExists(tableName)) {\n+        UTIL.deleteTable(tableName);\n+      }\n+\n+      UTIL.createTable(tableName, FAMILIES, new byte[][] { bbb, yyy });\n+\n+      Admin admin = UTIL.getAdmin();\n+\n+      int regionNum = admin.getRegions(tableName).size();\n+      // put some stuff in the table\n+      table = UTIL.getConnection().getTable(tableName);\n+      UTIL.loadTable(table, FAMILIES);\n+\n+      Path rootDir = CommonFSUtils.getRootDir(UTIL.getConfiguration());\n+      FileSystem fs = rootDir.getFileSystem(UTIL.getConfiguration());\n+\n+      SnapshotTestingUtils.createSnapshotAndValidate(admin, tableName, Arrays.asList(FAMILIES),\n+        null, snapshotName, rootDir, fs, true);\n+\n+      Job job = new Job(UTIL.getConfiguration());\n+      Path tmpTableDir = UTIL.getDataTestDirOnTestFS(snapshotName);\n+      // limit the scan\n+      Scan scan = new Scan().setLimit(10);\n+      TableMapReduceUtil.addDependencyJarsForClasses(job.getConfiguration(),\n+        TestTableSnapshotInputFormat.class);\n+\n+      TableMapReduceUtil.initTableSnapshotMapperJob(snapshotName, scan,\n+        RowCounter.RowCounterMapper.class, NullWritable.class, NullWritable.class, job, true,\n+        tmpTableDir);\n+      Assert.assertTrue(job.waitForCompletion(true));\n+      Assert.assertEquals(10 * regionNum,\n+        job.getCounters().findCounter(RowCounter.RowCounterMapper.Counters.ROWS).getValue());\n+    } finally {\n+      if (table != null) {\n+        table.close();\n+      }\n+      UTIL.getAdmin().deleteSnapshot(snapshotName);\n+      UTIL.deleteTable(tableName);\n+      tearDownCluster();\n+    }\n+  }\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c3e4cf90376d34433fb9e782ac4aa8a0d2407e"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Mzc5ODAyOnYy", "diffSide": "RIGHT", "path": "hbase-protocol-shaded/src/main/protobuf/client/Client.proto", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMjo0MzoxOVrOGX5YCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzowNjo0MlrOGYKp1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxMDQ3Mg==", "bodyText": "I thought this is duplicate with ScanRequest protobuf? We already have one field to means \"limit\".", "url": "https://github.com/apache/hbase/pull/1731#discussion_r427710472", "createdAt": "2020-05-20T02:43:19Z", "author": {"login": "infraio"}, "path": "hbase-protocol-shaded/src/main/protobuf/client/Client.proto", "diffHunk": "@@ -274,6 +274,7 @@ message Scan {\n   }\n   optional ReadType readType = 23 [default = DEFAULT];\n   optional bool need_cursor_result = 24 [default = false];\n+  optional uint32 limit = 25;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c3e4cf90376d34433fb9e782ac4aa8a0d2407e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxMTc3Mw==", "bodyText": "Do we need to add a new filed to means \"scan limit\"?", "url": "https://github.com/apache/hbase/pull/1731#discussion_r427711773", "createdAt": "2020-05-20T02:48:43Z", "author": {"login": "infraio"}, "path": "hbase-protocol-shaded/src/main/protobuf/client/Client.proto", "diffHunk": "@@ -274,6 +274,7 @@ message Scan {\n   }\n   optional ReadType readType = 23 [default = DEFAULT];\n   optional bool need_cursor_result = 24 [default = false];\n+  optional uint32 limit = 25;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxMDQ3Mg=="}, "originalCommit": {"oid": "c4c3e4cf90376d34433fb9e782ac4aa8a0d2407e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk5MzU1OA==", "bodyText": "yes, duplicate field may confuse user", "url": "https://github.com/apache/hbase/pull/1731#discussion_r427993558", "createdAt": "2020-05-20T13:06:42Z", "author": {"login": "nyl3532016"}, "path": "hbase-protocol-shaded/src/main/protobuf/client/Client.proto", "diffHunk": "@@ -274,6 +274,7 @@ message Scan {\n   }\n   optional ReadType readType = 23 [default = DEFAULT];\n   optional bool need_cursor_result = 24 [default = false];\n+  optional uint32 limit = 25;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzcxMDQ3Mg=="}, "originalCommit": {"oid": "c4c3e4cf90376d34433fb9e782ac4aa8a0d2407e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTc5MTExOnYy", "diffSide": "RIGHT", "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1NDo0NVrOGYM7MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1NDo0NVrOGYM7MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzMDc2OQ==", "bodyText": "Not needed?", "url": "https://github.com/apache/hbase/pull/1731#discussion_r428030769", "createdAt": "2020-05-20T13:54:45Z", "author": {"login": "infraio"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "diffHunk": "@@ -304,6 +305,57 @@ public void testWithMockedMapReduceWithNoStartRowStopRow() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testScanLimit() throws Exception {\n+    setupCluster();\n+    final TableName tableName = TableName.valueOf(name.getMethodName());\n+    final String snapshotName = tableName + \"Snapshot\";\n+    Table table = null;\n+    try {\n+      UTIL.getConfiguration().setInt(SNAPSHOT_INPUTFORMAT_ROW_LIMIT_PER_INPUTSPLIT, 10);\n+      if (UTIL.getAdmin().tableExists(tableName)) {\n+        UTIL.deleteTable(tableName);\n+      }\n+\n+      UTIL.createTable(tableName, FAMILIES, new byte[][] { bbb, yyy });\n+\n+      Admin admin = UTIL.getAdmin();\n+\n+      int regionNum = admin.getRegions(tableName).size();\n+      // put some stuff in the table\n+      table = UTIL.getConnection().getTable(tableName);\n+      UTIL.loadTable(table, FAMILIES);\n+\n+      Path rootDir = CommonFSUtils.getRootDir(UTIL.getConfiguration());\n+      FileSystem fs = rootDir.getFileSystem(UTIL.getConfiguration());\n+\n+      SnapshotTestingUtils.createSnapshotAndValidate(admin, tableName, Arrays.asList(FAMILIES),\n+        null, snapshotName, rootDir, fs, true);\n+\n+      Job job = new Job(UTIL.getConfiguration());\n+      Path tmpTableDir = UTIL.getDataTestDirOnTestFS(snapshotName);\n+      // limit the scan\n+      Scan scan = new Scan().setLimit(10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dcefa21a7b104590b23cfa0b0cd5f18951f14d6"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjgyNDEwOnYy", "diffSide": "RIGHT", "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzo1Mzo1MVrOGYXSTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNDo1ODo1OFrOGZp17g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwMDUyNQ==", "bodyText": "Does it make sense to move this one to a test initializer method? I see it used in several tests in here.", "url": "https://github.com/apache/hbase/pull/1731#discussion_r428200525", "createdAt": "2020-05-20T17:53:51Z", "author": {"login": "HorizonNet"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "diffHunk": "@@ -304,6 +305,56 @@ public void testWithMockedMapReduceWithNoStartRowStopRow() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testScanLimit() throws Exception {\n+    setupCluster();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "169ab8c062d86fe9109fa4b88079e7e31ba9a25b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQwODY3MQ==", "bodyText": "It is better to submit another PR to fix?after this one merged, I will amend it", "url": "https://github.com/apache/hbase/pull/1731#discussion_r428408671", "createdAt": "2020-05-21T02:17:55Z", "author": {"login": "nyl3532016"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "diffHunk": "@@ -304,6 +305,56 @@ public void testWithMockedMapReduceWithNoStartRowStopRow() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testScanLimit() throws Exception {\n+    setupCluster();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwMDUyNQ=="}, "originalCommit": {"oid": "169ab8c062d86fe9109fa4b88079e7e31ba9a25b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTUzMDI1Mg==", "bodyText": "It's up to you. We can also do it in a separate ticket.", "url": "https://github.com/apache/hbase/pull/1731#discussion_r429530252", "createdAt": "2020-05-23T09:19:00Z", "author": {"login": "HorizonNet"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "diffHunk": "@@ -304,6 +305,56 @@ public void testWithMockedMapReduceWithNoStartRowStopRow() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testScanLimit() throws Exception {\n+    setupCluster();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwMDUyNQ=="}, "originalCommit": {"oid": "169ab8c062d86fe9109fa4b88079e7e31ba9a25b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1MzEzNA==", "bodyText": "Would you like to help merge this PR?  Thanks", "url": "https://github.com/apache/hbase/pull/1731#discussion_r429553134", "createdAt": "2020-05-23T14:58:58Z", "author": {"login": "nyl3532016"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "diffHunk": "@@ -304,6 +305,56 @@ public void testWithMockedMapReduceWithNoStartRowStopRow() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testScanLimit() throws Exception {\n+    setupCluster();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwMDUyNQ=="}, "originalCommit": {"oid": "169ab8c062d86fe9109fa4b88079e7e31ba9a25b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjgyNDYwOnYy", "diffSide": "RIGHT", "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzo1NDowMVrOGYXSoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzo1NDowMVrOGYXSoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODIwMDYwOA==", "bodyText": "Ditto.", "url": "https://github.com/apache/hbase/pull/1731#discussion_r428200608", "createdAt": "2020-05-20T17:54:01Z", "author": {"login": "HorizonNet"}, "path": "hbase-mapreduce/src/test/java/org/apache/hadoop/hbase/mapreduce/TestTableSnapshotInputFormat.java", "diffHunk": "@@ -304,6 +305,56 @@ public void testWithMockedMapReduceWithNoStartRowStopRow() throws Exception {\n     }\n   }\n \n+  @Test\n+  public void testScanLimit() throws Exception {\n+    setupCluster();\n+    final TableName tableName = TableName.valueOf(name.getMethodName());\n+    final String snapshotName = tableName + \"Snapshot\";\n+    Table table = null;\n+    try {\n+      UTIL.getConfiguration().setInt(SNAPSHOT_INPUTFORMAT_ROW_LIMIT_PER_INPUTSPLIT, 10);\n+      if (UTIL.getAdmin().tableExists(tableName)) {\n+        UTIL.deleteTable(tableName);\n+      }\n+\n+      UTIL.createTable(tableName, FAMILIES, new byte[][] { bbb, yyy });\n+\n+      Admin admin = UTIL.getAdmin();\n+\n+      int regionNum = admin.getRegions(tableName).size();\n+      // put some stuff in the table\n+      table = UTIL.getConnection().getTable(tableName);\n+      UTIL.loadTable(table, FAMILIES);\n+\n+      Path rootDir = CommonFSUtils.getRootDir(UTIL.getConfiguration());\n+      FileSystem fs = rootDir.getFileSystem(UTIL.getConfiguration());\n+\n+      SnapshotTestingUtils.createSnapshotAndValidate(admin, tableName, Arrays.asList(FAMILIES),\n+        null, snapshotName, rootDir, fs, true);\n+\n+      Job job = new Job(UTIL.getConfiguration());\n+      Path tmpTableDir = UTIL.getDataTestDirOnTestFS(snapshotName);\n+      Scan scan = new Scan();\n+      TableMapReduceUtil.addDependencyJarsForClasses(job.getConfiguration(),\n+        TestTableSnapshotInputFormat.class);\n+\n+      TableMapReduceUtil.initTableSnapshotMapperJob(snapshotName, scan,\n+        RowCounter.RowCounterMapper.class, NullWritable.class, NullWritable.class, job, true,\n+        tmpTableDir);\n+      Assert.assertTrue(job.waitForCompletion(true));\n+      Assert.assertEquals(10 * regionNum,\n+        job.getCounters().findCounter(RowCounter.RowCounterMapper.Counters.ROWS).getValue());\n+    } finally {\n+      if (table != null) {\n+        table.close();\n+      }\n+      UTIL.getConfiguration().unset(SNAPSHOT_INPUTFORMAT_ROW_LIMIT_PER_INPUTSPLIT);\n+      UTIL.getAdmin().deleteSnapshot(snapshotName);\n+      UTIL.deleteTable(tableName);\n+      tearDownCluster();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "169ab8c062d86fe9109fa4b88079e7e31ba9a25b"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2993, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}