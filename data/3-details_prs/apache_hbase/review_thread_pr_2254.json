{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MjI4MDUw", "number": 2254, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMzo1MzoxMVrOEYU5MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNDoyNTowOFrOEYVNoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTQzNjAxOnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMzo1MzoxMVrOHAmp3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNTo0Njo1MVrOHAoTaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5NTM1OA==", "bodyText": "use a default method here to call unassign(b[]) so that our various implementations can skip including the same.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470395358", "createdAt": "2020-08-14T03:53:11Z", "author": {"login": "busbey"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -784,9 +791,12 @@ default void move(byte[] encodedRegionName, byte[] destServerName) throws IOExce\n    * @param force If <code>true</code>, force unassign (Will remove region from regions-in-transition too if\n    * present. If results in double assignment use hbck -fix to resolve. To be used by experts).\n    * @throws IOException if a remote or network exception occurs\n+   * @deprecated since 2.4.0 and will be removed in 4.0.0. Use {@link #unassign(byte[])}\n+   *   instead.\n+   * @see <a href=\"https://issues.apache.org/jira/browse/HBASE-24875\">HBASE-24875</a>\n    */\n-  void unassign(byte[] regionName, boolean force)\n-      throws IOException;\n+  @Deprecated\n+  void unassign(byte[] regionName, boolean force) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyMjM3Nw==", "bodyText": "Will fix later. Thanks.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470422377", "createdAt": "2020-08-14T05:46:51Z", "author": {"login": "bsglz"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -784,9 +791,12 @@ default void move(byte[] encodedRegionName, byte[] destServerName) throws IOExce\n    * @param force If <code>true</code>, force unassign (Will remove region from regions-in-transition too if\n    * present. If results in double assignment use hbck -fix to resolve. To be used by experts).\n    * @throws IOException if a remote or network exception occurs\n+   * @deprecated since 2.4.0 and will be removed in 4.0.0. Use {@link #unassign(byte[])}\n+   *   instead.\n+   * @see <a href=\"https://issues.apache.org/jira/browse/HBASE-24875\">HBASE-24875</a>\n    */\n-  void unassign(byte[] regionName, boolean force)\n-      throws IOException;\n+  @Deprecated\n+  void unassign(byte[] regionName, boolean force) throws IOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5NTM1OA=="}, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTQzODY1OnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncAdmin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMzo1NDo0NVrOHAmrTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNTo0ODowMFrOHAoUxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5NTcyNQ==", "bodyText": "use a default method here to call unassign(b[]) so that our various implementations can skip including the same.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470395725", "createdAt": "2020-08-14T03:54:45Z", "author": {"login": "busbey"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncAdmin.java", "diffHunk": "@@ -591,7 +596,11 @@\n    * @param forcible If true, force unassign (Will remove region from regions-in-transition too if\n    *          present. If results in double assignment use hbck -fix to resolve. To be used by\n    *          experts).\n+   * @deprecated since 2.4.0 and will be removed in 4.0.0. Use {@link #unassign(byte[])}\n+   *   instead.\n+   * @see <a href=\"https://issues.apache.org/jira/browse/HBASE-24875\">HBASE-24875</a>\n    */\n+  @Deprecated\n   CompletableFuture<Void> unassign(byte[] regionName, boolean forcible);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyMjcyNQ==", "bodyText": "Will fix later. Thanks.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470422725", "createdAt": "2020-08-14T05:48:00Z", "author": {"login": "bsglz"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncAdmin.java", "diffHunk": "@@ -591,7 +596,11 @@\n    * @param forcible If true, force unassign (Will remove region from regions-in-transition too if\n    *          present. If results in double assignment use hbck -fix to resolve. To be used by\n    *          experts).\n+   * @deprecated since 2.4.0 and will be removed in 4.0.0. Use {@link #unassign(byte[])}\n+   *   instead.\n+   * @see <a href=\"https://issues.apache.org/jira/browse/HBASE-24875\">HBASE-24875</a>\n    */\n+  @Deprecated\n   CompletableFuture<Void> unassign(byte[] regionName, boolean forcible);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5NTcyNQ=="}, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTQ0ODE3OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNDowMDoxM1rOHAmwgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNTo1MDozMVrOHAoXXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5NzA1Ng==", "bodyText": "This class is IA.LimitedPrivate, so we could choose to break compat for 2.4.0 and just remove this method for coprocessors.\nIf we are keeping it, when should a coprocessor expect this specific version of preUnassign to get called? would it be called instead of the version without the force parameter or in addition to? These details should be incldued in the javadoc.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470397056", "createdAt": "2020-08-14T04:00:13Z", "author": {"login": "busbey"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java", "diffHunk": "@@ -508,35 +508,57 @@ default void postAssign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n    * Called prior to unassigning a given region.\n    * @param ctx the environment to interact with the framework and master\n    * @param regionInfo\n-   * @param force whether to force unassignment or not\n    */\n   default void preUnassign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n-      final RegionInfo regionInfo, final boolean force) throws IOException {}\n+    final RegionInfo regionInfo) throws IOException {}\n \n   /**\n    * Called after the region unassignment has been requested.\n    * @param ctx the environment to interact with the framework and master\n    * @param regionInfo\n+   */\n+  default void postUnassign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n+    final RegionInfo regionInfo) throws IOException {}\n+\n+  /**\n+   * Called prior to unassigning a given region.\n+   * @param ctx the environment to interact with the framework and master\n+   * @param regionInfo region info\n+   * @param force whether to force unassignment or not\n+   * @deprecated since 2.4.0 and will be removed in 4.0.0.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyMzM4OA==", "bodyText": "Make sense, let's remove it. Thanks.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470423388", "createdAt": "2020-08-14T05:50:31Z", "author": {"login": "bsglz"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java", "diffHunk": "@@ -508,35 +508,57 @@ default void postAssign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n    * Called prior to unassigning a given region.\n    * @param ctx the environment to interact with the framework and master\n    * @param regionInfo\n-   * @param force whether to force unassignment or not\n    */\n   default void preUnassign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n-      final RegionInfo regionInfo, final boolean force) throws IOException {}\n+    final RegionInfo regionInfo) throws IOException {}\n \n   /**\n    * Called after the region unassignment has been requested.\n    * @param ctx the environment to interact with the framework and master\n    * @param regionInfo\n+   */\n+  default void postUnassign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n+    final RegionInfo regionInfo) throws IOException {}\n+\n+  /**\n+   * Called prior to unassigning a given region.\n+   * @param ctx the environment to interact with the framework and master\n+   * @param regionInfo region info\n+   * @param force whether to force unassignment or not\n+   * @deprecated since 2.4.0 and will be removed in 4.0.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5NzA1Ng=="}, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTQ0OTQ1OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNDowMDo0OVrOHAmxHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNTo1MDo1OVrOHAoXzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5NzIxNQ==", "bodyText": "This class is IA.LimitedPrivate, so we could choose to break compat for 2.4.0 and just remove this method for coprocessors.\nIf we are keeping it, when should a coprocessor expect this specific version of postUnassign to get called? would it be called instead of the version without the force parameter or in addition to? These details should be incldued in the javadoc.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470397215", "createdAt": "2020-08-14T04:00:49Z", "author": {"login": "busbey"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java", "diffHunk": "@@ -508,35 +508,57 @@ default void postAssign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n    * Called prior to unassigning a given region.\n    * @param ctx the environment to interact with the framework and master\n    * @param regionInfo\n-   * @param force whether to force unassignment or not\n    */\n   default void preUnassign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n-      final RegionInfo regionInfo, final boolean force) throws IOException {}\n+    final RegionInfo regionInfo) throws IOException {}\n \n   /**\n    * Called after the region unassignment has been requested.\n    * @param ctx the environment to interact with the framework and master\n    * @param regionInfo\n+   */\n+  default void postUnassign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n+    final RegionInfo regionInfo) throws IOException {}\n+\n+  /**\n+   * Called prior to unassigning a given region.\n+   * @param ctx the environment to interact with the framework and master\n+   * @param regionInfo region info\n+   * @param force whether to force unassignment or not\n+   * @deprecated since 2.4.0 and will be removed in 4.0.0.\n+   *   Use {@link #preUnassign(ObserverContext, RegionInfo)} instead.\n+   */\n+  @Deprecated\n+  default void preUnassign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n+    final RegionInfo regionInfo, final boolean force) throws IOException {}\n+\n+  /**\n+   * Called after the region unassignment has been requested.\n+   * @param ctx the environment to interact with the framework and master\n+   * @param regionInfo region info\n    * @param force whether to force unassignment or not\n+   * @deprecated since 2.4.0 and will be removed in 4.0.0.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyMzUwMA==", "bodyText": "Make sense, let's remove it. Thanks.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470423500", "createdAt": "2020-08-14T05:50:59Z", "author": {"login": "bsglz"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java", "diffHunk": "@@ -508,35 +508,57 @@ default void postAssign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n    * Called prior to unassigning a given region.\n    * @param ctx the environment to interact with the framework and master\n    * @param regionInfo\n-   * @param force whether to force unassignment or not\n    */\n   default void preUnassign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n-      final RegionInfo regionInfo, final boolean force) throws IOException {}\n+    final RegionInfo regionInfo) throws IOException {}\n \n   /**\n    * Called after the region unassignment has been requested.\n    * @param ctx the environment to interact with the framework and master\n    * @param regionInfo\n+   */\n+  default void postUnassign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n+    final RegionInfo regionInfo) throws IOException {}\n+\n+  /**\n+   * Called prior to unassigning a given region.\n+   * @param ctx the environment to interact with the framework and master\n+   * @param regionInfo region info\n+   * @param force whether to force unassignment or not\n+   * @deprecated since 2.4.0 and will be removed in 4.0.0.\n+   *   Use {@link #preUnassign(ObserverContext, RegionInfo)} instead.\n+   */\n+  @Deprecated\n+  default void preUnassign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n+    final RegionInfo regionInfo, final boolean force) throws IOException {}\n+\n+  /**\n+   * Called after the region unassignment has been requested.\n+   * @param ctx the environment to interact with the framework and master\n+   * @param regionInfo region info\n    * @param force whether to force unassignment or not\n+   * @deprecated since 2.4.0 and will be removed in 4.0.0.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5NzIxNQ=="}, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTQ1NTY0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNDowNDoyNVrOHAm0fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNTo1NToyM1rOHAocow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5ODA3OA==", "bodyText": "If we keep both preUnassign methods then this default method should call the one that includes a force flag, with the flag set to false. That would allow existing coprocessors to be used as-is without recompiling, would avoid needing to make a second call in the MasterCoprocessorHost, and would be  easy to document in the javadoc for the deprecation.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470398078", "createdAt": "2020-08-14T04:04:25Z", "author": {"login": "busbey"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java", "diffHunk": "@@ -508,35 +508,57 @@ default void postAssign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n    * Called prior to unassigning a given region.\n    * @param ctx the environment to interact with the framework and master\n    * @param regionInfo\n-   * @param force whether to force unassignment or not\n    */\n   default void preUnassign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n-      final RegionInfo regionInfo, final boolean force) throws IOException {}\n+    final RegionInfo regionInfo) throws IOException {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyNDczOQ==", "bodyText": "Will just remove them, since it is IA.LimitedPrivate. Thanks.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470424739", "createdAt": "2020-08-14T05:55:23Z", "author": {"login": "bsglz"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/coprocessor/MasterObserver.java", "diffHunk": "@@ -508,35 +508,57 @@ default void postAssign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n    * Called prior to unassigning a given region.\n    * @param ctx the environment to interact with the framework and master\n    * @param regionInfo\n-   * @param force whether to force unassignment or not\n    */\n   default void preUnassign(final ObserverContext<MasterCoprocessorEnvironment> ctx,\n-      final RegionInfo regionInfo, final boolean force) throws IOException {}\n+    final RegionInfo regionInfo) throws IOException {}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5ODA3OA=="}, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTQ2MDc1OnYy", "diffSide": "RIGHT", "path": "hbase-shell/src/main/ruby/hbase/admin.rb", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNDowNzoxMlrOHAm3Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwMzowMjoyMVrOHIn5BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5ODc5MQ==", "bodyText": "this breaks compatibility for the shell and will need to be release noted. Alternatively you could do the analagous thing as in the Admin apis and deprecate the second parameter by making it optional and stating it is ignored.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470398791", "createdAt": "2020-08-14T04:07:12Z", "author": {"login": "busbey"}, "path": "hbase-shell/src/main/ruby/hbase/admin.rb", "diffHunk": "@@ -537,8 +537,8 @@ def assign(region_name)\n \n     #----------------------------------------------------------------------------------------------\n     # Unassign a region\n-    def unassign(region_name, force)\n-      @admin.unassign(region_name.to_java_bytes, java.lang.Boolean.valueOf(force))\n+    def unassign(region_name)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyODM5OQ==", "bodyText": "Will fix later. Thanks.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470428399", "createdAt": "2020-08-14T06:08:31Z", "author": {"login": "bsglz"}, "path": "hbase-shell/src/main/ruby/hbase/admin.rb", "diffHunk": "@@ -537,8 +537,8 @@ def assign(region_name)\n \n     #----------------------------------------------------------------------------------------------\n     # Unassign a region\n-    def unassign(region_name, force)\n-      @admin.unassign(region_name.to_java_bytes, java.lang.Boolean.valueOf(force))\n+    def unassign(region_name)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5ODc5MQ=="}, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU3MjMzMg==", "bodyText": "this compatibility break is still present. could you correct it similar to how you did for the unassign shell command?", "url": "https://github.com/apache/hbase/pull/2254#discussion_r478572332", "createdAt": "2020-08-27T17:13:03Z", "author": {"login": "busbey"}, "path": "hbase-shell/src/main/ruby/hbase/admin.rb", "diffHunk": "@@ -537,8 +537,8 @@ def assign(region_name)\n \n     #----------------------------------------------------------------------------------------------\n     # Unassign a region\n-    def unassign(region_name, force)\n-      @admin.unassign(region_name.to_java_bytes, java.lang.Boolean.valueOf(force))\n+    def unassign(region_name)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5ODc5MQ=="}, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODgwNDIyOA==", "bodyText": "Fixed, Thanks.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r478804228", "createdAt": "2020-08-28T03:02:21Z", "author": {"login": "bsglz"}, "path": "hbase-shell/src/main/ruby/hbase/admin.rb", "diffHunk": "@@ -537,8 +537,8 @@ def assign(region_name)\n \n     #----------------------------------------------------------------------------------------------\n     # Unassign a region\n-    def unassign(region_name, force)\n-      @admin.unassign(region_name.to_java_bytes, java.lang.Boolean.valueOf(force))\n+    def unassign(region_name)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5ODc5MQ=="}, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTQ2NzU5OnYy", "diffSide": "RIGHT", "path": "hbase-shell/src/main/ruby/shell/commands/unassign.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNDoxMTozNFrOHAm7Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNjowODozNlrOHAorBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5OTc3MQ==", "bodyText": "this breaks compatibility for the shell and will need to be release noted. Alternatively you could keep the optional argument and note that it is deprecated and ignored.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470399771", "createdAt": "2020-08-14T04:11:34Z", "author": {"login": "busbey"}, "path": "hbase-shell/src/main/ruby/shell/commands/unassign.rb", "diffHunk": "@@ -23,23 +23,18 @@ class Unassign < Command\n       def help\n         <<-EOF\n Unassign a region. It could be executed only when region in expected state(OPEN).\n-Pass 'true' to force the unassignment ('force' will clear all in-memory state in\n-master before the reassign. If results in double assignment use hbck -fix to resolve.\n-To be used by experts).\n In addition, you can use \"unassigns\" command available on HBCK2 tool to skip the state check.\n (For more info on HBCK2: https://github.com/apache/hbase-operator-tools/blob/master/hbase-hbck2/README.md)\n Use with caution. For experts only.\n Examples:\n \n   hbase> unassign 'REGIONNAME'\n-  hbase> unassign 'REGIONNAME', true\n   hbase> unassign 'ENCODED_REGIONNAME'\n-  hbase> unassign 'ENCODED_REGIONNAME', true\n EOF\n       end\n \n-      def command(region_name, force = 'false')\n-        admin.unassign(region_name, force)\n+      def command(region_name)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyODQyMQ==", "bodyText": "Will fix later. Thanks.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470428421", "createdAt": "2020-08-14T06:08:36Z", "author": {"login": "bsglz"}, "path": "hbase-shell/src/main/ruby/shell/commands/unassign.rb", "diffHunk": "@@ -23,23 +23,18 @@ class Unassign < Command\n       def help\n         <<-EOF\n Unassign a region. It could be executed only when region in expected state(OPEN).\n-Pass 'true' to force the unassignment ('force' will clear all in-memory state in\n-master before the reassign. If results in double assignment use hbck -fix to resolve.\n-To be used by experts).\n In addition, you can use \"unassigns\" command available on HBCK2 tool to skip the state check.\n (For more info on HBCK2: https://github.com/apache/hbase-operator-tools/blob/master/hbase-hbck2/README.md)\n Use with caution. For experts only.\n Examples:\n \n   hbase> unassign 'REGIONNAME'\n-  hbase> unassign 'REGIONNAME', true\n   hbase> unassign 'ENCODED_REGIONNAME'\n-  hbase> unassign 'ENCODED_REGIONNAME', true\n EOF\n       end\n \n-      def command(region_name, force = 'false')\n-        admin.unassign(region_name, force)\n+      def command(region_name)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM5OTc3MQ=="}, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTQ4MTI0OnYy", "diffSide": "LEFT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/UnassignProcedure.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNDoyMDozM1rOHAnC8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNjoxMToxNlrOHAouGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwMTc3OA==", "bodyText": "we should add a comment to the protobuf definition for  UnassignRegionStateData in MasterProcedure that the field for force is ignored.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470401778", "createdAt": "2020-08-14T04:20:33Z", "author": {"login": "busbey"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/UnassignProcedure.java", "diffHunk": "@@ -80,9 +78,6 @@ protected void serializeStateData(ProcedureStateSerializer serializer) throws IO\n     if (this.destinationServer != null) {\n       state.setDestinationServer(ProtobufUtil.toServerName(destinationServer));\n     }\n-    if (force) {\n-      state.setForce(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyOTIwOQ==", "bodyText": "Will fix later. Thanks.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470429209", "createdAt": "2020-08-14T06:11:16Z", "author": {"login": "bsglz"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/UnassignProcedure.java", "diffHunk": "@@ -80,9 +78,6 @@ protected void serializeStateData(ProcedureStateSerializer serializer) throws IO\n     if (this.destinationServer != null) {\n       state.setDestinationServer(ProtobufUtil.toServerName(destinationServer));\n     }\n-    if (force) {\n-      state.setForce(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwMTc3OA=="}, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTQ4ODMyOnYy", "diffSide": "LEFT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNDoyNTowOVrOHAnG2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNjoxMToyMVrOHAouLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwMjc3Nw==", "bodyText": "we should add a comment in the protobuf defition for UnassignRegionRequest in Master that the field for force is ignored.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470402777", "createdAt": "2020-08-14T04:25:09Z", "author": {"login": "busbey"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java", "diffHunk": "@@ -1697,7 +1697,6 @@ public UnassignRegionResponse unassignRegion(RpcController controller,\n     try {\n       final byte [] regionName = req.getRegion().getValue().toByteArray();\n       RegionSpecifierType type = req.getRegion().getType();\n-      final boolean force = req.getForce();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQyOTIzMA==", "bodyText": "Will fix later. Thanks.", "url": "https://github.com/apache/hbase/pull/2254#discussion_r470429230", "createdAt": "2020-08-14T06:11:21Z", "author": {"login": "bsglz"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/MasterRpcServices.java", "diffHunk": "@@ -1697,7 +1697,6 @@ public UnassignRegionResponse unassignRegion(RpcController controller,\n     try {\n       final byte [] regionName = req.getRegion().getValue().toByteArray();\n       RegionSpecifierType type = req.getRegion().getType();\n-      final boolean force = req.getForce();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQwMjc3Nw=="}, "originalCommit": {"oid": "e388b36c59e2f0365fe59053cc5b5a94dcd71907"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2649, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}