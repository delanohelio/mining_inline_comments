{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MTE1NDkx", "number": 1933, "title": "HBASE-24588 : Submit task for NormalizationPlan", "bodyText": "", "createdAt": "2020-06-19T13:54:54Z", "url": "https://github.com/apache/hbase/pull/1933", "merged": true, "mergeCommit": {"oid": "71af97cd0546e96af1341824c36d36e2eea0dd71"}, "closed": true, "closedAt": "2020-06-26T16:38:53Z", "author": {"login": "virajjasani"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcszY4SgH2gAyNDM3MTE1NDkxOjg2YzQ3NWM1MzkxODRjYTVlODUzYzNlNGRiZTJmNjU2OTc4MTY0M2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvB3hEAH2gAyNDM3MTE1NDkxOjE1YTAwZWU1ZjQwY2QwMGUzMDcxMTgwM2RhZDFmZTYzY2MyNDExZjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "86c475c539184ca5e853c3e4dbe2f6569781643b", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/86c475c539184ca5e853c3e4dbe2f6569781643b", "committedDate": "2020-06-19T13:51:05Z", "message": "HBASE-24588 : Submit task for NormalizationPlan"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MDY0NDc4", "url": "https://github.com/apache/hbase/pull/1933#pullrequestreview-435064478", "createdAt": "2020-06-22T15:59:05Z", "commit": {"oid": "86c475c539184ca5e853c3e4dbe2f6569781643b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTo1OTowNlrOGnHIZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNTo1OTowNlrOGnHIZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY2NDQ4Nw==", "bodyText": "This changes behaviors for normalizer. Can we give some timeout for blocking so it wont block forever if something goes wrong with one of plans?", "url": "https://github.com/apache/hbase/pull/1933#discussion_r443664487", "createdAt": "2020-06-22T15:59:06Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1957,17 +1959,27 @@ public boolean normalizeRegions() throws IOException {\n             continue;\n           }\n \n-          // as of this writing, `plan.execute()` is non-blocking, so there's no artificial rate-\n-          // limiting of merge requests due to this serial loop.\n+          // as of this writing, `plan.submit()` is non-blocking and uses Async Admin APIs to\n+          // submit task , so there's no artificial rate-\n+          // limiting of merge/split requests due to this serial loop.\n           for (NormalizationPlan plan : plans) {\n-            plan.execute(admin);\n+            Future<Void> future = plan.submit(admin);\n+            submittedPlanList.add(future);\n             if (plan.getType() == PlanType.SPLIT) {\n               splitPlanCount++;\n             } else if (plan.getType() == PlanType.MERGE) {\n               mergePlanCount++;\n             }\n           }\n         }\n+        for (Future<?> submittedPlan : submittedPlanList) {\n+          try {\n+            submittedPlan.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86c475c539184ca5e853c3e4dbe2f6569781643b"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MDY1OTE1", "url": "https://github.com/apache/hbase/pull/1933#pullrequestreview-435065915", "createdAt": "2020-06-22T16:00:43Z", "commit": {"oid": "86c475c539184ca5e853c3e4dbe2f6569781643b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNjowMDo0NFrOGnHMvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNjowMDo0NFrOGnHMvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY2NTU5OA==", "bodyText": "Do not see count is being used. Want to add a logging message at the end to see how many plans fail.", "url": "https://github.com/apache/hbase/pull/1933#discussion_r443665598", "createdAt": "2020-06-22T16:00:44Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1957,17 +1959,27 @@ public boolean normalizeRegions() throws IOException {\n             continue;\n           }\n \n-          // as of this writing, `plan.execute()` is non-blocking, so there's no artificial rate-\n-          // limiting of merge requests due to this serial loop.\n+          // as of this writing, `plan.submit()` is non-blocking and uses Async Admin APIs to\n+          // submit task , so there's no artificial rate-\n+          // limiting of merge/split requests due to this serial loop.\n           for (NormalizationPlan plan : plans) {\n-            plan.execute(admin);\n+            Future<Void> future = plan.submit(admin);\n+            submittedPlanList.add(future);\n             if (plan.getType() == PlanType.SPLIT) {\n               splitPlanCount++;\n             } else if (plan.getType() == PlanType.MERGE) {\n               mergePlanCount++;\n             }\n           }\n         }\n+        for (Future<?> submittedPlan : submittedPlanList) {\n+          try {\n+            submittedPlan.get();\n+          } catch (Exception e) {\n+            normalizationPlanFailureCount++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86c475c539184ca5e853c3e4dbe2f6569781643b"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MTA2NTI2", "url": "https://github.com/apache/hbase/pull/1933#pullrequestreview-435106526", "createdAt": "2020-06-22T16:51:27Z", "commit": {"oid": "86c475c539184ca5e853c3e4dbe2f6569781643b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNjo1MToyN1rOGnJF4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzoxMDo1NFrOGnJvmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY5NjYxMA==", "bodyText": "Can this be made final as well?", "url": "https://github.com/apache/hbase/pull/1933#discussion_r443696610", "createdAt": "2020-06-22T16:51:27Z", "author": {"login": "ndimiduk"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncHBaseAdmin.java", "diffHunk": "@@ -1294,7 +1294,7 @@ private void checkAndGetTableName(byte[] encodeRegionName, AtomicReference<Table\n         return;\n       }\n \n-      MergeTableRegionsRequest request = null;\n+      MergeTableRegionsRequest request;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86c475c539184ca5e853c3e4dbe2f6569781643b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcwNDQ2Nw==", "bodyText": "Going through the client's admin interface seems unnecessary for this as well. There's no way, for example, to log the PID of the action procedure that failed (unless it happens to be included in an exception message).\n\nCan the action be taken via the MasterServices interface?\nMaybe it's fine to not wait on these actions, so long as the PIDs are successfully submitted. I wonder what kind of back-pressure the system has, though, if multiple normalizer runs result in 1000's of split/merge actions that can't be completed backing up over time. Right now, our protection against this is the lock against multiple concurrent normalizer runs.", "url": "https://github.com/apache/hbase/pull/1933#discussion_r443704467", "createdAt": "2020-06-22T17:05:36Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1957,17 +1959,27 @@ public boolean normalizeRegions() throws IOException {\n             continue;\n           }\n \n-          // as of this writing, `plan.execute()` is non-blocking, so there's no artificial rate-\n-          // limiting of merge requests due to this serial loop.\n+          // as of this writing, `plan.submit()` is non-blocking and uses Async Admin APIs to\n+          // submit task , so there's no artificial rate-\n+          // limiting of merge/split requests due to this serial loop.\n           for (NormalizationPlan plan : plans) {\n-            plan.execute(admin);\n+            Future<Void> future = plan.submit(admin);\n+            submittedPlanList.add(future);\n             if (plan.getType() == PlanType.SPLIT) {\n               splitPlanCount++;\n             } else if (plan.getType() == PlanType.MERGE) {\n               mergePlanCount++;\n             }\n           }\n         }\n+        for (Future<?> submittedPlan : submittedPlanList) {\n+          try {\n+            submittedPlan.get();\n+          } catch (Exception e) {\n+            normalizationPlanFailureCount++;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY2NTU5OA=="}, "originalCommit": {"oid": "86c475c539184ca5e853c3e4dbe2f6569781643b"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcwNDYyNQ==", "bodyText": "I don't think the counter as a metric will help an operator very much. Regions can split or merge in the background, causing a planed action to fail. The failure should be logged, I think (maybe the normal split/merge pathways do this already? I haven't checked).\nIt would be nice to have a final log message for the normalizer run that says something like \"successfully executed x of y normalization actions.\"", "url": "https://github.com/apache/hbase/pull/1933#discussion_r443704625", "createdAt": "2020-06-22T17:05:53Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -1957,17 +1959,27 @@ public boolean normalizeRegions() throws IOException {\n             continue;\n           }\n \n-          // as of this writing, `plan.execute()` is non-blocking, so there's no artificial rate-\n-          // limiting of merge requests due to this serial loop.\n+          // as of this writing, `plan.submit()` is non-blocking and uses Async Admin APIs to\n+          // submit task , so there's no artificial rate-\n+          // limiting of merge/split requests due to this serial loop.\n           for (NormalizationPlan plan : plans) {\n-            plan.execute(admin);\n+            Future<Void> future = plan.submit(admin);\n+            submittedPlanList.add(future);\n             if (plan.getType() == PlanType.SPLIT) {\n               splitPlanCount++;\n             } else if (plan.getType() == PlanType.MERGE) {\n               mergePlanCount++;\n             }\n           }\n         }\n+        for (Future<?> submittedPlan : submittedPlanList) {\n+          try {\n+            submittedPlan.get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzY2NDQ4Nw=="}, "originalCommit": {"oid": "86c475c539184ca5e853c3e4dbe2f6569781643b"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcwNzI5MA==", "bodyText": "No need for an anonymous class, just use CompletableFuture.completedFuture.", "url": "https://github.com/apache/hbase/pull/1933#discussion_r443707290", "createdAt": "2020-06-22T17:10:54Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/EmptyNormalizationPlan.java", "diffHunk": "@@ -44,7 +45,34 @@ public static EmptyNormalizationPlan getInstance(){\n    * No-op for empty plan.\n    */\n   @Override\n-  public void execute(Admin admin) {\n+  public Future<Void> submit(Admin admin) {\n+    return new Future<Void>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86c475c539184ca5e853c3e4dbe2f6569781643b"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7ab8efc24f7bb8c69a743fe9f3c387e57783627", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/c7ab8efc24f7bb8c69a743fe9f3c387e57783627", "committedDate": "2020-06-22T19:28:13Z", "message": "addressing review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1MjQ2NjEy", "url": "https://github.com/apache/hbase/pull/1933#pullrequestreview-435246612", "createdAt": "2020-06-22T20:24:20Z", "commit": {"oid": "c7ab8efc24f7bb8c69a743fe9f3c387e57783627"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDoyNDoyMFrOGnPszg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDoyNTo0MFrOGnPvvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgwNDg3OA==", "bodyText": "yes please for method references, \ud83d\udc4d", "url": "https://github.com/apache/hbase/pull/1933#discussion_r443804878", "createdAt": "2020-06-22T20:24:20Z", "author": {"login": "ndimiduk"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/RawAsyncHBaseAdmin.java", "diffHunk": "@@ -1304,8 +1304,8 @@ private void checkAndGetTableName(byte[] encodeRegionName, AtomicReference<Table\n       }\n \n       addListener(\n-        this.<MergeTableRegionsRequest, MergeTableRegionsResponse> procedureCall(tableName, request,\n-          (s, c, req, done) -> s.mergeTableRegions(c, req, done), (resp) -> resp.getProcId(),\n+        this.procedureCall(tableName, request,\n+          MasterService.Interface::mergeTableRegions, MergeTableRegionsResponse::getProcId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7ab8efc24f7bb8c69a743fe9f3c387e57783627"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgwNTQzMQ==", "bodyText": "nit: i like to include a unit in these types of constants. i.e., NORMALIZATION_PLAN_WAIT_TIMEOUT_SEC.", "url": "https://github.com/apache/hbase/pull/1933#discussion_r443805431", "createdAt": "2020-06-22T20:25:19Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -473,6 +473,10 @@ public void run() {\n   // Cached clusterId on stand by masters to serve clusterID requests from clients.\n   private final CachedClusterId cachedClusterId;\n \n+  // Split/Merge Normalization plan executes asynchronously and the caller blocks on\n+  // waiting max 5 sec for single plan to complete with success/failure.\n+  private static final int NORMALIZATION_PLAN_WAIT_TIMEOUT = 5;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7ab8efc24f7bb8c69a743fe9f3c387e57783627"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgwNTYzMQ==", "bodyText": "I'm still not convinced we should do this, per my other comment :)", "url": "https://github.com/apache/hbase/pull/1933#discussion_r443805631", "createdAt": "2020-06-22T20:25:40Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/HMaster.java", "diffHunk": "@@ -473,6 +473,10 @@ public void run() {\n   // Cached clusterId on stand by masters to serve clusterID requests from clients.\n   private final CachedClusterId cachedClusterId;\n \n+  // Split/Merge Normalization plan executes asynchronously and the caller blocks on\n+  // waiting max 5 sec for single plan to complete with success/failure.\n+  private static final int NORMALIZATION_PLAN_WAIT_TIMEOUT = 5;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgwNTQzMQ=="}, "originalCommit": {"oid": "c7ab8efc24f7bb8c69a743fe9f3c387e57783627"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66a566b8248e0e8c67bc6ed587c2c479a17826a1", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/66a566b8248e0e8c67bc6ed587c2c479a17826a1", "committedDate": "2020-06-23T14:37:46Z", "message": "use MasterServices to perform split/merge"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc4d0d3fd3ce06ac301dcb279110b1720332967c", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/bc4d0d3fd3ce06ac301dcb279110b1720332967c", "committedDate": "2020-06-24T13:25:47Z", "message": "update comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0071d872c013a6718a428a48c305af085dc6e107", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/0071d872c013a6718a428a48c305af085dc6e107", "committedDate": "2020-06-24T13:30:18Z", "message": "use constant NO_NONCE"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MDMxMTQ0", "url": "https://github.com/apache/hbase/pull/1933#pullrequestreview-437031144", "createdAt": "2020-06-24T21:49:18Z", "commit": {"oid": "0071d872c013a6718a428a48c305af085dc6e107"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMTo0OToxOFrOGokU_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMTo1MTo1N1rOGokZow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5MTQyMA==", "bodyText": "nit: \"means the request was submitted successfully.\"", "url": "https://github.com/apache/hbase/pull/1933#discussion_r445191420", "createdAt": "2020-06-24T21:49:18Z", "author": {"login": "ndimiduk"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/client/Admin.java", "diffHunk": "@@ -833,6 +833,9 @@ void unassign(byte[] regionName, boolean force)\n \n   /**\n    * Invoke region normalizer. Can NOT run for various reasons.  Check logs.\n+   * This is a non-blocking invocation to region normalizer. If return value is true, it means\n+   * the invocation was successful. We need to check logs for the details of which regions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0071d872c013a6718a428a48c305af085dc6e107"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5MjYxMQ==", "bodyText": "@huaxiangsun does the pid -1 carry a special meaning? Just in case...", "url": "https://github.com/apache/hbase/pull/1933#discussion_r445192611", "createdAt": "2020-06-24T21:51:57Z", "author": {"login": "ndimiduk"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/normalizer/EmptyNormalizationPlan.java", "diffHunk": "@@ -44,7 +44,8 @@ public static EmptyNormalizationPlan getInstance(){\n    * No-op for empty plan.\n    */\n   @Override\n-  public void execute(Admin admin) {\n+  public long submit(MasterServices masterServices) throws IOException {\n+    return -1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0071d872c013a6718a428a48c305af085dc6e107"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3ODA2Nzg3", "url": "https://github.com/apache/hbase/pull/1933#pullrequestreview-437806787", "createdAt": "2020-06-25T19:46:43Z", "commit": {"oid": "0071d872c013a6718a428a48c305af085dc6e107"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15a00ee5f40cd00e30711803dad1fe63cc2411f8", "author": {"user": {"login": "virajjasani", "name": "Viraj Jasani"}}, "url": "https://github.com/apache/hbase/commit/15a00ee5f40cd00e30711803dad1fe63cc2411f8", "committedDate": "2020-06-26T11:51:04Z", "message": "addressing review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4360, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}