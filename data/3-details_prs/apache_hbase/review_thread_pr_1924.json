{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NzkyNzA4", "number": 1924, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzoyMzo0NlrOEHqgDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzoyNToxM1rOEHqh_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDcxODIzOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzoyMzo0NlrOGnKKwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDowODoyNFrOGnPNUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxNDI0MQ==", "bodyText": "This is a mistake then? Master is the authority. If it can't make a call on read replicas, then read replicas are not done right?", "url": "https://github.com/apache/hbase/pull/1924#discussion_r443714241", "createdAt": "2020-06-22T17:23:46Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure.java", "diffHunk": "@@ -338,6 +345,35 @@ protected Flow executeFromState(MasterProcedureEnv env, RegionStateTransitionSta\n     try {\n       switch (state) {\n         case REGION_STATE_TRANSITION_GET_ASSIGN_CANDIDATE:\n+\n+          // Need to do some sanity check for replica region, if the region does not exist at file\n+          // system, do not try to assign the replica region, log error and return.\n+          // Do not rely on master's in-memory state, primary region got its own life, it can be\n+          // closed, offline for various reasons.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3650719184e325c2c241ea1f640befef9c9488ad"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczNTQ3Mw==", "bodyText": "Probably you are right here. The defense in master can be changed to check its in-memory data structures, if master is not aware of the primary region, then there is something wrong. I will move this check to region server' region open.", "url": "https://github.com/apache/hbase/pull/1924#discussion_r443735473", "createdAt": "2020-06-22T18:03:04Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure.java", "diffHunk": "@@ -338,6 +345,35 @@ protected Flow executeFromState(MasterProcedureEnv env, RegionStateTransitionSta\n     try {\n       switch (state) {\n         case REGION_STATE_TRANSITION_GET_ASSIGN_CANDIDATE:\n+\n+          // Need to do some sanity check for replica region, if the region does not exist at file\n+          // system, do not try to assign the replica region, log error and return.\n+          // Do not rely on master's in-memory state, primary region got its own life, it can be\n+          // closed, offline for various reasons.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxNDI0MQ=="}, "originalCommit": {"oid": "3650719184e325c2c241ea1f640befef9c9488ad"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc5NjgxNw==", "bodyText": "Updated to check primary region's inmemory state for defense.", "url": "https://github.com/apache/hbase/pull/1924#discussion_r443796817", "createdAt": "2020-06-22T20:08:24Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure.java", "diffHunk": "@@ -338,6 +345,35 @@ protected Flow executeFromState(MasterProcedureEnv env, RegionStateTransitionSta\n     try {\n       switch (state) {\n         case REGION_STATE_TRANSITION_GET_ASSIGN_CANDIDATE:\n+\n+          // Need to do some sanity check for replica region, if the region does not exist at file\n+          // system, do not try to assign the replica region, log error and return.\n+          // Do not rely on master's in-memory state, primary region got its own life, it can be\n+          // closed, offline for various reasons.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxNDI0MQ=="}, "originalCommit": {"oid": "3650719184e325c2c241ea1f640befef9c9488ad"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDcyMzE5OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzoyNToxM1rOGnKN7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzo0ODoxOFrOGnK90Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxNTA1NA==", "bodyText": "Ouch.\nWe need follow-on to fix read replicas so Master is authority?", "url": "https://github.com/apache/hbase/pull/1924#discussion_r443715054", "createdAt": "2020-06-22T17:25:13Z", "author": {"login": "saintstack"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure.java", "diffHunk": "@@ -338,6 +345,35 @@ protected Flow executeFromState(MasterProcedureEnv env, RegionStateTransitionSta\n     try {\n       switch (state) {\n         case REGION_STATE_TRANSITION_GET_ASSIGN_CANDIDATE:\n+\n+          // Need to do some sanity check for replica region, if the region does not exist at file\n+          // system, do not try to assign the replica region, log error and return.\n+          // Do not rely on master's in-memory state, primary region got its own life, it can be\n+          // closed, offline for various reasons.\n+          if (!RegionReplicaUtil.isDefaultReplica(regionNode.getRegionInfo())) {\n+            MasterFileSystem mfs = env.getMasterServices().getMasterFileSystem();\n+            RegionInfo replicaRI = regionNode.getRegionInfo();\n+            Path tableDir = CommonFSUtils.getTableDir(mfs.getRootDir(), regionNode.getTable());\n+            Path regionDir = FSUtils.getRegionDirFromTableDir(tableDir, replicaRI);\n+            FileSystem fs = mfs.getFileSystem();\n+            // Check if primary region directory exists\n+            if (!fs.exists(regionDir)) {\n+              LOG.error(\n+                \"Cannot assign replica region {} because its primary region {} does not exist\"\n+                  + \" at Filesystem\", replicaRI,\n+                ServerRegionReplicaUtil.getRegionInfoForDefaultReplica(replicaRI));\n+              return Flow.NO_MORE_STATE;\n+            }\n+            // check if .regionInfo exists in primary region\n+            Path regionInfoFile = new Path(regionDir, HRegionFileSystem.REGION_INFO_FILE);\n+            if (!fs.exists(regionInfoFile)) {\n+              LOG.error(\n+                \"Cannot assign replica region {} because region info file does not exist in its\"\n+                  + \" primary region {}\", replicaRI,\n+                ServerRegionReplicaUtil.getRegionInfoForDefaultReplica(replicaRI));\n+              return Flow.NO_MORE_STATE;\n+            }\n+          }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3650719184e325c2c241ea1f640befef9c9488ad"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcyNzMxMw==", "bodyText": "Yeah, this is planned. Hbck2 needs work to fix any inconsistency for read replica, including but not limited to 1). Check consistency for replica regions (holes/overlaps). Jiras need to be created.", "url": "https://github.com/apache/hbase/pull/1924#discussion_r443727313", "createdAt": "2020-06-22T17:48:18Z", "author": {"login": "huaxiangsun"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/master/assignment/TransitRegionStateProcedure.java", "diffHunk": "@@ -338,6 +345,35 @@ protected Flow executeFromState(MasterProcedureEnv env, RegionStateTransitionSta\n     try {\n       switch (state) {\n         case REGION_STATE_TRANSITION_GET_ASSIGN_CANDIDATE:\n+\n+          // Need to do some sanity check for replica region, if the region does not exist at file\n+          // system, do not try to assign the replica region, log error and return.\n+          // Do not rely on master's in-memory state, primary region got its own life, it can be\n+          // closed, offline for various reasons.\n+          if (!RegionReplicaUtil.isDefaultReplica(regionNode.getRegionInfo())) {\n+            MasterFileSystem mfs = env.getMasterServices().getMasterFileSystem();\n+            RegionInfo replicaRI = regionNode.getRegionInfo();\n+            Path tableDir = CommonFSUtils.getTableDir(mfs.getRootDir(), regionNode.getTable());\n+            Path regionDir = FSUtils.getRegionDirFromTableDir(tableDir, replicaRI);\n+            FileSystem fs = mfs.getFileSystem();\n+            // Check if primary region directory exists\n+            if (!fs.exists(regionDir)) {\n+              LOG.error(\n+                \"Cannot assign replica region {} because its primary region {} does not exist\"\n+                  + \" at Filesystem\", replicaRI,\n+                ServerRegionReplicaUtil.getRegionInfoForDefaultReplica(replicaRI));\n+              return Flow.NO_MORE_STATE;\n+            }\n+            // check if .regionInfo exists in primary region\n+            Path regionInfoFile = new Path(regionDir, HRegionFileSystem.REGION_INFO_FILE);\n+            if (!fs.exists(regionInfoFile)) {\n+              LOG.error(\n+                \"Cannot assign replica region {} because region info file does not exist in its\"\n+                  + \" primary region {}\", replicaRI,\n+                ServerRegionReplicaUtil.getRegionInfoForDefaultReplica(replicaRI));\n+              return Flow.NO_MORE_STATE;\n+            }\n+          }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcxNTA1NA=="}, "originalCommit": {"oid": "3650719184e325c2c241ea1f640befef9c9488ad"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2839, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}