{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxODIzMjA5", "number": 1761, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjowMzoyOVrOD-7Rjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzowNzo0OVrOEAtGlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzA5NDU0OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationStatus.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjowMzoyOVrOGZUtHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjowMzoyOVrOGZUtHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIwNjgxNQ==", "bodyText": "Although 10s seems more than enough time, we can use Waiter.wait() / HBASE_TESTING_UTILITY.waitFor() with predicate to check if loadSink.getTimestampsOfLastAppliedOp()>loadSink.getTimestampStarted().", "url": "https://github.com/apache/hbase/pull/1761#discussion_r429206815", "createdAt": "2020-05-22T12:03:29Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationStatus.java", "diffHunk": "@@ -120,6 +124,28 @@ public void testReplicationStatus() throws Exception {\n     assertEquals(PEER_ID2, rLoadSourceList.get(0).getPeerID());\n   }\n \n+  @Test\n+  public void testReplicationStatusSink() throws Exception {\n+    try (Admin hbaseAdmin = UTIL2.getConnection().getAdmin()) {\n+      ServerName server = UTIL2.getHBaseCluster().getRegionServer(0).getServerName();\n+      ReplicationLoadSink loadSink = getLatestSinkMetric(hbaseAdmin, server);\n+      //First checks if status of timestamp of last applied op is same as RS start, since no edits\n+      //were replicated yet\n+      assertEquals(loadSink.getTimestampStarted(), loadSink.getTimestampsOfLastAppliedOp());\n+      //now insert some rows on source, so that it gets delivered to target\n+      insertRowsOnSource();\n+      Thread.sleep(10000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54444c76cfe176cb51844ad8451c78ff97805341"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MzEzNDE1OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsSink.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxODo1NlrOGZVFsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMjoxODo1NlrOGZVFsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTIxMzEwNA==", "bodyText": "nit: Gets the total number of OPs delivered to this sink would be better? WDYT?", "url": "https://github.com/apache/hbase/pull/1761#discussion_r429213104", "createdAt": "2020-05-22T12:18:56Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsSink.java", "diffHunk": "@@ -98,4 +99,21 @@ public long getAgeOfLastAppliedOp() {\n   public long getTimestampOfLastAppliedOp() {\n     return this.lastTimestampForAge;\n   }\n+\n+  /**\n+   * Gets the time stamp from when the Sink was initialized.\n+   * @return startTimestamp\n+   */\n+  public long getStartTimestamp() {\n+    return startTimestamp;\n+  }\n+\n+  /**\n+   * Gets the total number of OPs delivered to target by this sink.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54444c76cfe176cb51844ad8451c78ff97805341"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTYzNjEwOnYy", "diffSide": "RIGHT", "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationStatus.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMzoyMToxNVrOGZsaxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMzoyMToxNVrOGZsaxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5NTMzNA==", "bodyText": "Want to keep it 10s instead of 100s? :)", "url": "https://github.com/apache/hbase/pull/1761#discussion_r429595334", "createdAt": "2020-05-24T03:21:15Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/test/java/org/apache/hadoop/hbase/replication/TestReplicationStatus.java", "diffHunk": "@@ -120,6 +124,35 @@ public void testReplicationStatus() throws Exception {\n     assertEquals(PEER_ID2, rLoadSourceList.get(0).getPeerID());\n   }\n \n+  @Test\n+  public void testReplicationStatusSink() throws Exception {\n+    try (Admin hbaseAdmin = UTIL2.getConnection().getAdmin()) {\n+      ServerName server = UTIL2.getHBaseCluster().getRegionServer(0).getServerName();\n+      ReplicationLoadSink loadSink = getLatestSinkMetric(hbaseAdmin, server);\n+      //First checks if status of timestamp of last applied op is same as RS start, since no edits\n+      //were replicated yet\n+      assertEquals(loadSink.getTimestampStarted(), loadSink.getTimestampsOfLastAppliedOp());\n+      //now insert some rows on source, so that it gets delivered to target\n+      insertRowsOnSource();\n+      long wait = Waiter.waitFor(UTIL2.getConfiguration(),\n+        100000, new Waiter.Predicate<Exception>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64a3888f78f70619ffca60ee1407730aae9d86ad"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NjgxNzA2OnYy", "diffSide": "RIGHT", "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsSink.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxOTowMDo1OVrOGbY9Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxOTowMDo1OVrOGbY9Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTM3MzYzNA==", "bodyText": "Add this to stay consistent to the other getters here.", "url": "https://github.com/apache/hbase/pull/1761#discussion_r431373634", "createdAt": "2020-05-27T19:00:59Z", "author": {"login": "HorizonNet"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/MetricsSink.java", "diffHunk": "@@ -98,4 +99,21 @@ public long getAgeOfLastAppliedOp() {\n   public long getTimestampOfLastAppliedOp() {\n     return this.lastTimestampForAge;\n   }\n+\n+  /**\n+   * Gets the time stamp from when the Sink was initialized.\n+   * @return startTimestamp\n+   */\n+  public long getStartTimestamp() {\n+    return startTimestamp;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b9f46cc1dd64fcfc763f67d8c07be45d078e9ec"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTc0NDIzOnYy", "diffSide": "RIGHT", "path": "hbase-shell/src/main/ruby/hbase/admin.rb", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzowNzo0OVrOGcJr9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMzoxMjoxNVrOGcJxRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MjAyMA==", "bodyText": "nit: Can drop the wrapping parens", "url": "https://github.com/apache/hbase/pull/1761#discussion_r432172020", "createdAt": "2020-05-28T23:07:49Z", "author": {"login": "joshelser"}, "path": "hbase-shell/src/main/ruby/hbase/admin.rb", "diffHunk": "@@ -835,12 +835,16 @@ def status(format, type)\n           r_source_string = '       SOURCE:'\n           r_load_sink = sl.getReplicationLoadSink\n           next if r_load_sink.nil?\n+          if (r_load_sink.getTimestampsOfLastAppliedOp() == r_load_sink.getTimeStampStarted())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b9f46cc1dd64fcfc763f67d8c07be45d078e9ec"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MzM4Mg==", "bodyText": "A comment here would also be very appreciated (e.g \"If we have applied no operations since we've started replication, assume that we're not acting as a sink and don't print the normal information\")", "url": "https://github.com/apache/hbase/pull/1761#discussion_r432173382", "createdAt": "2020-05-28T23:12:15Z", "author": {"login": "joshelser"}, "path": "hbase-shell/src/main/ruby/hbase/admin.rb", "diffHunk": "@@ -835,12 +835,16 @@ def status(format, type)\n           r_source_string = '       SOURCE:'\n           r_load_sink = sl.getReplicationLoadSink\n           next if r_load_sink.nil?\n+          if (r_load_sink.getTimestampsOfLastAppliedOp() == r_load_sink.getTimeStampStarted())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE3MjAyMA=="}, "originalCommit": {"oid": "5b9f46cc1dd64fcfc763f67d8c07be45d078e9ec"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3032, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}