{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MTg4NDA0", "number": 2118, "title": "HBASE-24758 Avoid flooding replication source RSes logs when no sinks\u2026", "bodyText": "\u2026 are available", "createdAt": "2020-07-22T15:21:52Z", "url": "https://github.com/apache/hbase/pull/2118", "merged": true, "mergeCommit": {"oid": "8c0d7fa5b8971de8bc7062675ba96a6091263776"}, "closed": true, "closedAt": "2020-07-27T09:08:14Z", "author": {"login": "wchevreuil"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3cbbWgH2gAyNDU1MTg4NDA0OjU5MzcyYzdjMDVjNDlmMzIyMDA4MzEwOTk5ZGM4MWVhNGY4ZTk5NDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4AfjFAH2gAyNDU1MTg4NDA0OmI5ZTdiNzRhMmE4YmZjMjUyODYzMWI0NTMxNWM2YTcwYzM5N2E5Njk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "59372c7c05c49f322008310999dc81ea4f8e9944", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/59372c7c05c49f322008310999dc81ea4f8e9944", "committedDate": "2020-07-22T15:19:13Z", "message": "HBASE-24758 Avoid flooding replication source RSes logs when no sinks are available\n\nChange-Id: I642250ad3b9c958de93c7b34d5435c6523df4641"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDc2MDU1", "url": "https://github.com/apache/hbase/pull/2118#pullrequestreview-453476055", "createdAt": "2020-07-22T16:17:54Z", "commit": {"oid": "59372c7c05c49f322008310999dc81ea4f8e9944"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoxNzo1NVrOG1p7Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoyNDo1NFrOG1qSvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNDYzMQ==", "bodyText": "nit, parameterized logging", "url": "https://github.com/apache/hbase/pull/2118#discussion_r458914631", "createdAt": "2020-07-22T16:17:55Z", "author": {"login": "joshelser"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint.java", "diffHunk": "@@ -513,8 +514,14 @@ public boolean replicate(ReplicateContext replicateContext) {\n \n     int numSinks = replicationSinkMgr.getNumSinks();\n     if (numSinks == 0) {\n-      LOG.warn(\"{} No replication sinks found, returning without replicating. \"\n-        + \"The source should retry with the same set of edits.\", logPeerId());\n+      if((System.currentTimeMillis() - lastSinkFetchTime) >= (maxRetriesMultiplier*1000)) {\n+        LOG.warn(\n+          \"No replication sinks found, returning without replicating. \"\n+            + \"The source should retry with the same set of edits. Not logging this again for \"\n+            + \"the next \" + maxRetriesMultiplier + \" seconds.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59372c7c05c49f322008310999dc81ea4f8e9944"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNjYwNg==", "bodyText": "JVM will initialize this to zero which is of consequence to the log message (will make sure that you get the LOG.warn the first time).\nExplicitly initialize it here so with a comment so we know that?", "url": "https://github.com/apache/hbase/pull/2118#discussion_r458916606", "createdAt": "2020-07-22T16:20:50Z", "author": {"login": "joshelser"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint.java", "diffHunk": "@@ -127,6 +127,7 @@\n   private boolean dropOnDeletedTables;\n   private boolean dropOnDeletedColumnFamilies;\n   private boolean isSerial = false;\n+  private long lastSinkFetchTime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59372c7c05c49f322008310999dc81ea4f8e9944"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkxNzAyMA==", "bodyText": "Might it be helpful to include which peer (in the case that we have multiple) here?", "url": "https://github.com/apache/hbase/pull/2118#discussion_r458917020", "createdAt": "2020-07-22T16:21:25Z", "author": {"login": "joshelser"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/HBaseInterClusterReplicationEndpoint.java", "diffHunk": "@@ -513,8 +514,14 @@ public boolean replicate(ReplicateContext replicateContext) {\n \n     int numSinks = replicationSinkMgr.getNumSinks();\n     if (numSinks == 0) {\n-      LOG.warn(\"{} No replication sinks found, returning without replicating. \"\n-        + \"The source should retry with the same set of edits.\", logPeerId());\n+      if((System.currentTimeMillis() - lastSinkFetchTime) >= (maxRetriesMultiplier*1000)) {\n+        LOG.warn(\n+          \"No replication sinks found, returning without replicating. \"\n+            + \"The source should retry with the same set of edits. Not logging this again for \"\n+            + \"the next \" + maxRetriesMultiplier + \" seconds.\");\n+        lastSinkFetchTime = System.currentTimeMillis();\n+      }\n+      sleepForRetries(\"No sinks available at peer\", sleepMultiplier);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59372c7c05c49f322008310999dc81ea4f8e9944"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkyMDYzOQ==", "bodyText": "Doesn't look like HBaseReplicationEndpoint ever returns null. Guarding against custom endpoint implementations?\nWe should expose getRegionServers on a base-class or interface and explicitly say that we expect a non-null answer. Follow-on..\nIf easy, this would be good to write a quick unit test to cover this method.", "url": "https://github.com/apache/hbase/pull/2118#discussion_r458920639", "createdAt": "2020-07-22T16:24:54Z", "author": {"login": "joshelser"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSinkManager.java", "diffHunk": "@@ -150,9 +151,14 @@ public synchronized void reportSinkSuccess(SinkPeer sinkPeer) {\n    */\n   public synchronized void chooseSinks() {\n     List<ServerName> slaveAddresses = endpoint.getRegionServers();\n-    Collections.shuffle(slaveAddresses, ThreadLocalRandom.current());\n-    int numSinks = (int) Math.ceil(slaveAddresses.size() * ratio);\n-    sinks = slaveAddresses.subList(0, numSinks);\n+    if(slaveAddresses==null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59372c7c05c49f322008310999dc81ea4f8e9944"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzNDg0NDI2", "url": "https://github.com/apache/hbase/pull/2118#pullrequestreview-453484426", "createdAt": "2020-07-22T16:24:54Z", "commit": {"oid": "59372c7c05c49f322008310999dc81ea4f8e9944"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoyNDo1NFrOG1qSxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNjoyNDo1NFrOG1qSxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODkyMDY0NA==", "bodyText": "Further down in setRegionServers(fetchSlavesAddresses(this.getZkw())), fetchSlavesAddresses()is not returning null, but empty list. So maybe we can safely log warning for if(slaveAddresses.size()==0) ?", "url": "https://github.com/apache/hbase/pull/2118#discussion_r458920644", "createdAt": "2020-07-22T16:24:54Z", "author": {"login": "virajjasani"}, "path": "hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSinkManager.java", "diffHunk": "@@ -150,9 +151,14 @@ public synchronized void reportSinkSuccess(SinkPeer sinkPeer) {\n    */\n   public synchronized void chooseSinks() {\n     List<ServerName> slaveAddresses = endpoint.getRegionServers();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59372c7c05c49f322008310999dc81ea4f8e9944"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22ba3628d461102f5ad40a27d2580a8f3d5bb8b1", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/22ba3628d461102f5ad40a27d2580a8f3d5bb8b1", "committedDate": "2020-07-23T16:35:19Z", "message": "Addressing review comments\n\nChange-Id: I275a01a090472bf9dcf95f89db4407021f778151"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NDE5Njcx", "url": "https://github.com/apache/hbase/pull/2118#pullrequestreview-454419671", "createdAt": "2020-07-23T19:08:33Z", "commit": {"oid": "22ba3628d461102f5ad40a27d2580a8f3d5bb8b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NjcyNDE2", "url": "https://github.com/apache/hbase/pull/2118#pullrequestreview-454672416", "createdAt": "2020-07-24T07:06:26Z", "commit": {"oid": "22ba3628d461102f5ad40a27d2580a8f3d5bb8b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9e7b74a2a8bfc2528631b45315c6a70c397a969", "author": {"user": null}, "url": "https://github.com/apache/hbase/commit/b9e7b74a2a8bfc2528631b45315c6a70c397a969", "committedDate": "2020-07-24T09:20:18Z", "message": "addressing last checkstyle issue\n\nChange-Id: I7e8b07e6215451bd288523b7c07e0104e90dcdd9"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4047, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}