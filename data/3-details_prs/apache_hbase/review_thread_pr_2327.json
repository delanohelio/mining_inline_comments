{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NzM0NDE2", "number": 2327, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozODozMlrOEkIx4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozODozMlrOEkIx4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzI4MDMyOnYy", "diffSide": "RIGHT", "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeerConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozODozMlrOHS5RuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozODozMlrOHS5RuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3NDg0MA==", "bodyText": "nit: just use this.configuration directly?", "url": "https://github.com/apache/hbase/pull/2327#discussion_r489574840", "createdAt": "2020-09-16T16:38:32Z", "author": {"login": "bharathv"}, "path": "hbase-client/src/main/java/org/apache/hadoop/hbase/replication/ReplicationPeerConfig.java", "diffHunk": "@@ -99,6 +105,36 @@ public ReplicationPeerConfig setBandwidth(long bandwidth) {\n     return this;\n   }\n \n+  /**\n+   * Helper method to add base peer configs from Configuration to ReplicationPeerConfig\n+   * if not present in latter.\n+   *\n+   * This merges the user supplied peer configuration\n+   * {@link org.apache.hadoop.hbase.replication.ReplicationPeerConfig} with peer configs\n+   * provided as property hbase.replication.peer.base.configs in hbase configuration.\n+   * Expected format for this hbase configuration is \"k1=v1;k2=v2,v2_1\". Original value\n+   * of conf is retained if already present in ReplicationPeerConfig.\n+   *\n+   * @param conf Configuration\n+   */\n+  public void addBasePeerConfigsIfNotPresent(Configuration conf) {\n+    String basePeerConfigs = conf.get(HBASE_REPLICATION_PEER_BASE_CONFIG, \"\");\n+    Map<String,String> receivedPeerConfigMap = this.getConfiguration();\n+\n+    if (basePeerConfigs.length() != 0) {\n+      Map<String, String> basePeerConfigMap = Splitter.on(';').trimResults().omitEmptyStrings()\n+        .withKeyValueSeparator(\"=\").split(basePeerConfigs);\n+      for (Map.Entry<String,String> entry : basePeerConfigMap.entrySet()) {\n+        String configName = entry.getKey();\n+        String configValue = entry.getValue();\n+        // Only override if base config does not exist in existing replication peer configs\n+        if (!receivedPeerConfigMap.containsKey(configName)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d558c30f67174c0007c91155462c7caf7ec22da6"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2585, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}