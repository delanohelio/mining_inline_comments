{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzOTkyODY3", "number": 3373, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzowNjowNVrOFCCCpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzowNjowNVrOFCCCpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Njc0OTE5OnYy", "diffSide": "RIGHT", "path": "artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/broker/AMQPLargeMessage.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzowNjowNVrOIA-3Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzoyMzo1M1rOIA_ctQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkwMDgxOA==", "bodyText": "Thinking there might be a spelling error here", "url": "https://github.com/apache/activemq-artemis/pull/3373#discussion_r537900818", "createdAt": "2020-12-07T23:06:05Z", "author": {"login": "tabish121"}, "path": "artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/broker/AMQPLargeMessage.java", "diffHunk": "@@ -362,6 +348,62 @@ public void addBytes(ReadableBuffer data) throws Exception {\n       }\n    }\n \n+   protected void parseLargeMessage(ActiveMQBuffer data, boolean initialHeader) {\n+      MessageDataScanningStatus status = getDataScanningStatus();\n+      if (status == MessageDataScanningStatus.NOT_SCANNED) {\n+         ByteBuf buffer = data.byteBuf().duplicate();\n+         if (parsingBuffer == null) {\n+            parsingBuffer = new CompositeReadableBuffer();\n+         }\n+\n+         byte[] parsingData = new byte[buffer.readableBytes()];\n+         buffer.readBytes(parsingData);\n+         parsingBuffer.append(parsingData);\n+         if (!initialHeader) {\n+            genericPargeLargeMessage();\n+         }\n+      }\n+   }\n+\n+   protected void parseLargeMessage(byte[] data, boolean initialHeader) {\n+      MessageDataScanningStatus status = getDataScanningStatus();\n+      if (status == MessageDataScanningStatus.NOT_SCANNED) {\n+         byte[] copy = new byte[data.length];\n+         System.arraycopy(data, 0, copy, 0, data.length);\n+         if (parsingBuffer == null) {\n+            parsingBuffer = new CompositeReadableBuffer();\n+         }\n+         parsingBuffer.append(copy);\n+         if (!initialHeader) {\n+            genericPargeLargeMessage();\n+         }\n+      }\n+   }\n+\n+   private void genericPargeLargeMessage() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "678244cf4f36ffb5c090ee4a49cd0e00158a602e"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkwODUxOA==", "bodyText": "yeah.. thanks", "url": "https://github.com/apache/activemq-artemis/pull/3373#discussion_r537908518", "createdAt": "2020-12-07T23:22:04Z", "author": {"login": "clebertsuconic"}, "path": "artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/broker/AMQPLargeMessage.java", "diffHunk": "@@ -362,6 +348,62 @@ public void addBytes(ReadableBuffer data) throws Exception {\n       }\n    }\n \n+   protected void parseLargeMessage(ActiveMQBuffer data, boolean initialHeader) {\n+      MessageDataScanningStatus status = getDataScanningStatus();\n+      if (status == MessageDataScanningStatus.NOT_SCANNED) {\n+         ByteBuf buffer = data.byteBuf().duplicate();\n+         if (parsingBuffer == null) {\n+            parsingBuffer = new CompositeReadableBuffer();\n+         }\n+\n+         byte[] parsingData = new byte[buffer.readableBytes()];\n+         buffer.readBytes(parsingData);\n+         parsingBuffer.append(parsingData);\n+         if (!initialHeader) {\n+            genericPargeLargeMessage();\n+         }\n+      }\n+   }\n+\n+   protected void parseLargeMessage(byte[] data, boolean initialHeader) {\n+      MessageDataScanningStatus status = getDataScanningStatus();\n+      if (status == MessageDataScanningStatus.NOT_SCANNED) {\n+         byte[] copy = new byte[data.length];\n+         System.arraycopy(data, 0, copy, 0, data.length);\n+         if (parsingBuffer == null) {\n+            parsingBuffer = new CompositeReadableBuffer();\n+         }\n+         parsingBuffer.append(copy);\n+         if (!initialHeader) {\n+            genericPargeLargeMessage();\n+         }\n+      }\n+   }\n+\n+   private void genericPargeLargeMessage() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkwMDgxOA=="}, "originalCommit": {"oid": "678244cf4f36ffb5c090ee4a49cd0e00158a602e"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkxMDQ1Mw==", "bodyText": "fixed", "url": "https://github.com/apache/activemq-artemis/pull/3373#discussion_r537910453", "createdAt": "2020-12-07T23:23:53Z", "author": {"login": "clebertsuconic"}, "path": "artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/broker/AMQPLargeMessage.java", "diffHunk": "@@ -362,6 +348,62 @@ public void addBytes(ReadableBuffer data) throws Exception {\n       }\n    }\n \n+   protected void parseLargeMessage(ActiveMQBuffer data, boolean initialHeader) {\n+      MessageDataScanningStatus status = getDataScanningStatus();\n+      if (status == MessageDataScanningStatus.NOT_SCANNED) {\n+         ByteBuf buffer = data.byteBuf().duplicate();\n+         if (parsingBuffer == null) {\n+            parsingBuffer = new CompositeReadableBuffer();\n+         }\n+\n+         byte[] parsingData = new byte[buffer.readableBytes()];\n+         buffer.readBytes(parsingData);\n+         parsingBuffer.append(parsingData);\n+         if (!initialHeader) {\n+            genericPargeLargeMessage();\n+         }\n+      }\n+   }\n+\n+   protected void parseLargeMessage(byte[] data, boolean initialHeader) {\n+      MessageDataScanningStatus status = getDataScanningStatus();\n+      if (status == MessageDataScanningStatus.NOT_SCANNED) {\n+         byte[] copy = new byte[data.length];\n+         System.arraycopy(data, 0, copy, 0, data.length);\n+         if (parsingBuffer == null) {\n+            parsingBuffer = new CompositeReadableBuffer();\n+         }\n+         parsingBuffer.append(copy);\n+         if (!initialHeader) {\n+            genericPargeLargeMessage();\n+         }\n+      }\n+   }\n+\n+   private void genericPargeLargeMessage() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkwMDgxOA=="}, "originalCommit": {"oid": "678244cf4f36ffb5c090ee4a49cd0e00158a602e"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3933, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}