{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNTQwNDYz", "number": 3172, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozMDowMVrOED9tzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwODo0NjoxMFrOEH37VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTkyMzMzOnYy", "diffSide": "RIGHT", "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "isResolved": false, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozMDowMVrOGhSymA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTowMjoyOFrOGiOmEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2NDA1Ng==", "bodyText": "Should think about applying the same to all, e.g. if now null set back to default for address setting (or static default) else some users will get different behaviour of what update does per queue config. We should have uniform behaviour across all. E.g. if support here should have similar logic ob all. And also def requires doc updates, and a call out in behaviour changes in release notes", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r437564056", "createdAt": "2020-06-09T16:30:01Z", "author": {"login": "michaelandrepearce"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -689,7 +689,10 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                queue.setDelayBeforeDispatch(queueConfiguration.getDelayBeforeDispatch().longValue());\n             }\n             Filter filter = FilterImpl.createFilter(queueConfiguration.getFilterString());\n-            if (filter != null && !filter.equals(queue.getFilter())) {\n+            if ((filter == null) && (queue.getFilter() != null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9430a0ab952cb78f6e50a16223c3289e4a3d9b26"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg5MjI4OQ==", "bodyText": "I've added the config reload test.\nI'm not sure about what you mean by the default behavior. Shall I add some sort of constant (like DEFAULT_FILTER) or just document the fact that there's no filter by default and that setting it to null (by removing it from the configuration) or to \"\" reverts it back to the default value?", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r437892289", "createdAt": "2020-06-10T06:41:08Z", "author": {"login": "jsmucr"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -689,7 +689,10 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                queue.setDelayBeforeDispatch(queueConfiguration.getDelayBeforeDispatch().longValue());\n             }\n             Filter filter = FilterImpl.createFilter(queueConfiguration.getFilterString());\n-            if (filter != null && !filter.equals(queue.getFilter())) {\n+            if ((filter == null) && (queue.getFilter() != null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2NDA1Ng=="}, "originalCommit": {"oid": "9430a0ab952cb78f6e50a16223c3289e4a3d9b26"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkwNDczMQ==", "bodyText": "I was meaning other queue configurations that you can update e.g like the one immediately above delaybeforedispatch. E.g. if change of behaviour from currently if null do not update, now youre proposing to make it if null set back to default which for filter is null. We would want that behaviour consistent. Else we end up with some ignoring and some reverting.\nIts very important behaviour is consistent for all, so either all do nothing when new value is null (ignore) current behaviour before your proposed change or all update back to their defaults (being either the default at address setting or where a default constant its used)", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r437904731", "createdAt": "2020-06-10T07:09:37Z", "author": {"login": "michaelandrepearce"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -689,7 +689,10 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                queue.setDelayBeforeDispatch(queueConfiguration.getDelayBeforeDispatch().longValue());\n             }\n             Filter filter = FilterImpl.createFilter(queueConfiguration.getFilterString());\n-            if (filter != null && !filter.equals(queue.getFilter())) {\n+            if ((filter == null) && (queue.getFilter() != null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2NDA1Ng=="}, "originalCommit": {"oid": "9430a0ab952cb78f6e50a16223c3289e4a3d9b26"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1OTY3MA==", "bodyText": "I see. I'll take look at that.", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r437959670", "createdAt": "2020-06-10T08:41:51Z", "author": {"login": "jsmucr"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -689,7 +689,10 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                queue.setDelayBeforeDispatch(queueConfiguration.getDelayBeforeDispatch().longValue());\n             }\n             Filter filter = FilterImpl.createFilter(queueConfiguration.getFilterString());\n-            if (filter != null && !filter.equals(queue.getFilter())) {\n+            if ((filter == null) && (queue.getFilter() != null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2NDA1Ng=="}, "originalCommit": {"oid": "9430a0ab952cb78f6e50a16223c3289e4a3d9b26"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk3MzEzMA==", "bodyText": "Hm, I must have overlooked the fact that the other properties behave the same too.\nIs the behavior I propose a correct one? Or is there a reason for ignoring null values?\nNow that it's obvious - even to me :-) - that the issue is a lot broader, shall I continue with implementing the rest here or would that be a whole new pull request?\nMy use case in an automatic cluster configuration deployment and the current behavior sort of breaks the idea.", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r437973130", "createdAt": "2020-06-10T09:02:41Z", "author": {"login": "jsmucr"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -689,7 +689,10 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                queue.setDelayBeforeDispatch(queueConfiguration.getDelayBeforeDispatch().longValue());\n             }\n             Filter filter = FilterImpl.createFilter(queueConfiguration.getFilterString());\n-            if (filter != null && !filter.equals(queue.getFilter())) {\n+            if ((filter == null) && (queue.getFilter() != null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2NDA1Ng=="}, "originalCommit": {"oid": "9430a0ab952cb78f6e50a16223c3289e4a3d9b26"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEyMzMxMw==", "bodyText": "So question here is what is the challenge you have right now? Btw i dont work for a service provider but actually an arch at a financial firm that uses artemis (been using for many yrs), and we manage alot of the broker configuration automatically so be interesting what challenge you have which we havent had to solve.", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r438123313", "createdAt": "2020-06-10T13:31:11Z", "author": {"login": "michaelpearce-gain"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -689,7 +689,10 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                queue.setDelayBeforeDispatch(queueConfiguration.getDelayBeforeDispatch().longValue());\n             }\n             Filter filter = FilterImpl.createFilter(queueConfiguration.getFilterString());\n-            if (filter != null && !filter.equals(queue.getFilter())) {\n+            if ((filter == null) && (queue.getFilter() != null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2NDA1Ng=="}, "originalCommit": {"oid": "9430a0ab952cb78f6e50a16223c3289e4a3d9b26"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEyMzcyNw==", "bodyText": "The idea of the null checks, is so that you update just a partial part, e,g, if i only wanted to update say exclusive consumer, i wouldnt have to know all the rest of the config. And there for the update had to be a positive (e.g. it was set) change, to avoid an accident. Maybe could be that the approach here is to use \"\" empty string as a single its a positive change, e.g. theres a difference semantically in that its been set to \"\" its not null, and there for then could use that to clear it.", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r438123727", "createdAt": "2020-06-10T13:31:47Z", "author": {"login": "michaelpearce-gain"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -689,7 +689,10 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                queue.setDelayBeforeDispatch(queueConfiguration.getDelayBeforeDispatch().longValue());\n             }\n             Filter filter = FilterImpl.createFilter(queueConfiguration.getFilterString());\n-            if (filter != null && !filter.equals(queue.getFilter())) {\n+            if ((filter == null) && (queue.getFilter() != null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2NDA1Ng=="}, "originalCommit": {"oid": "9430a0ab952cb78f6e50a16223c3289e4a3d9b26"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI1MzA4NQ==", "bodyText": "Looking further, you could probably safely apply the null thing on all of them, if you defaulted values (the same was as one on create) using maybe somewhere around line 633 (essentially before the checks)\n     QueueConfigurationUtils.applyDynamicQueueDefaults(queueConfiguration, addressSettingsRepository.getMatch(queueConfiguration.getAddress().toString()));", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r438253085", "createdAt": "2020-06-10T16:23:19Z", "author": {"login": "michaelpearce-gain"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -689,7 +689,10 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                queue.setDelayBeforeDispatch(queueConfiguration.getDelayBeforeDispatch().longValue());\n             }\n             Filter filter = FilterImpl.createFilter(queueConfiguration.getFilterString());\n-            if (filter != null && !filter.equals(queue.getFilter())) {\n+            if ((filter == null) && (queue.getFilter() != null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2NDA1Ng=="}, "originalCommit": {"oid": "9430a0ab952cb78f6e50a16223c3289e4a3d9b26"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI1NTQ2Mw==", "bodyText": "I can actually see same issue with trying to clear groupFirstKey, e.g. you can't clear it, so i understand your issue, just trying to think how to achieve this unilaterally and safely. Def needs docs what ever we do.", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r438255463", "createdAt": "2020-06-10T16:26:58Z", "author": {"login": "michaelpearce-gain"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -689,7 +689,10 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                queue.setDelayBeforeDispatch(queueConfiguration.getDelayBeforeDispatch().longValue());\n             }\n             Filter filter = FilterImpl.createFilter(queueConfiguration.getFilterString());\n-            if (filter != null && !filter.equals(queue.getFilter())) {\n+            if ((filter == null) && (queue.getFilter() != null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2NDA1Ng=="}, "originalCommit": {"oid": "9430a0ab952cb78f6e50a16223c3289e4a3d9b26"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU0Mzg4OA==", "bodyText": "Clearing the value using \"\" does not work, at least not for a filter.\n//...\npublic static Filter createFilter(final SimpleString filterStr) throws ActiveMQException {\n      if (filterStr == null || filterStr.length() == 0) {\n         return null;\n      }\n// ...\n\nSo there would have to be a breaking change anyway, just to achieve this.\nI understand the issue with resetting the whole configuration. Maybe there could be a toggle to enable this.\nI'm working for a cloud-based EDI provider and our ultimate goal is to have all of our infrastructure configurable via Ansible (or similar tools) so that in case of a major failure there'd be no need to perform too many manual steps in order to rebuild the service from scratch. That makes the Ansible repository the only place to store our configuration, and therefore it would be highly beneficial if I could redeploy the Artemis configuration from there. :-) It would also open the way to create a bit more user friendly tool to design the MQ related infrastructure.\nI'd be happy to hear about the way you do it in your company. :-)", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r438543888", "createdAt": "2020-06-11T05:02:28Z", "author": {"login": "jsmucr"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -689,7 +689,10 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                queue.setDelayBeforeDispatch(queueConfiguration.getDelayBeforeDispatch().longValue());\n             }\n             Filter filter = FilterImpl.createFilter(queueConfiguration.getFilterString());\n-            if (filter != null && !filter.equals(queue.getFilter())) {\n+            if ((filter == null) && (queue.getFilter() != null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2NDA1Ng=="}, "originalCommit": {"oid": "9430a0ab952cb78f6e50a16223c3289e4a3d9b26"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODA2MTYwOnYy", "diffSide": "RIGHT", "path": "tests/integration-tests/src/test/resources/reload-queue-filter-updated-empty.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzoxMzowMlrOGhnrww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwODowMzoyMVrOGhpe3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkwNjM3MQ==", "bodyText": "This isnt filtering. I would expect the test to be a real filter string not an empty one. Empty filter is same as no filter so this isnt validating much", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r437906371", "createdAt": "2020-06-10T07:13:02Z", "author": {"login": "michaelandrepearce"}, "path": "tests/integration-tests/src/test/resources/reload-queue-filter-updated-empty.xml", "diffHunk": "@@ -0,0 +1,43 @@\n+<?xml version='1.0'?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<configuration xmlns=\"urn:activemq\"\n+               xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+               xsi:schemaLocation=\"urn:activemq /schema/artemis-configuration.xsd\">\n+\n+   <core xmlns=\"urn:activemq:core\">\n+      <security-enabled>false</security-enabled>\n+      <persistence-enabled>false</persistence-enabled>\n+\n+      <acceptors>\n+         <acceptor name=\"artemis\">tcp://0.0.0.0:61616</acceptor>\n+      </acceptors>\n+\n+      <addresses>\n+         <address name=\"myFilterQueue\">\n+            <anycast>\n+               <queue name=\"myFilterQueue\">\n+                  <filter string=\"\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7506071a15081c81be1cc77f1b5f0fed92c553b"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkzNTgzNg==", "bodyText": "The doTestRemoveFilter method first applies the reload-queue-filter.xml configuration that has the filter set up correctly, then tests if it works and after that it applies the intended modification (either reload-queue-filter-updated-empty.xml or reload-queue-filter-removed.xml).", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r437935836", "createdAt": "2020-06-10T08:03:21Z", "author": {"login": "jsmucr"}, "path": "tests/integration-tests/src/test/resources/reload-queue-filter-updated-empty.xml", "diffHunk": "@@ -0,0 +1,43 @@\n+<?xml version='1.0'?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<configuration xmlns=\"urn:activemq\"\n+               xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+               xsi:schemaLocation=\"urn:activemq /schema/artemis-configuration.xsd\">\n+\n+   <core xmlns=\"urn:activemq:core\">\n+      <security-enabled>false</security-enabled>\n+      <persistence-enabled>false</persistence-enabled>\n+\n+      <acceptors>\n+         <acceptor name=\"artemis\">tcp://0.0.0.0:61616</acceptor>\n+      </acceptors>\n+\n+      <addresses>\n+         <address name=\"myFilterQueue\">\n+            <anycast>\n+               <queue name=\"myFilterQueue\">\n+                  <filter string=\"\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkwNjM3MQ=="}, "originalCommit": {"oid": "b7506071a15081c81be1cc77f1b5f0fed92c553b"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODA3MjUzOnYy", "diffSide": "RIGHT", "path": "tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzoxNjozN1rOGhnyeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzoxNjozN1rOGhnyeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkwODA5MA==", "bodyText": "I would expect the test to first validate a filter works and queueimpl has filter matching with a real filter, then reload config and validate both the queueimpl is null and now no filtering is applied on flow. To vaildate update does indeed remove a filter if previously set.", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r437908090", "createdAt": "2020-06-10T07:16:37Z", "author": {"login": "michaelandrepearce"}, "path": "tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java", "diffHunk": "@@ -287,6 +287,99 @@ public void run() {\n       }\n    }\n \n+   private void doTestRemoveFilter(URL testConfiguration) throws Exception {\n+\n+      Path brokerXML = getTestDirfile().toPath().resolve(\"broker.xml\");\n+\n+      URL baseConfig = RedeployTest.class.getClassLoader().getResource(\"reload-queue-filter.xml\");\n+\n+      Files.copy(baseConfig.openStream(), brokerXML, StandardCopyOption.REPLACE_EXISTING);\n+\n+      EmbeddedActiveMQ embeddedActiveMQ = new EmbeddedActiveMQ();\n+      embeddedActiveMQ.setConfigResourcePath(brokerXML.toUri().toString());\n+      embeddedActiveMQ.start();\n+\n+      final ReusableLatch latch = new ReusableLatch(1);\n+\n+      Runnable tick = new Runnable() {\n+         @Override\n+         public void run() {\n+            latch.countDown();\n+         }\n+      };\n+\n+      try {\n+\n+         embeddedActiveMQ.getActiveMQServer().getReloadManager().setTick(tick);\n+         latch.await(10, TimeUnit.SECONDS);\n+\n+         try (ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory();\n+              Connection connection = factory.createConnection();\n+              Session session = connection.createSession(Session.AUTO_ACKNOWLEDGE)) {\n+\n+            connection.start();\n+            Queue queue = session.createQueue(\"myFilterQueue\");\n+            MessageProducer producer = session.createProducer(queue);\n+\n+            Message passingMessage = session.createMessage();\n+            passingMessage.setStringProperty(\"x\", \"x\");\n+            producer.send(passingMessage);\n+\n+            Message filteredMessage = session.createMessage();\n+            filteredMessage.setStringProperty(\"x\", \"y\");\n+            producer.send(filteredMessage);\n+\n+            MessageConsumer consumer = session.createConsumer(queue);\n+            Message receivedMessage = consumer.receive(2000);\n+            assertNotNull(receivedMessage);\n+            assertEquals(\"x\", receivedMessage.getStringProperty(\"x\"));\n+\n+            assertNull(consumer.receive(2000));\n+\n+            consumer.close();\n+         }\n+\n+         Files.copy(testConfiguration.openStream(), brokerXML, StandardCopyOption.REPLACE_EXISTING);\n+         brokerXML.toFile().setLastModified(System.currentTimeMillis() + 1000);\n+\n+         latch.setCount(1);\n+         embeddedActiveMQ.getActiveMQServer().getReloadManager().setTick(tick);\n+         latch.await(10, TimeUnit.SECONDS);\n+\n+         try (ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory();\n+              Connection connection = factory.createConnection();\n+              Session session = connection.createSession(Session.AUTO_ACKNOWLEDGE)) {\n+\n+            connection.start();\n+            Queue queue = session.createQueue(\"myFilterQueue\");\n+            MessageProducer producer = session.createProducer(queue);\n+\n+            Message message1 = session.createMessage();\n+            message1.setStringProperty(\"x\", \"x\");\n+            producer.send(message1);\n+\n+            Message message2 = session.createMessage();\n+            message2.setStringProperty(\"x\", \"y\");\n+            producer.send(message2);\n+\n+            MessageConsumer consumer = session.createConsumer(queue);\n+            assertNotNull(consumer.receive(2000));\n+            assertNotNull(consumer.receive(2000));\n+\n+            consumer.close();\n+         }\n+\n+      } finally {\n+         embeddedActiveMQ.stop();\n+      }\n+   }\n+\n+   @Test\n+   public void testRedeployRemoveFilter() throws Exception {\n+      doTestRemoveFilter(RedeployTest.class.getClassLoader().getResource(\"reload-queue-filter-updated-empty.xml\"));\n+      doTestRemoveFilter(RedeployTest.class.getClassLoader().getResource(\"reload-queue-filter-removed.xml\"));\n+   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7506071a15081c81be1cc77f1b5f0fed92c553b"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjQ1OTMwOnYy", "diffSide": "RIGHT", "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoyMDoyMVrOGiTS7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoyMDo1M1rOGiTUTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyMDkwOA==", "bodyText": "So to get defaults, should be using the address settings.\nTheres actually a common method that does this thats used else where, as its quite common\n QueueConfigurationUtils.applyDynamicQueueDefaults(queueConfiguration, addressSettingsRepository.getMatch(queueConfiguration.getAddress().toString()));\n\nThis then will correctly set defaults on everything in the queueConfiguration", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r438620908", "createdAt": "2020-06-11T08:20:21Z", "author": {"login": "michaelpearce-gain"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -647,66 +649,121 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                }\n             }\n \n-            //atomic update\n-            if (queueConfiguration.getMaxConsumers() != null && queue.getMaxConsumers() != queueConfiguration.getMaxConsumers().intValue()) {\n+            // atomic update, reset to defaults if value == null\n+            // maxConsumers\n+            final int newMaxConsumers = queueConfiguration.getMaxConsumers() == null\n+                    ? ActiveMQDefaultConfiguration.getDefaultMaxQueueConsumers()\n+                    : queueConfiguration.getMaxConsumers();\n+            if (queue.getMaxConsumers() != newMaxConsumers) {\n                changed = true;\n-               queue.setMaxConsumer(queueConfiguration.getMaxConsumers());\n+               queue.setMaxConsumer(newMaxConsumers);\n             }\n-            if (queueConfiguration.getRoutingType() != null && queue.getRoutingType() != queueConfiguration.getRoutingType()) {\n+            // routingType\n+            final RoutingType newRoutingType = queueConfiguration.getRoutingType() == null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93cb9ff582c880aeaa6badeab727c6b65a828299"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyMTI2MQ==", "bodyText": "e.g. you could just do this once before the section of atomic updates.", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r438621261", "createdAt": "2020-06-11T08:20:53Z", "author": {"login": "michaelpearce-gain"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -647,66 +649,121 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                }\n             }\n \n-            //atomic update\n-            if (queueConfiguration.getMaxConsumers() != null && queue.getMaxConsumers() != queueConfiguration.getMaxConsumers().intValue()) {\n+            // atomic update, reset to defaults if value == null\n+            // maxConsumers\n+            final int newMaxConsumers = queueConfiguration.getMaxConsumers() == null\n+                    ? ActiveMQDefaultConfiguration.getDefaultMaxQueueConsumers()\n+                    : queueConfiguration.getMaxConsumers();\n+            if (queue.getMaxConsumers() != newMaxConsumers) {\n                changed = true;\n-               queue.setMaxConsumer(queueConfiguration.getMaxConsumers());\n+               queue.setMaxConsumer(newMaxConsumers);\n             }\n-            if (queueConfiguration.getRoutingType() != null && queue.getRoutingType() != queueConfiguration.getRoutingType()) {\n+            // routingType\n+            final RoutingType newRoutingType = queueConfiguration.getRoutingType() == null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyMDkwOA=="}, "originalCommit": {"oid": "93cb9ff582c880aeaa6badeab727c6b65a828299"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NjkxNzk3OnYy", "diffSide": "RIGHT", "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/server/impl/QueueImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwODo0NjoxMFrOGnfcrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwODo0NjoxMFrOGnfcrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2Mjg5Mg==", "bodyText": "can you rebase, this is already fixed in master", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r444062892", "createdAt": "2020-06-23T08:46:10Z", "author": {"login": "michaelpearce-gain"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/server/impl/QueueImpl.java", "diffHunk": "@@ -3954,7 +3954,7 @@ public QueueConfiguration getQueueConfiguration() {\n          .setAddress(address)\n          .setId(id)\n          .setRoutingType(routingType)\n-         .setFilterString(filter.getFilterString())\n+         .setFilterString(filter == null ? null : filter.getFilterString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b274f2e083842f87dd9a7395d6640205147228ca"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3961, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}