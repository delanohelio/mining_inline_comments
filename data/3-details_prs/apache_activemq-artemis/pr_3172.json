{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNTQwNDYz", "number": 3172, "title": "ARTEMIS-2797 - Reset queue properties by unsetting them in broker.xml", "bodyText": "Now it is possible to remove queue filter by setting it to an empty string or null.\nBefore this commit the server would just ignore such request.\nEDIT: This pull request turned out to cover the ability to reset all queue properties, not just the filter string.", "createdAt": "2020-06-09T05:11:39Z", "url": "https://github.com/apache/activemq-artemis/pull/3172", "merged": true, "mergeCommit": {"oid": "b9eca3000890473fd52efe6e0bdf4d7a7c717a10"}, "closed": true, "closedAt": "2020-06-23T10:19:59Z", "author": {"login": "jsmucr"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpnqyygFqTQyNzM0MDA0OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuB_2tgBqjM0NzIwMTQwNTU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MzQwMDQ4", "url": "https://github.com/apache/activemq-artemis/pull/3172#pullrequestreview-427340048", "createdAt": "2020-06-09T16:30:01Z", "commit": {"oid": "9430a0ab952cb78f6e50a16223c3289e4a3d9b26"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozMDowMVrOGhSymA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNjozMDowMVrOGhSymA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU2NDA1Ng==", "bodyText": "Should think about applying the same to all, e.g. if now null set back to default for address setting (or static default) else some users will get different behaviour of what update does per queue config. We should have uniform behaviour across all. E.g. if support here should have similar logic ob all. And also def requires doc updates, and a call out in behaviour changes in release notes", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r437564056", "createdAt": "2020-06-09T16:30:01Z", "author": {"login": "michaelandrepearce"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -689,7 +689,10 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                queue.setDelayBeforeDispatch(queueConfiguration.getDelayBeforeDispatch().longValue());\n             }\n             Filter filter = FilterImpl.createFilter(queueConfiguration.getFilterString());\n-            if (filter != null && !filter.equals(queue.getFilter())) {\n+            if ((filter == null) && (queue.getFilter() != null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9430a0ab952cb78f6e50a16223c3289e4a3d9b26"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NzY4OTgw", "url": "https://github.com/apache/activemq-artemis/pull/3172#pullrequestreview-427768980", "createdAt": "2020-06-10T07:13:02Z", "commit": {"oid": "b7506071a15081c81be1cc77f1b5f0fed92c553b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzoxMzowMlrOGhnrww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzoxMzowMlrOGhnrww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkwNjM3MQ==", "bodyText": "This isnt filtering. I would expect the test to be a real filter string not an empty one. Empty filter is same as no filter so this isnt validating much", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r437906371", "createdAt": "2020-06-10T07:13:02Z", "author": {"login": "michaelandrepearce"}, "path": "tests/integration-tests/src/test/resources/reload-queue-filter-updated-empty.xml", "diffHunk": "@@ -0,0 +1,43 @@\n+<?xml version='1.0'?>\n+<!--\n+Licensed to the Apache Software Foundation (ASF) under one\n+or more contributor license agreements.  See the NOTICE file\n+distributed with this work for additional information\n+regarding copyright ownership.  The ASF licenses this file\n+to you under the Apache License, Version 2.0 (the\n+\"License\"); you may not use this file except in compliance\n+with the License.  You may obtain a copy of the License at\n+\n+  http://www.apache.org/licenses/LICENSE-2.0\n+\n+Unless required by applicable law or agreed to in writing,\n+software distributed under the License is distributed on an\n+\"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+KIND, either express or implied.  See the License for the\n+specific language governing permissions and limitations\n+under the License.\n+-->\n+\n+<configuration xmlns=\"urn:activemq\"\n+               xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+               xsi:schemaLocation=\"urn:activemq /schema/artemis-configuration.xsd\">\n+\n+   <core xmlns=\"urn:activemq:core\">\n+      <security-enabled>false</security-enabled>\n+      <persistence-enabled>false</persistence-enabled>\n+\n+      <acceptors>\n+         <acceptor name=\"artemis\">tcp://0.0.0.0:61616</acceptor>\n+      </acceptors>\n+\n+      <addresses>\n+         <address name=\"myFilterQueue\">\n+            <anycast>\n+               <queue name=\"myFilterQueue\">\n+                  <filter string=\"\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7506071a15081c81be1cc77f1b5f0fed92c553b"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3NzcxMTIw", "url": "https://github.com/apache/activemq-artemis/pull/3172#pullrequestreview-427771120", "createdAt": "2020-06-10T07:16:37Z", "commit": {"oid": "b7506071a15081c81be1cc77f1b5f0fed92c553b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzoxNjozN1rOGhnyeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNzoxNjozN1rOGhnyeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkwODA5MA==", "bodyText": "I would expect the test to first validate a filter works and queueimpl has filter matching with a real filter, then reload config and validate both the queueimpl is null and now no filtering is applied on flow. To vaildate update does indeed remove a filter if previously set.", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r437908090", "createdAt": "2020-06-10T07:16:37Z", "author": {"login": "michaelandrepearce"}, "path": "tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/jms/RedeployTest.java", "diffHunk": "@@ -287,6 +287,99 @@ public void run() {\n       }\n    }\n \n+   private void doTestRemoveFilter(URL testConfiguration) throws Exception {\n+\n+      Path brokerXML = getTestDirfile().toPath().resolve(\"broker.xml\");\n+\n+      URL baseConfig = RedeployTest.class.getClassLoader().getResource(\"reload-queue-filter.xml\");\n+\n+      Files.copy(baseConfig.openStream(), brokerXML, StandardCopyOption.REPLACE_EXISTING);\n+\n+      EmbeddedActiveMQ embeddedActiveMQ = new EmbeddedActiveMQ();\n+      embeddedActiveMQ.setConfigResourcePath(brokerXML.toUri().toString());\n+      embeddedActiveMQ.start();\n+\n+      final ReusableLatch latch = new ReusableLatch(1);\n+\n+      Runnable tick = new Runnable() {\n+         @Override\n+         public void run() {\n+            latch.countDown();\n+         }\n+      };\n+\n+      try {\n+\n+         embeddedActiveMQ.getActiveMQServer().getReloadManager().setTick(tick);\n+         latch.await(10, TimeUnit.SECONDS);\n+\n+         try (ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory();\n+              Connection connection = factory.createConnection();\n+              Session session = connection.createSession(Session.AUTO_ACKNOWLEDGE)) {\n+\n+            connection.start();\n+            Queue queue = session.createQueue(\"myFilterQueue\");\n+            MessageProducer producer = session.createProducer(queue);\n+\n+            Message passingMessage = session.createMessage();\n+            passingMessage.setStringProperty(\"x\", \"x\");\n+            producer.send(passingMessage);\n+\n+            Message filteredMessage = session.createMessage();\n+            filteredMessage.setStringProperty(\"x\", \"y\");\n+            producer.send(filteredMessage);\n+\n+            MessageConsumer consumer = session.createConsumer(queue);\n+            Message receivedMessage = consumer.receive(2000);\n+            assertNotNull(receivedMessage);\n+            assertEquals(\"x\", receivedMessage.getStringProperty(\"x\"));\n+\n+            assertNull(consumer.receive(2000));\n+\n+            consumer.close();\n+         }\n+\n+         Files.copy(testConfiguration.openStream(), brokerXML, StandardCopyOption.REPLACE_EXISTING);\n+         brokerXML.toFile().setLastModified(System.currentTimeMillis() + 1000);\n+\n+         latch.setCount(1);\n+         embeddedActiveMQ.getActiveMQServer().getReloadManager().setTick(tick);\n+         latch.await(10, TimeUnit.SECONDS);\n+\n+         try (ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory();\n+              Connection connection = factory.createConnection();\n+              Session session = connection.createSession(Session.AUTO_ACKNOWLEDGE)) {\n+\n+            connection.start();\n+            Queue queue = session.createQueue(\"myFilterQueue\");\n+            MessageProducer producer = session.createProducer(queue);\n+\n+            Message message1 = session.createMessage();\n+            message1.setStringProperty(\"x\", \"x\");\n+            producer.send(message1);\n+\n+            Message message2 = session.createMessage();\n+            message2.setStringProperty(\"x\", \"y\");\n+            producer.send(message2);\n+\n+            MessageConsumer consumer = session.createConsumer(queue);\n+            assertNotNull(consumer.receive(2000));\n+            assertNotNull(consumer.receive(2000));\n+\n+            consumer.close();\n+         }\n+\n+      } finally {\n+         embeddedActiveMQ.stop();\n+      }\n+   }\n+\n+   @Test\n+   public void testRedeployRemoveFilter() throws Exception {\n+      doTestRemoveFilter(RedeployTest.class.getClassLoader().getResource(\"reload-queue-filter-updated-empty.xml\"));\n+      doTestRemoveFilter(RedeployTest.class.getClassLoader().getResource(\"reload-queue-filter-removed.xml\"));\n+   }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7506071a15081c81be1cc77f1b5f0fed92c553b"}, "originalPosition": 95}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjkyOTg5", "url": "https://github.com/apache/activemq-artemis/pull/3172#pullrequestreview-428692989", "createdAt": "2020-06-11T08:20:20Z", "commit": {"oid": "93cb9ff582c880aeaa6badeab727c6b65a828299"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoyMDoyMVrOGiTS7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODoyMDoyMVrOGiTS7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYyMDkwOA==", "bodyText": "So to get defaults, should be using the address settings.\nTheres actually a common method that does this thats used else where, as its quite common\n QueueConfigurationUtils.applyDynamicQueueDefaults(queueConfiguration, addressSettingsRepository.getMatch(queueConfiguration.getAddress().toString()));\n\nThis then will correctly set defaults on everything in the queueConfiguration", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r438620908", "createdAt": "2020-06-11T08:20:21Z", "author": {"login": "michaelpearce-gain"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/postoffice/impl/PostOfficeImpl.java", "diffHunk": "@@ -647,66 +649,121 @@ public QueueBinding updateQueue(QueueConfiguration queueConfiguration) throws Ex\n                }\n             }\n \n-            //atomic update\n-            if (queueConfiguration.getMaxConsumers() != null && queue.getMaxConsumers() != queueConfiguration.getMaxConsumers().intValue()) {\n+            // atomic update, reset to defaults if value == null\n+            // maxConsumers\n+            final int newMaxConsumers = queueConfiguration.getMaxConsumers() == null\n+                    ? ActiveMQDefaultConfiguration.getDefaultMaxQueueConsumers()\n+                    : queueConfiguration.getMaxConsumers();\n+            if (queue.getMaxConsumers() != newMaxConsumers) {\n                changed = true;\n-               queue.setMaxConsumer(queueConfiguration.getMaxConsumers());\n+               queue.setMaxConsumer(newMaxConsumers);\n             }\n-            if (queueConfiguration.getRoutingType() != null && queue.getRoutingType() != queueConfiguration.getRoutingType()) {\n+            // routingType\n+            final RoutingType newRoutingType = queueConfiguration.getRoutingType() == null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93cb9ff582c880aeaa6badeab727c6b65a828299"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0380c693e9ac97ebe68b8ce2e9918b94eb93eace", "author": {"user": null}, "url": "https://github.com/apache/activemq-artemis/commit/0380c693e9ac97ebe68b8ce2e9918b94eb93eace", "committedDate": "2020-06-22T07:22:23Z", "message": "Test queue configuration resets to defaults on demand\n\nThe new test does not check if the new configuration actually works.\nIt just checks if queue broker.xml configuration changes are redeployed properly."}, "afterCommit": {"oid": "5fe64d5c69992d429a2c481434c4dd30b7b69001", "author": {"user": null}, "url": "https://github.com/apache/activemq-artemis/commit/5fe64d5c69992d429a2c481434c4dd30b7b69001", "committedDate": "2020-06-22T08:38:02Z", "message": "Rebase onto the current master (+ apply the changes for Queue::isEnabled)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5fe64d5c69992d429a2c481434c4dd30b7b69001", "author": {"user": null}, "url": "https://github.com/apache/activemq-artemis/commit/5fe64d5c69992d429a2c481434c4dd30b7b69001", "committedDate": "2020-06-22T08:38:02Z", "message": "Rebase onto the current master (+ apply the changes for Queue::isEnabled)"}, "afterCommit": {"oid": "eb0159bc5eee657e549c40942b11a38a034b2c50", "author": {"user": null}, "url": "https://github.com/apache/activemq-artemis/commit/eb0159bc5eee657e549c40942b11a38a034b2c50", "committedDate": "2020-06-23T05:14:14Z", "message": "Rebase onto the current master (+ apply the changes for Queue::isEnabled)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NTcwOTYx", "url": "https://github.com/apache/activemq-artemis/pull/3172#pullrequestreview-435570961", "createdAt": "2020-06-23T08:46:09Z", "commit": {"oid": "b274f2e083842f87dd9a7395d6640205147228ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwODo0NjoxMFrOGnfcrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwODo0NjoxMFrOGnfcrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDA2Mjg5Mg==", "bodyText": "can you rebase, this is already fixed in master", "url": "https://github.com/apache/activemq-artemis/pull/3172#discussion_r444062892", "createdAt": "2020-06-23T08:46:10Z", "author": {"login": "michaelpearce-gain"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/server/impl/QueueImpl.java", "diffHunk": "@@ -3954,7 +3954,7 @@ public QueueConfiguration getQueueConfiguration() {\n          .setAddress(address)\n          .setId(id)\n          .setRoutingType(routingType)\n-         .setFilterString(filter.getFilterString())\n+         .setFilterString(filter == null ? null : filter.getFilterString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b274f2e083842f87dd9a7395d6640205147228ca"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5070e7a72c84552c342d1f2da84c35650469e82f", "author": {"user": null}, "url": "https://github.com/apache/activemq-artemis/commit/5070e7a72c84552c342d1f2da84c35650469e82f", "committedDate": "2020-06-23T09:20:03Z", "message": "ARTEMIS-2797 - Reset queue properties by unsetting them in broker.xml\n\nNow it is possible to reset queue parameters to their defaults by removing them\nfrom broker.xml and redeploying the configuration.\n\nOriginally this PR covered the \"filter\" parameter only."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b274f2e083842f87dd9a7395d6640205147228ca", "author": {"user": null}, "url": "https://github.com/apache/activemq-artemis/commit/b274f2e083842f87dd9a7395d6640205147228ca", "committedDate": "2020-06-23T08:44:40Z", "message": "Alter config reloading related documentation"}, "afterCommit": {"oid": "5070e7a72c84552c342d1f2da84c35650469e82f", "author": {"user": null}, "url": "https://github.com/apache/activemq-artemis/commit/5070e7a72c84552c342d1f2da84c35650469e82f", "committedDate": "2020-06-23T09:20:03Z", "message": "ARTEMIS-2797 - Reset queue properties by unsetting them in broker.xml\n\nNow it is possible to reset queue parameters to their defaults by removing them\nfrom broker.xml and redeploying the configuration.\n\nOriginally this PR covered the \"filter\" parameter only."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1622, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}