{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMTAyMjA5", "number": 3255, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMjozNTo0M1rOEhpsQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMjozNjo1MVrOEhpuJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzIxNTM5OnYy", "diffSide": "RIGHT", "path": "artemis-core-client/src/main/java/org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMjozNTo0M1rOHPFLBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzoxMToyOFrOHPGnBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU3NTQyOQ==", "bodyText": "shouldn't you close the connection before setting it to null?\nalso... do you have a test showing the issue?\nAnd 3rd... can you amend the commit with the JIRA?\ngit commit --amend\n# on Vim or your configured editor, add the JIRA to the commit message (not the GitHub title)\ngit push origin -f\n(If you happen to have a test meanwhile you're doing that?)", "url": "https://github.com/apache/activemq-artemis/pull/3255#discussion_r485575429", "createdAt": "2020-09-09T12:35:43Z", "author": {"login": "clebertsuconic"}, "path": "artemis-core-client/src/main/java/org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryImpl.java", "diffHunk": "@@ -632,11 +632,21 @@ private void failoverOrReconnect(final Object connectionID,\n \n                connector = null;\n \n-               reconnectSessions(oldConnection, reconnectAttempts, me);\n+               boolean allSessionReconnected;\n+               int failedReconnectSessionsCounter = 0;\n+               do {\n+                  allSessionReconnected = reconnectSessions(oldConnection, reconnectAttempts, me);\n+                  if (oldConnection != null) {\n+                     oldConnection.destroy();\n+                  }\n+                  oldConnection = connection;\n \n-               if (oldConnection != null) {\n-                  oldConnection.destroy();\n+                  if (!allSessionReconnected) {\n+                     failedReconnectSessionsCounter++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5a8955e197a6b4509b1ee0ec7686a52ab23116f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU5ODk4Mw==", "bodyText": "the connection is not closed because the oldConnection is still using it. but the oldConnection might not get closed, I will fix that\n\n\nquite tricky to come up with a test as described in the other comment\n\n\nwill do", "url": "https://github.com/apache/activemq-artemis/pull/3255#discussion_r485598983", "createdAt": "2020-09-09T13:11:28Z", "author": {"login": "skrutzler"}, "path": "artemis-core-client/src/main/java/org/apache/activemq/artemis/core/client/impl/ClientSessionFactoryImpl.java", "diffHunk": "@@ -632,11 +632,21 @@ private void failoverOrReconnect(final Object connectionID,\n \n                connector = null;\n \n-               reconnectSessions(oldConnection, reconnectAttempts, me);\n+               boolean allSessionReconnected;\n+               int failedReconnectSessionsCounter = 0;\n+               do {\n+                  allSessionReconnected = reconnectSessions(oldConnection, reconnectAttempts, me);\n+                  if (oldConnection != null) {\n+                     oldConnection.destroy();\n+                  }\n+                  oldConnection = connection;\n \n-               if (oldConnection != null) {\n-                  oldConnection.destroy();\n+                  if (!allSessionReconnected) {\n+                     failedReconnectSessionsCounter++;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU3NTQyOQ=="}, "originalCommit": {"oid": "e5a8955e197a6b4509b1ee0ec7686a52ab23116f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzIyMDIwOnYy", "diffSide": "RIGHT", "path": "tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/remoting/ReconnectTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMjozNjo1MVrOHPFN4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMzowNDoxMlrOHPGTOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU3NjE2Mg==", "bodyText": "this is the only test you changed... would this be enough to replicate the issue?\nshouldn't we parameterize the test to add this condition, since this seems to be changing other tests...\nI need some context on why you changed this.. if this is your test or what is this?\nthanks!", "url": "https://github.com/apache/activemq-artemis/pull/3255#discussion_r485576162", "createdAt": "2020-09-09T12:36:51Z", "author": {"login": "clebertsuconic"}, "path": "tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/remoting/ReconnectTest.java", "diffHunk": "@@ -361,7 +361,7 @@ public boolean intercept(Packet packet, RemotingConnection connection) throws Ac\n \n       final long retryInterval = 50;\n       final double retryMultiplier = 1d;\n-      final int reconnectAttempts = 10;\n+      final int reconnectAttempts = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5a8955e197a6b4509b1ee0ec7686a52ab23116f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU5MzkxMw==", "bodyText": "this test never used the reconnectAttempts because on a failed connection while processing a failover we immediatelly set the FailoverEventType.FAILOVER_FAILED. With my changes we now retry to reconnect for as often as reconnectAttempts is set, therefore on second try we would succeed to reconnect and never send the FailoverEventType.FAILOVER_FAILED.\nThis test was not done by me but shows that we do not try to reconnect for the specified amount of times.\nAdding a test for the issue I wanted to solve seems rather tricky because the issue is only present when the client can connect to the broker and while trying to handle the failover on the session looses the new connection.", "url": "https://github.com/apache/activemq-artemis/pull/3255#discussion_r485593913", "createdAt": "2020-09-09T13:04:12Z", "author": {"login": "skrutzler"}, "path": "tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/remoting/ReconnectTest.java", "diffHunk": "@@ -361,7 +361,7 @@ public boolean intercept(Packet packet, RemotingConnection connection) throws Ac\n \n       final long retryInterval = 50;\n       final double retryMultiplier = 1d;\n-      final int reconnectAttempts = 10;\n+      final int reconnectAttempts = 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTU3NjE2Mg=="}, "originalCommit": {"oid": "e5a8955e197a6b4509b1ee0ec7686a52ab23116f"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3946, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}