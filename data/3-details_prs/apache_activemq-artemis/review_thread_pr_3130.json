{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MDI2ODc4", "number": 3130, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOToxMzoyMVrOD8nWPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOToxNDozMVrOD8nXow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODg1ODIyOnYy", "diffSide": "RIGHT", "path": "artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/broker/AMQPSessionCallback.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOToxMzoyMVrOGVqnkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOToxMzoyMVrOGVqnkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM3MTUzNw==", "bodyText": "This should fix your test... as this will guarantee no executor for non durable. It will be basically a straight call like before.", "url": "https://github.com/apache/activemq-artemis/pull/3130#discussion_r425371537", "createdAt": "2020-05-14T19:13:21Z", "author": {"login": "clebertsuconic"}, "path": "artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/broker/AMQPSessionCallback.java", "diffHunk": "@@ -496,15 +499,21 @@ public void serverSend(ProtonServerReceiverContext context,\n             }\n          } else {\n             message.setConnectionID(receiver.getSession().getConnection().getRemoteContainer());\n-            // We need to transfer IO execution to a different thread otherwise we may deadlock netty loop\n-            sessionExecutor.execute(() -> inSessionSend(context, transaction, message, delivery, receiver, routingContext));\n+            // If there are pending messages (durable) on the executors, we should still use the executors\n+            // otherwise we risk running out of order\n+            if (pendingSettles == 0 && !message.isDurable()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbffd73ca87966b6343adfc353e21d0e9e2c64c8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODg1OTc1OnYy", "diffSide": "RIGHT", "path": "artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/broker/AMQPSessionCallback.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOToxMzo0OFrOGVqofg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTo0MjowMlrOGVrhRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM3MTc3NA==", "bodyText": "@tabish121 this will also fix your test, as it will avoid using an executor for non durable", "url": "https://github.com/apache/activemq-artemis/pull/3130#discussion_r425371774", "createdAt": "2020-05-14T19:13:48Z", "author": {"login": "clebertsuconic"}, "path": "artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/broker/AMQPSessionCallback.java", "diffHunk": "@@ -543,7 +552,7 @@ private void inSessionSend(final ProtonServerReceiverContext context,\n             afterIO(new IOCallback() {\n                @Override\n                public void done() {\n-                  connection.runLater(() -> {\n+                  connection.runNow(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbffd73ca87966b6343adfc353e21d0e9e2c64c8"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4NjMxMQ==", "bodyText": "I tested this.. and the number of pending settlements is always 0 after this change for non durables... with durables it can go to a few dozen at a times.. .but credits will now take pending settlements into consideration.", "url": "https://github.com/apache/activemq-artemis/pull/3130#discussion_r425386311", "createdAt": "2020-05-14T19:42:02Z", "author": {"login": "clebertsuconic"}, "path": "artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/broker/AMQPSessionCallback.java", "diffHunk": "@@ -543,7 +552,7 @@ private void inSessionSend(final ProtonServerReceiverContext context,\n             afterIO(new IOCallback() {\n                @Override\n                public void done() {\n-                  connection.runLater(() -> {\n+                  connection.runNow(() -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM3MTc3NA=="}, "originalCommit": {"oid": "bbffd73ca87966b6343adfc353e21d0e9e2c64c8"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODg2MTc5OnYy", "diffSide": "RIGHT", "path": "artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/proton/ProtonServerReceiverContext.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOToxNDozMVrOGVqp2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOToxNDozMVrOGVqp2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM3MjEyMw==", "bodyText": "@tabish121 also, in case you mix durable and non durable and use the executors, this will adjust pending settles on the credits.", "url": "https://github.com/apache/activemq-artemis/pull/3130#discussion_r425372123", "createdAt": "2020-05-14T19:14:31Z", "author": {"login": "clebertsuconic"}, "path": "artemis-protocols/artemis-amqp-protocol/src/main/java/org/apache/activemq/artemis/protocol/amqp/proton/ProtonServerReceiverContext.java", "diffHunk": "@@ -128,10 +147,11 @@ public void run() {\n          }\n \n          connection.requireInHandler();\n-         if (receiver.getCredit() <= threshold) {\n-            int topUp = refill - receiver.getCredit();\n+         int pending = context != null ? context.pendingSettles : 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbffd73ca87966b6343adfc353e21d0e9e2c64c8"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3958, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}