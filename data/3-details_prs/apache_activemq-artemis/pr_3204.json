{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMjM0OTE5", "number": 3204, "title": "ARTEMIS-2823 Use datasource with JDBC store db connections", "bodyText": "Replaces direct jdbc connections with dbcp2 datasource. Adda\nconfiguration options to use alternative datasources and to alter the\nparameters. While adding slight overhead, this vastly improves the\nmanagement and pooling capabilities with db connections.", "createdAt": "2020-06-29T06:43:40Z", "url": "https://github.com/apache/activemq-artemis/pull/3204", "merged": true, "mergeCommit": {"oid": "4979262f2d7aa422106802ceaa9e2e5aaa0d4429"}, "closed": true, "closedAt": "2020-10-06T07:32:41Z", "author": {"login": "uomik"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFOB6agFqTQ4MTcwNTQ4Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPxp5ygBqjM4NDM1MjEwNDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNzA1NDgy", "url": "https://github.com/apache/activemq-artemis/pull/3204#pullrequestreview-481705482", "createdAt": "2020-09-03T10:27:37Z", "commit": {"oid": "bd7f9367f4ff0ef8f86a9068d31dd31aab92d456"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDoyNzozN1rOHMgVJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDoyNzozN1rOHMgVJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg3NDY2Mw==", "bodyText": "One thought on this change, to have the same semantic, the connectionPool must have a max pool size of 1. That needs to be enforced.\nWith the original code, the entire jdbc operation is serialised on the connection, and that will only still hold if the connection pool blocks when it single entry is in use. ie: if it has a max pool size of 1.", "url": "https://github.com/apache/activemq-artemis/pull/3204#discussion_r482874663", "createdAt": "2020-09-03T10:27:37Z", "author": {"login": "gtully"}, "path": "artemis-jdbc-store/src/main/java/org/apache/activemq/artemis/jdbc/store/file/Db2SequentialFileDriver.java", "diffHunk": "@@ -30,33 +31,30 @@ public Db2SequentialFileDriver() {\n       super();\n    }\n \n-   public Db2SequentialFileDriver(DataSource dataSource, SQLProvider provider) {\n-      super(dataSource, provider);\n-   }\n-\n-   public Db2SequentialFileDriver(Connection connection, SQLProvider provider) {\n-      super(connection, provider);\n+   public Db2SequentialFileDriver(JDBCConnectionProvider connectionProvider, SQLProvider provider) {\n+      super(connectionProvider, provider);\n    }\n \n    @Override\n-   protected void prepareStatements() throws SQLException {\n-      this.deleteFile = connection.prepareStatement(sqlProvider.getDeleteFileSQL());\n-      this.createFile = connection.prepareStatement(sqlProvider.getInsertFileSQL(), new String[]{\"ID\"});\n-      this.selectFileByFileName = connection.prepareStatement(sqlProvider.getSelectFileByFileName());\n-      this.copyFileRecord = connection.prepareStatement(sqlProvider.getCopyFileRecordByIdSQL());\n-      this.renameFile = connection.prepareStatement(sqlProvider.getUpdateFileNameByIdSQL());\n-      this.readLargeObject = connection.prepareStatement(sqlProvider.getReadLargeObjectSQL());\n-      this.appendToLargeObject = connection.prepareStatement(sqlProvider.getAppendToLargeObjectSQL());\n-      this.selectFileNamesByExtension = connection.prepareStatement(sqlProvider.getSelectFileNamesByExtensionSQL());\n+   protected void prepareStatements() {\n+      this.deleteFile = sqlProvider.getDeleteFileSQL();\n+      this.createFile = sqlProvider.getInsertFileSQL();\n+      this.createFileColumnNames = new String[]{\"ID\"};\n+      this.selectFileByFileName = sqlProvider.getSelectFileByFileName();\n+      this.copyFileRecord = sqlProvider.getCopyFileRecordByIdSQL();\n+      this.renameFile = sqlProvider.getUpdateFileNameByIdSQL();\n+      this.readLargeObject = sqlProvider.getReadLargeObjectSQL();\n+      this.appendToLargeObject = sqlProvider.getAppendToLargeObjectSQL();\n+      this.selectFileNamesByExtension = sqlProvider.getSelectFileNamesByExtensionSQL();\n    }\n \n    @Override\n    public int writeToFile(JDBCSequentialFile file, byte[] data) throws SQLException {\n       if (data == null || data.length == 0) {\n          return 0;\n       }\n-      synchronized (connection) {\n-         try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd7f9367f4ff0ef8f86a9068d31dd31aab92d456"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNjA5MTU1", "url": "https://github.com/apache/activemq-artemis/pull/3204#pullrequestreview-481609155", "createdAt": "2020-09-03T08:24:30Z", "commit": {"oid": "bd7f9367f4ff0ef8f86a9068d31dd31aab92d456"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwODoyNDozMFrOHMbsJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwODoyNDozMFrOHMbsJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc5ODYyOQ==", "bodyText": "please use a property based token here, like other dependencies", "url": "https://github.com/apache/activemq-artemis/pull/3204#discussion_r482798629", "createdAt": "2020-09-03T08:24:30Z", "author": {"login": "franz1981"}, "path": "artemis-jdbc-store/pom.xml", "diffHunk": "@@ -81,6 +81,13 @@\n          <version>${project.version}</version>\n       </dependency>\n \n+      <!-- Default DataSource for database -->\n+      <dependency>\n+         <groupId>org.apache.commons</groupId>\n+         <artifactId>commons-dbcp2</artifactId>\n+         <version>2.1.1</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd7f9367f4ff0ef8f86a9068d31dd31aab92d456"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05e04854320816858dbcbe19857dcdcd90666d5f", "author": {"user": {"login": "uomik", "name": "Mikko Uoti"}}, "url": "https://github.com/apache/activemq-artemis/commit/05e04854320816858dbcbe19857dcdcd90666d5f", "committedDate": "2020-09-21T15:50:39Z", "message": "Merge branch 'master' into 2.13.0-jdbc-ds"}, "afterCommit": {"oid": "c602ef8853566bc2f95f832cbb729e297725cf5b", "author": {"user": {"login": "franz1981", "name": "Francesco Nigro"}}, "url": "https://github.com/apache/activemq-artemis/commit/c602ef8853566bc2f95f832cbb729e297725cf5b", "committedDate": "2020-09-21T17:51:02Z", "message": "ARTEMIS-2823 adding dbcp2 as the default pooled DataSource to be used"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c602ef8853566bc2f95f832cbb729e297725cf5b", "author": {"user": {"login": "franz1981", "name": "Francesco Nigro"}}, "url": "https://github.com/apache/activemq-artemis/commit/c602ef8853566bc2f95f832cbb729e297725cf5b", "committedDate": "2020-09-21T17:51:02Z", "message": "ARTEMIS-2823 adding dbcp2 as the default pooled DataSource to be used"}, "afterCommit": {"oid": "4e0825deaa4606393a1d819530e256feef0666e6", "author": {"user": {"login": "franz1981", "name": "Francesco Nigro"}}, "url": "https://github.com/apache/activemq-artemis/commit/4e0825deaa4606393a1d819530e256feef0666e6", "committedDate": "2020-09-25T05:15:15Z", "message": "ARTEMIS-2823 adding dbcp2 as the default pooled DataSource to be used"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NTAxNDM4", "url": "https://github.com/apache/activemq-artemis/pull/3204#pullrequestreview-496501438", "createdAt": "2020-09-25T14:58:17Z", "commit": {"oid": "1efccfc4cf0ea01f4e74c176f7b389ff95fa5420"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDo1ODoxN1rOHYHPLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDo1ODoxN1rOHYHPLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA0NjQ0Ng==", "bodyText": "Can't we keep this method and call this(new JDBCConnectionProvider(ds));", "url": "https://github.com/apache/activemq-artemis/pull/3204#discussion_r495046446", "createdAt": "2020-09-25T14:58:17Z", "author": {"login": "ehsavoie"}, "path": "artemis-jdbc-store/src/main/java/org/apache/activemq/artemis/jdbc/store/sql/PropertySQLProvider.java", "diffHunk": "@@ -362,8 +363,12 @@ public Factory(SQLDialect dialect) {\n          }\n       }\n \n-      public Factory(DataSource dataSource) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1efccfc4cf0ea01f4e74c176f7b389ff95fa5420"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NTI3Mzk1", "url": "https://github.com/apache/activemq-artemis/pull/3204#pullrequestreview-496527395", "createdAt": "2020-09-25T15:29:23Z", "commit": {"oid": "4e0825deaa4606393a1d819530e256feef0666e6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyOToyM1rOHYIbpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNToyOToyM1rOHYIbpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA2NjAyMg==", "bodyText": "I see that JDBCSequentialFile directoryList and JDBCSequentialFileFactoryDriver dbDriver  are not used as data members: can be removed", "url": "https://github.com/apache/activemq-artemis/pull/3204#discussion_r495066022", "createdAt": "2020-09-25T15:29:23Z", "author": {"login": "franz1981"}, "path": "artemis-server/src/main/java/org/apache/activemq/artemis/core/paging/impl/PagingStoreFactoryDatabase.java", "diffHunk": "@@ -106,8 +105,8 @@ public PagingStoreFactoryDatabase(final DatabaseStorageConfiguration dbConf,\n                                      final ScheduledExecutorService scheduledExecutor,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e0825deaa4606393a1d819530e256feef0666e6"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6f1a2c7577d6560937e144692423bac4ee2a1989", "author": {"user": {"login": "uomik", "name": "Mikko Uoti"}}, "url": "https://github.com/apache/activemq-artemis/commit/6f1a2c7577d6560937e144692423bac4ee2a1989", "committedDate": "2020-09-25T16:14:05Z", "message": "ARTEMIS-2823 Revert Factory constructor with DataSource as input"}, "afterCommit": {"oid": "e7cdc682009a979c2e1b638c791cac44c2806bf6", "author": {"user": {"login": "uomik", "name": "Mikko Uoti"}}, "url": "https://github.com/apache/activemq-artemis/commit/e7cdc682009a979c2e1b638c791cac44c2806bf6", "committedDate": "2020-09-25T19:14:50Z", "message": "ARTEMIS-2823 Remove never used data members from JDBC paging store factory"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e7cdc682009a979c2e1b638c791cac44c2806bf6", "author": {"user": {"login": "uomik", "name": "Mikko Uoti"}}, "url": "https://github.com/apache/activemq-artemis/commit/e7cdc682009a979c2e1b638c791cac44c2806bf6", "committedDate": "2020-09-25T19:14:50Z", "message": "ARTEMIS-2823 Remove never used data members from JDBC paging store factory"}, "afterCommit": {"oid": "092eeff60dc9898032baace97d5e4f1cedaecacc", "author": {"user": {"login": "uomik", "name": "Mikko Uoti"}}, "url": "https://github.com/apache/activemq-artemis/commit/092eeff60dc9898032baace97d5e4f1cedaecacc", "committedDate": "2020-09-30T05:37:07Z", "message": "ARTEMIS-2823 Add SQL provider Factory constructor with datasource argument"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "092eeff60dc9898032baace97d5e4f1cedaecacc", "author": {"user": {"login": "uomik", "name": "Mikko Uoti"}}, "url": "https://github.com/apache/activemq-artemis/commit/092eeff60dc9898032baace97d5e4f1cedaecacc", "committedDate": "2020-09-30T05:37:07Z", "message": "ARTEMIS-2823 Add SQL provider Factory constructor with datasource argument"}, "afterCommit": {"oid": "e9c890606d44a09dbb0b561ca622058693b04b6f", "author": {"user": {"login": "uomik", "name": "Mikko Uoti"}}, "url": "https://github.com/apache/activemq-artemis/commit/e9c890606d44a09dbb0b561ca622058693b04b6f", "committedDate": "2020-10-01T05:57:12Z", "message": "ARTEMIS-2823 Let the db connection pool have unbounded number of connections by default"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNjUyODQw", "url": "https://github.com/apache/activemq-artemis/pull/3204#pullrequestreview-500652840", "createdAt": "2020-10-01T19:26:37Z", "commit": {"oid": "e9c890606d44a09dbb0b561ca622058693b04b6f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxOToyNjozN1rOHbYBWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxOToyNjo1OVrOHbYB7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NzE2Mg==", "bodyText": "connection is not a parameter of this method", "url": "https://github.com/apache/activemq-artemis/pull/3204#discussion_r498467162", "createdAt": "2020-10-01T19:26:37Z", "author": {"login": "ehsavoie"}, "path": "artemis-jdbc-store/src/main/java/org/apache/activemq/artemis/jdbc/store/file/PostgresLargeObjectManager.java", "diffHunk": "@@ -56,31 +56,31 @@ public PostgresLargeObjectManager(Connection connection) throws SQLException {\n       }\n    }\n \n-   public final Long createLO() throws SQLException {\n+   public final Long createLO(Connection connection) throws SQLException {\n       if (shouldUseReflection) {\n-         Object largeObjectManager = getLargeObjectManager();\n+         Object largeObjectManager = getLargeObjectManager(connection);\n          try {\n-            Method method = largeObjectManager.getClass().getMethod(\"createLO\");\n-            return (Long) method.invoke(largeObjectManager);\n+            Method method = largeObjectManager.getClass().getMethod(\"createLO\", Connection.class);\n+            return (Long) method.invoke(largeObjectManager, connection);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c890606d44a09dbb0b561ca622058693b04b6f"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODQ2NzMxMA==", "bodyText": "connection is not a parameter of this method", "url": "https://github.com/apache/activemq-artemis/pull/3204#discussion_r498467310", "createdAt": "2020-10-01T19:26:59Z", "author": {"login": "ehsavoie"}, "path": "artemis-jdbc-store/src/main/java/org/apache/activemq/artemis/jdbc/store/file/PostgresLargeObjectManager.java", "diffHunk": "@@ -56,31 +56,31 @@ public PostgresLargeObjectManager(Connection connection) throws SQLException {\n       }\n    }\n \n-   public final Long createLO() throws SQLException {\n+   public final Long createLO(Connection connection) throws SQLException {\n       if (shouldUseReflection) {\n-         Object largeObjectManager = getLargeObjectManager();\n+         Object largeObjectManager = getLargeObjectManager(connection);\n          try {\n-            Method method = largeObjectManager.getClass().getMethod(\"createLO\");\n-            return (Long) method.invoke(largeObjectManager);\n+            Method method = largeObjectManager.getClass().getMethod(\"createLO\", Connection.class);\n+            return (Long) method.invoke(largeObjectManager, connection);\n          } catch (NoSuchMethodException | SecurityException | IllegalAccessException | IllegalArgumentException | InvocationTargetException ex) {\n             throw new SQLException(\"Couldn't access org.postgresql.largeobject.LargeObjectManager\", ex);\n          }\n       } else {\n-         return ((PGConnection) realConnection).getLargeObjectAPI().createLO();\n+         return ((PGConnection) unwrap(connection)).getLargeObjectAPI().createLO();\n       }\n    }\n \n-   public Object open(long oid, int mode) throws SQLException {\n+   public Object open(Connection connection, long oid, int mode) throws SQLException {\n       if (shouldUseReflection) {\n-         Object largeObjectManager = getLargeObjectManager();\n+         Object largeObjectManager = getLargeObjectManager(connection);\n          try {\n-            Method method = largeObjectManager.getClass().getMethod(\"open\", long.class, int.class);\n-            return method.invoke(largeObjectManager, oid, mode);\n+            Method method = largeObjectManager.getClass().getMethod(\"open\", Connection.class, long.class, int.class);\n+            return method.invoke(largeObjectManager, connection, oid, mode);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e9c890606d44a09dbb0b561ca622058693b04b6f"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwOTg3Nzcz", "url": "https://github.com/apache/activemq-artemis/pull/3204#pullrequestreview-500987773", "createdAt": "2020-10-02T09:27:54Z", "commit": {"oid": "f39c65f9a1753e5d9802ee2e97bb3ca880310e8c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOToyNzo1NFrOHbnGBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0ODowMVrOHbnqig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcxNDExOA==", "bodyText": "you need to pass Statement.RETURN_GENERATED_KEYS as second argument (check line 55 on previous code)", "url": "https://github.com/apache/activemq-artemis/pull/3204#discussion_r498714118", "createdAt": "2020-10-02T09:27:54Z", "author": {"login": "ehsavoie"}, "path": "artemis-jdbc-store/src/main/java/org/apache/activemq/artemis/jdbc/store/file/PostgresSequentialSequentialFileDriver.java", "diffHunk": "@@ -36,37 +36,32 @@ public PostgresSequentialSequentialFileDriver() throws SQLException {\n       super();\n    }\n \n-   public PostgresSequentialSequentialFileDriver(DataSource dataSource, SQLProvider provider) {\n+   public PostgresSequentialSequentialFileDriver(JDBCConnectionProvider connectionProvider, SQLProvider provider) {\n       super();\n-      this.setDataSource(dataSource);\n-      this.setSqlProvider(provider);\n-   }\n-\n-   public PostgresSequentialSequentialFileDriver(Connection connection, SQLProvider provider) {\n-      super();\n-      this.setConnection(connection);\n+      this.setJdbcConnectionProvider(connectionProvider);\n       this.setSqlProvider(provider);\n    }\n \n    @Override\n-   protected void prepareStatements() throws SQLException {\n-      this.largeObjectManager = new PostgresLargeObjectManager(connection);\n-      this.deleteFile = connection.prepareStatement(sqlProvider.getDeleteFileSQL());\n-      this.createFile = connection.prepareStatement(sqlProvider.getInsertFileSQL(), Statement.RETURN_GENERATED_KEYS);\n-      this.selectFileByFileName = connection.prepareStatement(sqlProvider.getSelectFileByFileName());\n-      this.copyFileRecord = connection.prepareStatement(sqlProvider.getCopyFileRecordByIdSQL());\n-      this.renameFile = connection.prepareStatement(sqlProvider.getUpdateFileNameByIdSQL());\n-      this.readLargeObject = connection.prepareStatement(sqlProvider.getReadLargeObjectSQL());\n-      this.appendToLargeObject = connection.prepareStatement(sqlProvider.getAppendToLargeObjectSQL());\n-      this.selectFileNamesByExtension = connection.prepareStatement(sqlProvider.getSelectFileNamesByExtensionSQL());\n+   protected void prepareStatements() {\n+      this.largeObjectManager = new PostgresLargeObjectManager();\n+      this.deleteFile = sqlProvider.getDeleteFileSQL();\n+      this.createFile = sqlProvider.getInsertFileSQL();\n+      this.createFileAutogeneratedKeys = Statement.RETURN_GENERATED_KEYS;\n+      this.selectFileByFileName = sqlProvider.getSelectFileByFileName();\n+      this.copyFileRecord = sqlProvider.getCopyFileRecordByIdSQL();\n+      this.renameFile = sqlProvider.getUpdateFileNameByIdSQL();\n+      this.readLargeObject = sqlProvider.getReadLargeObjectSQL();\n+      this.appendToLargeObject = sqlProvider.getAppendToLargeObjectSQL();\n+      this.selectFileNamesByExtension = sqlProvider.getSelectFileNamesByExtensionSQL();\n    }\n \n    @Override\n    public void createFile(JDBCSequentialFile file) throws SQLException {\n-      synchronized (connection) {\n-         try {\n+      try (Connection connection = connectionProvider.getConnection()) {\n+         try (PreparedStatement createFile = connection.prepareStatement(this.createFile)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39c65f9a1753e5d9802ee2e97bb3ca880310e8c"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMzQxNg==", "bodyText": "We should declare the largeObject here instead of 4 lines before (even if that was how it was done before)", "url": "https://github.com/apache/activemq-artemis/pull/3204#discussion_r498723416", "createdAt": "2020-10-02T09:47:54Z", "author": {"login": "ehsavoie"}, "path": "artemis-jdbc-store/src/main/java/org/apache/activemq/artemis/jdbc/store/file/PostgresSequentialSequentialFileDriver.java", "diffHunk": "@@ -132,10 +129,10 @@ public int writeToFile(JDBCSequentialFile file, byte[] data, boolean append) thr\n    public int readFromFile(JDBCSequentialFile file, ByteBuffer bytes) throws SQLException {\n       Object largeObject = null;\n       long oid = getOID(file);\n-      synchronized (connection) {\n+      try (Connection connection = connectionProvider.getConnection()) {\n          try {\n             connection.setAutoCommit(false);\n-            largeObject = largeObjectManager.open(oid, PostgresLargeObjectManager.READ);\n+            largeObject = largeObjectManager.open(connection, oid, PostgresLargeObjectManager.READ);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39c65f9a1753e5d9802ee2e97bb3ca880310e8c"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMzQ2Ng==", "bodyText": "We should declare the largeObject here instead of 4 lines before (even if that was how it was done before)", "url": "https://github.com/apache/activemq-artemis/pull/3204#discussion_r498723466", "createdAt": "2020-10-02T09:48:01Z", "author": {"login": "ehsavoie"}, "path": "artemis-jdbc-store/src/main/java/org/apache/activemq/artemis/jdbc/store/file/PostgresSequentialSequentialFileDriver.java", "diffHunk": "@@ -87,31 +82,33 @@ public void createFile(JDBCSequentialFile file) throws SQLException {\n \n    @Override\n    public void loadFile(JDBCSequentialFile file) throws SQLException {\n-      synchronized (connection) {\n-         connection.setAutoCommit(false);\n-         readLargeObject.setLong(1, file.getId());\n+      try (Connection connection = connectionProvider.getConnection()) {\n+         try (PreparedStatement readLargeObject = connection.prepareStatement(this.readLargeObject)) {\n+            connection.setAutoCommit(false);\n+            readLargeObject.setLong(1, file.getId());\n \n-         try (ResultSet rs = readLargeObject.executeQuery()) {\n-            if (rs.next()) {\n-               file.setWritePosition(getPostGresLargeObjectSize(file));\n+            try (ResultSet rs = readLargeObject.executeQuery()) {\n+               if (rs.next()) {\n+                  file.setWritePosition(getPostGresLargeObjectSize(file));\n+               }\n+               connection.commit();\n+            } catch (SQLException e) {\n+               connection.rollback();\n+               throw e;\n             }\n-            connection.commit();\n-         } catch (SQLException e) {\n-            connection.rollback();\n-            throw e;\n          }\n       }\n    }\n \n    @Override\n    public int writeToFile(JDBCSequentialFile file, byte[] data, boolean append) throws SQLException {\n-      synchronized (connection) {\n+      try (Connection connection = connectionProvider.getConnection()) {\n          Object largeObject = null;\n \n          Long oid = getOID(file);\n          try {\n             connection.setAutoCommit(false);\n-            largeObject = largeObjectManager.open(oid, PostgresLargeObjectManager.WRITE);\n+            largeObject = largeObjectManager.open(connection, oid, PostgresLargeObjectManager.WRITE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39c65f9a1753e5d9802ee2e97bb3ca880310e8c"}, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyNTcyNjQ3", "url": "https://github.com/apache/activemq-artemis/pull/3204#pullrequestreview-502572647", "createdAt": "2020-10-06T04:20:25Z", "commit": {"oid": "7b67ffce04676d5871f7b8bba6481063c1d55c38"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2faafec737b10f68aa38925825029b7136f23ee1", "author": {"user": {"login": "uomik", "name": "Mikko Uoti"}}, "url": "https://github.com/apache/activemq-artemis/commit/2faafec737b10f68aa38925825029b7136f23ee1", "committedDate": "2020-10-06T05:32:58Z", "message": "ARTEMIS-2823 Use datasource with JDBC store db connections\n\nReplaces direct jdbc connections with dbcp2 datasource. Adds\nconfiguration options to use alternative datasources and to alter the\nparameters. While adding slight overhead, this vastly improves the\nmanagement and pooling capabilities with db connections."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b67ffce04676d5871f7b8bba6481063c1d55c38", "author": {"user": {"login": "uomik", "name": "Mikko Uoti"}}, "url": "https://github.com/apache/activemq-artemis/commit/7b67ffce04676d5871f7b8bba6481063c1d55c38", "committedDate": "2020-10-03T08:05:29Z", "message": "ARTEMIS-2823 Fix PostgresSequentialSequentialFileDriver"}, "afterCommit": {"oid": "2faafec737b10f68aa38925825029b7136f23ee1", "author": {"user": {"login": "uomik", "name": "Mikko Uoti"}}, "url": "https://github.com/apache/activemq-artemis/commit/2faafec737b10f68aa38925825029b7136f23ee1", "committedDate": "2020-10-06T05:32:58Z", "message": "ARTEMIS-2823 Use datasource with JDBC store db connections\n\nReplaces direct jdbc connections with dbcp2 datasource. Adds\nconfiguration options to use alternative datasources and to alter the\nparameters. While adding slight overhead, this vastly improves the\nmanagement and pooling capabilities with db connections."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1578, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}