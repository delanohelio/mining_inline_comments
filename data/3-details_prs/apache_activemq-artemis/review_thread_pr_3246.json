{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNTYyOTE1", "number": 3246, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMjo0NDo0M1rOEcjrJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMjo0NDo0M1rOEcjrJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzgwMDcxOnYy", "diffSide": "RIGHT", "path": "tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxMjo0NDo0M1rOHHKTdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNTozNjowNlrOHHR70w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI3MDkwMg==", "bodyText": "I don't understand this...\nWhy can't we just use the previous operation on clearing the cache.\nI don't think this is a valid test change. The test was written to validate the cache cleared.\nif caching becomes a valid option now, we should rather just remove the test.", "url": "https://github.com/apache/activemq-artemis/pull/3246#discussion_r477270902", "createdAt": "2020-08-26T12:44:43Z", "author": {"login": "clebertsuconic"}, "path": "tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java", "diffHunk": "@@ -1412,12 +1413,26 @@ public void testSendMessageUpdateRoleCached() throws Exception {\n \n       securityManager.getConfiguration().addRole(\"auser\", \"receiver\");\n \n-      session.createConsumer(SecurityTest.queueA);\n+      Wait.assertTrue(() -> {\n+         try {\n+            session.createConsumer(SecurityTest.queueA);\n+            return true;\n+         } catch (Exception e) {\n+            return false;\n+         }\n+      }, 2000, 100);\n \n       // Removing the Role... the check should be cached, so the next createConsumer shouldn't fail\n       securityManager.getConfiguration().removeRole(\"auser\", \"receiver\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8db16f826050ed186304fbaf0408dc918692898e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM5NTkyMw==", "bodyText": "That test was meant to (among other things) exercise the authorization cache. However, with the introduction of the authentication cache the semantics changed a bit. I've updated the test to make this more clear. Thanks for the review.", "url": "https://github.com/apache/activemq-artemis/pull/3246#discussion_r477395923", "createdAt": "2020-08-26T15:36:06Z", "author": {"login": "jbertram"}, "path": "tests/integration-tests/src/test/java/org/apache/activemq/artemis/tests/integration/security/SecurityTest.java", "diffHunk": "@@ -1412,12 +1413,26 @@ public void testSendMessageUpdateRoleCached() throws Exception {\n \n       securityManager.getConfiguration().addRole(\"auser\", \"receiver\");\n \n-      session.createConsumer(SecurityTest.queueA);\n+      Wait.assertTrue(() -> {\n+         try {\n+            session.createConsumer(SecurityTest.queueA);\n+            return true;\n+         } catch (Exception e) {\n+            return false;\n+         }\n+      }, 2000, 100);\n \n       // Removing the Role... the check should be cached, so the next createConsumer shouldn't fail\n       securityManager.getConfiguration().removeRole(\"auser\", \"receiver\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI3MDkwMg=="}, "originalCommit": {"oid": "8db16f826050ed186304fbaf0408dc918692898e"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3944, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}