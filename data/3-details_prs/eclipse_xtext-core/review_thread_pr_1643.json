{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNjczNDUz", "number": 1643, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODo0ODoxNlrOFBqckw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODo0ODoxNlrOFBqckw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Mjg4MzM5OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/services/BeeLangTestLanguageGrammarAccess.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwODo0ODoxNlrOIAb2Pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQwODoxOTo1OVrOIDt1aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMyNzE2Nw==", "bodyText": "Cardinality on new line @ArneDeutsch", "url": "https://github.com/eclipse/xtext-core/pull/1643#discussion_r537327167", "createdAt": "2020-12-07T08:48:16Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/services/BeeLangTestLanguageGrammarAccess.java", "diffHunk": "@@ -482,21 +464,13 @@\n \t\tprivate final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);\n \t\t\n \t\t//AliasedRequiredCapability:\n-\t\t//\t(nameSpace=ID | \"unit\") name=ID (\"as\" alias=ID)? ('{' ( ('when' ':' condExpr=Expression ';')?  \n-\t\t//\t\t& (greedy?=\"greedy\" ';')? \n-\t\t//\t\t& (\"requires-min\" ':' min=INT ';')? \n-\t\t//\t\t& (\"requires-max\" ':' max=INT ';')?\n-\t\t//\t\t& (\"version\" ':' versionRange=ID ';')?\n-\t\t//\t  \t)\n+\t\t//\t(nameSpace=ID | \"unit\") name=ID (\"as\" alias=ID)? ('{' (('when' ':' condExpr=Expression ';')? & (greedy?=\"greedy\" ';')\n+\t\t//\t? & (\"requires-min\" ':' min=INT ';')? & (\"requires-max\" ':' max=INT ';')? & (\"version\" ':' versionRange=ID ';')?)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39aeb84f42626ec9be1ff2e0051106ab70391658"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc2NjMzMQ==", "bodyText": "I have written a test and can not reproduce the behaviour, the question mark remains in the correct line. I assume there is some additional logic taking place (outside the formatter) ensuring that the lines to not get to long. Fear I can not fix this in the formatter.\nFrom this\nProvidedCapability: {ProvidedCapability}\n\t((nameSpace=ID) | \"unit\") \n\t('{'\n     \t( \t\n     \t  ('when' ':' condExpr = Expression ';')?\n\t    & (\"name\" ':' name = ID ';')          \n\t    & (\"version\" ':' version = ID ';')?\n\t    )\n\t'}')?\n;\n\nthe formatter produces that\nProvidedCapability:\n\t{ProvidedCapability}\n\t((nameSpace=ID) | \"unit\")\n\t('{'\n\t(('when' ':' condExpr=Expression ';')? & (\"name\" ':' name=ID ';') & (\"version\" ':' version=ID ';')?)\n\t'}')?;", "url": "https://github.com/eclipse/xtext-core/pull/1643#discussion_r540766331", "createdAt": "2020-12-11T08:17:38Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/services/BeeLangTestLanguageGrammarAccess.java", "diffHunk": "@@ -482,21 +464,13 @@\n \t\tprivate final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);\n \t\t\n \t\t//AliasedRequiredCapability:\n-\t\t//\t(nameSpace=ID | \"unit\") name=ID (\"as\" alias=ID)? ('{' ( ('when' ':' condExpr=Expression ';')?  \n-\t\t//\t\t& (greedy?=\"greedy\" ';')? \n-\t\t//\t\t& (\"requires-min\" ':' min=INT ';')? \n-\t\t//\t\t& (\"requires-max\" ':' max=INT ';')?\n-\t\t//\t\t& (\"version\" ':' versionRange=ID ';')?\n-\t\t//\t  \t)\n+\t\t//\t(nameSpace=ID | \"unit\") name=ID (\"as\" alias=ID)? ('{' (('when' ':' condExpr=Expression ';')? & (greedy?=\"greedy\" ';')\n+\t\t//\t? & (\"requires-min\" ':' min=INT ';')? & (\"requires-max\" ':' max=INT ';')? & (\"version\" ':' versionRange=ID ';')?)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMyNzE2Nw=="}, "originalCommit": {"oid": "39aeb84f42626ec9be1ff2e0051106ab70391658"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDc2NzU5Mg==", "bodyText": "What happens if you use two more chars for one of the keywords (to compensate for the '//' indentation string?", "url": "https://github.com/eclipse/xtext-core/pull/1643#discussion_r540767592", "createdAt": "2020-12-11T08:19:59Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.testlanguages/src-gen/org/eclipse/xtext/testlanguages/backtracking/services/BeeLangTestLanguageGrammarAccess.java", "diffHunk": "@@ -482,21 +464,13 @@\n \t\tprivate final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);\n \t\t\n \t\t//AliasedRequiredCapability:\n-\t\t//\t(nameSpace=ID | \"unit\") name=ID (\"as\" alias=ID)? ('{' ( ('when' ':' condExpr=Expression ';')?  \n-\t\t//\t\t& (greedy?=\"greedy\" ';')? \n-\t\t//\t\t& (\"requires-min\" ':' min=INT ';')? \n-\t\t//\t\t& (\"requires-max\" ':' max=INT ';')?\n-\t\t//\t\t& (\"version\" ':' versionRange=ID ';')?\n-\t\t//\t  \t)\n+\t\t//\t(nameSpace=ID | \"unit\") name=ID (\"as\" alias=ID)? ('{' (('when' ':' condExpr=Expression ';')? & (greedy?=\"greedy\" ';')\n+\t\t//\t? & (\"requires-min\" ':' min=INT ';')? & (\"requires-max\" ':' max=INT ';')? & (\"version\" ':' versionRange=ID ';')?)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMyNzE2Nw=="}, "originalCommit": {"oid": "39aeb84f42626ec9be1ff2e0051106ab70391658"}, "originalPosition": 101}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 906, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}