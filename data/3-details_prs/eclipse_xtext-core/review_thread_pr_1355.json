{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMTQzMzU3", "number": 1355, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0NDo0MFrODYMoRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0NTowOFrODYMo3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2Njk5MzM0OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0NDo0MFrOFd6oCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0NDo0MFrOFd6oCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxMzU0Nw==", "bodyText": "I'm not a big fan of Object.equals(..) for primitives. It causes boxing and is distracting for the reader.\nHow does the equals / hashcode methods look like when they are generated by Eclipse?", "url": "https://github.com/eclipse/xtext-core/pull/1355#discussion_r366913547", "createdAt": "2020-01-15T14:44:40Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java", "diffHunk": "@@ -56,6 +58,25 @@ public void applyTo(StringBuilder builder) {\n \t\tbuilder.replace(offset, getEndOffset(), text);\n \t}\n \t\n+\t@Override\n+\tpublic boolean equals(Object object) {\n+\t\tif (object instanceof ReplaceRegion) {\n+\t\t\tReplaceRegion rr = (ReplaceRegion) object;\n+\n+\t\t\tboolean equals = true;\n+\t\t\tequals = equals && Objects.equals(getOffset(), rr.getOffset());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198a74e270968581581a15932b6a7878d3099eff"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2Njk5NDg3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0NTowOFrOFd6pAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNDo0NTowOFrOFd6pAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjkxMzc5Mg==", "bodyText": "This builds an array of values including boxing conversion. I think the defaults as generated by Eclipse are better.", "url": "https://github.com/eclipse/xtext-core/pull/1355#discussion_r366913792", "createdAt": "2020-01-15T14:45:08Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.util/src/org/eclipse/xtext/util/ReplaceRegion.java", "diffHunk": "@@ -56,6 +58,25 @@ public void applyTo(StringBuilder builder) {\n \t\tbuilder.replace(offset, getEndOffset(), text);\n \t}\n \t\n+\t@Override\n+\tpublic boolean equals(Object object) {\n+\t\tif (object instanceof ReplaceRegion) {\n+\t\t\tReplaceRegion rr = (ReplaceRegion) object;\n+\n+\t\t\tboolean equals = true;\n+\t\t\tequals = equals && Objects.equals(getOffset(), rr.getOffset());\n+\t\t\tequals = equals && Objects.equals(getLength(), rr.getLength());\n+\t\t\tequals = equals && Objects.equals(getText(), rr.getText());\n+\t\t\treturn equals;\n+\t\t}\n+\t\treturn false;\n+\t}\n+\n+\t@Override\n+\tpublic int hashCode() {\n+\t\treturn Objects.hash(getOffset(), getLength(), getText());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198a74e270968581581a15932b6a7878d3099eff"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1140, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}