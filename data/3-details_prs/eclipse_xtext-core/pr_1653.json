{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNjAxOTgw", "number": 1653, "title": "[#1626] Use node model to generate comments with original format.", "bodyText": "Signed-off-by: Arne Deutsch Arne.Deutsch@itemis.de", "createdAt": "2020-12-18T15:07:37Z", "url": "https://github.com/eclipse/xtext-core/pull/1653", "merged": true, "mergeCommit": {"oid": "eaeffbf85b44fb68cf99476452e46d224ed91240"}, "closed": true, "closedAt": "2021-02-12T10:11:02Z", "author": {"login": "ArneDeutsch"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdvBs4OAFqTU2NTEyMDAxMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABd5Wzo5ABqjQzMjQwMjkxODM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1MTIwMDEy", "url": "https://github.com/eclipse/xtext-core/pull/1653#pullrequestreview-565120012", "createdAt": "2021-01-11T07:50:36Z", "commit": {"oid": "6097a10826284ab21c1bbf78421f7117f6298243"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwNzo1MDozNlrOIRJqYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwNzo1MDozNlrOIRJqYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg1NTAwOQ==", "bodyText": "wonder if we have a util for this somewhere", "url": "https://github.com/eclipse/xtext-core/pull/1653#discussion_r554855009", "createdAt": "2021-01-11T07:50:36Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/grammarAccess/GrammarAccessExtensions.xtend", "diffHunk": "@@ -396,8 +391,61 @@ class GrammarAccessExtensions {\n \t\t}\n \t}\n \t\n-\tdef String grammarFragmentToString(EObject ele, String prefix) {\n-\t\treturn serializer.grammarFragmentToString(ele, prefix)\n+\tdef String grammarFragmentToString(EObject object, String prefix) {\n+\t\tval node = NodeModelUtils.findActualNodeFor(object)\n+\t\tif (node === null) {\n+\t\t\tif (object instanceof RuleCall)\n+\t\t\t\tif (object?.rule?.name !== null)\n+\t\t\t\t\treturn process(object.rule.name, prefix)\n+\t\t\treturn \"\"\n+\t\t} else {\n+\t\t\treturn node.text.process(prefix)\n+\t\t}\n+\t}\n+\n+\tprivate def process(String input, String prefix) {\n+\t\t// remove leading and trailing blank lines", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6097a10826284ab21c1bbf78421f7117f6298243"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY1MTIwMzE0", "url": "https://github.com/eclipse/xtext-core/pull/1653#pullrequestreview-565120314", "createdAt": "2021-01-11T07:51:15Z", "commit": {"oid": "6097a10826284ab21c1bbf78421f7117f6298243"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwNzo1MToxNVrOIRJsfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQwNzo1MToxNVrOIRJsfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDg1NTU1MQ==", "bodyText": "am sure there is a util in guava or xtext this somewhere", "url": "https://github.com/eclipse/xtext-core/pull/1653#discussion_r554855551", "createdAt": "2021-01-11T07:51:15Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/grammarAccess/GrammarAccessExtensions.xtend", "diffHunk": "@@ -396,8 +391,61 @@ class GrammarAccessExtensions {\n \t\t}\n \t}\n \t\n-\tdef String grammarFragmentToString(EObject ele, String prefix) {\n-\t\treturn serializer.grammarFragmentToString(ele, prefix)\n+\tdef String grammarFragmentToString(EObject object, String prefix) {\n+\t\tval node = NodeModelUtils.findActualNodeFor(object)\n+\t\tif (node === null) {\n+\t\t\tif (object instanceof RuleCall)\n+\t\t\t\tif (object?.rule?.name !== null)\n+\t\t\t\t\treturn process(object.rule.name, prefix)\n+\t\t\treturn \"\"\n+\t\t} else {\n+\t\t\treturn node.text.process(prefix)\n+\t\t}\n+\t}\n+\n+\tprivate def process(String input, String prefix) {\n+\t\t// remove leading and trailing blank lines\n+\t\tvar lines = input.split('(\\\\r?\\\\n)')\n+\t\tvar first = 0\n+\t\twhile (isBlank(lines.get(first)))\n+\t\t\tfirst++\n+\t\tvar last = lines.length - 1\n+\t\twhile (isBlank(lines.get(last)))\n+\t\t\tlast--\n+\t\tlines = lines.subList(first, last + 1)\n+\t\t// remove common whitespace (e.g. leading blanks) and add prefix to each line\n+\t\tval commonWhitespace = commonLeadingWhitespace(lines)\n+\t\tfor (var n=0; n<lines.length; n++)\n+\t\t\tlines.set(n, prefix + lines.get(n).substring(commonWhitespace.length))\n+\t\t// generate result by joining lines\n+\t\treturn lines.join(System.lineSeparator)\n+\t}\n+\n+\tprivate def isBlank(String line) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6097a10826284ab21c1bbf78421f7117f6298243"}, "originalPosition": 83}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY5MDUzNDAz", "url": "https://github.com/eclipse/xtext-core/pull/1653#pullrequestreview-569053403", "createdAt": "2021-01-15T08:32:34Z", "commit": {"oid": "6097a10826284ab21c1bbf78421f7117f6298243"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwODozMjozNFrOIULxlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQwODozMjozNFrOIULxlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODAzNTM0OA==", "bodyText": "com.google.common.base.Strings.commonPrefix(CharSequence, CharSequence) may be handy here, too along with isBlank", "url": "https://github.com/eclipse/xtext-core/pull/1653#discussion_r558035348", "createdAt": "2021-01-15T08:32:34Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/grammarAccess/GrammarAccessExtensions.xtend", "diffHunk": "@@ -396,8 +391,61 @@ class GrammarAccessExtensions {\n \t\t}\n \t}\n \t\n-\tdef String grammarFragmentToString(EObject ele, String prefix) {\n-\t\treturn serializer.grammarFragmentToString(ele, prefix)\n+\tdef String grammarFragmentToString(EObject object, String prefix) {\n+\t\tval node = NodeModelUtils.findActualNodeFor(object)\n+\t\tif (node === null) {\n+\t\t\tif (object instanceof RuleCall)\n+\t\t\t\tif (object?.rule?.name !== null)\n+\t\t\t\t\treturn process(object.rule.name, prefix)\n+\t\t\treturn \"\"\n+\t\t} else {\n+\t\t\treturn node.text.process(prefix)\n+\t\t}\n+\t}\n+\n+\tprivate def process(String input, String prefix) {\n+\t\t// remove leading and trailing blank lines\n+\t\tvar lines = input.split('(\\\\r?\\\\n)')\n+\t\tvar first = 0\n+\t\twhile (isBlank(lines.get(first)))\n+\t\t\tfirst++\n+\t\tvar last = lines.length - 1\n+\t\twhile (isBlank(lines.get(last)))\n+\t\t\tlast--\n+\t\tlines = lines.subList(first, last + 1)\n+\t\t// remove common whitespace (e.g. leading blanks) and add prefix to each line\n+\t\tval commonWhitespace = commonLeadingWhitespace(lines)\n+\t\tfor (var n=0; n<lines.length; n++)\n+\t\t\tlines.set(n, prefix + lines.get(n).substring(commonWhitespace.length))\n+\t\t// generate result by joining lines\n+\t\treturn lines.join(System.lineSeparator)\n+\t}\n+\n+\tprivate def isBlank(String line) {\n+\t\treturn line.trim.empty\n+\t}\n+\t\n+\tprivate def String commonLeadingWhitespace(List<String> lines) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6097a10826284ab21c1bbf78421f7117f6298243"}, "originalPosition": 87}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6097a10826284ab21c1bbf78421f7117f6298243", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/6097a10826284ab21c1bbf78421f7117f6298243", "committedDate": "2020-12-18T15:07:18Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}, "afterCommit": {"oid": "1352b1c58779ebc89858bb0a210ce8be63d901ec", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/1352b1c58779ebc89858bb0a210ce8be63d901ec", "committedDate": "2021-01-15T10:01:58Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1352b1c58779ebc89858bb0a210ce8be63d901ec", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/1352b1c58779ebc89858bb0a210ce8be63d901ec", "committedDate": "2021-01-15T10:01:58Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}, "afterCommit": {"oid": "296b8aae994b108949807c1a43bf5ecd20541033", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/296b8aae994b108949807c1a43bf5ecd20541033", "committedDate": "2021-02-05T09:28:15Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "296b8aae994b108949807c1a43bf5ecd20541033", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/296b8aae994b108949807c1a43bf5ecd20541033", "committedDate": "2021-02-05T09:28:15Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}, "afterCommit": {"oid": "854545ce81ecd0ca479d4ac38dc99eabe7bb6046", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/854545ce81ecd0ca479d4ac38dc99eabe7bb6046", "committedDate": "2021-02-05T09:53:02Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg0MjE4OTI0", "url": "https://github.com/eclipse/xtext-core/pull/1653#pullrequestreview-584218924", "createdAt": "2021-02-05T10:41:37Z", "commit": {"oid": "854545ce81ecd0ca479d4ac38dc99eabe7bb6046"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNVQxMDo0MTozN1rOIgbl1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNVQxMDo1MjoyM1rOIgb9FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDg3NzM5OQ==", "bodyText": "Nice nice!", "url": "https://github.com/eclipse/xtext-core/pull/1653#discussion_r570877399", "createdAt": "2021-02-05T10:41:37Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/xtext/generator/GrammarAccessExtensions2Test.java", "diffHunk": "@@ -70,19 +70,20 @@ public void testGrammarFragmentToString() throws Exception {\n \t\t\t\t\"\t| '?:';\\n\";\n \t\tString expected = \n \t\t\t\t\"//OpOther:\" + NL +\n-\t\t\t\t\"//\t'->'\" + NL +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "854545ce81ecd0ca479d4ac38dc99eabe7bb6046"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDg3Nzg5MA==", "bodyText": "\ud83d\udcaa", "url": "https://github.com/eclipse/xtext-core/pull/1653#discussion_r570877890", "createdAt": "2021-02-05T10:42:33Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/grammarAccess/GrammarAccessExtensions.xtend", "diffHunk": "@@ -66,9 +65,6 @@ class GrammarAccessExtensions {\n \t\t\"\\t\" -> \"tab\",\n \t\t\"\\\\\" -> \"backslash\"\n \t};\n-\tval Map<String, ISerializer> xtextSerializerByLineDelimiter = Maps.newHashMapWithExpectedSize(2)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "854545ce81ecd0ca479d4ac38dc99eabe7bb6046"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDg3OTAwNQ==", "bodyText": "I thought we'd need that for the line ending?", "url": "https://github.com/eclipse/xtext-core/pull/1653#discussion_r570879005", "createdAt": "2021-02-05T10:44:41Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/grammarAccess/GrammarAccessExtensions.xtend", "diffHunk": "@@ -66,9 +65,6 @@ class GrammarAccessExtensions {\n \t\t\"\\t\" -> \"tab\",\n \t\t\"\\\\\" -> \"backslash\"\n \t};\n-\tval Map<String, ISerializer> xtextSerializerByLineDelimiter = Maps.newHashMapWithExpectedSize(2)\n-\t\n-\t@Inject CodeConfig codeConfig", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "854545ce81ecd0ca479d4ac38dc99eabe7bb6046"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDg3OTE4MQ==", "bodyText": "This should use the line ending from the code config", "url": "https://github.com/eclipse/xtext-core/pull/1653#discussion_r570879181", "createdAt": "2021-02-05T10:44:57Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/grammarAccess/GrammarAccessExtensions.xtend", "diffHunk": "@@ -396,8 +392,49 @@ class GrammarAccessExtensions {\n \t\t}\n \t}\n \t\n-\tdef String grammarFragmentToString(EObject ele, String prefix) {\n-\t\treturn serializer.grammarFragmentToString(ele, prefix)\n+\tdef String grammarFragmentToString(EObject object, String prefix) {\n+\t\tval node = NodeModelUtils.findActualNodeFor(object)\n+\t\tif (node === null) {\n+\t\t\tif (object instanceof RuleCall)\n+\t\t\t\tif (object?.rule?.name !== null)\n+\t\t\t\t\treturn process(object.rule.name, prefix)\n+\t\t\treturn \"\"\n+\t\t} else {\n+\t\t\treturn node.text.process(prefix)\n+\t\t}\n+\t}\n+\n+\tprivate def process(String input, String prefix) {\n+\t\t// remove leading and trailing blank lines\n+\t\tvar lines = input.split('(\\\\r?\\\\n)')\n+\t\tvar first = 0\n+\t\twhile (isBlank(lines.get(first)))\n+\t\t\tfirst++\n+\t\tvar last = lines.length - 1\n+\t\twhile (isBlank(lines.get(last)))\n+\t\t\tlast--\n+\t\tlines = lines.subList(first, last + 1)\n+\t\t// remove common whitespace (e.g. leading blanks) and add prefix to each line\n+\t\tval commonWhitespace = commonLeadingWhitespace(lines)\n+\t\tfor (var n=0; n<lines.length; n++)\n+\t\t\tlines.set(n, prefix + lines.get(n).substring(commonWhitespace.length))\n+\t\t// generate result by joining lines\n+\t\treturn lines.join(System.lineSeparator)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "854545ce81ecd0ca479d4ac38dc99eabe7bb6046"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDg4MTE2Ng==", "bodyText": "commonLeadingWhitespace ignores blank lines. Let's assume we do have three lines:\n\n   text\n \n   more text\n\nThe commonWhitespace should be 3.\nThe second line has only a single char, though. I'd assume that the logic in line 420 will now fail: lines.get(1).substring(3) will throw an IOOBE.\nI'd say blank lines should be replaced by the prefix itself.", "url": "https://github.com/eclipse/xtext-core/pull/1653#discussion_r570881166", "createdAt": "2021-02-05T10:48:16Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/grammarAccess/GrammarAccessExtensions.xtend", "diffHunk": "@@ -396,8 +392,49 @@ class GrammarAccessExtensions {\n \t\t}\n \t}\n \t\n-\tdef String grammarFragmentToString(EObject ele, String prefix) {\n-\t\treturn serializer.grammarFragmentToString(ele, prefix)\n+\tdef String grammarFragmentToString(EObject object, String prefix) {\n+\t\tval node = NodeModelUtils.findActualNodeFor(object)\n+\t\tif (node === null) {\n+\t\t\tif (object instanceof RuleCall)\n+\t\t\t\tif (object?.rule?.name !== null)\n+\t\t\t\t\treturn process(object.rule.name, prefix)\n+\t\t\treturn \"\"\n+\t\t} else {\n+\t\t\treturn node.text.process(prefix)\n+\t\t}\n+\t}\n+\n+\tprivate def process(String input, String prefix) {\n+\t\t// remove leading and trailing blank lines\n+\t\tvar lines = input.split('(\\\\r?\\\\n)')\n+\t\tvar first = 0\n+\t\twhile (isBlank(lines.get(first)))\n+\t\t\tfirst++\n+\t\tvar last = lines.length - 1\n+\t\twhile (isBlank(lines.get(last)))\n+\t\t\tlast--\n+\t\tlines = lines.subList(first, last + 1)\n+\t\t// remove common whitespace (e.g. leading blanks) and add prefix to each line\n+\t\tval commonWhitespace = commonLeadingWhitespace(lines)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "854545ce81ecd0ca479d4ac38dc99eabe7bb6046"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDg4MjU2Nw==", "bodyText": "If we'd use \\\\s*(\\\\r?\\\\n) we'd automatically righttrim the lines and avoid dangling whitespace in the generated grammar access. What do you think?", "url": "https://github.com/eclipse/xtext-core/pull/1653#discussion_r570882567", "createdAt": "2021-02-05T10:50:53Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/grammarAccess/GrammarAccessExtensions.xtend", "diffHunk": "@@ -396,8 +392,49 @@ class GrammarAccessExtensions {\n \t\t}\n \t}\n \t\n-\tdef String grammarFragmentToString(EObject ele, String prefix) {\n-\t\treturn serializer.grammarFragmentToString(ele, prefix)\n+\tdef String grammarFragmentToString(EObject object, String prefix) {\n+\t\tval node = NodeModelUtils.findActualNodeFor(object)\n+\t\tif (node === null) {\n+\t\t\tif (object instanceof RuleCall)\n+\t\t\t\tif (object?.rule?.name !== null)\n+\t\t\t\t\treturn process(object.rule.name, prefix)\n+\t\t\treturn \"\"\n+\t\t} else {\n+\t\t\treturn node.text.process(prefix)\n+\t\t}\n+\t}\n+\n+\tprivate def process(String input, String prefix) {\n+\t\t// remove leading and trailing blank lines\n+\t\tvar lines = input.split('(\\\\r?\\\\n)')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "854545ce81ecd0ca479d4ac38dc99eabe7bb6046"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDg4MzM0OQ==", "bodyText": "Not sure if we should treat indentation by tabs specially here.", "url": "https://github.com/eclipse/xtext-core/pull/1653#discussion_r570883349", "createdAt": "2021-02-05T10:52:23Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/grammarAccess/GrammarAccessExtensions.xtend", "diffHunk": "@@ -396,8 +392,49 @@ class GrammarAccessExtensions {\n \t\t}\n \t}\n \t\n-\tdef String grammarFragmentToString(EObject ele, String prefix) {\n-\t\treturn serializer.grammarFragmentToString(ele, prefix)\n+\tdef String grammarFragmentToString(EObject object, String prefix) {\n+\t\tval node = NodeModelUtils.findActualNodeFor(object)\n+\t\tif (node === null) {\n+\t\t\tif (object instanceof RuleCall)\n+\t\t\t\tif (object?.rule?.name !== null)\n+\t\t\t\t\treturn process(object.rule.name, prefix)\n+\t\t\treturn \"\"\n+\t\t} else {\n+\t\t\treturn node.text.process(prefix)\n+\t\t}\n+\t}\n+\n+\tprivate def process(String input, String prefix) {\n+\t\t// remove leading and trailing blank lines\n+\t\tvar lines = input.split('(\\\\r?\\\\n)')\n+\t\tvar first = 0\n+\t\twhile (isBlank(lines.get(first)))\n+\t\t\tfirst++\n+\t\tvar last = lines.length - 1\n+\t\twhile (isBlank(lines.get(last)))\n+\t\t\tlast--\n+\t\tlines = lines.subList(first, last + 1)\n+\t\t// remove common whitespace (e.g. leading blanks) and add prefix to each line\n+\t\tval commonWhitespace = commonLeadingWhitespace(lines)\n+\t\tfor (var n=0; n<lines.length; n++)\n+\t\t\tlines.set(n, prefix + lines.get(n).substring(commonWhitespace.length))\n+\t\t// generate result by joining lines\n+\t\treturn lines.join(System.lineSeparator)\n+\t}\n+\n+\tprivate def isBlank(String line) {\n+\t\treturn line.trim.empty\n+\t}\n+\t\n+\tprivate def String commonLeadingWhitespace(List<String> lines) {\n+\t\tif(lines.size() < 2) return \"\";\n+\t\tvar current = Strings.repeat(\" \", lines.get(0).length())\n+\t\tfor (var i = 0; i < lines.length; i++) {\n+\t\t\tval next = lines.get(i);\n+\t\t\tif (!isBlank(next))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "854545ce81ecd0ca479d4ac38dc99eabe7bb6046"}, "originalPosition": 93}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "854545ce81ecd0ca479d4ac38dc99eabe7bb6046", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/854545ce81ecd0ca479d4ac38dc99eabe7bb6046", "committedDate": "2021-02-05T09:53:02Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}, "afterCommit": {"oid": "75e12c04cd24ca1ed02438105e85b36734e1550d", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/75e12c04cd24ca1ed02438105e85b36734e1550d", "committedDate": "2021-02-05T14:54:37Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5MjIxNDA1", "url": "https://github.com/eclipse/xtext-core/pull/1653#pullrequestreview-589221405", "createdAt": "2021-02-12T07:30:44Z", "commit": {"oid": "75e12c04cd24ca1ed02438105e85b36734e1550d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "75e12c04cd24ca1ed02438105e85b36734e1550d", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/75e12c04cd24ca1ed02438105e85b36734e1550d", "committedDate": "2021-02-05T14:54:37Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}, "afterCommit": {"oid": "a191eefcefe06f1a58c9f6b7ab3fe10378e4081a", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/a191eefcefe06f1a58c9f6b7ab3fe10378e4081a", "committedDate": "2021-02-12T07:43:06Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "013f5132fc97fb24744a5594af42f96f28e2fb2f", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/013f5132fc97fb24744a5594af42f96f28e2fb2f", "committedDate": "2021-02-12T08:53:14Z", "message": "[#1626] Regenerate GrammarAccess of test languages.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}, "afterCommit": {"oid": "cca239629f75dfb4740998e3600fe8d75c3ee63d", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/cca239629f75dfb4740998e3600fe8d75c3ee63d", "committedDate": "2021-02-12T09:28:37Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg5Mjk5MDg5", "url": "https://github.com/eclipse/xtext-core/pull/1653#pullrequestreview-589299089", "createdAt": "2021-02-12T09:37:17Z", "commit": {"oid": "cca239629f75dfb4740998e3600fe8d75c3ee63d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMlQwOTozNzoxN1rOIkdAcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0xMlQwOTozNzoxN1rOIkdAcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NTA5NDg5OA==", "bodyText": "Added this case for single lines.", "url": "https://github.com/eclipse/xtext-core/pull/1653#discussion_r575094898", "createdAt": "2021-02-12T09:37:17Z", "author": {"login": "ArneDeutsch"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/grammarAccess/GrammarAccessExtensions.xtend", "diffHunk": "@@ -396,8 +394,59 @@ class GrammarAccessExtensions {\n \t\t}\n \t}\n \t\n-\tdef String grammarFragmentToString(EObject ele, String prefix) {\n-\t\treturn serializer.grammarFragmentToString(ele, prefix)\n+\tdef String grammarFragmentToString(EObject object, String prefix) {\n+\t\tval node = NodeModelUtils.findActualNodeFor(object)\n+\t\tif (node === null) {\n+\t\t\tif (object instanceof RuleCall)\n+\t\t\t\tif (object?.rule?.name !== null)\n+\t\t\t\t\treturn process(object.rule.name, prefix)\n+\t\t\treturn \"\"\n+\t\t} else {\n+\t\t\treturn node.text.process(prefix)\n+\t\t}\n+\t}\n+\n+\tprivate def process(String input, String prefix) {\n+\t\t// remove leading and trailing blank lines\n+\t\tvar lines = input.split('\\\\s*(\\\\r?\\\\n)')\n+\t\tvar first = 0\n+\t\twhile (isBlank(lines.get(first)))\n+\t\t\tfirst++\n+\t\tvar last = lines.length - 1\n+\t\twhile (isBlank(lines.get(last)))\n+\t\t\tlast--\n+\t\tlines = lines.subList(first, last + 1)\n+\t\t// just one line, trim it and be done", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cca239629f75dfb4740998e3600fe8d75c3ee63d"}, "originalPosition": 80}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ab3672c97d9f10c98769c50014366c23508802b", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/8ab3672c97d9f10c98769c50014366c23508802b", "committedDate": "2021-02-12T10:01:11Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cca239629f75dfb4740998e3600fe8d75c3ee63d", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/cca239629f75dfb4740998e3600fe8d75c3ee63d", "committedDate": "2021-02-12T09:28:37Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}, "afterCommit": {"oid": "8ab3672c97d9f10c98769c50014366c23508802b", "author": {"user": {"login": "ArneDeutsch", "name": "Arne Deutsch"}}, "url": "https://github.com/eclipse/xtext-core/commit/8ab3672c97d9f10c98769c50014366c23508802b", "committedDate": "2021-02-12T10:01:11Z", "message": "[#1626] Use node model to generate comments with original format.\n\nSigned-off-by: Arne Deutsch <Arne.Deutsch@itemis.de>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4598, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}