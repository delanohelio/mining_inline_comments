{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNTQ1MzMy", "number": 1603, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODo1ODowMFrOE0SOZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOToxNDoxOFrOE0Sk7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjYwMDA0OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/formatting2/internal/TestableTextSegmentSet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODo1ODowMFrOHr7TCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODo1ODowMFrOHr7TCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMjM0Nw==", "bodyText": "new ArrayList<>();", "url": "https://github.com/eclipse/xtext-core/pull/1603#discussion_r515822347", "createdAt": "2020-11-02T08:58:00Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/formatting2/internal/TestableTextSegmentSet.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/**\n+ * Copyright (c) 2014, 2017 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.formatting2.internal;\n+\n+import java.util.List;\n+\n+import org.eclipse.xtext.formatting2.regionaccess.ITextSegment;\n+import org.eclipse.xtext.xbase.lib.CollectionLiterals;\n+\n+import com.google.common.base.Joiner;\n+import com.google.common.collect.Iterables;\n+\n+/**\n+ * @author Moritz Eysholdt - Initial contribution and API\n+ */\n+public class TestableTextSegmentSet {\n+\tprivate List<String> issues = CollectionLiterals.<String>newArrayList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cc2772118d9af05d8bf6ee1561f9f77428b1d7d"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjYwMTcxOnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/formatting2/internal/TestableTextSegmentSet.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODo1ODoyNlrOHr7UFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODo1ODoyNlrOHr7UFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMjYxMg==", "bodyText": "Constructor could be moved to the top.", "url": "https://github.com/eclipse/xtext-core/pull/1603#discussion_r515822612", "createdAt": "2020-11-02T08:58:26Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/formatting2/internal/TestableTextSegmentSet.java", "diffHunk": "@@ -0,0 +1,57 @@\n+/**\n+ * Copyright (c) 2014, 2017 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.formatting2.internal;\n+\n+import java.util.List;\n+\n+import org.eclipse.xtext.formatting2.regionaccess.ITextSegment;\n+import org.eclipse.xtext.xbase.lib.CollectionLiterals;\n+\n+import com.google.common.base.Joiner;\n+import com.google.common.collect.Iterables;\n+\n+/**\n+ * @author Moritz Eysholdt - Initial contribution and API\n+ */\n+public class TestableTextSegmentSet {\n+\tprivate List<String> issues = CollectionLiterals.<String>newArrayList();\n+\n+\tprivate TextSegmentSet<ITextSegment> set;\n+\n+\tprivate String fmt(ITextSegment region) {\n+\t\treturn \"[\" + region.getOffset() + \",\" + region.getLength() + \"]\";\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\tStringBuilder builder = new StringBuilder();\n+\t\tbuilder.append(\"issues=\");\n+\t\tbuilder.append(Joiner.on(\", \").join(issues));\n+\t\tbuilder.append(\"\\n\");\n+\t\tbuilder.append(\"set=\");\n+\t\tbuilder.append(Iterables.transform(set, it -> \"[\" + it.getOffset() + \",\" + it.getLength() + \"]\")\n+\t\t\t\t.toString().replace(\"\\n\", \", \"));\n+\t\tbuilder.append(\"\\n\");\n+\t\treturn builder.toString();\n+\t}\n+\n+\tpublic void add(ITextSegment segment) {\n+\t\ttry {\n+\t\t\tset.add(segment);\n+\t\t} catch (ConflictingRegionsException e) {\n+\t\t\tIterable<ITextSegment> conflicting = Iterables.transform(e.getTraces(), RegionTrace::getRegion);\n+\t\t\tissues.add(\"mergeConflict:\" + Joiner.on(\"<>\")\n+\t\t\t\t\t.join(Iterables.transform(conflicting, this::fmt)));\n+\t\t}\n+\t}\n+\n+\tpublic TestableTextSegmentSet(TextSegmentSet<ITextSegment> set) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cc2772118d9af05d8bf6ee1561f9f77428b1d7d"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjYzODI3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/generator/trace/TraceRegionMergerTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOTowODo0NFrOHr7pwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOToxMjoxNlrOHr7xfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyODE2Mg==", "bodyText": "Sidenote: For production code I'd prefer to avoid CollectionLiterals. For tests it's ok to me.", "url": "https://github.com/eclipse/xtext-core/pull/1603#discussion_r515828162", "createdAt": "2020-11-02T09:08:44Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/generator/trace/TraceRegionMergerTest.java", "diffHunk": "@@ -0,0 +1,381 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.generator.trace;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Queue;\n+import java.util.Set;\n+\n+import org.eclipse.emf.common.util.URI;\n+import org.eclipse.xtext.xbase.lib.CollectionLiterals;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cc2772118d9af05d8bf6ee1561f9f77428b1d7d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyODY0Nw==", "bodyText": "i dont know a proper replacement for this", "url": "https://github.com/eclipse/xtext-core/pull/1603#discussion_r515828647", "createdAt": "2020-11-02T09:09:35Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/generator/trace/TraceRegionMergerTest.java", "diffHunk": "@@ -0,0 +1,381 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.generator.trace;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Queue;\n+import java.util.Set;\n+\n+import org.eclipse.emf.common.util.URI;\n+import org.eclipse.xtext.xbase.lib.CollectionLiterals;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyODE2Mg=="}, "originalCommit": {"oid": "4cc2772118d9af05d8bf6ee1561f9f77428b1d7d"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgzMDE0Mg==", "bodyText": "will inline ugly code", "url": "https://github.com/eclipse/xtext-core/pull/1603#discussion_r515830142", "createdAt": "2020-11-02T09:12:16Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/generator/trace/TraceRegionMergerTest.java", "diffHunk": "@@ -0,0 +1,381 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.generator.trace;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Queue;\n+import java.util.Set;\n+\n+import org.eclipse.emf.common.util.URI;\n+import org.eclipse.xtext.xbase.lib.CollectionLiterals;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyODE2Mg=="}, "originalCommit": {"oid": "4cc2772118d9af05d8bf6ee1561f9f77428b1d7d"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjY1NzczOnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/generator/trace/TraceRegionMergerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOToxNDoxOFrOHr71ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOToxNDoxOFrOHr71ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgzMTE0MQ==", "bodyText": "I was about to suggest new LinkedList<>(Arrays.asList(mergedRoot))", "url": "https://github.com/eclipse/xtext-core/pull/1603#discussion_r515831141", "createdAt": "2020-11-02T09:14:18Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/generator/trace/TraceRegionMergerTest.java", "diffHunk": "@@ -0,0 +1,381 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.generator.trace;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Queue;\n+import java.util.Set;\n+\n+import org.eclipse.emf.common.util.URI;\n+import org.eclipse.xtext.xbase.lib.Functions.Function1;\n+import org.eclipse.xtext.xbase.lib.IterableExtensions;\n+import org.eclipse.xtext.xbase.lib.Procedures.Procedure1;\n+import org.junit.Assert;\n+import org.junit.Test;\n+\n+import com.google.common.collect.Lists;\n+\n+/**\n+ * @author Jan Koehnlein - Initial contribution and API\n+ */\n+public class TraceRegionMergerTest {\n+\tpublic static class TestBuilder {\n+\t\tprivate List<AbstractTraceRegion> roots = new ArrayList<>();\n+\n+\t\tpublic TestBuilder traceTo(String uri, Function1<? super TraceBuilder, ? extends AbstractTraceRegion> init) {\n+\t\t\tTraceBuilder traceBuilder = new TraceBuilder(this, uri);\n+\t\t\troots.add(init.apply(traceBuilder));\n+\t\t\treturn this;\n+\t\t}\n+\n+\t\tpublic void assertMerged(Procedure1<? super AssertBuilder> init) {\n+\t\t\tAbstractTraceRegion mergedRoot = new TraceRegionMerger().mergeTraceRegions(roots);\n+\t\t\tAssert.assertNotNull(mergedRoot);\n+\t\t\tAssertBuilder assertBuilder = new AssertBuilder(this, Lists.newLinkedList(Collections.singletonList(mergedRoot)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdbe7d81984fe103158c0087d7cb17f5c711a36e"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 998, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}