{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NDI3ODQz", "number": 1453, "title": "[eclipse/xtext#1679] converted Xtend code to Java", "bodyText": "[eclipse/xtext#1679] converted Xtend code to Java\nSigned-off-by: Christian Dietrich christian.dietrich@itemis.de", "createdAt": "2020-04-24T09:09:23Z", "url": "https://github.com/eclipse/xtext-core/pull/1453", "merged": true, "mergeCommit": {"oid": "2933c1f7d7e049cc3c16297df227208a8d7886f3"}, "closed": true, "closedAt": "2020-04-24T12:51:45Z", "author": {"login": "cdietrich"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcat0JcAFqTM5OTc3MzcwNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcayEJpAFqTM5OTk3OTEyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NzczNzA1", "url": "https://github.com/eclipse/xtext-core/pull/1453#pullrequestreview-399773705", "createdAt": "2020-04-24T09:10:48Z", "commit": {"oid": "fe4adf22efa2896aac80bda1a501a93cc5f0099b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToxMDo0OFrOGLON_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToxMDo0OFrOGLON_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyMDQ3OA==", "bodyText": "final", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414420478", "createdAt": "2020-04-24T09:10:48Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/model/annotations/GeneratedClassAnnotation.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.model.annotations;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+\n+import org.eclipse.xtext.util.Strings;\n+import org.eclipse.xtext.xtext.generator.XtextGenerator;\n+import org.eclipse.xtext.xtext.generator.model.JavaFileAccess;\n+import org.eclipse.xtext.xtext.generator.model.TypeReference;\n+\n+/**\n+ * A class annotation configuration for the <code>@Generated</code> annotation.\n+ */\n+public class GeneratedClassAnnotation implements IClassAnnotation {\n+\tprivate boolean includeDate = false;\n+\n+\tprivate String comment;\n+\n+\t@Override\n+\tpublic CharSequence generate() {\n+\t\tStringBuilder stringBuilder = new StringBuilder(\"@Generated(\");\n+\t\tif (includeDate || !Strings.isEmpty(comment)) {\n+\t\t\tstringBuilder.append(\"value = \");\n+\t\t}\n+\t\tstringBuilder.append(\"\\\"\");\n+\t\tstringBuilder.append(getGeneratorName());\n+\t\tstringBuilder.append(\"\\\"\");\n+\t\tif (includeDate) {\n+\t\t\tSimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\\'T\\'HH:mmZ\");\n+\t\t\tString date = dateFormat.format(new Date());\n+\t\t\tstringBuilder.append(\", date = \\\"\");\n+\t\t\tstringBuilder.append(date);\n+\t\t\tstringBuilder.append(\"\\\"\");\n+\t\t}\n+\t\tif (!Strings.isEmpty(comment)) {\n+\t\t\tstringBuilder.append(\", comments = \\\"\");\n+\t\t\tstringBuilder.append(Strings.convertToJavaString(comment));\n+\t\t\tstringBuilder.append(\"\\\"\");\n+\t\t}\n+\t\tstringBuilder.append(\")\");\n+\t\treturn stringBuilder;\n+\t}\n+\n+\tprotected String getGeneratorName() {\n+\t\treturn XtextGenerator.class.getName();\n+\t}\n+\n+\t@Override\n+\tpublic boolean appliesTo(JavaFileAccess javaFile) {\n+\t\treturn javaFile.isMarkedAsGenerated();\n+\t}\n+\n+\t@Override\n+\tpublic TypeReference getAnnotationImport() {\n+\t\treturn new TypeReference(\"javax.annotation.Generated\");\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn generate().toString();\n+\t}\n+\n+\t@Override\n+\tpublic boolean equals(final Object obj) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4adf22efa2896aac80bda1a501a93cc5f0099b"}, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5Nzc0MjA5", "url": "https://github.com/eclipse/xtext-core/pull/1453#pullrequestreview-399774209", "createdAt": "2020-04-24T09:11:28Z", "commit": {"oid": "fe4adf22efa2896aac80bda1a501a93cc5f0099b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToxMToyOFrOGLOPvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOToxMToyOFrOGLOPvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQyMDkyNw==", "bodyText": "this.", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414420927", "createdAt": "2020-04-24T09:11:28Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/parser/antlr/AntlrGrammar.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.parser.antlr;\n+\n+public class AntlrGrammar {\n+\tprivate final String packageName;\n+\n+\tprivate final String simpleName;\n+\n+\tpublic String getName() {\n+\t\treturn packageName + \".\" + simpleName;\n+\t}\n+\n+\tpublic String getGrammarFileName() {\n+\t\treturn getName().replace('.', '/') + \".g\";\n+\t}\n+\n+\tpublic String getTokensFileName() {\n+\t\treturn getName().replace('.', '/') + \".tokens\";\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn this.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4adf22efa2896aac80bda1a501a93cc5f0099b"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847", "committedDate": "2020-04-24T09:12:44Z", "message": "[eclipse/xtext#1679] converted Xtend code to Java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe4adf22efa2896aac80bda1a501a93cc5f0099b", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/fe4adf22efa2896aac80bda1a501a93cc5f0099b", "committedDate": "2020-04-21T21:17:17Z", "message": "[eclipse/xtext#1679] converted Xtend code to Java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847", "committedDate": "2020-04-24T09:12:44Z", "message": "[eclipse/xtext#1679] converted Xtend code to Java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NzkzNTI4", "url": "https://github.com/eclipse/xtext-core/pull/1453#pullrequestreview-399793528", "createdAt": "2020-04-24T09:38:17Z", "commit": {"oid": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTozODoxN1rOGLPTxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo0NDozN1rOGLPjyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQzODM0MQ==", "bodyText": "append(char) would relieve you from the escape sequence.", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414438341", "createdAt": "2020-04-24T09:38:17Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/model/annotations/GeneratedClassAnnotation.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.model.annotations;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+\n+import org.eclipse.xtext.util.Strings;\n+import org.eclipse.xtext.xtext.generator.XtextGenerator;\n+import org.eclipse.xtext.xtext.generator.model.JavaFileAccess;\n+import org.eclipse.xtext.xtext.generator.model.TypeReference;\n+\n+/**\n+ * A class annotation configuration for the <code>@Generated</code> annotation.\n+ */\n+public class GeneratedClassAnnotation implements IClassAnnotation {\n+\tprivate boolean includeDate = false;\n+\n+\tprivate String comment;\n+\n+\t@Override\n+\tpublic CharSequence generate() {\n+\t\tStringBuilder stringBuilder = new StringBuilder(\"@Generated(\");\n+\t\tif (includeDate || !Strings.isEmpty(comment)) {\n+\t\t\tstringBuilder.append(\"value = \");\n+\t\t}\n+\t\tstringBuilder.append(\"\\\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQzOTEwMg==", "bodyText": "Unrelated: Subclasses will have different hashCodes but answer true from equals.", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414439102", "createdAt": "2020-04-24T09:39:26Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/model/annotations/GeneratedClassAnnotation.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.model.annotations;\n+\n+import java.text.SimpleDateFormat;\n+import java.util.Date;\n+\n+import org.eclipse.xtext.util.Strings;\n+import org.eclipse.xtext.xtext.generator.XtextGenerator;\n+import org.eclipse.xtext.xtext.generator.model.JavaFileAccess;\n+import org.eclipse.xtext.xtext.generator.model.TypeReference;\n+\n+/**\n+ * A class annotation configuration for the <code>@Generated</code> annotation.\n+ */\n+public class GeneratedClassAnnotation implements IClassAnnotation {\n+\tprivate boolean includeDate = false;\n+\n+\tprivate String comment;\n+\n+\t@Override\n+\tpublic CharSequence generate() {\n+\t\tStringBuilder stringBuilder = new StringBuilder(\"@Generated(\");\n+\t\tif (includeDate || !Strings.isEmpty(comment)) {\n+\t\t\tstringBuilder.append(\"value = \");\n+\t\t}\n+\t\tstringBuilder.append(\"\\\"\");\n+\t\tstringBuilder.append(getGeneratorName());\n+\t\tstringBuilder.append(\"\\\"\");\n+\t\tif (includeDate) {\n+\t\t\tSimpleDateFormat dateFormat = new SimpleDateFormat(\"yyyy-MM-dd\\'T\\'HH:mmZ\");\n+\t\t\tString date = dateFormat.format(new Date());\n+\t\t\tstringBuilder.append(\", date = \\\"\");\n+\t\t\tstringBuilder.append(date);\n+\t\t\tstringBuilder.append(\"\\\"\");\n+\t\t}\n+\t\tif (!Strings.isEmpty(comment)) {\n+\t\t\tstringBuilder.append(\", comments = \\\"\");\n+\t\t\tstringBuilder.append(Strings.convertToJavaString(comment));\n+\t\t\tstringBuilder.append(\"\\\"\");\n+\t\t}\n+\t\tstringBuilder.append(\")\");\n+\t\treturn stringBuilder;\n+\t}\n+\n+\tprotected String getGeneratorName() {\n+\t\treturn XtextGenerator.class.getName();\n+\t}\n+\n+\t@Override\n+\tpublic boolean appliesTo(JavaFileAccess javaFile) {\n+\t\treturn javaFile.isMarkedAsGenerated();\n+\t}\n+\n+\t@Override\n+\tpublic TypeReference getAnnotationImport() {\n+\t\treturn new TypeReference(\"javax.annotation.Generated\");\n+\t}\n+\n+\t@Override\n+\tpublic String toString() {\n+\t\treturn generate().toString();\n+\t}\n+\n+\t@Override\n+\tpublic boolean equals(Object obj) {\n+\t\treturn obj instanceof GeneratedClassAnnotation;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQzOTk0MA==", "bodyText": "Splitter.on(',').trimResults()", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414439940", "createdAt": "2020-04-24T09:40:44Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/model/annotations/SuppressWarningsAnnotation.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.model.annotations;\n+\n+import java.util.Arrays;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.xtext.xtext.generator.model.JavaFileAccess;\n+import org.eclipse.xtext.xtext.generator.model.TypeReference;\n+\n+/**\n+ * A class annotation configuration for the <code>@SuppressWarnings</code>\n+ * annotation.\n+ */\n+public class SuppressWarningsAnnotation implements IClassAnnotation {\n+\tprivate String suppress = \"all\";\n+\n+\t@Override\n+\tpublic CharSequence generate() {\n+\t\tStringBuilder stringBuilder = new StringBuilder(\"@SuppressWarnings(\");\n+\t\tString[] suppressedWarnings = suppress.split(\"\\\\s*,\\\\s*\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MjQ0Mw==", "bodyText": "Paranoid: '\"' + Strings.convertToJavaString(s) '\"'", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414442443", "createdAt": "2020-04-24T09:44:37Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/model/annotations/SuppressWarningsAnnotation.java", "diffHunk": "@@ -0,0 +1,72 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.model.annotations;\n+\n+import java.util.Arrays;\n+import java.util.stream.Collectors;\n+\n+import org.eclipse.xtext.xtext.generator.model.JavaFileAccess;\n+import org.eclipse.xtext.xtext.generator.model.TypeReference;\n+\n+/**\n+ * A class annotation configuration for the <code>@SuppressWarnings</code>\n+ * annotation.\n+ */\n+public class SuppressWarningsAnnotation implements IClassAnnotation {\n+\tprivate String suppress = \"all\";\n+\n+\t@Override\n+\tpublic CharSequence generate() {\n+\t\tStringBuilder stringBuilder = new StringBuilder(\"@SuppressWarnings(\");\n+\t\tString[] suppressedWarnings = suppress.split(\"\\\\s*,\\\\s*\");\n+\t\tif (suppressedWarnings.length != 1) {\n+\t\t\tstringBuilder.append(\"{\");\n+\t\t}\n+\t\tString value = Arrays.stream(suppressedWarnings).map((s)-> \"\\\"\" + s + \"\\\"\").collect(Collectors.joining( \", \" ));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5OTc5MTIy", "url": "https://github.com/eclipse/xtext-core/pull/1453#pullrequestreview-399979122", "createdAt": "2020-04-24T14:07:54Z", "commit": {"oid": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDowNzo1NFrOGLZb1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDowNzo1NFrOGLZb1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYwNDI0NQ==", "bodyText": "Objects.equal(grammar.getName(), languageID) -> grammar.getName().equals(languageID)", "url": "https://github.com/eclipse/xtext-core/pull/1453#discussion_r414604245", "createdAt": "2020-04-24T14:07:54Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/util/GrammarUtil2.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator.util;\n+\n+import org.eclipse.xtext.Grammar;\n+import org.eclipse.xtext.GrammarUtil;\n+\n+import com.google.common.base.Objects;\n+\n+public class GrammarUtil2 extends GrammarUtil {\n+\tpublic static final String TERMINALS = \"org.eclipse.xtext.common.Terminals\";\n+\n+\tpublic static boolean inherits(Grammar grammar, String languageID) {\n+\t\tif (Objects.equal(grammar.getName(), languageID)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0feb2d17a22e9d4d10d7cee539f4c0b3bc8ac847"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4761, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}