{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNTMzOTQ0", "number": 1460, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0MjoyMVrOD3gwbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNTo1MDowNVrOD7twkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTM0OTU2OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0MjoyMVrOGNzPFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODo0Mzo1N1rOGN1RcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDExNw==", "bodyText": "Unfortunately this is not generally applicable, e.g. languages with synthetic tokens or semantic whitespace will break. This method must at least be protected", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417124117", "createdAt": "2020-04-29T07:42:21Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456963cc6d1207a94b021921afd2f2dba6d36293"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0ODI1Ng==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417148256", "createdAt": "2020-04-29T08:27:37Z", "author": {"login": "miklossy"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDExNw=="}, "originalCommit": {"oid": "456963cc6d1207a94b021921afd2f2dba6d36293"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1MTE3Mw==", "bodyText": "Unfortunately this is not generally applicable, e.g. languages with synthetic tokens or semantic whitespace will break.\n\nActually I think that it is really too dangerous to modify the code in the xtext-core code base. Hence it is quite difficult to provide a general solution there, I would prefer to fix the problem only on the Domainmodel example side. We can still consider a general solution later on, if lot of \"client projects\" claims about the problem, but for the time being a fix only for the Domainmodel example would satisfy my needs.\n@cdietrich @szarnekow : If you agree, I will close this PR and provide another one in xtext-eclipse.", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417151173", "createdAt": "2020-04-29T08:32:51Z", "author": {"login": "miklossy"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDExNw=="}, "originalCommit": {"oid": "456963cc6d1207a94b021921afd2f2dba6d36293"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE1NzQ4OA==", "bodyText": "@miklossy I didn't want to scare you and I'm sure that you'll get this straight. If you don't mind, I'll be happy to give advice and provide feedback.", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417157488", "createdAt": "2020-04-29T08:43:57Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDExNw=="}, "originalCommit": {"oid": "456963cc6d1207a94b021921afd2f2dba6d36293"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTM1MTk3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0MzowMFrOGNzQhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoyNzo0NlrOGN0trQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDQ4NQ==", "bodyText": "Checks against implementation classes of the node model must be avoided. Please use instanceof ILeafNode && node.isHidden() instead.", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417124485", "createdAt": "2020-04-29T07:43:00Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (containsOnlyWhiteSpaces(remainingText) && whiteSpaceFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprivate boolean whiteSpaceFollows(ICompositeNode node) {\n+\t\treturn node.hasNextSibling() && node.getNextSibling() instanceof HiddenLeafNode;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456963cc6d1207a94b021921afd2f2dba6d36293"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjAyOQ==", "bodyText": "In any case, the logic here is unfortunately flawed. If I understand the intention behind this code correctly, it must be something like node.getLeadNodes().head().isHidden() - though the name whiteSpaceFollows is misleading given that comment nodes are also hidden.", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417126029", "createdAt": "2020-04-29T07:46:03Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (containsOnlyWhiteSpaces(remainingText) && whiteSpaceFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprivate boolean whiteSpaceFollows(ICompositeNode node) {\n+\t\treturn node.hasNextSibling() && node.getNextSibling() instanceof HiddenLeafNode;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDQ4NQ=="}, "originalCommit": {"oid": "456963cc6d1207a94b021921afd2f2dba6d36293"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0ODMzMw==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417148333", "createdAt": "2020-04-29T08:27:46Z", "author": {"login": "miklossy"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (containsOnlyWhiteSpaces(remainingText) && whiteSpaceFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprivate boolean whiteSpaceFollows(ICompositeNode node) {\n+\t\treturn node.hasNextSibling() && node.getNextSibling() instanceof HiddenLeafNode;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDQ4NQ=="}, "originalCommit": {"oid": "456963cc6d1207a94b021921afd2f2dba6d36293"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTM1NDk5OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0Mzo1OFrOGNzSZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoyNzo1OFrOGN0uMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDk2Ng==", "bodyText": "Could be CharMatcher.whitespac().matchesAllOf(text)", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417124966", "createdAt": "2020-04-29T07:43:58Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (containsOnlyWhiteSpaces(remainingText) && whiteSpaceFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprivate boolean whiteSpaceFollows(ICompositeNode node) {\n+\t\treturn node.hasNextSibling() && node.getNextSibling() instanceof HiddenLeafNode;\n+\t}\n+\n+\tprivate boolean containsOnlyWhiteSpaces(String text) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456963cc6d1207a94b021921afd2f2dba6d36293"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0ODQ2Ng==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417148466", "createdAt": "2020-04-29T08:27:58Z", "author": {"login": "miklossy"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (containsOnlyWhiteSpaces(remainingText) && whiteSpaceFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprivate boolean whiteSpaceFollows(ICompositeNode node) {\n+\t\treturn node.hasNextSibling() && node.getNextSibling() instanceof HiddenLeafNode;\n+\t}\n+\n+\tprivate boolean containsOnlyWhiteSpaces(String text) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNDk2Ng=="}, "originalCommit": {"oid": "456963cc6d1207a94b021921afd2f2dba6d36293"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTM2MjU1OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0NjoxMVrOGNzW0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoyNzo1MlrOGN0t6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjA5Nw==", "bodyText": "whiteSpace -> whitespace", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417126097", "createdAt": "2020-04-29T07:46:11Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (containsOnlyWhiteSpaces(remainingText) && whiteSpaceFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprivate boolean whiteSpaceFollows(ICompositeNode node) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456963cc6d1207a94b021921afd2f2dba6d36293"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0ODM5NA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417148394", "createdAt": "2020-04-29T08:27:52Z", "author": {"login": "miklossy"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (containsOnlyWhiteSpaces(remainingText) && whiteSpaceFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprivate boolean whiteSpaceFollows(ICompositeNode node) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjA5Nw=="}, "originalCommit": {"oid": "456963cc6d1207a94b021921afd2f2dba6d36293"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTM2MzY3OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0NjoyN1rOGNzXfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwODoyODowNVrOGN0ubA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjI2OQ==", "bodyText": "containsOnlyWhiteSpaces -> isWhitespace", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417126269", "createdAt": "2020-04-29T07:46:27Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (containsOnlyWhiteSpaces(remainingText) && whiteSpaceFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprivate boolean whiteSpaceFollows(ICompositeNode node) {\n+\t\treturn node.hasNextSibling() && node.getNextSibling() instanceof HiddenLeafNode;\n+\t}\n+\n+\tprivate boolean containsOnlyWhiteSpaces(String text) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456963cc6d1207a94b021921afd2f2dba6d36293"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzE0ODUyNA==", "bodyText": "Fixed.", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r417148524", "createdAt": "2020-04-29T08:28:05Z", "author": {"login": "miklossy"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +211,28 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprivate int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (containsOnlyWhiteSpaces(remainingText) && whiteSpaceFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprivate boolean whiteSpaceFollows(ICompositeNode node) {\n+\t\treturn node.hasNextSibling() && node.getNextSibling() instanceof HiddenLeafNode;\n+\t}\n+\n+\tprivate boolean containsOnlyWhiteSpaces(String text) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyNjI2OQ=="}, "originalCommit": {"oid": "456963cc6d1207a94b021921afd2f2dba6d36293"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMzU3NjAwOnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwOToyMToyNlrOGTT9rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwOToyMToyNlrOGTT9rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjkwMzIxNA==", "bodyText": "If the next sibling is a composite node, it's first child may still be a hidden node.\nIf you want to catch those, too, I recommend to use something like nextSibling.getLeafNodes() and check the first node in that list.", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r422903214", "createdAt": "2020-05-11T09:21:26Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +213,35 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprotected int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (isWhitespace(remainingText) && hiddenNodeFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\tprotected boolean hiddenNodeFollows(ICompositeNode node) {\n+\t\tif (node.hasNextSibling()) {\n+\t\t\tINode nextSibling = node.getNextSibling();\n+\t\t\tif (nextSibling instanceof ILeafNode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fcb8e929483ef4aa46cf7c51ed91233dacdcb2d6"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODc1NTQ1OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzozMToyMFrOGUGs1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzozMToyMFrOGUGs1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzczNDQ4Ng==", "bodyText": "Please also add @Since tags to the new methods.", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r423734486", "createdAt": "2020-05-12T13:31:20Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +213,50 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\tprotected int calculateReplaceRegionLength(ICompositeNode node, String text) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b3be053f97b9ff61033fdd7d37c481086a13f64f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTQyMjg4OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNTo1MDowNVrOGUNUQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNTo1Mzo0OVrOGUNfgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0Mjg4Mg==", "bodyText": "Last thing that slipped through: This method should either be protected or the since tag is unnecessary.", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r423842882", "createdAt": "2020-05-12T15:50:05Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +213,60 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\t/**\n+\t * @since 2.22\n+\t */\n+\tprotected int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (isWhitespace(remainingText) && hiddenNodeFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\t/**\n+\t * @since 2.22\n+\t */\n+\tprotected boolean hiddenNodeFollows(ICompositeNode node) {\n+\t\tINode followingNode = getFollowingNode(node);\n+\t\tif (followingNode instanceof ILeafNode) {\n+\t\t\treturn ((ILeafNode)followingNode).isHidden();\n+\t\t}\n+\t\treturn false;\n+\t}\n+\t\n+\t/**\n+\t * Returns the node that follows the <i>node</i>, independently, if they have the same parent.\n+\t * @since 2.22\n+\t */\n+\tprotected INode getFollowingNode(ICompositeNode node) {\n+\t\tif (node != null) {\n+\t\t\tif (node.hasNextSibling()) {\n+\t\t\t\tINode nextSibling = node.getNextSibling();\n+\t\t\t\tIterator<ILeafNode> nextSiblingLeafNodes = nextSibling.getLeafNodes().iterator();\n+\t\t\t\tif (nextSiblingLeafNodes.hasNext()) {\n+\t\t\t\t\treturn nextSiblingLeafNodes.next();\n+\t\t\t\t} else {\n+\t\t\t\t\treturn getFollowingNode(node.getParent());\n+\t\t\t\t}\t\n+\t\t\t}\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\t/**\n+\t * @since 2.22\n+\t */\n+\tprivate boolean isWhitespace(String text) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9461115cff650e12320d22ba6f63d09ea8e8a91"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0NTc2Mw==", "bodyText": "I changed the method visibility to protected.", "url": "https://github.com/eclipse/xtext-core/pull/1460#discussion_r423845763", "createdAt": "2020-05-12T15:53:49Z", "author": {"login": "miklossy"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/serializer/impl/Serializer.java", "diffHunk": "@@ -210,7 +213,60 @@ public ReplaceRegion serializeReplacement(EObject obj, SaveOptions options) {\n \t\t\tthrow new IllegalStateException(\"Cannot replace an obj that has no associated node\");\n \t\t}\n \t\tString text = serialize(obj, options);\n-\t\treturn new ReplaceRegion(node.getTotalOffset(), node.getTotalLength(), text);\n+\t\tint replaceRegionLength = calculateReplaceRegionLength(node, text);\n+\t\treturn new ReplaceRegion(node.getTotalOffset(), replaceRegionLength, text);\n \t}\n \n+\t/**\n+\t * @since 2.22\n+\t */\n+\tprotected int calculateReplaceRegionLength(ICompositeNode node, String text) {\n+\t\tint oldTextLength = node.getTotalLength();\n+\t\tint newTextLength = text.length();\n+\n+\t\tif (newTextLength > oldTextLength) {\n+\t\t\tString remainingText = text.substring(oldTextLength);\n+\t\t\tif (isWhitespace(remainingText) && hiddenNodeFollows(node)) {\n+\t\t\t\treturn newTextLength;\n+\t\t\t}\n+\t\t}\n+\t\treturn oldTextLength;\n+\t}\n+\n+\t/**\n+\t * @since 2.22\n+\t */\n+\tprotected boolean hiddenNodeFollows(ICompositeNode node) {\n+\t\tINode followingNode = getFollowingNode(node);\n+\t\tif (followingNode instanceof ILeafNode) {\n+\t\t\treturn ((ILeafNode)followingNode).isHidden();\n+\t\t}\n+\t\treturn false;\n+\t}\n+\t\n+\t/**\n+\t * Returns the node that follows the <i>node</i>, independently, if they have the same parent.\n+\t * @since 2.22\n+\t */\n+\tprotected INode getFollowingNode(ICompositeNode node) {\n+\t\tif (node != null) {\n+\t\t\tif (node.hasNextSibling()) {\n+\t\t\t\tINode nextSibling = node.getNextSibling();\n+\t\t\t\tIterator<ILeafNode> nextSiblingLeafNodes = nextSibling.getLeafNodes().iterator();\n+\t\t\t\tif (nextSiblingLeafNodes.hasNext()) {\n+\t\t\t\t\treturn nextSiblingLeafNodes.next();\n+\t\t\t\t} else {\n+\t\t\t\t\treturn getFollowingNode(node.getParent());\n+\t\t\t\t}\t\n+\t\t\t}\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\t/**\n+\t * @since 2.22\n+\t */\n+\tprivate boolean isWhitespace(String text) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg0Mjg4Mg=="}, "originalCommit": {"oid": "a9461115cff650e12320d22ba6f63d09ea8e8a91"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1101, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}