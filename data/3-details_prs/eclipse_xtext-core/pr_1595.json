{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MDc2NTcx", "number": 1595, "title": "[eclipse/xtext#1837] converted xtend 2 java", "bodyText": "[eclipse/xtext#1837] converted xtend 2 java\nSigned-off-by: Christian Dietrich christian.dietrich@itemis.de", "createdAt": "2020-10-20T20:28:27Z", "url": "https://github.com/eclipse/xtext-core/pull/1595", "merged": true, "mergeCommit": {"oid": "be53e1d841124210d8b9589cf7d4129a0eeae11f"}, "closed": true, "closedAt": "2020-10-23T07:38:30Z", "author": {"login": "cdietrich"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUqZqlABqjM5MDI5ODIzOTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVRdufAFqTUxNTQxMDM5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a047a98514b8eb36ca9e6cefa4782c73f8f91ac", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/8a047a98514b8eb36ca9e6cefa4782c73f8f91ac", "committedDate": "2020-10-20T20:27:45Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "203a64aa0359ddcbccf873b32b614a32336bbe29", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/203a64aa0359ddcbccf873b32b614a32336bbe29", "committedDate": "2020-10-21T09:59:39Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "203a64aa0359ddcbccf873b32b614a32336bbe29", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/203a64aa0359ddcbccf873b32b614a32336bbe29", "committedDate": "2020-10-21T09:59:39Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "a0027ab7d3133baf2624ae0b057787a57968c89a", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/a0027ab7d3133baf2624ae0b057787a57968c89a", "committedDate": "2020-10-21T10:05:06Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0027ab7d3133baf2624ae0b057787a57968c89a", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/a0027ab7d3133baf2624ae0b057787a57968c89a", "committedDate": "2020-10-21T10:05:06Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "6b4013f491bc24a8ebd01c04bff120d2c897693c", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/6b4013f491bc24a8ebd01c04bff120d2c897693c", "committedDate": "2020-10-21T10:37:07Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b4013f491bc24a8ebd01c04bff120d2c897693c", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/6b4013f491bc24a8ebd01c04bff120d2c897693c", "committedDate": "2020-10-21T10:37:07Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "b2d43ce2817706ad9de4b2c4af1c030c612189ef", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/b2d43ce2817706ad9de4b2c4af1c030c612189ef", "committedDate": "2020-10-21T10:44:27Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2d43ce2817706ad9de4b2c4af1c030c612189ef", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/b2d43ce2817706ad9de4b2c4af1c030c612189ef", "committedDate": "2020-10-21T10:44:27Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "926016418e8af99e80b15933f6c069abc0ae9918", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/926016418e8af99e80b15933f6c069abc0ae9918", "committedDate": "2020-10-21T12:12:54Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "926016418e8af99e80b15933f6c069abc0ae9918", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/926016418e8af99e80b15933f6c069abc0ae9918", "committedDate": "2020-10-21T12:12:54Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "ea69c309c1456041e1e7ee547ea4b5749fa45633", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/ea69c309c1456041e1e7ee547ea4b5749fa45633", "committedDate": "2020-10-21T18:39:27Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea69c309c1456041e1e7ee547ea4b5749fa45633", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/ea69c309c1456041e1e7ee547ea4b5749fa45633", "committedDate": "2020-10-21T18:39:27Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "c228c0aed07a646f5fd9a3f25b48cb6fe39b934e", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/c228c0aed07a646f5fd9a3f25b48cb6fe39b934e", "committedDate": "2020-10-21T19:06:55Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c228c0aed07a646f5fd9a3f25b48cb6fe39b934e", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/c228c0aed07a646f5fd9a3f25b48cb6fe39b934e", "committedDate": "2020-10-21T19:06:55Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "de8dc62bf37930a5903fddaf3a2ee3c29208695c", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/de8dc62bf37930a5903fddaf3a2ee3c29208695c", "committedDate": "2020-10-21T19:28:17Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de8dc62bf37930a5903fddaf3a2ee3c29208695c", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/de8dc62bf37930a5903fddaf3a2ee3c29208695c", "committedDate": "2020-10-21T19:28:17Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "d795458a70f79a3aeb6161c6f3c9549ed1635b2c", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/d795458a70f79a3aeb6161c6f3c9549ed1635b2c", "committedDate": "2020-10-21T19:59:13Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d795458a70f79a3aeb6161c6f3c9549ed1635b2c", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/d795458a70f79a3aeb6161c6f3c9549ed1635b2c", "committedDate": "2020-10-21T19:59:13Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "fd21686e10f3c8e0f0388a54f9bf21ab637c62e0", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/fd21686e10f3c8e0f0388a54f9bf21ab637c62e0", "committedDate": "2020-10-22T09:18:33Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fd21686e10f3c8e0f0388a54f9bf21ab637c62e0", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/fd21686e10f3c8e0f0388a54f9bf21ab637c62e0", "committedDate": "2020-10-22T09:18:33Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "bb65af36bc0a8b8281b441ce779093e66d276aed", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/bb65af36bc0a8b8281b441ce779093e66d276aed", "committedDate": "2020-10-22T18:35:44Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb65af36bc0a8b8281b441ce779093e66d276aed", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/bb65af36bc0a8b8281b441ce779093e66d276aed", "committedDate": "2020-10-22T18:35:44Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "308554b8e979c524571ac8965f832034ee31e0d8", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/308554b8e979c524571ac8965f832034ee31e0d8", "committedDate": "2020-10-22T18:57:33Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "308554b8e979c524571ac8965f832034ee31e0d8", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/308554b8e979c524571ac8965f832034ee31e0d8", "committedDate": "2020-10-22T18:57:33Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "f2da474f05b1223725fb9bd415791d4690433e85", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/f2da474f05b1223725fb9bd415791d4690433e85", "committedDate": "2020-10-23T05:10:29Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2da474f05b1223725fb9bd415791d4690433e85", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/f2da474f05b1223725fb9bd415791d4690433e85", "committedDate": "2020-10-23T05:10:29Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "150e543267b9753c626ef196fdb60e07f8d9c63d", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/150e543267b9753c626ef196fdb60e07f8d9c63d", "committedDate": "2020-10-23T06:03:50Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NDAwMzcx", "url": "https://github.com/eclipse/xtext-core/pull/1595#pullrequestreview-515400371", "createdAt": "2020-10-23T07:14:12Z", "commit": {"oid": "150e543267b9753c626ef196fdb60e07f8d9c63d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzoxNDoxMlrOHnBfLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzoxNDoxMlrOHnBfLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY4MDg3Ng==", "bodyText": "Wat?", "url": "https://github.com/eclipse/xtext-core/pull/1595#discussion_r510680876", "createdAt": "2020-10-23T07:14:12Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ide.tests/src/org/eclipse/xtext/ide/tests/server/DocumentHighlightTest.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * Copyright (c) 2016, 2020 TypeFox GmbH (http://www.typefox.io) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.ide.tests.server;\n+\n+import org.eclipse.lsp4j.DocumentHighlight;\n+import org.eclipse.lsp4j.DocumentHighlightKind;\n+import org.eclipse.xtext.ide.server.occurrences.IDocumentHighlightService;\n+import org.eclipse.xtext.testing.DocumentHighlightConfiguration;\n+import org.eclipse.xtext.xbase.lib.Procedures.Procedure1;\n+import org.junit.Test;\n+\n+/**\n+ * Class for testing the {@link DocumentHighlightService document highlight\n+ * service} behavior through the language server.\n+ * \n+ * <p>\n+ * The string representation of on single {@link DocumentHighlight highlight}\n+ * instance is represented wcfgh the below pattern:\n+ * \n+ * <pre>\n+ * R|W|T [{d}+, {d}+] .. [{d}+, {d}+]\n+ * </pre>\n+ * \n+ * where the first character describes the {@link DocumentHighlightKind kind} of\n+ * the document highlight. If missing, then the value is {@code NaN}. The values\n+ * between the first square brackets are the start {@link Poscfgion#getLine()\n+ * line} and the (zero-based) {@link Poscfgion#getCharacter() character offset}\n+ * in the line. The second square brackets contains the end poscfgion of the\n+ * selection and described wcfgh the same semantics as the first start range.\n+ * Multiple highlight instances are separated by the {@code |} (\"pipe\")\n+ * character.\n+ * \n+ * @author akos.kcfgta - Incfgial contribution and API", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "150e543267b9753c626ef196fdb60e07f8d9c63d"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NDAwNjU5", "url": "https://github.com/eclipse/xtext-core/pull/1595#pullrequestreview-515400659", "createdAt": "2020-10-23T07:14:39Z", "commit": {"oid": "150e543267b9753c626ef196fdb60e07f8d9c63d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzoxNDozOVrOHnBgNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzoxNDozOVrOHnBgNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY4MTE0Mw==", "bodyText": "Huh? WrcfgeScfge", "url": "https://github.com/eclipse/xtext-core/pull/1595#discussion_r510681143", "createdAt": "2020-10-23T07:14:39Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ide.tests/src/org/eclipse/xtext/ide/tests/server/DocumentHighlightTest.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * Copyright (c) 2016, 2020 TypeFox GmbH (http://www.typefox.io) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.ide.tests.server;\n+\n+import org.eclipse.lsp4j.DocumentHighlight;\n+import org.eclipse.lsp4j.DocumentHighlightKind;\n+import org.eclipse.xtext.ide.server.occurrences.IDocumentHighlightService;\n+import org.eclipse.xtext.testing.DocumentHighlightConfiguration;\n+import org.eclipse.xtext.xbase.lib.Procedures.Procedure1;\n+import org.junit.Test;\n+\n+/**\n+ * Class for testing the {@link DocumentHighlightService document highlight\n+ * service} behavior through the language server.\n+ * \n+ * <p>\n+ * The string representation of on single {@link DocumentHighlight highlight}\n+ * instance is represented wcfgh the below pattern:\n+ * \n+ * <pre>\n+ * R|W|T [{d}+, {d}+] .. [{d}+, {d}+]\n+ * </pre>\n+ * \n+ * where the first character describes the {@link DocumentHighlightKind kind} of\n+ * the document highlight. If missing, then the value is {@code NaN}. The values\n+ * between the first square brackets are the start {@link Poscfgion#getLine()\n+ * line} and the (zero-based) {@link Poscfgion#getCharacter() character offset}\n+ * in the line. The second square brackets contains the end poscfgion of the\n+ * selection and described wcfgh the same semantics as the first start range.\n+ * Multiple highlight instances are separated by the {@code |} (\"pipe\")\n+ * character.\n+ * \n+ * @author akos.kcfgta - Incfgial contribution and API\n+ * \n+ * @see DocumentHighlight\n+ * @see IDocumentHighlightService\n+ */\n+public class DocumentHighlightTest extends AbstractTestLangLanguageServerTest {\n+\t@Test\n+\tpublic void singleLineNoOccurrences_SelectionBeforeWrcfgeScfgeMethodName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "150e543267b9753c626ef196fdb60e07f8d9c63d"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NDAxMDA5", "url": "https://github.com/eclipse/xtext-core/pull/1595#pullrequestreview-515401009", "createdAt": "2020-10-23T07:15:14Z", "commit": {"oid": "150e543267b9753c626ef196fdb60e07f8d9c63d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzoxNToxNFrOHnBhYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzoxNToxNFrOHnBhYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY4MTQ0MQ==", "bodyText": "Please what? Poscfgion", "url": "https://github.com/eclipse/xtext-core/pull/1595#discussion_r510681441", "createdAt": "2020-10-23T07:15:14Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.ide.tests/src/org/eclipse/xtext/ide/tests/server/DocumentHighlightTest.java", "diffHunk": "@@ -0,0 +1,142 @@\n+/**\n+ * Copyright (c) 2016, 2020 TypeFox GmbH (http://www.typefox.io) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.ide.tests.server;\n+\n+import org.eclipse.lsp4j.DocumentHighlight;\n+import org.eclipse.lsp4j.DocumentHighlightKind;\n+import org.eclipse.xtext.ide.server.occurrences.IDocumentHighlightService;\n+import org.eclipse.xtext.testing.DocumentHighlightConfiguration;\n+import org.eclipse.xtext.xbase.lib.Procedures.Procedure1;\n+import org.junit.Test;\n+\n+/**\n+ * Class for testing the {@link DocumentHighlightService document highlight\n+ * service} behavior through the language server.\n+ * \n+ * <p>\n+ * The string representation of on single {@link DocumentHighlight highlight}\n+ * instance is represented wcfgh the below pattern:\n+ * \n+ * <pre>\n+ * R|W|T [{d}+, {d}+] .. [{d}+, {d}+]\n+ * </pre>\n+ * \n+ * where the first character describes the {@link DocumentHighlightKind kind} of\n+ * the document highlight. If missing, then the value is {@code NaN}. The values\n+ * between the first square brackets are the start {@link Poscfgion#getLine()\n+ * line} and the (zero-based) {@link Poscfgion#getCharacter() character offset}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "150e543267b9753c626ef196fdb60e07f8d9c63d"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NDAyNzIx", "url": "https://github.com/eclipse/xtext-core/pull/1595#pullrequestreview-515402721", "createdAt": "2020-10-23T07:18:08Z", "commit": {"oid": "150e543267b9753c626ef196fdb60e07f8d9c63d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzoxODowOVrOHnBnAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzoxODowOVrOHnBnAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY4Mjg4Mw==", "bodyText": "Could be an import.", "url": "https://github.com/eclipse/xtext-core/pull/1595#discussion_r510682883", "createdAt": "2020-10-23T07:18:09Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/XtextGeneratorLanguage.java", "diffHunk": "@@ -0,0 +1,380 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+import org.apache.log4j.Logger;\n+import org.eclipse.emf.common.util.Diagnostic;\n+import org.eclipse.emf.common.util.DiagnosticChain;\n+import org.eclipse.emf.common.util.TreeIterator;\n+import org.eclipse.emf.common.util.URI;\n+import org.eclipse.emf.ecore.EObject;\n+import org.eclipse.emf.ecore.EReference;\n+import org.eclipse.emf.ecore.EValidator;\n+import org.eclipse.emf.ecore.resource.Resource;\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+import org.eclipse.emf.ecore.util.EcoreUtil;\n+import org.eclipse.xtext.AbstractMetamodelDeclaration;\n+import org.eclipse.xtext.Grammar;\n+import org.eclipse.xtext.GrammarUtil;\n+import org.eclipse.xtext.ReferencedMetamodel;\n+import org.eclipse.xtext.XtextPackage;\n+import org.eclipse.xtext.nodemodel.INode;\n+import org.eclipse.xtext.nodemodel.util.NodeModelUtils;\n+import org.eclipse.xtext.resource.IResourceDescription;\n+import org.eclipse.xtext.resource.IResourceServiceProvider;\n+import org.eclipse.xtext.resource.XtextResource;\n+import org.eclipse.xtext.resource.impl.ResourceDescriptionsData;\n+import org.eclipse.xtext.xbase.lib.CollectionLiterals;\n+import org.eclipse.xtext.xtext.RuleNames;\n+import org.eclipse.xtext.xtext.generator.model.GuiceModuleAccess;\n+import org.eclipse.xtext.xtext.generator.model.StandaloneSetupAccess;\n+import org.eclipse.xtext.xtext.generator.model.project.IXtextProjectConfig;\n+\n+import com.google.common.base.Joiner;\n+import com.google.common.collect.Lists;\n+import com.google.inject.Binder;\n+import com.google.inject.Inject;\n+import com.google.inject.Injector;\n+import com.google.inject.Provider;\n+\n+/**\n+ * Configuration for an Xtext language. Use this class if you need to specify\n+ * exactly which generator fragments you want to include, or alternatively\n+ * {@link StandardLanguage} to work with the standard fragments.\n+ * \n+ * <p>\n+ * The most important property is {@code name}, which should be set to the\n+ * language name exactly as specified in the grammar file. If the default\n+ * grammar resolution based on the name does not work in your particular\n+ * scenario, set the {@code grammarUri} property instead. Furthermore, use\n+ * {@code fileExtensions} to specify the file extensions for your language.\n+ * </p>\n+ * \n+ * <p>\n+ * Generator fragments can be added with the {@code fragment} property. See\n+ * {@link StandardLanguage} for a list of useful fragments.\n+ * </p>\n+ * \n+ * @noextend This class should not be extended by clients.\n+ */\n+public class XtextGeneratorLanguage extends CompositeGeneratorFragment2 implements IXtextGeneratorLanguage {\n+\tprivate static final Logger LOG = Logger.getLogger(XtextGeneratorLanguage.class);\n+\n+\tprivate String grammarUri;\n+\n+\tprivate String name;\n+\n+\tprivate Boolean generateXtendStubs;\n+\n+\tprivate Grammar grammar;\n+\n+\tprivate RuleNames ruleNames;\n+\n+\tprivate List<String> fileExtensions;\n+\n+\tprivate List<String> referencedResources = CollectionLiterals.<String>newArrayList();\n+\n+\tprivate ResourceSet resourceSet;\n+\n+\tprivate com.google.inject.Module guiceModule = (Binder it) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "150e543267b9753c626ef196fdb60e07f8d9c63d"}, "originalPosition": 92}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "150e543267b9753c626ef196fdb60e07f8d9c63d", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/150e543267b9753c626ef196fdb60e07f8d9c63d", "committedDate": "2020-10-23T06:03:50Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "4dc96615d3a7aa7bf93d9c6039074d342b9cb274", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/4dc96615d3a7aa7bf93d9c6039074d342b9cb274", "committedDate": "2020-10-23T07:20:41Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NDA0ODIw", "url": "https://github.com/eclipse/xtext-core/pull/1595#pullrequestreview-515404820", "createdAt": "2020-10-23T07:21:42Z", "commit": {"oid": "150e543267b9753c626ef196fdb60e07f8d9c63d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzoyMzowMlrOHnBv6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwNzoyMzo0MlrOHnBxHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY4NTE2Mw==", "bodyText": "Hmm java.lang.Module is not used in this class. I understand that we do this in generated code though. Anyways: Cosmetics :)", "url": "https://github.com/eclipse/xtext-core/pull/1595#discussion_r510685163", "createdAt": "2020-10-23T07:23:02Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/XtextGeneratorLanguage.java", "diffHunk": "@@ -0,0 +1,380 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+import org.apache.log4j.Logger;\n+import org.eclipse.emf.common.util.Diagnostic;\n+import org.eclipse.emf.common.util.DiagnosticChain;\n+import org.eclipse.emf.common.util.TreeIterator;\n+import org.eclipse.emf.common.util.URI;\n+import org.eclipse.emf.ecore.EObject;\n+import org.eclipse.emf.ecore.EReference;\n+import org.eclipse.emf.ecore.EValidator;\n+import org.eclipse.emf.ecore.resource.Resource;\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+import org.eclipse.emf.ecore.util.EcoreUtil;\n+import org.eclipse.xtext.AbstractMetamodelDeclaration;\n+import org.eclipse.xtext.Grammar;\n+import org.eclipse.xtext.GrammarUtil;\n+import org.eclipse.xtext.ReferencedMetamodel;\n+import org.eclipse.xtext.XtextPackage;\n+import org.eclipse.xtext.nodemodel.INode;\n+import org.eclipse.xtext.nodemodel.util.NodeModelUtils;\n+import org.eclipse.xtext.resource.IResourceDescription;\n+import org.eclipse.xtext.resource.IResourceServiceProvider;\n+import org.eclipse.xtext.resource.XtextResource;\n+import org.eclipse.xtext.resource.impl.ResourceDescriptionsData;\n+import org.eclipse.xtext.xbase.lib.CollectionLiterals;\n+import org.eclipse.xtext.xtext.RuleNames;\n+import org.eclipse.xtext.xtext.generator.model.GuiceModuleAccess;\n+import org.eclipse.xtext.xtext.generator.model.StandaloneSetupAccess;\n+import org.eclipse.xtext.xtext.generator.model.project.IXtextProjectConfig;\n+\n+import com.google.common.base.Joiner;\n+import com.google.common.collect.Lists;\n+import com.google.inject.Binder;\n+import com.google.inject.Inject;\n+import com.google.inject.Injector;\n+import com.google.inject.Provider;\n+\n+/**\n+ * Configuration for an Xtext language. Use this class if you need to specify\n+ * exactly which generator fragments you want to include, or alternatively\n+ * {@link StandardLanguage} to work with the standard fragments.\n+ * \n+ * <p>\n+ * The most important property is {@code name}, which should be set to the\n+ * language name exactly as specified in the grammar file. If the default\n+ * grammar resolution based on the name does not work in your particular\n+ * scenario, set the {@code grammarUri} property instead. Furthermore, use\n+ * {@code fileExtensions} to specify the file extensions for your language.\n+ * </p>\n+ * \n+ * <p>\n+ * Generator fragments can be added with the {@code fragment} property. See\n+ * {@link StandardLanguage} for a list of useful fragments.\n+ * </p>\n+ * \n+ * @noextend This class should not be extended by clients.\n+ */\n+public class XtextGeneratorLanguage extends CompositeGeneratorFragment2 implements IXtextGeneratorLanguage {\n+\tprivate static final Logger LOG = Logger.getLogger(XtextGeneratorLanguage.class);\n+\n+\tprivate String grammarUri;\n+\n+\tprivate String name;\n+\n+\tprivate Boolean generateXtendStubs;\n+\n+\tprivate Grammar grammar;\n+\n+\tprivate RuleNames ruleNames;\n+\n+\tprivate List<String> fileExtensions;\n+\n+\tprivate List<String> referencedResources = CollectionLiterals.<String>newArrayList();\n+\n+\tprivate ResourceSet resourceSet;\n+\n+\tprivate com.google.inject.Module guiceModule = (Binder it) -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY4Mjg4Mw=="}, "originalCommit": {"oid": "150e543267b9753c626ef196fdb60e07f8d9c63d"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDY4NTQ2OA==", "bodyText": "Cosmetics: unnecessary final. Could be Iterator instead of TreeIterator. Could be for-loop over EcoreUtil2.eAll(grammar).", "url": "https://github.com/eclipse/xtext-core/pull/1595#discussion_r510685468", "createdAt": "2020-10-23T07:23:42Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.xtext.generator/src/org/eclipse/xtext/xtext/generator/XtextGeneratorLanguage.java", "diffHunk": "@@ -0,0 +1,380 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.xtext.generator;\n+\n+import java.io.File;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+\n+import org.apache.log4j.Logger;\n+import org.eclipse.emf.common.util.Diagnostic;\n+import org.eclipse.emf.common.util.DiagnosticChain;\n+import org.eclipse.emf.common.util.TreeIterator;\n+import org.eclipse.emf.common.util.URI;\n+import org.eclipse.emf.ecore.EObject;\n+import org.eclipse.emf.ecore.EReference;\n+import org.eclipse.emf.ecore.EValidator;\n+import org.eclipse.emf.ecore.resource.Resource;\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+import org.eclipse.emf.ecore.util.EcoreUtil;\n+import org.eclipse.xtext.AbstractMetamodelDeclaration;\n+import org.eclipse.xtext.Grammar;\n+import org.eclipse.xtext.GrammarUtil;\n+import org.eclipse.xtext.ReferencedMetamodel;\n+import org.eclipse.xtext.XtextPackage;\n+import org.eclipse.xtext.nodemodel.INode;\n+import org.eclipse.xtext.nodemodel.util.NodeModelUtils;\n+import org.eclipse.xtext.resource.IResourceDescription;\n+import org.eclipse.xtext.resource.IResourceServiceProvider;\n+import org.eclipse.xtext.resource.XtextResource;\n+import org.eclipse.xtext.resource.impl.ResourceDescriptionsData;\n+import org.eclipse.xtext.xbase.lib.CollectionLiterals;\n+import org.eclipse.xtext.xtext.RuleNames;\n+import org.eclipse.xtext.xtext.generator.model.GuiceModuleAccess;\n+import org.eclipse.xtext.xtext.generator.model.StandaloneSetupAccess;\n+import org.eclipse.xtext.xtext.generator.model.project.IXtextProjectConfig;\n+\n+import com.google.common.base.Joiner;\n+import com.google.common.collect.Lists;\n+import com.google.inject.Binder;\n+import com.google.inject.Inject;\n+import com.google.inject.Injector;\n+import com.google.inject.Provider;\n+\n+/**\n+ * Configuration for an Xtext language. Use this class if you need to specify\n+ * exactly which generator fragments you want to include, or alternatively\n+ * {@link StandardLanguage} to work with the standard fragments.\n+ * \n+ * <p>\n+ * The most important property is {@code name}, which should be set to the\n+ * language name exactly as specified in the grammar file. If the default\n+ * grammar resolution based on the name does not work in your particular\n+ * scenario, set the {@code grammarUri} property instead. Furthermore, use\n+ * {@code fileExtensions} to specify the file extensions for your language.\n+ * </p>\n+ * \n+ * <p>\n+ * Generator fragments can be added with the {@code fragment} property. See\n+ * {@link StandardLanguage} for a list of useful fragments.\n+ * </p>\n+ * \n+ * @noextend This class should not be extended by clients.\n+ */\n+public class XtextGeneratorLanguage extends CompositeGeneratorFragment2 implements IXtextGeneratorLanguage {\n+\tprivate static final Logger LOG = Logger.getLogger(XtextGeneratorLanguage.class);\n+\n+\tprivate String grammarUri;\n+\n+\tprivate String name;\n+\n+\tprivate Boolean generateXtendStubs;\n+\n+\tprivate Grammar grammar;\n+\n+\tprivate RuleNames ruleNames;\n+\n+\tprivate List<String> fileExtensions;\n+\n+\tprivate List<String> referencedResources = CollectionLiterals.<String>newArrayList();\n+\n+\tprivate ResourceSet resourceSet;\n+\n+\tprivate com.google.inject.Module guiceModule = (Binder it) -> {\n+\t};\n+\n+\tprivate final StandaloneSetupAccess runtimeGenSetup = new StandaloneSetupAccess();\n+\n+\tprivate final GuiceModuleAccess runtimeGenModule = new GuiceModuleAccess();\n+\n+\tprivate final GuiceModuleAccess ideGenModule = new GuiceModuleAccess();\n+\n+\tprivate final GuiceModuleAccess eclipsePluginGenModule = new GuiceModuleAccess();\n+\n+\tprivate final GuiceModuleAccess webGenModule = new GuiceModuleAccess();\n+\n+\t@Inject\n+\tprivate Provider<ResourceSet> resourceSetProvider;\n+\n+\t@Inject\n+\tprivate IXtextProjectConfig projectConfig;\n+\n+\t@Inject\n+\tprivate CodeConfig codeConfig;\n+\n+\t@Inject\n+\tprivate XtextGeneratorResourceSetInitializer resourceSetInitializer;\n+\n+\t/**\n+\t * The URI of the grammar file. Use this property if the automatic grammar\n+\t * resolution based on {@link #setName(String)} does not work in your\n+\t * particular scenario.\n+\t */\n+\tpublic void setGrammarUri(String uri) {\n+\t\tthis.grammarUri = uri;\n+\t}\n+\n+\tpublic String getGrammarUri() {\n+\t\tif (grammarUri != null) {\n+\t\t\treturn grammarUri;\n+\t\t} else {\n+\t\t\treturn new File(projectConfig.getRuntime().getSrc().getPath(), name.replace(\".\", \"/\") + \".xtext\").toURI()\n+\t\t\t\t\t.toString();\n+\t\t}\n+\t}\n+\n+\t/**\n+\t * The language name exactly as specified in the grammar.\n+\t */\n+\tpublic void setName(String name) {\n+\t\tthis.name = name;\n+\t}\n+\n+\t/**\n+\t * Either a single file extension or a comma-separated list of extensions\n+\t * for which the language shall be registered.\n+\t */\n+\tpublic void setFileExtensions(String fileExtensions) {\n+\t\tthis.fileExtensions = Arrays.asList(fileExtensions.trim().split(\"\\\\s*,\\\\s*\"));\n+\t}\n+\n+\t/**\n+\t * Add a resource to be included in the resource set that will be used to\n+\t * load the grammar file. This is often necessary if additional Ecore models\n+\t * are referenced by the grammar.\n+\t */\n+\tpublic void addReferencedResource(String referencedResource) {\n+\t\treferencedResources.add(referencedResource);\n+\t}\n+\n+\t@Override\n+\tpublic List<String> getFileExtensions() {\n+\t\tif (fileExtensions == null || fileExtensions.isEmpty()) {\n+\t\t\tsetFileExtensions(GrammarUtil.getSimpleName(grammar).toLowerCase());\n+\t\t\tLOG.info(\"No explicit fileExtensions configured. Using '*.\" + fileExtensions + \"'.\");\n+\t\t}\n+\t\treturn fileExtensions;\n+\t}\n+\n+\t/**\n+\t * @deprecated Use {@link CodeConfig#setPreferXtendStubs(boolean)} instead\n+\t */\n+\t@Deprecated\n+\tpublic void setGenerateXtendStubs(Boolean generateXtendStubs) {\n+\t\tthis.generateXtendStubs = generateXtendStubs;\n+\t}\n+\n+\t/**\n+\t * @deprecated Use {@link CodeConfig#isPreferXtendStubs()} instead\n+\t */\n+\t@Deprecated\n+\t@Override\n+\tpublic boolean isGenerateXtendStubs() {\n+\t\tif (generateXtendStubs != null) {\n+\t\t\treturn generateXtendStubs.booleanValue();\n+\t\t} else {\n+\t\t\treturn codeConfig.isPreferXtendStubs();\n+\t\t}\n+\t}\n+\n+\t@Override\n+\tpublic void initialize(Injector injector) {\n+\t\tgetFragments().addAll(0, getImplicitFragments());\n+\t\tinjector.injectMembers(this);\n+\t\tif (resourceSet == null) {\n+\t\t\tresourceSet = resourceSetProvider.get();\n+\t\t}\n+\t\tresourceSetInitializer.initialize(resourceSet, referencedResources);\n+\t\tif (!resourceSet.getResources().isEmpty()) {\n+\t\t\tinstallIndex();\n+\t\t\tint i = 0;\n+\t\t\tint size = resourceSet.getResources().size();\n+\t\t\twhile (i < size) {\n+\t\t\t\tResource res = resourceSet.getResources().get(i);\n+\t\t\t\tif (res.getContents().isEmpty()) {\n+\t\t\t\t\tLOG.error(\"Error loading '\" + res.getURI() + \"'\");\n+\t\t\t\t} else {\n+\t\t\t\t\tif (!res.getErrors().isEmpty()) {\n+\t\t\t\t\t\tLOG.error(\"Error loading '\" + res.getURI() + \"':\\n\" + Joiner.on(\"\\n\").join(res.getErrors()));\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\ti++;\n+\t\t\t}\n+\t\t\tEcoreUtil.resolveAll(resourceSet);\n+\t\t}\n+\t\tif (getGrammarUri() == null) {\n+\t\t\tthrow new IllegalStateException(\"No grammarUri or language name given\");\n+\t\t}\n+\t\tXtextResource resource = (XtextResource) resourceSet.getResource(URI.createURI(getGrammarUri()), true);\n+\t\tif (resource.getContents().isEmpty()) {\n+\t\t\tthrow new IllegalArgumentException(\"Couldn't load grammar for '\" + getGrammarUri() + \"'.\");\n+\t\t}\n+\t\tif (!resource.getErrors().isEmpty()) {\n+\t\t\tLOG.error(resource.getErrors());\n+\t\t\tthrow new IllegalStateException(\n+\t\t\t\t\t\"Problem parsing '\" + getGrammarUri() + \"':\\n\" + Joiner.on(\"\\n\").join(resource.getErrors()));\n+\t\t}\n+\t\tGrammar grammar = (Grammar) resource.getContents().get(0);\n+\t\tvalidateGrammar(grammar);\n+\t\tinitialize(grammar);\n+\t\tsuper.initialize(injector);\n+\t}\n+\n+\tprotected List<? extends IXtextGeneratorFragment> getImplicitFragments() {\n+\t\tList<ImplicitFragment> fragments = new ArrayList<>();\n+\t\tfragments.add(new ImplicitFragment());\n+\t\treturn fragments;\n+\t}\n+\n+\tpublic void initialize(Grammar grammar) {\n+\t\tthis.grammar = grammar;\n+\t\tthis.ruleNames = RuleNames.getRuleNames(grammar, true);\n+\t}\n+\n+\tprivate void installIndex() {\n+\t\tResourceDescriptionsData index = new ResourceDescriptionsData(Collections.emptyList());\n+\t\tList<Resource> resources = Lists.newArrayList(resourceSet.getResources());\n+\t\tfor (Resource resource : resources) {\n+\t\t\tindex(resource, resource.getURI(), index);\n+\t\t}\n+\t\tResourceDescriptionsData.ResourceSetAdapter.installResourceDescriptionsData(resourceSet, index);\n+\t}\n+\n+\tprivate void index(Resource resource, URI uri, ResourceDescriptionsData index) {\n+\t\tIResourceServiceProvider serviceProvider = IResourceServiceProvider.Registry.INSTANCE\n+\t\t\t\t.getResourceServiceProvider(uri);\n+\t\tif (serviceProvider != null) {\n+\t\t\tIResourceDescription resourceDescription = serviceProvider.getResourceDescriptionManager()\n+\t\t\t\t\t.getResourceDescription(resource);\n+\t\t\tif (resourceDescription != null) {\n+\t\t\t\tindex.addDescription(uri, resourceDescription);\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tprotected void validateGrammar(Grammar grammar) {\n+\t\tvalidateAllImports(grammar);\n+\t\tEValidator validator = EValidator.Registry.INSTANCE.getEValidator(XtextPackage.eINSTANCE);\n+\t\tif (validator != null) {\n+\t\t\tDiagnosticChain chain = new DiagnosticChain() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic void add(final Diagnostic diagnostic) {\n+\t\t\t\t\tif (diagnostic.getSeverity() == Diagnostic.ERROR) {\n+\t\t\t\t\t\tString grammarName = \"Validation Error in \" + grammar.getName() + \": \";\n+\t\t\t\t\t\tif (diagnostic.getException() == null) {\n+\t\t\t\t\t\t\tthrow new IllegalStateException(grammarName + diagnostic.getMessage());\n+\t\t\t\t\t\t} else {\n+\t\t\t\t\t\t\tthrow new IllegalStateException(grammarName + diagnostic.getMessage(),\n+\t\t\t\t\t\t\t\t\tdiagnostic.getException());\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic void addAll(final Diagnostic diagnostic) {\n+\t\t\t\t\tadd(diagnostic);\n+\t\t\t\t}\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic void merge(final Diagnostic diagnostic) {\n+\t\t\t\t\tthrow new UnsupportedOperationException();\n+\t\t\t\t}\n+\t\t\t};\n+\t\t\tvalidator.validate(grammar, chain, null);\n+\t\t\tfinal TreeIterator<EObject> iterator = grammar.eAllContents();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dc96615d3a7aa7bf93d9c6039074d342b9cb274"}, "originalPosition": 293}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4dc96615d3a7aa7bf93d9c6039074d342b9cb274", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/4dc96615d3a7aa7bf93d9c6039074d342b9cb274", "committedDate": "2020-10-23T07:20:41Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "57fc1acb1d909595ca1e5ef2e225396f4ae461dd", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/57fc1acb1d909595ca1e5ef2e225396f4ae461dd", "committedDate": "2020-10-23T07:26:32Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a72c07d610cab76b02bc836d7c48e9ae5aac245", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/0a72c07d610cab76b02bc836d7c48e9ae5aac245", "committedDate": "2020-10-23T07:28:49Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57fc1acb1d909595ca1e5ef2e225396f4ae461dd", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/57fc1acb1d909595ca1e5ef2e225396f4ae461dd", "committedDate": "2020-10-23T07:26:32Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "0a72c07d610cab76b02bc836d7c48e9ae5aac245", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/0a72c07d610cab76b02bc836d7c48e9ae5aac245", "committedDate": "2020-10-23T07:28:49Z", "message": "[eclipse/xtext#1837] converted xtend 2 java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NDEwMzkz", "url": "https://github.com/eclipse/xtext-core/pull/1595#pullrequestreview-515410393", "createdAt": "2020-10-23T07:30:30Z", "commit": {"oid": "0a72c07d610cab76b02bc836d7c48e9ae5aac245"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4657, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}