{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NzkzMjYz", "number": 1624, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyNzozNFrOE7o0EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyNzozNFrOE7o0EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwOTcwMTI4OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/formatting2/internal/JavaFormatterGrammarTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyNzozNFrOH3ZVHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxNzoyNzozNFrOH3ZVHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg0ODczNQ==", "bodyText": "It would be really great to get rid of the newline in this example before the last rhs=AssignmentExpression<In, Yield>", "url": "https://github.com/eclipse/xtext-core/pull/1624#discussion_r527848735", "createdAt": "2020-11-20T17:27:34Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/formatting2/internal/JavaFormatterGrammarTest.java", "diffHunk": "@@ -0,0 +1,200 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 itemis AG (http://www.itemis.com) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.formatting2.internal;\n+\n+import org.eclipse.xtext.XtextStandaloneSetup;\n+import org.eclipse.xtext.testing.IInjectorProvider;\n+import org.eclipse.xtext.testing.InjectWith;\n+import org.eclipse.xtext.testing.XtextRunner;\n+import org.eclipse.xtext.testing.formatter.FormatterTestHelper;\n+import org.eclipse.xtext.tests.AbstractXtextTests;\n+import org.eclipse.xtext.tests.XtextInjectorProvider;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import com.google.inject.Inject;\n+import com.google.inject.Injector;\n+\n+/**\n+ * @author Arne Deutsch - Initial contribution and API\n+ */\n+@RunWith(XtextRunner.class)\n+@InjectWith(XtextInjectorProvider.class)\n+public class JavaFormatterGrammarTest extends AbstractXtextTests {\n+\n+\tprivate static final String NL = System.lineSeparator();\n+\tprivate static final String TAB = \"\\t\";\n+\n+\t@Inject\n+\tprivate FormatterTestHelper formatterTestHelper;\n+\n+\t@Override\n+\tpublic void setUp() throws Exception {\n+\t\tsuper.setUp();\n+\t\twith(XtextStandaloneSetup.class);\n+\t}\n+\n+\t@Test\n+\tpublic void action() {\n+\t\t// @formatter:off\n+\t\tassertFormattedGrammar(\n+\t\t\t\t\"Rule:\" + NL +\n+\t\t\t\tTAB + \"SubRule ({ Other . source = current } op='.');\"\n+\t\t\t\t,\n+\t\t\t\t\"Rule:\" + NL +\n+\t\t\t\tTAB + \"SubRule ({Other.source=current} op='.');\"\n+\t\t);\n+\t\t// @formatter:on\n+\t}\n+\n+\t@Test\n+\tpublic void enumLiterals() {\n+\t\t// @formatter:off\n+\t\tassertFormattedGrammar(\n+\t\t\t\t\"enum StateType:\" + NL +\n+\t\t\t\tTAB + \"FIRST|SECOND|THIRD;\"\n+\t\t\t\t,\n+\t\t\t\t\"enum StateType:\" + NL +\n+\t\t\t\tTAB + \"FIRST | SECOND | THIRD;\"\n+\t\t\t\t);\n+\t\t// @formatter:on\n+\t}\n+\n+\t@Test\n+\tpublic void enumLiteralAssignment() {\n+\t\t// @formatter:off\n+\t\tassertFormattedGrammar(\n+\t\t\t\t\"enum StateType:\" + NL +\n+\t\t\t\tTAB + \"PSEUDO = 'cond';\"\n+\t\t\t\t,\n+\t\t\t\t\"enum StateType:\" + NL +\n+\t\t\t\tTAB + \"PSEUDO='cond';\"\n+\t\t\t\t);\n+\t\t// @formatter:on\n+\t}\n+\n+\t@Test\n+\tpublic void hiddenClause() {\n+\t\t// @formatter:off\n+\t\tassertFormattedGrammar(\n+\t\t\t\t\"Child  hidden ( WS ,  ID ):\" + NL +\n+\t\t\t\tTAB + \"A;\"\n+\t\t\t\t,\n+\t\t\t\t\"Child hidden(WS, ID):\" + NL +\n+\t\t\t\tTAB + \"A;\"\n+\t\t\t\t);\n+\t\t// @formatter:on\n+\t}\n+\n+\t@Test\n+\tpublic void tokenCardinality() {\n+\t\t// @formatter:off\n+\t\tassertFormattedGrammar(\n+\t\t\t\t\"Real hidden(): INT ? '.' (EXT_INT | INT);\"\n+\t\t\t\t,\n+\t\t\t\t\"Real hidden():\" + NL\n+\t\t\t\t+ TAB + \"INT? '.' (EXT_INT | INT);\"\n+\t\t\t\t);\n+\t\t// @formatter:on\n+\t}\n+\n+\t@Test\n+\tpublic void unorderedGroups() {\n+\t\t// @formatter:off\n+\t\tassertFormattedGrammar(\n+\t\t\t\t\"CopyFieldNameToVariableStmt:\" + NL +\n+\t\t\t\t\"  'FIELD-NAME-TO-VARIABLE' ((',' 'SCREEN' '=' '(' line=INT ',' column=INT ')') &\" + NL +\n+\t\t\t\tTAB + TAB + TAB + \"(','     'VAR' '=' name=ID) &\" + NL +\n+\t\t\t\tTAB + TAB + TAB + \"(',' 'TYPE' '='    'REPLACE')?);\"\n+\t\t\t\t,\n+\t\t\t\t\"CopyFieldNameToVariableStmt:\" + NL +\n+\t\t\t\tTAB + \"'FIELD-NAME-TO-VARIABLE' ((',' 'SCREEN' '=' '(' line=INT ',' column=INT ')') &\" + NL +\n+\t\t\t\tTAB + \"(',' 'VAR' '=' name=ID) &\" + NL +\n+\t\t\t\tTAB + \"(',' 'TYPE' '=' 'REPLACE')?);\"\n+\t\t\t\t);\n+\t\t// @formatter:on\n+\t}\n+\n+\t@Test\n+\tpublic void guardExpressions() {\n+\t\t// @formatter:off\n+\t\tassertFormattedGrammar(\n+\t\t\t\t\"AssignmentExpression <In, Yield> returns Expression:\" + NL +\n+\t\t\t\tTAB + \"<Yield> YieldExpression<In>\" + NL +\n+\t\t\t\tTAB + \"| RelationalExpression<In,Yield> (=> ({AssignmentExpression.lhs=current} op='=') rhs=AssignmentExpression<In,Yield>)?\" + NL +\n+\t\t\t\t\";\"\n+\t\t\t\t,\n+\t\t\t\t\"AssignmentExpression <In, Yield> returns Expression:\" + NL +\n+\t\t\t\tTAB + \"<Yield> YieldExpression<In>\" + NL +\n+\t\t\t\tTAB + \"| RelationalExpression<In, Yield> (=> ({AssignmentExpression.lhs=current} op='=')\" + NL +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "294a43c4ff4cdaf51dfa888baacfe5286e84290d"}, "originalPosition": 135}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1016, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}