{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NTMyMDY3", "number": 1439, "title": "[eclipse/xtext#1679] ported xtend code to java", "bodyText": "[eclipse/xtext#1679] ported xtend code to java\nSigned-off-by: Christian Dietrich christian.dietrich@itemis.de", "createdAt": "2020-04-06T10:09:47Z", "url": "https://github.com/eclipse/xtext-core/pull/1439", "merged": true, "mergeCommit": {"oid": "d8642bbd18fc71ba66484fd526ca9cdf77f10aa0"}, "closed": true, "closedAt": "2020-04-06T20:46:11Z", "author": {"login": "cdietrich"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcU83_tAFqTM4ODE0MDU2Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVE1xrgFqTM4ODU5NzYzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MTQwNTY3", "url": "https://github.com/eclipse/xtext-core/pull/1439#pullrequestreview-388140567", "createdAt": "2020-04-06T10:58:21Z", "commit": {"oid": "acc2487bb7a1790be600c55108ed98caefbaa0d2"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMDo1ODoyMVrOGBSafw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMToxOToyNVrOGBTEBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAwMzQ1NQ==", "bodyText": "NL", "url": "https://github.com/eclipse/xtext-core/pull/1439#discussion_r404003455", "createdAt": "2020-04-06T10:58:21Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/enumrules/MultiRuleEnumTest.java", "diffHunk": "@@ -1,31 +1,31 @@\n /*******************************************************************************\n- * Copyright (c) 2013 itemis AG (http://www.itemis.eu) and others.\n+ * Copyright (c) 2013, 2020 itemis AG (http://www.itemis.eu) and others.\n  * This program and the accompanying materials are made available under the\n  * terms of the Eclipse Public License 2.0 which is available at\n  * http://www.eclipse.org/legal/epl-2.0.\n  *\n  * SPDX-License-Identifier: EPL-2.0\n  *******************************************************************************/\n-package org.eclipse.xtext.enumrules\n+package org.eclipse.xtext.enumrules;\n \n-import org.eclipse.xtext.enumrules.multiRuleenums.MyEnum\n-import org.junit.Test\n+import org.eclipse.xtext.enumrules.multiRuleenums.MyEnum;\n+import org.junit.Test;\n \n-import static org.junit.Assert.*\n+import static org.junit.Assert.*;\n \n /**\n  * @author Sven Efftinge - Initial contribution and API\n  */\n-class MultiRuleEnumTest {\n+public class MultiRuleEnumTest {\n \t\n \t/**\n \t * see https://bugs.eclipse.org/bugs/show_bug.cgi?id=413395\n \t */\n-\t@Test def void testEnumOrder() {\n-\t\tassertEquals(0, MyEnum.A_VALUE)\t\n-\t\tassertEquals(1, MyEnum.B_VALUE)\t\n-\t\tassertEquals(2, MyEnum.C_VALUE)\t\n-\t\tassertEquals(3, MyEnum.D_VALUE)\t\n-\t\tassertEquals(4, MyEnum.E_VALUE)\t\n+\t@Test public void testEnumOrder() {\n+\t\tassertEquals(0, MyEnum.A_VALUE);\n+\t\tassertEquals(1, MyEnum.B_VALUE);\n+\t\tassertEquals(2, MyEnum.C_VALUE);\n+\t\tassertEquals(3, MyEnum.D_VALUE);\n+\t\tassertEquals(4, MyEnum.E_VALUE);\n \t}\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acc2487bb7a1790be600c55108ed98caefbaa0d2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAwMzYyMw==", "bodyText": "NL", "url": "https://github.com/eclipse/xtext-core/pull/1439#discussion_r404003623", "createdAt": "2020-04-06T10:58:36Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/formatting2/debug/TextRegionsToStringTest.java", "diffHunk": "@@ -1,50 +1,50 @@\n /*******************************************************************************\n- * Copyright (c) 2017 itemis AG (http://www.itemis.eu) and others.\n+ * Copyright (c) 2017, 2020 itemis AG (http://www.itemis.eu) and others.\n  * This program and the accompanying materials are made available under the\n  * terms of the Eclipse Public License 2.0 which is available at\n  * http://www.eclipse.org/legal/epl-2.0.\n  *\n  * SPDX-License-Identifier: EPL-2.0\n  *******************************************************************************/\n-package org.eclipse.xtext.formatting2.debug\n+package org.eclipse.xtext.formatting2.debug;\n \n-import org.junit.Before\n-import org.junit.Test\n+import org.junit.Before;\n+import org.junit.Test;\n import static org.junit.Assert.*;\n \n /**\n  * @author Florian Stolte - Initial contribution and API\n  */\n-class TextRegionsToStringTest {\n+public class TextRegionsToStringTest {\n \tTextRegionsToString textRegionsToString;\n \t\n \t@Before\n-\tdef void init() {\n-\t\ttextRegionsToString = new TextRegionsToString\n-\t\ttextRegionsToString.ignoreCarriageReturnInQuotes = true\n+\tpublic void init() {\n+\t\ttextRegionsToString = new TextRegionsToString();\n+\t\ttextRegionsToString.setIgnoreCarriageReturnInQuotes(true);\n \t}\n \t\n \t@Test\n-\tdef testQuote() {\n+\tpublic void testQuote() {\n \n \t\t// insert quotes\n-\t\tassertEquals(\"\\\"import some.thing\\\"\", textRegionsToString.quote(\"import some.thing\", 30))\n-\t\tassertEquals(\"\\\"import some.thing\\\"\", textRegionsToString.quote(\"import some.thing\", 17))\n+\t\tassertEquals(\"\\\"import some.thing\\\"\", textRegionsToString.quote(\"import some.thing\", 30));\n+\t\tassertEquals(\"\\\"import some.thing\\\"\", textRegionsToString.quote(\"import some.thing\", 17));\n \t\t\n \t\t// shorten result\n-\t\tassertEquals(\"\\\"import ...\\\"\", textRegionsToString.quote(\"import some.thing\", 10)) \n-\t\tassertEquals(\"\\\"import some.t...\\\"\", textRegionsToString.quote(\"import some.thing\", 16))\n+\t\tassertEquals(\"\\\"import ...\\\"\", textRegionsToString.quote(\"import some.thing\", 10));\n+\t\tassertEquals(\"\\\"import some.t...\\\"\", textRegionsToString.quote(\"import some.thing\", 16));\n \t\t\n \t\t// remove windows line endings\n-\t\tassertEquals(\"\\\"\\\\nimport some.thing\\\\n\\\"\", textRegionsToString.quote(\"\\r\\nimport some.thing\\r\\n\", 30))\n-\t\tassertEquals(\"\\\"\\\\nimport some.thing\\\\n\\\"\", textRegionsToString.quote(\"\\r\\nimport some.thing\\r\\n\", 19))\n+\t\tassertEquals(\"\\\"\\\\nimport some.thing\\\\n\\\"\", textRegionsToString.quote(\"\\r\\nimport some.thing\\r\\n\", 30));\n+\t\tassertEquals(\"\\\"\\\\nimport some.thing\\\\n\\\"\", textRegionsToString.quote(\"\\r\\nimport some.thing\\r\\n\", 19));\n \t\t\n \t\t// remove windows line endings and shorten\n-\t\tassertEquals(\"\\\"\\\\nimport...\\\"\", textRegionsToString.quote(\"\\r\\nimport some.thing\\r\\n\", 10))\n-\t\tassertEquals(\"\\\"\\\\nimport some.th...\\\"\", textRegionsToString.quote(\"\\r\\nimport some.thing\\r\\n\", 18))\n+\t\tassertEquals(\"\\\"\\\\nimport...\\\"\", textRegionsToString.quote(\"\\r\\nimport some.thing\\r\\n\", 10));\n+\t\tassertEquals(\"\\\"\\\\nimport some.th...\\\"\", textRegionsToString.quote(\"\\r\\nimport some.thing\\r\\n\", 18));\n \t\t\n \t\t// keep windows line endings\n-\t\ttextRegionsToString.ignoreCarriageReturnInQuotes = false\n-\t\tassertEquals(\"\\\"\\\\r\\\\nimport some.thing\\\\r\\\\n\\\"\", textRegionsToString.quote(\"\\r\\nimport some.thing\\r\\n\", 30))\n+\t\ttextRegionsToString.setIgnoreCarriageReturnInQuotes(false);\n+\t\tassertEquals(\"\\\"\\\\r\\\\nimport some.thing\\\\r\\\\n\\\"\", textRegionsToString.quote(\"\\r\\nimport some.thing\\r\\n\", 30));\n \t}\n }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acc2487bb7a1790be600c55108ed98caefbaa0d2"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAwNDE0OQ==", "bodyText": "Please remove extra line.", "url": "https://github.com/eclipse/xtext-core/pull/1439#discussion_r404004149", "createdAt": "2020-04-06T10:59:42Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/index/IndexTestLanguageInjectorProvider.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.index;\n+\n+import org.eclipse.xtext.testing.GlobalRegistries;\n+import org.eclipse.xtext.testing.IInjectorProvider;\n+import org.eclipse.xtext.testing.IRegistryConfigurator;\n+\n+import com.google.inject.Injector;\n+\n+/**\n+ * @author Sven Efftinge - Initial contribution and API\n+ */\n+public class IndexTestLanguageInjectorProvider implements IInjectorProvider, IRegistryConfigurator {\n+\tprotected GlobalRegistries.GlobalStateMemento stateBeforeInjectorCreation;\n+\n+\tprotected GlobalRegistries.GlobalStateMemento stateAfterInjectorCreation;\n+\n+\tprotected Injector injector;\n+\n+\tpublic IndexTestLanguageInjectorProvider() {\n+\t\tGlobalRegistries.initializeDefaults();\n+\t}\n+\n+\t@Override\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acc2487bb7a1790be600c55108ed98caefbaa0d2"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAwNDI2MA==", "bodyText": "PS comments above", "url": "https://github.com/eclipse/xtext-core/pull/1439#discussion_r404004260", "createdAt": "2020-04-06T10:59:55Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/index/IndexTestLanguageInjectorProvider.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.index;\n+\n+import org.eclipse.xtext.testing.GlobalRegistries;\n+import org.eclipse.xtext.testing.IInjectorProvider;\n+import org.eclipse.xtext.testing.IRegistryConfigurator;\n+\n+import com.google.inject.Injector;\n+\n+/**\n+ * @author Sven Efftinge - Initial contribution and API\n+ */\n+public class IndexTestLanguageInjectorProvider implements IInjectorProvider, IRegistryConfigurator {\n+\tprotected GlobalRegistries.GlobalStateMemento stateBeforeInjectorCreation;\n+\n+\tprotected GlobalRegistries.GlobalStateMemento stateAfterInjectorCreation;\n+\n+\tprotected Injector injector;\n+\n+\tpublic IndexTestLanguageInjectorProvider() {\n+\t\tGlobalRegistries.initializeDefaults();\n+\t}\n+\n+\t@Override\n+\n+\tpublic Injector getInjector() {\n+\t\tif (injector == null) {\n+\t\t\tstateBeforeInjectorCreation = GlobalRegistries.makeCopyOfGlobalState();\n+\t\t\tinjector = this.internalCreateInjector();\n+\t\t\tstateAfterInjectorCreation = GlobalRegistries.makeCopyOfGlobalState();\n+\t\t}\n+\t\treturn this.injector;\n+\t}\n+\n+\tprotected Injector internalCreateInjector() {\n+\t\treturn new IndexTestLanguageStandaloneSetup().createInjectorAndDoEMFRegistration();\n+\t}\n+\n+\t@Override\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acc2487bb7a1790be600c55108ed98caefbaa0d2"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAwNDI5NQ==", "bodyText": "PS comments above", "url": "https://github.com/eclipse/xtext-core/pull/1439#discussion_r404004295", "createdAt": "2020-04-06T10:59:59Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/index/IndexTestLanguageInjectorProvider.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/**\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.index;\n+\n+import org.eclipse.xtext.testing.GlobalRegistries;\n+import org.eclipse.xtext.testing.IInjectorProvider;\n+import org.eclipse.xtext.testing.IRegistryConfigurator;\n+\n+import com.google.inject.Injector;\n+\n+/**\n+ * @author Sven Efftinge - Initial contribution and API\n+ */\n+public class IndexTestLanguageInjectorProvider implements IInjectorProvider, IRegistryConfigurator {\n+\tprotected GlobalRegistries.GlobalStateMemento stateBeforeInjectorCreation;\n+\n+\tprotected GlobalRegistries.GlobalStateMemento stateAfterInjectorCreation;\n+\n+\tprotected Injector injector;\n+\n+\tpublic IndexTestLanguageInjectorProvider() {\n+\t\tGlobalRegistries.initializeDefaults();\n+\t}\n+\n+\t@Override\n+\n+\tpublic Injector getInjector() {\n+\t\tif (injector == null) {\n+\t\t\tstateBeforeInjectorCreation = GlobalRegistries.makeCopyOfGlobalState();\n+\t\t\tinjector = this.internalCreateInjector();\n+\t\t\tstateAfterInjectorCreation = GlobalRegistries.makeCopyOfGlobalState();\n+\t\t}\n+\t\treturn this.injector;\n+\t}\n+\n+\tprotected Injector internalCreateInjector() {\n+\t\treturn new IndexTestLanguageStandaloneSetup().createInjectorAndDoEMFRegistration();\n+\t}\n+\n+\t@Override\n+\n+\tpublic void restoreRegistry() {\n+\t\tstateBeforeInjectorCreation.restoreGlobalState();\n+\t}\n+\n+\t@Override\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acc2487bb7a1790be600c55108ed98caefbaa0d2"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAwNTA5OA==", "bodyText": "NL", "url": "https://github.com/eclipse/xtext-core/pull/1439#discussion_r404005098", "createdAt": "2020-04-06T11:01:35Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/util/UriUtilTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*******************************************************************************\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.util;\n+\n+import java.io.File;\n+import org.eclipse.emf.common.util.URI;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.*;\n+\n+import static org.eclipse.xtext.util.UriUtil.*;\n+\n+public class UriUtilTest {\n+\t@Test\n+\tpublic void testPrefix() {\n+\t\tURI prefix = URI.createURI(\"file:/foo/\");\n+\t\tURI uri = URI.createURI(\"file:/foo/bar\");\n+\t\tassertTrue(isPrefixOf(prefix, uri));\n+\t}\n+\n+\t@Test\n+\tpublic void testPrefixRequiresSameScheme() {\n+\t\tURI prefix = URI.createURI(\"platform:/foo/\");\n+\t\tURI uri = URI.createURI(\"file:/foo/bar\");\n+\t\tassertFalse(isPrefixOf(prefix, uri));\n+\t}\n+\n+\t@Test\n+\tpublic void testPrefixRequiresTrailingSeparator() {\n+\t\tURI prefix = URI.createURI(\"file:/foo\");\n+\t\tURI uri = URI.createURI(\"file:/foo/bar\");\n+\t\tassertFalse(isPrefixOf(prefix, uri));\n+\t}\n+\n+\t@Test\n+\tpublic void testPrefixRequiresSegmentsToMatch() {\n+\t\tURI prefix = URI.createURI(\"file:/foo\");\n+\t\tURI uri = URI.createURI(\"file:/buzz/bar\");\n+\t\tassertFalse(isPrefixOf(prefix, uri));\n+\t}\n+\n+\t@Test\n+\tpublic void testFolderUriHasTrailingSeparator() {\n+\t\tFile folder = new File(\".\");\n+\t\tURI uri = createFolderURI(folder);\n+\t\tassertTrue(uri.hasTrailingPathSeparator());\n+\t\tassertEquals(\".\", uri.segment(uri.segmentCount() - 2));\n+\t}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acc2487bb7a1790be600c55108ed98caefbaa0d2"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDAxNDA4Nw==", "bodyText": "I would prefer making the assert statements more explicit by changing assertTrue(isPrefixOf(prefix, uri)) to assertTrue(UriUtil.isPrefixOf(prefix, uri))\nwhile going through the tests, it takes few seconds for you to realize that the method #isPrefixOf(...) is statically imported. I am not sure if you feel the same. Please make the change only if it makes sense to you.", "url": "https://github.com/eclipse/xtext-core/pull/1439#discussion_r404014087", "createdAt": "2020-04-06T11:19:25Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.tests/src/org/eclipse/xtext/util/UriUtilTest.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*******************************************************************************\n+ * Copyright (c) 2015, 2020 itemis AG (http://www.itemis.eu) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package org.eclipse.xtext.util;\n+\n+import java.io.File;\n+import org.eclipse.emf.common.util.URI;\n+import org.junit.Test;\n+\n+import static org.junit.Assert.*;\n+\n+import static org.eclipse.xtext.util.UriUtil.*;\n+\n+public class UriUtilTest {\n+\t@Test\n+\tpublic void testPrefix() {\n+\t\tURI prefix = URI.createURI(\"file:/foo/\");\n+\t\tURI uri = URI.createURI(\"file:/foo/bar\");\n+\t\tassertTrue(isPrefixOf(prefix, uri));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acc2487bb7a1790be600c55108ed98caefbaa0d2"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcd234c02ad0db4ce7eee61a412f43d8201bf3ea", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/dcd234c02ad0db4ce7eee61a412f43d8201bf3ea", "committedDate": "2020-04-06T11:26:12Z", "message": "[eclipse/xtext#1679] ported xtend code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "acc2487bb7a1790be600c55108ed98caefbaa0d2", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/acc2487bb7a1790be600c55108ed98caefbaa0d2", "committedDate": "2020-04-06T10:07:36Z", "message": "[eclipse/xtext#1679] ported xtend code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "dcd234c02ad0db4ce7eee61a412f43d8201bf3ea", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/dcd234c02ad0db4ce7eee61a412f43d8201bf3ea", "committedDate": "2020-04-06T11:26:12Z", "message": "[eclipse/xtext#1679] ported xtend code to java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MTk4MDQx", "url": "https://github.com/eclipse/xtext-core/pull/1439#pullrequestreview-388198041", "createdAt": "2020-04-06T12:25:46Z", "commit": {"oid": "dcd234c02ad0db4ce7eee61a412f43d8201bf3ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NTk3NjM5", "url": "https://github.com/eclipse/xtext-core/pull/1439#pullrequestreview-388597639", "createdAt": "2020-04-06T20:36:51Z", "commit": {"oid": "dcd234c02ad0db4ce7eee61a412f43d8201bf3ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4747, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}