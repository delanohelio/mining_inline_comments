{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NTYyMjAx", "number": 1454, "title": "[eclipse/xtext#1679] converted Xtend code to Java", "bodyText": "[eclipse/xtext#1679] converted Xtend code to Java\nSigned-off-by: Christian Dietrich christian.dietrich@itemis.de", "createdAt": "2020-04-24T13:48:02Z", "url": "https://github.com/eclipse/xtext-core/pull/1454", "merged": true, "mergeCommit": {"oid": "f90954624825a55e1232e1a3dd2397710f6d528b"}, "closed": true, "closedAt": "2020-04-24T16:19:21Z", "author": {"login": "cdietrich"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcax7YHgBqjMyNjk1NDI0ODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaylCIgBqjMyNjk3MzYyOTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3949bcbc13df5dd257d048c1ed0ebdde0ca96283", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/3949bcbc13df5dd257d048c1ed0ebdde0ca96283", "committedDate": "2020-04-24T13:46:28Z", "message": "[eclipse/xtext#1679] converted Xtend code to Java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "aff5b70ff82963b26e53ca3d96793fb74532a335", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/aff5b70ff82963b26e53ca3d96793fb74532a335", "committedDate": "2020-04-24T13:58:10Z", "message": "[eclipse/xtext#1679] converted Xtend code to Java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5OTc2MjA4", "url": "https://github.com/eclipse/xtext-core/pull/1454#pullrequestreview-399976208", "createdAt": "2020-04-24T14:04:20Z", "commit": {"oid": "aff5b70ff82963b26e53ca3d96793fb74532a335"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aff5b70ff82963b26e53ca3d96793fb74532a335", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/aff5b70ff82963b26e53ca3d96793fb74532a335", "committedDate": "2020-04-24T13:58:10Z", "message": "[eclipse/xtext#1679] converted Xtend code to Java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "c6ad7f0606fb01ed156edbe25101cc5cd55f16d7", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/c6ad7f0606fb01ed156edbe25101cc5cd55f16d7", "committedDate": "2020-04-24T14:06:24Z", "message": "[eclipse/xtext#1679] converted Xtend code to Java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5OTk3OTI2", "url": "https://github.com/eclipse/xtext-core/pull/1454#pullrequestreview-399997926", "createdAt": "2020-04-24T14:29:10Z", "commit": {"oid": "c6ad7f0606fb01ed156edbe25101cc5cd55f16d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDoyOToxMFrOGLaZ1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDoyOToxMFrOGLaZ1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYyMDExOA==", "bodyText": "You might like to get rid of IterableExtensions\nIterable<IEObjectDescription> exportecObjects = getIndexData().getExportedObjectsByObject(object)\nreturn exportecObjects.hasNext() ? exportecObjects.next() : null;", "url": "https://github.com/eclipse/xtext-core/pull/1454#discussion_r414620118", "createdAt": "2020-04-24T14:29:10Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/hierarchy/AbstractHierarchyBuilder.java", "diffHunk": "@@ -0,0 +1,145 @@\n+/**\n+ * Copyright (c) 2016, 2020 TypeFox GmbH (http://www.typefox.io) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.ide.editor.hierarchy;\n+\n+import javax.inject.Provider;\n+\n+import org.eclipse.emf.common.util.URI;\n+import org.eclipse.emf.ecore.EClass;\n+import org.eclipse.emf.ecore.EClassifier;\n+import org.eclipse.emf.ecore.EObject;\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+import org.eclipse.xtext.EcoreUtil2;\n+import org.eclipse.xtext.findReferences.IReferenceFinder;\n+import org.eclipse.xtext.findReferences.TargetURICollector;\n+import org.eclipse.xtext.findReferences.TargetURIs;\n+import org.eclipse.xtext.resource.IEObjectDescription;\n+import org.eclipse.xtext.resource.IResourceDescription;\n+import org.eclipse.xtext.resource.IResourceDescriptions;\n+import org.eclipse.xtext.resource.IResourceServiceProvider;\n+import org.eclipse.xtext.util.concurrent.IUnitOfWork;\n+import org.eclipse.xtext.xbase.lib.IterableExtensions;\n+\n+import com.google.common.base.Objects;\n+import com.google.inject.Inject;\n+\n+/**\n+ * @author kosyakov - Initial contribution and API\n+ * @since 2.10\n+ */\n+public abstract class AbstractHierarchyBuilder implements IHierarchyBuilder {\n+\tprivate IReferenceFinder.IResourceAccess resourceAccess;\n+\n+\tprivate IResourceDescriptions indexData;\n+\n+\t@Inject\n+\tprivate IReferenceFinder referenceFinder;\n+\n+\t@Inject\n+\tprivate TargetURICollector targetURICollector;\n+\n+\t@Inject\n+\tprivate Provider<TargetURIs> targetURIProvider;\n+\n+\t@Inject\n+\tprivate IHierarchyNodeLocationProvider hierarchyNodeLocationProvider;\n+\n+\t@Inject\n+\tprivate IResourceServiceProvider.Registry resourceServiceProviderRegistry;\n+\n+\tprotected <R extends Object> R readOnly(URI objectURI, IUnitOfWork<R, EObject> work) {\n+\t\treturn getResourceAccess().readOnly(objectURI, (ResourceSet resourceSet) -> {\n+\t\t\tEObject targetObject = resourceSet.getEObject(objectURI, true);\n+\t\t\treturn work.exec(targetObject);\n+\t\t});\n+\t}\n+\n+\tprotected IEObjectDescription getDescription(URI objectURI) {\n+\t\tIResourceDescription resourceDescription = getIndexData().getResourceDescription(objectURI.trimFragment());\n+\t\tif (resourceDescription == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\tfor (IEObjectDescription o : resourceDescription.getExportedObjects()) {\n+\t\t\tif (Objects.equal(o.getEObjectURI(), objectURI)) {\n+\t\t\t\treturn o;\n+\t\t\t}\n+\t\t}\n+\t\treturn null;\n+\t}\n+\n+\tprotected IEObjectDescription getDescription(EObject object) {\n+\t\tif (object == null) {\n+\t\t\treturn null;\n+\t\t}\n+\t\treturn IterableExtensions.head(getIndexData().getExportedObjectsByObject(object));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6ad7f0606fb01ed156edbe25101cc5cd55f16d7"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5OTk4MTI2", "url": "https://github.com/eclipse/xtext-core/pull/1454#pullrequestreview-399998126", "createdAt": "2020-04-24T14:29:23Z", "commit": {"oid": "c6ad7f0606fb01ed156edbe25101cc5cd55f16d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDoyOToyM1rOGLaagw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDoyOToyM1rOGLaagw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYyMDI5MQ==", "bodyText": "return (ITextRegionWithLineInformation) textRegion;", "url": "https://github.com/eclipse/xtext-core/pull/1454#discussion_r414620291", "createdAt": "2020-04-24T14:29:23Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/editor/hierarchy/DefaultHierarchyNodeLocationProvider.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (c) 2016, 2020 TypeFox GmbH (http://www.typefox.io) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.ide.editor.hierarchy;\n+\n+import com.google.inject.Inject;\n+import com.google.inject.Singleton;\n+import org.eclipse.emf.ecore.EObject;\n+import org.eclipse.emf.ecore.EStructuralFeature;\n+import org.eclipse.xtext.ide.editor.hierarchy.IHierarchyNodeLocationProvider;\n+import org.eclipse.xtext.nodemodel.ICompositeNode;\n+import org.eclipse.xtext.nodemodel.util.NodeModelUtils;\n+import org.eclipse.xtext.resource.ILocationInFileProvider;\n+import org.eclipse.xtext.util.ITextRegion;\n+import org.eclipse.xtext.util.ITextRegionWithLineInformation;\n+import org.eclipse.xtext.util.TextRegionWithLineInformation;\n+\n+/**\n+ * @author kosyakov - Initial contribution and API\n+ * @since 2.10\n+ */\n+@Singleton\n+public class DefaultHierarchyNodeLocationProvider implements IHierarchyNodeLocationProvider {\n+\t@Inject\n+\tprotected ILocationInFileProvider locationInFileProvider;\n+\n+\t@Override\n+\tpublic ITextRegionWithLineInformation getTextRegion(EObject obj) {\n+\t\tif (obj == null) {\n+\t\t\treturn ITextRegionWithLineInformation.EMPTY_REGION;\n+\t\t}\n+\t\tITextRegion textRegion = locationInFileProvider.getSignificantTextRegion(obj);\n+\t\treturn toTextRegionWithLineInformation(obj, textRegion);\n+\t}\n+\n+\t@Override\n+\tpublic ITextRegionWithLineInformation getTextRegion(EObject owner, EStructuralFeature feature, int indexInList) {\n+\t\tif (owner == null) {\n+\t\t\treturn ITextRegionWithLineInformation.EMPTY_REGION;\n+\t\t}\n+\t\tITextRegion textRegion = locationInFileProvider.getSignificantTextRegion(owner, feature, indexInList);\n+\t\treturn toTextRegionWithLineInformation(owner, textRegion);\n+\t}\n+\n+\tprotected ITextRegionWithLineInformation toTextRegionWithLineInformation(EObject obj, ITextRegion textRegion) {\n+\t\tif (textRegion == null) {\n+\t\t\treturn ITextRegionWithLineInformation.EMPTY_REGION;\n+\t\t}\n+\t\tif (textRegion instanceof ITextRegionWithLineInformation) {\n+\t\t\treturn ((ITextRegionWithLineInformation) textRegion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6ad7f0606fb01ed156edbe25101cc5cd55f16d7"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5OTk4MTc0", "url": "https://github.com/eclipse/xtext-core/pull/1454#pullrequestreview-399998174", "createdAt": "2020-04-24T14:29:27Z", "commit": {"oid": "c6ad7f0606fb01ed156edbe25101cc5cd55f16d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDoyOToyN1rOGLaaqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDoyOToyN1rOGLaaqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYyMDMyOQ==", "bodyText": "Please remove the annotation, and the import.", "url": "https://github.com/eclipse/xtext-core/pull/1454#discussion_r414620329", "createdAt": "2020-04-24T14:29:27Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/refactoring/ResourceRelocationContext.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * Copyright (c) 2017, 2020 TypeFox GmbH (http://www.typefox.io) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.ide.refactoring;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import org.eclipse.emf.ecore.resource.Resource;\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+import org.eclipse.xtend.lib.annotations.FinalFieldsConstructor;\n+import org.eclipse.xtext.ide.serializer.IChangeSerializer;\n+import org.eclipse.xtext.xbase.lib.Exceptions;\n+\n+/**\n+ * @author koehnlein - Initial contribution and API\n+ * @since 2.13\n+ */\n+@FinalFieldsConstructor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6ad7f0606fb01ed156edbe25101cc5cd55f16d7"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMDAzNDE1", "url": "https://github.com/eclipse/xtext-core/pull/1454#pullrequestreview-400003415", "createdAt": "2020-04-24T14:35:31Z", "commit": {"oid": "c6ad7f0606fb01ed156edbe25101cc5cd55f16d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDozNTozMVrOGLasZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDozNTozMVrOGLasZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDYyNDg3MQ==", "bodyText": "`changeSerializer.addModification(original, (Resource it) -> original.setURI(change.getToURI()));", "url": "https://github.com/eclipse/xtext-core/pull/1454#discussion_r414624871", "createdAt": "2020-04-24T14:35:31Z", "author": {"login": "nbhusare"}, "path": "org.eclipse.xtext.ide/src/org/eclipse/xtext/ide/refactoring/ResourceRelocationContext.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/**\n+ * Copyright (c) 2017, 2020 TypeFox GmbH (http://www.typefox.io) and others.\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ * \n+ * SPDX-License-Identifier: EPL-2.0\n+ */\n+package org.eclipse.xtext.ide.refactoring;\n+\n+import java.io.IOException;\n+import java.util.List;\n+\n+import org.eclipse.emf.ecore.resource.Resource;\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+import org.eclipse.xtend.lib.annotations.FinalFieldsConstructor;\n+import org.eclipse.xtext.ide.serializer.IChangeSerializer;\n+import org.eclipse.xtext.xbase.lib.Exceptions;\n+\n+/**\n+ * @author koehnlein - Initial contribution and API\n+ * @since 2.13\n+ */\n+@FinalFieldsConstructor\n+public class ResourceRelocationContext {\n+\tpublic enum ChangeType {\n+\t\tCOPY, MOVE, RENAME;\n+\t}\n+\n+\tprivate final ResourceRelocationContext.ChangeType changeType;\n+\n+\tprivate final List<ResourceRelocationChange> changes;\n+\n+\tprivate final RefactoringIssueAcceptor issueAcceptor;\n+\n+\tprivate final IChangeSerializer changeSerializer;\n+\n+\tprivate final ResourceSet resourceSet;\n+\n+\t/**\n+\t * Loads and watches the respective resource, applies the relocation change and calls the given\n+\t * <code>modification</code> with the renamed/moved/copied resource.\n+\t * \n+\t * @param change\n+\t *            the change to execute\n+\t * @param modification\n+\t *            the side-effect the rename/move/copy operation should have.\n+\t */\n+\tpublic void addModification(ResourceRelocationChange change,\n+\t\t\tIChangeSerializer.IModification<Resource> modification) {\n+\t\tchangeSerializer.addModification(loadAndWatchResource(change), modification);\n+\t}\n+\n+\t/**\n+\t * Loads and watches the respective resource and applies the relocation change. Clients may usually rather call\n+\t * {@link #addModification} to register their side-effects.\n+\t * \n+\t * @param change\n+\t *            the change to execute\n+\t */\n+\tprotected Resource loadAndWatchResource(ResourceRelocationChange change) {\n+\t\t\tif (changeType != null) {\n+\t\t\t\tswitch (changeType) {\n+\t\t\t\tcase MOVE:\n+\t\t\t\tcase RENAME:\n+\t\t\t\t\tResource original = resourceSet.getResource(change.getFromURI(), true);\n+\t\t\t\t\tchangeSerializer.addModification(original, (Resource it) -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6ad7f0606fb01ed156edbe25101cc5cd55f16d7"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3c5d32f1b6fde572ffe798f26c9e6c874759392", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/e3c5d32f1b6fde572ffe798f26c9e6c874759392", "committedDate": "2020-04-24T14:43:37Z", "message": "[eclipse/xtext#1679] converted Xtend code to Java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6ad7f0606fb01ed156edbe25101cc5cd55f16d7", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/c6ad7f0606fb01ed156edbe25101cc5cd55f16d7", "committedDate": "2020-04-24T14:06:24Z", "message": "[eclipse/xtext#1679] converted Xtend code to Java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}, "afterCommit": {"oid": "e3c5d32f1b6fde572ffe798f26c9e6c874759392", "author": {"user": {"login": "cdietrich", "name": "Christian Dietrich"}}, "url": "https://github.com/eclipse/xtext-core/commit/e3c5d32f1b6fde572ffe798f26c9e6c874759392", "committedDate": "2020-04-24T14:43:37Z", "message": "[eclipse/xtext#1679] converted Xtend code to Java\n\nSigned-off-by: Christian Dietrich <christian.dietrich@itemis.de>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4766, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}