{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MTM1Mzg1", "number": 1542, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTozNzo1OFrOENvXDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTozNzo1OFrOENvXDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyODQyODk0OnYy", "diffSide": "RIGHT", "path": "org.eclipse.xtext/src/org/eclipse/xtext/nodemodel/impl/InternalNodeModelUtils.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTozNzo1OFrOGwg3ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOTo1NjozN1rOGwhjcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyMzM1OA==", "bodyText": "might miss negative offsets", "url": "https://github.com/eclipse/xtext-core/pull/1542#discussion_r453523358", "createdAt": "2020-07-13T09:37:58Z", "author": {"login": "cdietrich"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/nodemodel/impl/InternalNodeModelUtils.java", "diffHunk": "@@ -58,7 +58,7 @@ protected static LineAndColumn getLineAndColumn(INode anyNode, int documentOffse\n \t */\n \tprotected static LineAndColumn getLineAndColumn(String text, int[] lineBreaks, int offset) {\n \t\tif (offset > text.length() || offset < 0) {\n-\t\t\tthrow new IndexOutOfBoundsException();\n+\t\t\tthrow new IndexOutOfBoundsException(\"Offset (\" + offset + \") is longer than the text's length (\" + text.length() + \")\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ddb84173ebd22cfd5a0ed002c95239936015a3c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyNDM0NA==", "bodyText": "Maybe use com.google.common.base.Preconditions.checkElementIndex?", "url": "https://github.com/eclipse/xtext-core/pull/1542#discussion_r453524344", "createdAt": "2020-07-13T09:39:44Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/nodemodel/impl/InternalNodeModelUtils.java", "diffHunk": "@@ -58,7 +58,7 @@ protected static LineAndColumn getLineAndColumn(INode anyNode, int documentOffse\n \t */\n \tprotected static LineAndColumn getLineAndColumn(String text, int[] lineBreaks, int offset) {\n \t\tif (offset > text.length() || offset < 0) {\n-\t\t\tthrow new IndexOutOfBoundsException();\n+\t\t\tthrow new IndexOutOfBoundsException(\"Offset (\" + offset + \") is longer than the text's length (\" + text.length() + \")\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyMzM1OA=="}, "originalCommit": {"oid": "7ddb84173ebd22cfd5a0ed002c95239936015a3c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyNTM5OQ==", "bodyText": "Well in fact it would need to be checkPositionIndex.", "url": "https://github.com/eclipse/xtext-core/pull/1542#discussion_r453525399", "createdAt": "2020-07-13T09:41:25Z", "author": {"login": "szarnekow"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/nodemodel/impl/InternalNodeModelUtils.java", "diffHunk": "@@ -58,7 +58,7 @@ protected static LineAndColumn getLineAndColumn(INode anyNode, int documentOffse\n \t */\n \tprotected static LineAndColumn getLineAndColumn(String text, int[] lineBreaks, int offset) {\n \t\tif (offset > text.length() || offset < 0) {\n-\t\t\tthrow new IndexOutOfBoundsException();\n+\t\t\tthrow new IndexOutOfBoundsException(\"Offset (\" + offset + \") is longer than the text's length (\" + text.length() + \")\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyMzM1OA=="}, "originalCommit": {"oid": "7ddb84173ebd22cfd5a0ed002c95239936015a3c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUzNDU3Nw==", "bodyText": "Done", "url": "https://github.com/eclipse/xtext-core/pull/1542#discussion_r453534577", "createdAt": "2020-07-13T09:56:37Z", "author": {"login": "tivervac"}, "path": "org.eclipse.xtext/src/org/eclipse/xtext/nodemodel/impl/InternalNodeModelUtils.java", "diffHunk": "@@ -58,7 +58,7 @@ protected static LineAndColumn getLineAndColumn(INode anyNode, int documentOffse\n \t */\n \tprotected static LineAndColumn getLineAndColumn(String text, int[] lineBreaks, int offset) {\n \t\tif (offset > text.length() || offset < 0) {\n-\t\t\tthrow new IndexOutOfBoundsException();\n+\t\t\tthrow new IndexOutOfBoundsException(\"Offset (\" + offset + \") is longer than the text's length (\" + text.length() + \")\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUyMzM1OA=="}, "originalCommit": {"oid": "7ddb84173ebd22cfd5a0ed002c95239936015a3c"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 936, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}