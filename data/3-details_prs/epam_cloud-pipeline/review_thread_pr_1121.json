{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNzkxNTI2", "number": 1121, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjo1NToxOVrOD-TtHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjo1NTo1OFrOD-Tt_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjYxMTQ4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/execution/PipelineExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjo1NToxOVrOGYVJYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjo1NToxOVrOGYVJYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE2NTQ3NQ==", "bodyText": "Maybe we should extract method isParameterEnabled and use it here and for lines 163-166?", "url": "https://github.com/epam/cloud-pipeline/pull/1121#discussion_r428165475", "createdAt": "2020-05-20T16:55:19Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/execution/PipelineExecutor.java", "diffHunk": "@@ -160,14 +164,18 @@ private PodSpec getPodSpec(PipelineRun run, List<EnvVar> envVars, String secretN\n                 .stream()\n                 .anyMatch(env -> KubernetesConstants.CP_CAP_DIND_NATIVE.equals(env.getName()) &&\n                         TRUE.equals(env.getValue()));\n-        spec.setVolumes(getVolumes(isDockerInDockerEnabled));\n+        boolean isSystemdEnabled = ListUtils.emptyIfNull(envVars)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19b5a56632160b3f2033cecbe880ffffd6d39d60"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjYxMzMyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/execution/PipelineExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjo1NTo1MFrOGYVKsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjo1NTo1MFrOGYVKsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE2NTgwOA==", "bodyText": "missing final", "url": "https://github.com/epam/cloud-pipeline/pull/1121#discussion_r428165808", "createdAt": "2020-05-20T16:55:50Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/execution/PipelineExecutor.java", "diffHunk": "@@ -235,7 +243,7 @@ private ContainerResources buildCpuRequests(List<EnvVar> envVars) {\n                 .orElse(ContainerResources.empty());\n     }\n \n-    private List<Volume> getVolumes(final boolean isDockerInDockerEnabled) {\n+    private List<Volume> getVolumes(final boolean isDockerInDockerEnabled, boolean isSystemdEnabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19b5a56632160b3f2033cecbe880ffffd6d39d60"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjYxMzczOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/execution/PipelineExecutor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjo1NTo1OFrOGYVK-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNjo1NTo1OFrOGYVK-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE2NTg4Mw==", "bodyText": "missing final", "url": "https://github.com/epam/cloud-pipeline/pull/1121#discussion_r428165883", "createdAt": "2020-05-20T16:55:58Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/execution/PipelineExecutor.java", "diffHunk": "@@ -246,10 +254,13 @@ private ContainerResources buildCpuRequests(List<EnvVar> envVars) {\n                 CollectionUtils.isNotEmpty(dockerMounts)) {\n             dockerMounts.forEach(mount -> volumes.add(createVolume(mount.getName(), mount.getHostPath())));\n         }\n+        if (isSystemdEnabled) {\n+            volumes.add(createVolume(HOST_CGROUP_MOUNT.getName(), HOST_CGROUP_MOUNT.getHostPath()));\n+        }\n         return volumes;\n     }\n \n-    private List<VolumeMount> getMounts(final boolean isDockerInDockerEnabled) {\n+    private List<VolumeMount> getMounts(final boolean isDockerInDockerEnabled, boolean isSystemdEnabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19b5a56632160b3f2033cecbe880ffffd6d39d60"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 446, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}