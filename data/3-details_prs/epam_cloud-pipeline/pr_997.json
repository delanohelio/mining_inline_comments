{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MjYxMDM5", "number": 997, "title": "Issue #907 Default home storage for new users", "bodyText": "This PR is related to issue #907\nIt brings automation of newly registered users home directory creation. If true is assigned to the target preference, then new storage is created and access to it is granted to the user.\n\nName/path template, metadata, and permission granting are extracted from DefaultStorage folder template.\nModify the transactional approach of user creation to avoid failure if the user was created successfully, but the default folder was not initialized.", "createdAt": "2020-03-10T17:13:42Z", "url": "https://github.com/epam/cloud-pipeline/pull/997", "merged": true, "mergeCommit": {"oid": "6fc836a4c83bf568372d0d12eedee76ed4451288"}, "closed": true, "closedAt": "2020-12-04T10:53:47Z", "author": {"login": "Wedds"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMo7FrgFqTM3Mjg0MDcwNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdi1iWggFqTU0NDg1MzM1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyODQwNzA0", "url": "https://github.com/epam/cloud-pipeline/pull/997#pullrequestreview-372840704", "createdAt": "2020-03-11T14:59:34Z", "commit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDo1OTozNFrOF062tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNToyMjo0NVrOF075bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzNDU1MA==", "bodyText": "This settings shall be stored in SystemPreference to be configurable at runtime", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391034550", "createdAt": "2020-03-11T14:59:34Z", "author": {"login": "mzueva"}, "path": "api/profiles/dev/application.properties", "diffHunk": "@@ -78,6 +78,8 @@ git.docs.directory=docs/\n #s3 bucket policy\n # in bytes\n storage.clone.name.suffix=storage\n+storage.user.home.auto=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzODk5OQ==", "bodyText": "Can be replaces with\nLong storageId = Optional.ofNullable(defaultStorageId).orElseGet(() -> .... createDefaultFolder)", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391038999", "createdAt": "2020-03-11T15:05:30Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -83,10 +88,47 @@\n     @Autowired\n     private DataStorageValidator storageValidator;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Value(\"${storage.user.home.auto:false}\")\n+    private boolean shouldCreateDefaultHome;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        if (defaultStorageId != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MjcyNA==", "bodyText": "please remove permissions from the template, we need to handle it manually", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391042724", "createdAt": "2020-03-11T15:10:35Z", "author": {"login": "mzueva"}, "path": "deploy/docker/cp-api-srv/folder-templates/ROLE_USER/DefaultStorage/template.json", "diffHunk": "@@ -0,0 +1,26 @@\n+{\n+    \"name\": \"@@\",\n+    \"metadata\": {\n+        \"type\": {\n+            \"value\": \"defaultUserFolder\"\n+        },\n+        \"DataStorage\": {\n+            \"value\": \"${CP_PREF_STORAGE_SCHEMA}://cloud-pipeline-user-@@-default-storage\",\n+            \"type\": \"bucket\"\n+        }\n+    },\n+    \"parentId\" : \"${CP_PARENT_FOLDER_ID_DEFAULT_USER_STORAGE}\",\n+    \"permissions\": [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MzM3Nw==", "bodyText": "after project is created we need to call changeOwner on all created entities (or it will be unavailable for user)", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391043377", "createdAt": "2020-03-11T15:11:30Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -83,10 +88,47 @@\n     @Autowired\n     private DataStorageValidator storageValidator;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Value(\"${storage.user.home.auto:false}\")\n+    private boolean shouldCreateDefaultHome;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        if (defaultStorageId != null) {\n+            newUser.setDefaultStorageId(defaultStorageId);\n+            userDao.updateUser(newUser);\n+        } else if (shouldCreateDefaultHome) {\n+            final AbstractDataStorage defaultStorage = createUserDefaultFolder(newUser).getStorages().get(0);\n+            newUser.setDefaultStorageId(defaultStorage.getId());\n+            userDao.updateUser(newUser);\n+        }\n+        return newUser;\n+    }\n+\n+    private Folder createUserDefaultFolder(final PipelineUser user) {\n+        final Folder folder = new Folder();\n+        final String userName = user.getUserName();\n+        folder.setName(userName);\n+        try {\n+            return folderManager.createFromTemplate(folder, defaultUserStorageTemplateName, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0NTk4Nw==", "bodyText": "I would suggest to store home folder parent id in SystemPreferences", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391045987", "createdAt": "2020-03-11T15:14:59Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/entity/templates/FolderTemplate.java", "diffHunk": "@@ -33,6 +33,7 @@\n @Builder\n public class FolderTemplate {\n     private String name;\n+    private Long parentId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0NzQwMQ==", "bodyText": "I don't see why this should be removed?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391047401", "createdAt": "2020-03-11T15:16:53Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -83,10 +88,47 @@\n     @Autowired\n     private DataStorageValidator storageValidator;\n \n-    @Transactional(propagation = Propagation.REQUIRED)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0ODE4Ng==", "bodyText": "Instead of getting parentId from template, let's get it from SystemPreferences and set it to folder here", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391048186", "createdAt": "2020-03-11T15:18:00Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -83,10 +88,47 @@\n     @Autowired\n     private DataStorageValidator storageValidator;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Value(\"${storage.user.home.auto:false}\")\n+    private boolean shouldCreateDefaultHome;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        if (defaultStorageId != null) {\n+            newUser.setDefaultStorageId(defaultStorageId);\n+            userDao.updateUser(newUser);\n+        } else if (shouldCreateDefaultHome) {\n+            final AbstractDataStorage defaultStorage = createUserDefaultFolder(newUser).getStorages().get(0);\n+            newUser.setDefaultStorageId(defaultStorage.getId());\n+            userDao.updateUser(newUser);\n+        }\n+        return newUser;\n+    }\n+\n+    private Folder createUserDefaultFolder(final PipelineUser user) {\n+        final Folder folder = new Folder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA1MTYyOA==", "bodyText": "We need to check, how this will work, when user is created from SamlUserDetailsService - listing templates may fail, if user is not authorized yet.", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391051628", "createdAt": "2020-03-11T15:22:45Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -83,10 +88,47 @@\n     @Autowired\n     private DataStorageValidator storageValidator;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Value(\"${storage.user.home.auto:false}\")\n+    private boolean shouldCreateDefaultHome;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        if (defaultStorageId != null) {\n+            newUser.setDefaultStorageId(defaultStorageId);\n+            userDao.updateUser(newUser);\n+        } else if (shouldCreateDefaultHome) {\n+            final AbstractDataStorage defaultStorage = createUserDefaultFolder(newUser).getStorages().get(0);\n+            newUser.setDefaultStorageId(defaultStorage.getId());\n+            userDao.updateUser(newUser);\n+        }\n+        return newUser;\n+    }\n+\n+    private Folder createUserDefaultFolder(final PipelineUser user) {\n+        final Folder folder = new Folder();\n+        final String userName = user.getUserName();\n+        folder.setName(userName);\n+        try {\n+            return folderManager.createFromTemplate(folder, defaultUserStorageTemplateName, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MzM3Nw=="}, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 68}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "77547a17564f789b070103bb4be73d40279db5dc", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/77547a17564f789b070103bb4be73d40279db5dc", "committedDate": "2020-03-13T17:24:53Z", "message": "Issue #907 Provide tests for users default folder creation process"}, "afterCommit": {"oid": "54e9a659c6e91758a53263d7e1fee177f111da98", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/54e9a659c6e91758a53263d7e1fee177f111da98", "committedDate": "2020-03-14T13:00:07Z", "message": "Issue #907 Provide tests for users default folder creation process"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06375f75df0c7cf5b3c7b7e5750eb651944c333a", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/06375f75df0c7cf5b3c7b7e5750eb651944c333a", "committedDate": "2020-10-28T14:48:00Z", "message": "Issue #907 Automatically create default storage for new user"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebe410ef719ae45b506d11d60657e81997b902ba", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/ebe410ef719ae45b506d11d60657e81997b902ba", "committedDate": "2020-10-28T14:48:06Z", "message": "Issue #907 Don't create new storage for a user if one, suitable by name, exists already"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "651535385d5379eb2c21706382985c11c69c8594", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/651535385d5379eb2c21706382985c11c69c8594", "committedDate": "2020-10-28T14:48:06Z", "message": "Issue #907 Extract template name to properties, fix permission mask used"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1668b4f40a2b1ab96d0edd707c332185fcc55bf", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/d1668b4f40a2b1ab96d0edd707c332185fcc55bf", "committedDate": "2020-10-28T14:48:07Z", "message": "Issue #907 Change user update propagation to assign default storage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a6a8d87a2d6dbe64efc6f12dba48dceb882cdb3", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/8a6a8d87a2d6dbe64efc6f12dba48dceb882cdb3", "committedDate": "2020-10-28T14:49:37Z", "message": "Issue #907 Extract parent folder id and default storage creation values to SystemPreferences"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6514e4db23f66888f5273f1aeece598b1f4842c7", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/6514e4db23f66888f5273f1aeece598b1f4842c7", "committedDate": "2020-10-28T14:49:38Z", "message": "Issue #907 Remove permissions from template and handle it manually"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "146819bde71af3ebeeb757a119ce50faa6f420c3", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/146819bde71af3ebeeb757a119ce50faa6f420c3", "committedDate": "2020-10-28T14:49:38Z", "message": "Issue #907 Re-use existing folder as default if one exists"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaebb00fd17429bc34cedf8f9952604859e20673", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/eaebb00fd17429bc34cedf8f9952604859e20673", "committedDate": "2020-10-28T14:49:39Z", "message": "Issue #907 Support of user's default folder creation for SAML registration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09eb2e25530195d77ffb46b8e23afd51970ba635", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/09eb2e25530195d77ffb46b8e23afd51970ba635", "committedDate": "2020-10-28T14:49:39Z", "message": "Issue #907 Fix FolderCrudManager.update method: use non null check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "190c226007379f8891576be92771c0fd8ebfec42", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/190c226007379f8891576be92771c0fd8ebfec42", "committedDate": "2020-10-28T14:49:40Z", "message": "Issue #907 Create data storage in existing folder if no such found"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b58b5fef472a7611f708088c38367a1970cb7c7", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/7b58b5fef472a7611f708088c38367a1970cb7c7", "committedDate": "2020-10-28T14:49:40Z", "message": "Issue #907 Provide tests for users default folder creation process"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/b202c67ac1b6f198328eff081a305e143dd64e8c", "committedDate": "2020-10-28T15:04:30Z", "message": "Issue #907 Fix coding style violations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54e9a659c6e91758a53263d7e1fee177f111da98", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/54e9a659c6e91758a53263d7e1fee177f111da98", "committedDate": "2020-03-14T13:00:07Z", "message": "Issue #907 Provide tests for users default folder creation process"}, "afterCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/b202c67ac1b6f198328eff081a305e143dd64e8c", "committedDate": "2020-10-28T15:04:30Z", "message": "Issue #907 Fix coding style violations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4ODI2OTgx", "url": "https://github.com/epam/cloud-pipeline/pull/997#pullrequestreview-518826981", "createdAt": "2020-10-28T16:00:50Z", "commit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjowMDo1MFrOHpxhqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjozOToyMFrOHpzV9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2NTA5OQ==", "bodyText": "What about the case when user just wants to rename folder? Could we still need such functionality?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r513565099", "createdAt": "2020-10-28T16:00:50Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderCrudManager.java", "diffHunk": "@@ -117,9 +117,9 @@ public Folder update(final Folder folder) {\n             dbFolder.setName(validateName(folder.getName()));\n         }\n         Long parentId = folder.getParentId();\n-        Assert.isNull(loadByNameAndParentId(folder.getName(), parentId),\n-                messageHelper.getMessage(MessageConstants.ERROR_FOLDER_NAME_EXISTS,\n-                        folder.getName(), parentId));\n+        Assert.notNull(loadByNameAndParentId(folder.getName(), parentId),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2NjY5OQ==", "bodyText": "Let's add final to failOnExisting argument", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r513566699", "createdAt": "2020-10-28T16:02:41Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderManager.java", "diffHunk": "@@ -145,7 +145,12 @@ public Folder delete(Long id) {\n \n     @Transactional(propagation = Propagation.REQUIRED)\n     public Folder createFromTemplate(final Folder folder, final String templateName) {\n-        return folderTemplateManager.create(folder, templateName);\n+        return createFromTemplate(folder, templateName, true);\n+    }\n+\n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public Folder createFromTemplate(final Folder folder, final String templateName, boolean failOnExisting) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU4Mjg0NQ==", "bodyText": "Shouldn't storages always be present?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r513582845", "createdAt": "2020-10-28T16:23:20Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -75,12 +80,41 @@\n     private MessageHelper messageHelper;\n     @Autowired\n     private MetadataPostProcessorService metadataPostProcessorService;\n+    @Autowired\n+    private AbstractDataStorageMapper dataStorageMapper;\n \n     @Value(\"${templates.folder.directory}\")\n     private String folderTemplatesDirectoryPath;\n \n     @Transactional(propagation = Propagation.REQUIRED)\n-    public Folder create(final Folder folder, final String templateName) {\n+    public Folder create(final Folder folder, final String templateName, final boolean failOnExisting) {\n+        final FolderTemplate folderTemplate = prepareFolderTemplate(folder, templateName, failOnExisting);\n+        try {\n+            final Folder existingFolder =\n+                ListUtils.emptyIfNull(crudManager.load(folder.getParentId()).getChildFolders()).stream()\n+                    .filter(f -> f.getName().equals(folderTemplate.getName()))\n+                    .findAny()\n+                    .orElseThrow(IllegalArgumentException::new);\n+            final DataStorageWithMetadataVO storageToCreate = folderTemplate.getDatastorages().get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU4NjkwNQ==", "bodyText": "Could we avoid exception-driven development here?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r513586905", "createdAt": "2020-10-28T16:28:29Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -75,12 +80,41 @@\n     private MessageHelper messageHelper;\n     @Autowired\n     private MetadataPostProcessorService metadataPostProcessorService;\n+    @Autowired\n+    private AbstractDataStorageMapper dataStorageMapper;\n \n     @Value(\"${templates.folder.directory}\")\n     private String folderTemplatesDirectoryPath;\n \n     @Transactional(propagation = Propagation.REQUIRED)\n-    public Folder create(final Folder folder, final String templateName) {\n+    public Folder create(final Folder folder, final String templateName, final boolean failOnExisting) {\n+        final FolderTemplate folderTemplate = prepareFolderTemplate(folder, templateName, failOnExisting);\n+        try {\n+            final Folder existingFolder =\n+                ListUtils.emptyIfNull(crudManager.load(folder.getParentId()).getChildFolders()).stream()\n+                    .filter(f -> f.getName().equals(folderTemplate.getName()))\n+                    .findAny()\n+                    .orElseThrow(IllegalArgumentException::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU5NDg2OQ==", "bodyText": "Let's consider the following situation:\n\nuser has successfully created default folder and received storage ID\nduring update operation an error has occurred\n\nIs it expected transaction behavior?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r513594869", "createdAt": "2020-10-28T16:39:20Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,10 +104,32 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        final boolean shouldCreateDefaultHome =\n+            preferenceManager.getPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_ENABLED);\n+        final Long storageId = Optional.ofNullable(defaultStorageId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "667522e072ea56d782be34c03f297d8f0341d545", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/667522e072ea56d782be34c03f297d8f0341d545", "committedDate": "2020-11-06T08:16:02Z", "message": "Issue #907 Code refactoring to avoid excess exception usage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea2477742eacbc9137b9933f0d6b375796feb423", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/ea2477742eacbc9137b9933f0d6b375796feb423", "committedDate": "2020-11-19T10:35:57Z", "message": "Issue #907 Check, if folder template contains data storage, when trying to create it in existing folder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f81e163628a8dd63019872b5a55cf474bef886fa", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/f81e163628a8dd63019872b5a55cf474bef886fa", "committedDate": "2020-11-19T17:12:48Z", "message": "Issue #907 Extract `updateContext` function to process folders, that exists already, correctly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9cad976691070504440fca340427cd06b49d795a", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/9cad976691070504440fca340427cd06b49d795a", "committedDate": "2020-11-23T08:31:04Z", "message": "Issue #907 Modify user creation: restore transactional creation of a user, wrap default storage creation in a try-catch block."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0042b2345d899da07312d6e4142109e1972b341c", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/0042b2345d899da07312d6e4142109e1972b341c", "committedDate": "2020-11-23T08:58:05Z", "message": "Issue #907 Rename the property, that specifies default user storage template, allow configuring via env var"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "805ea7af40f7fd0b523e4957e65e4e5275600aaf", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/805ea7af40f7fd0b523e4957e65e4e5275600aaf", "committedDate": "2020-11-23T09:23:39Z", "message": "Issue #907 Fix `createUserDefaultFolder` method invocation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf1bbf23c324bf3786ffe44566f7621154daf820", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/cf1bbf23c324bf3786ffe44566f7621154daf820", "committedDate": "2020-11-23T08:50:37Z", "message": "Issue #907 Rename the property, that specifies default user storage template, allow configuring via env var"}, "afterCommit": {"oid": "805ea7af40f7fd0b523e4957e65e4e5275600aaf", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/805ea7af40f7fd0b523e4957e65e4e5275600aaf", "committedDate": "2020-11-23T09:23:39Z", "message": "Issue #907 Fix `createUserDefaultFolder` method invocation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7ebce098f27de6e4792afdb45616b812f7ecb57", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/f7ebce098f27de6e4792afdb45616b812f7ecb57", "committedDate": "2020-11-23T10:39:40Z", "message": "Issue #907 Update expected values in export tests in `UserManagerTest` because only one user is created"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/6e2b18024cba9278ccd57cc043c79e6af7af2ab2", "committedDate": "2020-11-24T11:41:15Z", "message": "Issue #907 Tests extension: fail on the default folder initialization after successful user creation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5ODE2MzU5", "url": "https://github.com/epam/cloud-pipeline/pull/997#pullrequestreview-539816359", "createdAt": "2020-11-27T09:14:24Z", "commit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwOToxNDoyNFrOH62ekw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMToyMjozOFrOH66zIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ3MjAxOQ==", "bodyText": "This test fails. Could you check this?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r531472019", "createdAt": "2020-11-27T09:14:24Z", "author": {"login": "ekazachkova"}, "path": "api/src/test/java/com/epam/pipeline/manager/user/UserManagerTest.java", "diffHunk": "@@ -112,7 +145,7 @@ public void exportUsers() {\n         attr.setIncludeUserName(true);\n \n         String[] exported = new String(userManager.exportUsers(attr)).split(\"\\n\");\n-        Assert.assertEquals(2, exported.length);\n+        Assert.assertEquals(1, exported.length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ4NDIwOQ==", "bodyText": "Maybe we should find a better way to determine folder existence?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r531484209", "createdAt": "2020-11-27T09:36:20Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -75,12 +81,27 @@\n     private MessageHelper messageHelper;\n     @Autowired\n     private MetadataPostProcessorService metadataPostProcessorService;\n+    @Autowired\n+    private AbstractDataStorageMapper dataStorageMapper;\n \n     @Value(\"${templates.folder.directory}\")\n     private String folderTemplatesDirectoryPath;\n \n     @Transactional(propagation = Propagation.REQUIRED)\n-    public Folder create(final Folder folder, final String templateName) {\n+    public Folder create(final Folder folder, final String templateName, final boolean failOnExisting) {\n+        final FolderTemplate folderTemplate = prepareFolderTemplate(folder, templateName, failOnExisting);\n+        try {\n+            return ListUtils.emptyIfNull(crudManager.load(folder.getParentId()).getChildFolders()).stream()\n+                .filter(f -> f.getName().equals(folderTemplate.getName()))\n+                .findAny()\n+                .map(existingFolder -> createStorageFromTemplateInExistingFolder(existingFolder, folderTemplate))\n+                .orElseGet(() -> fillInNewFolderFromTemplate(folder, folderTemplate));\n+        } catch (IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ4NTI4MQ==", "bodyText": "It is not clear for me why do we need such logic?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r531485281", "createdAt": "2020-11-27T09:38:19Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -133,7 +157,46 @@ void createFolderFromTemplate(Folder folder, FolderTemplate template) {\n         }\n     }\n \n-    private void prepareTemplateStorages(FolderTemplate template, String prefix) {\n+    private Folder createStorageFromTemplateInExistingFolder(final Folder existingFolder,\n+                                                             final FolderTemplate folderTemplate) {\n+        if (CollectionUtils.isNotEmpty(folderTemplate.getDatastorages())) {\n+            final Set<String> existingStoragePaths = ListUtils.emptyIfNull(existingFolder.getStorages()).stream()\n+                .map(AbstractDataStorage::getPath)\n+                .collect(Collectors.toSet());\n+            final List<AbstractDataStorage> storageToAssign = folderTemplate.getDatastorages().stream()\n+                .filter(storageToCreate -> !existingStoragePaths.contains(storageToCreate.getPath()))\n+                .peek(storageToCreate -> storageToCreate.setParentFolderId(existingFolder.getId()))\n+                .map(storageToCreate -> dataStorageManager.create(storageToCreate, true, true, true).getEntity())\n+                .collect(Collectors.toList());\n+            if (CollectionUtils.isNotEmpty(storageToAssign)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ4NTU4NA==", "bodyText": "Maybe we should find a better way to check storage existence? (a new method, failOnExisting)", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r531485584", "createdAt": "2020-11-27T09:38:53Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -133,7 +157,46 @@ void createFolderFromTemplate(Folder folder, FolderTemplate template) {\n         }\n     }\n \n-    private void prepareTemplateStorages(FolderTemplate template, String prefix) {\n+    private Folder createStorageFromTemplateInExistingFolder(final Folder existingFolder,\n+                                                             final FolderTemplate folderTemplate) {\n+        if (CollectionUtils.isNotEmpty(folderTemplate.getDatastorages())) {\n+            final Set<String> existingStoragePaths = ListUtils.emptyIfNull(existingFolder.getStorages()).stream()\n+                .map(AbstractDataStorage::getPath)\n+                .collect(Collectors.toSet());\n+            final List<AbstractDataStorage> storageToAssign = folderTemplate.getDatastorages().stream()\n+                .filter(storageToCreate -> !existingStoragePaths.contains(storageToCreate.getPath()))\n+                .peek(storageToCreate -> storageToCreate.setParentFolderId(existingFolder.getId()))\n+                .map(storageToCreate -> dataStorageManager.create(storageToCreate, true, true, true).getEntity())\n+                .collect(Collectors.toList());\n+            if (CollectionUtils.isNotEmpty(storageToAssign)) {\n+                existingFolder.setStorages(storageToAssign);\n+                return crudManager.updateContent(existingFolder);\n+            }\n+        }\n+        return existingFolder;\n+    }\n+\n+    private Folder fillInNewFolderFromTemplate(final Folder folder, final FolderTemplate folderTemplate) {\n+        createFolderFromTemplate(folder, folderTemplate);\n+        return folder;\n+    }\n+\n+    private AbstractDataStorage getStorageFromVo(final DataStorageWithMetadataVO storageVO) {\n+        AbstractDataStorage storageToAdd;\n+        try {\n+            storageToAdd = dataStorageManager.loadByNameOrId(storageVO.getName());\n+            storageToAdd.setParentFolderId(storageVO.getParentFolderId());\n+            dataStorageManager.update(dataStorageMapper.toDataStorageVO(storageToAdd));\n+        } catch (IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2"}, "originalPosition": 148}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ5ODYwMQ==", "bodyText": "Quotas are not  necessary here", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r531498601", "createdAt": "2020-11-27T10:01:32Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/resources/messages.properties", "diffHunk": "@@ -300,6 +300,9 @@ info.update.user.roles=Update user roles. User id: {0} roles id: {1}\n info.update.user.datastorage=Update user datastorage. User id: {0} datastorage id: {1}\n info.update.user.block.status=Update user blocking status. User id={0}. Blocking status={1}\n info.update.user.saml.info=Update user SAML info. User: name={0} id={1}\n+user.storage.home.auto.fails=\"User {0} created successfully, but default folder creation failed: {1}!\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU0MjgxNw==", "bodyText": "This assertion should be case-insensitive", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r531542817", "createdAt": "2020-11-27T11:22:38Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -133,7 +157,46 @@ void createFolderFromTemplate(Folder folder, FolderTemplate template) {\n         }\n     }\n \n-    private void prepareTemplateStorages(FolderTemplate template, String prefix) {\n+    private Folder createStorageFromTemplateInExistingFolder(final Folder existingFolder,\n+                                                             final FolderTemplate folderTemplate) {\n+        if (CollectionUtils.isNotEmpty(folderTemplate.getDatastorages())) {\n+            final Set<String> existingStoragePaths = ListUtils.emptyIfNull(existingFolder.getStorages()).stream()\n+                .map(AbstractDataStorage::getPath)\n+                .collect(Collectors.toSet());\n+            final List<AbstractDataStorage> storageToAssign = folderTemplate.getDatastorages().stream()\n+                .filter(storageToCreate -> !existingStoragePaths.contains(storageToCreate.getPath()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2"}, "originalPosition": 125}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91f6cbc17a8b4b72a0db4c8c72ef9dbae2a3d366", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/91f6cbc17a8b4b72a0db4c8c72ef9dbae2a3d366", "committedDate": "2020-11-27T16:38:06Z", "message": "Issue #907 Create only storage instead of folder for a user, revert test changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c554f5838c958da6b6ddaf7f486e0aff42986957", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/c554f5838c958da6b6ddaf7f486e0aff42986957", "committedDate": "2020-11-27T16:22:26Z", "message": "Issue #907 Create only storage instead of folder for a user, revert test changes"}, "afterCommit": {"oid": "91f6cbc17a8b4b72a0db4c8c72ef9dbae2a3d366", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/91f6cbc17a8b4b72a0db4c8c72ef9dbae2a3d366", "committedDate": "2020-11-27T16:38:06Z", "message": "Issue #907 Create only storage instead of folder for a user, revert test changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3f5a5b832d683b2aa94f30c68569e7149fd1724", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/e3f5a5b832d683b2aa94f30c68569e7149fd1724", "committedDate": "2020-11-30T08:20:12Z", "message": "Issue #907 Explicitly set path and storage type during default storage creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca1786ba8ff84ada42b22b9788d6a2f97dbef477", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/ca1786ba8ff84ada42b22b9788d6a2f97dbef477", "committedDate": "2020-11-30T08:28:26Z", "message": "Issue #907 Extend UserManagerTest with default storage creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba3a1d4ed9c5fbd5d0871782f7bdc6d2c455664c", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/ba3a1d4ed9c5fbd5d0871782f7bdc6d2c455664c", "committedDate": "2020-11-30T09:06:52Z", "message": "Issue #907 Add basic tests on default user storage creation into DataStorageManagerTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8fad9e7b546f2f12d3bc9d3ea59d25de692726b", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/c8fad9e7b546f2f12d3bc9d3ea59d25de692726b", "committedDate": "2020-11-30T09:17:39Z", "message": "Issue #907 Revert unnecessary changes in UserDao"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af674e21a034c1188227e9e97680d6d1958f301b", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/af674e21a034c1188227e9e97680d6d1958f301b", "committedDate": "2020-11-30T10:02:53Z", "message": "Issue #907 Extract common for templates metadata- and permissions-related methods into corresponding managers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed34a0d545ce018ee2b9b858934f4c5d55b9f51c", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/ed34a0d545ce018ee2b9b858934f4c5d55b9f51c", "committedDate": "2020-11-30T09:56:37Z", "message": "Issue #907 Extract common for templates metadata- and permissions-related methods into corresponding managers"}, "afterCommit": {"oid": "af674e21a034c1188227e9e97680d6d1958f301b", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/af674e21a034c1188227e9e97680d6d1958f301b", "committedDate": "2020-11-30T10:02:53Z", "message": "Issue #907 Extract common for templates metadata- and permissions-related methods into corresponding managers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee4e493eaa7ef9b7e16065b0561565722b1a31ec", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/ee4e493eaa7ef9b7e16065b0561565722b1a31ec", "committedDate": "2020-11-30T11:57:41Z", "message": "Issue #907 Skip default users storage creation if the corresponding one exists already; log errors instead of throwing an exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/48f290a1034dd57720d55c022286e251dc83d0f1", "committedDate": "2020-11-30T12:21:56Z", "message": "Issue #907 Remove excess Lombok annotations from DataStorageTemplate"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwODk3MDU5", "url": "https://github.com/epam/cloud-pipeline/pull/997#pullrequestreview-540897059", "createdAt": "2020-11-30T13:16:30Z", "commit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzoxNjozMFrOH76nlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzozNDozNVrOH77T5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU4ODQzNw==", "bodyText": "Could you rename preference to storage.user.home.template and make it an 'ObjectPreference' to enable json validation on the GUI?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532588437", "createdAt": "2020-11-30T13:16:30Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/preference/SystemPreferences.java", "diffHunk": "@@ -130,6 +130,21 @@\n         \"storage.temp.credentials.duration\", 3600, DATA_STORAGE_GROUP, isGreaterThan(0));\n     public static final IntPreference STORAGE_MOUNTS_PER_GB_RATIO = new IntPreference(\n             \"storage.mounts.per.gb.ratio\", null, DATA_STORAGE_GROUP, isNullOrGreaterThan(0));\n+    public static final BooleanPreference DEFAULT_USER_DATA_STORAGE_ENABLED =\n+        new BooleanPreference(\"storage.user.home.auto\", false, DATA_STORAGE_GROUP, pass);\n+    public static final StringPreference DEFAULT_USER_DATA_STORAGE_TEMPLATE =\n+        new StringPreference(\"user.default.storage.template\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5MDkyOA==", "bodyText": "To enable json validation on the GUI, we need to change this preference to ObjectPreference type. So handling of preference in code will change - we need to get it string value ta first and then proceed with replacement, etc. Do not forget to handle null value.", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532590928", "createdAt": "2020-11-30T13:20:38Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "diffHunk": "@@ -343,6 +353,40 @@ public AbstractDataStorage updatePolicy(DataStorageVO dataStorageVO) {\n         return createdStorage;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public AbstractDataStorage createDefaultStorageForUser(final String userName) {\n+        final String dataStorageTemplateJson =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5MTMwMA==", "bodyText": "Can we return Optional from this method, as it returns null in some cases?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532591300", "createdAt": "2020-11-30T13:21:14Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "diffHunk": "@@ -343,6 +353,40 @@ public AbstractDataStorage updatePolicy(DataStorageVO dataStorageVO) {\n         return createdStorage;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public AbstractDataStorage createDefaultStorageForUser(final String userName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5MzU1MQ==", "bodyText": "Validating here is useless since defaultStorageId is handled only in createUserDefaultStorage  method", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532593551", "createdAt": "2020-11-30T13:24:56Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -400,6 +428,41 @@ public boolean needToUpdateUser(List<String> groups, Map<String, String> attribu\n         return new UserExporter().exportUsers(attr, users, sensitiveKeys).getBytes(Charset.defaultCharset());\n     }\n \n+    private PipelineUser createUser(final String name, final List<Long> roles, final List<String> groups,\n+                                    final Map<String, String> attributes) {\n+        Assert.isTrue(StringUtils.isNotBlank(name),\n+                      messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n+        String userName = name.trim().toUpperCase();\n+        PipelineUser loadedUser = userDao.loadUserByName(userName);\n+        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n+        PipelineUser user = new PipelineUser(userName);\n+        List<Long> userRoles = getNewUserRoles(roles);\n+        user.setRoles(roleDao.loadRolesList(userRoles));\n+        user.setGroups(groups);\n+        user.setAttributes(attributes);\n+        storageValidator.validate(user);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5NTQxNw==", "bodyText": "Should we update dataStorageDetails here not dataStorageTemplate?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532595417", "createdAt": "2020-11-30T13:27:51Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "diffHunk": "@@ -343,6 +353,40 @@ public AbstractDataStorage updatePolicy(DataStorageVO dataStorageVO) {\n         return createdStorage;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public AbstractDataStorage createDefaultStorageForUser(final String userName) {\n+        final String dataStorageTemplateJson =\n+            preferenceManager.getPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_TEMPLATE);\n+        final DataStorageTemplate dataStorageTemplate = JsonMapper.parseData(\n+            dataStorageTemplateJson.replaceAll(FolderTemplateManager.TEMPLATE_REPLACE_MARK, userName),\n+            new TypeReference<DataStorageTemplate>() {});\n+        final DataStorageVO dataStorageDetails = dataStorageTemplate.getDatastorage();\n+        if (dataStorageDetails.getPath() == null) {\n+            dataStorageDetails.setPath(adjustStoragePath(dataStorageDetails.getName(), null));\n+        }\n+        final AbstractDataStorage correspondingExistingStorage =\n+            dataStorageDao.loadDataStorageByNameOrPath(dataStorageDetails.getName(), dataStorageDetails.getPath());\n+        if (correspondingExistingStorage != null) {\n+            log.warn(messageHelper.getMessage(MessageConstants.DEFAULT_STORAGE_CREATION_CORRESPONDING_EXISTS,\n+                                              dataStorageDetails.getPath(),\n+                                              userName,\n+                                              correspondingExistingStorage.getId()));\n+            return null;\n+        }\n+        if (!folderManager.exists(dataStorageDetails.getParentFolderId())) {\n+            dataStorageTemplate.getDatastorage().setParentFolderId(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5NjQzNQ==", "bodyText": "Could you rename this method to initUserDefaultStorage to make more clear?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532596435", "createdAt": "2020-11-30T13:29:26Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,26 +102,48 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Autowired\n+    private DataStorageManager dataStorageManager;\n+\n+    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     @Transactional(propagation = Propagation.REQUIRED)\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n-        Assert.isTrue(StringUtils.isNotBlank(name),\n-                messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n-        String userName = name.trim().toUpperCase();\n-        PipelineUser loadedUser = userDao.loadUserByName(userName);\n-        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n-        PipelineUser user = new PipelineUser(userName);\n-        List<Long> userRoles = getNewUserRoles(roles);\n-        user.setRoles(roleDao.loadRolesList(userRoles));\n-        user.setGroups(groups);\n-        user.setAttributes(attributes);\n-        user.setDefaultStorageId(defaultStorageId);\n-        storageValidator.validate(user);\n-        log.info(messageHelper.getMessage(MessageConstants.INFO_CREATE_USER, userName));\n-        return userDao.createUser(user, userRoles);\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        try {\n+            return createUserDefaultStorage(defaultStorageId, newUser);\n+        } catch (RuntimeException e) {\n+            log.warn(messageHelper.getMessage(MessageConstants.ERROR_DEFAULT_STORAGE_CREATION, name, e.getMessage()));\n+        }\n+        return newUser;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public PipelineUser createUserDefaultStorage(final Long defaultStorageId, final PipelineUser newUser) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5OTc4MQ==", "bodyText": "Move storage validation here", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532599781", "createdAt": "2020-11-30T13:34:35Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,26 +102,48 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Autowired\n+    private DataStorageManager dataStorageManager;\n+\n+    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     @Transactional(propagation = Propagation.REQUIRED)\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n-        Assert.isTrue(StringUtils.isNotBlank(name),\n-                messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n-        String userName = name.trim().toUpperCase();\n-        PipelineUser loadedUser = userDao.loadUserByName(userName);\n-        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n-        PipelineUser user = new PipelineUser(userName);\n-        List<Long> userRoles = getNewUserRoles(roles);\n-        user.setRoles(roleDao.loadRolesList(userRoles));\n-        user.setGroups(groups);\n-        user.setAttributes(attributes);\n-        user.setDefaultStorageId(defaultStorageId);\n-        storageValidator.validate(user);\n-        log.info(messageHelper.getMessage(MessageConstants.INFO_CREATE_USER, userName));\n-        return userDao.createUser(user, userRoles);\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        try {\n+            return createUserDefaultStorage(defaultStorageId, newUser);\n+        } catch (RuntimeException e) {\n+            log.warn(messageHelper.getMessage(MessageConstants.ERROR_DEFAULT_STORAGE_CREATION, name, e.getMessage()));\n+        }\n+        return newUser;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public PipelineUser createUserDefaultStorage(final Long defaultStorageId, final PipelineUser newUser) {\n+        final boolean shouldCreateDefaultHome =\n+            preferenceManager.getPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_ENABLED);\n+        final Long storageId = Optional.ofNullable(defaultStorageId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d409b703830d778445f1d08df6983e600bcb22e1", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/d409b703830d778445f1d08df6983e600bcb22e1", "committedDate": "2020-11-30T16:00:33Z", "message": "Issue #907 PR review refactoring: change preference type to enable JSON validation, change default storage creation validation, use Optional"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MDIzNTMz", "url": "https://github.com/epam/cloud-pipeline/pull/997#pullrequestreview-544023533", "createdAt": "2020-12-03T14:43:24Z", "commit": {"oid": "d409b703830d778445f1d08df6983e600bcb22e1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0MzoyNVrOH-fa_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0OTo1MFrOH-f4Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI4ODU3Mg==", "bodyText": "This parsing doesn't work: parsing of object preference to string throws error. In order to get plain sting value you can use preferenceManager.getSystemPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_TEMPLATE).getValue().\nPlease, check that tests are working properly for this case.", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r535288572", "createdAt": "2020-12-03T14:43:25Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "diffHunk": "@@ -343,6 +359,47 @@ public AbstractDataStorage updatePolicy(DataStorageVO dataStorageVO) {\n         return createdStorage;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public Optional<AbstractDataStorage> createDefaultStorageForUser(final String userName) {\n+        final DataStorageTemplate dataStorageTemplate =\n+            Optional.ofNullable(preferenceManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d409b703830d778445f1d08df6983e600bcb22e1"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5MjU0OA==", "bodyText": "This won't work as expected: if client specifies defaultStorageId and it doesn't exist a new storage will be create, I would expect that if invalid defaultStorageId is specified we will throw an error, as it worked previously.", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r535292548", "createdAt": "2020-12-03T14:46:47Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,26 +102,44 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Autowired\n+    private DataStorageManager dataStorageManager;\n+\n+    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     @Transactional(propagation = Propagation.REQUIRED)\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n-        Assert.isTrue(StringUtils.isNotBlank(name),\n-                messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n-        String userName = name.trim().toUpperCase();\n-        PipelineUser loadedUser = userDao.loadUserByName(userName);\n-        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n-        PipelineUser user = new PipelineUser(userName);\n-        List<Long> userRoles = getNewUserRoles(roles);\n-        user.setRoles(roleDao.loadRolesList(userRoles));\n-        user.setGroups(groups);\n-        user.setAttributes(attributes);\n-        user.setDefaultStorageId(defaultStorageId);\n-        storageValidator.validate(user);\n-        log.info(messageHelper.getMessage(MessageConstants.INFO_CREATE_USER, userName));\n-        return userDao.createUser(user, userRoles);\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        try {\n+            return initUserDefaultStorage(defaultStorageId, newUser);\n+        } catch (RuntimeException e) {\n+            log.warn(messageHelper.getMessage(MessageConstants.ERROR_DEFAULT_STORAGE_CREATION, name, e.getMessage()));\n+        }\n+        return newUser;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public PipelineUser initUserDefaultStorage(final Long defaultStorageId, final PipelineUser newUser) {\n+        final boolean shouldCreateDefaultHome =\n+            preferenceManager.getPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_ENABLED);\n+        final Long storageId = Optional.ofNullable(defaultStorageId)\n+            .filter(dataStorageManager::exists)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d409b703830d778445f1d08df6983e600bcb22e1"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5MzE3NQ==", "bodyText": "Please use orElseGet to prevent non needed calls", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r535293175", "createdAt": "2020-12-03T14:47:18Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,26 +102,44 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Autowired\n+    private DataStorageManager dataStorageManager;\n+\n+    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     @Transactional(propagation = Propagation.REQUIRED)\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n-        Assert.isTrue(StringUtils.isNotBlank(name),\n-                messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n-        String userName = name.trim().toUpperCase();\n-        PipelineUser loadedUser = userDao.loadUserByName(userName);\n-        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n-        PipelineUser user = new PipelineUser(userName);\n-        List<Long> userRoles = getNewUserRoles(roles);\n-        user.setRoles(roleDao.loadRolesList(userRoles));\n-        user.setGroups(groups);\n-        user.setAttributes(attributes);\n-        user.setDefaultStorageId(defaultStorageId);\n-        storageValidator.validate(user);\n-        log.info(messageHelper.getMessage(MessageConstants.INFO_CREATE_USER, userName));\n-        return userDao.createUser(user, userRoles);\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        try {\n+            return initUserDefaultStorage(defaultStorageId, newUser);\n+        } catch (RuntimeException e) {\n+            log.warn(messageHelper.getMessage(MessageConstants.ERROR_DEFAULT_STORAGE_CREATION, name, e.getMessage()));\n+        }\n+        return newUser;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public PipelineUser initUserDefaultStorage(final Long defaultStorageId, final PipelineUser newUser) {\n+        final boolean shouldCreateDefaultHome =\n+            preferenceManager.getPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_ENABLED);\n+        final Long storageId = Optional.ofNullable(defaultStorageId)\n+            .filter(dataStorageManager::exists)\n+            .orElse(shouldCreateDefaultHome", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d409b703830d778445f1d08df6983e600bcb22e1"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5NjAwNw==", "bodyText": "Despite this catch clause user won't be created if an error is thrown in the underlaying calls. E.g. if an error was thrown in datastorageManager.createDefaultStorageForUser this method failed with:\norg.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Transaction marked as rollbackOnly\n\tat org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:526) ~[spring-orm-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:761) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:730) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:504) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:292) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat com.epam.pipeline.manager.user.UserManager$$EnhancerBySpringCGLIB$$1448a1d4.createUser(<generated>) ~[main/:?]\n\tat com.epam.pipeline.manager.user.UserApiService.createUser(UserApiService.java:50) ~[main/:?]", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r535296007", "createdAt": "2020-12-03T14:49:50Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,26 +102,44 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Autowired\n+    private DataStorageManager dataStorageManager;\n+\n+    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     @Transactional(propagation = Propagation.REQUIRED)\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n-        Assert.isTrue(StringUtils.isNotBlank(name),\n-                messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n-        String userName = name.trim().toUpperCase();\n-        PipelineUser loadedUser = userDao.loadUserByName(userName);\n-        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n-        PipelineUser user = new PipelineUser(userName);\n-        List<Long> userRoles = getNewUserRoles(roles);\n-        user.setRoles(roleDao.loadRolesList(userRoles));\n-        user.setGroups(groups);\n-        user.setAttributes(attributes);\n-        user.setDefaultStorageId(defaultStorageId);\n-        storageValidator.validate(user);\n-        log.info(messageHelper.getMessage(MessageConstants.INFO_CREATE_USER, userName));\n-        return userDao.createUser(user, userRoles);\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        try {\n+            return initUserDefaultStorage(defaultStorageId, newUser);\n+        } catch (RuntimeException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d409b703830d778445f1d08df6983e600bcb22e1"}, "originalPosition": 73}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a790b223c2acb6c8c6506b6d658e332d2e72abe4", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/a790b223c2acb6c8c6506b6d658e332d2e72abe4", "committedDate": "2020-12-03T16:43:37Z", "message": "Issue #907 Change invalid defaultStorageId values processing (check whether it belongs to an existing entity using `load` method, so corresponding error will be thrown and no default storage created)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50d57bc4ca78ba5050df2a71c2f0e323d9813ff9", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/50d57bc4ca78ba5050df2a71c2f0e323d9813ff9", "committedDate": "2020-12-03T17:00:09Z", "message": "Issue #907 Change processing of the preference, containing default user's storage template value, in order to convert it to string correctly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36f8ae2ae84292f4cc87244005ac75a6c6630e17", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/36f8ae2ae84292f4cc87244005ac75a6c6630e17", "committedDate": "2020-12-04T09:45:15Z", "message": "Issue #907 Change transactional behavior for user default folder creation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "633aab96d61761690a23364457473f4ae0160489", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/633aab96d61761690a23364457473f4ae0160489", "committedDate": "2020-12-04T10:15:03Z", "message": "Issue #907 Mock `dataStorageManager` for certain tests: call some underlying methods directly to perform storage creation without involving method with REQUIRES_NEW behavior"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0ODUzMzUy", "url": "https://github.com/epam/cloud-pipeline/pull/997#pullrequestreview-544853352", "createdAt": "2020-12-04T10:53:09Z", "commit": {"oid": "633aab96d61761690a23364457473f4ae0160489"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3815, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}