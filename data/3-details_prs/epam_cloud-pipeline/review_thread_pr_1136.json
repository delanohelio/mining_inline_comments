{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNjQ1NTQ5", "number": 1136, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxODoyMlrOD_seIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoyMzoxMVrOD_snCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTE1NDkwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxODoyMlrOGageAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxODoyMlrOGageAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0ODEzMQ==", "bodyText": "It would be helpful to add a method to load  a list of storages by id, to reduce number of db requests.", "url": "https://github.com/epam/cloud-pipeline/pull/1136#discussion_r430448131", "createdAt": "2020-05-26T14:18:22Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java", "diffHunk": "@@ -825,6 +827,17 @@ public PipelineRun createPipelineRun(String version, PipelineConfiguration confi\n         return run;\n     }\n \n+    private boolean checkRunForSensitivity(Map<String, PipeConfValueVO> parameters) {\n+        return parameters.entrySet().stream()\n+                .filter(v->v.getKey().equals(CP_CAP_LIMIT_MOUNTS))\n+                .map(Map.Entry::getValue)\n+                .flatMap(pipeConfValueVO -> Arrays.stream(\n+                        StringUtils.commaDelimitedListToStringArray(pipeConfValueVO.getValue()))\n+                )\n+                .map(Long::valueOf)\n+                .anyMatch(id -> dataStorageManager.load(id).isSensitive());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73e42f7cfd1790ae4a4dbd7e68005fd88ce6f0a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTE1NjMzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxODozOFrOGage0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxODozOFrOGage0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0ODMzOA==", "bodyText": "Missing final", "url": "https://github.com/epam/cloud-pipeline/pull/1136#discussion_r430448338", "createdAt": "2020-05-26T14:18:38Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java", "diffHunk": "@@ -825,6 +827,17 @@ public PipelineRun createPipelineRun(String version, PipelineConfiguration confi\n         return run;\n     }\n \n+    private boolean checkRunForSensitivity(Map<String, PipeConfValueVO> parameters) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73e42f7cfd1790ae4a4dbd7e68005fd88ce6f0a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTE1ODUzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxOTowNFrOGaggJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxOTowNFrOGaggJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0ODY3OA==", "bodyText": "Wrap into MapUtils.emptyIfNull", "url": "https://github.com/epam/cloud-pipeline/pull/1136#discussion_r430448678", "createdAt": "2020-05-26T14:19:04Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/PipelineRunManager.java", "diffHunk": "@@ -825,6 +827,17 @@ public PipelineRun createPipelineRun(String version, PipelineConfiguration confi\n         return run;\n     }\n \n+    private boolean checkRunForSensitivity(Map<String, PipeConfValueVO> parameters) {\n+        return parameters.entrySet().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73e42f7cfd1790ae4a4dbd7e68005fd88ce6f0a"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTE2ODYzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/utils/UtilsManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoyMToxNFrOGagmfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoyMToxNFrOGagmfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ1MDMwMg==", "bodyText": "Missing final", "url": "https://github.com/epam/cloud-pipeline/pull/1136#discussion_r430450302", "createdAt": "2020-05-26T14:21:14Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/utils/UtilsManager.java", "diffHunk": "@@ -49,13 +54,17 @@ public String buildSshUrl(Long runId) {\n     }\n \n     public String buildFSBrowserUrl(Long runId) {\n-        if (isFSBrowserEnabled()) {\n+        if (isFSBrowserEnabled() && runIsNotSensitive(runId)) {\n             return buildUrl(FSBROWSER_URL_TEMPLATE, runId);\n         } else {\n             throw new IllegalArgumentException(\"Storage fsbrowser is not enabled.\");\n         }\n     }\n \n+    private boolean runIsNotSensitive(Long runId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73e42f7cfd1790ae4a4dbd7e68005fd88ce6f0a"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTE3NzcwOnYy", "diffSide": "RIGHT", "path": "workflows/pipe-common/scripts/mount_storage.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoyMzoxMVrOGagsOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoyMzoxMVrOGagsOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ1MTc2OA==", "bodyText": "We also need to filter out sensitive storages for non-sensitive runs", "url": "https://github.com/epam/cloud-pipeline/pull/1136#discussion_r430451768", "createdAt": "2020-05-26T14:23:11Z", "author": {"login": "mzueva"}, "path": "workflows/pipe-common/scripts/mount_storage.py", "diffHunk": "@@ -61,6 +61,11 @@ def is_storage_writable(cls, storage):\n     def is_permission_set(cls, storage, mask):\n         return storage.mask & mask == mask\n \n+    @classmethod\n+    def is_run_sensitive(cls):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c73e42f7cfd1790ae4a4dbd7e68005fd88ce6f0a"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 453, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}