{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NjEyNjI3", "number": 1587, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDoxNTowNFrOE8oxaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDo0Nzo1MFrOE8qNXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDE4MDI1OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/com/epam/pipeline/acl/dts/DtsOperationsApiServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDoxNTowNFrOH44LYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDoxNTowNFrOH44LYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQwMjcyMw==", "bodyText": "Let's omit the brackets.", "url": "https://github.com/epam/cloud-pipeline/pull/1587#discussion_r529402723", "createdAt": "2020-11-24T10:15:04Z", "author": {"login": "tcibinan"}, "path": "api/src/test/java/com/epam/pipeline/acl/dts/DtsOperationsApiServiceTest.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright 2017-2020 EPAM Systems, Inc. (https://www.epam.com/)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.epam.pipeline.acl.dts;\n+\n+import com.epam.pipeline.entity.dts.DtsClusterConfiguration;\n+import com.epam.pipeline.entity.dts.DtsDataStorageListing;\n+import com.epam.pipeline.entity.dts.DtsSubmission;\n+import com.epam.pipeline.manager.dts.DtsListingManager;\n+import com.epam.pipeline.manager.dts.DtsSubmissionManager;\n+import com.epam.pipeline.test.acl.AbstractAclTest;\n+import com.epam.pipeline.test.creator.dts.DtsCreatorUtils;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.AccessDeniedException;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import static com.epam.pipeline.test.creator.CommonCreatorConstants.ID;\n+import static com.epam.pipeline.test.creator.CommonCreatorConstants.TEST_INT;\n+import static com.epam.pipeline.test.creator.CommonCreatorConstants.TEST_STRING;\n+import static com.epam.pipeline.util.CustomAssertions.assertThrows;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.doReturn;\n+\n+public class DtsOperationsApiServiceTest extends AbstractAclTest {\n+\n+    private final DtsDataStorageListing listing = DtsCreatorUtils.getDtsDataStorageListing();\n+    private final DtsSubmission dtsSubmission = DtsCreatorUtils.getDtsSubmission();\n+    private final DtsClusterConfiguration configuration = DtsCreatorUtils.getDtsClusterConfiguration();\n+\n+    @Autowired\n+    private DtsOperationsApiService dtsOperationsApiService;\n+\n+    @Autowired\n+    private DtsListingManager mockDtsListingManager;\n+\n+    @Autowired\n+    private DtsSubmissionManager mockDtsSubmissionManager;\n+\n+    @Test\n+    @WithMockUser(roles = ADMIN_ROLE)\n+    public void shouldListDtsDataStorageForAdmin() {\n+        doReturn(listing).when(mockDtsListingManager).list(TEST_STRING, ID, TEST_INT, TEST_STRING);\n+\n+        assertThat(dtsOperationsApiService.list(TEST_STRING, ID, TEST_INT, TEST_STRING)).isEqualTo(listing);\n+    }\n+\n+    @Test\n+    @WithMockUser()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7402c0a74b5cee0bfd1d24d8637d7d6e473c04d1"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDI2NzM5OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/com/epam/pipeline/acl/dts/DtsOperationsApiServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDoyNjo0OFrOH45EVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDoyNjo0OFrOH45EVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQxNzMwMA==", "bodyText": "The role ilself is valid but it just doens't meet the acl rules. Therefore I suppose we can rename the method to shouldDenyListDtsDataStorageWithoutUserRole", "url": "https://github.com/epam/cloud-pipeline/pull/1587#discussion_r529417300", "createdAt": "2020-11-24T10:26:48Z", "author": {"login": "tcibinan"}, "path": "api/src/test/java/com/epam/pipeline/acl/dts/DtsOperationsApiServiceTest.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright 2017-2020 EPAM Systems, Inc. (https://www.epam.com/)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.epam.pipeline.acl.dts;\n+\n+import com.epam.pipeline.entity.dts.DtsClusterConfiguration;\n+import com.epam.pipeline.entity.dts.DtsDataStorageListing;\n+import com.epam.pipeline.entity.dts.DtsSubmission;\n+import com.epam.pipeline.manager.dts.DtsListingManager;\n+import com.epam.pipeline.manager.dts.DtsSubmissionManager;\n+import com.epam.pipeline.test.acl.AbstractAclTest;\n+import com.epam.pipeline.test.creator.dts.DtsCreatorUtils;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.AccessDeniedException;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import static com.epam.pipeline.test.creator.CommonCreatorConstants.ID;\n+import static com.epam.pipeline.test.creator.CommonCreatorConstants.TEST_INT;\n+import static com.epam.pipeline.test.creator.CommonCreatorConstants.TEST_STRING;\n+import static com.epam.pipeline.util.CustomAssertions.assertThrows;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.doReturn;\n+\n+public class DtsOperationsApiServiceTest extends AbstractAclTest {\n+\n+    private final DtsDataStorageListing listing = DtsCreatorUtils.getDtsDataStorageListing();\n+    private final DtsSubmission dtsSubmission = DtsCreatorUtils.getDtsSubmission();\n+    private final DtsClusterConfiguration configuration = DtsCreatorUtils.getDtsClusterConfiguration();\n+\n+    @Autowired\n+    private DtsOperationsApiService dtsOperationsApiService;\n+\n+    @Autowired\n+    private DtsListingManager mockDtsListingManager;\n+\n+    @Autowired\n+    private DtsSubmissionManager mockDtsSubmissionManager;\n+\n+    @Test\n+    @WithMockUser(roles = ADMIN_ROLE)\n+    public void shouldListDtsDataStorageForAdmin() {\n+        doReturn(listing).when(mockDtsListingManager).list(TEST_STRING, ID, TEST_INT, TEST_STRING);\n+\n+        assertThat(dtsOperationsApiService.list(TEST_STRING, ID, TEST_INT, TEST_STRING)).isEqualTo(listing);\n+    }\n+\n+    @Test\n+    @WithMockUser()\n+    public void shouldListDtsDataStorageForUser() {\n+        doReturn(listing).when(mockDtsListingManager).list(TEST_STRING, ID, TEST_INT, TEST_STRING);\n+\n+        assertThat(dtsOperationsApiService.list(TEST_STRING, ID, TEST_INT, TEST_STRING)).isEqualTo(listing);\n+    }\n+\n+    @Test\n+    @WithMockUser(roles = SIMPLE_USER)\n+    public void shouldDenyListDtsDataStorageWhenRolesAreNotValid() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7402c0a74b5cee0bfd1d24d8637d7d6e473c04d1"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDI5MzM2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/com/epam/pipeline/acl/dts/DtsOperationsApiServiceTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDozMDozNFrOH45WGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDozMDozNFrOH45WGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQyMTg1MQ==", "bodyText": "It is not directly connected with the pull request but it would be nice to refactor a bit. Could you please also replace hasRole('ADMIN') OR hasRole('ROLE_USER') with AclExpressions.ADMIN_OR_GENERAL_USER in DtsOperationsApiService similarly to DtsRegistryApiService.", "url": "https://github.com/epam/cloud-pipeline/pull/1587#discussion_r529421851", "createdAt": "2020-11-24T10:30:34Z", "author": {"login": "tcibinan"}, "path": "api/src/test/java/com/epam/pipeline/acl/dts/DtsOperationsApiServiceTest.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7402c0a74b5cee0bfd1d24d8637d7d6e473c04d1"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMDQxNTY3OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/com/epam/pipeline/app/AclTestConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDo0Nzo1MFrOH46nBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMzoyMDo0MlrOH6-LnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ0MjU2NA==", "bodyText": "Let's put all test beans to a single place which is better to be AclTestBeans.", "url": "https://github.com/epam/cloud-pipeline/pull/1587#discussion_r529442564", "createdAt": "2020-11-24T10:47:50Z", "author": {"login": "tcibinan"}, "path": "api/src/test/java/com/epam/pipeline/app/AclTestConfiguration.java", "diffHunk": "@@ -214,6 +216,12 @@\n     @MockBean\n     protected PipelineRunDockerOperationManager pipelineRunDockerOperationManager;\n \n+    @MockBean\n+    protected DtsOperationsApiService mockDtsOperationsApiService;\n+\n+    @MockBean\n+    protected DtsRegistryApiService mockDtsRegistryApiService;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7402c0a74b5cee0bfd1d24d8637d7d6e473c04d1"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU5ODIzNw==", "bodyText": "Not applicable. See #1588 (comment).", "url": "https://github.com/epam/cloud-pipeline/pull/1587#discussion_r531598237", "createdAt": "2020-11-27T13:20:42Z", "author": {"login": "tcibinan"}, "path": "api/src/test/java/com/epam/pipeline/app/AclTestConfiguration.java", "diffHunk": "@@ -214,6 +216,12 @@\n     @MockBean\n     protected PipelineRunDockerOperationManager pipelineRunDockerOperationManager;\n \n+    @MockBean\n+    protected DtsOperationsApiService mockDtsOperationsApiService;\n+\n+    @MockBean\n+    protected DtsRegistryApiService mockDtsRegistryApiService;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQ0MjU2NA=="}, "originalCommit": {"oid": "7402c0a74b5cee0bfd1d24d8637d7d6e473c04d1"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 344, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}