{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwMTUxNDMw", "number": 1222, "title": "Issue #1038: \"Serverless\" Cloud Pipeline API - fixes", "bodyText": "This PR provides updates for current implementation for issue #1038\nThe following changes were added:\n\nthe field RunConfiguration#stopAfter is numeric value now and indicates how long corresponding run will be alive after the last request (in minutes). If this value is not specified the value launch.serverless.stop.timeout from system preferences will be used\nbearer token will be added to request cookies if not specified (required for edge auth)", "createdAt": "2020-07-16T12:19:27Z", "url": "https://github.com/epam/cloud-pipeline/pull/1222", "merged": true, "mergeCommit": {"oid": "c5bd67ad456c995a482b19c16ec9c51dffd9d98a"}, "closed": true, "closedAt": "2020-07-21T20:36:20Z", "author": {"login": "ekazachkova"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1KxMTgH2gAyNDUwMTUxNDMwOjRmZDY1NmE1NDI5OTg4YTgwZTdkYmU1NzMxODJhZTJiODUzZjcxOWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3MXPpAFqTQ1MjgwOTQxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4fd656a5429988a80e7dbe573182ae2b853f719f", "author": {"user": {"login": "ekazachkova", "name": "Ekaterina Kazachkova"}}, "url": "https://github.com/epam/cloud-pipeline/commit/4fd656a5429988a80e7dbe573182ae2b853f719f", "committedDate": "2020-07-15T13:36:51Z", "message": "Issue #1038: \"Serverless\" Cloud Pipeline API - fix for stop after"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4a8d99432861b9777995cddbf62c0cc46d37f4d", "author": {"user": {"login": "ekazachkova", "name": "Ekaterina Kazachkova"}}, "url": "https://github.com/epam/cloud-pipeline/commit/f4a8d99432861b9777995cddbf62c0cc46d37f4d", "committedDate": "2020-07-16T09:11:45Z", "message": "Issue #1038: \"Serverless\" Cloud Pipeline API - transactions fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04f838acd9566114b1e2d20c3439cfd4ebe9d831", "author": {"user": {"login": "ekazachkova", "name": "Ekaterina Kazachkova"}}, "url": "https://github.com/epam/cloud-pipeline/commit/04f838acd9566114b1e2d20c3439cfd4ebe9d831", "committedDate": "2020-07-16T11:23:33Z", "message": "Issue #1038: \"Serverless\" Cloud Pipeline API - token added to cookie"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d452a7d4c9b12423df45b131816e290631ce4ab", "author": {"user": {"login": "ekazachkova", "name": "Ekaterina Kazachkova"}}, "url": "https://github.com/epam/cloud-pipeline/commit/0d452a7d4c9b12423df45b131816e290631ce4ab", "committedDate": "2020-07-16T12:19:04Z", "message": "Issue #1038: \"Serverless\" Cloud Pipeline API - refactor for serverless run"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba0cafd86038eac71f5ea92c6d6fdafb2499ccc6", "author": {"user": {"login": "ekazachkova", "name": "Ekaterina Kazachkova"}}, "url": "https://github.com/epam/cloud-pipeline/commit/ba0cafd86038eac71f5ea92c6d6fdafb2499ccc6", "committedDate": "2020-07-16T12:25:46Z", "message": "Issue #1038: \"Serverless\" Cloud Pipeline API - checkstyle fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODAwODMw", "url": "https://github.com/epam/cloud-pipeline/pull/1222#pullrequestreview-451800830", "createdAt": "2020-07-20T17:11:17Z", "commit": {"oid": "ba0cafd86038eac71f5ea92c6d6fdafb2499ccc6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzoxMToxN1rOG0Xi7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzoxNjozM1rOG0Xugw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NDkxMQ==", "bodyText": "I'd suggest to move this method to StopServerlessRunDao class", "url": "https://github.com/epam/cloud-pipeline/pull/1222#discussion_r457564911", "createdAt": "2020-07-20T17:11:17Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/dao/pipeline/PipelineRunDao.java", "diffHunk": "@@ -449,11 +450,9 @@ public void deleteRunSidsByPipelineId(final Long pipelineId) {\n                 .findFirst();\n     }\n \n-    public List<PipelineRun> loadServerlessRunsToStop(final LocalDateTime maxLastUpdate) {\n-        final MapSqlParameterSource params = new MapSqlParameterSource();\n-        params.addValue(\"MAX_LAST_UPDATE\", maxLastUpdate);\n+    public List<StopServerlessRun> loadServerlessRunsToStop() {\n         return ListUtils.emptyIfNull(getNamedParameterJdbcTemplate()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba0cafd86038eac71f5ea92c6d6fdafb2499ccc6"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NTU5Nw==", "bodyText": "For most classes we keep Mandatory propagation at DAO level, why do we need Required in this case?", "url": "https://github.com/epam/cloud-pipeline/pull/1222#discussion_r457565597", "createdAt": "2020-07-20T17:12:26Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/dao/pipeline/StopServerlessRunDao.java", "diffHunk": "@@ -38,21 +39,22 @@\n     private String updateServerlessRunQuery;\n     private String loadAllServerlessRunsQuery;\n     private String deleteByRunIdServerlessRunQuery;\n+    private String loadServerlessunByRunIdQuery;\n \n     @Transactional(propagation = Propagation.MANDATORY)\n     public Long createServerlessRunId() {\n         return daoHelper.createId(serverlessRunSequenceQuery);\n     }\n \n-    @Transactional(propagation = Propagation.MANDATORY)\n+    @Transactional(propagation = Propagation.REQUIRED)\n     public void createServerlessRun(final StopServerlessRun run) {\n         final Long id = createServerlessRunId();\n         run.setId(id);\n         getNamedParameterJdbcTemplate().update(saveServerlessRunQuery,\n                 StopServerlessRunParameters.getParameters(run));\n     }\n \n-    @Transactional(propagation = Propagation.MANDATORY)\n+    @Transactional(propagation = Propagation.REQUIRED)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba0cafd86038eac71f5ea92c6d6fdafb2499ccc6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2Nzg3NQ==", "bodyText": "We also need to handle situation when LAUNCH_SERVERLESS_STOP_TIMEOUT is null - consider run non-expired in this case", "url": "https://github.com/epam/cloud-pipeline/pull/1222#discussion_r457567875", "createdAt": "2020-07-20T17:16:33Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/cluster/performancemonitoring/ResourceMonitoringManager.java", "diffHunk": "@@ -408,11 +409,21 @@ private void setInstanceTypeMap(final Map<String, InstanceType> instanceTypeMap)\n         }\n \n         private void processServerlessRuns() {\n-            final Integer timeout = preferenceManager.getPreference(SystemPreferences.LAUNCH_SERVERLESS_STOP_TIMEOUT);\n-            final LocalDateTime maxLastUpdate = LocalDateTime.now().minusMinutes(timeout);\n-            final List<PipelineRun> runs = ListUtils.emptyIfNull(\n-                    pipelineRunManager.loadExpiredServerlessRuns(maxLastUpdate));\n-            runs.forEach(run -> pipelineRunManager.stopServerlessRun(run.getId()));\n+            final List<StopServerlessRun> activeServerlessRuns = ListUtils.emptyIfNull(\n+                    pipelineRunManager.loadActiveServerlessRuns());\n+            activeServerlessRuns.stream()\n+                    .filter(this::serverlessRunIsExpired)\n+                    .forEach(run -> pipelineRunManager.stopServerlessRun(run.getId()));\n+        }\n+\n+        private boolean serverlessRunIsExpired(final StopServerlessRun run) {\n+            return run.getLastUpdate().isBefore(LocalDateTime.now().minusMinutes(getTimeoutMinutes(run)));\n+        }\n+\n+        private Long getTimeoutMinutes(final StopServerlessRun run) {\n+            return Objects.nonNull(run.getStopAfter())\n+                    ? run.getStopAfter()\n+                    : preferenceManager.getPreference(SystemPreferences.LAUNCH_SERVERLESS_STOP_TIMEOUT).longValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba0cafd86038eac71f5ea92c6d6fdafb2499ccc6"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0420a804eb023407e2079af5ff125f937db16b1", "author": {"user": {"login": "ekazachkova", "name": "Ekaterina Kazachkova"}}, "url": "https://github.com/epam/cloud-pipeline/commit/a0420a804eb023407e2079af5ff125f937db16b1", "committedDate": "2020-07-21T09:54:15Z", "message": "Issue #1038: \"Serverless\" Cloud Pipeline API - refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODA5NDE4", "url": "https://github.com/epam/cloud-pipeline/pull/1222#pullrequestreview-452809418", "createdAt": "2020-07-21T20:36:10Z", "commit": {"oid": "a0420a804eb023407e2079af5ff125f937db16b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3795, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}