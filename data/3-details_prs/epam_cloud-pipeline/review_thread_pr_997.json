{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MjYxMDM5", "number": 997, "reviewThreads": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDo1OTozNFrODnHO2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0OTo1MFrOFASXZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzM5NTQ3OnYy", "diffSide": "RIGHT", "path": "api/profiles/dev/application.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNDo1OTozNFrOF062tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzowNDoxMlrOF1AWhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzNDU1MA==", "bodyText": "This settings shall be stored in SystemPreference to be configurable at runtime", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391034550", "createdAt": "2020-03-11T14:59:34Z", "author": {"login": "mzueva"}, "path": "api/profiles/dev/application.properties", "diffHunk": "@@ -78,6 +78,8 @@ git.docs.directory=docs/\n #s3 bucket policy\n # in bytes\n storage.clone.name.suffix=storage\n+storage.user.home.auto=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEyNDYxNQ==", "bodyText": "Done", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391124615", "createdAt": "2020-03-11T17:04:12Z", "author": {"login": "Wedds"}, "path": "api/profiles/dev/application.properties", "diffHunk": "@@ -78,6 +78,8 @@ git.docs.directory=docs/\n #s3 bucket policy\n # in bytes\n storage.clone.name.suffix=storage\n+storage.user.home.auto=true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzNDU1MA=="}, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzQyMjY0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNTowNTozMFrOF07IFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzowNDowNFrOF1AWNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzODk5OQ==", "bodyText": "Can be replaces with\nLong storageId = Optional.ofNullable(defaultStorageId).orElseGet(() -> .... createDefaultFolder)", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391038999", "createdAt": "2020-03-11T15:05:30Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -83,10 +88,47 @@\n     @Autowired\n     private DataStorageValidator storageValidator;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Value(\"${storage.user.home.auto:false}\")\n+    private boolean shouldCreateDefaultHome;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        if (defaultStorageId != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEyNDUzNQ==", "bodyText": "Done", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391124535", "createdAt": "2020-03-11T17:04:04Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -83,10 +88,47 @@\n     @Autowired\n     private DataStorageValidator storageValidator;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Value(\"${storage.user.home.auto:false}\")\n+    private boolean shouldCreateDefaultHome;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        if (defaultStorageId != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTAzODk5OQ=="}, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzQ0NTE0OnYy", "diffSide": "RIGHT", "path": "deploy/docker/cp-api-srv/folder-templates/ROLE_USER/DefaultStorage/template.json", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNToxMDozNVrOF07WpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzowMzo1OVrOF1AWAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MjcyNA==", "bodyText": "please remove permissions from the template, we need to handle it manually", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391042724", "createdAt": "2020-03-11T15:10:35Z", "author": {"login": "mzueva"}, "path": "deploy/docker/cp-api-srv/folder-templates/ROLE_USER/DefaultStorage/template.json", "diffHunk": "@@ -0,0 +1,26 @@\n+{\n+    \"name\": \"@@\",\n+    \"metadata\": {\n+        \"type\": {\n+            \"value\": \"defaultUserFolder\"\n+        },\n+        \"DataStorage\": {\n+            \"value\": \"${CP_PREF_STORAGE_SCHEMA}://cloud-pipeline-user-@@-default-storage\",\n+            \"type\": \"bucket\"\n+        }\n+    },\n+    \"parentId\" : \"${CP_PARENT_FOLDER_ID_DEFAULT_USER_STORAGE}\",\n+    \"permissions\": [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEyNDQ4Mg==", "bodyText": "Done", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391124482", "createdAt": "2020-03-11T17:03:59Z", "author": {"login": "Wedds"}, "path": "deploy/docker/cp-api-srv/folder-templates/ROLE_USER/DefaultStorage/template.json", "diffHunk": "@@ -0,0 +1,26 @@\n+{\n+    \"name\": \"@@\",\n+    \"metadata\": {\n+        \"type\": {\n+            \"value\": \"defaultUserFolder\"\n+        },\n+        \"DataStorage\": {\n+            \"value\": \"${CP_PREF_STORAGE_SCHEMA}://cloud-pipeline-user-@@-default-storage\",\n+            \"type\": \"bucket\"\n+        }\n+    },\n+    \"parentId\" : \"${CP_PARENT_FOLDER_ID_DEFAULT_USER_STORAGE}\",\n+    \"permissions\": [", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MjcyNA=="}, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzQ0OTAwOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNToxMTozMFrOF07ZMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzowMzo1NVrOF1AV0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MzM3Nw==", "bodyText": "after project is created we need to call changeOwner on all created entities (or it will be unavailable for user)", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391043377", "createdAt": "2020-03-11T15:11:30Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -83,10 +88,47 @@\n     @Autowired\n     private DataStorageValidator storageValidator;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Value(\"${storage.user.home.auto:false}\")\n+    private boolean shouldCreateDefaultHome;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        if (defaultStorageId != null) {\n+            newUser.setDefaultStorageId(defaultStorageId);\n+            userDao.updateUser(newUser);\n+        } else if (shouldCreateDefaultHome) {\n+            final AbstractDataStorage defaultStorage = createUserDefaultFolder(newUser).getStorages().get(0);\n+            newUser.setDefaultStorageId(defaultStorage.getId());\n+            userDao.updateUser(newUser);\n+        }\n+        return newUser;\n+    }\n+\n+    private Folder createUserDefaultFolder(final PipelineUser user) {\n+        final Folder folder = new Folder();\n+        final String userName = user.getUserName();\n+        folder.setName(userName);\n+        try {\n+            return folderManager.createFromTemplate(folder, defaultUserStorageTemplateName, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA1MTYyOA==", "bodyText": "We need to check, how this will work, when user is created from SamlUserDetailsService - listing templates may fail, if user is not authorized yet.", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391051628", "createdAt": "2020-03-11T15:22:45Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -83,10 +88,47 @@\n     @Autowired\n     private DataStorageValidator storageValidator;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Value(\"${storage.user.home.auto:false}\")\n+    private boolean shouldCreateDefaultHome;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        if (defaultStorageId != null) {\n+            newUser.setDefaultStorageId(defaultStorageId);\n+            userDao.updateUser(newUser);\n+        } else if (shouldCreateDefaultHome) {\n+            final AbstractDataStorage defaultStorage = createUserDefaultFolder(newUser).getStorages().get(0);\n+            newUser.setDefaultStorageId(defaultStorage.getId());\n+            userDao.updateUser(newUser);\n+        }\n+        return newUser;\n+    }\n+\n+    private Folder createUserDefaultFolder(final PipelineUser user) {\n+        final Folder folder = new Folder();\n+        final String userName = user.getUserName();\n+        folder.setName(userName);\n+        try {\n+            return folderManager.createFromTemplate(folder, defaultUserStorageTemplateName, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MzM3Nw=="}, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEyNDQzMw==", "bodyText": "Setting owner permissions manually", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391124433", "createdAt": "2020-03-11T17:03:55Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -83,10 +88,47 @@\n     @Autowired\n     private DataStorageValidator storageValidator;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Value(\"${storage.user.home.auto:false}\")\n+    private boolean shouldCreateDefaultHome;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        if (defaultStorageId != null) {\n+            newUser.setDefaultStorageId(defaultStorageId);\n+            userDao.updateUser(newUser);\n+        } else if (shouldCreateDefaultHome) {\n+            final AbstractDataStorage defaultStorage = createUserDefaultFolder(newUser).getStorages().get(0);\n+            newUser.setDefaultStorageId(defaultStorage.getId());\n+            userDao.updateUser(newUser);\n+        }\n+        return newUser;\n+    }\n+\n+    private Folder createUserDefaultFolder(final PipelineUser user) {\n+        final Folder folder = new Folder();\n+        final String userName = user.getUserName();\n+        folder.setName(userName);\n+        try {\n+            return folderManager.createFromTemplate(folder, defaultUserStorageTemplateName, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0MzM3Nw=="}, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzQ2NDQ4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/entity/templates/FolderTemplate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNToxNDo1OVrOF07jYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzowMzoxOFrOF1AUJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0NTk4Nw==", "bodyText": "I would suggest to store home folder parent id in SystemPreferences", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391045987", "createdAt": "2020-03-11T15:14:59Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/entity/templates/FolderTemplate.java", "diffHunk": "@@ -33,6 +33,7 @@\n @Builder\n public class FolderTemplate {\n     private String name;\n+    private Long parentId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEyNDAwNg==", "bodyText": "Done", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391124006", "createdAt": "2020-03-11T17:03:18Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/entity/templates/FolderTemplate.java", "diffHunk": "@@ -33,6 +33,7 @@\n @Builder\n public class FolderTemplate {\n     private String name;\n+    private Long parentId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0NTk4Nw=="}, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzQ3MzA0OnYy", "diffSide": "LEFT", "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNToxNjo1M1rOF07o6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNToxNjo1M1rOF07o6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0NzQwMQ==", "bodyText": "I don't see why this should be removed?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391047401", "createdAt": "2020-03-11T15:16:53Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -83,10 +88,47 @@\n     @Autowired\n     private DataStorageValidator storageValidator;\n \n-    @Transactional(propagation = Propagation.REQUIRED)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMzQ3NzkyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNToxODowMFrOF07r-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxNzowMzoxM1rOF1AT4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0ODE4Ng==", "bodyText": "Instead of getting parentId from template, let's get it from SystemPreferences and set it to folder here", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391048186", "createdAt": "2020-03-11T15:18:00Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -83,10 +88,47 @@\n     @Autowired\n     private DataStorageValidator storageValidator;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Value(\"${storage.user.home.auto:false}\")\n+    private boolean shouldCreateDefaultHome;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        if (defaultStorageId != null) {\n+            newUser.setDefaultStorageId(defaultStorageId);\n+            userDao.updateUser(newUser);\n+        } else if (shouldCreateDefaultHome) {\n+            final AbstractDataStorage defaultStorage = createUserDefaultFolder(newUser).getStorages().get(0);\n+            newUser.setDefaultStorageId(defaultStorage.getId());\n+            userDao.updateUser(newUser);\n+        }\n+        return newUser;\n+    }\n+\n+    private Folder createUserDefaultFolder(final PipelineUser user) {\n+        final Folder folder = new Folder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTEyMzkzOQ==", "bodyText": "Done", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r391123939", "createdAt": "2020-03-11T17:03:13Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -83,10 +88,47 @@\n     @Autowired\n     private DataStorageValidator storageValidator;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Value(\"${storage.user.home.auto:false}\")\n+    private boolean shouldCreateDefaultHome;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        if (defaultStorageId != null) {\n+            newUser.setDefaultStorageId(defaultStorageId);\n+            userDao.updateUser(newUser);\n+        } else if (shouldCreateDefaultHome) {\n+            final AbstractDataStorage defaultStorage = createUserDefaultFolder(newUser).getStorages().get(0);\n+            newUser.setDefaultStorageId(defaultStorage.getId());\n+            userDao.updateUser(newUser);\n+        }\n+        return newUser;\n+    }\n+\n+    private Folder createUserDefaultFolder(final PipelineUser user) {\n+        final Folder folder = new Folder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTA0ODE4Ng=="}, "originalCommit": {"oid": "8826a4cbcf73cac3f1f69954e44334398cf3aeae"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzkxNTA1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderCrudManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjowMDo1MFrOHpxhqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTo1MzowMFrOH42hBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2NTA5OQ==", "bodyText": "What about the case when user just wants to rename folder? Could we still need such functionality?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r513565099", "createdAt": "2020-10-28T16:00:50Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderCrudManager.java", "diffHunk": "@@ -117,9 +117,9 @@ public Folder update(final Folder folder) {\n             dbFolder.setName(validateName(folder.getName()));\n         }\n         Long parentId = folder.getParentId();\n-        Assert.isNull(loadByNameAndParentId(folder.getName(), parentId),\n-                messageHelper.getMessage(MessageConstants.ERROR_FOLDER_NAME_EXISTS,\n-                        folder.getName(), parentId));\n+        Assert.notNull(loadByNameAndParentId(folder.getName(), parentId),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM3NTQ5NA==", "bodyText": "Done, extracted into a separate method, normal update is restored", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r529375494", "createdAt": "2020-11-24T09:53:00Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderCrudManager.java", "diffHunk": "@@ -117,9 +117,9 @@ public Folder update(final Folder folder) {\n             dbFolder.setName(validateName(folder.getName()));\n         }\n         Long parentId = folder.getParentId();\n-        Assert.isNull(loadByNameAndParentId(folder.getName(), parentId),\n-                messageHelper.getMessage(MessageConstants.ERROR_FOLDER_NAME_EXISTS,\n-                        folder.getName(), parentId));\n+        Assert.notNull(loadByNameAndParentId(folder.getName(), parentId),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2NTA5OQ=="}, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNzkyNTUyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjowMjo0MVrOHpxn6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTo1MzowNlrOH42hcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2NjY5OQ==", "bodyText": "Let's add final to failOnExisting argument", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r513566699", "createdAt": "2020-10-28T16:02:41Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderManager.java", "diffHunk": "@@ -145,7 +145,12 @@ public Folder delete(Long id) {\n \n     @Transactional(propagation = Propagation.REQUIRED)\n     public Folder createFromTemplate(final Folder folder, final String templateName) {\n-        return folderTemplateManager.create(folder, templateName);\n+        return createFromTemplate(folder, templateName, true);\n+    }\n+\n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public Folder createFromTemplate(final Folder folder, final String templateName, boolean failOnExisting) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM3NTYwMg==", "bodyText": "Done", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r529375602", "createdAt": "2020-11-24T09:53:06Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderManager.java", "diffHunk": "@@ -145,7 +145,12 @@ public Folder delete(Long id) {\n \n     @Transactional(propagation = Propagation.REQUIRED)\n     public Folder createFromTemplate(final Folder folder, final String templateName) {\n-        return folderTemplateManager.create(folder, templateName);\n+        return createFromTemplate(folder, templateName, true);\n+    }\n+\n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public Folder createFromTemplate(final Folder folder, final String templateName, boolean failOnExisting) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU2NjY5OQ=="}, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxODAyNDc2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjoyMzoyMFrOHpym_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTo1NTowMFrOH42q-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU4Mjg0NQ==", "bodyText": "Shouldn't storages always be present?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r513582845", "createdAt": "2020-10-28T16:23:20Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -75,12 +80,41 @@\n     private MessageHelper messageHelper;\n     @Autowired\n     private MetadataPostProcessorService metadataPostProcessorService;\n+    @Autowired\n+    private AbstractDataStorageMapper dataStorageMapper;\n \n     @Value(\"${templates.folder.directory}\")\n     private String folderTemplatesDirectoryPath;\n \n     @Transactional(propagation = Propagation.REQUIRED)\n-    public Folder create(final Folder folder, final String templateName) {\n+    public Folder create(final Folder folder, final String templateName, final boolean failOnExisting) {\n+        final FolderTemplate folderTemplate = prepareFolderTemplate(folder, templateName, failOnExisting);\n+        try {\n+            final Folder existingFolder =\n+                ListUtils.emptyIfNull(crudManager.load(folder.getParentId()).getChildFolders()).stream()\n+                    .filter(f -> f.getName().equals(folderTemplate.getName()))\n+                    .findAny()\n+                    .orElseThrow(IllegalArgumentException::new);\n+            final DataStorageWithMetadataVO storageToCreate = folderTemplate.getDatastorages().get(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM3ODA0Mw==", "bodyText": "Done, processing different situations correctly (no storage, exact one storage, more than one storage in a folder template)", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r529378043", "createdAt": "2020-11-24T09:55:00Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -75,12 +80,41 @@\n     private MessageHelper messageHelper;\n     @Autowired\n     private MetadataPostProcessorService metadataPostProcessorService;\n+    @Autowired\n+    private AbstractDataStorageMapper dataStorageMapper;\n \n     @Value(\"${templates.folder.directory}\")\n     private String folderTemplatesDirectoryPath;\n \n     @Transactional(propagation = Propagation.REQUIRED)\n-    public Folder create(final Folder folder, final String templateName) {\n+    public Folder create(final Folder folder, final String templateName, final boolean failOnExisting) {\n+        final FolderTemplate folderTemplate = prepareFolderTemplate(folder, templateName, failOnExisting);\n+        try {\n+            final Folder existingFolder =\n+                ListUtils.emptyIfNull(crudManager.load(folder.getParentId()).getChildFolders()).stream()\n+                    .filter(f -> f.getName().equals(folderTemplate.getName()))\n+                    .findAny()\n+                    .orElseThrow(IllegalArgumentException::new);\n+            final DataStorageWithMetadataVO storageToCreate = folderTemplate.getDatastorages().get(0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU4Mjg0NQ=="}, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxODA1MDQxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjoyODoyOVrOHpy22Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTo1NTowNlrOH42rkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU4NjkwNQ==", "bodyText": "Could we avoid exception-driven development here?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r513586905", "createdAt": "2020-10-28T16:28:29Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -75,12 +80,41 @@\n     private MessageHelper messageHelper;\n     @Autowired\n     private MetadataPostProcessorService metadataPostProcessorService;\n+    @Autowired\n+    private AbstractDataStorageMapper dataStorageMapper;\n \n     @Value(\"${templates.folder.directory}\")\n     private String folderTemplatesDirectoryPath;\n \n     @Transactional(propagation = Propagation.REQUIRED)\n-    public Folder create(final Folder folder, final String templateName) {\n+    public Folder create(final Folder folder, final String templateName, final boolean failOnExisting) {\n+        final FolderTemplate folderTemplate = prepareFolderTemplate(folder, templateName, failOnExisting);\n+        try {\n+            final Folder existingFolder =\n+                ListUtils.emptyIfNull(crudManager.load(folder.getParentId()).getChildFolders()).stream()\n+                    .filter(f -> f.getName().equals(folderTemplate.getName()))\n+                    .findAny()\n+                    .orElseThrow(IllegalArgumentException::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM3ODE5Mg==", "bodyText": "Done", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r529378192", "createdAt": "2020-11-24T09:55:06Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -75,12 +80,41 @@\n     private MessageHelper messageHelper;\n     @Autowired\n     private MetadataPostProcessorService metadataPostProcessorService;\n+    @Autowired\n+    private AbstractDataStorageMapper dataStorageMapper;\n \n     @Value(\"${templates.folder.directory}\")\n     private String folderTemplatesDirectoryPath;\n \n     @Transactional(propagation = Propagation.REQUIRED)\n-    public Folder create(final Folder folder, final String templateName) {\n+    public Folder create(final Folder folder, final String templateName, final boolean failOnExisting) {\n+        final FolderTemplate folderTemplate = prepareFolderTemplate(folder, templateName, failOnExisting);\n+        try {\n+            final Folder existingFolder =\n+                ListUtils.emptyIfNull(crudManager.load(folder.getParentId()).getChildFolders()).stream()\n+                    .filter(f -> f.getName().equals(folderTemplate.getName()))\n+                    .findAny()\n+                    .orElseThrow(IllegalArgumentException::new);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU4NjkwNQ=="}, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxODEwMDEyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNjozOToyMFrOHpzV9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDowMjozNlrOH43QNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU5NDg2OQ==", "bodyText": "Let's consider the following situation:\n\nuser has successfully created default folder and received storage ID\nduring update operation an error has occurred\n\nIs it expected transaction behavior?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r513594869", "createdAt": "2020-10-28T16:39:20Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,10 +104,32 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        final boolean shouldCreateDefaultHome =\n+            preferenceManager.getPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_ENABLED);\n+        final Long storageId = Optional.ofNullable(defaultStorageId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4NzU3Mg==", "bodyText": "Done, transactional behavior for createUser restored; changed methods structure, so createUser contains two parts: user creation itself and default folder initialization. The second one marked as transactional and wrapped into try-catch in createUser, so it should revert changes in case of failures, but won't fail a user creation transaction.", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r529387572", "createdAt": "2020-11-24T10:02:36Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,10 +104,32 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n-    @Transactional(propagation = Propagation.REQUIRED)\n+    @Autowired\n+    private FolderManager folderManager;\n+\n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Value(\"${storage.user.home.template}\")\n+    private  String defaultUserStorageTemplateName;\n+\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        final boolean shouldCreateDefaultHome =\n+            preferenceManager.getPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_ENABLED);\n+        final Long storageId = Optional.ofNullable(defaultStorageId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU5NDg2OQ=="}, "originalCommit": {"oid": "b202c67ac1b6f198328eff081a305e143dd64e8c"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzU4NzI4OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/com/epam/pipeline/manager/user/UserManagerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwOToxNDoyNFrOH62ekw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwOToxNDoyNFrOH62ekw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ3MjAxOQ==", "bodyText": "This test fails. Could you check this?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r531472019", "createdAt": "2020-11-27T09:14:24Z", "author": {"login": "ekazachkova"}, "path": "api/src/test/java/com/epam/pipeline/manager/user/UserManagerTest.java", "diffHunk": "@@ -112,7 +145,7 @@ public void exportUsers() {\n         attr.setIncludeUserName(true);\n \n         String[] exported = new String(userManager.exportUsers(attr)).split(\"\\n\");\n-        Assert.assertEquals(2, exported.length);\n+        Assert.assertEquals(1, exported.length);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzY2NjkxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwOTozNjoyMFrOH63OMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwOTozNjoyMFrOH63OMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ4NDIwOQ==", "bodyText": "Maybe we should find a better way to determine folder existence?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r531484209", "createdAt": "2020-11-27T09:36:20Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -75,12 +81,27 @@\n     private MessageHelper messageHelper;\n     @Autowired\n     private MetadataPostProcessorService metadataPostProcessorService;\n+    @Autowired\n+    private AbstractDataStorageMapper dataStorageMapper;\n \n     @Value(\"${templates.folder.directory}\")\n     private String folderTemplatesDirectoryPath;\n \n     @Transactional(propagation = Propagation.REQUIRED)\n-    public Folder create(final Folder folder, final String templateName) {\n+    public Folder create(final Folder folder, final String templateName, final boolean failOnExisting) {\n+        final FolderTemplate folderTemplate = prepareFolderTemplate(folder, templateName, failOnExisting);\n+        try {\n+            return ListUtils.emptyIfNull(crudManager.load(folder.getParentId()).getChildFolders()).stream()\n+                .filter(f -> f.getName().equals(folderTemplate.getName()))\n+                .findAny()\n+                .map(existingFolder -> createStorageFromTemplateInExistingFolder(existingFolder, folderTemplate))\n+                .orElseGet(() -> fillInNewFolderFromTemplate(folder, folderTemplate));\n+        } catch (IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzY3Mzg4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwOTozODoxOVrOH63SYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwOTozODoxOVrOH63SYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ4NTI4MQ==", "bodyText": "It is not clear for me why do we need such logic?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r531485281", "createdAt": "2020-11-27T09:38:19Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -133,7 +157,46 @@ void createFolderFromTemplate(Folder folder, FolderTemplate template) {\n         }\n     }\n \n-    private void prepareTemplateStorages(FolderTemplate template, String prefix) {\n+    private Folder createStorageFromTemplateInExistingFolder(final Folder existingFolder,\n+                                                             final FolderTemplate folderTemplate) {\n+        if (CollectionUtils.isNotEmpty(folderTemplate.getDatastorages())) {\n+            final Set<String> existingStoragePaths = ListUtils.emptyIfNull(existingFolder.getStorages()).stream()\n+                .map(AbstractDataStorage::getPath)\n+                .collect(Collectors.toSet());\n+            final List<AbstractDataStorage> storageToAssign = folderTemplate.getDatastorages().stream()\n+                .filter(storageToCreate -> !existingStoragePaths.contains(storageToCreate.getPath()))\n+                .peek(storageToCreate -> storageToCreate.setParentFolderId(existingFolder.getId()))\n+                .map(storageToCreate -> dataStorageManager.create(storageToCreate, true, true, true).getEntity())\n+                .collect(Collectors.toList());\n+            if (CollectionUtils.isNotEmpty(storageToAssign)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzY3NTgzOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwOTozODo1M1rOH63TkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QwOTozODo1M1rOH63TkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ4NTU4NA==", "bodyText": "Maybe we should find a better way to check storage existence? (a new method, failOnExisting)", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r531485584", "createdAt": "2020-11-27T09:38:53Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -133,7 +157,46 @@ void createFolderFromTemplate(Folder folder, FolderTemplate template) {\n         }\n     }\n \n-    private void prepareTemplateStorages(FolderTemplate template, String prefix) {\n+    private Folder createStorageFromTemplateInExistingFolder(final Folder existingFolder,\n+                                                             final FolderTemplate folderTemplate) {\n+        if (CollectionUtils.isNotEmpty(folderTemplate.getDatastorages())) {\n+            final Set<String> existingStoragePaths = ListUtils.emptyIfNull(existingFolder.getStorages()).stream()\n+                .map(AbstractDataStorage::getPath)\n+                .collect(Collectors.toSet());\n+            final List<AbstractDataStorage> storageToAssign = folderTemplate.getDatastorages().stream()\n+                .filter(storageToCreate -> !existingStoragePaths.contains(storageToCreate.getPath()))\n+                .peek(storageToCreate -> storageToCreate.setParentFolderId(existingFolder.getId()))\n+                .map(storageToCreate -> dataStorageManager.create(storageToCreate, true, true, true).getEntity())\n+                .collect(Collectors.toList());\n+            if (CollectionUtils.isNotEmpty(storageToAssign)) {\n+                existingFolder.setStorages(storageToAssign);\n+                return crudManager.updateContent(existingFolder);\n+            }\n+        }\n+        return existingFolder;\n+    }\n+\n+    private Folder fillInNewFolderFromTemplate(final Folder folder, final FolderTemplate folderTemplate) {\n+        createFolderFromTemplate(folder, folderTemplate);\n+        return folder;\n+    }\n+\n+    private AbstractDataStorage getStorageFromVo(final DataStorageWithMetadataVO storageVO) {\n+        AbstractDataStorage storageToAdd;\n+        try {\n+            storageToAdd = dataStorageManager.loadByNameOrId(storageVO.getName());\n+            storageToAdd.setParentFolderId(storageVO.getParentFolderId());\n+            dataStorageManager.update(dataStorageMapper.toDataStorageVO(storageToAdd));\n+        } catch (IllegalArgumentException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMzc2MTI1OnYy", "diffSide": "RIGHT", "path": "api/src/main/resources/messages.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDowMTozMlrOH64GaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDowMTozMlrOH64GaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTQ5ODYwMQ==", "bodyText": "Quotas are not  necessary here", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r531498601", "createdAt": "2020-11-27T10:01:32Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/resources/messages.properties", "diffHunk": "@@ -300,6 +300,9 @@ info.update.user.roles=Update user roles. User id: {0} roles id: {1}\n info.update.user.datastorage=Update user datastorage. User id: {0} datastorage id: {1}\n info.update.user.block.status=Update user blocking status. User id={0}. Blocking status={1}\n info.update.user.saml.info=Update user SAML info. User: name={0} id={1}\n+user.storage.home.auto.fails=\"User {0} created successfully, but default folder creation failed: {1}!\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNDA0ODk4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMToyMjozOFrOH66zIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMToyMjozOFrOH66zIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTU0MjgxNw==", "bodyText": "This assertion should be case-insensitive", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r531542817", "createdAt": "2020-11-27T11:22:38Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/manager/pipeline/FolderTemplateManager.java", "diffHunk": "@@ -133,7 +157,46 @@ void createFolderFromTemplate(Folder folder, FolderTemplate template) {\n         }\n     }\n \n-    private void prepareTemplateStorages(FolderTemplate template, String prefix) {\n+    private Folder createStorageFromTemplateInExistingFolder(final Folder existingFolder,\n+                                                             final FolderTemplate folderTemplate) {\n+        if (CollectionUtils.isNotEmpty(folderTemplate.getDatastorages())) {\n+            final Set<String> existingStoragePaths = ListUtils.emptyIfNull(existingFolder.getStorages()).stream()\n+                .map(AbstractDataStorage::getPath)\n+                .collect(Collectors.toSet());\n+            final List<AbstractDataStorage> storageToAssign = folderTemplate.getDatastorages().stream()\n+                .filter(storageToCreate -> !existingStoragePaths.contains(storageToCreate.getPath()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e2b18024cba9278ccd57cc043c79e6af7af2ab2"}, "originalPosition": 125}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTI3Mjk5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/preference/SystemPreferences.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzoxNjozMFrOH76nlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjowMzoxOFrOH8B9Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU4ODQzNw==", "bodyText": "Could you rename preference to storage.user.home.template and make it an 'ObjectPreference' to enable json validation on the GUI?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532588437", "createdAt": "2020-11-30T13:16:30Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/preference/SystemPreferences.java", "diffHunk": "@@ -130,6 +130,21 @@\n         \"storage.temp.credentials.duration\", 3600, DATA_STORAGE_GROUP, isGreaterThan(0));\n     public static final IntPreference STORAGE_MOUNTS_PER_GB_RATIO = new IntPreference(\n             \"storage.mounts.per.gb.ratio\", null, DATA_STORAGE_GROUP, isNullOrGreaterThan(0));\n+    public static final BooleanPreference DEFAULT_USER_DATA_STORAGE_ENABLED =\n+        new BooleanPreference(\"storage.user.home.auto\", false, DATA_STORAGE_GROUP, pass);\n+    public static final StringPreference DEFAULT_USER_DATA_STORAGE_TEMPLATE =\n+        new StringPreference(\"user.default.storage.template\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwODYzOA==", "bodyText": "Done", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532708638", "createdAt": "2020-11-30T16:03:18Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/preference/SystemPreferences.java", "diffHunk": "@@ -130,6 +130,21 @@\n         \"storage.temp.credentials.duration\", 3600, DATA_STORAGE_GROUP, isGreaterThan(0));\n     public static final IntPreference STORAGE_MOUNTS_PER_GB_RATIO = new IntPreference(\n             \"storage.mounts.per.gb.ratio\", null, DATA_STORAGE_GROUP, isNullOrGreaterThan(0));\n+    public static final BooleanPreference DEFAULT_USER_DATA_STORAGE_ENABLED =\n+        new BooleanPreference(\"storage.user.home.auto\", false, DATA_STORAGE_GROUP, pass);\n+    public static final StringPreference DEFAULT_USER_DATA_STORAGE_TEMPLATE =\n+        new StringPreference(\"user.default.storage.template\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU4ODQzNw=="}, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTI4OTI4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzoyMDozOFrOH76xUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjowNDowNVrOH8B_gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5MDkyOA==", "bodyText": "To enable json validation on the GUI, we need to change this preference to ObjectPreference type. So handling of preference in code will change - we need to get it string value ta first and then proceed with replacement, etc. Do not forget to handle null value.", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532590928", "createdAt": "2020-11-30T13:20:38Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "diffHunk": "@@ -343,6 +353,40 @@ public AbstractDataStorage updatePolicy(DataStorageVO dataStorageVO) {\n         return createdStorage;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public AbstractDataStorage createDefaultStorageForUser(final String userName) {\n+        final String dataStorageTemplateJson =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwOTI1MQ==", "bodyText": "Done, if no template specified, build default DataStorageTemplate based on a user's name", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532709251", "createdAt": "2020-11-30T16:04:05Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "diffHunk": "@@ -343,6 +353,40 @@ public AbstractDataStorage updatePolicy(DataStorageVO dataStorageVO) {\n         return createdStorage;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public AbstractDataStorage createDefaultStorageForUser(final String userName) {\n+        final String dataStorageTemplateJson =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5MDkyOA=="}, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTI5MTczOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzoyMToxNFrOH76yxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjowNDowOVrOH8B_wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5MTMwMA==", "bodyText": "Can we return Optional from this method, as it returns null in some cases?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532591300", "createdAt": "2020-11-30T13:21:14Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "diffHunk": "@@ -343,6 +353,40 @@ public AbstractDataStorage updatePolicy(DataStorageVO dataStorageVO) {\n         return createdStorage;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public AbstractDataStorage createDefaultStorageForUser(final String userName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwOTMxMg==", "bodyText": "Done", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532709312", "createdAt": "2020-11-30T16:04:09Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "diffHunk": "@@ -343,6 +353,40 @@ public AbstractDataStorage updatePolicy(DataStorageVO dataStorageVO) {\n         return createdStorage;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public AbstractDataStorage createDefaultStorageForUser(final String userName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5MTMwMA=="}, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTMwNjM3OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzoyNDo1NlrOH767jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjowNDoxNFrOH8B_7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5MzU1MQ==", "bodyText": "Validating here is useless since defaultStorageId is handled only in createUserDefaultStorage  method", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532593551", "createdAt": "2020-11-30T13:24:56Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -400,6 +428,41 @@ public boolean needToUpdateUser(List<String> groups, Map<String, String> attribu\n         return new UserExporter().exportUsers(attr, users, sensitiveKeys).getBytes(Charset.defaultCharset());\n     }\n \n+    private PipelineUser createUser(final String name, final List<Long> roles, final List<String> groups,\n+                                    final Map<String, String> attributes) {\n+        Assert.isTrue(StringUtils.isNotBlank(name),\n+                      messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n+        String userName = name.trim().toUpperCase();\n+        PipelineUser loadedUser = userDao.loadUserByName(userName);\n+        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n+        PipelineUser user = new PipelineUser(userName);\n+        List<Long> userRoles = getNewUserRoles(roles);\n+        user.setRoles(roleDao.loadRolesList(userRoles));\n+        user.setGroups(groups);\n+        user.setAttributes(attributes);\n+        storageValidator.validate(user);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwOTM1OA==", "bodyText": "Done", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532709358", "createdAt": "2020-11-30T16:04:14Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -400,6 +428,41 @@ public boolean needToUpdateUser(List<String> groups, Map<String, String> attribu\n         return new UserExporter().exportUsers(attr, users, sensitiveKeys).getBytes(Charset.defaultCharset());\n     }\n \n+    private PipelineUser createUser(final String name, final List<Long> roles, final List<String> groups,\n+                                    final Map<String, String> attributes) {\n+        Assert.isTrue(StringUtils.isNotBlank(name),\n+                      messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n+        String userName = name.trim().toUpperCase();\n+        PipelineUser loadedUser = userDao.loadUserByName(userName);\n+        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n+        PipelineUser user = new PipelineUser(userName);\n+        List<Long> userRoles = getNewUserRoles(roles);\n+        user.setRoles(roleDao.loadRolesList(userRoles));\n+        user.setGroups(groups);\n+        user.setAttributes(attributes);\n+        storageValidator.validate(user);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5MzU1MQ=="}, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTMxODg0OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzoyNzo1MVrOH77C2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjowNDoyMFrOH8CANw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5NTQxNw==", "bodyText": "Should we update dataStorageDetails here not dataStorageTemplate?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532595417", "createdAt": "2020-11-30T13:27:51Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "diffHunk": "@@ -343,6 +353,40 @@ public AbstractDataStorage updatePolicy(DataStorageVO dataStorageVO) {\n         return createdStorage;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public AbstractDataStorage createDefaultStorageForUser(final String userName) {\n+        final String dataStorageTemplateJson =\n+            preferenceManager.getPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_TEMPLATE);\n+        final DataStorageTemplate dataStorageTemplate = JsonMapper.parseData(\n+            dataStorageTemplateJson.replaceAll(FolderTemplateManager.TEMPLATE_REPLACE_MARK, userName),\n+            new TypeReference<DataStorageTemplate>() {});\n+        final DataStorageVO dataStorageDetails = dataStorageTemplate.getDatastorage();\n+        if (dataStorageDetails.getPath() == null) {\n+            dataStorageDetails.setPath(adjustStoragePath(dataStorageDetails.getName(), null));\n+        }\n+        final AbstractDataStorage correspondingExistingStorage =\n+            dataStorageDao.loadDataStorageByNameOrPath(dataStorageDetails.getName(), dataStorageDetails.getPath());\n+        if (correspondingExistingStorage != null) {\n+            log.warn(messageHelper.getMessage(MessageConstants.DEFAULT_STORAGE_CREATION_CORRESPONDING_EXISTS,\n+                                              dataStorageDetails.getPath(),\n+                                              userName,\n+                                              correspondingExistingStorage.getId()));\n+            return null;\n+        }\n+        if (!folderManager.exists(dataStorageDetails.getParentFolderId())) {\n+            dataStorageTemplate.getDatastorage().setParentFolderId(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwOTQzMQ==", "bodyText": "Done", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532709431", "createdAt": "2020-11-30T16:04:20Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "diffHunk": "@@ -343,6 +353,40 @@ public AbstractDataStorage updatePolicy(DataStorageVO dataStorageVO) {\n         return createdStorage;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public AbstractDataStorage createDefaultStorageForUser(final String userName) {\n+        final String dataStorageTemplateJson =\n+            preferenceManager.getPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_TEMPLATE);\n+        final DataStorageTemplate dataStorageTemplate = JsonMapper.parseData(\n+            dataStorageTemplateJson.replaceAll(FolderTemplateManager.TEMPLATE_REPLACE_MARK, userName),\n+            new TypeReference<DataStorageTemplate>() {});\n+        final DataStorageVO dataStorageDetails = dataStorageTemplate.getDatastorage();\n+        if (dataStorageDetails.getPath() == null) {\n+            dataStorageDetails.setPath(adjustStoragePath(dataStorageDetails.getName(), null));\n+        }\n+        final AbstractDataStorage correspondingExistingStorage =\n+            dataStorageDao.loadDataStorageByNameOrPath(dataStorageDetails.getName(), dataStorageDetails.getPath());\n+        if (correspondingExistingStorage != null) {\n+            log.warn(messageHelper.getMessage(MessageConstants.DEFAULT_STORAGE_CREATION_CORRESPONDING_EXISTS,\n+                                              dataStorageDetails.getPath(),\n+                                              userName,\n+                                              correspondingExistingStorage.getId()));\n+            return null;\n+        }\n+        if (!folderManager.exists(dataStorageDetails.getParentFolderId())) {\n+            dataStorageTemplate.getDatastorage().setParentFolderId(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5NTQxNw=="}, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTMyNTY2OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzoyOToyNlrOH77G0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjowNDoyNVrOH8CAdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5NjQzNQ==", "bodyText": "Could you rename this method to initUserDefaultStorage to make more clear?", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532596435", "createdAt": "2020-11-30T13:29:26Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,26 +102,48 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Autowired\n+    private DataStorageManager dataStorageManager;\n+\n+    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     @Transactional(propagation = Propagation.REQUIRED)\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n-        Assert.isTrue(StringUtils.isNotBlank(name),\n-                messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n-        String userName = name.trim().toUpperCase();\n-        PipelineUser loadedUser = userDao.loadUserByName(userName);\n-        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n-        PipelineUser user = new PipelineUser(userName);\n-        List<Long> userRoles = getNewUserRoles(roles);\n-        user.setRoles(roleDao.loadRolesList(userRoles));\n-        user.setGroups(groups);\n-        user.setAttributes(attributes);\n-        user.setDefaultStorageId(defaultStorageId);\n-        storageValidator.validate(user);\n-        log.info(messageHelper.getMessage(MessageConstants.INFO_CREATE_USER, userName));\n-        return userDao.createUser(user, userRoles);\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        try {\n+            return createUserDefaultStorage(defaultStorageId, newUser);\n+        } catch (RuntimeException e) {\n+            log.warn(messageHelper.getMessage(MessageConstants.ERROR_DEFAULT_STORAGE_CREATION, name, e.getMessage()));\n+        }\n+        return newUser;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public PipelineUser createUserDefaultStorage(final Long defaultStorageId, final PipelineUser newUser) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcwOTQ5Mw==", "bodyText": "Done", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532709493", "createdAt": "2020-11-30T16:04:25Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,26 +102,48 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Autowired\n+    private DataStorageManager dataStorageManager;\n+\n+    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     @Transactional(propagation = Propagation.REQUIRED)\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n-        Assert.isTrue(StringUtils.isNotBlank(name),\n-                messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n-        String userName = name.trim().toUpperCase();\n-        PipelineUser loadedUser = userDao.loadUserByName(userName);\n-        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n-        PipelineUser user = new PipelineUser(userName);\n-        List<Long> userRoles = getNewUserRoles(roles);\n-        user.setRoles(roleDao.loadRolesList(userRoles));\n-        user.setGroups(groups);\n-        user.setAttributes(attributes);\n-        user.setDefaultStorageId(defaultStorageId);\n-        storageValidator.validate(user);\n-        log.info(messageHelper.getMessage(MessageConstants.INFO_CREATE_USER, userName));\n-        return userDao.createUser(user, userRoles);\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        try {\n+            return createUserDefaultStorage(defaultStorageId, newUser);\n+        } catch (RuntimeException e) {\n+            log.warn(messageHelper.getMessage(MessageConstants.ERROR_DEFAULT_STORAGE_CREATION, name, e.getMessage()));\n+        }\n+        return newUser;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public PipelineUser createUserDefaultStorage(final Long defaultStorageId, final PipelineUser newUser) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5NjQzNQ=="}, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTM0Nzk5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzozNDozNVrOH77T5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjowNTowMlrOH8CCdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5OTc4MQ==", "bodyText": "Move storage validation here", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532599781", "createdAt": "2020-11-30T13:34:35Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,26 +102,48 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Autowired\n+    private DataStorageManager dataStorageManager;\n+\n+    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     @Transactional(propagation = Propagation.REQUIRED)\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n-        Assert.isTrue(StringUtils.isNotBlank(name),\n-                messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n-        String userName = name.trim().toUpperCase();\n-        PipelineUser loadedUser = userDao.loadUserByName(userName);\n-        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n-        PipelineUser user = new PipelineUser(userName);\n-        List<Long> userRoles = getNewUserRoles(roles);\n-        user.setRoles(roleDao.loadRolesList(userRoles));\n-        user.setGroups(groups);\n-        user.setAttributes(attributes);\n-        user.setDefaultStorageId(defaultStorageId);\n-        storageValidator.validate(user);\n-        log.info(messageHelper.getMessage(MessageConstants.INFO_CREATE_USER, userName));\n-        return userDao.createUser(user, userRoles);\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        try {\n+            return createUserDefaultStorage(defaultStorageId, newUser);\n+        } catch (RuntimeException e) {\n+            log.warn(messageHelper.getMessage(MessageConstants.ERROR_DEFAULT_STORAGE_CREATION, name, e.getMessage()));\n+        }\n+        return newUser;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public PipelineUser createUserDefaultStorage(final Long defaultStorageId, final PipelineUser newUser) {\n+        final boolean shouldCreateDefaultHome =\n+            preferenceManager.getPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_ENABLED);\n+        final Long storageId = Optional.ofNullable(defaultStorageId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjcxMDAwNA==", "bodyText": "Done, checking if storage with the specified id exists", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r532710004", "createdAt": "2020-11-30T16:05:02Z", "author": {"login": "Wedds"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,26 +102,48 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Autowired\n+    private DataStorageManager dataStorageManager;\n+\n+    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     @Transactional(propagation = Propagation.REQUIRED)\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n-        Assert.isTrue(StringUtils.isNotBlank(name),\n-                messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n-        String userName = name.trim().toUpperCase();\n-        PipelineUser loadedUser = userDao.loadUserByName(userName);\n-        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n-        PipelineUser user = new PipelineUser(userName);\n-        List<Long> userRoles = getNewUserRoles(roles);\n-        user.setRoles(roleDao.loadRolesList(userRoles));\n-        user.setGroups(groups);\n-        user.setAttributes(attributes);\n-        user.setDefaultStorageId(defaultStorageId);\n-        storageValidator.validate(user);\n-        log.info(messageHelper.getMessage(MessageConstants.INFO_CREATE_USER, userName));\n-        return userDao.createUser(user, userRoles);\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        try {\n+            return createUserDefaultStorage(defaultStorageId, newUser);\n+        } catch (RuntimeException e) {\n+            log.warn(messageHelper.getMessage(MessageConstants.ERROR_DEFAULT_STORAGE_CREATION, name, e.getMessage()));\n+        }\n+        return newUser;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public PipelineUser createUserDefaultStorage(final Long defaultStorageId, final PipelineUser newUser) {\n+        final boolean shouldCreateDefaultHome =\n+            preferenceManager.getPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_ENABLED);\n+        final Long storageId = Optional.ofNullable(defaultStorageId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5OTc4MQ=="}, "originalCommit": {"oid": "48f290a1034dd57720d55c022286e251dc83d0f1"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODM5NjU4OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0MzoyNVrOH-fa_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0MzoyNVrOH-fa_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI4ODU3Mg==", "bodyText": "This parsing doesn't work: parsing of object preference to string throws error. In order to get plain sting value you can use preferenceManager.getSystemPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_TEMPLATE).getValue().\nPlease, check that tests are working properly for this case.", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r535288572", "createdAt": "2020-12-03T14:43:25Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/datastorage/DataStorageManager.java", "diffHunk": "@@ -343,6 +359,47 @@ public AbstractDataStorage updatePolicy(DataStorageVO dataStorageVO) {\n         return createdStorage;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public Optional<AbstractDataStorage> createDefaultStorageForUser(final String userName) {\n+        final DataStorageTemplate dataStorageTemplate =\n+            Optional.ofNullable(preferenceManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d409b703830d778445f1d08df6983e600bcb22e1"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODQyNjA1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0Njo0N1rOH-fqhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0Njo0N1rOH-fqhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5MjU0OA==", "bodyText": "This won't work as expected: if client specifies defaultStorageId and it doesn't exist a new storage will be create, I would expect that if invalid defaultStorageId is specified we will throw an error, as it worked previously.", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r535292548", "createdAt": "2020-12-03T14:46:47Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,26 +102,44 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Autowired\n+    private DataStorageManager dataStorageManager;\n+\n+    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     @Transactional(propagation = Propagation.REQUIRED)\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n-        Assert.isTrue(StringUtils.isNotBlank(name),\n-                messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n-        String userName = name.trim().toUpperCase();\n-        PipelineUser loadedUser = userDao.loadUserByName(userName);\n-        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n-        PipelineUser user = new PipelineUser(userName);\n-        List<Long> userRoles = getNewUserRoles(roles);\n-        user.setRoles(roleDao.loadRolesList(userRoles));\n-        user.setGroups(groups);\n-        user.setAttributes(attributes);\n-        user.setDefaultStorageId(defaultStorageId);\n-        storageValidator.validate(user);\n-        log.info(messageHelper.getMessage(MessageConstants.INFO_CREATE_USER, userName));\n-        return userDao.createUser(user, userRoles);\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        try {\n+            return initUserDefaultStorage(defaultStorageId, newUser);\n+        } catch (RuntimeException e) {\n+            log.warn(messageHelper.getMessage(MessageConstants.ERROR_DEFAULT_STORAGE_CREATION, name, e.getMessage()));\n+        }\n+        return newUser;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public PipelineUser initUserDefaultStorage(final Long defaultStorageId, final PipelineUser newUser) {\n+        final boolean shouldCreateDefaultHome =\n+            preferenceManager.getPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_ENABLED);\n+        final Long storageId = Optional.ofNullable(defaultStorageId)\n+            .filter(dataStorageManager::exists)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d409b703830d778445f1d08df6983e600bcb22e1"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODQzMDg5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0NzoxOFrOH-fs9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0NzoxOFrOH-fs9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5MzE3NQ==", "bodyText": "Please use orElseGet to prevent non needed calls", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r535293175", "createdAt": "2020-12-03T14:47:18Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,26 +102,44 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Autowired\n+    private DataStorageManager dataStorageManager;\n+\n+    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     @Transactional(propagation = Propagation.REQUIRED)\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n-        Assert.isTrue(StringUtils.isNotBlank(name),\n-                messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n-        String userName = name.trim().toUpperCase();\n-        PipelineUser loadedUser = userDao.loadUserByName(userName);\n-        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n-        PipelineUser user = new PipelineUser(userName);\n-        List<Long> userRoles = getNewUserRoles(roles);\n-        user.setRoles(roleDao.loadRolesList(userRoles));\n-        user.setGroups(groups);\n-        user.setAttributes(attributes);\n-        user.setDefaultStorageId(defaultStorageId);\n-        storageValidator.validate(user);\n-        log.info(messageHelper.getMessage(MessageConstants.INFO_CREATE_USER, userName));\n-        return userDao.createUser(user, userRoles);\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        try {\n+            return initUserDefaultStorage(defaultStorageId, newUser);\n+        } catch (RuntimeException e) {\n+            log.warn(messageHelper.getMessage(MessageConstants.ERROR_DEFAULT_STORAGE_CREATION, name, e.getMessage()));\n+        }\n+        return newUser;\n     }\n \n+    @Transactional(propagation = Propagation.REQUIRED)\n+    public PipelineUser initUserDefaultStorage(final Long defaultStorageId, final PipelineUser newUser) {\n+        final boolean shouldCreateDefaultHome =\n+            preferenceManager.getPreference(SystemPreferences.DEFAULT_USER_DATA_STORAGE_ENABLED);\n+        final Long storageId = Optional.ofNullable(defaultStorageId)\n+            .filter(dataStorageManager::exists)\n+            .orElse(shouldCreateDefaultHome", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d409b703830d778445f1d08df6983e600bcb22e1"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODQ1MjIyOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0OTo1MFrOH-f4Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo0OTo1MFrOH-f4Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTI5NjAwNw==", "bodyText": "Despite this catch clause user won't be created if an error is thrown in the underlaying calls. E.g. if an error was thrown in datastorageManager.createDefaultStorageForUser this method failed with:\norg.springframework.transaction.TransactionSystemException: Could not commit JPA transaction; nested exception is javax.persistence.RollbackException: Transaction marked as rollbackOnly\n\tat org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:526) ~[spring-orm-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:761) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:730) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:504) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:292) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96) ~[spring-tx-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:656) ~[spring-aop-4.3.7.RELEASE.jar:4.3.7.RELEASE]\n\tat com.epam.pipeline.manager.user.UserManager$$EnhancerBySpringCGLIB$$1448a1d4.createUser(<generated>) ~[main/:?]\n\tat com.epam.pipeline.manager.user.UserApiService.createUser(UserApiService.java:50) ~[main/:?]", "url": "https://github.com/epam/cloud-pipeline/pull/997#discussion_r535296007", "createdAt": "2020-12-03T14:49:50Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/user/UserManager.java", "diffHunk": "@@ -95,26 +102,44 @@\n     @Autowired\n     private MetadataManager metadataManager;\n \n+    @Autowired\n+    private GrantPermissionManager permissionManager;\n+\n+    @Autowired\n+    private DataStorageManager dataStorageManager;\n+\n+    @SuppressWarnings(\"PMD.AvoidCatchingGenericException\")\n     @Transactional(propagation = Propagation.REQUIRED)\n     public PipelineUser createUser(String name, List<Long> roles,\n                                    List<String> groups, Map<String, String> attributes,\n                                    Long defaultStorageId) {\n-        Assert.isTrue(StringUtils.isNotBlank(name),\n-                messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_REQUIRED));\n-        String userName = name.trim().toUpperCase();\n-        PipelineUser loadedUser = userDao.loadUserByName(userName);\n-        Assert.isNull(loadedUser, messageHelper.getMessage(MessageConstants.ERROR_USER_NAME_EXISTS, name));\n-        PipelineUser user = new PipelineUser(userName);\n-        List<Long> userRoles = getNewUserRoles(roles);\n-        user.setRoles(roleDao.loadRolesList(userRoles));\n-        user.setGroups(groups);\n-        user.setAttributes(attributes);\n-        user.setDefaultStorageId(defaultStorageId);\n-        storageValidator.validate(user);\n-        log.info(messageHelper.getMessage(MessageConstants.INFO_CREATE_USER, userName));\n-        return userDao.createUser(user, userRoles);\n+        final PipelineUser newUser = createUser(name, roles, groups, attributes);\n+        try {\n+            return initUserDefaultStorage(defaultStorageId, newUser);\n+        } catch (RuntimeException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d409b703830d778445f1d08df6983e600bcb22e1"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 425, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}