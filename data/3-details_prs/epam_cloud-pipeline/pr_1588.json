{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NzM4MzU1", "number": 1588, "title": "Issue #1404: Implemented tests for EntityApiService", "bodyText": "Issue #1404\nSigned-off-by: Iurii_Kofanov youkofan@gmail.com", "createdAt": "2020-11-20T14:22:55Z", "url": "https://github.com/epam/cloud-pipeline/pull/1588", "merged": true, "mergeCommit": {"oid": "91c3cb3f96a43ba30ea64835d0fb1089e6f2ea4f"}, "closed": true, "closedAt": "2020-12-08T09:04:44Z", "author": {"login": "YouKofan"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdfraVPAFqTUzNzYwNzQ2NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkGIHMABqjQwODM2MDUxNjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NjA3NDY0", "url": "https://github.com/epam/cloud-pipeline/pull/1588#pullrequestreview-537607464", "createdAt": "2020-11-24T15:17:05Z", "commit": {"oid": "438fe37cc70370992a8aaceb9f82729cf4369710"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNToxNzowNVrOH5FseQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNToyMjo1NVrOH5F_Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYyNDE4NQ==", "bodyText": "It seems that AbstractDataStorage already has aclClass fields set to AclClass.DATA_STORAGE. Do we really need that to be specified explicitly?", "url": "https://github.com/epam/cloud-pipeline/pull/1588#discussion_r529624185", "createdAt": "2020-11-24T15:17:05Z", "author": {"login": "tcibinan"}, "path": "api/src/test/java/com/epam/pipeline/acl/entity/EntityApiServiceTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2017-2020 EPAM Systems, Inc. (https://www.epam.com/)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.epam.pipeline.acl.entity;\n+\n+import com.epam.pipeline.entity.AbstractSecuredEntity;\n+import com.epam.pipeline.entity.datastorage.aws.S3bucketDataStorage;\n+import com.epam.pipeline.entity.security.acl.AclClass;\n+import com.epam.pipeline.entity.security.acl.AclSid;\n+import com.epam.pipeline.manager.EntityManager;\n+import com.epam.pipeline.manager.HierarchicalEntityManager;\n+import com.epam.pipeline.security.acl.AclPermission;\n+import com.epam.pipeline.test.acl.AbstractAclTest;\n+import com.epam.pipeline.test.creator.datastorage.DatastorageCreatorUtils;\n+import com.epam.pipeline.test.creator.security.SecurityCreatorUtils;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.AccessDeniedException;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static com.epam.pipeline.test.creator.CommonCreatorConstants.ID;\n+import static com.epam.pipeline.test.creator.CommonCreatorConstants.TEST_STRING;\n+import static com.epam.pipeline.util.CustomAssertions.assertThrows;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.doReturn;\n+\n+public class EntityApiServiceTest extends AbstractAclTest {\n+\n+    private final S3bucketDataStorage s3bucket = DatastorageCreatorUtils.getS3bucketDataStorage(ID, OWNER_USER);\n+    private final Map<AclClass, List<AbstractSecuredEntity>> aclEntityMap =\n+            Collections.singletonMap(AclClass.DATA_STORAGE, Collections.singletonList(s3bucket));\n+    private final AclSid aclSid = SecurityCreatorUtils.getAclSid();\n+\n+    @Autowired\n+    private EntityApiService entityApiService;\n+\n+    @Autowired\n+    private EntityManager mockEntityManager;\n+\n+    @Autowired\n+    private HierarchicalEntityManager mockHierarchicalEntityManager;\n+\n+    @Test\n+    @WithMockUser(roles = ADMIN_ROLE)\n+    public void shouldLoadEntityForAdmin() {\n+        doReturn(s3bucket).when(mockEntityManager).loadByNameOrId(AclClass.DATA_STORAGE, TEST_STRING);\n+\n+        assertThat(entityApiService.loadByNameOrId(AclClass.DATA_STORAGE, TEST_STRING)).isEqualTo(s3bucket);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = SIMPLE_USER)\n+    public void shouldLoadEntityWhenPermissionIsGranted() {\n+        s3bucket.setAclClass(AclClass.DATA_STORAGE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "438fe37cc70370992a8aaceb9f82729cf4369710"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYyODU1Mg==", "bodyText": "Let's move it to AclTestBeans.", "url": "https://github.com/epam/cloud-pipeline/pull/1588#discussion_r529628552", "createdAt": "2020-11-24T15:22:23Z", "author": {"login": "tcibinan"}, "path": "api/src/test/java/com/epam/pipeline/app/AclTestConfiguration.java", "diffHunk": "@@ -214,6 +215,9 @@\n     @MockBean\n     protected PipelineRunDockerOperationManager pipelineRunDockerOperationManager;\n \n+    @MockBean", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "438fe37cc70370992a8aaceb9f82729cf4369710"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTYyODk5NA==", "bodyText": "Not required brackets can be omitted.", "url": "https://github.com/epam/cloud-pipeline/pull/1588#discussion_r529628994", "createdAt": "2020-11-24T15:22:55Z", "author": {"login": "tcibinan"}, "path": "api/src/test/java/com/epam/pipeline/acl/entity/EntityApiServiceTest.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2017-2020 EPAM Systems, Inc. (https://www.epam.com/)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.epam.pipeline.acl.entity;\n+\n+import com.epam.pipeline.entity.AbstractSecuredEntity;\n+import com.epam.pipeline.entity.datastorage.aws.S3bucketDataStorage;\n+import com.epam.pipeline.entity.security.acl.AclClass;\n+import com.epam.pipeline.entity.security.acl.AclSid;\n+import com.epam.pipeline.manager.EntityManager;\n+import com.epam.pipeline.manager.HierarchicalEntityManager;\n+import com.epam.pipeline.security.acl.AclPermission;\n+import com.epam.pipeline.test.acl.AbstractAclTest;\n+import com.epam.pipeline.test.creator.datastorage.DatastorageCreatorUtils;\n+import com.epam.pipeline.test.creator.security.SecurityCreatorUtils;\n+import org.junit.Test;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.security.access.AccessDeniedException;\n+import org.springframework.security.test.context.support.WithMockUser;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+import static com.epam.pipeline.test.creator.CommonCreatorConstants.ID;\n+import static com.epam.pipeline.test.creator.CommonCreatorConstants.TEST_STRING;\n+import static com.epam.pipeline.util.CustomAssertions.assertThrows;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.mockito.Mockito.doReturn;\n+\n+public class EntityApiServiceTest extends AbstractAclTest {\n+\n+    private final S3bucketDataStorage s3bucket = DatastorageCreatorUtils.getS3bucketDataStorage(ID, OWNER_USER);\n+    private final Map<AclClass, List<AbstractSecuredEntity>> aclEntityMap =\n+            Collections.singletonMap(AclClass.DATA_STORAGE, Collections.singletonList(s3bucket));\n+    private final AclSid aclSid = SecurityCreatorUtils.getAclSid();\n+\n+    @Autowired\n+    private EntityApiService entityApiService;\n+\n+    @Autowired\n+    private EntityManager mockEntityManager;\n+\n+    @Autowired\n+    private HierarchicalEntityManager mockHierarchicalEntityManager;\n+\n+    @Test\n+    @WithMockUser(roles = ADMIN_ROLE)\n+    public void shouldLoadEntityForAdmin() {\n+        doReturn(s3bucket).when(mockEntityManager).loadByNameOrId(AclClass.DATA_STORAGE, TEST_STRING);\n+\n+        assertThat(entityApiService.loadByNameOrId(AclClass.DATA_STORAGE, TEST_STRING)).isEqualTo(s3bucket);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = SIMPLE_USER)\n+    public void shouldLoadEntityWhenPermissionIsGranted() {\n+        s3bucket.setAclClass(AclClass.DATA_STORAGE);\n+        initAclEntity(s3bucket, AclPermission.READ);\n+        doReturn(s3bucket).when(mockEntityManager).loadByNameOrId(AclClass.DATA_STORAGE, TEST_STRING);\n+        doReturn(s3bucket).when(mockEntityManager).load(AclClass.DATA_STORAGE, ID);\n+        mockSecurityContext();\n+        assertThat(entityApiService.loadByNameOrId(AclClass.DATA_STORAGE, TEST_STRING)).isEqualTo(s3bucket);\n+    }\n+\n+    @Test\n+    @WithMockUser\n+    public void shouldDenyLoadEntityWhenPermissionIsNotGranted() {\n+        s3bucket.setAclClass(AclClass.DATA_STORAGE);\n+        initAclEntity(s3bucket);\n+        doReturn(s3bucket).when(mockEntityManager).loadByNameOrId(AclClass.DATA_STORAGE, TEST_STRING);\n+        doReturn(s3bucket).when(mockEntityManager).load(AclClass.DATA_STORAGE, ID);\n+        mockSecurityContext();\n+\n+        assertThrows(AccessDeniedException.class, () ->\n+                entityApiService.loadByNameOrId(AclClass.DATA_STORAGE, TEST_STRING));\n+    }\n+\n+    @Test\n+    @WithMockUser(roles = ADMIN_ROLE)\n+    public void shouldLoadAvailableEntityForAdmin() {\n+        doReturn(aclEntityMap).when(mockHierarchicalEntityManager).loadAvailable(aclSid, AclClass.DATA_STORAGE);\n+\n+        assertThat(entityApiService.loadAvailable(aclSid, AclClass.DATA_STORAGE)).isEqualTo(aclEntityMap);\n+    }\n+\n+    @Test\n+    @WithMockUser()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "438fe37cc70370992a8aaceb9f82729cf4369710"}, "originalPosition": 101}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNzE3ODUy", "url": "https://github.com/epam/cloud-pipeline/pull/1588#pullrequestreview-540717852", "createdAt": "2020-11-30T09:14:12Z", "commit": {"oid": "eb4482744bcf6cf999a12df2fcc0698198c0dadb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ba7267f98afa279a4e47fb163e20fed27bce3c2", "author": {"user": {"login": "YouKofan", "name": "Iurii Kofanov"}}, "url": "https://github.com/epam/cloud-pipeline/commit/5ba7267f98afa279a4e47fb163e20fed27bce3c2", "committedDate": "2020-12-08T08:33:03Z", "message": "Issue #1404: Implemented tests for EntityApiService\n\nSigned-off-by: Iurii_Kofanov <youkofan@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf995cb7a8fd2e3ec6958dfe2ca93097c24fd4f9", "author": {"user": {"login": "YouKofan", "name": "Iurii Kofanov"}}, "url": "https://github.com/epam/cloud-pipeline/commit/cf995cb7a8fd2e3ec6958dfe2ca93097c24fd4f9", "committedDate": "2020-12-08T08:33:14Z", "message": "Issue #1404: Minor improvements in accordance with comments\n\nSigned-off-by: Iurii_Kofanov <youkofan@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "473c4517eb32b7908fe54aa85e83d59976e7045b", "author": {"user": {"login": "YouKofan", "name": "Iurii Kofanov"}}, "url": "https://github.com/epam/cloud-pipeline/commit/473c4517eb32b7908fe54aa85e83d59976e7045b", "committedDate": "2020-12-08T08:46:27Z", "message": "Issue #1404: Branch rebased, merge conflicts resolved\n\nSigned-off-by: Iurii_Kofanov <youkofan@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb4482744bcf6cf999a12df2fcc0698198c0dadb", "author": {"user": {"login": "YouKofan", "name": "Iurii Kofanov"}}, "url": "https://github.com/epam/cloud-pipeline/commit/eb4482744bcf6cf999a12df2fcc0698198c0dadb", "committedDate": "2020-11-27T15:04:00Z", "message": "Issue #1404: Minor improvements in accordance with comments\n\nSigned-off-by: Iurii_Kofanov <youkofan@gmail.com>"}, "afterCommit": {"oid": "473c4517eb32b7908fe54aa85e83d59976e7045b", "author": {"user": {"login": "YouKofan", "name": "Iurii Kofanov"}}, "url": "https://github.com/epam/cloud-pipeline/commit/473c4517eb32b7908fe54aa85e83d59976e7045b", "committedDate": "2020-12-08T08:46:27Z", "message": "Issue #1404: Branch rebased, merge conflicts resolved\n\nSigned-off-by: Iurii_Kofanov <youkofan@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3735, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}