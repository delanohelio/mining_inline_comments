{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyNDc5ODk3", "number": 1664, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzoxNzowMFrOFIPAJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzoxNzozMVrOFIPA0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MTc4NzI1OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/cluster/NodesManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzoxNzowMFrOIKCnNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzoxNzowMFrOIKCnNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5OTQ3OA==", "bodyText": "I'd suggest to reuse labelsMap (line 145) as it used for filtering by labels - just what we need here.", "url": "https://github.com/epam/cloud-pipeline/pull/1664#discussion_r547399478", "createdAt": "2020-12-22T17:17:00Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/cluster/NodesManager.java", "diffHunk": "@@ -153,8 +153,14 @@ public void init() {\n                         address.getAddress().equalsIgnoreCase(filterNodesVO.getAddress());\n                 addressFilter = node ->\n                         node.getAddresses() != null && node.getAddresses()\n-                                .stream()\n-                                .filter(addressEqualsPredicate).count() > 0;\n+                                .stream().anyMatch(addressEqualsPredicate);\n+            }\n+            Predicate<NodeInstance> labelsFilter = node -> true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbd29c0d962c26dd708bfbac5fac64be9307509"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MTc4ODk5OnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/manager/cluster/NodesManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzoxNzozMVrOIKCoRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxNzoxNzozMVrOIKCoRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzM5OTc0OQ==", "bodyText": "You can use MapUtils.isNotEmpty fro such check", "url": "https://github.com/epam/cloud-pipeline/pull/1664#discussion_r547399749", "createdAt": "2020-12-22T17:17:31Z", "author": {"login": "mzueva"}, "path": "api/src/main/java/com/epam/pipeline/manager/cluster/NodesManager.java", "diffHunk": "@@ -153,8 +153,14 @@ public void init() {\n                         address.getAddress().equalsIgnoreCase(filterNodesVO.getAddress());\n                 addressFilter = node ->\n                         node.getAddresses() != null && node.getAddresses()\n-                                .stream()\n-                                .filter(addressEqualsPredicate).count() > 0;\n+                                .stream().anyMatch(addressEqualsPredicate);\n+            }\n+            Predicate<NodeInstance> labelsFilter = node -> true;\n+            if (filterNodesVO.getLabels() != null && !filterNodesVO.getLabels().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbd29c0d962c26dd708bfbac5fac64be9307509"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 232, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}