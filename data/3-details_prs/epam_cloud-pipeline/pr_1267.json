{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NjQxOTk0", "number": 1267, "title": "Issue #1245 Change endpoints processing in cp-edge", "bodyText": "This PR is related to issue #1245\nIt changes the way of endpoints' processing in cp-edge service:\n\nsystem endpoints are configured via JSON file\nsystem endpoints can be applied to 'non-interactive' tools", "createdAt": "2020-08-12T09:25:54Z", "url": "https://github.com/epam/cloud-pipeline/pull/1267", "merged": true, "mergeCommit": {"oid": "5ae48a168324b4b355f475b36abd88c7d6effb36"}, "closed": true, "closedAt": "2020-09-03T14:26:22Z", "author": {"login": "Wedds"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-H1IEgH2gAyNDY2NjQxOTk0OjMyNjYyYTU0MTAxZDBmMDcxODJjNmY3MWNlYjJlMDliM2NlNjY5NDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFQy8fgFqTQ4MTg0OTg4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "32662a54101d0f07182c6f71ceb2e09b3ce66940", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/32662a54101d0f07182c6f71ceb2e09b3ce66940", "committedDate": "2020-08-12T09:16:45Z", "message": "Issue #1245 Setup system endpoints via the configuration file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ae9294077bb55f7b54e2bc63a861828b49e4517", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/7ae9294077bb55f7b54e2bc63a861828b49e4517", "committedDate": "2020-08-12T09:18:28Z", "message": "Issue #1245 Allow adding system endpoints to non-interactive runs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02f59c0342745ced734c89cbbabdb26b36afb96e", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/02f59c0342745ced734c89cbbabdb26b36afb96e", "committedDate": "2020-08-12T09:20:32Z", "message": "Issue #1245 Do not apply system endpoint if the same one exists in the tool settings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NzA2MTA2", "url": "https://github.com/epam/cloud-pipeline/pull/1267#pullrequestreview-478706106", "createdAt": "2020-08-31T15:16:49Z", "commit": {"oid": "02f59c0342745ced734c89cbbabdb26b36afb96e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToxNjo0OVrOHJ9ENQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNToxNjo0OVrOHJ9ENQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE5OTczMw==", "bodyText": "The PipelineRunParameter object hasn't friendly_name field. So, this line may lead to KeyError.", "url": "https://github.com/epam/cloud-pipeline/pull/1267#discussion_r480199733", "createdAt": "2020-08-31T15:16:49Z", "author": {"login": "ekazachkova"}, "path": "deploy/docker/cp-edge/sync-routes.py", "diffHunk": "@@ -245,24 +246,41 @@ def search_custom_domain_cert(domain):\n         if not cert_path or not key_path:\n                 cert_path = pki_default_cert\n                 key_path = pki_default_cert_key\n-        \n+\n         print('Certificate:Key for {} will be used: {}:{}'.format(domain, cert_path, key_path))\n         return (cert_path, key_path)\n \n-# FIXME: once we'll get more than one \"system endpoint\" - a list of such endpoints shall be moved to the configuration\n-SYSTEM_ENDPOINTS={ \"CP_CAP_SPARK\": { \n-                        \"value\": \"true\", \n-                        \"endpoint\": str(os.environ.get(\"CP_CAP_SPARK_UI_PROXY_PORT\", \"8088\")), \n-                        \"endpoint_num\":  str(os.environ.get(\"CP_CAP_SPARK_UI_PROXY_ENDPOINT_ID\", \"1000\")),\n-                        \"friendly_name\": \"SparkUI\" }}\n+def read_system_endpoints():\n+        system_endpoints = {}\n+        with open(nginx_system_endpoints_config_path, 'r') as system_endpoints_file:\n+                system_endpoints_list = json.load(system_endpoints_file)\n+                for endpoint in system_endpoints_list:\n+                        system_endpoints[endpoint['name']] = {\n+                                \"value\": \"true\",\n+                                \"endpoint\": str(os.environ.get(endpoint['endpoint_env'],\n+                                                               endpoint['endpoint_default'])),\n+                                \"endpoint_num\":  str(os.environ.get(endpoint['endpoint_num_env'],\n+                                                                    endpoint['endpoint_num_default'])),\n+                                \"friendly_name\": endpoint['friendly_name']\n+                        }\n+        return system_endpoints\n+\n+SYSTEM_ENDPOINTS = read_system_endpoints()\n+\n def append_system_endpoints(tool_endpoints, run_details):\n         if not tool_endpoints:\n                 tool_endpoints = []\n         system_endpoints_params = SYSTEM_ENDPOINTS.keys()\n+        tool_endpoints_dict = {}\n+        for endpoint in tool_endpoints:\n+                endpoint_obj = json.loads(endpoint)\n+                tool_endpoints_dict[endpoint_obj['name']] = endpoint_obj['nginx']['port']\n         if run_details and \"pipelineRunParameters\" in run_details:\n                 # Get a list of endpoints from SYSTEM_ENDPOINTS which match the run's parameters (param name and a value)\n-                system_endpoints_matched = [SYSTEM_ENDPOINTS[x[\"name\"]] for x in run_details[\"pipelineRunParameters\"] \n-                                                if x[\"name\"] in system_endpoints_params \n+                system_endpoints_matched = [SYSTEM_ENDPOINTS[x[\"name\"]] for x in run_details[\"pipelineRunParameters\"]\n+                                                if x[\"name\"] in system_endpoints_params\n+                                                   and (x[\"friendly_name\"] not in tool_endpoints_dict", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f59c0342745ced734c89cbbabdb26b36afb96e"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NzI5MDc4", "url": "https://github.com/epam/cloud-pipeline/pull/1267#pullrequestreview-478729078", "createdAt": "2020-08-31T15:42:54Z", "commit": {"oid": "02f59c0342745ced734c89cbbabdb26b36afb96e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTo0Mjo1NFrOHJ-K4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNTo0Mjo1NFrOHJ-K4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDIxNzgyNQ==", "bodyText": "May the endpoint_obj['nginx'] returns None? ( check for that case )", "url": "https://github.com/epam/cloud-pipeline/pull/1267#discussion_r480217825", "createdAt": "2020-08-31T15:42:54Z", "author": {"login": "ekazachkova"}, "path": "deploy/docker/cp-edge/sync-routes.py", "diffHunk": "@@ -245,24 +246,41 @@ def search_custom_domain_cert(domain):\n         if not cert_path or not key_path:\n                 cert_path = pki_default_cert\n                 key_path = pki_default_cert_key\n-        \n+\n         print('Certificate:Key for {} will be used: {}:{}'.format(domain, cert_path, key_path))\n         return (cert_path, key_path)\n \n-# FIXME: once we'll get more than one \"system endpoint\" - a list of such endpoints shall be moved to the configuration\n-SYSTEM_ENDPOINTS={ \"CP_CAP_SPARK\": { \n-                        \"value\": \"true\", \n-                        \"endpoint\": str(os.environ.get(\"CP_CAP_SPARK_UI_PROXY_PORT\", \"8088\")), \n-                        \"endpoint_num\":  str(os.environ.get(\"CP_CAP_SPARK_UI_PROXY_ENDPOINT_ID\", \"1000\")),\n-                        \"friendly_name\": \"SparkUI\" }}\n+def read_system_endpoints():\n+        system_endpoints = {}\n+        with open(nginx_system_endpoints_config_path, 'r') as system_endpoints_file:\n+                system_endpoints_list = json.load(system_endpoints_file)\n+                for endpoint in system_endpoints_list:\n+                        system_endpoints[endpoint['name']] = {\n+                                \"value\": \"true\",\n+                                \"endpoint\": str(os.environ.get(endpoint['endpoint_env'],\n+                                                               endpoint['endpoint_default'])),\n+                                \"endpoint_num\":  str(os.environ.get(endpoint['endpoint_num_env'],\n+                                                                    endpoint['endpoint_num_default'])),\n+                                \"friendly_name\": endpoint['friendly_name']\n+                        }\n+        return system_endpoints\n+\n+SYSTEM_ENDPOINTS = read_system_endpoints()\n+\n def append_system_endpoints(tool_endpoints, run_details):\n         if not tool_endpoints:\n                 tool_endpoints = []\n         system_endpoints_params = SYSTEM_ENDPOINTS.keys()\n+        tool_endpoints_dict = {}\n+        for endpoint in tool_endpoints:\n+                endpoint_obj = json.loads(endpoint)\n+                tool_endpoints_dict[endpoint_obj['name']] = endpoint_obj['nginx']['port']", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02f59c0342745ced734c89cbbabdb26b36afb96e"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a727643bb25e9f36e285a78adb381a2d5dcad1d", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/5a727643bb25e9f36e285a78adb381a2d5dcad1d", "committedDate": "2020-08-31T17:00:51Z", "message": "Issue #1245 Check if conversion from tool's endpoint json is successful"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28902d9aa29ecaa986bc84fa99f1b737c12b99d9", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/28902d9aa29ecaa986bc84fa99f1b737c12b99d9", "committedDate": "2020-08-31T17:04:16Z", "message": "Issue #1245 Fix procedure of checking if required system endpoint is presented in tool endpoints already"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09c80a58ab6359f34de2ecbef5c6a370a06f13c8", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/09c80a58ab6359f34de2ecbef5c6a370a06f13c8", "committedDate": "2020-09-01T12:06:18Z", "message": "Issue #1245 Check existence of the name and port, before adding tool endpoint to a dict for resolving clashes with system endpoints"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "161365f96adda3f37f39a38f745bc9e992646d54", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/161365f96adda3f37f39a38f745bc9e992646d54", "committedDate": "2020-09-01T18:41:45Z", "message": "Issue #1245 Load non-interactive pipelines with system endpoints to proceed in routing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "644107be4154dec33719986a6560c950ee9c5cad", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/644107be4154dec33719986a6560c950ee9c5cad", "committedDate": "2020-09-02T13:44:45Z", "message": "Issue #1245 Override tool endpoints with corresponding by name and endpoint num system ones"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNjk5OTQ0", "url": "https://github.com/epam/cloud-pipeline/pull/1267#pullrequestreview-481699944", "createdAt": "2020-09-03T10:19:10Z", "commit": {"oid": "644107be4154dec33719986a6560c950ee9c5cad"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDoxOToxMFrOHMgEEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToxMjowNVrOHMhv6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg3MDI5MQ==", "bodyText": "Lets continue to use naming convention lower_case_with_underscores in this script", "url": "https://github.com/epam/cloud-pipeline/pull/1267#discussion_r482870291", "createdAt": "2020-09-03T10:19:10Z", "author": {"login": "ekazachkova"}, "path": "deploy/docker/cp-edge/sync-routes.py", "diffHunk": "@@ -273,16 +286,48 @@ def append_system_endpoints(tool_endpoints, run_details):\n                         current_tool_endpoint = json.loads(tool_endpoints[0])\n                         current_tool_endpoint[\"isDefault\"] = \"true\"\n                         tool_endpoints[0] = json.dumps(current_tool_endpoint)\n-\n                 # Append system endpoints to the existing list\n                 for system_endpoint in system_endpoints_matched:\n-                        tool_endpoint = { \"nginx\": { \"port\": system_endpoint[\"endpoint\"] }, \"isDefault\": \"false\" }\n+                        tool_endpoint = { \"nginx\": { \"port\": system_endpoint[\"endpoint\"] }}\n+                        system_endpoint_port = system_endpoint[\"endpoint\"]\n+                        system_endpoint_name = None\n                         if \"friendly_name\" in system_endpoint:\n                                 tool_endpoint[\"name\"] = system_endpoint[\"friendly_name\"]\n+                                system_endpoint_name = system_endpoint[\"friendly_name\"]\n                         if \"endpoint_num\" in system_endpoint and system_endpoint[\"endpoint_num\"]:\n                                 tool_endpoint[\"endpoint_num\"] = system_endpoint[\"endpoint_num\"]\n+                        modified_tool_endpoints, modified_count, isDefaultEndpoint = \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644107be4154dec33719986a6560c950ee9c5cad"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg3MDM5Nw==", "bodyText": "Lets continue to use naming convention lower_case_with_underscores in this script", "url": "https://github.com/epam/cloud-pipeline/pull/1267#discussion_r482870397", "createdAt": "2020-09-03T10:19:20Z", "author": {"login": "ekazachkova"}, "path": "deploy/docker/cp-edge/sync-routes.py", "diffHunk": "@@ -273,16 +286,48 @@ def append_system_endpoints(tool_endpoints, run_details):\n                         current_tool_endpoint = json.loads(tool_endpoints[0])\n                         current_tool_endpoint[\"isDefault\"] = \"true\"\n                         tool_endpoints[0] = json.dumps(current_tool_endpoint)\n-\n                 # Append system endpoints to the existing list\n                 for system_endpoint in system_endpoints_matched:\n-                        tool_endpoint = { \"nginx\": { \"port\": system_endpoint[\"endpoint\"] }, \"isDefault\": \"false\" }\n+                        tool_endpoint = { \"nginx\": { \"port\": system_endpoint[\"endpoint\"] }}\n+                        system_endpoint_port = system_endpoint[\"endpoint\"]\n+                        system_endpoint_name = None\n                         if \"friendly_name\" in system_endpoint:\n                                 tool_endpoint[\"name\"] = system_endpoint[\"friendly_name\"]\n+                                system_endpoint_name = system_endpoint[\"friendly_name\"]\n                         if \"endpoint_num\" in system_endpoint and system_endpoint[\"endpoint_num\"]:\n                                 tool_endpoint[\"endpoint_num\"] = system_endpoint[\"endpoint_num\"]\n+                        modified_tool_endpoints, modified_count, isDefaultEndpoint = \\\n+                                remove_from_tool_endpoints_if_fully_matches(system_endpoint_name,\n+                                                                            system_endpoint_port, tool_endpoints)\n+                        tool_endpoint[\"isDefault\"] = str(isDefaultEndpoint).lower()\n+                        if modified_count != 0:\n+                                tool_endpoints = modified_tool_endpoints\n+                                modified_endpoints_count += modified_count\n                         tool_endpoints.append(json.dumps(tool_endpoint))\n-        return tool_endpoints \n+        return tool_endpoints, modified_endpoints_count\n+\n+\n+def remove_from_tool_endpoints_if_fully_matches(endpoint_name, endpoint_port, tool_endpoints):\n+        tools_endpoints_wo_matches = []\n+        endpoints_modified = 0\n+        isModifiedDefault = False", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644107be4154dec33719986a6560c950ee9c5cad"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg3MDgxMA==", "bodyText": "Is it correct field name?", "url": "https://github.com/epam/cloud-pipeline/pull/1267#discussion_r482870810", "createdAt": "2020-09-03T10:20:04Z", "author": {"login": "ekazachkova"}, "path": "deploy/docker/cp-edge/sync-routes.py", "diffHunk": "@@ -273,16 +286,48 @@ def append_system_endpoints(tool_endpoints, run_details):\n                         current_tool_endpoint = json.loads(tool_endpoints[0])\n                         current_tool_endpoint[\"isDefault\"] = \"true\"\n                         tool_endpoints[0] = json.dumps(current_tool_endpoint)\n-\n                 # Append system endpoints to the existing list\n                 for system_endpoint in system_endpoints_matched:\n-                        tool_endpoint = { \"nginx\": { \"port\": system_endpoint[\"endpoint\"] }, \"isDefault\": \"false\" }\n+                        tool_endpoint = { \"nginx\": { \"port\": system_endpoint[\"endpoint\"] }}\n+                        system_endpoint_port = system_endpoint[\"endpoint\"]\n+                        system_endpoint_name = None\n                         if \"friendly_name\" in system_endpoint:\n                                 tool_endpoint[\"name\"] = system_endpoint[\"friendly_name\"]\n+                                system_endpoint_name = system_endpoint[\"friendly_name\"]\n                         if \"endpoint_num\" in system_endpoint and system_endpoint[\"endpoint_num\"]:\n                                 tool_endpoint[\"endpoint_num\"] = system_endpoint[\"endpoint_num\"]\n+                        modified_tool_endpoints, modified_count, isDefaultEndpoint = \\\n+                                remove_from_tool_endpoints_if_fully_matches(system_endpoint_name,\n+                                                                            system_endpoint_port, tool_endpoints)\n+                        tool_endpoint[\"isDefault\"] = str(isDefaultEndpoint).lower()\n+                        if modified_count != 0:\n+                                tool_endpoints = modified_tool_endpoints\n+                                modified_endpoints_count += modified_count\n                         tool_endpoints.append(json.dumps(tool_endpoint))\n-        return tool_endpoints \n+        return tool_endpoints, modified_endpoints_count\n+\n+\n+def remove_from_tool_endpoints_if_fully_matches(endpoint_name, endpoint_port, tool_endpoints):\n+        tools_endpoints_wo_matches = []", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644107be4154dec33719986a6560c950ee9c5cad"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg5NDE0OQ==", "bodyText": "Should we add check 'spec' and 'containers' for existence and pod['spec']['containers'][0] for not null?", "url": "https://github.com/epam/cloud-pipeline/pull/1267#discussion_r482894149", "createdAt": "2020-09-03T11:04:50Z", "author": {"login": "ekazachkova"}, "path": "deploy/docker/cp-edge/sync-routes.py", "diffHunk": "@@ -412,17 +463,35 @@ def get_service_list(pod_id, pod_run_id, pod_ip):\n         print('EDGE service port: ' + str(edge_service_port))\n         print('EDGE service ip: ' + edge_service_external_ip)\n \n-# From each pod with \"job-type=Service\"  we shall take:\n+# From each pod with a container, which has endpoints (\"job-type=Service\" or container's environment\n+# has a parameter from SYSTEM_ENDPOINTS) we shall take:\n # -- PodIP\n # -- PodID\n # -- N entries by a template\n # --- svc-port-N\n # --- svc-path-N\n-pods = Pod.objects(kube_api).filter(selector={'job-type': 'Service'})\\\n-                            .filter(field_selector={\"status.phase\": \"Running\"})\n+\n+def load_pods_for_runs_with_endpoints():\n+        pods_with_endpoints = []\n+        all_pipeline_pods = Pod.objects(kube_api).filter(selector={'type': 'pipeline'})\\\n+                                                 .filter(field_selector={\"status.phase\": \"Running\"})\n+        for pod in all_pipeline_pods.response['items']:\n+                labels = pod['metadata']['labels']\n+                if 'job-type' in labels and labels['job-type'] == 'Service':\n+                        pods_with_endpoints.append(pod)\n+                        continue\n+                pipeline_env_parameters = pod['spec']['containers'][0]['env']", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644107be4154dec33719986a6560c950ee9c5cad"}, "originalPosition": 293}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg5Nzg5OA==", "bodyText": "According to this naming, it looks like modified_count = len(modified_tool_endpoints) but this is not true. Maybe we should make more understandable names?", "url": "https://github.com/epam/cloud-pipeline/pull/1267#discussion_r482897898", "createdAt": "2020-09-03T11:12:05Z", "author": {"login": "ekazachkova"}, "path": "deploy/docker/cp-edge/sync-routes.py", "diffHunk": "@@ -273,16 +286,48 @@ def append_system_endpoints(tool_endpoints, run_details):\n                         current_tool_endpoint = json.loads(tool_endpoints[0])\n                         current_tool_endpoint[\"isDefault\"] = \"true\"\n                         tool_endpoints[0] = json.dumps(current_tool_endpoint)\n-\n                 # Append system endpoints to the existing list\n                 for system_endpoint in system_endpoints_matched:\n-                        tool_endpoint = { \"nginx\": { \"port\": system_endpoint[\"endpoint\"] }, \"isDefault\": \"false\" }\n+                        tool_endpoint = { \"nginx\": { \"port\": system_endpoint[\"endpoint\"] }}\n+                        system_endpoint_port = system_endpoint[\"endpoint\"]\n+                        system_endpoint_name = None\n                         if \"friendly_name\" in system_endpoint:\n                                 tool_endpoint[\"name\"] = system_endpoint[\"friendly_name\"]\n+                                system_endpoint_name = system_endpoint[\"friendly_name\"]\n                         if \"endpoint_num\" in system_endpoint and system_endpoint[\"endpoint_num\"]:\n                                 tool_endpoint[\"endpoint_num\"] = system_endpoint[\"endpoint_num\"]\n+                        modified_tool_endpoints, modified_count, isDefaultEndpoint = \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "644107be4154dec33719986a6560c950ee9c5cad"}, "originalPosition": 97}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "125ee2de74082405947a0f8e25317572ce6967ce", "author": {"user": {"login": "Wedds", "name": "Andrey Georgitsa"}}, "url": "https://github.com/epam/cloud-pipeline/commit/125ee2de74082405947a0f8e25317572ce6967ce", "committedDate": "2020-09-03T12:36:38Z", "message": "Issue #1245 Fix naming up to conventions, expand response verification during the search of interactive runs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxODQ5ODg5", "url": "https://github.com/epam/cloud-pipeline/pull/1267#pullrequestreview-481849889", "createdAt": "2020-09-03T13:40:59Z", "commit": {"oid": "125ee2de74082405947a0f8e25317572ce6967ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3811, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}