{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2NDMxOTc1", "number": 1700, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxMDoxMjo1N1rOFPI4ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxMDoxOToxMlrOFQznjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNDE4NTU0OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/com/epam/pipeline/test/jdbc/JdbcTestBeans.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxMDoxMjo1N1rOIUVKKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxMDoxMjo1N1rOIUVKKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODE4OTA5OA==", "bodyText": "Looks like this wiring is useless since we have CommonTestContext configuration.", "url": "https://github.com/epam/cloud-pipeline/pull/1700#discussion_r558189098", "createdAt": "2021-01-15T10:12:57Z", "author": {"login": "ekazachkova"}, "path": "api/src/test/java/com/epam/pipeline/test/jdbc/JdbcTestBeans.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2017-2021 EPAM Systems, Inc. (https://www.epam.com/)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.epam.pipeline.test.jdbc;\n+\n+import com.epam.pipeline.common.MessageHelper;\n+import com.epam.pipeline.dao.DaoHelper;\n+import com.epam.pipeline.dao.notification.MonitoringNotificationDao;\n+import com.epam.pipeline.dao.pipeline.PipelineDao;\n+import com.epam.pipeline.manager.EntityManager;\n+import com.epam.pipeline.manager.configuration.RunConfigurationManager;\n+import com.epam.pipeline.manager.git.GitManager;\n+import com.epam.pipeline.manager.issue.AttachmentFileManager;\n+import com.epam.pipeline.manager.issue.IssueManager;\n+import com.epam.pipeline.manager.metadata.MetadataManager;\n+import com.epam.pipeline.manager.notification.NotificationManager;\n+import com.epam.pipeline.manager.pipeline.FolderManager;\n+import com.epam.pipeline.manager.pipeline.PipelineCRUDManager;\n+import com.epam.pipeline.manager.pipeline.PipelineManager;\n+import com.epam.pipeline.manager.pipeline.PipelineRunManager;\n+import com.epam.pipeline.manager.pipeline.RestartRunManager;\n+import com.epam.pipeline.manager.pipeline.RunScheduleManager;\n+import com.epam.pipeline.manager.pipeline.RunStatusManager;\n+import com.epam.pipeline.manager.pipeline.ToolManager;\n+import com.epam.pipeline.manager.pipeline.runner.ConfigurationProviderManager;\n+import com.epam.pipeline.manager.scheduling.RunScheduler;\n+import com.epam.pipeline.manager.scheduling.ScheduleProviderManager;\n+import com.epam.pipeline.manager.security.AuthManager;\n+import com.epam.pipeline.mapper.AbstractRunConfigurationMapper;\n+import com.epam.pipeline.mapper.IssueMapper;\n+import com.epam.pipeline.security.jwt.JwtTokenGenerator;\n+import org.mapstruct.factory.Mappers;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.boot.test.mock.mockito.SpyBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+import static org.mockito.Mockito.spy;\n+\n+@Configuration\n+public class JdbcTestBeans {\n+\n+    @Autowired\n+    protected MessageHelper messageHelper;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7c71d842cbe1eda60808e73ab084f49cbb7265c"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUxNDM2NTYxOnYy", "diffSide": "RIGHT", "path": "api/src/main/java/com/epam/pipeline/app/DBConfiguration.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxMDozNzoxMFrOIUXDKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxMDozNzoxMFrOIUXDKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODIyMDA3NA==", "bodyText": "Could you please remove changes from non-test configuration?", "url": "https://github.com/epam/cloud-pipeline/pull/1700#discussion_r558220074", "createdAt": "2021-01-15T10:37:10Z", "author": {"login": "ekazachkova"}, "path": "api/src/main/java/com/epam/pipeline/app/DBConfiguration.java", "diffHunk": "@@ -1,5 +1,5 @@\n /*\n- * Copyright 2017-2019 EPAM Systems, Inc. (https://www.epam.com/)\n+ * Copyright 2017-2021 EPAM Systems, Inc. (https://www.epam.com/)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7c71d842cbe1eda60808e73ab084f49cbb7265c"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUyNzgyODA4OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/com/epam/pipeline/test/jdbc/JdbcTestBeans.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQxNToxMjo0NFrOIWS9Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQxNToxMjo0NFrOIWS9Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDI1MDIwNw==", "bodyText": "It seems that we don't need to mock dao components (PipelineDao, DaoHelper, MonitoringNotificationDao) here since we already have:\n@ComponentScan(basePackages = {\"com.epam.pipeline.dao\"})\n\nCould you please check it?", "url": "https://github.com/epam/cloud-pipeline/pull/1700#discussion_r560250207", "createdAt": "2021-01-19T15:12:44Z", "author": {"login": "ekazachkova"}, "path": "api/src/test/java/com/epam/pipeline/test/jdbc/JdbcTestBeans.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2017-2021 EPAM Systems, Inc. (https://www.epam.com/)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.epam.pipeline.test.jdbc;\n+\n+import com.epam.pipeline.dao.DaoHelper;\n+import com.epam.pipeline.dao.notification.MonitoringNotificationDao;\n+import com.epam.pipeline.dao.pipeline.PipelineDao;\n+import com.epam.pipeline.manager.EntityManager;\n+import com.epam.pipeline.manager.configuration.RunConfigurationManager;\n+import com.epam.pipeline.manager.git.GitManager;\n+import com.epam.pipeline.manager.issue.AttachmentFileManager;\n+import com.epam.pipeline.manager.issue.IssueManager;\n+import com.epam.pipeline.manager.metadata.MetadataManager;\n+import com.epam.pipeline.manager.notification.NotificationManager;\n+import com.epam.pipeline.manager.pipeline.FolderManager;\n+import com.epam.pipeline.manager.pipeline.PipelineCRUDManager;\n+import com.epam.pipeline.manager.pipeline.PipelineManager;\n+import com.epam.pipeline.manager.pipeline.PipelineRunManager;\n+import com.epam.pipeline.manager.pipeline.RestartRunManager;\n+import com.epam.pipeline.manager.pipeline.RunScheduleManager;\n+import com.epam.pipeline.manager.pipeline.RunStatusManager;\n+import com.epam.pipeline.manager.pipeline.ToolManager;\n+import com.epam.pipeline.manager.pipeline.runner.ConfigurationProviderManager;\n+import com.epam.pipeline.manager.scheduling.RunScheduler;\n+import com.epam.pipeline.manager.scheduling.ScheduleProviderManager;\n+import com.epam.pipeline.manager.security.AuthManager;\n+import com.epam.pipeline.mapper.AbstractRunConfigurationMapper;\n+import com.epam.pipeline.mapper.IssueMapper;\n+import com.epam.pipeline.security.jwt.JwtTokenGenerator;\n+import org.mapstruct.factory.Mappers;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.boot.test.mock.mockito.SpyBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+import static org.mockito.Mockito.spy;\n+\n+@Configuration\n+public class JdbcTestBeans {\n+\n+    @MockBean\n+    protected JwtTokenGenerator mockJwtTokenGenerator;\n+\n+    @MockBean\n+    protected EntityManager mockEntityManager;\n+\n+    @MockBean\n+    protected AttachmentFileManager mockAttachmentFileManager;\n+\n+    @MockBean\n+    protected ToolManager mockToolManager;\n+\n+    @MockBean\n+    protected PipelineCRUDManager mockCrudManager;\n+\n+    @MockBean\n+    protected GitManager mockGitManager;\n+\n+    @MockBean\n+    protected FolderManager mockFolderManager;\n+\n+    @MockBean\n+    protected MetadataManager mockMetadataManager;\n+\n+    @MockBean\n+    protected NotificationManager mockNotificationManager;\n+\n+    @MockBean\n+    protected RunScheduler mockRunScheduler;\n+\n+    @MockBean\n+    protected ScheduleProviderManager mockScheduleProviderManager;\n+\n+    @MockBean\n+    protected PipelineRunManager mockPipelineRunManager;\n+\n+    @MockBean\n+    protected AbstractRunConfigurationMapper mockAbstractRunConfigurationMapper;\n+\n+    @MockBean\n+    protected ConfigurationProviderManager mockConfigurationProviderManager;\n+\n+    @SpyBean\n+    protected PipelineManager spyPipelineManager;\n+\n+    @SpyBean\n+    protected IssueManager spyIssueManager;\n+\n+    @SpyBean\n+    protected PipelineDao spyPipelineDao;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b55fa5d8a608ca4076db162c324eda232f05fc41"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUyNzkzNzYzOnYy", "diffSide": "RIGHT", "path": "api/src/test/java/com/epam/pipeline/test/jdbc/JdbcTestBeans.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQxNTozNDoxMVrOIWUBPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQxNTozNDoxMVrOIWUBPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDI2NzU4Mw==", "bodyText": "Also, could you please check if RestartRunManager and RunStatusManager can be a @MockBean?", "url": "https://github.com/epam/cloud-pipeline/pull/1700#discussion_r560267583", "createdAt": "2021-01-19T15:34:11Z", "author": {"login": "ekazachkova"}, "path": "api/src/test/java/com/epam/pipeline/test/jdbc/JdbcTestBeans.java", "diffHunk": "@@ -0,0 +1,131 @@\n+/*\n+ * Copyright 2017-2021 EPAM Systems, Inc. (https://www.epam.com/)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.epam.pipeline.test.jdbc;\n+\n+import com.epam.pipeline.dao.DaoHelper;\n+import com.epam.pipeline.dao.notification.MonitoringNotificationDao;\n+import com.epam.pipeline.dao.pipeline.PipelineDao;\n+import com.epam.pipeline.manager.EntityManager;\n+import com.epam.pipeline.manager.configuration.RunConfigurationManager;\n+import com.epam.pipeline.manager.git.GitManager;\n+import com.epam.pipeline.manager.issue.AttachmentFileManager;\n+import com.epam.pipeline.manager.issue.IssueManager;\n+import com.epam.pipeline.manager.metadata.MetadataManager;\n+import com.epam.pipeline.manager.notification.NotificationManager;\n+import com.epam.pipeline.manager.pipeline.FolderManager;\n+import com.epam.pipeline.manager.pipeline.PipelineCRUDManager;\n+import com.epam.pipeline.manager.pipeline.PipelineManager;\n+import com.epam.pipeline.manager.pipeline.PipelineRunManager;\n+import com.epam.pipeline.manager.pipeline.RestartRunManager;\n+import com.epam.pipeline.manager.pipeline.RunScheduleManager;\n+import com.epam.pipeline.manager.pipeline.RunStatusManager;\n+import com.epam.pipeline.manager.pipeline.ToolManager;\n+import com.epam.pipeline.manager.pipeline.runner.ConfigurationProviderManager;\n+import com.epam.pipeline.manager.scheduling.RunScheduler;\n+import com.epam.pipeline.manager.scheduling.ScheduleProviderManager;\n+import com.epam.pipeline.manager.security.AuthManager;\n+import com.epam.pipeline.mapper.AbstractRunConfigurationMapper;\n+import com.epam.pipeline.mapper.IssueMapper;\n+import com.epam.pipeline.security.jwt.JwtTokenGenerator;\n+import org.mapstruct.factory.Mappers;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.boot.test.mock.mockito.SpyBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+import static org.mockito.Mockito.spy;\n+\n+@Configuration\n+public class JdbcTestBeans {\n+\n+    @MockBean\n+    protected JwtTokenGenerator mockJwtTokenGenerator;\n+\n+    @MockBean\n+    protected EntityManager mockEntityManager;\n+\n+    @MockBean\n+    protected AttachmentFileManager mockAttachmentFileManager;\n+\n+    @MockBean\n+    protected ToolManager mockToolManager;\n+\n+    @MockBean\n+    protected PipelineCRUDManager mockCrudManager;\n+\n+    @MockBean\n+    protected GitManager mockGitManager;\n+\n+    @MockBean\n+    protected FolderManager mockFolderManager;\n+\n+    @MockBean\n+    protected MetadataManager mockMetadataManager;\n+\n+    @MockBean\n+    protected NotificationManager mockNotificationManager;\n+\n+    @MockBean\n+    protected RunScheduler mockRunScheduler;\n+\n+    @MockBean\n+    protected ScheduleProviderManager mockScheduleProviderManager;\n+\n+    @MockBean\n+    protected PipelineRunManager mockPipelineRunManager;\n+\n+    @MockBean\n+    protected AbstractRunConfigurationMapper mockAbstractRunConfigurationMapper;\n+\n+    @MockBean\n+    protected ConfigurationProviderManager mockConfigurationProviderManager;\n+\n+    @SpyBean\n+    protected PipelineManager spyPipelineManager;\n+\n+    @SpyBean\n+    protected IssueManager spyIssueManager;\n+\n+    @SpyBean\n+    protected PipelineDao spyPipelineDao;\n+\n+    @SpyBean\n+    protected DaoHelper spyDaoHelper;\n+\n+    @SpyBean\n+    protected AuthManager spyAuthManager;\n+\n+    @SpyBean\n+    protected RestartRunManager spyRestartRunManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b55fa5d8a608ca4076db162c324eda232f05fc41"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzMTY3MjQ2OnYy", "diffSide": "RIGHT", "path": "api/src/test/java/com/epam/pipeline/test/jdbc/JdbcTestBeans.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxMDoxOToxMlrOIW3Q2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMFQxMDoxOToxMlrOIW3Q2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDg0NTAxOQ==", "bodyText": "Could you please fix names? (spy -> mock)", "url": "https://github.com/epam/cloud-pipeline/pull/1700#discussion_r560845019", "createdAt": "2021-01-20T10:19:12Z", "author": {"login": "ekazachkova"}, "path": "api/src/test/java/com/epam/pipeline/test/jdbc/JdbcTestBeans.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Copyright 2017-2021 EPAM Systems, Inc. (https://www.epam.com/)\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.epam.pipeline.test.jdbc;\n+\n+import com.epam.pipeline.manager.EntityManager;\n+import com.epam.pipeline.manager.configuration.RunConfigurationManager;\n+import com.epam.pipeline.manager.git.GitManager;\n+import com.epam.pipeline.manager.issue.AttachmentFileManager;\n+import com.epam.pipeline.manager.issue.IssueManager;\n+import com.epam.pipeline.manager.metadata.MetadataManager;\n+import com.epam.pipeline.manager.notification.NotificationManager;\n+import com.epam.pipeline.manager.pipeline.FolderManager;\n+import com.epam.pipeline.manager.pipeline.PipelineCRUDManager;\n+import com.epam.pipeline.manager.pipeline.PipelineManager;\n+import com.epam.pipeline.manager.pipeline.PipelineRunManager;\n+import com.epam.pipeline.manager.pipeline.RestartRunManager;\n+import com.epam.pipeline.manager.pipeline.RunScheduleManager;\n+import com.epam.pipeline.manager.pipeline.RunStatusManager;\n+import com.epam.pipeline.manager.pipeline.ToolManager;\n+import com.epam.pipeline.manager.pipeline.runner.ConfigurationProviderManager;\n+import com.epam.pipeline.manager.scheduling.RunScheduler;\n+import com.epam.pipeline.manager.scheduling.ScheduleProviderManager;\n+import com.epam.pipeline.manager.security.AuthManager;\n+import com.epam.pipeline.mapper.AbstractRunConfigurationMapper;\n+import com.epam.pipeline.mapper.IssueMapper;\n+import com.epam.pipeline.security.jwt.JwtTokenGenerator;\n+import org.mapstruct.factory.Mappers;\n+import org.springframework.boot.test.mock.mockito.MockBean;\n+import org.springframework.boot.test.mock.mockito.SpyBean;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+import static org.mockito.Mockito.spy;\n+\n+@Configuration\n+public class JdbcTestBeans {\n+\n+    @MockBean\n+    protected JwtTokenGenerator mockJwtTokenGenerator;\n+\n+    @MockBean\n+    protected EntityManager mockEntityManager;\n+\n+    @MockBean\n+    protected AttachmentFileManager mockAttachmentFileManager;\n+\n+    @MockBean\n+    protected ToolManager mockToolManager;\n+\n+    @MockBean\n+    protected PipelineCRUDManager mockCrudManager;\n+\n+    @MockBean\n+    protected GitManager mockGitManager;\n+\n+    @MockBean\n+    protected FolderManager mockFolderManager;\n+\n+    @MockBean\n+    protected MetadataManager mockMetadataManager;\n+\n+    @MockBean\n+    protected NotificationManager mockNotificationManager;\n+\n+    @MockBean\n+    protected RunScheduler mockRunScheduler;\n+\n+    @MockBean\n+    protected ScheduleProviderManager mockScheduleProviderManager;\n+\n+    @MockBean\n+    protected PipelineRunManager mockPipelineRunManager;\n+\n+    @MockBean\n+    protected AbstractRunConfigurationMapper mockAbstractRunConfigurationMapper;\n+\n+    @MockBean\n+    protected ConfigurationProviderManager mockConfigurationProviderManager;\n+\n+    @MockBean\n+    protected RestartRunManager spyRestartRunManager;\n+\n+    @MockBean\n+    protected RunStatusManager spyRunStatusManager;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bb09ae3cab82a86a39fd2783cfb51a6563dc50e"}, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 247, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}