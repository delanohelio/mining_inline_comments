{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzODYyMDAw", "number": 1261, "title": "add 3153 test and update LaunchCluster tests", "bodyText": "This PR provides implementation for LaunchCluster test 3153.\nBesides the method for obtaining children run IDs from Nested RunID link has been added to LaunchCluster tests.", "createdAt": "2020-08-06T08:11:08Z", "url": "https://github.com/epam/cloud-pipeline/pull/1261", "merged": true, "mergeCommit": {"oid": "c763055d3ace8e1d59d343701b9fa8462ffab1e2"}, "closed": true, "closedAt": "2020-08-07T13:44:46Z", "author": {"login": "maryvictol"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc76yGlAH2gAyNDYzODYyMDAwOjQxNmIyMjYwOTg2MTBiYmFmMjNlOWEzZDFhMzVlYTA2ZmNiM2JjNjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8kqfgAFqTQ2MzMyNDAwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "416b226098610bbaf23e9a3d1a35ea06fcb3bc64", "author": {"user": {"login": "maryvictol", "name": "Mariia Tolstaia"}}, "url": "https://github.com/epam/cloud-pipeline/commit/416b226098610bbaf23e9a3d1a35ea06fcb3bc64", "committedDate": "2020-08-05T12:56:50Z", "message": "add 3153 test and update LaunchCluster tests\n\nSigned-off-by: Mariia_Tolstaia <Mariia_Tolstaia@epam.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMzc0MTcy", "url": "https://github.com/epam/cloud-pipeline/pull/1261#pullrequestreview-462374172", "createdAt": "2020-08-06T09:53:03Z", "commit": {"oid": "416b226098610bbaf23e9a3d1a35ea06fcb3bc64"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTo1MzowM1rOG8sqpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTo1MzowM1rOG8sqpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI5OTU1Nw==", "bodyText": "Let's extract to constant, please", "url": "https://github.com/epam/cloud-pipeline/pull/1261#discussion_r466299557", "createdAt": "2020-08-06T09:53:03Z", "author": {"login": "kamyshova"}, "path": "e2e/gui/src/test/java/com/epam/pipeline/autotests/LaunchClusterTest.java", "diffHunk": "@@ -421,6 +442,67 @@ public void hybridAutoScaledClusterCPUDeadlock() {\n                 .ensure(STATUS, text(String.valueOf(Integer.parseInt(getRunId()) + 1)));\n     }\n \n+    @Test\n+    @TestCase({\"EPMCMBIBPC-3153\"})\n+    public void hybridAutoScaledCluster() {\n+        String cpu = library()\n+                .createPipeline(Template.SHELL, getPipelineName())\n+                .clickOnPipeline(getPipelineName())\n+                .firstVersion()\n+                .runPipeline()\n+                .setDefaultLaunchOptions()\n+                .getCPU();\n+        onLaunchPage()\n+                .enableClusterLaunch()\n+                .clusterSettingsForm(autoScaledSettingForm)\n+                .enableHybridClusterSelect()\n+                .ok()\n+                .setCommand(String.format(\"qsub -b y -pe local %s sleep 15m && sleep infinity\", Integer.parseInt(cpu) + 1))\n+                .launch(this)\n+                .shouldContainRun(getPipelineName(), getRunId())\n+                .showLog(getRunId())\n+                .expandTab(PARAMETERS)\n+                .ensure(configurationParameter(\"CP_CAP_AUTOSCALE\", \"true\"), exist)\n+                .ensure(configurationParameter(\"CP_CAP_AUTOSCALE_WORKERS\", \"1\"), exist)\n+                .ensure(configurationParameter(\"CP_CAP_AUTOSCALE_HYBRID\", \"true\"), exist)\n+                .waitForSshLink()\n+                .ssh(shell -> shell\n+                        .execute(\"qhost\")\n+                        .assertOutputContains(\"HOSTNAME\", \"global\", String.format(\"%s-%s lx-amd64\",\n+                                getPipelineName().toLowerCase(), getRunId()))\n+                        .sleep(20, SECONDS)\n+                        .execute(\"qstat\")\n+                        .assertPageContains(\"sleep\", \" 1 \")\n+                        .assertPageContains(\"sleep\", \" qw \")\n+                        .assertPageContains(\"sleep\", String.format(\" %s \", Integer.parseInt(cpu) + 1))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "416b226098610bbaf23e9a3d1a35ea06fcb3bc64"}, "originalPosition": 176}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyMzc0MzM2", "url": "https://github.com/epam/cloud-pipeline/pull/1261#pullrequestreview-462374336", "createdAt": "2020-08-06T09:53:18Z", "commit": {"oid": "416b226098610bbaf23e9a3d1a35ea06fcb3bc64"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTo1MzoxOFrOG8srFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTo1MzoxOFrOG8srFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI5OTY3MA==", "bodyText": "The same as above", "url": "https://github.com/epam/cloud-pipeline/pull/1261#discussion_r466299670", "createdAt": "2020-08-06T09:53:18Z", "author": {"login": "kamyshova"}, "path": "e2e/gui/src/test/java/com/epam/pipeline/autotests/LaunchClusterTest.java", "diffHunk": "@@ -421,6 +442,67 @@ public void hybridAutoScaledClusterCPUDeadlock() {\n                 .ensure(STATUS, text(String.valueOf(Integer.parseInt(getRunId()) + 1)));\n     }\n \n+    @Test\n+    @TestCase({\"EPMCMBIBPC-3153\"})\n+    public void hybridAutoScaledCluster() {\n+        String cpu = library()\n+                .createPipeline(Template.SHELL, getPipelineName())\n+                .clickOnPipeline(getPipelineName())\n+                .firstVersion()\n+                .runPipeline()\n+                .setDefaultLaunchOptions()\n+                .getCPU();\n+        onLaunchPage()\n+                .enableClusterLaunch()\n+                .clusterSettingsForm(autoScaledSettingForm)\n+                .enableHybridClusterSelect()\n+                .ok()\n+                .setCommand(String.format(\"qsub -b y -pe local %s sleep 15m && sleep infinity\", Integer.parseInt(cpu) + 1))\n+                .launch(this)\n+                .shouldContainRun(getPipelineName(), getRunId())\n+                .showLog(getRunId())\n+                .expandTab(PARAMETERS)\n+                .ensure(configurationParameter(\"CP_CAP_AUTOSCALE\", \"true\"), exist)\n+                .ensure(configurationParameter(\"CP_CAP_AUTOSCALE_WORKERS\", \"1\"), exist)\n+                .ensure(configurationParameter(\"CP_CAP_AUTOSCALE_HYBRID\", \"true\"), exist)\n+                .waitForSshLink()\n+                .ssh(shell -> shell\n+                        .execute(\"qhost\")\n+                        .assertOutputContains(\"HOSTNAME\", \"global\", String.format(\"%s-%s lx-amd64\",\n+                                getPipelineName().toLowerCase(), getRunId()))\n+                        .sleep(20, SECONDS)\n+                        .execute(\"qstat\")\n+                        .assertPageContains(\"sleep\", \" 1 \")\n+                        .assertPageContains(\"sleep\", \" qw \")\n+                        .assertPageContains(\"sleep\", String.format(\" %s \", Integer.parseInt(cpu) + 1))\n+                        .close());\n+        String nestedRunID = navigationMenu()\n+                                .runs()\n+                                .activeRuns()\n+                                .showLog(getRunId())\n+                                .waitForNestedRunsLink()\n+                                .getNestedRunID(1);\n+        runsMenu()\n+                .activeRuns()\n+                .showLog(getRunId())\n+                .clickOnNestedRunLink()\n+                .instanceParameters(instance ->\n+                        instance.ensure(TYPE, text(C.DEFAULT_INSTANCE.substring(0, C.DEFAULT_INSTANCE.indexOf(\".\"))))\n+                        .ensure(TYPE, not(text(C.DEFAULT_INSTANCE.substring(C.DEFAULT_INSTANCE.indexOf(\".\")))))\n+                )\n+                .waitForSshLink()\n+                .ssh(shell -> shell\n+                        .execute(\"qhost\")\n+                        .assertOutputContains(\"HOSTNAME\", \"global\", String.format(\"%s-%s lx-amd64\",\n+                                getPipelineName().toLowerCase(), getRunId()), String.format(\"pipeline-%s\",\n+                                nestedRunID))\n+                        .sleep(20, SECONDS)\n+                        .execute(\"qstat\")\n+                        .assertPageContains(\"sleep\", \" r \")\n+                        .assertPageContains(\"sleep\", String.format(\"main.q@pipeline-%s\", nestedRunID))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "416b226098610bbaf23e9a3d1a35ea06fcb3bc64"}, "originalPosition": 201}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a2403bbb035a5fb61720fbbdefceac3eb76b835", "author": {"user": {"login": "maryvictol", "name": "Mariia Tolstaia"}}, "url": "https://github.com/epam/cloud-pipeline/commit/0a2403bbb035a5fb61720fbbdefceac3eb76b835", "committedDate": "2020-08-06T13:48:01Z", "message": "Merge branch 'develop' into 3153_launchCluster_autotest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb84b9d7eb48e4622043b0592ccf0b7fb1397e92", "author": {"user": {"login": "maryvictol", "name": "Mariia Tolstaia"}}, "url": "https://github.com/epam/cloud-pipeline/commit/cb84b9d7eb48e4622043b0592ccf0b7fb1397e92", "committedDate": "2020-08-06T14:31:46Z", "message": "small fix LauchCluster tests\n\nSigned-off-by: Mariia_Tolstaia <Mariia_Tolstaia@epam.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMzI0MDAw", "url": "https://github.com/epam/cloud-pipeline/pull/1261#pullrequestreview-463324000", "createdAt": "2020-08-07T13:44:33Z", "commit": {"oid": "cb84b9d7eb48e4622043b0592ccf0b7fb1397e92"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3809, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}