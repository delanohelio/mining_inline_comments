{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNjMwMDcw", "number": 8031, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNzoyODoyOVrODp9JcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNzoyOToxNFrODp9Kaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzIwMDQ4OnYy", "diffSide": "RIGHT", "path": "extensions/amazon-lambda/deployment/src/main/java/io/quarkus/amazon/lambda/deployment/AmazonLambdaProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNzoyODoyOVrOF5c8Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwNDoxODo1MVrOF5neQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4NzI3NA==", "bodyText": "Do we need to execute this if streamHandler is true?", "url": "https://github.com/quarkusio/quarkus/pull/8031#discussion_r395787274", "createdAt": "2020-03-20T17:28:29Z", "author": {"login": "gsmet"}, "path": "extensions/amazon-lambda/deployment/src/main/java/io/quarkus/amazon/lambda/deployment/AmazonLambdaProcessor.java", "diffHunk": "@@ -102,7 +102,7 @@ AdditionalApplicationArchiveMarkerBuildItem marker() {\n \n             ClassInfo current = info;\n             boolean done = false;\n-            boolean streamHandler = false;\n+            boolean streamHandler = info.superName().equals(SKILL_STREAM_HANDLER) ? true : false;\n             while (current != null && !done) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47565448e2a593b6dda474c18d3d732405b89174"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk1OTg3Mw==", "bodyText": "Discussed below.", "url": "https://github.com/quarkusio/quarkus/pull/8031#discussion_r395959873", "createdAt": "2020-03-21T04:18:51Z", "author": {"login": "oztimpower"}, "path": "extensions/amazon-lambda/deployment/src/main/java/io/quarkus/amazon/lambda/deployment/AmazonLambdaProcessor.java", "diffHunk": "@@ -102,7 +102,7 @@ AdditionalApplicationArchiveMarkerBuildItem marker() {\n \n             ClassInfo current = info;\n             boolean done = false;\n-            boolean streamHandler = false;\n+            boolean streamHandler = info.superName().equals(SKILL_STREAM_HANDLER) ? true : false;\n             while (current != null && !done) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4NzI3NA=="}, "originalCommit": {"oid": "47565448e2a593b6dda474c18d3d732405b89174"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzIwMjk5OnYy", "diffSide": "RIGHT", "path": "extensions/amazon-lambda/deployment/src/main/java/io/quarkus/amazon/lambda/deployment/AmazonLambdaProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQxNzoyOToxNFrOF5c9qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwNDoxNToyNlrOF5ndYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4NzY4OA==", "bodyText": "That won't work if you have an intermediary subclass.", "url": "https://github.com/quarkusio/quarkus/pull/8031#discussion_r395787688", "createdAt": "2020-03-20T17:29:14Z", "author": {"login": "gsmet"}, "path": "extensions/amazon-lambda/deployment/src/main/java/io/quarkus/amazon/lambda/deployment/AmazonLambdaProcessor.java", "diffHunk": "@@ -102,7 +102,7 @@ AdditionalApplicationArchiveMarkerBuildItem marker() {\n \n             ClassInfo current = info;\n             boolean done = false;\n-            boolean streamHandler = false;\n+            boolean streamHandler = info.superName().equals(SKILL_STREAM_HANDLER) ? true : false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47565448e2a593b6dda474c18d3d732405b89174"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4ODMyNA==", "bodyText": "Ah OK I see we couldn't arrive here with an intermediary class.", "url": "https://github.com/quarkusio/quarkus/pull/8031#discussion_r395788324", "createdAt": "2020-03-20T17:30:19Z", "author": {"login": "gsmet"}, "path": "extensions/amazon-lambda/deployment/src/main/java/io/quarkus/amazon/lambda/deployment/AmazonLambdaProcessor.java", "diffHunk": "@@ -102,7 +102,7 @@ AdditionalApplicationArchiveMarkerBuildItem marker() {\n \n             ClassInfo current = info;\n             boolean done = false;\n-            boolean streamHandler = false;\n+            boolean streamHandler = info.superName().equals(SKILL_STREAM_HANDLER) ? true : false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4NzY4OA=="}, "originalCommit": {"oid": "47565448e2a593b6dda474c18d3d732405b89174"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk1OTY1MA==", "bodyText": "Yes, in the while loop it doesn't enter the handleRequest() check, due to methods() only returning methods of the subclass.\n            while (current != null && !done) {\n                for (MethodInfo method : current.methods()) {\n                    if (method.name().equals(\"handleRequest\")) {\n\n\nIt does skip around the while loop a couple of times, though I though for readability I didn't want to add another condition to the while statement -> && !streamHandler\nI debated doing this, and decided against in the end to minimise changes.\n           while (current != null && !done &&!streamHandler) {\nI also though about doing it a more verbose way for readability and to be consistent on the place in the code where the decision is made:\n            boolean streamHandler = false;\n            while (current != null && !done) {\n                for (MethodInfo method : current.methods()) {\n\n                    if (current.superName().equals(SKILL_STREAM_HANDLER)) {\n                        streamHandler = true;\n                        done = true;\n                        break;\n                    }\n                    \n                    if (method.name().equals(\"handleRequest\")) {\n                        ...", "url": "https://github.com/quarkusio/quarkus/pull/8031#discussion_r395959650", "createdAt": "2020-03-21T04:15:26Z", "author": {"login": "oztimpower"}, "path": "extensions/amazon-lambda/deployment/src/main/java/io/quarkus/amazon/lambda/deployment/AmazonLambdaProcessor.java", "diffHunk": "@@ -102,7 +102,7 @@ AdditionalApplicationArchiveMarkerBuildItem marker() {\n \n             ClassInfo current = info;\n             boolean done = false;\n-            boolean streamHandler = false;\n+            boolean streamHandler = info.superName().equals(SKILL_STREAM_HANDLER) ? true : false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTc4NzY4OA=="}, "originalCommit": {"oid": "47565448e2a593b6dda474c18d3d732405b89174"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4774, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}