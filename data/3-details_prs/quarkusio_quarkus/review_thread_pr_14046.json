{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1MjI0OTQ3", "number": 14046, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNTowMjowNFrOFK7RJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNTowMjowNFrOFK7RJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MDAxMTI3OnYy", "diffSide": "RIGHT", "path": "independent-projects/resteasy-reactive/server/vertx/src/main/java/org/jboss/resteasy/reactive/server/vertx/providers/serialisers/json/JsonMessageBodyWriterUtil.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNTowMjowNFrOIN05tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNToyNTo1MVrOIN1yuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM2OTE0MQ==", "bodyText": "Pretty sure that's not how media type mapping works, as it will even match application/stef-hates-json which is not JSON at all ;)", "url": "https://github.com/quarkusio/quarkus/pull/14046#discussion_r551369141", "createdAt": "2021-01-04T15:02:04Z", "author": {"login": "FroMage"}, "path": "independent-projects/resteasy-reactive/server/vertx/src/main/java/org/jboss/resteasy/reactive/server/vertx/providers/serialisers/json/JsonMessageBodyWriterUtil.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.jboss.resteasy.reactive.server.vertx.providers.serialisers.json;\n+\n+import io.vertx.core.MultiMap;\n+import java.util.Map;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.MultivaluedMap;\n+import org.jboss.resteasy.reactive.server.spi.ServerRequestContext;\n+\n+public final class JsonMessageBodyWriterUtil {\n+\n+    private JsonMessageBodyWriterUtil() {\n+    }\n+\n+    public static void setContentTypeIfNecessary(MultivaluedMap<String, Object> httpHeaders) {\n+        Object contentType = httpHeaders.getFirst(HttpHeaders.CONTENT_TYPE);\n+        if (isNotJson(contentType)) {\n+            httpHeaders.putSingle(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON);\n+        }\n+    }\n+\n+    public static void setContentTypeIfNecessary(ServerRequestContext context) {\n+        String currentContentType = null;\n+        Iterable<Map.Entry<String, String>> responseHeaders = context.serverResponse().getAllResponseHeaders();\n+        if (responseHeaders instanceof MultiMap) {\n+            currentContentType = ((MultiMap) responseHeaders).get(HttpHeaders.CONTENT_TYPE);\n+        } else {\n+            for (Map.Entry<String, String> entry : responseHeaders) {\n+                if (entry.getKey().equalsIgnoreCase(HttpHeaders.CONTENT_TYPE)) {\n+                    currentContentType = entry.getValue();\n+                    break;\n+                }\n+            }\n+        }\n+        if (isNotJson(currentContentType)) {\n+            context.serverResponse().setResponseHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON);\n+        }\n+    }\n+\n+    private static boolean isNotJson(Object contentType) {\n+        return (contentType == null) || !contentType.toString().contains(\"json\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de22493e38dde2b463048175a2318548b67dd868"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM3MTk0Nw==", "bodyText": "Fair point. When someone comes to us with such an example, you can tell me: I told you so :)", "url": "https://github.com/quarkusio/quarkus/pull/14046#discussion_r551371947", "createdAt": "2021-01-04T15:06:35Z", "author": {"login": "geoand"}, "path": "independent-projects/resteasy-reactive/server/vertx/src/main/java/org/jboss/resteasy/reactive/server/vertx/providers/serialisers/json/JsonMessageBodyWriterUtil.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.jboss.resteasy.reactive.server.vertx.providers.serialisers.json;\n+\n+import io.vertx.core.MultiMap;\n+import java.util.Map;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.MultivaluedMap;\n+import org.jboss.resteasy.reactive.server.spi.ServerRequestContext;\n+\n+public final class JsonMessageBodyWriterUtil {\n+\n+    private JsonMessageBodyWriterUtil() {\n+    }\n+\n+    public static void setContentTypeIfNecessary(MultivaluedMap<String, Object> httpHeaders) {\n+        Object contentType = httpHeaders.getFirst(HttpHeaders.CONTENT_TYPE);\n+        if (isNotJson(contentType)) {\n+            httpHeaders.putSingle(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON);\n+        }\n+    }\n+\n+    public static void setContentTypeIfNecessary(ServerRequestContext context) {\n+        String currentContentType = null;\n+        Iterable<Map.Entry<String, String>> responseHeaders = context.serverResponse().getAllResponseHeaders();\n+        if (responseHeaders instanceof MultiMap) {\n+            currentContentType = ((MultiMap) responseHeaders).get(HttpHeaders.CONTENT_TYPE);\n+        } else {\n+            for (Map.Entry<String, String> entry : responseHeaders) {\n+                if (entry.getKey().equalsIgnoreCase(HttpHeaders.CONTENT_TYPE)) {\n+                    currentContentType = entry.getValue();\n+                    break;\n+                }\n+            }\n+        }\n+        if (isNotJson(currentContentType)) {\n+            context.serverResponse().setResponseHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON);\n+        }\n+    }\n+\n+    private static boolean isNotJson(Object contentType) {\n+        return (contentType == null) || !contentType.toString().contains(\"json\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM2OTE0MQ=="}, "originalCommit": {"oid": "de22493e38dde2b463048175a2318548b67dd868"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM4Mjk3Ng==", "bodyText": "Sure, but just remember that media type matching doesn't work like this, we don't want to oversimplify stuff everywhere ;)", "url": "https://github.com/quarkusio/quarkus/pull/14046#discussion_r551382976", "createdAt": "2021-01-04T15:24:37Z", "author": {"login": "FroMage"}, "path": "independent-projects/resteasy-reactive/server/vertx/src/main/java/org/jboss/resteasy/reactive/server/vertx/providers/serialisers/json/JsonMessageBodyWriterUtil.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.jboss.resteasy.reactive.server.vertx.providers.serialisers.json;\n+\n+import io.vertx.core.MultiMap;\n+import java.util.Map;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.MultivaluedMap;\n+import org.jboss.resteasy.reactive.server.spi.ServerRequestContext;\n+\n+public final class JsonMessageBodyWriterUtil {\n+\n+    private JsonMessageBodyWriterUtil() {\n+    }\n+\n+    public static void setContentTypeIfNecessary(MultivaluedMap<String, Object> httpHeaders) {\n+        Object contentType = httpHeaders.getFirst(HttpHeaders.CONTENT_TYPE);\n+        if (isNotJson(contentType)) {\n+            httpHeaders.putSingle(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON);\n+        }\n+    }\n+\n+    public static void setContentTypeIfNecessary(ServerRequestContext context) {\n+        String currentContentType = null;\n+        Iterable<Map.Entry<String, String>> responseHeaders = context.serverResponse().getAllResponseHeaders();\n+        if (responseHeaders instanceof MultiMap) {\n+            currentContentType = ((MultiMap) responseHeaders).get(HttpHeaders.CONTENT_TYPE);\n+        } else {\n+            for (Map.Entry<String, String> entry : responseHeaders) {\n+                if (entry.getKey().equalsIgnoreCase(HttpHeaders.CONTENT_TYPE)) {\n+                    currentContentType = entry.getValue();\n+                    break;\n+                }\n+            }\n+        }\n+        if (isNotJson(currentContentType)) {\n+            context.serverResponse().setResponseHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON);\n+        }\n+    }\n+\n+    private static boolean isNotJson(Object contentType) {\n+        return (contentType == null) || !contentType.toString().contains(\"json\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM2OTE0MQ=="}, "originalCommit": {"oid": "de22493e38dde2b463048175a2318548b67dd868"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM4MzczOQ==", "bodyText": "Definitely.\nMade a mental note, so when this comes up, I'll know where to look :)", "url": "https://github.com/quarkusio/quarkus/pull/14046#discussion_r551383739", "createdAt": "2021-01-04T15:25:51Z", "author": {"login": "geoand"}, "path": "independent-projects/resteasy-reactive/server/vertx/src/main/java/org/jboss/resteasy/reactive/server/vertx/providers/serialisers/json/JsonMessageBodyWriterUtil.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.jboss.resteasy.reactive.server.vertx.providers.serialisers.json;\n+\n+import io.vertx.core.MultiMap;\n+import java.util.Map;\n+import javax.ws.rs.core.HttpHeaders;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.MultivaluedMap;\n+import org.jboss.resteasy.reactive.server.spi.ServerRequestContext;\n+\n+public final class JsonMessageBodyWriterUtil {\n+\n+    private JsonMessageBodyWriterUtil() {\n+    }\n+\n+    public static void setContentTypeIfNecessary(MultivaluedMap<String, Object> httpHeaders) {\n+        Object contentType = httpHeaders.getFirst(HttpHeaders.CONTENT_TYPE);\n+        if (isNotJson(contentType)) {\n+            httpHeaders.putSingle(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON);\n+        }\n+    }\n+\n+    public static void setContentTypeIfNecessary(ServerRequestContext context) {\n+        String currentContentType = null;\n+        Iterable<Map.Entry<String, String>> responseHeaders = context.serverResponse().getAllResponseHeaders();\n+        if (responseHeaders instanceof MultiMap) {\n+            currentContentType = ((MultiMap) responseHeaders).get(HttpHeaders.CONTENT_TYPE);\n+        } else {\n+            for (Map.Entry<String, String> entry : responseHeaders) {\n+                if (entry.getKey().equalsIgnoreCase(HttpHeaders.CONTENT_TYPE)) {\n+                    currentContentType = entry.getValue();\n+                    break;\n+                }\n+            }\n+        }\n+        if (isNotJson(currentContentType)) {\n+            context.serverResponse().setResponseHeader(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON);\n+        }\n+    }\n+\n+    private static boolean isNotJson(Object contentType) {\n+        return (contentType == null) || !contentType.toString().contains(\"json\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTM2OTE0MQ=="}, "originalCommit": {"oid": "de22493e38dde2b463048175a2318548b67dd868"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4464, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}