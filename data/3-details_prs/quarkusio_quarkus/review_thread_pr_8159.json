{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNjc5NjA5", "number": 8159, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoyMTozOFrODrSqkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoyMzoyMFrODrStwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzIxMTY5OnYy", "diffSide": "RIGHT", "path": "independent-projects/tools/common/src/main/java/io/quarkus/cli/commands/ListExtensionsCommandHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoyMTozOFrOF7jSFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDoyOTo0N1rOF7tEAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4ODM3NA==", "bodyText": "Can it be on 2 lines with nicer formatting?", "url": "https://github.com/quarkusio/quarkus/pull/8159#discussion_r397988374", "createdAt": "2020-03-25T16:21:38Z", "author": {"login": "rsvoboda"}, "path": "independent-projects/tools/common/src/main/java/io/quarkus/cli/commands/ListExtensionsCommandHandler.java", "diffHunk": "@@ -66,30 +66,41 @@ public QuarkusCommandOutcome execute(QuarkusCommandInvocation invocation) throws\n                     currentFormatter = this::conciseFormatter;\n             }\n \n-            final BuildFile buildFile = invocation.getBuildFile();\n+            final BuildFile buildFile = getBuildFileSafe(invocation);\n             loadedExtensions.forEach(extension -> display(extension, installed, all, currentFormatter, buildFile));\n \n-            if (\"concise\".equalsIgnoreCase(format)) {\n+            if (buildFile != null) {\n+                if (\"concise\".equalsIgnoreCase(format)) {\n+                    if (buildFile instanceof GradleBuildFile) {\n+                        System.out.println(\"\\nTo get more information, append --format=full to your command line.\");\n+                    } else {\n+                        System.out", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4281f0e044defd951da9cc292c90186520e52621"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAwMTMzMQ==", "bodyText": "Like this?", "url": "https://github.com/quarkusio/quarkus/pull/8159#discussion_r398001331", "createdAt": "2020-03-25T16:38:42Z", "author": {"login": "geoand"}, "path": "independent-projects/tools/common/src/main/java/io/quarkus/cli/commands/ListExtensionsCommandHandler.java", "diffHunk": "@@ -66,30 +66,41 @@ public QuarkusCommandOutcome execute(QuarkusCommandInvocation invocation) throws\n                     currentFormatter = this::conciseFormatter;\n             }\n \n-            final BuildFile buildFile = invocation.getBuildFile();\n+            final BuildFile buildFile = getBuildFileSafe(invocation);\n             loadedExtensions.forEach(extension -> display(extension, installed, all, currentFormatter, buildFile));\n \n-            if (\"concise\".equalsIgnoreCase(format)) {\n+            if (buildFile != null) {\n+                if (\"concise\".equalsIgnoreCase(format)) {\n+                    if (buildFile instanceof GradleBuildFile) {\n+                        System.out.println(\"\\nTo get more information, append --format=full to your command line.\");\n+                    } else {\n+                        System.out", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4ODM3NA=="}, "originalCommit": {"oid": "4281f0e044defd951da9cc292c90186520e52621"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE0ODYxMA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/quarkusio/quarkus/pull/8159#discussion_r398148610", "createdAt": "2020-03-25T20:29:47Z", "author": {"login": "rsvoboda"}, "path": "independent-projects/tools/common/src/main/java/io/quarkus/cli/commands/ListExtensionsCommandHandler.java", "diffHunk": "@@ -66,30 +66,41 @@ public QuarkusCommandOutcome execute(QuarkusCommandInvocation invocation) throws\n                     currentFormatter = this::conciseFormatter;\n             }\n \n-            final BuildFile buildFile = invocation.getBuildFile();\n+            final BuildFile buildFile = getBuildFileSafe(invocation);\n             loadedExtensions.forEach(extension -> display(extension, installed, all, currentFormatter, buildFile));\n \n-            if (\"concise\".equalsIgnoreCase(format)) {\n+            if (buildFile != null) {\n+                if (\"concise\".equalsIgnoreCase(format)) {\n+                    if (buildFile instanceof GradleBuildFile) {\n+                        System.out.println(\"\\nTo get more information, append --format=full to your command line.\");\n+                    } else {\n+                        System.out", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4ODM3NA=="}, "originalCommit": {"oid": "4281f0e044defd951da9cc292c90186520e52621"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzIxOTg0OnYy", "diffSide": "RIGHT", "path": "independent-projects/tools/common/src/main/java/io/quarkus/cli/commands/ListExtensionsCommandHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjoyMzoyMFrOF7jXGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjozODoyNlrOF7kDzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4OTY1OQ==", "bodyText": "Maybe log.debug just in case?", "url": "https://github.com/quarkusio/quarkus/pull/8159#discussion_r397989659", "createdAt": "2020-03-25T16:23:20Z", "author": {"login": "gastaldi"}, "path": "independent-projects/tools/common/src/main/java/io/quarkus/cli/commands/ListExtensionsCommandHandler.java", "diffHunk": "@@ -66,30 +66,41 @@ public QuarkusCommandOutcome execute(QuarkusCommandInvocation invocation) throws\n                     currentFormatter = this::conciseFormatter;\n             }\n \n-            final BuildFile buildFile = invocation.getBuildFile();\n+            final BuildFile buildFile = getBuildFileSafe(invocation);\n             loadedExtensions.forEach(extension -> display(extension, installed, all, currentFormatter, buildFile));\n \n-            if (\"concise\".equalsIgnoreCase(format)) {\n+            if (buildFile != null) {\n+                if (\"concise\".equalsIgnoreCase(format)) {\n+                    if (buildFile instanceof GradleBuildFile) {\n+                        System.out.println(\"\\nTo get more information, append --format=full to your command line.\");\n+                    } else {\n+                        System.out\n+                                .println(\n+                                        \"\\nTo get more information, append -Dquarkus.extension.format=full to your command line.\");\n+                    }\n+                }\n+\n                 if (buildFile instanceof GradleBuildFile) {\n-                    System.out.println(\"\\nTo get more information, append --format=full to your command line.\");\n+                    System.out.println(\"\\nAdd an extension to your project by adding the dependency to your \" +\n+                            \"build.gradle or use `./gradlew addExtension --extensions=\\\"artifactId\\\"`\");\n                 } else {\n-                    System.out\n-                            .println(\"\\nTo get more information, append -Dquarkus.extension.format=full to your command line.\");\n+                    System.out.println(\"\\nAdd an extension to your project by adding the dependency to your \" +\n+                            \"pom.xml or use `./mvnw quarkus:add-extension -Dextensions=\\\"artifactId\\\"`\");\n                 }\n             }\n-\n-            if (buildFile instanceof GradleBuildFile) {\n-                System.out.println(\"\\nAdd an extension to your project by adding the dependency to your \" +\n-                        \"build.gradle or use `./gradlew addExtension --extensions=\\\"artifactId\\\"`\");\n-            } else {\n-                System.out.println(\"\\nAdd an extension to your project by adding the dependency to your \" +\n-                        \"pom.xml or use `./mvnw quarkus:add-extension -Dextensions=\\\"artifactId\\\"`\");\n-            }\n         }\n \n         return QuarkusCommandOutcome.success();\n     }\n \n+    private BuildFile getBuildFileSafe(QuarkusCommandInvocation invocation) {\n+        try {\n+            return invocation.getBuildFile();\n+        } catch (Exception e) {\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4281f0e044defd951da9cc292c90186520e52621"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODAwMTEwMQ==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/8159#discussion_r398001101", "createdAt": "2020-03-25T16:38:26Z", "author": {"login": "geoand"}, "path": "independent-projects/tools/common/src/main/java/io/quarkus/cli/commands/ListExtensionsCommandHandler.java", "diffHunk": "@@ -66,30 +66,41 @@ public QuarkusCommandOutcome execute(QuarkusCommandInvocation invocation) throws\n                     currentFormatter = this::conciseFormatter;\n             }\n \n-            final BuildFile buildFile = invocation.getBuildFile();\n+            final BuildFile buildFile = getBuildFileSafe(invocation);\n             loadedExtensions.forEach(extension -> display(extension, installed, all, currentFormatter, buildFile));\n \n-            if (\"concise\".equalsIgnoreCase(format)) {\n+            if (buildFile != null) {\n+                if (\"concise\".equalsIgnoreCase(format)) {\n+                    if (buildFile instanceof GradleBuildFile) {\n+                        System.out.println(\"\\nTo get more information, append --format=full to your command line.\");\n+                    } else {\n+                        System.out\n+                                .println(\n+                                        \"\\nTo get more information, append -Dquarkus.extension.format=full to your command line.\");\n+                    }\n+                }\n+\n                 if (buildFile instanceof GradleBuildFile) {\n-                    System.out.println(\"\\nTo get more information, append --format=full to your command line.\");\n+                    System.out.println(\"\\nAdd an extension to your project by adding the dependency to your \" +\n+                            \"build.gradle or use `./gradlew addExtension --extensions=\\\"artifactId\\\"`\");\n                 } else {\n-                    System.out\n-                            .println(\"\\nTo get more information, append -Dquarkus.extension.format=full to your command line.\");\n+                    System.out.println(\"\\nAdd an extension to your project by adding the dependency to your \" +\n+                            \"pom.xml or use `./mvnw quarkus:add-extension -Dextensions=\\\"artifactId\\\"`\");\n                 }\n             }\n-\n-            if (buildFile instanceof GradleBuildFile) {\n-                System.out.println(\"\\nAdd an extension to your project by adding the dependency to your \" +\n-                        \"build.gradle or use `./gradlew addExtension --extensions=\\\"artifactId\\\"`\");\n-            } else {\n-                System.out.println(\"\\nAdd an extension to your project by adding the dependency to your \" +\n-                        \"pom.xml or use `./mvnw quarkus:add-extension -Dextensions=\\\"artifactId\\\"`\");\n-            }\n         }\n \n         return QuarkusCommandOutcome.success();\n     }\n \n+    private BuildFile getBuildFileSafe(QuarkusCommandInvocation invocation) {\n+        try {\n+            return invocation.getBuildFile();\n+        } catch (Exception e) {\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk4OTY1OQ=="}, "originalCommit": {"oid": "4281f0e044defd951da9cc292c90186520e52621"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4630, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}