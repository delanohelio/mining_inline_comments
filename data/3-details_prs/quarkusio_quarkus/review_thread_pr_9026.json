{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNDU1NTcy", "number": 9026, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMzozNzo0NFrOD4xeNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMzozODo0MlrOD4xegQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODU3Mzk2OnYy", "diffSide": "RIGHT", "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMzozNzo0NFrOGPsI_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMzo0NTo0MFrOGPsMuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwNTAyMw==", "bodyText": "Can be moved to where the initialisation occurs? https://github.com/quarkusio/quarkus/pull/9026/files#diff-f3233ae68279acfe2869eaffaeb10682R76", "url": "https://github.com/quarkusio/quarkus/pull/9026#discussion_r419105023", "createdAt": "2020-05-03T13:37:44Z", "author": {"login": "machi1990"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "diffHunk": "@@ -68,13 +67,13 @@\n     }\n \n     public QuartzScheduler(SchedulerContext context, QuartzSupport quartzSupport, Config config) {\n+        Map<String, ScheduledInvoker> invokers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb58035bfb3184c60c04875586bb5425ca837cd1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwNTk3Ng==", "bodyText": "Good idea, done", "url": "https://github.com/quarkusio/quarkus/pull/9026#discussion_r419105976", "createdAt": "2020-05-03T13:45:40Z", "author": {"login": "geoand"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "diffHunk": "@@ -68,13 +67,13 @@\n     }\n \n     public QuartzScheduler(SchedulerContext context, QuartzSupport quartzSupport, Config config) {\n+        Map<String, ScheduledInvoker> invokers;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwNTAyMw=="}, "originalCommit": {"oid": "bb58035bfb3184c60c04875586bb5425ca837cd1"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwODU3NDczOnYy", "diffSide": "RIGHT", "path": "extensions/quartz/deployment/src/main/java/io/quarkus/quartz/deployment/QuartzProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMzozODo0MlrOGPsJaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QxMzo0NjozNlrOGPsNOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwNTEyOQ==", "bodyText": "Ah did not know we have this. Thanks :)", "url": "https://github.com/quarkusio/quarkus/pull/9026#discussion_r419105129", "createdAt": "2020-05-03T13:38:42Z", "author": {"login": "machi1990"}, "path": "extensions/quartz/deployment/src/main/java/io/quarkus/quartz/deployment/QuartzProcessor.java", "diffHunk": "@@ -168,13 +170,22 @@ private String guessDriver(Optional<JdbcDataSourceBuildItem> jdbcDataSource) {\n     }\n \n     @BuildStep\n-    @Record(RUNTIME_INIT)\n-    public void build(QuartzRuntimeConfig runtimeConfig, QuartzBuildTimeConfig buildTimeConfig, QuartzRecorder recorder,\n-            BeanContainerBuildItem beanContainer,\n-            BuildProducer<ServiceStartBuildItem> serviceStart, QuartzJDBCDriverDialectBuildItem driverDialect,\n-            List<JdbcDataSourceSchemaReadyBuildItem> schemaReadyBuildItem) {\n-        recorder.initialize(runtimeConfig, buildTimeConfig, beanContainer.getValue(), driverDialect.getDriver());\n+    public void start(BuildProducer<ServiceStartBuildItem> serviceStart,\n+            @SuppressWarnings(\"unused\") List<JdbcDataSourceSchemaReadyBuildItem> schemaReadyBuildItem) {\n         // Make sure that StartupEvent is fired after the init\n         serviceStart.produce(new ServiceStartBuildItem(\"quartz\"));\n     }\n+\n+    @BuildStep\n+    @Record(RUNTIME_INIT)\n+    public void quartzSupportBean(QuartzRuntimeConfig runtimeConfig, QuartzBuildTimeConfig buildTimeConfig,\n+            QuartzRecorder recorder,\n+            BuildProducer<SyntheticBeanBuildItem> syntheticBeanBuildItemBuildProducer,\n+            QuartzJDBCDriverDialectBuildItem driverDialect) {\n+\n+        syntheticBeanBuildItemBuildProducer.produce(SyntheticBeanBuildItem.configure(QuartzSupport.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb58035bfb3184c60c04875586bb5425ca837cd1"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwNjEwNA==", "bodyText": "Yeah. @mkouba has improved the experience of \"creating\" beans at \"build time\".", "url": "https://github.com/quarkusio/quarkus/pull/9026#discussion_r419106104", "createdAt": "2020-05-03T13:46:36Z", "author": {"login": "geoand"}, "path": "extensions/quartz/deployment/src/main/java/io/quarkus/quartz/deployment/QuartzProcessor.java", "diffHunk": "@@ -168,13 +170,22 @@ private String guessDriver(Optional<JdbcDataSourceBuildItem> jdbcDataSource) {\n     }\n \n     @BuildStep\n-    @Record(RUNTIME_INIT)\n-    public void build(QuartzRuntimeConfig runtimeConfig, QuartzBuildTimeConfig buildTimeConfig, QuartzRecorder recorder,\n-            BeanContainerBuildItem beanContainer,\n-            BuildProducer<ServiceStartBuildItem> serviceStart, QuartzJDBCDriverDialectBuildItem driverDialect,\n-            List<JdbcDataSourceSchemaReadyBuildItem> schemaReadyBuildItem) {\n-        recorder.initialize(runtimeConfig, buildTimeConfig, beanContainer.getValue(), driverDialect.getDriver());\n+    public void start(BuildProducer<ServiceStartBuildItem> serviceStart,\n+            @SuppressWarnings(\"unused\") List<JdbcDataSourceSchemaReadyBuildItem> schemaReadyBuildItem) {\n         // Make sure that StartupEvent is fired after the init\n         serviceStart.produce(new ServiceStartBuildItem(\"quartz\"));\n     }\n+\n+    @BuildStep\n+    @Record(RUNTIME_INIT)\n+    public void quartzSupportBean(QuartzRuntimeConfig runtimeConfig, QuartzBuildTimeConfig buildTimeConfig,\n+            QuartzRecorder recorder,\n+            BuildProducer<SyntheticBeanBuildItem> syntheticBeanBuildItemBuildProducer,\n+            QuartzJDBCDriverDialectBuildItem driverDialect) {\n+\n+        syntheticBeanBuildItemBuildProducer.produce(SyntheticBeanBuildItem.configure(QuartzSupport.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTEwNTEyOQ=="}, "originalCommit": {"oid": "bb58035bfb3184c60c04875586bb5425ca837cd1"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3361, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}