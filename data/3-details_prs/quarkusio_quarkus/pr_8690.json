{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1OTUwMDg0", "number": 8690, "title": "Security: avoid ClassInfo in Sets", "bodyText": "Since it implements neither equals nor hashCode.", "createdAt": "2020-04-20T09:45:26Z", "url": "https://github.com/quarkusio/quarkus/pull/8690", "merged": true, "mergeCommit": {"oid": "5161922bd8025b1fb6840330762f40211e029c67"}, "closed": true, "closedAt": "2020-04-20T21:42:39Z", "author": {"login": "aloubyansky"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZb5PigH2gAyNDA1OTUwMDg0OmMyNDRmMzA3MjA5YzYxNDMzMWVkZGUzN2QzYmYwYjI0YjVlMDBmYjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZdPcJAFqTM5NjM2MTU0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c244f307209c614331edde37d3bf0b24b5e00fb3", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/c244f307209c614331edde37d3bf0b24b5e00fb3", "committedDate": "2020-04-20T09:44:09Z", "message": "Security: avoid ClassInfo in Sets"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MzEzMjg2", "url": "https://github.com/quarkusio/quarkus/pull/8690#pullrequestreview-396313286", "createdAt": "2020-04-20T10:03:13Z", "commit": {"oid": "c244f307209c614331edde37d3bf0b24b5e00fb3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MzYwMjM3", "url": "https://github.com/quarkusio/quarkus/pull/8690#pullrequestreview-396360237", "createdAt": "2020-04-20T11:16:16Z", "commit": {"oid": "c244f307209c614331edde37d3bf0b24b5e00fb3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMToxNjoxNlrOGIPeNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMToxNjoxNlrOGIPeNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI5NTI4Nw==", "bodyText": "I don't think it's worth changing it for this PR but please, in the future, when using a for loop is simpler than using a lambda, let's do the former.\nUsing lambdas in build time code is allowed but maybe let's only use them when they bring something to the plate?", "url": "https://github.com/quarkusio/quarkus/pull/8690#discussion_r411295287", "createdAt": "2020-04-20T11:16:16Z", "author": {"login": "gsmet"}, "path": "extensions/security/deployment/src/main/java/io/quarkus/security/deployment/SecurityProcessor.java", "diffHunk": "@@ -140,9 +140,13 @@ void gatherSecurityChecks(BuildProducer<BeanRegistrarBuildItem> beanRegistrars,\n             List<AdditionalSecurityCheckBuildItem> additionalSecurityChecks, SecurityBuildTimeConfig config) {\n         classPredicate.produce(new ApplicationClassPredicateBuildItem(new SecurityCheckStorage.AppPredicate()));\n \n-        Set<ClassInfo> additionalSecured = new HashSet<>();\n+        final Map<DotName, ClassInfo> additionalSecured = new HashMap<>();\n         for (AdditionalSecuredClassesBuildIem securedClasses : additionalSecuredClasses) {\n-            additionalSecured.addAll(securedClasses.additionalSecuredClasses);\n+            securedClasses.additionalSecuredClasses.forEach(c -> {\n+                if (!additionalSecured.containsKey(c.name())) {\n+                    additionalSecured.put(c.name(), c);\n+                }\n+            });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c244f307209c614331edde37d3bf0b24b5e00fb3"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MzYxMzYy", "url": "https://github.com/quarkusio/quarkus/pull/8690#pullrequestreview-396361362", "createdAt": "2020-04-20T11:18:03Z", "commit": {"oid": "c244f307209c614331edde37d3bf0b24b5e00fb3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMToxODowM1rOGIPiFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMToxODowM1rOGIPiFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI5NjI3Ng==", "bodyText": "You could have used values() here.", "url": "https://github.com/quarkusio/quarkus/pull/8690#discussion_r411296276", "createdAt": "2020-04-20T11:18:03Z", "author": {"login": "gsmet"}, "path": "extensions/security/deployment/src/main/java/io/quarkus/security/deployment/SecurityProcessor.java", "diffHunk": "@@ -225,8 +229,8 @@ private ResultHandle paramTypes(MethodCreator ctor, List<Type> parameters) {\n          * Handle additional secured classes by adding the denyAll check to all public non-static methods\n          * that don't have security annotations\n          */\n-        for (ClassInfo additionalSecureClassInfo : additionalSecuredClasses) {\n-            for (MethodInfo methodInfo : additionalSecureClassInfo.methods()) {\n+        for (Map.Entry<DotName, ClassInfo> additionalSecureClassInfo : additionalSecuredClasses.entrySet()) {\n+            for (MethodInfo methodInfo : additionalSecureClassInfo.getValue().methods()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c244f307209c614331edde37d3bf0b24b5e00fb3"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MzYxNTQ4", "url": "https://github.com/quarkusio/quarkus/pull/8690#pullrequestreview-396361548", "createdAt": "2020-04-20T11:18:18Z", "commit": {"oid": "c244f307209c614331edde37d3bf0b24b5e00fb3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4446, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}