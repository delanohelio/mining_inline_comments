{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwOTI0MDMw", "number": 8476, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0MzozNVrODwI3Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0MzozNVrODwI3Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODAzNDc0OnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageConfigBuildStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxOTo0MzozNVrOGC-OVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwODozMDo1NVrOGDO3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc2OTgxNA==", "bodyText": "Since the only thing that changes is the Path, I'd just change that:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Path jdk8GraalVmCacertsPath = Paths.get(graalVmHome, \"jre\", \"lib\", \"security\", \"cacerts\");\n          \n          \n            \n                            if (Files.exists(jdk8GraalVmCacertsPath)) {\n          \n          \n            \n                                sslTrustStoreSystemProperty\n          \n          \n            \n                                        .produce(new SslTrustStoreSystemPropertyBuildItem(jdk8GraalVmCacertsPath.toString()));\n          \n          \n            \n                            } else {\n          \n          \n            \n                                sslTrustStoreSystemProperty.produce(\n          \n          \n            \n                                        new SslTrustStoreSystemPropertyBuildItem(\n          \n          \n            \n                                                Paths.get(graalVmHome, \"lib\", \"security\", \"cacerts\").toString()));\n          \n          \n            \n                            }\n          \n          \n            \n                            Path graalVmCacertsPath = Paths.get(graalVmHome, \"jre\", \"lib\", \"security\", \"cacerts\");\n          \n          \n            \n                            if (!Files.exists(graalVmCacertsPath)) {\n          \n          \n            \n                               graalVmCacertsPath = Paths.get(graalVmHome, \"lib\", \"security\", \"cacerts\");\n          \n          \n            \n                            }\n          \n          \n            \n                            // This is useful for testing but the user will have to override it.\n          \n          \n            \n                            sslTrustStoreSystemProperty.produce(new SslTrustStoreSystemPropertyBuildItem(graalVmCacertsPath.toString()));", "url": "https://github.com/quarkusio/quarkus/pull/8476#discussion_r405769814", "createdAt": "2020-04-08T19:43:35Z", "author": {"login": "gastaldi"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageConfigBuildStep.java", "diffHunk": "@@ -77,11 +78,18 @@ void build(SslContextConfigurationRecorder sslContextConfigurationRecorder,\n         Boolean sslNativeEnabled = isSslNativeEnabled(sslNativeConfig, extensionSslNativeSupport);\n         if (sslNativeEnabled) {\n             // This makes the native image dependent on the local path used to build it.\n+            // This is useful for testing but the user will have to override it.\n             String graalVmHome = System.getenv(\"GRAALVM_HOME\");\n             if (graalVmHome != null) {\n-                Path graalVmCacertsPath = Paths.get(graalVmHome, \"jre\", \"lib\", \"security\", \"cacerts\");\n-                // This is useful for testing but the user will have to override it.\n-                sslTrustStoreSystemProperty.produce(new SslTrustStoreSystemPropertyBuildItem(graalVmCacertsPath.toString()));\n+                Path jdk8GraalVmCacertsPath = Paths.get(graalVmHome, \"jre\", \"lib\", \"security\", \"cacerts\");\n+                if (Files.exists(jdk8GraalVmCacertsPath)) {\n+                    sslTrustStoreSystemProperty\n+                            .produce(new SslTrustStoreSystemPropertyBuildItem(jdk8GraalVmCacertsPath.toString()));\n+                } else {\n+                    sslTrustStoreSystemProperty.produce(\n+                            new SslTrustStoreSystemPropertyBuildItem(\n+                                    Paths.get(graalVmHome, \"lib\", \"security\", \"cacerts\").toString()));\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c618fa5514450e0ab7449e049aa3dbbb747581ea"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjA0MjQyMg==", "bodyText": "Next time I will just take my day off rather than trying to work :)\nDone, thanks!", "url": "https://github.com/quarkusio/quarkus/pull/8476#discussion_r406042422", "createdAt": "2020-04-09T08:30:55Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageConfigBuildStep.java", "diffHunk": "@@ -77,11 +78,18 @@ void build(SslContextConfigurationRecorder sslContextConfigurationRecorder,\n         Boolean sslNativeEnabled = isSslNativeEnabled(sslNativeConfig, extensionSslNativeSupport);\n         if (sslNativeEnabled) {\n             // This makes the native image dependent on the local path used to build it.\n+            // This is useful for testing but the user will have to override it.\n             String graalVmHome = System.getenv(\"GRAALVM_HOME\");\n             if (graalVmHome != null) {\n-                Path graalVmCacertsPath = Paths.get(graalVmHome, \"jre\", \"lib\", \"security\", \"cacerts\");\n-                // This is useful for testing but the user will have to override it.\n-                sslTrustStoreSystemProperty.produce(new SslTrustStoreSystemPropertyBuildItem(graalVmCacertsPath.toString()));\n+                Path jdk8GraalVmCacertsPath = Paths.get(graalVmHome, \"jre\", \"lib\", \"security\", \"cacerts\");\n+                if (Files.exists(jdk8GraalVmCacertsPath)) {\n+                    sslTrustStoreSystemProperty\n+                            .produce(new SslTrustStoreSystemPropertyBuildItem(jdk8GraalVmCacertsPath.toString()));\n+                } else {\n+                    sslTrustStoreSystemProperty.produce(\n+                            new SslTrustStoreSystemPropertyBuildItem(\n+                                    Paths.get(graalVmHome, \"lib\", \"security\", \"cacerts\").toString()));\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTc2OTgxNA=="}, "originalCommit": {"oid": "c618fa5514450e0ab7449e049aa3dbbb747581ea"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3676, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}