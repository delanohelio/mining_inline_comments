{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NTM5NDg1", "number": 12385, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTowMDoxOFrOEomBpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTowNTozNlrOEomLMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMDAxNTExOnYy", "diffSide": "RIGHT", "path": "extensions/micrometer/deployment/src/main/java/io/quarkus/micrometer/deployment/MicrometerProcessor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTowMDoxOFrOHZxrVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODowMzoyNVrOHapVmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5MDM1Nw==", "bodyText": "[nit] Just a thought I had from a general perspective and not specific to this PR only, but can we get smarter about registering beans as being unremovable?\nFor instance, can we check for usage of @Timed in application code before marking the classes for it as unremovable?\nMaybe the cost of that search isn't worth the small amount of marking classes as unremovable, but I'm curious", "url": "https://github.com/quarkusio/quarkus/pull/12385#discussion_r496790357", "createdAt": "2020-09-29T15:00:18Z", "author": {"login": "kenfinnigan"}, "path": "extensions/micrometer/deployment/src/main/java/io/quarkus/micrometer/deployment/MicrometerProcessor.java", "diffHunk": "@@ -84,6 +99,12 @@ UnremovableBeanBuildItem registerAdditionalBeans(CombinedIndexBuildItem indexBui\n                 .addBeanClass(CompositeRegistryCreator.class)\n                 .addBeanClass(MeterFilterConstraint.class)\n                 .addBeanClass(MeterFilterConstraints.class)\n+                .addBeanClass(TIMED_ANNOTATION.toString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3ed0c9af5ff50265965cac600a4e1f5eb087e35"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgwMzA4MA==", "bodyText": "yea.. I can chew on it", "url": "https://github.com/quarkusio/quarkus/pull/12385#discussion_r496803080", "createdAt": "2020-09-29T15:16:52Z", "author": {"login": "ebullient"}, "path": "extensions/micrometer/deployment/src/main/java/io/quarkus/micrometer/deployment/MicrometerProcessor.java", "diffHunk": "@@ -84,6 +99,12 @@ UnremovableBeanBuildItem registerAdditionalBeans(CombinedIndexBuildItem indexBui\n                 .addBeanClass(CompositeRegistryCreator.class)\n                 .addBeanClass(MeterFilterConstraint.class)\n                 .addBeanClass(MeterFilterConstraints.class)\n+                .addBeanClass(TIMED_ANNOTATION.toString())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5MDM1Nw=="}, "originalCommit": {"oid": "a3ed0c9af5ff50265965cac600a4e1f5eb087e35"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5ODkxMg==", "bodyText": "If it's speed of search that's a consideration (and assuming this can be some sort of compile-only dependency) I cannot recommend https://github.com/classgraph/classgraph enough. So fast...", "url": "https://github.com/quarkusio/quarkus/pull/12385#discussion_r497198912", "createdAt": "2020-09-30T01:50:42Z", "author": {"login": "jkschneider"}, "path": "extensions/micrometer/deployment/src/main/java/io/quarkus/micrometer/deployment/MicrometerProcessor.java", "diffHunk": "@@ -84,6 +99,12 @@ UnremovableBeanBuildItem registerAdditionalBeans(CombinedIndexBuildItem indexBui\n                 .addBeanClass(CompositeRegistryCreator.class)\n                 .addBeanClass(MeterFilterConstraint.class)\n                 .addBeanClass(MeterFilterConstraints.class)\n+                .addBeanClass(TIMED_ANNOTATION.toString())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5MDM1Nw=="}, "originalCommit": {"oid": "a3ed0c9af5ff50265965cac600a4e1f5eb087e35"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcwMjI5Nw==", "bodyText": "Moved annotations (and interceptors) to a different set of additional beans that are removable. Everything still works (I added more tests to an IT bucket to make sure)", "url": "https://github.com/quarkusio/quarkus/pull/12385#discussion_r497702297", "createdAt": "2020-09-30T18:03:25Z", "author": {"login": "ebullient"}, "path": "extensions/micrometer/deployment/src/main/java/io/quarkus/micrometer/deployment/MicrometerProcessor.java", "diffHunk": "@@ -84,6 +99,12 @@ UnremovableBeanBuildItem registerAdditionalBeans(CombinedIndexBuildItem indexBui\n                 .addBeanClass(CompositeRegistryCreator.class)\n                 .addBeanClass(MeterFilterConstraint.class)\n                 .addBeanClass(MeterFilterConstraints.class)\n+                .addBeanClass(TIMED_ANNOTATION.toString())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5MDM1Nw=="}, "originalCommit": {"oid": "a3ed0c9af5ff50265965cac600a4e1f5eb087e35"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMDAzOTUyOnYy", "diffSide": "RIGHT", "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/MicrometerCountedInterceptor.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTowNTozNlrOHZx66g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODoyMDoyNVrOHap6EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5NDM0Ng==", "bodyText": "Wondering if, long term, there's a better home for this kind of thing so other projects can get this OOTB?", "url": "https://github.com/quarkusio/quarkus/pull/12385#discussion_r496794346", "createdAt": "2020-09-29T15:05:36Z", "author": {"login": "kenfinnigan"}, "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/MicrometerCountedInterceptor.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package io.quarkus.micrometer.runtime;\n+\n+import java.lang.reflect.Method;\n+import java.util.concurrent.CompletionStage;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3ed0c9af5ff50265965cac600a4e1f5eb087e35"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgwMzkwOA==", "bodyText": "I don't follow. This is specific to what the @timed / @counted implementation for Micrometer annotations expect..\nAnd I'm not sure I entirely love this. This is probably where the most changes might come as it stews.", "url": "https://github.com/quarkusio/quarkus/pull/12385#discussion_r496803908", "createdAt": "2020-09-29T15:17:58Z", "author": {"login": "ebullient"}, "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/MicrometerCountedInterceptor.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package io.quarkus.micrometer.runtime;\n+\n+import java.lang.reflect.Method;\n+import java.util.concurrent.CompletionStage;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5NDM0Ng=="}, "originalCommit": {"oid": "a3ed0c9af5ff50265965cac600a4e1f5eb087e35"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgwODcxMA==", "bodyText": "Agree it's specific to those annotations, but thinking from a perspective of other projects using Micrometer directly, do they need this too? If so, where should it go?\nMaybe the answer is they don't, and it's fine to be only here.", "url": "https://github.com/quarkusio/quarkus/pull/12385#discussion_r496808710", "createdAt": "2020-09-29T15:23:03Z", "author": {"login": "kenfinnigan"}, "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/MicrometerCountedInterceptor.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package io.quarkus.micrometer.runtime;\n+\n+import java.lang.reflect.Method;\n+import java.util.concurrent.CompletionStage;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5NDM0Ng=="}, "originalCommit": {"oid": "a3ed0c9af5ff50265965cac600a4e1f5eb087e35"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE5OTE5OQ==", "bodyText": "I think this commit disappeared. Happy to pull something into Micrometer core if it's generally useful.", "url": "https://github.com/quarkusio/quarkus/pull/12385#discussion_r497199199", "createdAt": "2020-09-30T01:51:47Z", "author": {"login": "jkschneider"}, "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/MicrometerCountedInterceptor.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package io.quarkus.micrometer.runtime;\n+\n+import java.lang.reflect.Method;\n+import java.util.concurrent.CompletionStage;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5NDM0Ng=="}, "originalCommit": {"oid": "a3ed0c9af5ff50265965cac600a4e1f5eb087e35"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxMTYzMg==", "bodyText": "I think I'll keep it for now.. I just don't like it. I don't believe there is anything here that can be pulled out to somewhere more generic.", "url": "https://github.com/quarkusio/quarkus/pull/12385#discussion_r497711632", "createdAt": "2020-09-30T18:20:25Z", "author": {"login": "ebullient"}, "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/MicrometerCountedInterceptor.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package io.quarkus.micrometer.runtime;\n+\n+import java.lang.reflect.Method;\n+import java.util.concurrent.CompletionStage;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5NDM0Ng=="}, "originalCommit": {"oid": "a3ed0c9af5ff50265965cac600a4e1f5eb087e35"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4391, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}