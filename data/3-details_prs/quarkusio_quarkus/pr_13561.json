{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NTIzNjI5", "number": 13561, "title": "Add @JsonView support to quarkus-resteasy-reactive-jackson", "bodyText": "Fixes: #13566", "createdAt": "2020-11-30T12:41:10Z", "url": "https://github.com/quarkusio/quarkus/pull/13561", "merged": true, "mergeCommit": {"oid": "dd8c39df9a946df5649bb804548217467faffd2e"}, "closed": true, "closedAt": "2020-11-30T19:09:57Z", "author": {"login": "geoand"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhkwiWABqjQwNTE3NTk0NzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhn_mTAFqTU0MTA4MTY2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4f600ea4dd0f57de09c60a8ebd6fd5cc7c9a179", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/f4f600ea4dd0f57de09c60a8ebd6fd5cc7c9a179", "committedDate": "2020-11-30T12:40:53Z", "message": "Add @JsonView support to quarkus-resteasy-reactive-jackson"}, "afterCommit": {"oid": "83c796e441d3b97a6be7015efcbac924e8e4e752", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/83c796e441d3b97a6be7015efcbac924e8e4e752", "committedDate": "2020-11-30T12:46:13Z", "message": "Add @JsonView support to quarkus-resteasy-reactive-jackson"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwOTI3NTUy", "url": "https://github.com/quarkusio/quarkus/pull/13561#pullrequestreview-540927552", "createdAt": "2020-11-30T13:54:18Z", "commit": {"oid": "83c796e441d3b97a6be7015efcbac924e8e4e752"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzo1NDoxOFrOH78FSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzo1NDoxOFrOH78FSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYxMjQyNg==", "bodyText": "Should the view class be added for reflection?\nI don't see us doing it in the quarkus-jackson extension and it looks like reflection could be used by Jackson, right?", "url": "https://github.com/quarkusio/quarkus/pull/13561#discussion_r532612426", "createdAt": "2020-11-30T13:54:18Z", "author": {"login": "gsmet"}, "path": "extensions/resteasy-reactive/quarkus-resteasy-reactive-jackson/deployment/src/test/java/io/quarkus/resteasy/reactive/jackson/deployment/test/SimpleJsonResource.java", "diffHunk": "@@ -81,4 +83,30 @@ public void run() {\n         }).start();\n     }\n \n+    @GET\n+    @Path(\"/user-without-view\")\n+    public User userWithoutView() {\n+        return testUser();\n+    }\n+\n+    @JsonView(Views.Public.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83c796e441d3b97a6be7015efcbac924e8e4e752"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwOTI5MTUw", "url": "https://github.com/quarkusio/quarkus/pull/13561#pullrequestreview-540929150", "createdAt": "2020-11-30T13:56:05Z", "commit": {"oid": "83c796e441d3b97a6be7015efcbac924e8e4e752"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaed59788d6f38ac12812b71c0404c784299deac", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/eaed59788d6f38ac12812b71c0404c784299deac", "committedDate": "2020-11-30T16:27:00Z", "message": "Add proper reflection registration for RESTEasy Reactive"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "975f0b7a3ac3cebe8527cac1974bb124dcab1b4d", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/975f0b7a3ac3cebe8527cac1974bb124dcab1b4d", "committedDate": "2020-11-30T16:27:00Z", "message": "Add @JsonView support to quarkus-resteasy-reactive-jackson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83c796e441d3b97a6be7015efcbac924e8e4e752", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/83c796e441d3b97a6be7015efcbac924e8e4e752", "committedDate": "2020-11-30T12:46:13Z", "message": "Add @JsonView support to quarkus-resteasy-reactive-jackson"}, "afterCommit": {"oid": "975f0b7a3ac3cebe8527cac1974bb124dcab1b4d", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/975f0b7a3ac3cebe8527cac1974bb124dcab1b4d", "committedDate": "2020-11-30T16:27:00Z", "message": "Add @JsonView support to quarkus-resteasy-reactive-jackson"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMDgxNjY3", "url": "https://github.com/quarkusio/quarkus/pull/13561#pullrequestreview-541081667", "createdAt": "2020-11-30T16:32:30Z", "commit": {"oid": "975f0b7a3ac3cebe8527cac1974bb124dcab1b4d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjozMjozMFrOH8DTjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNjozMjozMFrOH8DTjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjczMDc2Ng==", "bodyText": "Sorry to be that guy but shouldn't we do this in the quarkus-jackson extension given it's a generic Jackson annotation?\nIt could be used in other extensions then.\nAnd I would do it for all @JsonView annotations in the classpath.", "url": "https://github.com/quarkusio/quarkus/pull/13561#discussion_r532730766", "createdAt": "2020-11-30T16:32:30Z", "author": {"login": "gsmet"}, "path": "extensions/resteasy-reactive/quarkus-resteasy-reactive-jackson/deployment/src/main/java/io/quarkus/resteasy/reactive/jackson/deployment/processor/ResteasyReactiveJacksonProcessor.java", "diffHunk": "@@ -38,4 +51,24 @@ void additionalProviders(BuildProducer<AdditionalBeanBuildItem> additionalBean,\n                 .produce(new MessageBodyWriterBuildItem(JacksonMessageBodyWriter.class.getName(), Object.class.getName(),\n                         Collections.singletonList(MediaType.APPLICATION_JSON)));\n     }\n+\n+    @BuildStep\n+    void registerForReflection(Optional<ResourceScanningResultBuildItem> resourceScanningResultBuildItem,\n+            BuildProducer<ReflectiveClassBuildItem> reflectiveClass) {\n+        if (!resourceScanningResultBuildItem.isPresent()) {\n+            return;\n+        }\n+\n+        Collection<ClassInfo> resourceClasses = resourceScanningResultBuildItem.get().getScannedResources().values();\n+        Set<String> classesNeedingReflectionOnMethods = new HashSet<>();\n+        for (ClassInfo resourceClass : resourceClasses) {\n+            if (resourceClass.annotations().containsKey(JSON_VIEW)) {\n+                classesNeedingReflectionOnMethods.add(resourceClass.name().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "975f0b7a3ac3cebe8527cac1974bb124dcab1b4d"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1340, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}