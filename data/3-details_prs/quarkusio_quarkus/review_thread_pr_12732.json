{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MDEzMTU3", "number": 12732, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTozOToxNFrOEt8_EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMTo1Njo0MlrOE2uwaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjIwNTYwOnYy", "diffSide": "RIGHT", "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTozOToxNFrOHiDmUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjo0MDozNFrOHiFwWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3MjU5NA==", "bodyText": "Wondering if these 2 last classes shouldn't be always added. WDYT?", "url": "https://github.com/quarkusio/quarkus/pull/12732#discussion_r505472594", "createdAt": "2020-10-15T11:39:14Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -209,6 +209,30 @@ public void build(CombinedIndexBuildItem indexBuildItem, BuildProducer<Reflectiv\n             //ignore, Apicurio Avro is not in the classpath\n         }\n \n+        try {\n+            Class.forName(\"io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler\", false,\n+                    Thread.currentThread().getContextClassLoader());\n+\n+            reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, true,\n+                    \"io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler\",\n+                    \"org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin\",\n+                    \"org.apache.kafka.common.security.oauthbearer.OAuthBearerToken\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51264a498ad6a53326146c69a8bda69ac61c35df"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTUwNzkzMA==", "bodyText": "I moved them outside of the strimzi oauth block, so they can be used for general oauth use cases as well.", "url": "https://github.com/quarkusio/quarkus/pull/12732#discussion_r505507930", "createdAt": "2020-10-15T12:40:34Z", "author": {"login": "dejanb"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -209,6 +209,30 @@ public void build(CombinedIndexBuildItem indexBuildItem, BuildProducer<Reflectiv\n             //ignore, Apicurio Avro is not in the classpath\n         }\n \n+        try {\n+            Class.forName(\"io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler\", false,\n+                    Thread.currentThread().getContextClassLoader());\n+\n+            reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, true,\n+                    \"io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler\",\n+                    \"org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin\",\n+                    \"org.apache.kafka.common.security.oauthbearer.OAuthBearerToken\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3MjU5NA=="}, "originalCommit": {"oid": "51264a498ad6a53326146c69a8bda69ac61c35df"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjIwODE4OnYy", "diffSide": "RIGHT", "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMTozOTo1OFrOHiDn4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjowMjozMlrOHiEXVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3Mjk5NQ==", "bodyText": "Does that mean that Strimizi Auth depends on keycloak? How can you be sure that these classes are loadable?", "url": "https://github.com/quarkusio/quarkus/pull/12732#discussion_r505472995", "createdAt": "2020-10-15T11:39:58Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -209,6 +209,30 @@ public void build(CombinedIndexBuildItem indexBuildItem, BuildProducer<Reflectiv\n             //ignore, Apicurio Avro is not in the classpath\n         }\n \n+        try {\n+            Class.forName(\"io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler\", false,\n+                    Thread.currentThread().getContextClassLoader());\n+\n+            reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, true,\n+                    \"io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler\",\n+                    \"org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin\",\n+                    \"org.apache.kafka.common.security.oauthbearer.OAuthBearerToken\"));\n+\n+            reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, true,\n+                    \"org.keycloak.jose.jws.JWSHeader\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "51264a498ad6a53326146c69a8bda69ac61c35df"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4NTE0MA==", "bodyText": "Yeah,  Strimzi's kafka-oauth-client uses keycloak lib and adds it as a dependency. So it should be available if the library is used.", "url": "https://github.com/quarkusio/quarkus/pull/12732#discussion_r505485140", "createdAt": "2020-10-15T12:02:32Z", "author": {"login": "dejanb"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -209,6 +209,30 @@ public void build(CombinedIndexBuildItem indexBuildItem, BuildProducer<Reflectiv\n             //ignore, Apicurio Avro is not in the classpath\n         }\n \n+        try {\n+            Class.forName(\"io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler\", false,\n+                    Thread.currentThread().getContextClassLoader());\n+\n+            reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, true,\n+                    \"io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler\",\n+                    \"org.apache.kafka.common.security.oauthbearer.internals.OAuthBearerRefreshingLogin\",\n+                    \"org.apache.kafka.common.security.oauthbearer.OAuthBearerToken\"));\n+\n+            reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, true,\n+                    \"org.keycloak.jose.jws.JWSHeader\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ3Mjk5NQ=="}, "originalCommit": {"oid": "51264a498ad6a53326146c69a8bda69ac61c35df"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODE0NzQ3OnYy", "diffSide": "RIGHT", "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/graal/SubstitutionUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzo0ODoxN1rOHsvgFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzo0ODoxN1rOHsvgFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3NzY1NA==", "bodyText": "Not sure about the name.\nMaybe SubjectHolder ?", "url": "https://github.com/quarkusio/quarkus/pull/12732#discussion_r516677654", "createdAt": "2020-11-03T13:48:17Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/graal/SubstitutionUtils.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package io.quarkus.kafka.client.runtime.graal;\n+\n+import java.security.AccessControlContext;\n+import java.util.HashMap;\n+\n+import javax.security.auth.Subject;\n+\n+public class SubstitutionUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7e5b83e903411820d262641dc9fe1955cd45f4"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODE0OTQ5OnYy", "diffSide": "RIGHT", "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/graal/SubstitutionUtils.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzo0ODo0NVrOHsvhXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMTowMzoxNFrOHtTSdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3Nzk4Mw==", "bodyText": "Should it be final?", "url": "https://github.com/quarkusio/quarkus/pull/12732#discussion_r516677983", "createdAt": "2020-11-03T13:48:45Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/graal/SubstitutionUtils.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package io.quarkus.kafka.client.runtime.graal;\n+\n+import java.security.AccessControlContext;\n+import java.util.HashMap;\n+\n+import javax.security.auth.Subject;\n+\n+public class SubstitutionUtils {\n+\n+    public static HashMap<AccessControlContext, Subject> subjects = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e7e5b83e903411820d262641dc9fe1955cd45f4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY4MDc5MQ==", "bodyText": "Should this field be moved to the Subject class?", "url": "https://github.com/quarkusio/quarkus/pull/12732#discussion_r516680791", "createdAt": "2020-11-03T13:52:51Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/graal/SubstitutionUtils.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package io.quarkus.kafka.client.runtime.graal;\n+\n+import java.security.AccessControlContext;\n+import java.util.HashMap;\n+\n+import javax.security.auth.Subject;\n+\n+public class SubstitutionUtils {\n+\n+    public static HashMap<AccessControlContext, Subject> subjects = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3Nzk4Mw=="}, "originalCommit": {"oid": "9e7e5b83e903411820d262641dc9fe1955cd45f4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI0MTA2NA==", "bodyText": "@cescoffier The field has to be kept outside otherwise IIRC you get an error. The only fields allowed in substituted classes are aliases of existing fields.\nI'm not an expert on this java security APIs, but a couple of things to bear in mind would be:\n\nShould be it be concurrent?\nIs there a chance entries could be stored and not removed? Maybe you need some kind of expiration of entries to avoid a leak?", "url": "https://github.com/quarkusio/quarkus/pull/12732#discussion_r517241064", "createdAt": "2020-11-04T10:24:40Z", "author": {"login": "galderz"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/graal/SubstitutionUtils.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package io.quarkus.kafka.client.runtime.graal;\n+\n+import java.security.AccessControlContext;\n+import java.util.HashMap;\n+\n+import javax.security.auth.Subject;\n+\n+public class SubstitutionUtils {\n+\n+    public static HashMap<AccessControlContext, Subject> subjects = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3Nzk4Mw=="}, "originalCommit": {"oid": "9e7e5b83e903411820d262641dc9fe1955cd45f4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzI2Mzk4OA==", "bodyText": "ah, thanks for reminding me of this @galderz! I always forgot.\nHandling expiration might be good as it would avoid the potential growth I mentioned in my review.", "url": "https://github.com/quarkusio/quarkus/pull/12732#discussion_r517263988", "createdAt": "2020-11-04T11:03:14Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/graal/SubstitutionUtils.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package io.quarkus.kafka.client.runtime.graal;\n+\n+import java.security.AccessControlContext;\n+import java.util.HashMap;\n+\n+import javax.security.auth.Subject;\n+\n+public class SubstitutionUtils {\n+\n+    public static HashMap<AccessControlContext, Subject> subjects = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3Nzk4Mw=="}, "originalCommit": {"oid": "9e7e5b83e903411820d262641dc9fe1955cd45f4"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODI0NjE3OnYy", "diffSide": "RIGHT", "path": "extensions/kafka-client/runtime/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMTo1Njo0MlrOHvrRgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNFQxNjo1MjozOFrOHzMMww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc1NDExMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        <artifactId>quarkus-caffeine-deployment</artifactId>\n          \n          \n            \n                        <artifactId>quarkus-caffeine</artifactId>\n          \n      \n    \n    \n  \n\nWe should depend on the runtime module and not the deployment one.", "url": "https://github.com/quarkusio/quarkus/pull/12732#discussion_r519754113", "createdAt": "2020-11-09T11:56:42Z", "author": {"login": "machi1990"}, "path": "extensions/kafka-client/runtime/pom.xml", "diffHunk": "@@ -34,6 +34,11 @@\n             <optional>true</optional>\n         </dependency>\n \n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-caffeine-deployment</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "530bcf77b6950e7cb1c597354a9518a2ee79b048"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc5MDEyNg==", "bodyText": "@machi1990  Thanks for the suggestion. I fixed it, however I needed to add a dependency on this deployment module in kafka-client-deployment to make it work properly.", "url": "https://github.com/quarkusio/quarkus/pull/12732#discussion_r519790126", "createdAt": "2020-11-09T13:02:29Z", "author": {"login": "dejanb"}, "path": "extensions/kafka-client/runtime/pom.xml", "diffHunk": "@@ -34,6 +34,11 @@\n             <optional>true</optional>\n         </dependency>\n \n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-caffeine-deployment</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc1NDExMw=="}, "originalCommit": {"oid": "530bcf77b6950e7cb1c597354a9518a2ee79b048"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzQzOTI5OQ==", "bodyText": "Thanks @dejanb. The CI failure seemed unrelated to change, I've re-launched the build.", "url": "https://github.com/quarkusio/quarkus/pull/12732#discussion_r523439299", "createdAt": "2020-11-14T16:52:38Z", "author": {"login": "machi1990"}, "path": "extensions/kafka-client/runtime/pom.xml", "diffHunk": "@@ -34,6 +34,11 @@\n             <optional>true</optional>\n         </dependency>\n \n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-caffeine-deployment</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc1NDExMw=="}, "originalCommit": {"oid": "530bcf77b6950e7cb1c597354a9518a2ee79b048"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4319, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}