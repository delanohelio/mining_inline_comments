{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNTYyMDUy", "number": 7566, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0MzoxM1rODlDGEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0NDo1NVrODlDILQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTc0NjEwOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/mongodb-panache.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0MzoxM1rOFxts7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0MzoxM1rOFxts7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3MzMyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This will only works when extending `PanacheMongoEntityBase`, and not `PanacheMongoEntity`, as the ID field also needs to be included in the constructor.\n          \n          \n            \n            This will only work when the entity extends `PanacheMongoEntityBase` and not `PanacheMongoEntity`, as the ID field also needs to be included in the constructor.", "url": "https://github.com/quarkusio/quarkus/pull/7566#discussion_r387673324", "createdAt": "2020-03-04T13:43:13Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/mongodb-panache.adoc", "diffHunk": "@@ -653,17 +653,27 @@ See this part of the documentation: link:mongodb#simplifying-mongodb-client-usag\n Another option is to use the `@BsonCreator` annotation to tell the `PojoCodec` to use the Kotlin data class default constructor,\n in this case all constructor parameters have to be annotated with `@BsonProperty`: see link:{mongodb-doc-root-url}/bson/pojos/#supporting-pojos-without-no-args-constructors[Supporting pojos without no args constructor].\n \n+This will only works when extending `PanacheMongoEntityBase`, and not `PanacheMongoEntity`, as the ID field also needs to be included in the constructor.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2626914f02792d47e1dbdbd037c3bc2ec1dfbf25"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTc0NzUzOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/mongodb-panache.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0Mzo0M1rOFxtt9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0Mzo0M1rOFxtt9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3MzU5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Here we use `var` but `val` can also be used.\n          \n          \n            \n            Here we use `var` but note that `val` can also be used.", "url": "https://github.com/quarkusio/quarkus/pull/7566#discussion_r387673590", "createdAt": "2020-03-04T13:43:43Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/mongodb-panache.adoc", "diffHunk": "@@ -653,17 +653,27 @@ See this part of the documentation: link:mongodb#simplifying-mongodb-client-usag\n Another option is to use the `@BsonCreator` annotation to tell the `PojoCodec` to use the Kotlin data class default constructor,\n in this case all constructor parameters have to be annotated with `@BsonProperty`: see link:{mongodb-doc-root-url}/bson/pojos/#supporting-pojos-without-no-args-constructors[Supporting pojos without no args constructor].\n \n+This will only works when extending `PanacheMongoEntityBase`, and not `PanacheMongoEntity`, as the ID field also needs to be included in the constructor.\n+\n An example of a `Person` class defined as a Kotlin data class would look like:\n \n [source,kotlin]\n ----\n data class Person @BsonCreator constructor (\n+    @BsonId var id: ObjectId,\n     @BsonProperty(\"name\") var name: String,\n     @BsonProperty(\"birth\") var birth: LocalDate,\n     @BsonProperty(\"status\") var status: Status\n-): PanacheMongoEntity()\n+): PanacheMongoEntityBase()\n ----\n \n+[TIP]\n+====\n+Here we use `var` but `val` can also be used.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2626914f02792d47e1dbdbd037c3bc2ec1dfbf25"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTc1MTQ5OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/mongodb-panache.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0NDo1NVrOFxtweQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMzo0NDo1NVrOFxtweQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY3NDIzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The `@BsonId` annotation is used instead of `@BsonProperty(\"_id\")` as it is shorter, but both can be used.\n          \n          \n            \n            The `@BsonId` annotation is used instead of `@BsonProperty(\"_id\")` for brevity's sake, but use of either is valid.", "url": "https://github.com/quarkusio/quarkus/pull/7566#discussion_r387674233", "createdAt": "2020-03-04T13:44:55Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/mongodb-panache.adoc", "diffHunk": "@@ -653,17 +653,27 @@ See this part of the documentation: link:mongodb#simplifying-mongodb-client-usag\n Another option is to use the `@BsonCreator` annotation to tell the `PojoCodec` to use the Kotlin data class default constructor,\n in this case all constructor parameters have to be annotated with `@BsonProperty`: see link:{mongodb-doc-root-url}/bson/pojos/#supporting-pojos-without-no-args-constructors[Supporting pojos without no args constructor].\n \n+This will only works when extending `PanacheMongoEntityBase`, and not `PanacheMongoEntity`, as the ID field also needs to be included in the constructor.\n+\n An example of a `Person` class defined as a Kotlin data class would look like:\n \n [source,kotlin]\n ----\n data class Person @BsonCreator constructor (\n+    @BsonId var id: ObjectId,\n     @BsonProperty(\"name\") var name: String,\n     @BsonProperty(\"birth\") var birth: LocalDate,\n     @BsonProperty(\"status\") var status: Status\n-): PanacheMongoEntity()\n+): PanacheMongoEntityBase()\n ----\n \n+[TIP]\n+====\n+Here we use `var` but `val` can also be used.\n+\n+The `@BsonId` annotation is used instead of `@BsonProperty(\"_id\")` as it is shorter, but both can be used.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2626914f02792d47e1dbdbd037c3bc2ec1dfbf25"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4890, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}