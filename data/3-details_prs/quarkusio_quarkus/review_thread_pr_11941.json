{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMzk1MzA3", "number": 11941, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo0NzozMlrOEhH6lA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODowMzo0OFrOEhIRYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTY4MTQ4OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/hibernate-orm.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwNzo0NzozMlrOHOQ3MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTozMzoxMFrOHOYuuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxODM4NA==", "bodyText": "Minor suggestion: Make sure to use the @io.quarkus.hibernate.orm.PersistenceUnit` ...", "url": "https://github.com/quarkusio/quarkus/pull/11941#discussion_r484718384", "createdAt": "2020-09-08T07:47:32Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/hibernate-orm.adoc", "diffHunk": "@@ -822,9 +822,36 @@ public class CustomTenantResolver implements TenantResolver {\n     \n }\n ----\n+<1> The bean is made `@RequestScoped` as the tenant resolution depends on the incoming request.\n \n From the implementation above, tenants are resolved from the request path so that in case no tenant could be inferred, the default tenant identifier is returned.\n \n+[NOTE]\n+====\n+If <<multiple-persistence-units,named persistence units>> are used, you need to qualify the `TenantResolver` with the persistence unit name:\n+\n+[source,java]\n+----\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import io.quarkus.arc.Arc;\n+import io.quarkus.arc.Unremovable;\n+import io.quarkus.hibernate.orm.PersistenceUnit;\n+import io.quarkus.hibernate.orm.runtime.tenant.TenantResolver;\n+import io.vertx.ext.web.RoutingContext;\n+\n+@PersistenceUnit(\"name-of-persistence-unit\") <1>\n+@RequestScoped\n+@Unremovable\n+public class CustomTenantResolver implements TenantResolver {\n+\n+   // ...\n+\n+}\n+----\n+<1> Be careful to use the `@io.quarkus.hibernate.orm.PersistenceUnit` annotation, not the JPA one.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8a9a19f6886bf58aa966af17c93275a608c1632"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0NzI4OQ==", "bodyText": "Thanks, fixed.", "url": "https://github.com/quarkusio/quarkus/pull/11941#discussion_r484847289", "createdAt": "2020-09-08T11:33:10Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/hibernate-orm.adoc", "diffHunk": "@@ -822,9 +822,36 @@ public class CustomTenantResolver implements TenantResolver {\n     \n }\n ----\n+<1> The bean is made `@RequestScoped` as the tenant resolution depends on the incoming request.\n \n From the implementation above, tenants are resolved from the request path so that in case no tenant could be inferred, the default tenant identifier is returned.\n \n+[NOTE]\n+====\n+If <<multiple-persistence-units,named persistence units>> are used, you need to qualify the `TenantResolver` with the persistence unit name:\n+\n+[source,java]\n+----\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import io.quarkus.arc.Arc;\n+import io.quarkus.arc.Unremovable;\n+import io.quarkus.hibernate.orm.PersistenceUnit;\n+import io.quarkus.hibernate.orm.runtime.tenant.TenantResolver;\n+import io.vertx.ext.web.RoutingContext;\n+\n+@PersistenceUnit(\"name-of-persistence-unit\") <1>\n+@RequestScoped\n+@Unremovable\n+public class CustomTenantResolver implements TenantResolver {\n+\n+   // ...\n+\n+}\n+----\n+<1> Be careful to use the `@io.quarkus.hibernate.orm.PersistenceUnit` annotation, not the JPA one.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcxODM4NA=="}, "originalCommit": {"oid": "e8a9a19f6886bf58aa966af17c93275a608c1632"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMTczOTg2OnYy", "diffSide": "RIGHT", "path": "integration-tests/hibernate-tenancy/src/main/java/io/quarkus/it/hibernate/multitenancy/inventory/InventoryTenantResolver.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODowMzo0OFrOHORbWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTozNjowMlrOHOY0Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcyNzY0Mg==", "bodyText": "Is this needed? If so, then we probably want to mention it in the example in the docs as well", "url": "https://github.com/quarkusio/quarkus/pull/11941#discussion_r484727642", "createdAt": "2020-09-08T08:03:48Z", "author": {"login": "geoand"}, "path": "integration-tests/hibernate-tenancy/src/main/java/io/quarkus/it/hibernate/multitenancy/inventory/InventoryTenantResolver.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package io.quarkus.it.hibernate.multitenancy.inventory;\n+\n+import javax.enterprise.context.RequestScoped;\n+import javax.inject.Inject;\n+\n+import org.jboss.logging.Logger;\n+\n+import io.quarkus.arc.Unremovable;\n+import io.quarkus.hibernate.orm.PersistenceUnit;\n+import io.quarkus.hibernate.orm.runtime.tenant.TenantResolver;\n+import io.vertx.ext.web.RoutingContext;\n+\n+@RequestScoped\n+@Unremovable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94657d6b2aea7bba33da0aefc49f811dc1cb891f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0NzU2MQ==", "bodyText": "So, it used to be like that and I didn't change it. I added a commit to make the beans automatically unremovable. Could you have a look at this commit?", "url": "https://github.com/quarkusio/quarkus/pull/11941#discussion_r484847561", "createdAt": "2020-09-08T11:33:45Z", "author": {"login": "gsmet"}, "path": "integration-tests/hibernate-tenancy/src/main/java/io/quarkus/it/hibernate/multitenancy/inventory/InventoryTenantResolver.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package io.quarkus.it.hibernate.multitenancy.inventory;\n+\n+import javax.enterprise.context.RequestScoped;\n+import javax.inject.Inject;\n+\n+import org.jboss.logging.Logger;\n+\n+import io.quarkus.arc.Unremovable;\n+import io.quarkus.hibernate.orm.PersistenceUnit;\n+import io.quarkus.hibernate.orm.runtime.tenant.TenantResolver;\n+import io.vertx.ext.web.RoutingContext;\n+\n+@RequestScoped\n+@Unremovable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcyNzY0Mg=="}, "originalCommit": {"oid": "94657d6b2aea7bba33da0aefc49f811dc1cb891f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0ODczMQ==", "bodyText": "Seems perfectly reasonable!", "url": "https://github.com/quarkusio/quarkus/pull/11941#discussion_r484848731", "createdAt": "2020-09-08T11:36:02Z", "author": {"login": "geoand"}, "path": "integration-tests/hibernate-tenancy/src/main/java/io/quarkus/it/hibernate/multitenancy/inventory/InventoryTenantResolver.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package io.quarkus.it.hibernate.multitenancy.inventory;\n+\n+import javax.enterprise.context.RequestScoped;\n+import javax.inject.Inject;\n+\n+import org.jboss.logging.Logger;\n+\n+import io.quarkus.arc.Unremovable;\n+import io.quarkus.hibernate.orm.PersistenceUnit;\n+import io.quarkus.hibernate.orm.runtime.tenant.TenantResolver;\n+import io.vertx.ext.web.RoutingContext;\n+\n+@RequestScoped\n+@Unremovable", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDcyNzY0Mg=="}, "originalCommit": {"oid": "94657d6b2aea7bba33da0aefc49f811dc1cb891f"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 365, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}