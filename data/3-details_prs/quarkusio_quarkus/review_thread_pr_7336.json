{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MzYwMzY3", "number": 7336, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjozODoxN1rODh8LmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjozODoxN1rODh8LmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTE1NjA5OnYy", "diffSide": "RIGHT", "path": "extensions/logging-sentry/runtime/src/main/java/io/quarkus/logging/sentry/SentryHandlerValueFactory.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjozODoxN1rOFs9MoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwODoyOTowNFrOFtYWvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY4NDMyMQ==", "bodyText": "Looks a bit like dark magic to me :).", "url": "https://github.com/quarkusio/quarkus/pull/7336#discussion_r382684321", "createdAt": "2020-02-21T16:38:17Z", "author": {"login": "gsmet"}, "path": "extensions/logging-sentry/runtime/src/main/java/io/quarkus/logging/sentry/SentryHandlerValueFactory.java", "diffHunk": "@@ -11,14 +11,20 @@\n import io.sentry.Sentry;\n import io.sentry.SentryOptions;\n import io.sentry.config.Lookup;\n+import io.sentry.dsn.Dsn;\n import io.sentry.jul.SentryHandler;\n \n @Recorder\n public class SentryHandlerValueFactory {\n     private static final Logger LOG = Logger.getLogger(SentryConfigProvider.class);\n \n     public RuntimeValue<Optional<Handler>> create(final SentryConfig config) {\n+        final SentryConfigProvider provider = new SentryConfigProvider(config);\n+        final Lookup lookup = new Lookup(provider, provider);\n+\n         if (!config.enable) {\n+            // Disable Sentry\n+            Sentry.init(SentryOptions.from(lookup, Dsn.DEFAULT_DSN));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d2ed70e24517ad081d27b7eac232e81b6b2d2ce"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc1ODUzNA==", "bodyText": "@gsmet,\nIt's a bit magic indeed, but Sentry API is not really made for this kind of use case.\nI Already had to implement the Lookup in order to use our own config.\nJust to make you understand this code, when there is no DSN, Sentry shows a warning and set it to Dsn.DEFAULT_DSN, Using this just prevent from showing the warning..", "url": "https://github.com/quarkusio/quarkus/pull/7336#discussion_r382758534", "createdAt": "2020-02-21T19:15:34Z", "author": {"login": "ia3andy"}, "path": "extensions/logging-sentry/runtime/src/main/java/io/quarkus/logging/sentry/SentryHandlerValueFactory.java", "diffHunk": "@@ -11,14 +11,20 @@\n import io.sentry.Sentry;\n import io.sentry.SentryOptions;\n import io.sentry.config.Lookup;\n+import io.sentry.dsn.Dsn;\n import io.sentry.jul.SentryHandler;\n \n @Recorder\n public class SentryHandlerValueFactory {\n     private static final Logger LOG = Logger.getLogger(SentryConfigProvider.class);\n \n     public RuntimeValue<Optional<Handler>> create(final SentryConfig config) {\n+        final SentryConfigProvider provider = new SentryConfigProvider(config);\n+        final Lookup lookup = new Lookup(provider, provider);\n+\n         if (!config.enable) {\n+            // Disable Sentry\n+            Sentry.init(SentryOptions.from(lookup, Dsn.DEFAULT_DSN));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY4NDMyMQ=="}, "originalCommit": {"oid": "7d2ed70e24517ad081d27b7eac232e81b6b2d2ce"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzEyOTI3OQ==", "bodyText": "This is what I am referring to above: https://github.com/getsentry/sentry-java/blob/master/sentry/src/main/java/io/sentry/dsn/Dsn.java#L101", "url": "https://github.com/quarkusio/quarkus/pull/7336#discussion_r383129279", "createdAt": "2020-02-24T08:29:04Z", "author": {"login": "ia3andy"}, "path": "extensions/logging-sentry/runtime/src/main/java/io/quarkus/logging/sentry/SentryHandlerValueFactory.java", "diffHunk": "@@ -11,14 +11,20 @@\n import io.sentry.Sentry;\n import io.sentry.SentryOptions;\n import io.sentry.config.Lookup;\n+import io.sentry.dsn.Dsn;\n import io.sentry.jul.SentryHandler;\n \n @Recorder\n public class SentryHandlerValueFactory {\n     private static final Logger LOG = Logger.getLogger(SentryConfigProvider.class);\n \n     public RuntimeValue<Optional<Handler>> create(final SentryConfig config) {\n+        final SentryConfigProvider provider = new SentryConfigProvider(config);\n+        final Lookup lookup = new Lookup(provider, provider);\n+\n         if (!config.enable) {\n+            // Disable Sentry\n+            Sentry.init(SentryOptions.from(lookup, Dsn.DEFAULT_DSN));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY4NDMyMQ=="}, "originalCommit": {"oid": "7d2ed70e24517ad081d27b7eac232e81b6b2d2ce"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 137, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}