{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NDM0NzM4", "number": 8817, "title": "implemented native SASL/JAAS support for plaintext authentication", "bodyText": "fixes #8168", "createdAt": "2020-04-24T09:22:48Z", "url": "https://github.com/quarkusio/quarkus/pull/8817", "merged": true, "mergeCommit": {"oid": "3356d96253e135adde5441ca2a905b3960ee9f54"}, "closed": true, "closedAt": "2020-05-04T11:47:56Z", "author": {"login": "schulzp"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcauerHgFqTM5OTc5NTQyMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcd8WeGABqjMyOTkxMDM0OTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5Nzk1NDIx", "url": "https://github.com/quarkusio/quarkus/pull/8817#pullrequestreview-399795421", "createdAt": "2020-04-24T09:41:03Z", "commit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo0MTowM1rOGLPatw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo1NzowOFrOGLQC1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MDExOQ==", "bodyText": "This list was about serde, LoginModule might go in another list (it's actually not build-in as it comes from javax.security.auth.spi.LoginModule)", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414440119", "createdAt": "2020-04-24T09:41:03Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -68,6 +76,9 @@\n             ByteBufferDeserializer.class,\n             StringDeserializer.class,\n             FloatDeserializer.class,\n+\n+            //login modules\n+            LoginModule.class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MDU0Mg==", "bodyText": "I would add the LoginModule directly here.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414440542", "createdAt": "2020-04-24T09:41:39Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -109,6 +120,12 @@ public void build(CombinedIndexBuildItem indexBuildItem, BuildProducer<Reflectiv\n         // classes needed to perform reflection on DirectByteBuffer - only really needed for Java 8\n         reflectiveClass.produce(new ReflectiveClassBuildItem(true, false, \"java.nio.DirectByteBuffer\"));\n         reflectiveClass.produce(new ReflectiveClassBuildItem(true, false, \"sun.misc.Cleaner\"));\n+\n+        // enable native JAAS/SASL PLAIN support\n+        reflectiveClass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MTQyMw==", "bodyText": "How is this related to the issue? I may miss a link.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414441423", "createdAt": "2020-04-24T09:43:03Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/health/KafkaHealthCheck.java", "diffHunk": "@@ -3,36 +3,39 @@\n import java.util.HashMap;\n import java.util.Map;\n \n-import javax.annotation.PostConstruct;\n import javax.annotation.PreDestroy;\n import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n \n import org.apache.kafka.clients.admin.AdminClient;\n import org.apache.kafka.clients.admin.AdminClientConfig;\n import org.apache.kafka.common.Node;\n-import org.eclipse.microprofile.config.inject.ConfigProperty;\n import org.eclipse.microprofile.health.HealthCheck;\n import org.eclipse.microprofile.health.HealthCheckResponse;\n import org.eclipse.microprofile.health.HealthCheckResponseBuilder;\n import org.eclipse.microprofile.health.Readiness;\n \n+import io.quarkus.kafka.client.runtime.KafkaRuntimeConfig;\n+\n @Readiness\n @ApplicationScoped\n public class KafkaHealthCheck implements HealthCheck {\n \n-    @ConfigProperty(name = \"kafka.bootstrap.servers\", defaultValue = \"localhost:9092\")\n-    private String bootstrapServers;\n-\n     private AdminClient client;\n \n-    @PostConstruct\n-    void init() {\n-        Map<String, Object> conf = new HashMap<>();\n-        conf.put(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);\n+    @Inject\n+    public KafkaHealthCheck(KafkaRuntimeConfig runtimeConfig) {\n+        Map<String, Object> conf = new HashMap<>(runtimeConfig.getProperties());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MjY1Mg==", "bodyText": "If I understand correctly you copy the \"kafka\" configuration and configure the health check admin client with them.\nIs it really related to this PR?", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414442652", "createdAt": "2020-04-24T09:44:56Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/KafkaRuntimeConfigProducer.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package io.quarkus.kafka.client.runtime;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.StreamSupport;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+\n+import io.quarkus.arc.DefaultBean;\n+\n+@Dependent\n+public class KafkaRuntimeConfigProducer {\n+\n+    private String configPrefix = \"kafka\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MzA5MQ==", "bodyText": "It can be confusing as the Kafka Client is not produced by default. Typically, it would not cover the configuration coming from reactive messaging. Existing applications create their properties directly (following the Kafka documentation).", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414443091", "createdAt": "2020-04-24T09:45:40Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/KafkaRuntimeConfigProducer.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package io.quarkus.kafka.client.runtime;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.StreamSupport;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+\n+import io.quarkus.arc.DefaultBean;\n+\n+@Dependent\n+public class KafkaRuntimeConfigProducer {\n+\n+    private String configPrefix = \"kafka\";\n+\n+    @Produces\n+    @DefaultBean\n+    @ApplicationScoped\n+    public KafkaRuntimeConfig createKafkaRuntimeConfig() {\n+        Map<String, String> properties = new HashMap<>();\n+        final Config config = ConfigProvider.getConfig();\n+\n+        StreamSupport\n+                .stream(config.getPropertyNames().spliterator(), false)\n+                .map(String::toLowerCase)\n+                .filter(name -> name.startsWith(configPrefix))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0NzE2OA==", "bodyText": "Why is this passed here and not in the Map produced by the Kafka Test Resource?", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414447168", "createdAt": "2020-04-24T09:52:15Z", "author": {"login": "cescoffier"}, "path": "integration-tests/kafka/pom.xml", "diffHunk": "@@ -114,13 +135,31 @@\n                         <artifactId>maven-failsafe-plugin</artifactId>\n                         <executions>\n                             <execution>\n+                                <id>without-security</id>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <systemProperties>\n+                                        <native.image.path>\n+                                            ${project.build.directory}/${project.build.finalName}-runner\n+                                        </native.image.path>\n+                                    </systemProperties>\n+                                </configuration>\n+                            </execution>\n+                            <execution>\n+                                <id>with-sasl-plaintext</id>\n                                 <goals>\n                                     <goal>integration-test</goal>\n                                     <goal>verify</goal>\n                                 </goals>\n                                 <configuration>\n                                     <systemProperties>\n-                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n+                                        <kafka.security.protocol>SASL_PLAINTEXT</kafka.security.protocol>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0NzM5OQ==", "bodyText": "Why are these properties configured here and not in the Kafka Test Resource?", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414447399", "createdAt": "2020-04-24T09:52:39Z", "author": {"login": "cescoffier"}, "path": "integration-tests/kafka/pom.xml", "diffHunk": "@@ -96,6 +96,27 @@\n                     </execution>\n                 </executions>\n             </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>with-sasl-plaintext</id>\n+                        <goals>\n+                            <goal>test</goal>\n+                        </goals>\n+                        <configuration>\n+                            <systemProperties>\n+                                <kafka.security.protocol>SASL_PLAINTEXT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MDM5MQ==", "bodyText": "I believe we should be able to avoid this new bean.\nIt seems to be convenient for the tests, but the Kafka Test Resource can configure properties (that's the Map returned by the start method)", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414450391", "createdAt": "2020-04-24T09:57:08Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -130,4 +147,13 @@ HealthBuildItem addHealthCheck(KafkaBuildTimeConfig buildTimeConfig) {\n         return new HealthBuildItem(\"io.quarkus.kafka.client.health.KafkaHealthCheck\",\n                 buildTimeConfig.healthEnabled, \"kafka\");\n     }\n+\n+    @BuildStep\n+    AdditionalBeanBuildItem addRuntimeConfig() {\n+        final Builder builder = AdditionalBeanBuildItem.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 63}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c8e0f722bd90a308f48009e31ca9e806e962caee", "author": {"user": {"login": "schulzp", "name": "Peter Schulz"}}, "url": "https://github.com/quarkusio/quarkus/commit/c8e0f722bd90a308f48009e31ca9e806e962caee", "committedDate": "2020-04-25T14:51:26Z", "message": "#8817 - regarding comments on `KafkaProcessor.java`"}, "afterCommit": {"oid": "67be4eb132faa16aded9141e1e16bec313dbdd38", "author": {"user": {"login": "schulzp", "name": "Peter Schulz"}}, "url": "https://github.com/quarkusio/quarkus/commit/67be4eb132faa16aded9141e1e16bec313dbdd38", "committedDate": "2020-04-26T15:51:16Z", "message": "#8817 - regarding comments on `KafkaProcessor.java`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNjkzMjU2", "url": "https://github.com/quarkusio/quarkus/pull/8817#pullrequestreview-400693256", "createdAt": "2020-04-27T07:32:27Z", "commit": {"oid": "67be4eb132faa16aded9141e1e16bec313dbdd38"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNzozMjoyN1rOGMU2Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNzozNDo0MFrOGMU7Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU3NzY1OQ==", "bodyText": "If we go with this, we would need to adapt the Reactive Messaging Kafka connector to use the same config. This would be a breaking change.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r415577659", "createdAt": "2020-04-27T07:32:27Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -130,4 +147,13 @@ HealthBuildItem addHealthCheck(KafkaBuildTimeConfig buildTimeConfig) {\n         return new HealthBuildItem(\"io.quarkus.kafka.client.health.KafkaHealthCheck\",\n                 buildTimeConfig.healthEnabled, \"kafka\");\n     }\n+\n+    @BuildStep\n+    AdditionalBeanBuildItem addRuntimeConfig() {\n+        final Builder builder = AdditionalBeanBuildItem.builder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MDM5MQ=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU3ODA0NQ==", "bodyText": "Why not using the static access to the configuration? That would remove the bean.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r415578045", "createdAt": "2020-04-27T07:33:11Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/health/KafkaHealthCheck.java", "diffHunk": "@@ -3,36 +3,39 @@\n import java.util.HashMap;\n import java.util.Map;\n \n-import javax.annotation.PostConstruct;\n import javax.annotation.PreDestroy;\n import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n \n import org.apache.kafka.clients.admin.AdminClient;\n import org.apache.kafka.clients.admin.AdminClientConfig;\n import org.apache.kafka.common.Node;\n-import org.eclipse.microprofile.config.inject.ConfigProperty;\n import org.eclipse.microprofile.health.HealthCheck;\n import org.eclipse.microprofile.health.HealthCheckResponse;\n import org.eclipse.microprofile.health.HealthCheckResponseBuilder;\n import org.eclipse.microprofile.health.Readiness;\n \n+import io.quarkus.kafka.client.runtime.KafkaRuntimeConfig;\n+\n @Readiness\n @ApplicationScoped\n public class KafkaHealthCheck implements HealthCheck {\n \n-    @ConfigProperty(name = \"kafka.bootstrap.servers\", defaultValue = \"localhost:9092\")\n-    private String bootstrapServers;\n-\n     private AdminClient client;\n \n-    @PostConstruct\n-    void init() {\n-        Map<String, Object> conf = new HashMap<>();\n-        conf.put(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);\n+    @Inject\n+    public KafkaHealthCheck(KafkaRuntimeConfig runtimeConfig) {\n+        Map<String, Object> conf = new HashMap<>(runtimeConfig.getProperties());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MTQyMw=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU3ODkxNA==", "bodyText": "Yes and no. You have applications using multiple brokers, and some parts of Quarkus use a different configuration format.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r415578914", "createdAt": "2020-04-27T07:34:40Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/KafkaRuntimeConfigProducer.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package io.quarkus.kafka.client.runtime;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.StreamSupport;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+\n+import io.quarkus.arc.DefaultBean;\n+\n+@Dependent\n+public class KafkaRuntimeConfigProducer {\n+\n+    private String configPrefix = \"kafka\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MjY1Mg=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67be4eb132faa16aded9141e1e16bec313dbdd38", "author": {"user": {"login": "schulzp", "name": "Peter Schulz"}}, "url": "https://github.com/quarkusio/quarkus/commit/67be4eb132faa16aded9141e1e16bec313dbdd38", "committedDate": "2020-04-26T15:51:16Z", "message": "#8817 - regarding comments on `KafkaProcessor.java`"}, "afterCommit": {"oid": "aed66d2c6c57414355068d3d9dcbad6b3dfaa415", "author": {"user": {"login": "schulzp", "name": "Peter Schulz"}}, "url": "https://github.com/quarkusio/quarkus/commit/aed66d2c6c57414355068d3d9dcbad6b3dfaa415", "committedDate": "2020-04-28T14:36:54Z", "message": "#8817 - add native SASL support\n\n* add (native) SASL test\n* runtime configuration as map"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMzEyNTg4", "url": "https://github.com/quarkusio/quarkus/pull/8817#pullrequestreview-403312588", "createdAt": "2020-04-30T08:35:00Z", "commit": {"oid": "aed66d2c6c57414355068d3d9dcbad6b3dfaa415"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODozNTowMFrOGOfUfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODozNTowMFrOGOfUfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg0NjM5OA==", "bodyText": "Any reason for this?", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r417846398", "createdAt": "2020-04-30T08:35:00Z", "author": {"login": "cescoffier"}, "path": "integration-tests/kafka/pom.xml", "diffHunk": "@@ -196,6 +196,9 @@\n                         <artifactId>maven-surefire-plugin</artifactId>\n                         <configuration>\n                             <skip>false</skip>\n+                            <systemProperties>\n+                                <quarkus.debug.generated-sources-dir>${project.build.directory}/generated-sources</quarkus.debug.generated-sources-dir>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed66d2c6c57414355068d3d9dcbad6b3dfaa415"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aed66d2c6c57414355068d3d9dcbad6b3dfaa415", "author": {"user": {"login": "schulzp", "name": "Peter Schulz"}}, "url": "https://github.com/quarkusio/quarkus/commit/aed66d2c6c57414355068d3d9dcbad6b3dfaa415", "committedDate": "2020-04-28T14:36:54Z", "message": "#8817 - add native SASL support\n\n* add (native) SASL test\n* runtime configuration as map"}, "afterCommit": {"oid": "614ba1aae04b2e57567a71e6bc635e050b4ea8de", "author": {"user": {"login": "schulzp", "name": "Peter Schulz"}}, "url": "https://github.com/quarkusio/quarkus/commit/614ba1aae04b2e57567a71e6bc635e050b4ea8de", "committedDate": "2020-04-30T19:16:41Z", "message": "#8817 - runtime configuration as map"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NzIzODA0", "url": "https://github.com/quarkusio/quarkus/pull/8817#pullrequestreview-404723804", "createdAt": "2020-05-04T06:03:53Z", "commit": {"oid": "614ba1aae04b2e57567a71e6bc635e050b4ea8de"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3dbdcc09cb76db62ccd088207246dc4791bd662", "author": {"user": {"login": "schulzp", "name": "Peter Schulz"}}, "url": "https://github.com/quarkusio/quarkus/commit/f3dbdcc09cb76db62ccd088207246dc4791bd662", "committedDate": "2020-05-04T09:47:20Z", "message": "#8817 - change names for clarity (SSL != SASL)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed26e490eb11c2967cf7fa568e6891d6e59933f0", "author": {"user": {"login": "schulzp", "name": "Peter Schulz"}}, "url": "https://github.com/quarkusio/quarkus/commit/ed26e490eb11c2967cf7fa568e6891d6e59933f0", "committedDate": "2020-05-04T09:47:20Z", "message": "#8817 - runtime configuration as map"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "614ba1aae04b2e57567a71e6bc635e050b4ea8de", "author": {"user": {"login": "schulzp", "name": "Peter Schulz"}}, "url": "https://github.com/quarkusio/quarkus/commit/614ba1aae04b2e57567a71e6bc635e050b4ea8de", "committedDate": "2020-04-30T19:16:41Z", "message": "#8817 - runtime configuration as map"}, "afterCommit": {"oid": "ed26e490eb11c2967cf7fa568e6891d6e59933f0", "author": {"user": {"login": "schulzp", "name": "Peter Schulz"}}, "url": "https://github.com/quarkusio/quarkus/commit/ed26e490eb11c2967cf7fa568e6891d6e59933f0", "committedDate": "2020-05-04T09:47:20Z", "message": "#8817 - runtime configuration as map"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4516, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}