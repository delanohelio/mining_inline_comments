{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNDg0NDUx", "number": 10389, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNzoyMzoxMVrOEKZNTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTowODowMVrOEKbcug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzM0MjIyOnYy", "diffSide": "RIGHT", "path": "extensions/amazon-lambda/common-deployment/src/main/java/io/quarkus/amazon/lambda/deployment/LambdaUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNzoyMzoxMVrOGrZ7GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNzozMzo0MFrOGraRDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE2NjY4MQ==", "bodyText": "Should the same be done for bootstrap-example.sh which gets created a few lines above this?", "url": "https://github.com/quarkusio/quarkus/pull/10389#discussion_r448166681", "createdAt": "2020-07-01T07:23:11Z", "author": {"login": "jaikiran"}, "path": "extensions/amazon-lambda/common-deployment/src/main/java/io/quarkus/amazon/lambda/deployment/LambdaUtil.java", "diffHunk": "@@ -76,7 +90,7 @@ public static void generateScripts(String handler, OutputTargetBuildItem target)\n         output = copyResource(\"lambda/manage.sh\")\n                 .replace(\"${handler}\", handler)\n                 .replace(\"${lambdaName}\", lambdaName);\n-        writeFile(target, \"manage.sh\", output);\n+        writeExecutableFile(target, \"manage.sh\", output);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8a56a5ea72debabf373de5d50b315deae0b6944"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE3MjMwMQ==", "bodyText": "done", "url": "https://github.com/quarkusio/quarkus/pull/10389#discussion_r448172301", "createdAt": "2020-07-01T07:33:40Z", "author": {"login": "ejba"}, "path": "extensions/amazon-lambda/common-deployment/src/main/java/io/quarkus/amazon/lambda/deployment/LambdaUtil.java", "diffHunk": "@@ -76,7 +90,7 @@ public static void generateScripts(String handler, OutputTargetBuildItem target)\n         output = copyResource(\"lambda/manage.sh\")\n                 .replace(\"${handler}\", handler)\n                 .replace(\"${lambdaName}\", lambdaName);\n-        writeFile(target, \"manage.sh\", output);\n+        writeExecutableFile(target, \"manage.sh\", output);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE2NjY4MQ=="}, "originalCommit": {"oid": "a8a56a5ea72debabf373de5d50b315deae0b6944"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzcwOTM4OnYy", "diffSide": "RIGHT", "path": "extensions/amazon-lambda/common-deployment/src/main/java/io/quarkus/amazon/lambda/deployment/LambdaUtil.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOTowODowMVrOGrdhCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwOToyNTowNVrOGreHJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNTU0NA==", "bodyText": "Given the failure on Windows, I think what you will have to do is conditionally set these PosixFilePermissions, something like:\nif (Files.getFileAttributeView(artifact, PosixFilePermission.class) != null) {\n... // setup the permissions\n}", "url": "https://github.com/quarkusio/quarkus/pull/10389#discussion_r448225544", "createdAt": "2020-07-01T09:08:01Z", "author": {"login": "jaikiran"}, "path": "extensions/amazon-lambda/common-deployment/src/main/java/io/quarkus/amazon/lambda/deployment/LambdaUtil.java", "diffHunk": "@@ -50,6 +53,17 @@ public static void writeFile(OutputTargetBuildItem target, String name, String o\n         Files.write(artifact, output.getBytes(StandardCharsets.UTF_8));\n     }\n \n+    public static void writeExecutableFile(OutputTargetBuildItem target, String name, String output) throws IOException {\n+        writeFile(target, name, output);\n+\n+        Path artifact = target.getOutputDirectory().resolve(name);\n+        Set<PosixFilePermission> permissions = new HashSet<>();\n+        permissions.add(PosixFilePermission.OWNER_READ);\n+        permissions.add(PosixFilePermission.OWNER_WRITE);\n+        permissions.add(PosixFilePermission.OWNER_EXECUTE);\n+        Files.setPosixFilePermissions(artifact, permissions);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2902beb0d866cdb47de096d100e1b4d9e435079a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNzEwMA==", "bodyText": "According with documentation, I could do just this. Tell me what do you think.\n        Path artifact = target.getOutputDirectory().resolve(name);\n        File file = new File(artifact.toString());\n        file.setExecutable(true, true);", "url": "https://github.com/quarkusio/quarkus/pull/10389#discussion_r448227100", "createdAt": "2020-07-01T09:10:42Z", "author": {"login": "ejba"}, "path": "extensions/amazon-lambda/common-deployment/src/main/java/io/quarkus/amazon/lambda/deployment/LambdaUtil.java", "diffHunk": "@@ -50,6 +53,17 @@ public static void writeFile(OutputTargetBuildItem target, String name, String o\n         Files.write(artifact, output.getBytes(StandardCharsets.UTF_8));\n     }\n \n+    public static void writeExecutableFile(OutputTargetBuildItem target, String name, String output) throws IOException {\n+        writeFile(target, name, output);\n+\n+        Path artifact = target.getOutputDirectory().resolve(name);\n+        Set<PosixFilePermission> permissions = new HashSet<>();\n+        permissions.add(PosixFilePermission.OWNER_READ);\n+        permissions.add(PosixFilePermission.OWNER_WRITE);\n+        permissions.add(PosixFilePermission.OWNER_EXECUTE);\n+        Files.setPosixFilePermissions(artifact, permissions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNTU0NA=="}, "originalCommit": {"oid": "2902beb0d866cdb47de096d100e1b4d9e435079a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyOTI5Mw==", "bodyText": "I had forgotten about that one. Yes, that one looks much simpler and more relevant to what we want. One minor nit - instead of new File(artifact.toString()) , you can just do artifact.toFile().setExecutable(true, true);", "url": "https://github.com/quarkusio/quarkus/pull/10389#discussion_r448229293", "createdAt": "2020-07-01T09:14:32Z", "author": {"login": "jaikiran"}, "path": "extensions/amazon-lambda/common-deployment/src/main/java/io/quarkus/amazon/lambda/deployment/LambdaUtil.java", "diffHunk": "@@ -50,6 +53,17 @@ public static void writeFile(OutputTargetBuildItem target, String name, String o\n         Files.write(artifact, output.getBytes(StandardCharsets.UTF_8));\n     }\n \n+    public static void writeExecutableFile(OutputTargetBuildItem target, String name, String output) throws IOException {\n+        writeFile(target, name, output);\n+\n+        Path artifact = target.getOutputDirectory().resolve(name);\n+        Set<PosixFilePermission> permissions = new HashSet<>();\n+        permissions.add(PosixFilePermission.OWNER_READ);\n+        permissions.add(PosixFilePermission.OWNER_WRITE);\n+        permissions.add(PosixFilePermission.OWNER_EXECUTE);\n+        Files.setPosixFilePermissions(artifact, permissions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNTU0NA=="}, "originalCommit": {"oid": "2902beb0d866cdb47de096d100e1b4d9e435079a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIzNTMwMQ==", "bodyText": "Done!", "url": "https://github.com/quarkusio/quarkus/pull/10389#discussion_r448235301", "createdAt": "2020-07-01T09:25:05Z", "author": {"login": "ejba"}, "path": "extensions/amazon-lambda/common-deployment/src/main/java/io/quarkus/amazon/lambda/deployment/LambdaUtil.java", "diffHunk": "@@ -50,6 +53,17 @@ public static void writeFile(OutputTargetBuildItem target, String name, String o\n         Files.write(artifact, output.getBytes(StandardCharsets.UTF_8));\n     }\n \n+    public static void writeExecutableFile(OutputTargetBuildItem target, String name, String output) throws IOException {\n+        writeFile(target, name, output);\n+\n+        Path artifact = target.getOutputDirectory().resolve(name);\n+        Set<PosixFilePermission> permissions = new HashSet<>();\n+        permissions.add(PosixFilePermission.OWNER_READ);\n+        permissions.add(PosixFilePermission.OWNER_WRITE);\n+        permissions.add(PosixFilePermission.OWNER_EXECUTE);\n+        Files.setPosixFilePermissions(artifact, permissions);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODIyNTU0NA=="}, "originalCommit": {"oid": "2902beb0d866cdb47de096d100e1b4d9e435079a"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2749, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}