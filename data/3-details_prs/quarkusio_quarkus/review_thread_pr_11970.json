{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxOTQ2MzUz", "number": 11970, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzo0Mzo1M1rOEhQQXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzo0Mzo1M1rOEhQQXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzA0Nzk5OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/VertxHttpProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzo0Mzo1M1rOHOd2kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzo0NDo1MlrOHOd5qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkzMTIxNg==", "bodyText": "These URI/URL APIs are sometimes a bit too complex and I usually have to go back read their docs multiple times and even try out a few things to be sure that whatever construct is being used/changed will work fine without issues. So, I'm unsure if this change will cause any issues. However, given that this specific area of code has relevant tests[1] that cover Java 8, 11, 14 and even native-image, we can go ahead with this change if the CI shows all green.\n[1] #9474", "url": "https://github.com/quarkusio/quarkus/pull/11970#discussion_r484931216", "createdAt": "2020-09-08T13:43:53Z", "author": {"login": "jaikiran"}, "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/VertxHttpProcessor.java", "diffHunk": "@@ -217,7 +218,8 @@ void registerExchangeAttributeBuilders(final BuildProducer<ServiceProviderBuildI\n             logger.debug(\"Skipping registration of service providers for \" + ExchangeAttributeBuilder.class);\n             return;\n         }\n-        try (final FileSystem jarFileSystem = ZipUtils.newFileSystem(codeSource.getLocation().toURI(),\n+        try (final FileSystem jarFileSystem = ZipUtils.newFileSystem(\n+                new URI(\"jar\", codeSource.getLocation().toURI().toString(), null),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "805e7ce1984aac86af27c85bbb8b70da0307cbfc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkzMjAwOQ==", "bodyText": "Agreed :)", "url": "https://github.com/quarkusio/quarkus/pull/11970#discussion_r484932009", "createdAt": "2020-09-08T13:44:52Z", "author": {"login": "geoand"}, "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/VertxHttpProcessor.java", "diffHunk": "@@ -217,7 +218,8 @@ void registerExchangeAttributeBuilders(final BuildProducer<ServiceProviderBuildI\n             logger.debug(\"Skipping registration of service providers for \" + ExchangeAttributeBuilder.class);\n             return;\n         }\n-        try (final FileSystem jarFileSystem = ZipUtils.newFileSystem(codeSource.getLocation().toURI(),\n+        try (final FileSystem jarFileSystem = ZipUtils.newFileSystem(\n+                new URI(\"jar\", codeSource.getLocation().toURI().toString(), null),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkzMTIxNg=="}, "originalCommit": {"oid": "805e7ce1984aac86af27c85bbb8b70da0307cbfc"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 383, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}