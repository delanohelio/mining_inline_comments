{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NjI0ODQ2", "number": 11803, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjozODoxNlrOEfbxgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzo1MjoyNVrOEfdwnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMzk2MzU0OnYy", "diffSide": "RIGHT", "path": "independent-projects/tools/message-writer/src/main/java/io/quarkus/devtools/DefaultMessageWriter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjozODoxNlrOHLtDSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMjo1ODoyNlrOHLt3rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAzNDUwNA==", "bodyText": "If message-writer belongs to a different module, it must have its own namespace", "url": "https://github.com/quarkusio/quarkus/pull/11803#discussion_r482034504", "createdAt": "2020-09-02T12:38:16Z", "author": {"login": "gastaldi"}, "path": "independent-projects/tools/message-writer/src/main/java/io/quarkus/devtools/DefaultMessageWriter.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package io.quarkus.devtools;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f39cbe9fd72c61eed656401d21d41122070abd06"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA0NDQxOQ==", "bodyText": "ok on it :)", "url": "https://github.com/quarkusio/quarkus/pull/11803#discussion_r482044419", "createdAt": "2020-09-02T12:53:04Z", "author": {"login": "ia3andy"}, "path": "independent-projects/tools/message-writer/src/main/java/io/quarkus/devtools/DefaultMessageWriter.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package io.quarkus.devtools;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAzNDUwNA=="}, "originalCommit": {"oid": "f39cbe9fd72c61eed656401d21d41122070abd06"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA0NzkxOA==", "bodyText": "done", "url": "https://github.com/quarkusio/quarkus/pull/11803#discussion_r482047918", "createdAt": "2020-09-02T12:58:26Z", "author": {"login": "ia3andy"}, "path": "independent-projects/tools/message-writer/src/main/java/io/quarkus/devtools/DefaultMessageWriter.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package io.quarkus.devtools;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjAzNDUwNA=="}, "originalCommit": {"oid": "f39cbe9fd72c61eed656401d21d41122070abd06"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDA4ODA0OnYy", "diffSide": "RIGHT", "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/Codestart.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzowNzozNFrOHLuPUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzoxMDo1MlrOHLuXsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA1Mzk2OA==", "bodyText": "I don't think the name should matter in the comparison here.", "url": "https://github.com/quarkusio/quarkus/pull/11803#discussion_r482053968", "createdAt": "2020-09-02T13:07:34Z", "author": {"login": "gastaldi"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/Codestart.java", "diffHunk": "@@ -10,6 +11,11 @@\n     private final CodestartSpec spec;\n     private final Set<String> implementedLanguages;\n \n+    static final Comparator<Codestart> PROCESSING_ORDER = Comparator.comparingInt(Codestart::getTypeOrder)\n+            .thenComparing(Codestart::getName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1c409de0b1d0a7635e32334a35dd14c37ea2a1c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA1NjExNQ==", "bodyText": "@gastaldi it doesn't, it's to make sure we always use the same ordering when running..", "url": "https://github.com/quarkusio/quarkus/pull/11803#discussion_r482056115", "createdAt": "2020-09-02T13:10:52Z", "author": {"login": "ia3andy"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/Codestart.java", "diffHunk": "@@ -10,6 +11,11 @@\n     private final CodestartSpec spec;\n     private final Set<String> implementedLanguages;\n \n+    static final Comparator<Codestart> PROCESSING_ORDER = Comparator.comparingInt(Codestart::getTypeOrder)\n+            .thenComparing(Codestart::getName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA1Mzk2OA=="}, "originalCommit": {"oid": "e1c409de0b1d0a7635e32334a35dd14c37ea2a1c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDA5OTMyOnYy", "diffSide": "RIGHT", "path": "independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/commands/handlers/CreateProjectCommandHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzoxMDoxOVrOHLuWQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzoxMzowM1rOHLudYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA1NTc0Nw==", "bodyText": "Minor comment: It would be nice to display the project name in bold", "url": "https://github.com/quarkusio/quarkus/pull/11803#discussion_r482055747", "createdAt": "2020-09-02T13:10:19Z", "author": {"login": "gastaldi"}, "path": "independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/commands/handlers/CreateProjectCommandHandler.java", "diffHunk": "@@ -85,13 +84,20 @@ public QuarkusCommandOutcome execute(QuarkusCommandInvocation invocation) throws\n                         .noDockerfiles(invocation.getValue(NO_DOCKERFILES, false))\n                         .addData(platformData)\n                         .addData(LegacySupport.convertFromLegacy(invocation.getValues()))\n+                        .messageWriter(invocation.log())\n                         .build();\n-                invocation.log().info(\n-                        \"Generating Quarkus Codestart Project with data: \" + input.getCodestartInput().getData().toString());\n+                invocation.log().info(\"-----------\");\n+                invocation.log().info(\"selected extensions: \\n\"\n+                        + extensionsToAdd.stream().map(e -> \"- \" + e.getGroupId() + \":\" + e.getArtifactId() + \"\\n\")\n+                                .collect(Collectors.joining()));\n                 final CodestartProject codestartProject = prepareProject(input);\n-                invocation.log().info(\"Codestarts: \" + codestartProject.getCodestarts().stream().map(Codestart::getSpec)\n-                        .map(CodestartSpec::getName).collect(Collectors.joining(\", \")));\n                 Codestarts.generateProject(codestartProject, invocation.getQuarkusProject().getProjectDirPath());\n+                invocation.log()\n+                        .info(\"\\n-----------\\n\" + MessageIcons.NOOP_ICON + \" \"\n+                                + codestartProject.getRequiredCodestart(CodestartType.PROJECT).getName()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c2f87ec619c7752f1ed40cf65d67ea68124f050"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA1NzU2OQ==", "bodyText": "Ok we could do that in a another PR", "url": "https://github.com/quarkusio/quarkus/pull/11803#discussion_r482057569", "createdAt": "2020-09-02T13:13:03Z", "author": {"login": "ia3andy"}, "path": "independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/commands/handlers/CreateProjectCommandHandler.java", "diffHunk": "@@ -85,13 +84,20 @@ public QuarkusCommandOutcome execute(QuarkusCommandInvocation invocation) throws\n                         .noDockerfiles(invocation.getValue(NO_DOCKERFILES, false))\n                         .addData(platformData)\n                         .addData(LegacySupport.convertFromLegacy(invocation.getValues()))\n+                        .messageWriter(invocation.log())\n                         .build();\n-                invocation.log().info(\n-                        \"Generating Quarkus Codestart Project with data: \" + input.getCodestartInput().getData().toString());\n+                invocation.log().info(\"-----------\");\n+                invocation.log().info(\"selected extensions: \\n\"\n+                        + extensionsToAdd.stream().map(e -> \"- \" + e.getGroupId() + \":\" + e.getArtifactId() + \"\\n\")\n+                                .collect(Collectors.joining()));\n                 final CodestartProject codestartProject = prepareProject(input);\n-                invocation.log().info(\"Codestarts: \" + codestartProject.getCodestarts().stream().map(Codestart::getSpec)\n-                        .map(CodestartSpec::getName).collect(Collectors.joining(\", \")));\n                 Codestarts.generateProject(codestartProject, invocation.getQuarkusProject().getProjectDirPath());\n+                invocation.log()\n+                        .info(\"\\n-----------\\n\" + MessageIcons.NOOP_ICON + \" \"\n+                                + codestartProject.getRequiredCodestart(CodestartType.PROJECT).getName()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA1NTc0Nw=="}, "originalCommit": {"oid": "6c2f87ec619c7752f1ed40cf65d67ea68124f050"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDI4ODkzOnYy", "diffSide": "RIGHT", "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzo1MjoyNVrOHLwLug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDozMDoyMVrOHLx9iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA4NTgxOA==", "bodyText": "People used have debug(format, args) to avoid unnecessary string concatenation in case debug wasn't enabled.", "url": "https://github.com/quarkusio/quarkus/pull/11803#discussion_r482085818", "createdAt": "2020-09-02T13:52:25Z", "author": {"login": "aloubyansky"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java", "diffHunk": "@@ -63,10 +69,12 @@ void addBuiltinData() {\n     }\n \n     void processCodestartDir(final Path sourceDirectory, final Map<String, Object> finalData) {\n+        log.debug(() -> \"processing dir: \" + sourceDirectory.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "927291550b3d2f2314ea8cfcbe12b02979bce82c"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA4NjIxNQ==", "bodyText": "Here you are creating lambdas.", "url": "https://github.com/quarkusio/quarkus/pull/11803#discussion_r482086215", "createdAt": "2020-09-02T13:52:54Z", "author": {"login": "aloubyansky"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java", "diffHunk": "@@ -63,10 +69,12 @@ void addBuiltinData() {\n     }\n \n     void processCodestartDir(final Path sourceDirectory, final Map<String, Object> finalData) {\n+        log.debug(() -> \"processing dir: \" + sourceDirectory.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA4NTgxOA=="}, "originalCommit": {"oid": "927291550b3d2f2314ea8cfcbe12b02979bce82c"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjExMTk5MA==", "bodyText": "@aloubyansky but debug(format, args) would still process the args (ex: list map and join)", "url": "https://github.com/quarkusio/quarkus/pull/11803#discussion_r482111990", "createdAt": "2020-09-02T14:26:48Z", "author": {"login": "ia3andy"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java", "diffHunk": "@@ -63,10 +69,12 @@ void addBuiltinData() {\n     }\n \n     void processCodestartDir(final Path sourceDirectory, final Map<String, Object> finalData) {\n+        log.debug(() -> \"processing dir: \" + sourceDirectory.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA4NTgxOA=="}, "originalCommit": {"oid": "927291550b3d2f2314ea8cfcbe12b02979bce82c"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjExNDk1Mg==", "bodyText": "Sure, if debug is actually enabled.", "url": "https://github.com/quarkusio/quarkus/pull/11803#discussion_r482114952", "createdAt": "2020-09-02T14:30:21Z", "author": {"login": "aloubyansky"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java", "diffHunk": "@@ -63,10 +69,12 @@ void addBuiltinData() {\n     }\n \n     void processCodestartDir(final Path sourceDirectory, final Map<String, Object> finalData) {\n+        log.debug(() -> \"processing dir: \" + sourceDirectory.toString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA4NTgxOA=="}, "originalCommit": {"oid": "927291550b3d2f2314ea8cfcbe12b02979bce82c"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 465, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}