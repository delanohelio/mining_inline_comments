{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MDA0OTM1", "number": 11322, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxODo1ODoyNlrOEaqmUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMToyOTowMFrOEatm9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2Mzk2MzY4OnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxODo1ODoyNlrOHEPHqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwOTo1ODo1M1rOHEnRhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwNDA3Mw==", "bodyText": "Just curious, did you figure that this was necessary?", "url": "https://github.com/quarkusio/quarkus/pull/11322#discussion_r474204073", "createdAt": "2020-08-20T18:58:26Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -666,6 +697,14 @@ private static void producePersistenceUnitDescriptorFromConfig(\n         // we found one\n         ParsedPersistenceXmlDescriptor descriptor = new ParsedPersistenceXmlDescriptor(null); //todo URL\n         descriptor.setName(persistenceUnitName);\n+\n+        descriptor.setExcludeUnlistedClasses(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677360504960761d1aad2a2d8930882c0099df4e"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU3NDQwNA==", "bodyText": "It's not necessary as you forced it in LightPersistence... but... I'm not sure we will keep it that way so wanted to be extra sure it wouldn't break if we change it later.", "url": "https://github.com/quarkusio/quarkus/pull/11322#discussion_r474574404", "createdAt": "2020-08-21T09:28:30Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -666,6 +697,14 @@ private static void producePersistenceUnitDescriptorFromConfig(\n         // we found one\n         ParsedPersistenceXmlDescriptor descriptor = new ParsedPersistenceXmlDescriptor(null); //todo URL\n         descriptor.setName(persistenceUnitName);\n+\n+        descriptor.setExcludeUnlistedClasses(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwNDA3Mw=="}, "originalCommit": {"oid": "677360504960761d1aad2a2d8930882c0099df4e"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU5OTgxMw==", "bodyText": "Ok, thanks I was just puzzled.", "url": "https://github.com/quarkusio/quarkus/pull/11322#discussion_r474599813", "createdAt": "2020-08-21T09:58:53Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -666,6 +697,14 @@ private static void producePersistenceUnitDescriptorFromConfig(\n         // we found one\n         ParsedPersistenceXmlDescriptor descriptor = new ParsedPersistenceXmlDescriptor(null); //todo URL\n         descriptor.setName(persistenceUnitName);\n+\n+        descriptor.setExcludeUnlistedClasses(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwNDA3Mw=="}, "originalCommit": {"oid": "677360504960761d1aad2a2d8930882c0099df4e"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDQwNzUwOnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMToxMjowMlrOHETeDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjo0NzoxOFrOHEVxBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI3NTM0MA==", "bodyText": "What do you mean by \"has special meaning\", is it not possible for a user to speficy this name explicitly?", "url": "https://github.com/quarkusio/quarkus/pull/11322#discussion_r474275340", "createdAt": "2020-08-20T21:12:02Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -126,7 +126,7 @@\n \n     public static final String HIBERNATE_ORM_CONFIG_PREFIX = \"quarkus.hibernate-orm.\";\n     public static final String NO_SQL_LOAD_SCRIPT_FILE = \"no-file\";\n-    public static final String DEFAULT_PERSISTENCE_UNIT_NAME = \"default\";\n+    public static final String DEFAULT_PERSISTENCE_UNIT_NAME = \"<default>\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31547956881919e36b0cd59423a57b9e008db3a1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxMjk2NA==", "bodyText": "The idea was to avoid a conflict between the default one and a potential named PU called \"default\". Thus why I added the special characters. Also, it's consistent with the Agroal extension.", "url": "https://github.com/quarkusio/quarkus/pull/11322#discussion_r474312964", "createdAt": "2020-08-20T22:47:18Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -126,7 +126,7 @@\n \n     public static final String HIBERNATE_ORM_CONFIG_PREFIX = \"quarkus.hibernate-orm.\";\n     public static final String NO_SQL_LOAD_SCRIPT_FILE = \"no-file\";\n-    public static final String DEFAULT_PERSISTENCE_UNIT_NAME = \"default\";\n+    public static final String DEFAULT_PERSISTENCE_UNIT_NAME = \"<default>\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI3NTM0MA=="}, "originalCommit": {"oid": "31547956881919e36b0cd59423a57b9e008db3a1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDQxNzIyOnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/deployment/src/test/resources/application-multiple-persistence-units-invalid.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMToxNToxMFrOHETkAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjo0NzozN1rOHEVxbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI3Njg2NA==", "bodyText": "Could you add a comment somewhere to remind why this is an invalid configuration? I guess because it's missing the package names filter packages?", "url": "https://github.com/quarkusio/quarkus/pull/11322#discussion_r474276864", "createdAt": "2020-08-20T21:15:10Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/deployment/src/test/resources/application-multiple-persistence-units-invalid.properties", "diffHunk": "@@ -0,0 +1,7 @@\n+quarkus.datasource.users.db-kind=h2\n+quarkus.datasource.users.jdbc.url=jdbc:h2:tcp://localhost/mem:users;DB_CLOSE_DELAY=-1\n+\n+quarkus.hibernate-orm.persistence-units.\"users\".dialect=org.hibernate.dialect.H2Dialect\n+quarkus.hibernate-orm.persistence-units.\"users\".log.sql=true\n+quarkus.hibernate-orm.persistence-units.\"users\".database.generation=drop-and-create\n+quarkus.hibernate-orm.persistence-units.\"users\".datasource=users", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677360504960761d1aad2a2d8930882c0099df4e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxMzA2OQ==", "bodyText": "Will do.", "url": "https://github.com/quarkusio/quarkus/pull/11322#discussion_r474313069", "createdAt": "2020-08-20T22:47:37Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/deployment/src/test/resources/application-multiple-persistence-units-invalid.properties", "diffHunk": "@@ -0,0 +1,7 @@\n+quarkus.datasource.users.db-kind=h2\n+quarkus.datasource.users.jdbc.url=jdbc:h2:tcp://localhost/mem:users;DB_CLOSE_DELAY=-1\n+\n+quarkus.hibernate-orm.persistence-units.\"users\".dialect=org.hibernate.dialect.H2Dialect\n+quarkus.hibernate-orm.persistence-units.\"users\".log.sql=true\n+quarkus.hibernate-orm.persistence-units.\"users\".database.generation=drop-and-create\n+quarkus.hibernate-orm.persistence-units.\"users\".datasource=users", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI3Njg2NA=="}, "originalCommit": {"oid": "677360504960761d1aad2a2d8930882c0099df4e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NDQ1Njg3OnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/JPAConfig.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMToyOTowMFrOHET8Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMToxMzowNFrOHEpQhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4MzAzNQ==", "bodyText": "is this condition check useful? I was assuming that unitName would be always defined, at most <default>.\nIf I'm wrong, we might want to improve the following (nested) if so that the default can still be used/injected even when there's more than one PU defined.", "url": "https://github.com/quarkusio/quarkus/pull/11322#discussion_r474283035", "createdAt": "2020-08-20T21:29:00Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/JPAConfig.java", "diffHunk": "@@ -91,8 +70,22 @@ void initDefaultPersistenceUnit() {\n         }\n     }\n \n-    boolean isJtaEnabled() {\n-        return jtaEnabled.get();\n+    public EntityManagerFactory getEntityManagerFactory(String unitName) {\n+        LazyPersistenceUnit lazyPersistenceUnit = null;\n+        if (unitName == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fbaefb015ced7d85655ba0b06c4a95c418ec941"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMxMjUyNg==", "bodyText": "It's always set except when you're explicitly calling null. This was the case somewhere in the code base so I decided to make it null safe just to be on the safe side.", "url": "https://github.com/quarkusio/quarkus/pull/11322#discussion_r474312526", "createdAt": "2020-08-20T22:46:03Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/JPAConfig.java", "diffHunk": "@@ -91,8 +70,22 @@ void initDefaultPersistenceUnit() {\n         }\n     }\n \n-    boolean isJtaEnabled() {\n-        return jtaEnabled.get();\n+    public EntityManagerFactory getEntityManagerFactory(String unitName) {\n+        LazyPersistenceUnit lazyPersistenceUnit = null;\n+        if (unitName == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4MzAzNQ=="}, "originalCommit": {"oid": "1fbaefb015ced7d85655ba0b06c4a95c418ec941"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYwMDYxMQ==", "bodyText": "Ok, it feels a bit smelly but we can clean it up later.", "url": "https://github.com/quarkusio/quarkus/pull/11322#discussion_r474600611", "createdAt": "2020-08-21T10:00:28Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/JPAConfig.java", "diffHunk": "@@ -91,8 +70,22 @@ void initDefaultPersistenceUnit() {\n         }\n     }\n \n-    boolean isJtaEnabled() {\n-        return jtaEnabled.get();\n+    public EntityManagerFactory getEntityManagerFactory(String unitName) {\n+        LazyPersistenceUnit lazyPersistenceUnit = null;\n+        if (unitName == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4MzAzNQ=="}, "originalCommit": {"oid": "1fbaefb015ced7d85655ba0b06c4a95c418ec941"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYzMjMyNA==", "bodyText": "I would call it safe not smelly. I'm not sure I understand your problem.\nEverything is working fine with the default injection, we have tests for that. The null test is there just if someone calls it programmatically. When dealing with injection, you pass the default unit name (which is not null).\nFor me passing null is not really valid, I only support it because someone used it (and I changed that call to not use it) and I thought maybe someone else could have.", "url": "https://github.com/quarkusio/quarkus/pull/11322#discussion_r474632324", "createdAt": "2020-08-21T11:13:04Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/JPAConfig.java", "diffHunk": "@@ -91,8 +70,22 @@ void initDefaultPersistenceUnit() {\n         }\n     }\n \n-    boolean isJtaEnabled() {\n-        return jtaEnabled.get();\n+    public EntityManagerFactory getEntityManagerFactory(String unitName) {\n+        LazyPersistenceUnit lazyPersistenceUnit = null;\n+        if (unitName == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI4MzAzNQ=="}, "originalCommit": {"oid": "1fbaefb015ced7d85655ba0b06c4a95c418ec941"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 723, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}