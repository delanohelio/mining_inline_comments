{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NjY0MTg3", "number": 12082, "title": "Set a injected CDI CommandListener to the mongodb configuration.", "bodyText": "This implementation allows injecting a CommandListener to the current MongoDB client configuration via CDI bean definition.\nThe idea came from using the MP opentracing library and trying to include the mongodb tracing spans.\nFollowing the instructions in the OpenTracing Mongo Driver Instrumentation there is a way to include the tracing information simply adding a CommandListener to the mongoclient settings.\nI prepared an example to show the MongoDB tracing:\nhttps://github.com/juazugas/quarkus-mongodb-opentracing/blob/master/src/main/java/com/example/mongodb/tracing/TracingCommandListenerProducer.java\non project sample https://github.com/juazugas/quarkus-mongodb-opentracing/", "createdAt": "2020-09-14T14:33:12Z", "url": "https://github.com/quarkusio/quarkus/pull/12082", "merged": true, "mergeCommit": {"oid": "cba0b3b5aed40fa3e7c1ce719e855d80d1ca9836"}, "closed": true, "closedAt": "2020-10-22T17:09:11Z", "author": {"login": "juazugas"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI0uvogFqTQ4Nzg3NTk2NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVCGdxgBqjM5MDkxMTQ3Mzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3ODc1OTY1", "url": "https://github.com/quarkusio/quarkus/pull/12082#pullrequestreview-487875965", "createdAt": "2020-09-14T15:13:13Z", "commit": {"oid": "28f82b796cdab6709adf041362f1ccaffeca70d6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNToxMzoxM1rOHRZ28A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNToxNDoyMlrOHRZ6Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAxMTUwNA==", "bodyText": "Shouldn't we support multiple CommandListeners given it looks like MongoDB supports it?", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r488011504", "createdAt": "2020-09-14T15:13:13Z", "author": {"login": "gsmet"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/MongoClientRecorder.java", "diffHunk": "@@ -26,12 +27,19 @@\n         return new Supplier<MongoClientSupport>() {\n             @Override\n             public MongoClientSupport get() {\n+\n                 List<ConnectionPoolListener> connectionPoolListeners = new ArrayList<>(connectionPoolListenerSuppliers.size());\n                 for (Supplier<ConnectionPoolListener> item : connectionPoolListenerSuppliers) {\n                     connectionPoolListeners.add(item.get());\n                 }\n+                final CommandListener commandListener = Arc.container().instance(CommandListener.class).get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28f82b796cdab6709adf041362f1ccaffeca70d6"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAxMTgwNA==", "bodyText": "I would drop this method, it's useless, right?", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r488011804", "createdAt": "2020-09-14T15:13:41Z", "author": {"login": "gsmet"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/MongoClientSupport.java", "diffHunk": "@@ -31,6 +45,22 @@ public MongoClientSupport(List<String> codecProviders, List<String> bsonDiscrimi\n         return connectionPoolListeners;\n     }\n \n+    public List<CommandListener> getCommandListeners() {\n+        return commandListeners;\n+    }\n+\n+    public void setCommandListenerList(List<CommandListener> commandListenersList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28f82b796cdab6709adf041362f1ccaffeca70d6"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAxMjI5MA==", "bodyText": "You already test the caller, I think we can drop this test here and consider it will be called with a non-null commandListener.", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r488012290", "createdAt": "2020-09-14T15:14:22Z", "author": {"login": "gsmet"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/MongoClientSupport.java", "diffHunk": "@@ -31,6 +45,22 @@ public MongoClientSupport(List<String> codecProviders, List<String> bsonDiscrimi\n         return connectionPoolListeners;\n     }\n \n+    public List<CommandListener> getCommandListeners() {\n+        return commandListeners;\n+    }\n+\n+    public void setCommandListenerList(List<CommandListener> commandListenersList) {\n+        if (null != commandListenersList && !commandListenersList.isEmpty()) {\n+            commandListeners.addAll(commandListenersList);\n+        }\n+    }\n+\n+    public void addCommandListener(CommandListener commandListener) {\n+        if (null != commandListener) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28f82b796cdab6709adf041362f1ccaffeca70d6"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjcyMzgx", "url": "https://github.com/quarkusio/quarkus/pull/12082#pullrequestreview-488272381", "createdAt": "2020-09-15T02:07:27Z", "commit": {"oid": "b1c101a8a8f44cbab7dde57b6ae949bf5ba8da58"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMjowNzoyN1rOHRt1cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMjowNzoyN1rOHRt1cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMzODgwMA==", "bodyText": "What's wrong with passing an empty list? No need to check here I guess", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r488338800", "createdAt": "2020-09-15T02:07:27Z", "author": {"login": "gastaldi"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/MongoClients.java", "diffHunk": "@@ -249,6 +249,10 @@ private MongoClientSettings createMongoConfiguration(MongoClientConfig config) {\n                 CodecRegistries.fromProviders(providers));\n         settings.codecRegistry(registry);\n \n+        if (!mongoClientSupport.getCommandListeners().isEmpty()) {\n+            settings.commandListenerList(mongoClientSupport.getCommandListeners());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1c101a8a8f44cbab7dde57b6ae949bf5ba8da58"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "80d7036b80da898e627a90739e84c96f281d184f", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/80d7036b80da898e627a90739e84c96f281d184f", "committedDate": "2020-09-16T08:31:20Z", "message": "Merge branch 'ext-mongodb-opentracing' of github.com:juazugas/quarkus into ext-mongodb-opentracing"}, "afterCommit": {"oid": "b7092f2019e54e7013b3578e5f6aa779064f4e2e", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/b7092f2019e54e7013b3578e5f6aa779064f4e2e", "committedDate": "2020-09-16T08:25:21Z", "message": "Add Test for injecting a CommandListener."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0MzkwNDUw", "url": "https://github.com/quarkusio/quarkus/pull/12082#pullrequestreview-494390450", "createdAt": "2020-09-23T07:51:48Z", "commit": {"oid": "b7092f2019e54e7013b3578e5f6aa779064f4e2e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo1MTo0OVrOHWa68A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo1MzowOFrOHWa_GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3MTc5Mg==", "bodyText": "I don't think this is needed to provides methods with and without the List of CommandListener. This method is only used inside the deployment module so it's signature can be modified.", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r493271792", "createdAt": "2020-09-23T07:51:49Z", "author": {"login": "loicmathieu"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/MongoClientSupport.java", "diffHunk": "@@ -1,21 +1,35 @@\n package io.quarkus.mongodb.runtime;\n \n+import java.util.ArrayList;\n import java.util.List;\n \n+import com.mongodb.event.CommandListener;\n import com.mongodb.event.ConnectionPoolListener;\n \n public class MongoClientSupport {\n \n     private final List<String> codecProviders;\n     private final List<String> bsonDiscriminators;\n     private final List<ConnectionPoolListener> connectionPoolListeners;\n+    private final List<CommandListener> commandListeners;\n     private final boolean disableSslSupport;\n \n     public MongoClientSupport(List<String> codecProviders, List<String> bsonDiscriminators,\n             List<ConnectionPoolListener> connectionPoolListeners, boolean disableSslSupport) {\n         this.codecProviders = codecProviders;\n         this.bsonDiscriminators = bsonDiscriminators;\n         this.connectionPoolListeners = connectionPoolListeners;\n+        this.commandListeners = new ArrayList<>();\n+        this.disableSslSupport = disableSslSupport;\n+    }\n+\n+    public MongoClientSupport(List<String> codecProviders, List<String> bsonDiscriminators,\n+            List<ConnectionPoolListener> connectionPoolListeners, List<CommandListener> commandListeners,\n+            boolean disableSslSupport) {\n+        this.codecProviders = codecProviders;\n+        this.bsonDiscriminators = bsonDiscriminators;\n+        this.connectionPoolListeners = connectionPoolListeners;\n+        this.commandListeners = commandListeners;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7092f2019e54e7013b3578e5f6aa779064f4e2e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3Mjg1Ng==", "bodyText": "This should not be needed, just pass the Command listener list as we do for all other MongoDB related classes", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r493272856", "createdAt": "2020-09-23T07:53:08Z", "author": {"login": "loicmathieu"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/MongoClientRecorder.java", "diffHunk": "@@ -26,12 +27,19 @@\n         return new Supplier<MongoClientSupport>() {\n             @Override\n             public MongoClientSupport get() {\n+\n                 List<ConnectionPoolListener> connectionPoolListeners = new ArrayList<>(connectionPoolListenerSuppliers.size());\n                 for (Supplier<ConnectionPoolListener> item : connectionPoolListenerSuppliers) {\n                     connectionPoolListeners.add(item.get());\n                 }\n+                final CommandListener commandListener = Arc.container().instance(CommandListener.class).get();\n \n-                return new MongoClientSupport(codecProviders, bsonDiscriminators, connectionPoolListeners, disableSslSupport);\n+                MongoClientSupport mongoClientSupport = new MongoClientSupport(codecProviders, bsonDiscriminators,\n+                        connectionPoolListeners, disableSslSupport);\n+                if (null != commandListener) {\n+                    mongoClientSupport.addCommandListener(commandListener);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7092f2019e54e7013b3578e5f6aa779064f4e2e"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MzIxODEz", "url": "https://github.com/quarkusio/quarkus/pull/12082#pullrequestreview-499321813", "createdAt": "2020-09-30T11:12:49Z", "commit": {"oid": "b33b286af447efdc2b2150ef05475efc8d150ef4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMToxMjo1MFrOHaYmeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMTo0MTo1NVrOHaZghw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQyODA4OQ==", "bodyText": "You create a List fo CommandListener in the getCommandListener method so this one is not needed.", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r497428089", "createdAt": "2020-09-30T11:12:50Z", "author": {"login": "loicmathieu"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/MongoClients.java", "diffHunk": "@@ -249,6 +250,12 @@ private MongoClientSettings createMongoConfiguration(MongoClientConfig config) {\n                 CodecRegistries.fromProviders(providers));\n         settings.codecRegistry(registry);\n \n+        List<CommandListener> listeners = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b33b286af447efdc2b2150ef05475efc8d150ef4"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzQ0Mjk1MQ==", "bodyText": "Having the insertions here is not realy readable for a test.\nCan you instead register the CommandEvent in a static List and assert in the test that the event is present inside the list ?", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r497442951", "createdAt": "2020-09-30T11:41:55Z", "author": {"login": "loicmathieu"}, "path": "extensions/mongodb-client/deployment/src/test/java/io/quarkus/mongodb/MockCommandListener.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package io.quarkus.mongodb;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.anyOf;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.notNullValue;\n+\n+import com.mongodb.event.CommandListener;\n+import com.mongodb.event.CommandStartedEvent;\n+\n+public class MockCommandListener implements CommandListener {\n+\n+    private CommandStartedEvent commandStartedEvent;\n+\n+    @Override\n+    public void commandStarted(CommandStartedEvent startedEvent) {\n+        this.commandStartedEvent = startedEvent;\n+        assertThat(startedEvent, notNullValue());\n+        assertThat(startedEvent.getCommandName(), anyOf(equalTo(\"listDatabases\"), equalTo(\"endSessions\")));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b33b286af447efdc2b2150ef05475efc8d150ef4"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NDc3Mzgx", "url": "https://github.com/quarkusio/quarkus/pull/12082#pullrequestreview-499477381", "createdAt": "2020-09-30T14:14:37Z", "commit": {"oid": "7715e922a6e645bdf0e10bc7633055f6955bff92"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDoxNDozN1rOHafsDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNDoxNDozN1rOHafsDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU0NDIwNQ==", "bodyText": "constants should be uppercase", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r497544205", "createdAt": "2020-09-30T14:14:37Z", "author": {"login": "loicmathieu"}, "path": "extensions/mongodb-client/deployment/src/test/java/io/quarkus/mongodb/MockCommandListener.java", "diffHunk": "@@ -1,26 +1,18 @@\n package io.quarkus.mongodb;\n \n-import static org.hamcrest.MatcherAssert.assertThat;\n-import static org.hamcrest.Matchers.anyOf;\n-import static org.hamcrest.Matchers.equalTo;\n-import static org.hamcrest.Matchers.notNullValue;\n+import java.util.ArrayList;\n+import java.util.List;\n \n import com.mongodb.event.CommandListener;\n import com.mongodb.event.CommandStartedEvent;\n \n public class MockCommandListener implements CommandListener {\n \n-    private CommandStartedEvent commandStartedEvent;\n+    public static final List<String> events = new ArrayList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7715e922a6e645bdf0e10bc7633055f6955bff92"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7715e922a6e645bdf0e10bc7633055f6955bff92", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/7715e922a6e645bdf0e10bc7633055f6955bff92", "committedDate": "2020-09-30T13:18:49Z", "message": "Move assertions to test class and minor changes."}, "afterCommit": {"oid": "8a5a0208005084d909999c7eadf788a369f44512", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/8a5a0208005084d909999c7eadf788a369f44512", "committedDate": "2020-09-30T15:15:21Z", "message": "Add CommandListener implementors to the mongoDB configuration."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NTYyNTI0", "url": "https://github.com/quarkusio/quarkus/pull/12082#pullrequestreview-499562524", "createdAt": "2020-09-30T15:35:51Z", "commit": {"oid": "8a5a0208005084d909999c7eadf788a369f44512"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NTIwNzI2", "url": "https://github.com/quarkusio/quarkus/pull/12082#pullrequestreview-504520726", "createdAt": "2020-10-08T08:00:55Z", "commit": {"oid": "8a5a0208005084d909999c7eadf788a369f44512"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODowMDo1NVrOHeSe-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODowMzo0NVrOHeSlDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUyMjE3MQ==", "bodyText": "I see this is done to be symmetrical. But I fail to see why we need build items for that, rather than just having private methods.\nIs there any point for the others? In this case it makes sense to be consistent and have it here too.", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r501522171", "createdAt": "2020-10-08T08:00:55Z", "author": {"login": "gsmet"}, "path": "extensions/mongodb-client/deployment/src/main/java/io/quarkus/mongodb/deployment/CommandListenerBuildItem.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package io.quarkus.mongodb.deployment;\n+\n+import java.util.List;\n+\n+import io.quarkus.builder.item.SimpleBuildItem;\n+\n+public final class CommandListenerBuildItem extends SimpleBuildItem {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5a0208005084d909999c7eadf788a369f44512"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUyMjM5Nw==", "bodyText": "Maybe rename the method to addExtensionPointsToNative ?", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r501522397", "createdAt": "2020-10-08T08:01:21Z", "author": {"login": "gsmet"}, "path": "extensions/mongodb-client/deployment/src/main/java/io/quarkus/mongodb/deployment/MongoClientProcessor.java", "diffHunk": "@@ -82,11 +83,21 @@ BsonDiscriminatorBuildItem collectBsonDiscriminators(CombinedIndexBuildItem inde\n     }\n \n     @BuildStep\n-    List<ReflectiveClassBuildItem> addCodecsAndDiscriminatorsToNative(CodecProviderBuildItem codecProviders,\n-            BsonDiscriminatorBuildItem bsonDiscriminators) {\n+    CommandListenerBuildItem collectCommandListeners(CombinedIndexBuildItem indexBuildItem) {\n+        Collection<ClassInfo> commandListenerClasses = indexBuildItem.getIndex()\n+                .getAllKnownImplementors(DotName.createSimple(CommandListener.class.getName()));\n+        List<String> names = commandListenerClasses.stream().map(ci -> ci.name().toString()).collect(Collectors.toList());\n+        return new CommandListenerBuildItem(names);\n+    }\n+\n+    @BuildStep\n+    List<ReflectiveClassBuildItem> addCodecsAndDiscriminatorsAndListenersToNative(CodecProviderBuildItem codecProviders,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5a0208005084d909999c7eadf788a369f44512"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUyMzU0Mw==", "bodyText": "Could we use Class.forName here instead?", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r501523543", "createdAt": "2020-10-08T08:03:26Z", "author": {"login": "gsmet"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/MongoClients.java", "diffHunk": "@@ -384,6 +387,21 @@ private AuthenticationMechanism getAuthenticationMechanism(String authMechanism)\n         return providers;\n     }\n \n+    private List<CommandListener> getCommandListeners(List<String> classNames) {\n+        List<CommandListener> listeners = new ArrayList<>();\n+        for (String name : classNames) {\n+            try {\n+                Class<?> clazz = Thread.currentThread().getContextClassLoader().loadClass(name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5a0208005084d909999c7eadf788a369f44512"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTUyMzcyNw==", "bodyText": "Maybe call this one commandListeners?", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r501523727", "createdAt": "2020-10-08T08:03:45Z", "author": {"login": "gsmet"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/MongoClients.java", "diffHunk": "@@ -249,6 +250,8 @@ private MongoClientSettings createMongoConfiguration(MongoClientConfig config) {\n                 CodecRegistries.fromProviders(providers));\n         settings.codecRegistry(registry);\n \n+        settings.commandListenerList(getCommandListeners(mongoClientSupport.getCommandListeners()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a5a0208005084d909999c7eadf788a369f44512"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aee8c58cc9843e6d069f29cd2f3dbff9b4bd0ea6", "author": {"user": {"login": "juazugas", "name": "Juan Zuriaga"}}, "url": "https://github.com/quarkusio/quarkus/commit/aee8c58cc9843e6d069f29cd2f3dbff9b4bd0ea6", "committedDate": "2020-10-12T14:08:58Z", "message": "Change class loading when adding the listeners."}, "afterCommit": {"oid": "557b58a899c618ba48de745b76741e70f794c398", "author": {"user": {"login": "juazugas", "name": "Juan Zuriaga"}}, "url": "https://github.com/quarkusio/quarkus/commit/557b58a899c618ba48de745b76741e70f794c398", "committedDate": "2020-10-12T15:14:09Z", "message": "Change class loading when adding the listeners."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "557b58a899c618ba48de745b76741e70f794c398", "author": {"user": {"login": "juazugas", "name": "Juan Zuriaga"}}, "url": "https://github.com/quarkusio/quarkus/commit/557b58a899c618ba48de745b76741e70f794c398", "committedDate": "2020-10-12T15:14:09Z", "message": "Change class loading when adding the listeners."}, "afterCommit": {"oid": "12302721b651dad84a486bc0183676fc19f39a7c", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/12302721b651dad84a486bc0183676fc19f39a7c", "committedDate": "2020-10-13T12:44:54Z", "message": "Add CommandListener implementors to the mongoDB settings."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MzkzMzU1", "url": "https://github.com/quarkusio/quarkus/pull/12082#pullrequestreview-507393355", "createdAt": "2020-10-13T12:46:08Z", "commit": {"oid": "12302721b651dad84a486bc0183676fc19f39a7c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTQ4MzA5", "url": "https://github.com/quarkusio/quarkus/pull/12082#pullrequestreview-512148309", "createdAt": "2020-10-19T20:49:56Z", "commit": {"oid": "12302721b651dad84a486bc0183676fc19f39a7c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDo0OTo1NlrOHkhIjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDo0OTo1NlrOHkhIjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODA1MzY0Ng==", "bodyText": "Can you please add some Javadoc to this class? This is necessary for the All Build Items page", "url": "https://github.com/quarkusio/quarkus/pull/12082#discussion_r508053646", "createdAt": "2020-10-19T20:49:56Z", "author": {"login": "gastaldi"}, "path": "extensions/mongodb-client/deployment/src/main/java/io/quarkus/mongodb/deployment/CommandListenerBuildItem.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package io.quarkus.mongodb.deployment;\n+\n+import java.util.List;\n+\n+import io.quarkus.builder.item.SimpleBuildItem;\n+\n+public final class CommandListenerBuildItem extends SimpleBuildItem {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12302721b651dad84a486bc0183676fc19f39a7c"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7f3acc5c7be2df9d20efe241d210152cc900c5f", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/b7f3acc5c7be2df9d20efe241d210152cc900c5f", "committedDate": "2020-10-22T13:36:20Z", "message": "Add CommandListener implementors to the mongoDB settings."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e09bd88c46cfaf3b6731fe746da5424c4a749687", "author": {"user": {"login": "gsmet", "name": "Guillaume Smet"}}, "url": "https://github.com/quarkusio/quarkus/commit/e09bd88c46cfaf3b6731fe746da5424c4a749687", "committedDate": "2020-10-22T13:36:20Z", "message": "Add javadoc for MongoDB client build items"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "12302721b651dad84a486bc0183676fc19f39a7c", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/12302721b651dad84a486bc0183676fc19f39a7c", "committedDate": "2020-10-13T12:44:54Z", "message": "Add CommandListener implementors to the mongoDB settings."}, "afterCommit": {"oid": "e09bd88c46cfaf3b6731fe746da5424c4a749687", "author": {"user": {"login": "gsmet", "name": "Guillaume Smet"}}, "url": "https://github.com/quarkusio/quarkus/commit/e09bd88c46cfaf3b6731fe746da5424c4a749687", "committedDate": "2020-10-22T13:36:20Z", "message": "Add javadoc for MongoDB client build items"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 473, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}