{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MjQ0NTA5", "number": 7815, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTozNToxOVrODnxI9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxODowMTo1N1rODn7Q_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDI2MTY0OnYy", "diffSide": "RIGHT", "path": "extensions/optaplanner/runtime/src/main/java/io/quarkus/optaplanner/nativeimage/KogitoSubstitutions.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QwOTozNToxOVrOF19BuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMDo0MToyNFrOF1_B1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExODcxMg==", "bodyText": "-1\nThis is a substitution that should happen in Kogito (= Drools), not in OptaPlanner. It's not OptaPlanner alone that will suffer from it.  OptaPlanner should not work around it, Kogito should fix it. Kogito 0.8.0 is borked, we need a Kogito 0.8.1 release.", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392118712", "createdAt": "2020-03-13T09:35:19Z", "author": {"login": "ge0ffrey"}, "path": "extensions/optaplanner/runtime/src/main/java/io/quarkus/optaplanner/nativeimage/KogitoSubstitutions.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.optaplanner.nativeimage;\n+\n+import java.lang.reflect.Method;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+@TargetClass(className = \"org.drools.core.rule.builder.dialect.asm.ClassGenerator\")\n+final class Target_org_drools_core_rule_builder_dialect_asm_ClassGenerator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3625ade52d34fca4bb13314e33a7ebd053d1359"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExOTc0OQ==", "bodyText": "If we want to get the PR in, there is no other way. If you folks want to wait for a Kogito release that doesn't suffer from this, that's up to you :).\nBut if you want it in no, there is no other way", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392119749", "createdAt": "2020-03-13T09:37:28Z", "author": {"login": "geoand"}, "path": "extensions/optaplanner/runtime/src/main/java/io/quarkus/optaplanner/nativeimage/KogitoSubstitutions.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.optaplanner.nativeimage;\n+\n+import java.lang.reflect.Method;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+@TargetClass(className = \"org.drools.core.rule.builder.dialect.asm.ClassGenerator\")\n+final class Target_org_drools_core_rule_builder_dialect_asm_ClassGenerator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExODcxMg=="}, "originalCommit": {"oid": "c3625ade52d34fca4bb13314e33a7ebd053d1359"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MDI4MQ==", "bodyText": "I am willing to comprise to merge it like this for Quarkus 1.3.0 as a temporarily workaround (*), if there's a commitment to revert it by Quarkus 1.3.1 by releasing and using Kogito 0.8.1. @mariofusco wdyt?\n(*) Let's add a comment stating that it's a temporarily workaround.", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392150281", "createdAt": "2020-03-13T10:38:42Z", "author": {"login": "ge0ffrey"}, "path": "extensions/optaplanner/runtime/src/main/java/io/quarkus/optaplanner/nativeimage/KogitoSubstitutions.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.optaplanner.nativeimage;\n+\n+import java.lang.reflect.Method;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+@TargetClass(className = \"org.drools.core.rule.builder.dialect.asm.ClassGenerator\")\n+final class Target_org_drools_core_rule_builder_dialect_asm_ClassGenerator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExODcxMg=="}, "originalCommit": {"oid": "c3625ade52d34fca4bb13314e33a7ebd053d1359"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE1MTUwOQ==", "bodyText": "In any case, this PR isn't making it into any 1.3.x line. We are talking purely for 1.4, whether it goes in as is, or with a new Kogito version", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392151509", "createdAt": "2020-03-13T10:41:24Z", "author": {"login": "geoand"}, "path": "extensions/optaplanner/runtime/src/main/java/io/quarkus/optaplanner/nativeimage/KogitoSubstitutions.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.optaplanner.nativeimage;\n+\n+import java.lang.reflect.Method;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+@TargetClass(className = \"org.drools.core.rule.builder.dialect.asm.ClassGenerator\")\n+final class Target_org_drools_core_rule_builder_dialect_asm_ClassGenerator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjExODcxMg=="}, "originalCommit": {"oid": "c3625ade52d34fca4bb13314e33a7ebd053d1359"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTkyMDYxOnYy", "diffSide": "RIGHT", "path": "extensions/optaplanner/runtime/src/main/java/io/quarkus/optaplanner/nativeimage/KogitoSubstitutions.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxODowMTo1N1rOF2NcyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxODoxMTo0MVrOF2Nuow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM4Nzc4NA==", "bodyText": "Why is the class name different from KogitoSubstitutions?", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392387784", "createdAt": "2020-03-13T18:01:57Z", "author": {"login": "gastaldi"}, "path": "extensions/optaplanner/runtime/src/main/java/io/quarkus/optaplanner/nativeimage/KogitoSubstitutions.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.optaplanner.nativeimage;\n+\n+import java.lang.reflect.Method;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+@TargetClass(className = \"org.drools.core.rule.builder.dialect.asm.ClassGenerator\")\n+final class Target_org_drools_core_rule_builder_dialect_asm_ClassGenerator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3625ade52d34fca4bb13314e33a7ebd053d1359"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM4OTM5Ng==", "bodyText": "It doesn't really matter since it's going away really really soon \ud83d\ude0e", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392389396", "createdAt": "2020-03-13T18:05:25Z", "author": {"login": "geoand"}, "path": "extensions/optaplanner/runtime/src/main/java/io/quarkus/optaplanner/nativeimage/KogitoSubstitutions.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.optaplanner.nativeimage;\n+\n+import java.lang.reflect.Method;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+@TargetClass(className = \"org.drools.core.rule.builder.dialect.asm.ClassGenerator\")\n+final class Target_org_drools_core_rule_builder_dialect_asm_ClassGenerator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM4Nzc4NA=="}, "originalCommit": {"oid": "c3625ade52d34fca4bb13314e33a7ebd053d1359"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM5MDg4OA==", "bodyText": "Well yeah, it's just that it's confusing to look at this class and see another name :)", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392390888", "createdAt": "2020-03-13T18:08:34Z", "author": {"login": "gastaldi"}, "path": "extensions/optaplanner/runtime/src/main/java/io/quarkus/optaplanner/nativeimage/KogitoSubstitutions.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.optaplanner.nativeimage;\n+\n+import java.lang.reflect.Method;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+@TargetClass(className = \"org.drools.core.rule.builder.dialect.asm.ClassGenerator\")\n+final class Target_org_drools_core_rule_builder_dialect_asm_ClassGenerator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM4Nzc4NA=="}, "originalCommit": {"oid": "c3625ade52d34fca4bb13314e33a7ebd053d1359"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM5MjM1NQ==", "bodyText": "The idea was that multiple substitutions might have been needed. For example like Netty.\nIt turned out that it wasn't needed \ud83d\ude0a", "url": "https://github.com/quarkusio/quarkus/pull/7815#discussion_r392392355", "createdAt": "2020-03-13T18:11:41Z", "author": {"login": "geoand"}, "path": "extensions/optaplanner/runtime/src/main/java/io/quarkus/optaplanner/nativeimage/KogitoSubstitutions.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.optaplanner.nativeimage;\n+\n+import java.lang.reflect.Method;\n+\n+import com.oracle.svm.core.annotate.Alias;\n+import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.TargetClass;\n+\n+@TargetClass(className = \"org.drools.core.rule.builder.dialect.asm.ClassGenerator\")\n+final class Target_org_drools_core_rule_builder_dialect_asm_ClassGenerator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjM4Nzc4NA=="}, "originalCommit": {"oid": "c3625ade52d34fca4bb13314e33a7ebd053d1359"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4841, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}