{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4ODQ2NTgy", "number": 12563, "title": "Hot Reload Performance Improvements", "bodyText": "This PR will speed up the hot reload time for larger applications. Improvements likely won't really be noticeable in small demos, but it should have a big impact for larger applications, and lays the groundwork for further improvements.\n\nIf no changes are made to the class structure then an attempt is made to replace the classes with the instrumentation API and avoid an application restart, resulting in pretty much instant replacement\nIf changes are made the details of these changes are propagated into the build process, allowing information to be cached. This PR uses this info to cache Hibernate generated proxies and class based transformations, which can save a lot of time for larger applications.", "createdAt": "2020-10-06T21:30:49Z", "url": "https://github.com/quarkusio/quarkus/pull/12563", "merged": true, "mergeCommit": {"oid": "71891910bd39e5c806daa18ae82bb4c3de996188"}, "closed": true, "closedAt": "2020-11-27T20:59:23Z", "author": {"login": "stuartwdouglas"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQBwqigBqjM4NDgwNTE2MjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgpD60AFqTU0MDA0ODA1OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cfb1d9a6327d96b4196700c529939d87eb93df47", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/cfb1d9a6327d96b4196700c529939d87eb93df47", "committedDate": "2020-10-06T21:24:22Z", "message": "Cache hibernate proxies between runs"}, "afterCommit": {"oid": "c2e4f405a36703ce091d2bc409b5731afa880b38", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/c2e4f405a36703ce091d2bc409b5731afa880b38", "committedDate": "2020-10-07T00:22:54Z", "message": "Cache hibernate proxies between runs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2e4f405a36703ce091d2bc409b5731afa880b38", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/c2e4f405a36703ce091d2bc409b5731afa880b38", "committedDate": "2020-10-07T00:22:54Z", "message": "Cache hibernate proxies between runs"}, "afterCommit": {"oid": "10038d7dbd3e06ce5bd81f956849c3d271243b07", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/10038d7dbd3e06ce5bd81f956849c3d271243b07", "committedDate": "2020-10-07T00:27:54Z", "message": "Cache hibernate proxies between runs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzODM4NTcy", "url": "https://github.com/quarkusio/quarkus/pull/12563#pullrequestreview-503838572", "createdAt": "2020-10-07T12:46:15Z", "commit": {"oid": "10038d7dbd3e06ce5bd81f956849c3d271243b07"}, "state": "DISMISSED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjo0NjoxNVrOHdxihg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjo1MTowNFrOHdxugA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4MjQwNg==", "bodyText": "This looks very neat, but I believe you're not taking into account a change in related classes that would affect the output, such as @Proxy(proxyClass -> changedInterface ) ?", "url": "https://github.com/quarkusio/quarkus/pull/12563#discussion_r500982406", "createdAt": "2020-10-07T12:46:15Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -1194,37 +1211,44 @@ private PreGeneratedProxies generatedProxies(Set<String> entityClassNames, Index\n         }\n         try (ProxyBuildingHelper proxyHelper = new ProxyBuildingHelper(Thread.currentThread().getContextClassLoader())) {\n             for (String entity : entityClassNames) {\n-                Set<Class<?>> proxyInterfaces = new HashSet<>();\n-                proxyInterfaces.add(HibernateProxy.class); //always added\n-                Class<?> mappedClass = proxyHelper.uninitializedClass(entity);\n-                String proxy = proxyAnnotations.get(entity);\n-                if (proxy != null) {\n-                    proxyInterfaces.add(proxyHelper.uninitializedClass(proxy));\n-                } else if (!proxyHelper.isProxiable(mappedClass)) {\n-                    //if there is no @Proxy we need to make sure the actual class is proxiable\n-                    continue;\n-                }\n-                for (ClassInfo subclass : combinedIndex.getAllKnownSubclasses(DotName.createSimple(entity))) {\n-                    String subclassName = subclass.name().toString();\n-                    if (!entityClassNames.contains(subclassName)) {\n-                        //not an entity\n-                        continue;\n-                    }\n-                    proxy = proxyAnnotations.get(subclassName);\n+                CachedProxy result;\n+                if (proxyCache.cache.containsKey(entity) && !changedClasses.contains(entity)) {\n+                    result = proxyCache.cache.get(entity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10038d7dbd3e06ce5bd81f956849c3d271243b07"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4NTQ3Mg==", "bodyText": "And what about the current class inheriting further from other changed classes?", "url": "https://github.com/quarkusio/quarkus/pull/12563#discussion_r500985472", "createdAt": "2020-10-07T12:51:04Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -1194,37 +1211,44 @@ private PreGeneratedProxies generatedProxies(Set<String> entityClassNames, Index\n         }\n         try (ProxyBuildingHelper proxyHelper = new ProxyBuildingHelper(Thread.currentThread().getContextClassLoader())) {\n             for (String entity : entityClassNames) {\n-                Set<Class<?>> proxyInterfaces = new HashSet<>();\n-                proxyInterfaces.add(HibernateProxy.class); //always added\n-                Class<?> mappedClass = proxyHelper.uninitializedClass(entity);\n-                String proxy = proxyAnnotations.get(entity);\n-                if (proxy != null) {\n-                    proxyInterfaces.add(proxyHelper.uninitializedClass(proxy));\n-                } else if (!proxyHelper.isProxiable(mappedClass)) {\n-                    //if there is no @Proxy we need to make sure the actual class is proxiable\n-                    continue;\n-                }\n-                for (ClassInfo subclass : combinedIndex.getAllKnownSubclasses(DotName.createSimple(entity))) {\n-                    String subclassName = subclass.name().toString();\n-                    if (!entityClassNames.contains(subclassName)) {\n-                        //not an entity\n-                        continue;\n-                    }\n-                    proxy = proxyAnnotations.get(subclassName);\n+                CachedProxy result;\n+                if (proxyCache.cache.containsKey(entity) && !changedClasses.contains(entity)) {\n+                    result = proxyCache.cache.get(entity);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk4MjQwNg=="}, "originalCommit": {"oid": "10038d7dbd3e06ce5bd81f956849c3d271243b07"}, "originalPosition": 88}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzODY0NTU2", "url": "https://github.com/quarkusio/quarkus/pull/12563#pullrequestreview-503864556", "createdAt": "2020-10-07T13:14:53Z", "commit": {"oid": "10038d7dbd3e06ce5bd81f956849c3d271243b07"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzoxNDo1NFrOHdytqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMzoxNDo1NFrOHdytqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAwMTY0Mg==", "bodyText": "If old.handle was defined like this, it will still set its TCCL to the old TCCL it captured as the first thing it does right after you've just set the new TCCL, no?", "url": "https://github.com/quarkusio/quarkus/pull/12563#discussion_r501001642", "createdAt": "2020-10-07T13:14:54Z", "author": {"login": "FroMage"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/VertxHttpRecorder.java", "diffHunk": "@@ -409,6 +409,19 @@ public void handle(RoutingContext event) {\n                 && hotReplacementContext.getDevModeType() == DevModeType.REMOTE_SERVER_SIDE) {\n             root = remoteSyncHandler = new RemoteSyncHandler(liveReloadConfig.password.get(), root, hotReplacementContext);\n         }\n+\n+        if (launchMode == LaunchMode.DEVELOPMENT) {\n+            //vert.x threads can still reference the old TCCL\n+            ClassLoader newCl = Thread.currentThread().getContextClassLoader();\n+            Handler<HttpServerRequest> old = root;\n+            root = new Handler<HttpServerRequest>() {\n+                @Override\n+                public void handle(HttpServerRequest event) {\n+                    Thread.currentThread().setContextClassLoader(newCl);\n+                    old.handle(event);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10038d7dbd3e06ce5bd81f956849c3d271243b07"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10038d7dbd3e06ce5bd81f956849c3d271243b07", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/10038d7dbd3e06ce5bd81f956849c3d271243b07", "committedDate": "2020-10-07T00:27:54Z", "message": "Cache hibernate proxies between runs"}, "afterCommit": {"oid": "7d6878c4d0c67cc9d8f4adadf1f232924a210ba5", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/7d6878c4d0c67cc9d8f4adadf1f232924a210ba5", "committedDate": "2020-10-08T00:01:50Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7d6878c4d0c67cc9d8f4adadf1f232924a210ba5", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/7d6878c4d0c67cc9d8f4adadf1f232924a210ba5", "committedDate": "2020-10-08T00:01:50Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}, "afterCommit": {"oid": "b45cbc705a4a39c077a19c14ae0debd04ac755a9", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/b45cbc705a4a39c077a19c14ae0debd04ac755a9", "committedDate": "2020-10-19T04:40:18Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b45cbc705a4a39c077a19c14ae0debd04ac755a9", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/b45cbc705a4a39c077a19c14ae0debd04ac755a9", "committedDate": "2020-10-19T04:40:18Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}, "afterCommit": {"oid": "e115ca9213aa9225cf7a0a034a4c0778e861f111", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/e115ca9213aa9225cf7a0a034a4c0778e861f111", "committedDate": "2020-10-22T03:49:55Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e115ca9213aa9225cf7a0a034a4c0778e861f111", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/e115ca9213aa9225cf7a0a034a4c0778e861f111", "committedDate": "2020-10-22T03:49:55Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}, "afterCommit": {"oid": "b5965b9dd579a61e6a2145d9889145ed5ee51ebf", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/b5965b9dd579a61e6a2145d9889145ed5ee51ebf", "committedDate": "2020-10-28T22:33:37Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b5965b9dd579a61e6a2145d9889145ed5ee51ebf", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/b5965b9dd579a61e6a2145d9889145ed5ee51ebf", "committedDate": "2020-10-28T22:33:37Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}, "afterCommit": {"oid": "2078f725f5b265b02412cb8b9bee1dd5d5e4ee21", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/2078f725f5b265b02412cb8b9bee1dd5d5e4ee21", "committedDate": "2020-11-10T20:55:38Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2078f725f5b265b02412cb8b9bee1dd5d5e4ee21", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/2078f725f5b265b02412cb8b9bee1dd5d5e4ee21", "committedDate": "2020-11-10T20:55:38Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}, "afterCommit": {"oid": "93c6d000d2d93e4d7a3fa50ba9063b11ae3309b8", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/93c6d000d2d93e4d7a3fa50ba9063b11ae3309b8", "committedDate": "2020-11-17T23:30:48Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7adadc602c1e0adc61d17c2eee63db244b5b84b1", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/7adadc602c1e0adc61d17c2eee63db244b5b84b1", "committedDate": "2020-11-27T15:10:38Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93c6d000d2d93e4d7a3fa50ba9063b11ae3309b8", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/93c6d000d2d93e4d7a3fa50ba9063b11ae3309b8", "committedDate": "2020-11-17T23:30:48Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}, "afterCommit": {"oid": "7adadc602c1e0adc61d17c2eee63db244b5b84b1", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/7adadc602c1e0adc61d17c2eee63db244b5b84b1", "committedDate": "2020-11-27T15:10:38Z", "message": "Add the option to perform hot reload via instrumentation\n\nThis does not require an app restart, so is much faster\nfor larger applications, but is limited to circumstances\nwhere no structural changes have taken place.\n\nThis also adds the ability to check which classes have\nbeen changed and what these changes actually are, which\nallow frameworks to potentially cache metadata between\nruns.\n\nIt also includes initial support for caching hibernate\nproxies and transformations, as generating these are quite\nexpensive."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMDQ4MDU4", "url": "https://github.com/quarkusio/quarkus/pull/12563#pullrequestreview-540048058", "createdAt": "2020-11-27T15:13:12Z", "commit": {"oid": "7adadc602c1e0adc61d17c2eee63db244b5b84b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1882, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}