{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3ODQwNjM5", "number": 9790, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzo0NzoyMlrOECkccw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzo0NzoyMlrOECkccw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTI5NzE1OnYy", "diffSide": "RIGHT", "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/BasicJavaNativeBuildTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzo0NzoyMlrOGfGvXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNDowODozN1rOGfHz9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI2OTQ3MA==", "bodyText": "Just to clarify, is the purpose of this test to make sure the nativeArgs can be parsed and are a valid config?", "url": "https://github.com/quarkusio/quarkus/pull/9790#discussion_r435269470", "createdAt": "2020-06-04T13:47:22Z", "author": {"login": "aloubyansky"}, "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/BasicJavaNativeBuildTest.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package io.quarkus.gradle;\n+\n+import org.gradle.testkit.runner.BuildResult;\n+import org.gradle.testkit.runner.GradleRunner;\n+import org.gradle.testkit.runner.TaskOutcome;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class BasicJavaNativeBuildTest extends QuarkusGradleTestBase  {\n+\n+    @Test\n+    public void shouldIgnoreNativeArgs() throws Exception{\n+        final File projectDir = getProjectDir(\"basic-java-native-module\");\n+\n+        BuildResult build = GradleRunner.create()\n+                .forwardOutput()\n+                .withPluginClasspath()\n+                .withArguments(arguments(\"clean\", \"quarkusBuild\"))\n+                .withProjectDir(projectDir)\n+                .build();\n+\n+        assertThat(build.task(\":quarkusBuild\").getOutcome()).isEqualTo(TaskOutcome.SUCCESS);\n+        assertThat(projectDir.toPath().resolve(\"build\").resolve(\"foo-1.0.0-SNAPSHOT-runner.jar\")).exists();\n+        assertThat(projectDir.toPath().resolve(\"build\").resolve(\"foo-1.0.0-SNAPSHOT-runner\")).doesNotExist();\n+    }\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "754ac984dbc7bf10bb7bdfd562c2aa03af3e8bc1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI4NzAzMQ==", "bodyText": "Yes exactly.", "url": "https://github.com/quarkusio/quarkus/pull/9790#discussion_r435287031", "createdAt": "2020-06-04T14:08:37Z", "author": {"login": "glefloch"}, "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/BasicJavaNativeBuildTest.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package io.quarkus.gradle;\n+\n+import org.gradle.testkit.runner.BuildResult;\n+import org.gradle.testkit.runner.GradleRunner;\n+import org.gradle.testkit.runner.TaskOutcome;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class BasicJavaNativeBuildTest extends QuarkusGradleTestBase  {\n+\n+    @Test\n+    public void shouldIgnoreNativeArgs() throws Exception{\n+        final File projectDir = getProjectDir(\"basic-java-native-module\");\n+\n+        BuildResult build = GradleRunner.create()\n+                .forwardOutput()\n+                .withPluginClasspath()\n+                .withArguments(arguments(\"clean\", \"quarkusBuild\"))\n+                .withProjectDir(projectDir)\n+                .build();\n+\n+        assertThat(build.task(\":quarkusBuild\").getOutcome()).isEqualTo(TaskOutcome.SUCCESS);\n+        assertThat(projectDir.toPath().resolve(\"build\").resolve(\"foo-1.0.0-SNAPSHOT-runner.jar\")).exists();\n+        assertThat(projectDir.toPath().resolve(\"build\").resolve(\"foo-1.0.0-SNAPSHOT-runner\")).doesNotExist();\n+    }\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI2OTQ3MA=="}, "originalCommit": {"oid": "754ac984dbc7bf10bb7bdfd562c2aa03af3e8bc1"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2946, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}