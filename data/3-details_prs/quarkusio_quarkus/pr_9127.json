{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MTkzMjQx", "number": 9127, "title": "Remove manually generated Flyway beans", "bodyText": "Based on #9097\nI am not entirely sure of this approach, because although it does simplify the code quite a bit, it needs to introduce a special way of obtaining the datasource that could fall apart (or become slow if we add synchronization) if #9044 is introduced", "createdAt": "2020-05-06T16:10:27Z", "url": "https://github.com/quarkusio/quarkus/pull/9127", "merged": true, "mergeCommit": {"oid": "5be6d761b7fc18d8bcf0afd07c2aa13c9857cc1f"}, "closed": true, "closedAt": "2020-05-15T09:07:07Z", "author": {"login": "geoand"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcerj-EgBqjMzMDkzNzQ1MjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcheWL1AFqTQxMjQ3NDY5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1d707ec504ebbd998fcf539970b3af81a78d3251", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/1d707ec504ebbd998fcf539970b3af81a78d3251", "committedDate": "2020-05-06T16:06:39Z", "message": "Remove manually generated Flyway beans"}, "afterCommit": {"oid": "56f5be0c272dc8057a45609b91670b0110d89174", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/56f5be0c272dc8057a45609b91670b0110d89174", "committedDate": "2020-05-06T16:48:37Z", "message": "Remove manually generated Flyway beans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MzkzNTY5", "url": "https://github.com/quarkusio/quarkus/pull/9127#pullrequestreview-407393569", "createdAt": "2020-05-07T11:46:41Z", "commit": {"oid": "56f5be0c272dc8057a45609b91670b0110d89174"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMTo0Njo0MVrOGR6yTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMTo1OTo1MlrOGR7NfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ0MjEyNw==", "bodyText": "I think that this map needs to be synchronized as it could be accessed from multiple threads concurrently. We should probably use ConcurrentHashMap and computeIfAbsent() in the getDataSource() method.", "url": "https://github.com/quarkusio/quarkus/pull/9127#discussion_r421442127", "createdAt": "2020-05-07T11:46:41Z", "author": {"login": "mkouba"}, "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/DataSourceProducer.java", "diffHunk": "@@ -67,7 +67,7 @@\n     private final TransactionSynchronizationRegistry transactionSynchronizationRegistry;\n     private final DataSourceSupport dataSourceSupport;\n \n-    private final List<AgroalDataSource> dataSources = new ArrayList<>();\n+    private final Map<String, AgroalDataSource> dataSources = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56f5be0c272dc8057a45609b91670b0110d89174"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ0NDE1NQ==", "bodyText": "The name of this class is somehow confusing. If possible, I'd rename it to DataSources or something like that and the javadoc should be clear that it's registered as a bean. In fact, I see no reason to set the scope in the AgroalProcessor. Just annotate this class with @Singleton.", "url": "https://github.com/quarkusio/quarkus/pull/9127#discussion_r421444155", "createdAt": "2020-05-07T11:50:32Z", "author": {"login": "mkouba"}, "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/DataSourceProducer.java", "diffHunk": "@@ -67,7 +67,7 @@\n     private final TransactionSynchronizationRegistry transactionSynchronizationRegistry;\n     private final DataSourceSupport dataSourceSupport;\n \n-    private final List<AgroalDataSource> dataSources = new ArrayList<>();\n+    private final Map<String, AgroalDataSource> dataSources = new HashMap<>();\n \n     public DataSourceProducer(DataSourcesBuildTimeConfig dataSourcesBuildTimeConfig,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56f5be0c272dc8057a45609b91670b0110d89174"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ0NTI2OQ==", "bodyText": "I find this class useless. If needer, I'd add a static util method to DataSources:\nstatic AgroalDataSource getDataSource(String dataSourceName) {\n   return Arc.container().instance(DataSources.class).get().getDataSource(dataSourceName);\n}", "url": "https://github.com/quarkusio/quarkus/pull/9127#discussion_r421445269", "createdAt": "2020-05-07T11:52:46Z", "author": {"login": "mkouba"}, "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/DataSourceRetriever.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package io.quarkus.agroal.runtime;\n+\n+import io.agroal.api.AgroalDataSource;\n+import io.quarkus.arc.Arc;\n+\n+/**\n+ * Meant to be used from recorders that create synthetic beans that need access to {@code Datasource}.\n+ * In such using {@code Arc.container.instance(DataSource.class)} is not possible because\n+ * {@code Datasource} is itself a synthetic bean.\n+ *\n+ * This class class relies on the fact that DataSourceProducer should given the same input\n+ * always return the same {@code AgroalDataSource} no matter how many times it is invoked\n+ * (which makes since because {@code DataSource} is a {@code Singleton} bean).\n+ *\n+ * This is not thread-safe and relies on the fact that the recorders are called in order\n+ * (the order being worked out by the Quarkus build system)\n+ */\n+public final class DataSourceRetriever {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56f5be0c272dc8057a45609b91670b0110d89174"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ0OTA4NA==", "bodyText": "You could make use of io.quarkus.arc.processor.QualifierConfigurator, i.e. something like:\nconfigurator\n   .addQualifier().annotation(DotNames.NAMED).addValue(\"value\", beanName).done()  \n   .addQualifier().annotation(FlywayDataSource.class).addValue(\"value\", dataSourceName).done()\n   .done();\nThat looks much nicer, doesn't it? ;-)", "url": "https://github.com/quarkusio/quarkus/pull/9127#discussion_r421449084", "createdAt": "2020-05-07T11:59:52Z", "author": {"login": "mkouba"}, "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java", "diffHunk": "@@ -86,21 +87,62 @@ void build(BuildProducer<AdditionalBeanBuildItem> additionalBeanProducer,\n \n     @BuildStep\n     @Record(ExecutionTime.RUNTIME_INIT)\n-    ServiceStartBuildItem configureRuntimeProperties(FlywayRecorder recorder,\n-            FlywayRuntimeConfig flywayRuntimeConfig,\n-            BeanContainerBuildItem beanContainer,\n+    ServiceStartBuildItem createBeansAndStartActions(FlywayRecorder recorder,\n             List<JdbcDataSourceBuildItem> jdbcDataSourceBuildItems,\n+            BuildProducer<AdditionalBeanBuildItem> additionalBeans,\n+            BuildProducer<SyntheticBeanBuildItem> syntheticBeanBuildItemBuildProducer,\n             BuildProducer<JdbcDataSourceSchemaReadyBuildItem> schemaReadyBuildItem) {\n-        recorder.doStartActions(flywayRuntimeConfig, beanContainer.getValue());\n+\n+        // make a FlywayContainerProducer bean\n+        additionalBeans.produce(AdditionalBeanBuildItem.builder().addBeanClasses(FlywayContainerProducer.class).setUnremovable()\n+                .setDefaultScope(DotNames.SINGLETON).build());\n+        // add the @FlywayDataSource class otherwise it won't registered as a qualifier\n+        additionalBeans.produce(AdditionalBeanBuildItem.builder().addBeanClass(FlywayDataSource.class).build());\n+\n+        Collection<String> dataSourceNames = getDataSourceNames(jdbcDataSourceBuildItems);\n+\n+        for (String dataSourceName : dataSourceNames) {\n+            SyntheticBeanBuildItem.ExtendedBeanConfigurator configurator = SyntheticBeanBuildItem\n+                    .configure(Flyway.class)\n+                    .scope(Dependent.class) // this is what the existing code does, but it doesn't seem reasonable\n+                    .setRuntimeInit()\n+                    .unremovable()\n+                    .supplier(recorder.flywaySupplier(dataSourceName));\n+\n+            if (DataSourceUtil.isDefault(dataSourceName)) {\n+                configurator.addQualifier(Default.class);\n+            } else {\n+                String beanName = FLYWAY_BEAN_NAME_PREFIX + dataSourceName;\n+                configurator.name(beanName);\n+                configurator\n+                        .qualifiers(\n+                                AnnotationInstance.create(DotNames.NAMED, null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56f5be0c272dc8057a45609b91670b0110d89174"}, "originalPosition": 114}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "56f5be0c272dc8057a45609b91670b0110d89174", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/56f5be0c272dc8057a45609b91670b0110d89174", "committedDate": "2020-05-06T16:48:37Z", "message": "Remove manually generated Flyway beans"}, "afterCommit": {"oid": "ed859dc87868990547d59788e295968efaa2f2ca", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/ed859dc87868990547d59788e295968efaa2f2ca", "committedDate": "2020-05-07T13:01:24Z", "message": "Remove manually generated Flyway beans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NDUzNTQy", "url": "https://github.com/quarkusio/quarkus/pull/9127#pullrequestreview-407453542", "createdAt": "2020-05-07T13:08:56Z", "commit": {"oid": "ed859dc87868990547d59788e295968efaa2f2ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzowODo1NlrOGR9sJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzowODo1NlrOGR9sJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTQ4OTcwMQ==", "bodyText": "Now you could use DataSources.fromName() here, or?", "url": "https://github.com/quarkusio/quarkus/pull/9127#discussion_r421489701", "createdAt": "2020-05-07T13:08:56Z", "author": {"login": "mkouba"}, "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/AgroalRecorder.java", "diffHunk": "@@ -22,8 +21,8 @@ public DataSourceSupport get() {\n \n     public Supplier<AgroalDataSource> agroalDataSourceSupplier(String dataSourceName,\n             @SuppressWarnings(\"unused\") DataSourcesRuntimeConfig dataSourcesRuntimeConfig) {\n-        final AgroalDataSource agroalDataSource = Arc.container().instance(DataSourceProducer.class).get()\n-                .createDataSource(dataSourceName);\n+        final AgroalDataSource agroalDataSource = Arc.container().instance(DataSources.class).get()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed859dc87868990547d59788e295968efaa2f2ca"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed859dc87868990547d59788e295968efaa2f2ca", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/ed859dc87868990547d59788e295968efaa2f2ca", "committedDate": "2020-05-07T13:01:24Z", "message": "Remove manually generated Flyway beans"}, "afterCommit": {"oid": "3f8e3d7394d40b8156119ec44c4d0121ded122f2", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/3f8e3d7394d40b8156119ec44c4d0121ded122f2", "committedDate": "2020-05-07T13:14:39Z", "message": "Remove manually generated Flyway beans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MjA2OTg1", "url": "https://github.com/quarkusio/quarkus/pull/9127#pullrequestreview-409206985", "createdAt": "2020-05-11T14:08:11Z", "commit": {"oid": "3f8e3d7394d40b8156119ec44c4d0121ded122f2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MzE2MzMx", "url": "https://github.com/quarkusio/quarkus/pull/9127#pullrequestreview-409316331", "createdAt": "2020-05-11T16:06:46Z", "commit": {"oid": "3f8e3d7394d40b8156119ec44c4d0121ded122f2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjowNjo0N1rOGTjEGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjowNjo0N1rOGTjEGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE1MDYxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * (which makes since because {@code DataSource} is a {@code Singleton} bean).\n          \n          \n            \n                 * (which makes sense because {@code DataSource} is a {@code Singleton} bean).", "url": "https://github.com/quarkusio/quarkus/pull/9127#discussion_r423150619", "createdAt": "2020-05-11T16:06:47Z", "author": {"login": "gsmet"}, "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/DataSources.java", "diffHunk": "@@ -88,7 +90,32 @@ public DataSourceProducer(DataSourcesBuildTimeConfig dataSourcesBuildTimeConfig,\n         this.dataSourceSupport = dataSourceSupport;\n     }\n \n-    public AgroalDataSource createDataSource(String dataSourceName) {\n+    /**\n+     * Meant to be used from recorders that create synthetic beans that need access to {@code Datasource}.\n+     * In such using {@code Arc.container.instance(DataSource.class)} is not possible because\n+     * {@code Datasource} is itself a synthetic bean.\n+     *\n+     * This method relies on the fact that {@code DataSources} should - given the same input -\n+     * always return the same {@code AgroalDataSource} no matter how many times it is invoked\n+     * (which makes since because {@code DataSource} is a {@code Singleton} bean).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f8e3d7394d40b8156119ec44c4d0121ded122f2"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMDQ5NDY3", "url": "https://github.com/quarkusio/quarkus/pull/9127#pullrequestreview-410049467", "createdAt": "2020-05-12T13:38:07Z", "commit": {"oid": "3f8e3d7394d40b8156119ec44c4d0121ded122f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzozODowN1rOGUHAbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzozODowN1rOGUHAbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzczOTUwMQ==", "bodyText": "I tend to agree we should change that. In a separate PR probably so that we have it in the changelog.", "url": "https://github.com/quarkusio/quarkus/pull/9127#discussion_r423739501", "createdAt": "2020-05-12T13:38:07Z", "author": {"login": "gsmet"}, "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java", "diffHunk": "@@ -86,21 +84,59 @@ void build(BuildProducer<AdditionalBeanBuildItem> additionalBeanProducer,\n \n     @BuildStep\n     @Record(ExecutionTime.RUNTIME_INIT)\n-    ServiceStartBuildItem configureRuntimeProperties(FlywayRecorder recorder,\n-            FlywayRuntimeConfig flywayRuntimeConfig,\n-            BeanContainerBuildItem beanContainer,\n+    ServiceStartBuildItem createBeansAndStartActions(FlywayRecorder recorder,\n             List<JdbcDataSourceBuildItem> jdbcDataSourceBuildItems,\n+            BuildProducer<AdditionalBeanBuildItem> additionalBeans,\n+            BuildProducer<SyntheticBeanBuildItem> syntheticBeanBuildItemBuildProducer,\n             BuildProducer<JdbcDataSourceSchemaReadyBuildItem> schemaReadyBuildItem) {\n-        recorder.doStartActions(flywayRuntimeConfig, beanContainer.getValue());\n+\n+        // make a FlywayContainerProducer bean\n+        additionalBeans.produce(AdditionalBeanBuildItem.builder().addBeanClasses(FlywayContainerProducer.class).setUnremovable()\n+                .setDefaultScope(DotNames.SINGLETON).build());\n+        // add the @FlywayDataSource class otherwise it won't registered as a qualifier\n+        additionalBeans.produce(AdditionalBeanBuildItem.builder().addBeanClass(FlywayDataSource.class).build());\n+\n+        Collection<String> dataSourceNames = getDataSourceNames(jdbcDataSourceBuildItems);\n+\n+        for (String dataSourceName : dataSourceNames) {\n+            SyntheticBeanBuildItem.ExtendedBeanConfigurator configurator = SyntheticBeanBuildItem\n+                    .configure(Flyway.class)\n+                    .scope(Dependent.class) // this is what the existing code does, but it doesn't seem reasonable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f8e3d7394d40b8156119ec44c4d0121ded122f2"}, "originalPosition": 99}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20c6370f0d9c2d85eafe8568cd81d1d9dda8b19c", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/20c6370f0d9c2d85eafe8568cd81d1d9dda8b19c", "committedDate": "2020-05-12T13:41:42Z", "message": "Apply minor cleanup to Datasource handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8eb31a309f80e751da21e41b82961cfde5722f3e", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/8eb31a309f80e751da21e41b82961cfde5722f3e", "committedDate": "2020-05-12T13:41:42Z", "message": "Remove manually generated Flyway beans\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37d5ea54045a7b9df023a3673dd2f1fbc34b2838", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/37d5ea54045a7b9df023a3673dd2f1fbc34b2838", "committedDate": "2020-05-12T13:36:55Z", "message": "Update extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/DataSources.java\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>"}, "afterCommit": {"oid": "8eb31a309f80e751da21e41b82961cfde5722f3e", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/8eb31a309f80e751da21e41b82961cfde5722f3e", "committedDate": "2020-05-12T13:41:42Z", "message": "Remove manually generated Flyway beans\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEyNDc0Njk2", "url": "https://github.com/quarkusio/quarkus/pull/9127#pullrequestreview-412474696", "createdAt": "2020-05-15T09:06:58Z", "commit": {"oid": "8eb31a309f80e751da21e41b82961cfde5722f3e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3537, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}