{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxOTM2Mjgz", "number": 9891, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToxNzozOVrOEEQBrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzo1NzozOFrOEETqSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODkyMzMzOnYy", "diffSide": "RIGHT", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/OidcTenantConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToxNzozOVrOGhwQDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToxNzozOVrOGhwQDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0NjczNA==", "bodyText": "I think this should be a Duration, so our standard time based converters work.", "url": "https://github.com/quarkusio/quarkus/pull/9891#discussion_r438046734", "createdAt": "2020-06-10T11:17:39Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/OidcTenantConfig.java", "diffHunk": "@@ -638,6 +638,12 @@ public static Token fromAudience(String... audience) {\n         @ConfigItem\n         public boolean refreshExpired;\n \n+        /**\n+         * Forced JWK set refresh interval in minutes.\n+         */\n+        @ConfigItem(defaultValue = \"10\")\n+        public long forcedJwkRefreshInterval = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb18f05d0d6e133fa66f916fdef9cd6b4ba95740"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODkzMjc5OnYy", "diffSide": "RIGHT", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToyMDo1OFrOGhwWPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzoyOTo0MlrOGh027g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0ODMxOA==", "bodyText": "Wouldn't it be a lot more efficient to just use a loop? Using a regex to count the number of '.' characters in a string feels like overkill.", "url": "https://github.com/quarkusio/quarkus/pull/9891#discussion_r438048318", "createdAt": "2020-06-10T11:20:58Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java", "diffHunk": "@@ -27,11 +29,25 @@\n      * ignoring those which are located inside a pair of the double quotes.\n      */\n     private static final Pattern CLAIM_PATH_PATTERN = Pattern.compile(\"\\\\/(?=(?:(?:[^\\\"]*\\\"){2})*[^\\\"]*$)\");\n+    private static final Pattern JWT_PARTS_PATTERN = Pattern.compile(\"\\\\.\");\n \n     private OidcUtils() {\n \n     }\n \n+    public static boolean isOpaqueToken(String token) {\n+        return JWT_PARTS_PATTERN.split(token).length != 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb18f05d0d6e133fa66f916fdef9cd6b4ba95740"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEyMjIyMg==", "bodyText": "@stuartwdouglas is it what you had in mind ?", "url": "https://github.com/quarkusio/quarkus/pull/9891#discussion_r438122222", "createdAt": "2020-06-10T13:29:42Z", "author": {"login": "sberyozkin"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java", "diffHunk": "@@ -27,11 +29,25 @@\n      * ignoring those which are located inside a pair of the double quotes.\n      */\n     private static final Pattern CLAIM_PATH_PATTERN = Pattern.compile(\"\\\\/(?=(?:(?:[^\\\"]*\\\"){2})*[^\\\"]*$)\");\n+    private static final Pattern JWT_PARTS_PATTERN = Pattern.compile(\"\\\\.\");\n \n     private OidcUtils() {\n \n     }\n \n+    public static boolean isOpaqueToken(String token) {\n+        return JWT_PARTS_PATTERN.split(token).length != 3;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0ODMxOA=="}, "originalCommit": {"oid": "cb18f05d0d6e133fa66f916fdef9cd6b4ba95740"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTQ1NzY5OnYy", "diffSide": "RIGHT", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzo0NDoxNVrOGh1gOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDo1ODo0NVrOGh5B7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEzMjc5NQ==", "bodyText": "I'm not sure if it is a good idea to log the state value considering it is used in OAuth2 to prevent CSRF.", "url": "https://github.com/quarkusio/quarkus/pull/9891#discussion_r438132795", "createdAt": "2020-06-10T13:44:15Z", "author": {"login": "pedroigor"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -193,7 +193,8 @@ public SecurityIdentity apply(Throwable throwable) {\n                 LOG.debug(\"State parameter can not be empty or multi-valued\");\n                 return Uni.createFrom().failure(new AuthenticationCompletionException());\n             } else if (!stateCookie.getValue().startsWith(values.get(0))) {\n-                LOG.debug(\"State cookie does not match the state parameter\");\n+                LOG.debugf(\"State cookie value '%s' does not match the state query parameter value '%s'\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6d153a6f2ea0ad644e33a715aaeee35a0760a93"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE5MDU3Mg==", "bodyText": "@pedroigor I just added it because the user was getting this error, but I suppose seeing 2 different uuids in the logs won't help the users to figure out why it happened :-). OK, let me revert it", "url": "https://github.com/quarkusio/quarkus/pull/9891#discussion_r438190572", "createdAt": "2020-06-10T14:58:45Z", "author": {"login": "sberyozkin"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -193,7 +193,8 @@ public SecurityIdentity apply(Throwable throwable) {\n                 LOG.debug(\"State parameter can not be empty or multi-valued\");\n                 return Uni.createFrom().failure(new AuthenticationCompletionException());\n             } else if (!stateCookie.getValue().startsWith(values.get(0))) {\n-                LOG.debug(\"State cookie does not match the state parameter\");\n+                LOG.debugf(\"State cookie value '%s' does not match the state query parameter value '%s'\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEzMjc5NQ=="}, "originalCommit": {"oid": "e6d153a6f2ea0ad644e33a715aaeee35a0760a93"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTUxODgzOnYy", "diffSide": "RIGHT", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzo1NzozOFrOGh2HZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDo1NTozOFrOGh44nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE0MjgyMA==", "bodyText": "A minor comment. Right now we only support JWS, but JWE uses 5 tokens.\nBut I guess we would handle JWEs as opaque tokens considering that you would need an introspection call to check claims.", "url": "https://github.com/quarkusio/quarkus/pull/9891#discussion_r438142820", "createdAt": "2020-06-10T13:57:38Z", "author": {"login": "pedroigor"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java", "diffHunk": "@@ -32,6 +35,31 @@ private OidcUtils() {\n \n     }\n \n+    public static boolean isOpaqueToken(String token) {\n+        return new StringTokenizer(token, \".\").countTokens() != 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6d153a6f2ea0ad644e33a715aaeee35a0760a93"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE4ODE4OA==", "bodyText": "@pedroigor Right, at the moment no local JWE decryption is possible, so they are technically opaque for Quarkus", "url": "https://github.com/quarkusio/quarkus/pull/9891#discussion_r438188188", "createdAt": "2020-06-10T14:55:38Z", "author": {"login": "sberyozkin"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java", "diffHunk": "@@ -32,6 +35,31 @@ private OidcUtils() {\n \n     }\n \n+    public static boolean isOpaqueToken(String token) {\n+        return new StringTokenizer(token, \".\").countTokens() != 3;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE0MjgyMA=="}, "originalCommit": {"oid": "e6d153a6f2ea0ad644e33a715aaeee35a0760a93"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2831, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}