{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NDE3NDg1", "number": 9824, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDozMjowOFrOEC-t-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDozMjowOFrOEC-t-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNTYwMTg3OnYy", "diffSide": "RIGHT", "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNDozMjowOFrOGfxArQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNTozOTo0NVrOGfzmgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2MjAyOQ==", "bodyText": "BaseJavaMigration implements JavaMigration, wouldn't classes from the statement above be included here?", "url": "https://github.com/quarkusio/quarkus/pull/9824#discussion_r435962029", "createdAt": "2020-06-05T14:32:08Z", "author": {"login": "gastaldi"}, "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java", "diffHunk": "@@ -87,9 +101,27 @@ void build(BuildProducer<FeatureBuildItem> featureProducer,\n         List<String> applicationMigrations = discoverApplicationMigrations(getMigrationLocations(dataSourceNames));\n         recorder.setApplicationMigrationFiles(applicationMigrations);\n \n+        Set<Class<?>> javaMigrationClasses = new HashSet<>();\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownImplementors(JAVA_MIGRATION), context,\n+                reflectiveClassProducer, javaMigrationClasses);\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownSubclasses(BASE_JAVA_MIGRATION), context,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "baf1dd3575761e991c6742dacdf08cdc6e7a577e"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2MjQ1OA==", "bodyText": "I wonder if we shouldn't just stick to the first statement", "url": "https://github.com/quarkusio/quarkus/pull/9824#discussion_r435962458", "createdAt": "2020-06-05T14:32:49Z", "author": {"login": "gastaldi"}, "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java", "diffHunk": "@@ -87,9 +101,27 @@ void build(BuildProducer<FeatureBuildItem> featureProducer,\n         List<String> applicationMigrations = discoverApplicationMigrations(getMigrationLocations(dataSourceNames));\n         recorder.setApplicationMigrationFiles(applicationMigrations);\n \n+        Set<Class<?>> javaMigrationClasses = new HashSet<>();\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownImplementors(JAVA_MIGRATION), context,\n+                reflectiveClassProducer, javaMigrationClasses);\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownSubclasses(BASE_JAVA_MIGRATION), context,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2MjAyOQ=="}, "originalCommit": {"oid": "baf1dd3575761e991c6742dacdf08cdc6e7a577e"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2MzE5Mw==", "bodyText": "Unfortunately no - I tried it (unless I tried wrongi)", "url": "https://github.com/quarkusio/quarkus/pull/9824#discussion_r435963193", "createdAt": "2020-06-05T14:34:06Z", "author": {"login": "geoand"}, "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java", "diffHunk": "@@ -87,9 +101,27 @@ void build(BuildProducer<FeatureBuildItem> featureProducer,\n         List<String> applicationMigrations = discoverApplicationMigrations(getMigrationLocations(dataSourceNames));\n         recorder.setApplicationMigrationFiles(applicationMigrations);\n \n+        Set<Class<?>> javaMigrationClasses = new HashSet<>();\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownImplementors(JAVA_MIGRATION), context,\n+                reflectiveClassProducer, javaMigrationClasses);\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownSubclasses(BASE_JAVA_MIGRATION), context,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2MjAyOQ=="}, "originalCommit": {"oid": "baf1dd3575761e991c6742dacdf08cdc6e7a577e"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2NDQ4OA==", "bodyText": "Perhaps the Flyway JAR needs to be Jandexed too? (eg. make the extension produce a IndexDependencyBuildItem)", "url": "https://github.com/quarkusio/quarkus/pull/9824#discussion_r435964488", "createdAt": "2020-06-05T14:36:08Z", "author": {"login": "gastaldi"}, "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java", "diffHunk": "@@ -87,9 +101,27 @@ void build(BuildProducer<FeatureBuildItem> featureProducer,\n         List<String> applicationMigrations = discoverApplicationMigrations(getMigrationLocations(dataSourceNames));\n         recorder.setApplicationMigrationFiles(applicationMigrations);\n \n+        Set<Class<?>> javaMigrationClasses = new HashSet<>();\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownImplementors(JAVA_MIGRATION), context,\n+                reflectiveClassProducer, javaMigrationClasses);\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownSubclasses(BASE_JAVA_MIGRATION), context,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2MjAyOQ=="}, "originalCommit": {"oid": "baf1dd3575761e991c6742dacdf08cdc6e7a577e"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk3NjU0Nw==", "bodyText": "I don't think so, but if you want to try and if it works push an extra commit to my PR, that's fine with me", "url": "https://github.com/quarkusio/quarkus/pull/9824#discussion_r435976547", "createdAt": "2020-06-05T14:54:57Z", "author": {"login": "geoand"}, "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java", "diffHunk": "@@ -87,9 +101,27 @@ void build(BuildProducer<FeatureBuildItem> featureProducer,\n         List<String> applicationMigrations = discoverApplicationMigrations(getMigrationLocations(dataSourceNames));\n         recorder.setApplicationMigrationFiles(applicationMigrations);\n \n+        Set<Class<?>> javaMigrationClasses = new HashSet<>();\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownImplementors(JAVA_MIGRATION), context,\n+                reflectiveClassProducer, javaMigrationClasses);\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownSubclasses(BASE_JAVA_MIGRATION), context,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2MjAyOQ=="}, "originalCommit": {"oid": "baf1dd3575761e991c6742dacdf08cdc6e7a577e"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk5NjI5MA==", "bodyText": "Done \ud83d\ude09 See if that makes sense", "url": "https://github.com/quarkusio/quarkus/pull/9824#discussion_r435996290", "createdAt": "2020-06-05T15:27:03Z", "author": {"login": "gastaldi"}, "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java", "diffHunk": "@@ -87,9 +101,27 @@ void build(BuildProducer<FeatureBuildItem> featureProducer,\n         List<String> applicationMigrations = discoverApplicationMigrations(getMigrationLocations(dataSourceNames));\n         recorder.setApplicationMigrationFiles(applicationMigrations);\n \n+        Set<Class<?>> javaMigrationClasses = new HashSet<>();\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownImplementors(JAVA_MIGRATION), context,\n+                reflectiveClassProducer, javaMigrationClasses);\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownSubclasses(BASE_JAVA_MIGRATION), context,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2MjAyOQ=="}, "originalCommit": {"oid": "baf1dd3575761e991c6742dacdf08cdc6e7a577e"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjAwNDQ4Mg==", "bodyText": "If the tests pass, I'm fine with it, thanks!", "url": "https://github.com/quarkusio/quarkus/pull/9824#discussion_r436004482", "createdAt": "2020-06-05T15:39:45Z", "author": {"login": "geoand"}, "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/FlywayProcessor.java", "diffHunk": "@@ -87,9 +101,27 @@ void build(BuildProducer<FeatureBuildItem> featureProducer,\n         List<String> applicationMigrations = discoverApplicationMigrations(getMigrationLocations(dataSourceNames));\n         recorder.setApplicationMigrationFiles(applicationMigrations);\n \n+        Set<Class<?>> javaMigrationClasses = new HashSet<>();\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownImplementors(JAVA_MIGRATION), context,\n+                reflectiveClassProducer, javaMigrationClasses);\n+        addJavaMigrations(combinedIndexBuildItem.getIndex().getAllKnownSubclasses(BASE_JAVA_MIGRATION), context,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk2MjAyOQ=="}, "originalCommit": {"oid": "baf1dd3575761e991c6742dacdf08cdc6e7a577e"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2959, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}