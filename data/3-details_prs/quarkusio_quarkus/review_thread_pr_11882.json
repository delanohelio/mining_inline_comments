{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NTM1Nzc4", "number": 11882, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDoxNTo1OFrOEgU8gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo0MDowMlrOEg4mhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMzMzMDU5OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDoxNTo1OFrOHNIE0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxMDoxOTowNFrOHNIKrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUyNTg0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"'quarkus.openshift.sidecars', 'quarkus.openshift.containers' cannot be used together. Please use the latter as the former has been deprecated\");\n          \n          \n            \n                                \"'quarkus.openshift.sidecars' and 'quarkus.openshift.containers' cannot be used together. Please use the former as the latter has been deprecated\");\n          \n      \n    \n    \n  \n\n?", "url": "https://github.com/quarkusio/quarkus/pull/11882#discussion_r483525842", "createdAt": "2020-09-04T10:15:58Z", "author": {"login": "gsmet"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftConfig.java", "diffHunk": "@@ -325,7 +334,16 @@ public ProbeConfig getReadinessProbe() {\n     }\n \n     public Map<String, ContainerConfig> getSidecars() {\n-        return containers;\n+        if (!containers.isEmpty() && !sidecars.isEmpty()) {\n+            // done in order to make migration to the new property straight-forward\n+            throw new IllegalStateException(\n+                    \"'quarkus.openshift.sidecars', 'quarkus.openshift.containers' cannot be used together. Please use the latter as the former has been deprecated\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e77df347d86264b0dddf8dac2fcd62a8d3d2aa6"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUyNzM0Mw==", "bodyText": "Good catch!", "url": "https://github.com/quarkusio/quarkus/pull/11882#discussion_r483527343", "createdAt": "2020-09-04T10:19:04Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftConfig.java", "diffHunk": "@@ -325,7 +334,16 @@ public ProbeConfig getReadinessProbe() {\n     }\n \n     public Map<String, ContainerConfig> getSidecars() {\n-        return containers;\n+        if (!containers.isEmpty() && !sidecars.isEmpty()) {\n+            // done in order to make migration to the new property straight-forward\n+            throw new IllegalStateException(\n+                    \"'quarkus.openshift.sidecars', 'quarkus.openshift.containers' cannot be used together. Please use the latter as the former has been deprecated\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzUyNTg0Mg=="}, "originalCommit": {"oid": "4e77df347d86264b0dddf8dac2fcd62a8d3d2aa6"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTE3MjU0OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo0MDowMlrOHN6UOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxMDo0OTowNlrOHN6nlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0ODk4Ng==", "bodyText": "Why do we have a different container name per deployment target?", "url": "https://github.com/quarkusio/quarkus/pull/11882#discussion_r484348986", "createdAt": "2020-09-07T10:40:02Z", "author": {"login": "iocanel"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -723,13 +724,13 @@ private void applyBuildItems(Session session,\n         });\n \n         kubernetesEnvs.forEach(e -> {\n-            session.resources().decorate(e.getTarget(), new AddEnvVarDecorator(new EnvBuilder()\n-                    .withName(EnvConverter.convertName(e.getName()))\n-                    .withValue(e.getValue())\n-                    .withSecret(e.getSecret())\n-                    .withConfigmap(e.getConfigMap())\n-                    .withField(e.getField())\n-                    .build()));\n+            String containerName = kubernetesName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "115b92c0943672c2329c4b82ca7da921cbbbbc6b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1MDgxMQ==", "bodyText": "We don't really, but what would we use instead to determine the container name?", "url": "https://github.com/quarkusio/quarkus/pull/11882#discussion_r484350811", "createdAt": "2020-09-07T10:43:48Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -723,13 +724,13 @@ private void applyBuildItems(Session session,\n         });\n \n         kubernetesEnvs.forEach(e -> {\n-            session.resources().decorate(e.getTarget(), new AddEnvVarDecorator(new EnvBuilder()\n-                    .withName(EnvConverter.convertName(e.getName()))\n-                    .withValue(e.getValue())\n-                    .withSecret(e.getSecret())\n-                    .withConfigmap(e.getConfigMap())\n-                    .withField(e.getField())\n-                    .build()));\n+            String containerName = kubernetesName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0ODk4Ng=="}, "originalCommit": {"oid": "115b92c0943672c2329c4b82ca7da921cbbbbc6b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM1Mzk0MQ==", "bodyText": "I see, we are just covering the edge case where the user decided to use different names. I am covered then!", "url": "https://github.com/quarkusio/quarkus/pull/11882#discussion_r484353941", "createdAt": "2020-09-07T10:49:06Z", "author": {"login": "iocanel"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -723,13 +724,13 @@ private void applyBuildItems(Session session,\n         });\n \n         kubernetesEnvs.forEach(e -> {\n-            session.resources().decorate(e.getTarget(), new AddEnvVarDecorator(new EnvBuilder()\n-                    .withName(EnvConverter.convertName(e.getName()))\n-                    .withValue(e.getValue())\n-                    .withSecret(e.getSecret())\n-                    .withConfigmap(e.getConfigMap())\n-                    .withField(e.getField())\n-                    .build()));\n+            String containerName = kubernetesName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDM0ODk4Ng=="}, "originalCommit": {"oid": "115b92c0943672c2329c4b82ca7da921cbbbbc6b"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 333, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}