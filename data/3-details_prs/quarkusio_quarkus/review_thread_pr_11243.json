{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNzEzMDEz", "number": 11243, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTo1NDo0NlrOEVy9uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDowMjozMlrOEXpE-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjkwNTU1OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/codestart.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTo1NDo0NlrOG8wSXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTo1NDo0NlrOG8wSXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM1ODg3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  java.version: 1.8", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466358876", "createdAt": "2020-08-06T11:54:46Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/codestart.yml", "diffHunk": "@@ -0,0 +1,25 @@\n+---\n+name: azure-functions-http-example\n+ref: azure-functions-http\n+type: example\n+language:\n+  base:\n+    shared-data:\n+      uberjar: true\n+      java:\n+        version: 1.8\n+      java.version: 1.8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1feec1c441be5acf45e69c2499c642788fe1dcbf"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjkwNjUxOnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/codestart.yml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTo1NTowMVrOG8wS5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzoxMzozMFrOG8y6GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM1OTAxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  java.version: 1.8", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466359015", "createdAt": "2020-08-06T11:55:01Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/codestart.yml", "diffHunk": "@@ -0,0 +1,25 @@\n+---\n+name: azure-functions-http-example\n+ref: azure-functions-http\n+type: example\n+language:\n+  base:\n+    shared-data:\n+      uberjar: true\n+      java:\n+        version: 1.8\n+      java.version: 1.8\n+    data:\n+      appRegion:\n+        westus\n+      resourceGroup:\n+        java-functions-group\n+      function:\n+        greeting\n+      java:\n+        version: 1.8\n+      java.version: 1.8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1feec1c441be5acf45e69c2499c642788fe1dcbf"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NzI5Mg==", "bodyText": "OH crap, gotta remove those.  FYI, I could not override java.version from codestart.yml.  I had to use a pom fragment to override JDK version.", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466377292", "createdAt": "2020-08-06T12:31:06Z", "author": {"login": "patriot1burke"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/codestart.yml", "diffHunk": "@@ -0,0 +1,25 @@\n+---\n+name: azure-functions-http-example\n+ref: azure-functions-http\n+type: example\n+language:\n+  base:\n+    shared-data:\n+      uberjar: true\n+      java:\n+        version: 1.8\n+      java.version: 1.8\n+    data:\n+      appRegion:\n+        westus\n+      resourceGroup:\n+        java-functions-group\n+      function:\n+        greeting\n+      java:\n+        version: 1.8\n+      java.version: 1.8", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM1OTAxNQ=="}, "originalCommit": {"oid": "1feec1c441be5acf45e69c2499c642788fe1dcbf"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM4NjIyOA==", "bodyText": "yeah, input from the code always overrides those data, and java version is set to 11 by default in the code. I think using the pom fragment is ok as this is a really special case..", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466386228", "createdAt": "2020-08-06T12:47:33Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/codestart.yml", "diffHunk": "@@ -0,0 +1,25 @@\n+---\n+name: azure-functions-http-example\n+ref: azure-functions-http\n+type: example\n+language:\n+  base:\n+    shared-data:\n+      uberjar: true\n+      java:\n+        version: 1.8\n+      java.version: 1.8\n+    data:\n+      appRegion:\n+        westus\n+      resourceGroup:\n+        java-functions-group\n+      function:\n+        greeting\n+      java:\n+        version: 1.8\n+      java.version: 1.8", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM1OTAxNQ=="}, "originalCommit": {"oid": "1feec1c441be5acf45e69c2499c642788fe1dcbf"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwMTgxNw==", "bodyText": "Its a special case that will disappear once Azure functions fully supports java 11.", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466401817", "createdAt": "2020-08-06T13:13:30Z", "author": {"login": "patriot1burke"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/codestart.yml", "diffHunk": "@@ -0,0 +1,25 @@\n+---\n+name: azure-functions-http-example\n+ref: azure-functions-http\n+type: example\n+language:\n+  base:\n+    shared-data:\n+      uberjar: true\n+      java:\n+        version: 1.8\n+      java.version: 1.8\n+    data:\n+      appRegion:\n+        westus\n+      resourceGroup:\n+        java-functions-group\n+      function:\n+        greeting\n+      java:\n+        version: 1.8\n+      java.version: 1.8", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM1OTAxNQ=="}, "originalCommit": {"oid": "1feec1c441be5acf45e69c2499c642788fe1dcbf"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjkyMDA5OnYy", "diffSide": "RIGHT", "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMTo1OTo0NlrOG8wbcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzoxNDowNlrOG8y7ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM2MTIwMw==", "bodyText": "The convention is kebab-case for the naming, I would also prefer to have those in a specific parent, wdyt of gen-info?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    data.put(\"codestartTimestamp\", System.currentTimeMillis());\n          \n          \n            \n                    data.put(\"gen-info\", Collections.singletonMap(\"time\", System.currentTimeMillis()));", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466361203", "createdAt": "2020-08-06T11:59:46Z", "author": {"login": "ia3andy"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java", "diffHunk": "@@ -54,6 +55,11 @@ void process(final Codestart codestart) throws IOException {\n         });\n     }\n \n+    void addBuiltinData() {\n+        // needed for azure functions codestart\n+        data.put(\"codestartTimestamp\", System.currentTimeMillis());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1feec1c441be5acf45e69c2499c642788fe1dcbf"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM3NjYwNw==", "bodyText": "timestamp instead of time?", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466376607", "createdAt": "2020-08-06T12:29:53Z", "author": {"login": "patriot1burke"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java", "diffHunk": "@@ -54,6 +55,11 @@ void process(final Codestart codestart) throws IOException {\n         });\n     }\n \n+    void addBuiltinData() {\n+        // needed for azure functions codestart\n+        data.put(\"codestartTimestamp\", System.currentTimeMillis());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM2MTIwMw=="}, "originalCommit": {"oid": "1feec1c441be5acf45e69c2499c642788fe1dcbf"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM4NDYzNQ==", "bodyText": "well, timestamp is often called time, but as you prefer \ud83d\udc4d", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466384635", "createdAt": "2020-08-06T12:44:36Z", "author": {"login": "ia3andy"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java", "diffHunk": "@@ -54,6 +55,11 @@ void process(final Codestart codestart) throws IOException {\n         });\n     }\n \n+    void addBuiltinData() {\n+        // needed for azure functions codestart\n+        data.put(\"codestartTimestamp\", System.currentTimeMillis());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM2MTIwMw=="}, "originalCommit": {"oid": "1feec1c441be5acf45e69c2499c642788fe1dcbf"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwMjE4Ng==", "bodyText": "yeah, i guess you're right.", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466402186", "createdAt": "2020-08-06T13:14:06Z", "author": {"login": "patriot1burke"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProcessor.java", "diffHunk": "@@ -54,6 +55,11 @@ void process(final Codestart codestart) throws IOException {\n         });\n     }\n \n+    void addBuiltinData() {\n+        // needed for azure functions codestart\n+        data.put(\"codestartTimestamp\", System.currentTimeMillis());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjM2MTIwMw=="}, "originalCommit": {"oid": "1feec1c441be5acf45e69c2499c642788fe1dcbf"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzE4MDUwOnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/codestart.yml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzoxNDoxOVrOG8y8Dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxMzoyNDowNVrOG8zU4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwMjMxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            language:\n          \n          \n            \n            missing-languages:\n          \n          \n            \n              - kotlin\n          \n          \n            \n              - scala\n          \n          \n            \n            language:", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466402319", "createdAt": "2020-08-06T13:14:19Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/codestart.yml", "diffHunk": "@@ -0,0 +1,8 @@\n+---\n+name: amazon-lambda-example\n+ref: amazon-lambda\n+type: example\n+language:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1feec1c441be5acf45e69c2499c642788fe1dcbf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwMzczNA==", "bodyText": "I am not sure about the different codestarts you added, but it is really important that you add this section missing-languages when some languages are missing. It will make sure that this example is skipped when those languages are selected.\nI also need to add a missing-builtool, but I'll fix that in another PR", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466403734", "createdAt": "2020-08-06T13:16:20Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/codestart.yml", "diffHunk": "@@ -0,0 +1,8 @@\n+---\n+name: amazon-lambda-example\n+ref: amazon-lambda\n+type: example\n+language:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwMjMxOQ=="}, "originalCommit": {"oid": "1feec1c441be5acf45e69c2499c642788fe1dcbf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwNjQwMQ==", "bodyText": "Those languages may work, but I never used either thus there is no example.  That's for another PR I guess.", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466406401", "createdAt": "2020-08-06T13:20:41Z", "author": {"login": "patriot1burke"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/codestart.yml", "diffHunk": "@@ -0,0 +1,8 @@\n+---\n+name: amazon-lambda-example\n+ref: amazon-lambda\n+type: example\n+language:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwMjMxOQ=="}, "originalCommit": {"oid": "1feec1c441be5acf45e69c2499c642788fe1dcbf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwODY3Mg==", "bodyText": "ok, this flag is not clear enough, I will rename it in another PR.\nFor now, when there is no example for a language, then you should add it to the missing-languages list. This is to avoid having the base part applied without any code, you get what I mean?", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r466408672", "createdAt": "2020-08-06T13:24:05Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/codestart.yml", "diffHunk": "@@ -0,0 +1,8 @@\n+---\n+name: amazon-lambda-example\n+ref: amazon-lambda\n+type: example\n+language:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQwMjMxOQ=="}, "originalCommit": {"oid": "1feec1c441be5acf45e69c2499c642788fe1dcbf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzM4MjM1OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/bundled-codestarts/project/quarkus/codestart.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzozNTo1NFrOG-O0lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDoxMzowOFrOG-QVLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwNzczMw==", "bodyText": "I don't think you need to explicitly set those since they are default no?", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467907733", "createdAt": "2020-08-10T13:35:54Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/bundled-codestarts/project/quarkus/codestart.yml", "diffHunk": "@@ -15,6 +15,9 @@ output-strategy:\n language:\n   base:\n     shared-data:\n+      supports:\n+        dev-mode: true\n+        native: true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyNjI1NQ==", "bodyText": "I just think its generally a good idea to explicitly declare default values in base config.  Implicit defaults means the user has to know to read the docs to know the flags exist and we all know users rarely read the docs.  So, this is more a self-documenting declaration that these flags exist and to not recreate your own flags that mean the same thing.", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467926255", "createdAt": "2020-08-10T14:03:46Z", "author": {"login": "patriot1burke"}, "path": "devtools/platform-descriptor-json/src/main/resources/bundled-codestarts/project/quarkus/codestart.yml", "diffHunk": "@@ -15,6 +15,9 @@ output-strategy:\n language:\n   base:\n     shared-data:\n+      supports:\n+        dev-mode: true\n+        native: true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwNzczMw=="}, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzMjQ2MQ==", "bodyText": "ok :)", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467932461", "createdAt": "2020-08-10T14:13:08Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/bundled-codestarts/project/quarkus/codestart.yml", "diffHunk": "@@ -15,6 +15,9 @@ output-strategy:\n language:\n   base:\n     shared-data:\n+      supports:\n+        dev-mode: true\n+        native: true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwNzczMw=="}, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzM4NzU3OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/codestart.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzozNzowNlrOG-O3nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzozNzowNlrOG-O3nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwODUxMQ==", "bodyText": "FYI, they are now auto-detected, missing-languages is now (and already) obsolete. Sorry about this..", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467908511", "createdAt": "2020-08-10T13:37:06Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/codestart.yml", "diffHunk": "@@ -0,0 +1,14 @@\n+---\n+name: amazon-lambda-example\n+ref: amazon-lambda\n+type: example\n+missing-languages:\n+  - kotlin\n+  - scala", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzM5NDEwOnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/main/java/org/acme/lambda/StreamLambda.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzozODo0MVrOG-O7ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzozODo0MVrOG-O7ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwOTQ5OQ==", "bodyText": "I think we need to have a namespace for @Named (to avoid conflict)", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467909499", "createdAt": "2020-08-10T13:38:41Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/main/java/org/acme/lambda/StreamLambda.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.acme.lambda;\n+\n+import javax.inject.Named;\n+\n+import com.amazonaws.services.lambda.runtime.Context;\n+import com.amazonaws.services.lambda.runtime.RequestStreamHandler;\n+\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.io.IOException;\n+\n+@Named(\"stream\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzM5NjEwOnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/main/java/org/acme/lambda/TestLambda.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzozOTowOVrOG-O8tA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzozOTowOVrOG-O8tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkwOTgxMg==", "bodyText": "Same here, this need to be namespaced.", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467909812", "createdAt": "2020-08-10T13:39:09Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/main/java/org/acme/lambda/TestLambda.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package org.acme.lambda;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import com.amazonaws.services.lambda.runtime.Context;\n+import com.amazonaws.services.lambda.runtime.RequestHandler;\n+\n+@Named(\"test\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzQxMTk1OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/test/resources/application.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0MjozN1rOG-PGIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0MjozN1rOG-PGIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxMjIyNA==", "bodyText": "You need to convert this file to yml, it is going to be auto-converted at generation to either yml or properties weither yaml-config extension has been selected or not..", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467912224", "createdAt": "2020-08-10T13:42:37Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/test/resources/application.properties", "diffHunk": "@@ -0,0 +1,5 @@\n+quarkus.lambda.handler=test\n+\n+quarkus.lambda.enable-polling-jvm-mode=true\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzQxODY0OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/codestart.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0NDoxMlrOG-PKEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0NDoxMlrOG-PKEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxMzIzNQ==", "bodyText": "kebabcase", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467913235", "createdAt": "2020-08-10T13:44:12Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/codestart.yml", "diffHunk": "@@ -0,0 +1,17 @@\n+---\n+name: azure-functions-http-example\n+ref: azure-functions-http\n+type: example\n+language:\n+  base:\n+    shared-data:\n+      uberjar: true\n+      supports:\n+        native: false\n+    data:\n+      appRegion:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzQxOTQzOnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/codestart.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0NDoyNFrOG-PKlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0NDoyNFrOG-PKlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxMzM2Ng==", "bodyText": "kebabcase", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467913366", "createdAt": "2020-08-10T13:44:24Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/codestart.yml", "diffHunk": "@@ -0,0 +1,17 @@\n+---\n+name: azure-functions-http-example\n+ref: azure-functions-http\n+type: example\n+language:\n+  base:\n+    shared-data:\n+      uberjar: true\n+      supports:\n+        native: false\n+    data:\n+      appRegion:\n+        westus\n+      resourceGroup:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzQyOTk1OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0Njo1OFrOG-PRHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0Njo1OFrOG-PRHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNTAzOQ==", "bodyText": "I am not sure of how this work for funqy but don't we need to namespace those path too?", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467915039", "createdAt": "2020-08-10T13:46:58Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package org.acme.funqy;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import org.junit.jupiter.api.Test;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.equalTo;\n+\n+@QuarkusTest\n+public class FunqyTest {\n+\n+    @Test\n+    public void testHello() {\n+        given()\n+                .given().get(\"/hello\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzQ0MjI2OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/base/src/main/resources/application.yml", "isResolved": true, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMzo0OTo1MVrOG-PYdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNTo1OTowOVrOG-VKfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNjkxNg==", "bodyText": "this will make all other examples fails right?\n@maxandersen how should we deal with this?", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467916916", "createdAt": "2020-08-10T13:49:51Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/base/src/main/resources/application.yml", "diffHunk": "@@ -0,0 +1 @@\n+quarkus.http.root-path: \"/api\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxOTM1Ng==", "bodyText": "hmm - what is that needed for @patriot1burke ? looks more like a final polish users can decide to do ?", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467919356", "createdAt": "2020-08-10T13:53:29Z", "author": {"login": "maxandersen"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/base/src/main/resources/application.yml", "diffHunk": "@@ -0,0 +1 @@\n+quarkus.http.root-path: \"/api\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNjkxNg=="}, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyNDMyNA==", "bodyText": "If Rest Assured is used, it automatically prepends quarkus.http.root-path.  So the test code doesn't need to change.", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467924324", "createdAt": "2020-08-10T14:00:52Z", "author": {"login": "patriot1burke"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/base/src/main/resources/application.yml", "diffHunk": "@@ -0,0 +1 @@\n+quarkus.http.root-path: \"/api\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNjkxNg=="}, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkyNTA3OA==", "bodyText": "A \"/api\" base is required for azure functions though :(", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467925078", "createdAt": "2020-08-10T14:02:00Z", "author": {"login": "patriot1burke"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/base/src/main/resources/application.yml", "diffHunk": "@@ -0,0 +1 @@\n+quarkus.http.root-path: \"/api\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNjkxNg=="}, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkzNDQ1Nw==", "bodyText": "@patriot1burke could you make /api/.. part of the specific path (not defined globally)?", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467934457", "createdAt": "2020-08-10T14:16:07Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/base/src/main/resources/application.yml", "diffHunk": "@@ -0,0 +1 @@\n+quarkus.http.root-path: \"/api\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNjkxNg=="}, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk0MTUwMw==", "bodyText": "@ia3andy I dont want to do it that way.  The azure functions codestart does not generate any java code.  The resteasy, vertx web, funqy, or servlet codestart will generate the java code.  Plus, putting \"/api\" explicitly in the java code is not how I want the codestart to work.  \"/api\" is the default root path for azure functions.  I don't want users to have to change their code if the root context changes.", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r467941503", "createdAt": "2020-08-10T14:26:14Z", "author": {"login": "patriot1burke"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/base/src/main/resources/application.yml", "diffHunk": "@@ -0,0 +1 @@\n+quarkus.http.root-path: \"/api\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNjkxNg=="}, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAwMjk1NA==", "bodyText": "hmmm - @patriot1burke I am sorry to say that, but, we aren't ready to have dependent codestarts like this and I am not sure we will be. Example Codestarts are supposed to be 99% independent and standalone to avoid exponential complexity problems. Your example needs to either demo RESTEasy or Vertx-Web but as a standalone example. We don't have it yet but we could at some point add a way to activate some examples on combination of extensions.", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r468002954", "createdAt": "2020-08-10T15:45:36Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/base/src/main/resources/application.yml", "diffHunk": "@@ -0,0 +1 @@\n+quarkus.http.root-path: \"/api\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNjkxNg=="}, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAwNTExNA==", "bodyText": "Imagine if just the path of the RESTEasy codestarts change, it would break those tests (which by the way is the case since it's namespaced to /resteasy/hello).\nI know this is going to require sacrifices, but having stable/working generated example code is key here IMHO.", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r468005114", "createdAt": "2020-08-10T15:49:01Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/base/src/main/resources/application.yml", "diffHunk": "@@ -0,0 +1 @@\n+quarkus.http.root-path: \"/api\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNjkxNg=="}, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxMDU1OQ==", "bodyText": "@ia3andy Your example is wrong.\nIf you generate a resteasy-only codestart and a \"resteasy+azure-functions-http\" codestart, the java code is exactly the same and it works for both.  Again, Rest Assured testing framework automatically prepends the root-path so that you don't have to code it.  So long as the generated test code uses Rest Assured, everything will work fine.", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r468010559", "createdAt": "2020-08-10T15:57:20Z", "author": {"login": "patriot1burke"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/base/src/main/resources/application.yml", "diffHunk": "@@ -0,0 +1 @@\n+quarkus.http.root-path: \"/api\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNjkxNg=="}, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODAxMTY0NA==", "bodyText": "@patriot1burke your test is referencing /hello this is the Path I am talking about (not the root path)", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r468011644", "createdAt": "2020-08-10T15:59:09Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/azure-functions-http-example/base/src/main/resources/application.yml", "diffHunk": "@@ -0,0 +1 @@\n+quarkus.http.root-path: \"/api\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzkxNjkxNg=="}, "originalCommit": {"oid": "ff41908803efb252166301fe583612b07c17c3b1"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNjUyMTEzOnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNzo0OTo1MFrOG-sVew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNzo0OTo1MFrOG-sVew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM5MTI5MQ==", "bodyText": "you have two given()", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r468391291", "createdAt": "2020-08-11T07:49:50Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-http-example/java/src/test/java/org/acme/funqy/FunqyTest.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.acme.funqy;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import org.junit.jupiter.api.Test;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.equalTo;\n+\n+@QuarkusTest\n+public class FunqyTest {\n+\n+    @Test\n+    public void testGreeting() {\n+        given()\n+                .given()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "380854c75b92c5e7b64c2110389b57e490485943"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjI1NDExOnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/native-test/java/org/acme/lambda/test/NativeHelloResourceIT.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDowMTo1MFrOG_ivQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDowMTo1MFrOG_ivQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI4MjYyNw==", "bodyText": "This seems wrongly copied?", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r469282627", "createdAt": "2020-08-12T14:01:50Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/amazon-lambda-example/java/src/native-test/java/org/acme/lambda/test/NativeHelloResourceIT.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package org.acme.qute;\n+\n+import io.quarkus.test.junit.NativeImageTest;\n+\n+@NativeImageTest\n+public class NativeHelloResourceIT extends HelloResourceTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618353ca18eeab186a91a9d2073be05e834a6c44"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjI1NzIxOnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-knative-events-example/java/src/main/java/org/acme/funqy/CloudEventGreeting.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDowMjozMlrOG_ixVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDowMjozMlrOG_ixVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTI4MzE1Ng==", "bodyText": "unused..\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import io.quarkus.funqy.Context;", "url": "https://github.com/quarkusio/quarkus/pull/11243#discussion_r469283156", "createdAt": "2020-08-12T14:02:32Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/funqy-knative-events-example/java/src/main/java/org/acme/funqy/CloudEventGreeting.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package org.acme.funqy;\n+\n+import io.quarkus.funqy.Context;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618353ca18eeab186a91a9d2073be05e834a6c44"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 696, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}