{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMjY0ODI3", "number": 10847, "title": "Added support for mocking void methods in PanacheMock", "bodyText": "", "createdAt": "2020-07-20T09:47:17Z", "url": "https://github.com/quarkusio/quarkus/pull/10847", "merged": true, "mergeCommit": {"oid": "3d443e3a127cdd8bf8bbc3d12ff06bdb32d31d84"}, "closed": true, "closedAt": "2020-07-21T08:16:26Z", "author": {"login": "FroMage"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2xGHKgFqTQ1MTU3NDExNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc21jSJAFqTQ1MTgzNzAyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTc0MTE2", "url": "https://github.com/quarkusio/quarkus/pull/10847#pullrequestreview-451574116", "createdAt": "2020-07-20T12:50:00Z", "commit": {"oid": "ad204a7980e3b59baaf8f06190e09b592a69e901"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMjo1MDowMFrOG0Knmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMjo1MDowMFrOG0Knmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM1MzExNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static PanacheStubber doAnser(Answer answer) {\n          \n          \n            \n                public static PanacheStubber doAnswer(Answer answer) {", "url": "https://github.com/quarkusio/quarkus/pull/10847#discussion_r457353114", "createdAt": "2020-07-20T12:50:00Z", "author": {"login": "geoand"}, "path": "extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheMock.java", "diffHunk": "@@ -107,4 +108,35 @@ public Object invoke() throws Throwable {\n \n     }\n \n+    public static PanacheStubber doAnser(Answer answer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad204a7980e3b59baaf8f06190e09b592a69e901"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47b71e0809fd0292655e1fcfeb600557a4aba1de", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/47b71e0809fd0292655e1fcfeb600557a4aba1de", "committedDate": "2020-07-20T13:05:51Z", "message": "Added support for mocking void methods in PanacheMock"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1777c69cb62d43688c492b30520b54824d713e3a", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/1777c69cb62d43688c492b30520b54824d713e3a", "committedDate": "2020-07-20T13:05:20Z", "message": "Update extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheMock.java\r\n\r\nHow did that get through.\n\nCo-authored-by: Georgios Andrianakis <geoand@gmail.com>"}, "afterCommit": {"oid": "47b71e0809fd0292655e1fcfeb600557a4aba1de", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/47b71e0809fd0292655e1fcfeb600557a4aba1de", "committedDate": "2020-07-20T13:05:51Z", "message": "Added support for mocking void methods in PanacheMock"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNTg2MzQ3", "url": "https://github.com/quarkusio/quarkus/pull/10847#pullrequestreview-451586347", "createdAt": "2020-07-20T13:06:18Z", "commit": {"oid": "47b71e0809fd0292655e1fcfeb600557a4aba1de"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxODM3MDI2", "url": "https://github.com/quarkusio/quarkus/pull/10847#pullrequestreview-451837026", "createdAt": "2020-07-20T18:01:29Z", "commit": {"oid": "47b71e0809fd0292655e1fcfeb600557a4aba1de"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODowMTozMFrOG0ZUoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODowMTozMFrOG0ZUoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5NDAxNg==", "bodyText": "You can also use the AssertJ API for improved readability:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    try {\n          \n          \n            \n                        Person.voidMethod();\n          \n          \n            \n                        Assertions.fail();\n          \n          \n            \n                    } catch (RuntimeException x) {\n          \n          \n            \n                        Assertions.assertEquals(\"Stef\", x.getMessage());\n          \n          \n            \n                    }\n          \n          \n            \n                    assertThatExceptionOfType(RuntimeException.class)\n          \n          \n            \n                            .isThrownBy(Person::voidMethod)\n          \n          \n            \n                            .withMessage(\"Stef\");", "url": "https://github.com/quarkusio/quarkus/pull/10847#discussion_r457594016", "createdAt": "2020-07-20T18:01:30Z", "author": {"login": "gastaldi"}, "path": "integration-tests/hibernate-orm-panache/src/test/java/io/quarkus/it/panache/PanacheMockingTest.java", "diffHunk": "@@ -25,6 +25,40 @@\n     public void testPanacheMocking() {\n         PanacheMock.mock(Person.class);\n \n+        // does not throw (defaults to doNothing)\n+        Person.voidMethod();\n+\n+        // make it throw our exception\n+        Mockito.doThrow(new RuntimeException(\"Stef\")).when(PanacheMock.getMock(Person.class)).voidMethod();\n+        try {\n+            Person.voidMethod();\n+            Assertions.fail();\n+        } catch (RuntimeException x) {\n+            Assertions.assertEquals(\"Stef\", x.getMessage());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47b71e0809fd0292655e1fcfeb600557a4aba1de"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1079, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}