{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNDI0NjMz", "number": 9023, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMjozMzoxOFrOD4pzWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMjozMzoxOFrOD4pzWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzMxNzM3OnYy", "diffSide": "RIGHT", "path": "extensions/amazon-lambda/deployment/src/main/java/io/quarkus/amazon/lambda/deployment/AmazonLambdaProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMjozMzoxOFrOGPi5AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNToyOTo0NVrOGPkAQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1MzQ3Mw==", "bodyText": "Hello @oztimpower, instead of loading the class in the processor, this can use the Jandex ClassInfo itself to figure out if the class is abstract. Something like:\nfinal boolean isAbstract = (info.flags() & java.lang.reflect.Modifier.ABSTRACT) != 0;", "url": "https://github.com/quarkusio/quarkus/pull/9023#discussion_r418953473", "createdAt": "2020-05-02T12:33:18Z", "author": {"login": "jaikiran"}, "path": "extensions/amazon-lambda/deployment/src/main/java/io/quarkus/amazon/lambda/deployment/AmazonLambdaProcessor.java", "diffHunk": "@@ -92,14 +93,23 @@ AdditionalApplicationArchiveMarkerBuildItem marker() {\n \n         for (ClassInfo info : allKnownImplementors) {\n             final DotName name = info.name();\n-            builder.addBeanClass(name.toString());\n+            final String lambda = name.toString();\n+\n+            // check class is not abstract\n+            try {\n+                Class<?> lambdaClass = Class.forName(lambda);\n+                if (Modifier.isAbstract(lambdaClass.getModifiers())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5ff4910e8fc514fb435ba3331694daa9351f0af"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk3MTcxMw==", "bodyText": "Also Modifier.isAbstract(info.flasg()) should work", "url": "https://github.com/quarkusio/quarkus/pull/9023#discussion_r418971713", "createdAt": "2020-05-02T15:29:45Z", "author": {"login": "geoand"}, "path": "extensions/amazon-lambda/deployment/src/main/java/io/quarkus/amazon/lambda/deployment/AmazonLambdaProcessor.java", "diffHunk": "@@ -92,14 +93,23 @@ AdditionalApplicationArchiveMarkerBuildItem marker() {\n \n         for (ClassInfo info : allKnownImplementors) {\n             final DotName name = info.name();\n-            builder.addBeanClass(name.toString());\n+            final String lambda = name.toString();\n+\n+            // check class is not abstract\n+            try {\n+                Class<?> lambdaClass = Class.forName(lambda);\n+                if (Modifier.isAbstract(lambdaClass.getModifiers())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1MzQ3Mw=="}, "originalCommit": {"oid": "e5ff4910e8fc514fb435ba3331694daa9351f0af"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3356, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}