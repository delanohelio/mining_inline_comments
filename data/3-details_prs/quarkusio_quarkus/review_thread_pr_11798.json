{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NTM2MjI0", "number": 11798, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODoxMDoxNFrOEfVSYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDo0NToyM1rOEg9mCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMjkwMDgyOnYy", "diffSide": "RIGHT", "path": "test-framework/common/src/main/java/io/quarkus/test/TestTransaction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODoxMDoxNFrOHLizlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNjoyOTozMFrOHNxtUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg2NjY0NA==", "bodyText": "\"The allows\" is a typo probably?", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r481866644", "createdAt": "2020-09-02T08:10:14Z", "author": {"login": "mkouba"}, "path": "test-framework/common/src/main/java/io/quarkus/test/TestTransaction.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package io.quarkus.test;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import javax.interceptor.InterceptorBinding;\n+\n+/**\n+ * Indicates that this method should be run in a rollback only transaction.\n+ *\n+ * The allows the test method to modify the database as required, and then have", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b47c80524d067315cbc541a1d3903e21084f2b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDIwNzk1Mg==", "bodyText": "Typo still present...", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r484207952", "createdAt": "2020-09-07T06:29:30Z", "author": {"login": "mkouba"}, "path": "test-framework/common/src/main/java/io/quarkus/test/TestTransaction.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package io.quarkus.test;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+import javax.interceptor.InterceptorBinding;\n+\n+/**\n+ * Indicates that this method should be run in a rollback only transaction.\n+ *\n+ * The allows the test method to modify the database as required, and then have", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg2NjY0NA=="}, "originalCommit": {"oid": "f7b47c80524d067315cbc541a1d3903e21084f2b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMjkzNTM3OnYy", "diffSide": "RIGHT", "path": "extensions/narayana-jta/deployment/src/main/java/io/quarkus/narayana/jta/deployment/NarayanaJtaProcessor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODoxNjo1MFrOHLjKoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNTo1NzoyNVrOHMW-Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg3MjU0NQ==", "bodyText": "Hm, so you generate an interceptor class because you can't add the @TestTransaction interceptor binding, right? Ok, that's probably the simplest solution. However, I'd move as much as possible logic to the parent class, i.e. injection field of UserTransaction and the whole @AroundInvoke method. If it doesn't work then we have a bug in ArC...", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r481872545", "createdAt": "2020-09-02T08:16:50Z", "author": {"login": "mkouba"}, "path": "extensions/narayana-jta/deployment/src/main/java/io/quarkus/narayana/jta/deployment/NarayanaJtaProcessor.java", "diffHunk": "@@ -96,6 +114,40 @@ public void build(NarayanaJtaRecorder recorder,\n         recorder.setDefaultTimeout(transactions);\n     }\n \n+    @BuildStep\n+    void testTx(LaunchModeBuildItem lm, BuildProducer<GeneratedBeanBuildItem> generatedBeanBuildItemBuildProducer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b47c80524d067315cbc541a1d3903e21084f2b"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxNjIxNg==", "bodyText": "It didn't work, although I did not have time to look into why.", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r482716216", "createdAt": "2020-09-03T05:41:13Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/narayana-jta/deployment/src/main/java/io/quarkus/narayana/jta/deployment/NarayanaJtaProcessor.java", "diffHunk": "@@ -96,6 +114,40 @@ public void build(NarayanaJtaRecorder recorder,\n         recorder.setDefaultTimeout(transactions);\n     }\n \n+    @BuildStep\n+    void testTx(LaunchModeBuildItem lm, BuildProducer<GeneratedBeanBuildItem> generatedBeanBuildItemBuildProducer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg3MjU0NQ=="}, "originalCommit": {"oid": "f7b47c80524d067315cbc541a1d3903e21084f2b"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcyMTMxMA==", "bodyText": "Maybe it's because the parent class is not part of the index?", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r482721310", "createdAt": "2020-09-03T05:57:25Z", "author": {"login": "mkouba"}, "path": "extensions/narayana-jta/deployment/src/main/java/io/quarkus/narayana/jta/deployment/NarayanaJtaProcessor.java", "diffHunk": "@@ -96,6 +114,40 @@ public void build(NarayanaJtaRecorder recorder,\n         recorder.setDefaultTimeout(transactions);\n     }\n \n+    @BuildStep\n+    void testTx(LaunchModeBuildItem lm, BuildProducer<GeneratedBeanBuildItem> generatedBeanBuildItemBuildProducer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg3MjU0NQ=="}, "originalCommit": {"oid": "f7b47c80524d067315cbc541a1d3903e21084f2b"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyOTk5MDUxOnYy", "diffSide": "RIGHT", "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TestTransactionInterceptor.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNDo0NToyM1rOHOB7xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QyMTozNToxOVrOHOH3zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3Mzc5OQ==", "bodyText": "Thanks for having considered my flush()-suggestion. Very cool approach with this new TestTransactionInterceptor!\nI am wondering whether this block could kick in cases where it is not really needed? Usually ServiceLoader calls are not super-cheap.\nI used to apply https://en.wikipedia.org/wiki/Initialization-on-demand_holder_idiom in my projects but I don't know whether this would make any difference here.", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r484473799", "createdAt": "2020-09-07T14:45:23Z", "author": {"login": "famod"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TestTransactionInterceptor.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package io.quarkus.narayana.jta.runtime.interceptor;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.ServiceLoader;\n+\n+import javax.inject.Inject;\n+import javax.interceptor.AroundInvoke;\n+import javax.interceptor.InvocationContext;\n+import javax.transaction.UserTransaction;\n+\n+import io.quarkus.narayana.jta.runtime.test.TestTransactionCallback;\n+\n+public class TestTransactionInterceptor {\n+\n+    static final List<TestTransactionCallback> CALLBACKS;\n+\n+    static {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2d057f52d68f5bb6fccc0757c8d7d2e45f702cf"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3ODQxMQ==", "bodyText": "Hm, the callbacks are only loaded once per test config...", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r484478411", "createdAt": "2020-09-07T14:54:36Z", "author": {"login": "mkouba"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TestTransactionInterceptor.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package io.quarkus.narayana.jta.runtime.interceptor;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.ServiceLoader;\n+\n+import javax.inject.Inject;\n+import javax.interceptor.AroundInvoke;\n+import javax.interceptor.InvocationContext;\n+import javax.transaction.UserTransaction;\n+\n+import io.quarkus.narayana.jta.runtime.test.TestTransactionCallback;\n+\n+public class TestTransactionInterceptor {\n+\n+    static final List<TestTransactionCallback> CALLBACKS;\n+\n+    static {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3Mzc5OQ=="}, "originalCommit": {"oid": "a2d057f52d68f5bb6fccc0757c8d7d2e45f702cf"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3OTc3OA==", "bodyText": "That said, we could easily turn the list into a io.quarkus.arc.impl.LazyValue<List<TestTransactionCallback>> ...", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r484479778", "createdAt": "2020-09-07T14:57:18Z", "author": {"login": "mkouba"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TestTransactionInterceptor.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package io.quarkus.narayana.jta.runtime.interceptor;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.ServiceLoader;\n+\n+import javax.inject.Inject;\n+import javax.interceptor.AroundInvoke;\n+import javax.interceptor.InvocationContext;\n+import javax.transaction.UserTransaction;\n+\n+import io.quarkus.narayana.jta.runtime.test.TestTransactionCallback;\n+\n+public class TestTransactionInterceptor {\n+\n+    static final List<TestTransactionCallback> CALLBACKS;\n+\n+    static {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3Mzc5OQ=="}, "originalCommit": {"oid": "a2d057f52d68f5bb6fccc0757c8d7d2e45f702cf"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU2OTY3Mw==", "bodyText": "The current code is fine. ServiceLoader is expensive in terms of 'don't do this every request so you are doing it tens of thousands of times per second', its fine for this.", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r484569673", "createdAt": "2020-09-07T21:25:39Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TestTransactionInterceptor.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package io.quarkus.narayana.jta.runtime.interceptor;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.ServiceLoader;\n+\n+import javax.inject.Inject;\n+import javax.interceptor.AroundInvoke;\n+import javax.interceptor.InvocationContext;\n+import javax.transaction.UserTransaction;\n+\n+import io.quarkus.narayana.jta.runtime.test.TestTransactionCallback;\n+\n+public class TestTransactionInterceptor {\n+\n+    static final List<TestTransactionCallback> CALLBACKS;\n+\n+    static {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3Mzc5OQ=="}, "originalCommit": {"oid": "a2d057f52d68f5bb6fccc0757c8d7d2e45f702cf"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDU3MTA4Nw==", "bodyText": "Ok, thanks for your feedback.", "url": "https://github.com/quarkusio/quarkus/pull/11798#discussion_r484571087", "createdAt": "2020-09-07T21:35:19Z", "author": {"login": "famod"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TestTransactionInterceptor.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package io.quarkus.narayana.jta.runtime.interceptor;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.ServiceLoader;\n+\n+import javax.inject.Inject;\n+import javax.interceptor.AroundInvoke;\n+import javax.interceptor.InvocationContext;\n+import javax.transaction.UserTransaction;\n+\n+import io.quarkus.narayana.jta.runtime.test.TestTransactionCallback;\n+\n+public class TestTransactionInterceptor {\n+\n+    static final List<TestTransactionCallback> CALLBACKS;\n+\n+    static {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDQ3Mzc5OQ=="}, "originalCommit": {"oid": "a2d057f52d68f5bb6fccc0757c8d7d2e45f702cf"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 462, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}