{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMzg4MjAw", "number": 13367, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozMDoxOVrOE6wOvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozMDoxOVrOE6wOvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDQzMDcwOnYy", "diffSide": "RIGHT", "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/core/strategy/SmartPackageFileStrategyHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDozMDoxOVrOH2A8zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNzowNDoxM1rOH2PQ3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMDcxOA==", "bodyText": "minor thing but I would extract the \"org.acme\" and \"org/acme\" into a constant to make it more clear its a special \"marker\"", "url": "https://github.com/quarkusio/quarkus/pull/13367#discussion_r526400718", "createdAt": "2020-11-18T20:30:19Z", "author": {"login": "maxandersen"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/core/strategy/SmartPackageFileStrategyHandler.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package io.quarkus.devtools.codestarts.core.strategy;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import io.quarkus.devtools.codestarts.CodestartStructureException;\n+import io.quarkus.devtools.codestarts.core.reader.TargetFile;\n+import io.quarkus.devtools.codestarts.utils.NestedMaps;\n+\n+final class SmartPackageFileStrategyHandler implements CodestartFileStrategyHandler {\n+\n+    @Override\n+    public String name() {\n+        return \"smart-package\";\n+    }\n+\n+    @Override\n+    public void process(Path targetDirectory, String relativePath, List<TargetFile> codestartFiles, Map<String, Object> data)\n+            throws IOException {\n+        checkNotEmptyCodestartFiles(codestartFiles);\n+\n+        final Optional<String> optPackageName = NestedMaps.getValue(data, \"project.package-name\");\n+        Path targetPath;\n+        String content = codestartFiles.get(0).getContent();\n+        if (optPackageName.isPresent()) {\n+            final String packageName = optPackageName.get();\n+            final String packageNameAsDir = packageName.replace(\".\", \"/\");\n+            targetPath = targetDirectory.resolve(relativePath.replace(\"org/acme\", packageNameAsDir));\n+            content = content\n+                .replace(\"import org.acme\", \"import \" + packageName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "471a32dbfaada7199ef7cc0f7343a7fe1d801efb"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYzNTIzMQ==", "bodyText": "Sure, this is a draft still :)", "url": "https://github.com/quarkusio/quarkus/pull/13367#discussion_r526635231", "createdAt": "2020-11-19T07:04:13Z", "author": {"login": "ia3andy"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/core/strategy/SmartPackageFileStrategyHandler.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package io.quarkus.devtools.codestarts.core.strategy;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import io.quarkus.devtools.codestarts.CodestartStructureException;\n+import io.quarkus.devtools.codestarts.core.reader.TargetFile;\n+import io.quarkus.devtools.codestarts.utils.NestedMaps;\n+\n+final class SmartPackageFileStrategyHandler implements CodestartFileStrategyHandler {\n+\n+    @Override\n+    public String name() {\n+        return \"smart-package\";\n+    }\n+\n+    @Override\n+    public void process(Path targetDirectory, String relativePath, List<TargetFile> codestartFiles, Map<String, Object> data)\n+            throws IOException {\n+        checkNotEmptyCodestartFiles(codestartFiles);\n+\n+        final Optional<String> optPackageName = NestedMaps.getValue(data, \"project.package-name\");\n+        Path targetPath;\n+        String content = codestartFiles.get(0).getContent();\n+        if (optPackageName.isPresent()) {\n+            final String packageName = optPackageName.get();\n+            final String packageNameAsDir = packageName.replace(\".\", \"/\");\n+            targetPath = targetDirectory.resolve(relativePath.replace(\"org/acme\", packageNameAsDir));\n+            content = content\n+                .replace(\"import org.acme\", \"import \" + packageName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQwMDcxOA=="}, "originalCommit": {"oid": "471a32dbfaada7199ef7cc0f7343a7fe1d801efb"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3943, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}