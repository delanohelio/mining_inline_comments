{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2ODgxODIx", "number": 11354, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDoxMToxNFrOEZNM4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDoxMToxNFrOEZNM4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODY2MTQ3OnYy", "diffSide": "RIGHT", "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisAPIProducer.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDoxMToxNFrOHB5Pwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTo0MzowN1rOHGeO-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0ODU0Ng==", "bodyText": "@gsmet I kind of need this to fix #11354 (comment) as registering the classes for reflection did not solve the issue.\nI could not dig deeper what caused the issues though as I was out of depth lacking CDI and generated bytecode expertise ;-)\nLet me know what you think of this.", "url": "https://github.com/quarkusio/quarkus/pull/11354#discussion_r471748546", "createdAt": "2020-08-17T20:11:14Z", "author": {"login": "machi1990"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisAPIProducer.java", "diffHunk": "@@ -133,4 +107,24 @@ private String buildConnectionString(InetSocketAddress address) {\n \n         return builder.toString();\n     }\n+\n+    static class MutinyRedisClient extends io.vertx.mutiny.redis.client.Redis {\n+        MutinyRedisClient(Redis delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClient() {\n+            super(null);\n+        }\n+    }\n+\n+    static class MutinyRedisClientAPI extends io.vertx.mutiny.redis.client.RedisAPI {\n+        MutinyRedisClientAPI(RedisAPI delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClientAPI() {\n+            super(null);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a80c671192f6c218ccb6a4f57e025151df3c0348"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc2MTk3OA==", "bodyText": "I have absolutely no idea :). @mkouba ?", "url": "https://github.com/quarkusio/quarkus/pull/11354#discussion_r471761978", "createdAt": "2020-08-17T20:38:32Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisAPIProducer.java", "diffHunk": "@@ -133,4 +107,24 @@ private String buildConnectionString(InetSocketAddress address) {\n \n         return builder.toString();\n     }\n+\n+    static class MutinyRedisClient extends io.vertx.mutiny.redis.client.Redis {\n+        MutinyRedisClient(Redis delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClient() {\n+            super(null);\n+        }\n+    }\n+\n+    static class MutinyRedisClientAPI extends io.vertx.mutiny.redis.client.RedisAPI {\n+        MutinyRedisClientAPI(RedisAPI delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClientAPI() {\n+            super(null);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0ODU0Ng=="}, "originalCommit": {"oid": "a80c671192f6c218ccb6a4f57e025151df3c0348"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ2NTc0Ng==", "bodyText": "Hm, the no-args constructor defined on io.vertx.mutiny.redis.client.Redis is package-private so it cannot be accessed from a client proxy generated for a producer method declared on a class with different package... but I can see that you've tried to wrap the mutiny redis client in a special class. @machi1990 Do you still get the same IllegalAccessError?", "url": "https://github.com/quarkusio/quarkus/pull/11354#discussion_r476465746", "createdAt": "2020-08-25T13:52:51Z", "author": {"login": "mkouba"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisAPIProducer.java", "diffHunk": "@@ -133,4 +107,24 @@ private String buildConnectionString(InetSocketAddress address) {\n \n         return builder.toString();\n     }\n+\n+    static class MutinyRedisClient extends io.vertx.mutiny.redis.client.Redis {\n+        MutinyRedisClient(Redis delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClient() {\n+            super(null);\n+        }\n+    }\n+\n+    static class MutinyRedisClientAPI extends io.vertx.mutiny.redis.client.RedisAPI {\n+        MutinyRedisClientAPI(RedisAPI delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClientAPI() {\n+            super(null);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0ODU0Ng=="}, "originalCommit": {"oid": "a80c671192f6c218ccb6a4f57e025151df3c0348"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ2ODY3OQ==", "bodyText": "Hm, the no-args constructor defined on io.vertx.mutiny.redis.client.Redis is package-private so it cannot be accessed from a client proxy generated for a producer method declared on a class with different package...\n\nI am wondering why a no arg ctor is needed in this case since the extension takes care of producing the instances by calling appropriate ctor.\n\nbut I can see that you've tried to wrap the mutiny redis client in a special class. @machi1990 Do you still get the same IllegalAccessError?\n\nWrapping it in a special class get's me past the error.", "url": "https://github.com/quarkusio/quarkus/pull/11354#discussion_r476468679", "createdAt": "2020-08-25T13:56:42Z", "author": {"login": "machi1990"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisAPIProducer.java", "diffHunk": "@@ -133,4 +107,24 @@ private String buildConnectionString(InetSocketAddress address) {\n \n         return builder.toString();\n     }\n+\n+    static class MutinyRedisClient extends io.vertx.mutiny.redis.client.Redis {\n+        MutinyRedisClient(Redis delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClient() {\n+            super(null);\n+        }\n+    }\n+\n+    static class MutinyRedisClientAPI extends io.vertx.mutiny.redis.client.RedisAPI {\n+        MutinyRedisClientAPI(RedisAPI delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClientAPI() {\n+            super(null);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0ODU0Ng=="}, "originalCommit": {"oid": "a80c671192f6c218ccb6a4f57e025151df3c0348"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ5MjY5Nw==", "bodyText": "I am wondering why a no arg ctor is needed in this case since the extension takes care of producing the instances by calling appropriate ctor.\n\nIt's necessary to create a client proxy instance (used for normal scopes).", "url": "https://github.com/quarkusio/quarkus/pull/11354#discussion_r476492697", "createdAt": "2020-08-25T14:27:52Z", "author": {"login": "mkouba"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisAPIProducer.java", "diffHunk": "@@ -133,4 +107,24 @@ private String buildConnectionString(InetSocketAddress address) {\n \n         return builder.toString();\n     }\n+\n+    static class MutinyRedisClient extends io.vertx.mutiny.redis.client.Redis {\n+        MutinyRedisClient(Redis delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClient() {\n+            super(null);\n+        }\n+    }\n+\n+    static class MutinyRedisClientAPI extends io.vertx.mutiny.redis.client.RedisAPI {\n+        MutinyRedisClientAPI(RedisAPI delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClientAPI() {\n+            super(null);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0ODU0Ng=="}, "originalCommit": {"oid": "a80c671192f6c218ccb6a4f57e025151df3c0348"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjQ5NTE2OA==", "bodyText": "Thanks for clarifying.\nYou think the fix I used is an appropriate one?", "url": "https://github.com/quarkusio/quarkus/pull/11354#discussion_r476495168", "createdAt": "2020-08-25T14:31:02Z", "author": {"login": "machi1990"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisAPIProducer.java", "diffHunk": "@@ -133,4 +107,24 @@ private String buildConnectionString(InetSocketAddress address) {\n \n         return builder.toString();\n     }\n+\n+    static class MutinyRedisClient extends io.vertx.mutiny.redis.client.Redis {\n+        MutinyRedisClient(Redis delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClient() {\n+            super(null);\n+        }\n+    }\n+\n+    static class MutinyRedisClientAPI extends io.vertx.mutiny.redis.client.RedisAPI {\n+        MutinyRedisClientAPI(RedisAPI delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClientAPI() {\n+            super(null);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0ODU0Ng=="}, "originalCommit": {"oid": "a80c671192f6c218ccb6a4f57e025151df3c0348"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUwMjQwMA==", "bodyText": "It's probably OK.", "url": "https://github.com/quarkusio/quarkus/pull/11354#discussion_r476502400", "createdAt": "2020-08-25T14:40:22Z", "author": {"login": "mkouba"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisAPIProducer.java", "diffHunk": "@@ -133,4 +107,24 @@ private String buildConnectionString(InetSocketAddress address) {\n \n         return builder.toString();\n     }\n+\n+    static class MutinyRedisClient extends io.vertx.mutiny.redis.client.Redis {\n+        MutinyRedisClient(Redis delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClient() {\n+            super(null);\n+        }\n+    }\n+\n+    static class MutinyRedisClientAPI extends io.vertx.mutiny.redis.client.RedisAPI {\n+        MutinyRedisClientAPI(RedisAPI delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClientAPI() {\n+            super(null);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0ODU0Ng=="}, "originalCommit": {"oid": "a80c671192f6c218ccb6a4f57e025151df3c0348"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU0ODg1Ng==", "bodyText": "Thanks. I suppose this PR is good to go then :-)", "url": "https://github.com/quarkusio/quarkus/pull/11354#discussion_r476548856", "createdAt": "2020-08-25T15:43:07Z", "author": {"login": "machi1990"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisAPIProducer.java", "diffHunk": "@@ -133,4 +107,24 @@ private String buildConnectionString(InetSocketAddress address) {\n \n         return builder.toString();\n     }\n+\n+    static class MutinyRedisClient extends io.vertx.mutiny.redis.client.Redis {\n+        MutinyRedisClient(Redis delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClient() {\n+            super(null);\n+        }\n+    }\n+\n+    static class MutinyRedisClientAPI extends io.vertx.mutiny.redis.client.RedisAPI {\n+        MutinyRedisClientAPI(RedisAPI delegate) {\n+            super(delegate);\n+        }\n+\n+        MutinyRedisClientAPI() {\n+            super(null);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0ODU0Ng=="}, "originalCommit": {"oid": "a80c671192f6c218ccb6a4f57e025151df3c0348"}, "originalPosition": 128}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 565, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}