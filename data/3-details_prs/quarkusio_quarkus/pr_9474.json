{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNDU4NjA5", "number": 9474, "title": "Make access logging work in native mode", "bodyText": "Fixes #9047\nRight now, access logging isn't working in native mode as reported in the issue. This is because the ExchangeAttributeBuilder(s) which are responsible for handling the access log format specifier are ServiceLoader based interfaces and as such need to be explicitly registered in native image for them to be available.\nThe commit here explicitly makes them available in native mode and also includes a test to reproduce the issue and verify the fix.", "createdAt": "2020-05-20T01:51:51Z", "url": "https://github.com/quarkusio/quarkus/pull/9474", "merged": true, "mergeCommit": {"oid": "8219a43fe09baf1b4cf1ac4873918cd0242b962b"}, "closed": true, "closedAt": "2020-05-20T05:57:42Z", "author": {"login": "jaikiran"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci_LBfAFqTQxNDk0MDEwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjA6XdgFqTQxNDk3NTI3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0OTQwMTA4", "url": "https://github.com/quarkusio/quarkus/pull/9474#pullrequestreview-414940108", "createdAt": "2020-05-20T01:55:33Z", "commit": {"oid": "ecd06c23aab7ba3a386c2769ba6b9c794f7e8a03"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMTo1NTozNFrOGX4nsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMTo1NTozNFrOGX4nsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY5ODA5OA==", "bodyText": "An issue with this approach is that if there are additional service implementations on the deployment class path that are not on the runtime class path this will cause failures. Not sure how likely this in practice.", "url": "https://github.com/quarkusio/quarkus/pull/9474#discussion_r427698098", "createdAt": "2020-05-20T01:55:34Z", "author": {"login": "stuartwdouglas"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/nativeimage/ServiceProviderBuildItem.java", "diffHunk": "@@ -18,6 +27,50 @@\n     private final String serviceInterface;\n     private final List<String> providers;\n \n+    /**\n+     * Creates and returns a {@link ServiceProviderBuildItem} for the {@code serviceInterfaceClassName} by including\n+     * all the providers that are listed in the service interface descriptor file. The passed classloader is used to\n+     * find the service interface descriptor file and if no such file is found, this method returns an\n+     * {@link Optional#empty() empty value}.\n+     *\n+     * @param serviceInterfaceClassName the interface whose service interface descriptor file we want to embed\n+     * @param cl the classloader to use to find the service interface descriptor file. Can be null, in which case,\n+     *        this method uses the {@link Thread#getContextClassLoader() thread context classloader}\n+     * @return\n+     * @throws IOException\n+     */\n+    public static Optional<ServiceProviderBuildItem> allProviders(final String serviceInterfaceClassName, final ClassLoader cl)\n+            throws IOException {\n+        if (serviceInterfaceClassName == null || serviceInterfaceClassName.trim().isEmpty()) {\n+            throw new IllegalArgumentException(\"service interface name cannot be null or blank\");\n+        }\n+        final ClassLoader classLoaderToUse = cl == null ? Thread.currentThread().getContextClassLoader() : cl;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecd06c23aab7ba3a386c2769ba6b9c794f7e8a03"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0OTQwNjkz", "url": "https://github.com/quarkusio/quarkus/pull/9474#pullrequestreview-414940693", "createdAt": "2020-05-20T01:57:20Z", "commit": {"oid": "ecd06c23aab7ba3a386c2769ba6b9c794f7e8a03"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMTo1NzoyMFrOGX4pfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwMTo1NzoyMFrOGX4pfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY5ODU1OQ==", "bodyText": "This should actually happen automatically, as ServiceProviderBuildItem should only be consumed in a native build so it will only run if doing a native build.", "url": "https://github.com/quarkusio/quarkus/pull/9474#discussion_r427698559", "createdAt": "2020-05-20T01:57:20Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/VertxHttpProcessor.java", "diffHunk": "@@ -185,4 +188,25 @@ void openSocket(ApplicationStartBuildItem start,\n     RuntimeInitializedClassBuildItem configureNativeCompilation() {\n         return new RuntimeInitializedClassBuildItem(\"io.vertx.ext.web.handler.sockjs.impl.XhrTransport\");\n     }\n+\n+    /**\n+     * Register the {@link ExchangeAttributeBuilder} services for native image consumption\n+     * \n+     * @param exchangeAttributeBuilderService\n+     * @throws BuildException\n+     */\n+    @BuildStep(onlyIf = NativeBuild.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecd06c23aab7ba3a386c2769ba6b9c794f7e8a03"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1b704131369240e42160e3c34196694ee1cd30d", "author": {"user": {"login": "jaikiran", "name": "Jaikiran"}}, "url": "https://github.com/quarkusio/quarkus/commit/d1b704131369240e42160e3c34196694ee1cd30d", "committedDate": "2020-05-20T03:37:12Z", "message": "issue#9047 Register io.quarkus.vertx.http.runtime.attribute.ExchangeAttributeBuilder service providers for access logging to work in native image"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecd06c23aab7ba3a386c2769ba6b9c794f7e8a03", "author": {"user": {"login": "jaikiran", "name": "Jaikiran"}}, "url": "https://github.com/quarkusio/quarkus/commit/ecd06c23aab7ba3a386c2769ba6b9c794f7e8a03", "committedDate": "2020-05-20T01:43:06Z", "message": "issue#9047 Register io.quarkus.vertx.http.runtime.attribute.ExchangeAttributeBuilder service providers for access logging to work in native image"}, "afterCommit": {"oid": "d1b704131369240e42160e3c34196694ee1cd30d", "author": {"user": {"login": "jaikiran", "name": "Jaikiran"}}, "url": "https://github.com/quarkusio/quarkus/commit/d1b704131369240e42160e3c34196694ee1cd30d", "committedDate": "2020-05-20T03:37:12Z", "message": "issue#9047 Register io.quarkus.vertx.http.runtime.attribute.ExchangeAttributeBuilder service providers for access logging to work in native image"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0OTc1Mjc3", "url": "https://github.com/quarkusio/quarkus/pull/9474#pullrequestreview-414975277", "createdAt": "2020-05-20T03:57:11Z", "commit": {"oid": "d1b704131369240e42160e3c34196694ee1cd30d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3338, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}