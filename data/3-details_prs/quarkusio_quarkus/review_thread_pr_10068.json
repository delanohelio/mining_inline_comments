{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTcxNjQ1", "number": 10068, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTowNjo1NlrOEGMdog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo1NzozMFrOEGQp2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTMxMTA2OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/hibernate-orm-panache.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTowNjo1NlrOGk1xAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNTowNjo1NlrOGk1xAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI4MjgxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            annotation processor by default. If you do this you should either create the marker file\n          \n          \n            \n            annotation processor by default. If you do this you should either create the `META-INF/panache-archive.marker` marker file", "url": "https://github.com/quarkusio/quarkus/pull/10068#discussion_r441282818", "createdAt": "2020-06-17T05:06:56Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/hibernate-orm-panache.adoc", "diffHunk": "@@ -950,3 +950,29 @@ by the presence of the marker file `META-INF/panache-archive.marker`. Panache in\n annotation processor that will automatically create this file in archives that depend on\n Panache (even indirectly). If you have disabled annotation processors you may need to create\n this file manually in some cases.\n+\n+WARNING: If you include the jpa-modelgen annotation processor this will exclude the Panache\n+annotation processor by default. If you do this you should either create the marker file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "655e5723edf3374eedcd84a77fc329fc75e7d1a5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTk4ODY5OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/hibernate-orm-panache.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo1NTowNlrOGk8T_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo1NTowNlrOGk8T_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5MDA3Ng==", "bodyText": "s/or add the quarkus-panache-common as well/or add the quarkus-panache-common APT processor as well/", "url": "https://github.com/quarkusio/quarkus/pull/10068#discussion_r441390076", "createdAt": "2020-06-17T08:55:06Z", "author": {"login": "FroMage"}, "path": "docs/src/main/asciidoc/hibernate-orm-panache.adoc", "diffHunk": "@@ -950,3 +950,29 @@ by the presence of the marker file `META-INF/panache-archive.marker`. Panache in\n annotation processor that will automatically create this file in archives that depend on\n Panache (even indirectly). If you have disabled annotation processors you may need to create\n this file manually in some cases.\n+\n+WARNING: If you include the jpa-modelgen annotation processor this will exclude the Panache\n+annotation processor by default. If you do this you should either create the marker file\n+yourself, or add the `quarkus-panache-common` as well, as shown below:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89f4e9e0a14dcc711d9d3d20b86f3fce4ac71d4"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0OTk5NzcxOnYy", "diffSide": "RIGHT", "path": "extensions/panache/panache-common/deployment/src/main/java/io/quarkus/panache/common/deployment/PanacheEntityEnhancer.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwODo1NzozMFrOGk8aDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzoyMDowOFrOGlFXpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5MTYzMQ==", "bodyText": "Why protected and not private?\nNote that this may impact the jsonb/jackson/jaxb marshaller strategy, but probably tests would expose this.", "url": "https://github.com/quarkusio/quarkus/pull/10068#discussion_r441391631", "createdAt": "2020-06-17T08:57:30Z", "author": {"login": "FroMage"}, "path": "extensions/panache/panache-common/deployment/src/main/java/io/quarkus/panache/common/deployment/PanacheEntityEnhancer.java", "diffHunk": "@@ -91,10 +91,19 @@ public PanacheEntityClassVisitor(String className, ClassVisitor outputClassVisit\n \n         @Override\n         public FieldVisitor visitField(int access, String name, String descriptor, String signature, Object value) {\n-            FieldVisitor superVisitor = super.visitField(access, name, descriptor, signature, value);\n             EntityField ef = fields.get(name);\n             if (ef == null) {\n-                return superVisitor;\n+                return super.visitField(access, name, descriptor, signature, value);\n+            }\n+            //we make the fields protected", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e89f4e9e0a14dcc711d9d3d20b86f3fce4ac71d4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQxNTgzOQ==", "bodyText": "Because I think we allow sub classes to access parent fields directly.\nWe can remove this from the PR, but I thought it would be interesting to add, as I assumed that nothing would be using the fields directly but it looks like this is not the case.", "url": "https://github.com/quarkusio/quarkus/pull/10068#discussion_r441415839", "createdAt": "2020-06-17T09:36:29Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/panache/panache-common/deployment/src/main/java/io/quarkus/panache/common/deployment/PanacheEntityEnhancer.java", "diffHunk": "@@ -91,10 +91,19 @@ public PanacheEntityClassVisitor(String className, ClassVisitor outputClassVisit\n \n         @Override\n         public FieldVisitor visitField(int access, String name, String descriptor, String signature, Object value) {\n-            FieldVisitor superVisitor = super.visitField(access, name, descriptor, signature, value);\n             EntityField ef = fields.get(name);\n             if (ef == null) {\n-                return superVisitor;\n+                return super.visitField(access, name, descriptor, signature, value);\n+            }\n+            //we make the fields protected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5MTYzMQ=="}, "originalCommit": {"oid": "e89f4e9e0a14dcc711d9d3d20b86f3fce4ac71d4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQyMDIxMQ==", "bodyText": "Mmm, I think we don't actually allow field access from within the entity, except in the constructor.", "url": "https://github.com/quarkusio/quarkus/pull/10068#discussion_r441420211", "createdAt": "2020-06-17T09:43:43Z", "author": {"login": "FroMage"}, "path": "extensions/panache/panache-common/deployment/src/main/java/io/quarkus/panache/common/deployment/PanacheEntityEnhancer.java", "diffHunk": "@@ -91,10 +91,19 @@ public PanacheEntityClassVisitor(String className, ClassVisitor outputClassVisit\n \n         @Override\n         public FieldVisitor visitField(int access, String name, String descriptor, String signature, Object value) {\n-            FieldVisitor superVisitor = super.visitField(access, name, descriptor, signature, value);\n             EntityField ef = fields.get(name);\n             if (ef == null) {\n-                return superVisitor;\n+                return super.visitField(access, name, descriptor, signature, value);\n+            }\n+            //we make the fields protected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5MTYzMQ=="}, "originalCommit": {"oid": "e89f4e9e0a14dcc711d9d3d20b86f3fce4ac71d4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTQ0Njg0NQ==", "bodyText": "panache rest data uses the id field, it was originally private but it failed because of this so I changed it. Maybe I should move this into a seperate pr? It's not really needed for this one, I thought it would just work and make these sort of errors more obvious.", "url": "https://github.com/quarkusio/quarkus/pull/10068#discussion_r441446845", "createdAt": "2020-06-17T10:30:14Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/panache/panache-common/deployment/src/main/java/io/quarkus/panache/common/deployment/PanacheEntityEnhancer.java", "diffHunk": "@@ -91,10 +91,19 @@ public PanacheEntityClassVisitor(String className, ClassVisitor outputClassVisit\n \n         @Override\n         public FieldVisitor visitField(int access, String name, String descriptor, String signature, Object value) {\n-            FieldVisitor superVisitor = super.visitField(access, name, descriptor, signature, value);\n             EntityField ef = fields.get(name);\n             if (ef == null) {\n-                return superVisitor;\n+                return super.visitField(access, name, descriptor, signature, value);\n+            }\n+            //we make the fields protected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5MTYzMQ=="}, "originalCommit": {"oid": "e89f4e9e0a14dcc711d9d3d20b86f3fce4ac71d4"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTUzODQ3MQ==", "bodyText": "Well it did make this sort of error more obvious, so I think it's fine.", "url": "https://github.com/quarkusio/quarkus/pull/10068#discussion_r441538471", "createdAt": "2020-06-17T13:20:08Z", "author": {"login": "FroMage"}, "path": "extensions/panache/panache-common/deployment/src/main/java/io/quarkus/panache/common/deployment/PanacheEntityEnhancer.java", "diffHunk": "@@ -91,10 +91,19 @@ public PanacheEntityClassVisitor(String className, ClassVisitor outputClassVisit\n \n         @Override\n         public FieldVisitor visitField(int access, String name, String descriptor, String signature, Object value) {\n-            FieldVisitor superVisitor = super.visitField(access, name, descriptor, signature, value);\n             EntityField ef = fields.get(name);\n             if (ef == null) {\n-                return superVisitor;\n+                return super.visitField(access, name, descriptor, signature, value);\n+            }\n+            //we make the fields protected", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTM5MTYzMQ=="}, "originalCommit": {"oid": "e89f4e9e0a14dcc711d9d3d20b86f3fce4ac71d4"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2764, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}