{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NjE3Mjgy", "number": 8312, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNToyMjo1OVrODtYUlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTo0Nzo0MlrODvDPSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTEwOTk4OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNToyMjo1OVrOF-xNIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNToyMjo1OVrOF-xNIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM2MjIwOQ==", "bodyText": "This is the \"legacy\" way of doing things and we would really like to avoid it", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401362209", "createdAt": "2020-04-01T05:22:59Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "diffHunk": "@@ -63,6 +63,7 @@\n             p.getPartOf().ifPresent(g -> quarkusPrefixed.put(DEKORATE_PREFIX + p.getConfigName() + \".part-of\", g));\n             p.getName().ifPresent(n -> quarkusPrefixed.put(DEKORATE_PREFIX + p.getConfigName() + \".name\", n));\n             p.getVersion().ifPresent(v -> quarkusPrefixed.put(DEKORATE_PREFIX + p.getConfigName() + \".version\", v));\n+            p.getReplicas().ifPresent(r -> quarkusPrefixed.put(DEKORATE_PREFIX + p.getConfigName() + \".replicas\", r));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTM2OTI3OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfig.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoxNTowMFrOF-zndg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOTozMjoyMFrOGAN0Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTcxOA==", "bodyText": "I think we should probably use:\n    @ConfigItem(defaultValue = \"1\")\n    Integer replicas;\n\nIt will make the default more visible.", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401401718", "createdAt": "2020-04-01T07:15:00Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfig.java", "diffHunk": "@@ -95,6 +96,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMjA2NA==", "bodyText": "Okey sounds like a good idea. I will update the pull request", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401402064", "createdAt": "2020-04-01T07:15:50Z", "author": {"login": "cemnura"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfig.java", "diffHunk": "@@ -95,6 +96,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTcxOA=="}, "originalCommit": {"oid": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1ODcyMA==", "bodyText": "Oh sorry, I missed this. Any reason to not use Integer instead of OptionalInt?", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402258720", "createdAt": "2020-04-02T12:01:52Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfig.java", "diffHunk": "@@ -95,6 +96,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTcxOA=="}, "originalCommit": {"oid": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4NzE2NQ==", "bodyText": "Sorry missed this. Not really I preferred OptionalInt to be able to check the value and create ApplyReplicasDecorator. But I am assuming that since the default value is now 1 this field is basically never empty therefore no need to check if the value exists? If so then that sounds like a good idea. Shall I update it?", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402587165", "createdAt": "2020-04-02T20:22:18Z", "author": {"login": "cemnura"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfig.java", "diffHunk": "@@ -95,6 +96,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTcxOA=="}, "originalCommit": {"oid": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcyNjY5MA==", "bodyText": "Once this is addressed, we can merge", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402726690", "createdAt": "2020-04-03T04:11:57Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfig.java", "diffHunk": "@@ -95,6 +96,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTcxOA=="}, "originalCommit": {"oid": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg3OTU4Ng==", "bodyText": "Yeah, it's never empty now, if the user doesn't specify a value 1 will be used by Quarkus so there is no need to be defensive.", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402879586", "createdAt": "2020-04-03T09:32:20Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfig.java", "diffHunk": "@@ -95,6 +96,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTcxOA=="}, "originalCommit": {"oid": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTM3MDc1OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KnativeConfig.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoxNTozMlrOF-zoZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwOToxNzoxM1rOF_icsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTk1Nw==", "bodyText": "I guess we need to drop this since Knative doesn't seem to have replicas.", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401401957", "createdAt": "2020-04-01T07:15:32Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KnativeConfig.java", "diffHunk": "@@ -95,6 +96,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMTgyNQ==", "bodyText": "How would you recommend this? Should I delete the method from the PlatformConfiguration as well?\nDeleting the method would mean that I wouldn't be able use PlatformConfiguration in KubernetesConfigUtil#toMap", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401411825", "createdAt": "2020-04-01T07:35:43Z", "author": {"login": "cemnura"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KnativeConfig.java", "diffHunk": "@@ -95,6 +96,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTk1Nw=="}, "originalCommit": {"oid": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQxMzE5MQ==", "bodyText": "Yeah, we'll have to remove it from PlatformConfiguration.\nIf we follow the latest suggestion from @iocanel then what you mention won't be a problem since the field won't be used in toMap", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401413191", "createdAt": "2020-04-01T07:38:10Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KnativeConfig.java", "diffHunk": "@@ -95,6 +96,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTk1Nw=="}, "originalCommit": {"oid": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE2OTAxMQ==", "bodyText": "Okey I will remove that form PlatformConfiguration", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402169011", "createdAt": "2020-04-02T09:17:13Z", "author": {"login": "cemnura"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KnativeConfig.java", "diffHunk": "@@ -95,6 +96,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMTk1Nw=="}, "originalCommit": {"oid": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4OTM3MTIwOnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoxNTo0OFrOF-zovQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNzoxNTo0OFrOF-zovQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQwMjA0NQ==", "bodyText": "Same comment as the KubernetesConfig", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r401402045", "createdAt": "2020-04-01T07:15:48Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftConfig.java", "diffHunk": "@@ -96,6 +97,12 @@\n     @ConfigItem\n     Map<String, PortConfig> ports;\n \n+    /**\n+     * The number of desired pods\n+     */\n+    @ConfigItem\n+    OptionalInt replicas;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f810f23d5ed0f05f48ff2fb89bb5339a39a46fd"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDQyNzU5OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftApplyReplicasDecorator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDoxNDozOVrOF_kitg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTo1MjoxNlrOGBQHmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwMzMxOA==", "bodyText": "@iocanel what do you think about this? Would you have a different suggestion on how to override after() method", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402203318", "createdAt": "2020-04-02T10:14:39Z", "author": {"login": "cemnura"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftApplyReplicasDecorator.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import io.dekorate.kubernetes.decorator.Decorator;\n+import io.dekorate.kubernetes.decorator.NamedResourceDecorator;\n+import io.dekorate.openshift.decorator.ApplyReplicasDecorator;\n+\n+public class OpenshiftApplyReplicasDecorator extends ApplyReplicasDecorator {\n+\n+    public OpenshiftApplyReplicasDecorator(int replicas) {\n+        super(replicas);\n+    }\n+\n+    @Override\n+    public Class<? extends Decorator>[] after() {\n+        return new Class[] { NamedResourceDecorator.class };\n+    }\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98e3cbe6c3bad7780380418f3147ddfce0992c7f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk2NTg1MQ==", "bodyText": "I would prefer if it also included ApplyReplicasDecorator (same reasoning as the kubernetes variant).", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r403965851", "createdAt": "2020-04-06T09:52:16Z", "author": {"login": "iocanel"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftApplyReplicasDecorator.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import io.dekorate.kubernetes.decorator.Decorator;\n+import io.dekorate.kubernetes.decorator.NamedResourceDecorator;\n+import io.dekorate.openshift.decorator.ApplyReplicasDecorator;\n+\n+public class OpenshiftApplyReplicasDecorator extends ApplyReplicasDecorator {\n+\n+    public OpenshiftApplyReplicasDecorator(int replicas) {\n+        super(replicas);\n+    }\n+\n+    @Override\n+    public Class<? extends Decorator>[] after() {\n+        return new Class[] { NamedResourceDecorator.class };\n+    }\n+\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwMzMxOA=="}, "originalCommit": {"oid": "98e3cbe6c3bad7780380418f3147ddfce0992c7f"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDY4MDU4OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTozMjowNVrOF_m_2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo1NDozOVrOF_nrrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI0MzU0Nw==", "bodyText": "@geoand I deleted the getReplicas() method from PlatformConfiguration and applied the decator addition for kubernetes and openshift like this. Would you have any suggestions?", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402243547", "createdAt": "2020-04-02T11:32:05Z", "author": {"login": "cemnura"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -403,6 +403,11 @@ private void applyBuildItems(Session session,\n         configMap.put(OPENSHIFT, openshiftConfig);\n         configMap.put(KNATIVE, knativeConfig);\n \n+        //Replicas\n+        kubernetesConfig.getReplicas()\n+                .ifPresent(i -> session.resources().decorate(new KubernetesApplyReplicasDecorator(kubernetesName, i)));\n+        openshiftConfig.getReplicas().ifPresent(i -> session.resources().decorate(new OpenshiftApplyReplicasDecorator(i)));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df692696ac70848902a247ba8197d1926d9ec6fd"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1MjUwNw==", "bodyText": "I looks good to me, \ud83d\udc4d", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402252507", "createdAt": "2020-04-02T11:50:22Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -403,6 +403,11 @@ private void applyBuildItems(Session session,\n         configMap.put(OPENSHIFT, openshiftConfig);\n         configMap.put(KNATIVE, knativeConfig);\n \n+        //Replicas\n+        kubernetesConfig.getReplicas()\n+                .ifPresent(i -> session.resources().decorate(new KubernetesApplyReplicasDecorator(kubernetesName, i)));\n+        openshiftConfig.getReplicas().ifPresent(i -> session.resources().decorate(new OpenshiftApplyReplicasDecorator(i)));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI0MzU0Nw=="}, "originalCommit": {"oid": "df692696ac70848902a247ba8197d1926d9ec6fd"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1NDc2Ng==", "bodyText": "Glad to hear @geoand  :)", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402254766", "createdAt": "2020-04-02T11:54:39Z", "author": {"login": "cemnura"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -403,6 +403,11 @@ private void applyBuildItems(Session session,\n         configMap.put(OPENSHIFT, openshiftConfig);\n         configMap.put(KNATIVE, knativeConfig);\n \n+        //Replicas\n+        kubernetesConfig.getReplicas()\n+                .ifPresent(i -> session.resources().decorate(new KubernetesApplyReplicasDecorator(kubernetesName, i)));\n+        openshiftConfig.getReplicas().ifPresent(i -> session.resources().decorate(new OpenshiftApplyReplicasDecorator(i)));\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI0MzU0Nw=="}, "originalCommit": {"oid": "df692696ac70848902a247ba8197d1926d9ec6fd"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDczOTY4OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo1MDo1MFrOF_njzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo1ODozNFrOF_nz6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1Mjc0OQ==", "bodyText": "Please don't use \"star\" imports in Quarkus.", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402252749", "createdAt": "2020-04-02T11:50:50Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import io.dekorate.kubernetes.decorator.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df692696ac70848902a247ba8197d1926d9ec6fd"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1MzM4MQ==", "bodyText": "Other than this, I don't have any more objections and we should be good to go.", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402253381", "createdAt": "2020-04-02T11:52:03Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import io.dekorate.kubernetes.decorator.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1Mjc0OQ=="}, "originalCommit": {"oid": "df692696ac70848902a247ba8197d1926d9ec6fd"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1NDAwOQ==", "bodyText": "Okey will fix this.", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402254009", "createdAt": "2020-04-02T11:53:10Z", "author": {"login": "cemnura"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import io.dekorate.kubernetes.decorator.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1Mjc0OQ=="}, "originalCommit": {"oid": "df692696ac70848902a247ba8197d1926d9ec6fd"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1Njg3Mg==", "bodyText": "Removed \"star\" imports", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r402256872", "createdAt": "2020-04-02T11:58:34Z", "author": {"login": "cemnura"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import io.dekorate.kubernetes.decorator.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1Mjc0OQ=="}, "originalCommit": {"oid": "df692696ac70848902a247ba8197d1926d9ec6fd"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNjYyNzI4OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwOTo0Nzo0MlrOGBP9Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNTo0NTo0MVrOGBeH4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk2MzE4Nw==", "bodyText": "Just to be on the safe side of things, I would explicitly express that I want to it to be called after the ApplyReplicasDecorator. Why?\n\nIt justifies the purpose of the class\nIt makes it easy to understand which dekorator is applied first. (e.g. atm I can't understand which will be applied first without checking the sources of AppliedReplicasDecorator).", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r403963187", "createdAt": "2020-04-06T09:47:42Z", "author": {"login": "iocanel"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import io.dekorate.kubernetes.decorator.ApplyReplicasDecorator;\n+import io.dekorate.kubernetes.decorator.Decorator;\n+import io.dekorate.kubernetes.decorator.NamedResourceDecorator;\n+\n+public class KubernetesApplyReplicasDecorator extends ApplyReplicasDecorator {\n+\n+    public KubernetesApplyReplicasDecorator(int replicas) {\n+        super(replicas);\n+    }\n+\n+    public KubernetesApplyReplicasDecorator(String deploymentName, int replicas) {\n+        super(deploymentName, replicas);\n+    }\n+\n+    @Override\n+    public Class<? extends Decorator>[] after() {\n+        return new Class[] { NamedResourceDecorator.class };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a1897771a5631b0c622549848fef0c19e5aad19"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE5MDk1Mg==", "bodyText": "Hi @iocanel this was my initial intension and I had implemented it but failed. I now changed it as your said and it seems to be working. I think I had a package problem.\nMy intension was to enable this decorator to work after all NamedResourceDecorators. However, the method you suggested is much more understandable.", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r404190952", "createdAt": "2020-04-06T15:40:00Z", "author": {"login": "cemnura"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import io.dekorate.kubernetes.decorator.ApplyReplicasDecorator;\n+import io.dekorate.kubernetes.decorator.Decorator;\n+import io.dekorate.kubernetes.decorator.NamedResourceDecorator;\n+\n+public class KubernetesApplyReplicasDecorator extends ApplyReplicasDecorator {\n+\n+    public KubernetesApplyReplicasDecorator(int replicas) {\n+        super(replicas);\n+    }\n+\n+    public KubernetesApplyReplicasDecorator(String deploymentName, int replicas) {\n+        super(deploymentName, replicas);\n+    }\n+\n+    @Override\n+    public Class<? extends Decorator>[] after() {\n+        return new Class[] { NamedResourceDecorator.class };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk2MzE4Nw=="}, "originalCommit": {"oid": "6a1897771a5631b0c622549848fef0c19e5aad19"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE5NTI5OA==", "bodyText": "I change the after call to ApplyReplicasDecorator", "url": "https://github.com/quarkusio/quarkus/pull/8312#discussion_r404195298", "createdAt": "2020-04-06T15:45:41Z", "author": {"login": "cemnura"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesApplyReplicasDecorator.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import io.dekorate.kubernetes.decorator.ApplyReplicasDecorator;\n+import io.dekorate.kubernetes.decorator.Decorator;\n+import io.dekorate.kubernetes.decorator.NamedResourceDecorator;\n+\n+public class KubernetesApplyReplicasDecorator extends ApplyReplicasDecorator {\n+\n+    public KubernetesApplyReplicasDecorator(int replicas) {\n+        super(replicas);\n+    }\n+\n+    public KubernetesApplyReplicasDecorator(String deploymentName, int replicas) {\n+        super(deploymentName, replicas);\n+    }\n+\n+    @Override\n+    public Class<? extends Decorator>[] after() {\n+        return new Class[] { NamedResourceDecorator.class };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzk2MzE4Nw=="}, "originalCommit": {"oid": "6a1897771a5631b0c622549848fef0c19e5aad19"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3558, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}