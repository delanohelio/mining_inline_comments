{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMjMwOTg2", "number": 7439, "title": "Prevent cleaning up the build directory when QuarkusProdModeTest fails", "bodyText": "", "createdAt": "2020-02-26T12:52:07Z", "url": "https://github.com/quarkusio/quarkus/pull/7439", "merged": true, "mergeCommit": {"oid": "69cdd593328b1698e6afb8780b8e04ba70d7e203"}, "closed": true, "closedAt": "2020-02-26T16:04:59Z", "author": {"login": "geoand"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIGKP3AH2gAyMzgwMjMwOTg2OjZiY2M4YTUzZTk2NGYyMGEwNWVjNzIwZmI3MzVkOWRkNGU5OWUzOTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcII-JiAFqTM2NTAyODM2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6bcc8a53e964f20a05ec720fb735d9dd4e99e397", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/6bcc8a53e964f20a05ec720fb735d9dd4e99e397", "committedDate": "2020-02-26T12:48:06Z", "message": "Prevent cleaning up the build directory when QuarkusProdModeTest fails\n\nThis is very useful for post-mortem analysis"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODc4ODU0", "url": "https://github.com/quarkusio/quarkus/pull/7439#pullrequestreview-364878854", "createdAt": "2020-02-26T13:03:25Z", "commit": {"oid": "7b95e4a131ddb6ad4e55fc77868a7d39963ec5bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzowMzoyNVrOFuqqKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzowMzoyNVrOFuqqKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ3NzczOA==", "bodyText": "Maybe it would be nice to log.debug here", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384477738", "createdAt": "2020-02-26T13:03:25Z", "author": {"login": "gastaldi"}, "path": "extensions/kubernetes/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -200,6 +200,11 @@ public void build(ApplicationInfoBuildItem applicationInfo,\n                             resourceEntry.getValue().getBytes(StandardCharsets.UTF_8)));\n         }\n \n+        try {\n+            Files.delete(root);\n+        } catch (IOException ignored) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b95e4a131ddb6ad4e55fc77868a7d39963ec5bb"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODc5NDQ3", "url": "https://github.com/quarkusio/quarkus/pull/7439#pullrequestreview-364879447", "createdAt": "2020-02-26T13:04:19Z", "commit": {"oid": "7b95e4a131ddb6ad4e55fc77868a7d39963ec5bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzowNDoxOVrOFuqsBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzowNDoxOVrOFuqsBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ3ODIxNQ==", "bodyText": "Can we use a logger here instead?", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384478215", "createdAt": "2020-02-26T13:04:19Z", "author": {"login": "gastaldi"}, "path": "test-framework/junit5-internal/src/main/java/io/quarkus/test/QuarkusProdModeTest.java", "diffHunk": "@@ -237,48 +240,53 @@ public void run() {\n             exportArchive(deploymentDir, testClass);\n \n             Path testLocation = PathTestHelper.getTestClassesLocation(testClass);\n-            try {\n-                QuarkusBootstrap.Builder builder = QuarkusBootstrap.builder(deploymentDir)\n-                        .setMode(QuarkusBootstrap.Mode.PROD)\n-                        .setLocalProjectDiscovery(true)\n-                        .addExcludedPath(testLocation)\n-                        .setProjectRoot(testLocation)\n-                        .setTargetDirectory(buildDir)\n-                        .setForcedDependencies(forcedDependencies.stream().map(d -> new AppDependency(d, \"compile\"))\n-                                .collect(Collectors.toList()));\n-                if (applicationName != null) {\n-                    builder.setBaseName(applicationName);\n-                }\n-                curatedApplication = builder.build().bootstrap();\n+            QuarkusBootstrap.Builder builder = QuarkusBootstrap.builder(deploymentDir)\n+                    .setMode(QuarkusBootstrap.Mode.PROD)\n+                    .setLocalProjectDiscovery(true)\n+                    .addExcludedPath(testLocation)\n+                    .setProjectRoot(testLocation)\n+                    .setTargetDirectory(buildDir)\n+                    .setForcedDependencies(forcedDependencies.stream().map(d -> new AppDependency(d, \"compile\"))\n+                            .collect(Collectors.toList()));\n+            if (applicationName != null) {\n+                builder.setBaseName(applicationName);\n+            }\n+            curatedApplication = builder.build().bootstrap();\n \n-                AugmentAction action = curatedApplication.createAugmentor();\n-                AugmentResult result = action.createProductionApplication();\n+            AugmentAction action = curatedApplication.createAugmentor();\n+            AugmentResult result = action.createProductionApplication();\n \n-                Path builtResultArtifact = setupProdModeResults(testClass, buildDir, result);\n+            Path builtResultArtifact = setupProdModeResults(testClass, buildDir, result);\n \n-                if (run) {\n-                    startBuiltResult(builtResultArtifact);\n-                    RestAssuredURLManager.setURL(false,\n-                            runtimeProperties.get(QUARKUS_HTTP_PORT_PROPERTY) != null\n-                                    ? Integer.parseInt(runtimeProperties.get(QUARKUS_HTTP_PORT_PROPERTY))\n-                                    : DEFAULT_HTTP_PORT_INT);\n+            if (run) {\n+                startBuiltResult(builtResultArtifact);\n+                RestAssuredURLManager.setURL(false,\n+                        runtimeProperties.get(QUARKUS_HTTP_PORT_PROPERTY) != null\n+                                ? Integer.parseInt(runtimeProperties.get(QUARKUS_HTTP_PORT_PROPERTY))\n+                                : DEFAULT_HTTP_PORT_INT);\n \n-                    if (logfilePath != null) {\n-                        logfileField = Arrays.stream(testClass.getDeclaredFields()).filter(\n-                                f -> f.isAnnotationPresent(LogFile.class) && Path.class.equals(f.getType()))\n-                                .findAny();\n-                        logfileField.ifPresent(f -> f.setAccessible(true));\n-                    }\n+                if (logfilePath != null) {\n+                    logfileField = Arrays.stream(testClass.getDeclaredFields()).filter(\n+                            f -> f.isAnnotationPresent(LogFile.class) && Path.class.equals(f.getType()))\n+                            .findAny();\n+                    logfileField.ifPresent(f -> f.setAccessible(true));\n                 }\n-\n-            } catch (Throwable e) {\n-                throw e;\n             }\n+\n         } catch (Exception e) {\n+            preventOutputDirCleanup = true;\n+            logOutputPathForPostMortem();\n             throw new RuntimeException(e);\n         }\n     }\n \n+    private void logOutputPathForPostMortem() {\n+        if (buildDir != null) {\n+            String message = \"The output of the Quarkus build can be found at \" + buildDir.toAbsolutePath().toString();\n+            System.err.println(message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b95e4a131ddb6ad4e55fc77868a7d39963ec5bb"}, "originalPosition": 120}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b95e4a131ddb6ad4e55fc77868a7d39963ec5bb", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/7b95e4a131ddb6ad4e55fc77868a7d39963ec5bb", "committedDate": "2020-02-26T12:49:31Z", "message": "Cleanup the temporary output of the KubernetesProcessor"}, "afterCommit": {"oid": "c6266c065e78fcd078bd5ef5393ea59e36b52c0a", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/c6266c065e78fcd078bd5ef5393ea59e36b52c0a", "committedDate": "2020-02-26T13:05:51Z", "message": "Cleanup the temporary output of the KubernetesProcessor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODgzODU5", "url": "https://github.com/quarkusio/quarkus/pull/7439#pullrequestreview-364883859", "createdAt": "2020-02-26T13:11:16Z", "commit": {"oid": "c6266c065e78fcd078bd5ef5393ea59e36b52c0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoxMToxN1rOFuq5Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoxMToxN1rOFuq5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MTU5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOG.debug(\"Unable to delete file\", e);\n          \n          \n            \n                        LOG.debug(\"Unable to delete \" + root, e);", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384481590", "createdAt": "2020-02-26T13:11:17Z", "author": {"login": "gastaldi"}, "path": "extensions/kubernetes/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -200,6 +200,11 @@ public void build(ApplicationInfoBuildItem applicationInfo,\n                             resourceEntry.getValue().getBytes(StandardCharsets.UTF_8)));\n         }\n \n+        try {\n+            Files.delete(root);\n+        } catch (IOException e) {\n+            LOG.debug(\"Unable to delete file\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6266c065e78fcd078bd5ef5393ea59e36b52c0a"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6266c065e78fcd078bd5ef5393ea59e36b52c0a", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/c6266c065e78fcd078bd5ef5393ea59e36b52c0a", "committedDate": "2020-02-26T13:05:51Z", "message": "Cleanup the temporary output of the KubernetesProcessor"}, "afterCommit": {"oid": "f11827b494f948b7a01d9c5705e7c995d09800d5", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/f11827b494f948b7a01d9c5705e7c995d09800d5", "committedDate": "2020-02-26T13:12:14Z", "message": "Cleanup the temporary output of the KubernetesProcessor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODg1ODIx", "url": "https://github.com/quarkusio/quarkus/pull/7439#pullrequestreview-364885821", "createdAt": "2020-02-26T13:14:16Z", "commit": {"oid": "f11827b494f948b7a01d9c5705e7c995d09800d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoxNDoxN1rOFuq_Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMzoxNDoxN1rOFuq_Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ4MzEzOQ==", "bodyText": "root is a directory, you need to recurse into its subfolders to delete it", "url": "https://github.com/quarkusio/quarkus/pull/7439#discussion_r384483139", "createdAt": "2020-02-26T13:14:17Z", "author": {"login": "gastaldi"}, "path": "extensions/kubernetes/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -200,6 +200,11 @@ public void build(ApplicationInfoBuildItem applicationInfo,\n                             resourceEntry.getValue().getBytes(StandardCharsets.UTF_8)));\n         }\n \n+        try {\n+            Files.delete(root);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f11827b494f948b7a01d9c5705e7c995d09800d5"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f11827b494f948b7a01d9c5705e7c995d09800d5", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/f11827b494f948b7a01d9c5705e7c995d09800d5", "committedDate": "2020-02-26T13:12:14Z", "message": "Cleanup the temporary output of the KubernetesProcessor"}, "afterCommit": {"oid": "70a719e6c7048d92c9e3e515fc7b94a2c6529e60", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/70a719e6c7048d92c9e3e515fc7b94a2c6529e60", "committedDate": "2020-02-26T13:19:35Z", "message": "Cleanup the temporary output of the KubernetesProcessor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f236978e2ff98b4925fdc24830a6bf8fdb0c1ec7", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/f236978e2ff98b4925fdc24830a6bf8fdb0c1ec7", "committedDate": "2020-02-26T13:20:34Z", "message": "Cleanup the temporary output of the KubernetesProcessor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70a719e6c7048d92c9e3e515fc7b94a2c6529e60", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/70a719e6c7048d92c9e3e515fc7b94a2c6529e60", "committedDate": "2020-02-26T13:19:35Z", "message": "Cleanup the temporary output of the KubernetesProcessor"}, "afterCommit": {"oid": "f236978e2ff98b4925fdc24830a6bf8fdb0c1ec7", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/f236978e2ff98b4925fdc24830a6bf8fdb0c1ec7", "committedDate": "2020-02-26T13:20:34Z", "message": "Cleanup the temporary output of the KubernetesProcessor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODkzMDgx", "url": "https://github.com/quarkusio/quarkus/pull/7439#pullrequestreview-364893081", "createdAt": "2020-02-26T13:25:12Z", "commit": {"oid": "f236978e2ff98b4925fdc24830a6bf8fdb0c1ec7"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MDIxMDg4", "url": "https://github.com/quarkusio/quarkus/pull/7439#pullrequestreview-365021088", "createdAt": "2020-02-26T15:56:53Z", "commit": {"oid": "f236978e2ff98b4925fdc24830a6bf8fdb0c1ec7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1MDI4MzYw", "url": "https://github.com/quarkusio/quarkus/pull/7439#pullrequestreview-365028360", "createdAt": "2020-02-26T16:04:36Z", "commit": {"oid": "f236978e2ff98b4925fdc24830a6bf8fdb0c1ec7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4025, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}