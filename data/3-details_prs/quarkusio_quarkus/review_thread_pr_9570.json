{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNjYyMjc1", "number": 9570, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDo0OTo1NlrOD_WEZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoyMToxMFrOD_YeAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzQ4NDU0OnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmConfig.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMDo0OTo1NlrOGZ9KpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoxNzoyM1rOGaA1sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2OTczMw==", "bodyText": "Hello @geoand, perhaps this should just be defaulted to UTF-8 to remove the inconsistency of system level defaults? AFAIK, Java (in recent versions) too has started defaulting to UTF-8 for some of its IO APIs to avoid this system level inconsistencies.", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r429869733", "createdAt": "2020-05-25T10:49:56Z", "author": {"login": "jaikiran"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmConfig.java", "diffHunk": "@@ -75,6 +76,13 @@\n     @ConfigItem(defaultValueDocumentation = \"import.sql in DEV, TEST ; no-file otherwise\")\n     public Optional<String> sqlLoadScript;\n \n+    /**\n+     * The name of the charset used by the schema generation resource. Without specifying this configuration property, the JVM\n+     * default charset is used.\n+     */\n+    @ConfigItem(defaultValueDocumentation = \"JVM default charset\")\n+    public Optional<Charset> ddlCharset;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b610601ffe00a656c9258b8d02da60792b6feda8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg3MTUzNQ==", "bodyText": "I think that's reasonable, but I didn't because I wanted to keep it consistent with the other charset property.\nIf  @Sanne and @gsmet also think it should be UTF-8, I'll gladly update it.", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r429871535", "createdAt": "2020-05-25T10:54:30Z", "author": {"login": "geoand"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmConfig.java", "diffHunk": "@@ -75,6 +76,13 @@\n     @ConfigItem(defaultValueDocumentation = \"import.sql in DEV, TEST ; no-file otherwise\")\n     public Optional<String> sqlLoadScript;\n \n+    /**\n+     * The name of the charset used by the schema generation resource. Without specifying this configuration property, the JVM\n+     * default charset is used.\n+     */\n+    @ConfigItem(defaultValueDocumentation = \"JVM default charset\")\n+    public Optional<Charset> ddlCharset;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2OTczMw=="}, "originalCommit": {"oid": "b610601ffe00a656c9258b8d02da60792b6feda8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkxOTkyNA==", "bodyText": "My inclination would be to go with UTF-8 by default too.\nI don't like the name though because it's not the DDL charset, it's the charset used for schema generation and the import scripts (or database initialization in general).", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r429919924", "createdAt": "2020-05-25T12:54:55Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmConfig.java", "diffHunk": "@@ -75,6 +76,13 @@\n     @ConfigItem(defaultValueDocumentation = \"import.sql in DEV, TEST ; no-file otherwise\")\n     public Optional<String> sqlLoadScript;\n \n+    /**\n+     * The name of the charset used by the schema generation resource. Without specifying this configuration property, the JVM\n+     * default charset is used.\n+     */\n+    @ConfigItem(defaultValueDocumentation = \"JVM default charset\")\n+    public Optional<Charset> ddlCharset;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2OTczMw=="}, "originalCommit": {"oid": "b610601ffe00a656c9258b8d02da60792b6feda8"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkyOTkwNg==", "bodyText": "Removed this completely", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r429929906", "createdAt": "2020-05-25T13:17:23Z", "author": {"login": "geoand"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmConfig.java", "diffHunk": "@@ -75,6 +76,13 @@\n     @ConfigItem(defaultValueDocumentation = \"import.sql in DEV, TEST ; no-file otherwise\")\n     public Optional<String> sqlLoadScript;\n \n+    /**\n+     * The name of the charset used by the schema generation resource. Without specifying this configuration property, the JVM\n+     * default charset is used.\n+     */\n+    @ConfigItem(defaultValueDocumentation = \"JVM default charset\")\n+    public Optional<Charset> ddlCharset;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg2OTczMw=="}, "originalCommit": {"oid": "b610601ffe00a656c9258b8d02da60792b6feda8"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Nzc3MTQ1OnYy", "diffSide": "RIGHT", "path": "core/runtime/src/main/java/io/quarkus/runtime/configuration/CharsetConverter.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMjo0MzoxN1rOGZ_7yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODo0MTo0M1rOGaUYYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkxNTA4MA==", "bodyText": "Maybe add a Unable to create Charset from: \" + value message? (JVM messages can be very obscure sometimes, not sure about that one)", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r429915080", "createdAt": "2020-05-25T12:43:17Z", "author": {"login": "gsmet"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/configuration/CharsetConverter.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.runtime.configuration;\n+\n+import static io.quarkus.runtime.configuration.ConverterSupport.DEFAULT_QUARKUS_CONVERTER_PRIORITY;\n+\n+import java.io.Serializable;\n+import java.nio.charset.Charset;\n+\n+import javax.annotation.Priority;\n+\n+import org.eclipse.microprofile.config.spi.Converter;\n+\n+/**\n+ * A converter which converts a Charset string into an instance of {@link java.nio.charset.Charset}.\n+ */\n+@Priority(DEFAULT_QUARKUS_CONVERTER_PRIORITY)\n+public class CharsetConverter implements Converter<Charset>, Serializable {\n+\n+    private static final long serialVersionUID = 2320905063828247874L;\n+\n+    @Override\n+    public Charset convert(String value) {\n+        try {\n+            return Charset.forName(value);\n+        } catch (Exception e) {\n+            throw new IllegalArgumentException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b610601ffe00a656c9258b8d02da60792b6feda8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI0NTExNA==", "bodyText": "@geoand did you miss that one? Or is it intended you didn't fix it?", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r430245114", "createdAt": "2020-05-26T08:33:29Z", "author": {"login": "gsmet"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/configuration/CharsetConverter.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.runtime.configuration;\n+\n+import static io.quarkus.runtime.configuration.ConverterSupport.DEFAULT_QUARKUS_CONVERTER_PRIORITY;\n+\n+import java.io.Serializable;\n+import java.nio.charset.Charset;\n+\n+import javax.annotation.Priority;\n+\n+import org.eclipse.microprofile.config.spi.Converter;\n+\n+/**\n+ * A converter which converts a Charset string into an instance of {@link java.nio.charset.Charset}.\n+ */\n+@Priority(DEFAULT_QUARKUS_CONVERTER_PRIORITY)\n+public class CharsetConverter implements Converter<Charset>, Serializable {\n+\n+    private static final long serialVersionUID = 2320905063828247874L;\n+\n+    @Override\n+    public Charset convert(String value) {\n+        try {\n+            return Charset.forName(value);\n+        } catch (Exception e) {\n+            throw new IllegalArgumentException(e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkxNTA4MA=="}, "originalCommit": {"oid": "b610601ffe00a656c9258b8d02da60792b6feda8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI0ODE5Mg==", "bodyText": "Ah, I missed it! Will fix now", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r430248192", "createdAt": "2020-05-26T08:38:30Z", "author": {"login": "geoand"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/configuration/CharsetConverter.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.runtime.configuration;\n+\n+import static io.quarkus.runtime.configuration.ConverterSupport.DEFAULT_QUARKUS_CONVERTER_PRIORITY;\n+\n+import java.io.Serializable;\n+import java.nio.charset.Charset;\n+\n+import javax.annotation.Priority;\n+\n+import org.eclipse.microprofile.config.spi.Converter;\n+\n+/**\n+ * A converter which converts a Charset string into an instance of {@link java.nio.charset.Charset}.\n+ */\n+@Priority(DEFAULT_QUARKUS_CONVERTER_PRIORITY)\n+public class CharsetConverter implements Converter<Charset>, Serializable {\n+\n+    private static final long serialVersionUID = 2320905063828247874L;\n+\n+    @Override\n+    public Charset convert(String value) {\n+        try {\n+            return Charset.forName(value);\n+        } catch (Exception e) {\n+            throw new IllegalArgumentException(e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkxNTA4MA=="}, "originalCommit": {"oid": "b610601ffe00a656c9258b8d02da60792b6feda8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDI1MDA4Mg==", "bodyText": "Fixed", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r430250082", "createdAt": "2020-05-26T08:41:43Z", "author": {"login": "geoand"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/configuration/CharsetConverter.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.runtime.configuration;\n+\n+import static io.quarkus.runtime.configuration.ConverterSupport.DEFAULT_QUARKUS_CONVERTER_PRIORITY;\n+\n+import java.io.Serializable;\n+import java.nio.charset.Charset;\n+\n+import javax.annotation.Priority;\n+\n+import org.eclipse.microprofile.config.spi.Converter;\n+\n+/**\n+ * A converter which converts a Charset string into an instance of {@link java.nio.charset.Charset}.\n+ */\n+@Priority(DEFAULT_QUARKUS_CONVERTER_PRIORITY)\n+public class CharsetConverter implements Converter<Charset>, Serializable {\n+\n+    private static final long serialVersionUID = 2320905063828247874L;\n+\n+    @Override\n+    public Charset convert(String value) {\n+        try {\n+            return Charset.forName(value);\n+        } catch (Exception e) {\n+            throw new IllegalArgumentException(e);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkxNTA4MA=="}, "originalCommit": {"oid": "b610601ffe00a656c9258b8d02da60792b6feda8"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NzgwNTIyOnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMjo1NTo1NVrOGaAQWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoxNzo0MVrOGaA2Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkyMDM0Ng==", "bodyText": "So isn't it already implemented then? :]\n(have a look at the name of the property)", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r429920346", "createdAt": "2020-05-25T12:55:55Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -785,7 +785,7 @@ private void handleHibernateORMWithNoPersistenceXml(\n                 }\n \n                 hibernateConfig.database.charset.ifPresent(\n-                        charset -> desc.getProperties().setProperty(AvailableSettings.HBM2DDL_CHARSET_NAME, charset));\n+                        charset -> desc.getProperties().setProperty(AvailableSettings.HBM2DDL_CHARSET_NAME, charset.name()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b610601ffe00a656c9258b8d02da60792b6feda8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkyMzMwMw==", "bodyText": "Oh man... I didn't even see that this was the same property... F**k", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r429923303", "createdAt": "2020-05-25T13:02:40Z", "author": {"login": "geoand"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -785,7 +785,7 @@ private void handleHibernateORMWithNoPersistenceXml(\n                 }\n \n                 hibernateConfig.database.charset.ifPresent(\n-                        charset -> desc.getProperties().setProperty(AvailableSettings.HBM2DDL_CHARSET_NAME, charset));\n+                        charset -> desc.getProperties().setProperty(AvailableSettings.HBM2DDL_CHARSET_NAME, charset.name()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkyMDM0Ng=="}, "originalCommit": {"oid": "b610601ffe00a656c9258b8d02da60792b6feda8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzMDAyNg==", "bodyText": "Yeah...", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r429930026", "createdAt": "2020-05-25T13:17:41Z", "author": {"login": "geoand"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -785,7 +785,7 @@ private void handleHibernateORMWithNoPersistenceXml(\n                 }\n \n                 hibernateConfig.database.charset.ifPresent(\n-                        charset -> desc.getProperties().setProperty(AvailableSettings.HBM2DDL_CHARSET_NAME, charset));\n+                        charset -> desc.getProperties().setProperty(AvailableSettings.HBM2DDL_CHARSET_NAME, charset.name()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkyMDM0Ng=="}, "originalCommit": {"oid": "b610601ffe00a656c9258b8d02da60792b6feda8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Nzg3NDE1OnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoyMDowM1rOGaA6MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoyNDoxOVrOGaBB5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzMTA1Ng==", "bodyText": "So let's not make it an Optional anymore.", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r429931056", "createdAt": "2020-05-25T13:20:03Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmConfig.java", "diffHunk": "@@ -250,8 +253,8 @@ public boolean isAnyPropertySet() {\n         /**\n          * The charset of the database.\n          */\n-        @ConfigItem\n-        public Optional<String> charset;\n+        @ConfigItem(defaultValue = \"UTF-8\")\n+        public Optional<Charset> charset;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a957a10b11405da56e0f0afd51df20af43cb01fb"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzMzAzMA==", "bodyText": "Good point, done", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r429933030", "createdAt": "2020-05-25T13:24:19Z", "author": {"login": "geoand"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmConfig.java", "diffHunk": "@@ -250,8 +253,8 @@ public boolean isAnyPropertySet() {\n         /**\n          * The charset of the database.\n          */\n-        @ConfigItem\n-        public Optional<String> charset;\n+        @ConfigItem(defaultValue = \"UTF-8\")\n+        public Optional<Charset> charset;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzMTA1Ng=="}, "originalCommit": {"oid": "a957a10b11405da56e0f0afd51df20af43cb01fb"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3Nzg3Nzc5OnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoyMToxMFrOGaA8QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoyNTowMVrOGaBDQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzMTU4NA==", "bodyText": "Maybe add to the doc:\n<p>\nUsed for DDL generation and also for the SQL import scripts.", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r429931584", "createdAt": "2020-05-25T13:21:10Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmConfig.java", "diffHunk": "@@ -250,8 +253,8 @@ public boolean isAnyPropertySet() {\n         /**\n          * The charset of the database.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a957a10b11405da56e0f0afd51df20af43cb01fb"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzMzM3Ng==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/9570#discussion_r429933376", "createdAt": "2020-05-25T13:25:01Z", "author": {"login": "geoand"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmConfig.java", "diffHunk": "@@ -250,8 +253,8 @@ public boolean isAnyPropertySet() {\n         /**\n          * The charset of the database.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzMTU4NA=="}, "originalCommit": {"oid": "a957a10b11405da56e0f0afd51df20af43cb01fb"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2992, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}