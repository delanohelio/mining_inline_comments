{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NTQ2NDk3", "number": 12464, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0NjozN1rOEpwVYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDoxMTozNlrOEvVb3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMjE4OTc3OnYy", "diffSide": "RIGHT", "path": "extensions/liquibase/runtime/src/main/java/io/quarkus/liquibase/runtime/graal/SubstituteStringUtil.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwOTo0NjozN1rOHbnn7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDo1ODo1NlrOHgCUqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMjc5OA==", "bodyText": "I wonder if we could use NewInstance instead of Reset and get rid of the method substitution.", "url": "https://github.com/quarkusio/quarkus/pull/12464#discussion_r498722798", "createdAt": "2020-10-02T09:46:37Z", "author": {"login": "gsmet"}, "path": "extensions/liquibase/runtime/src/main/java/io/quarkus/liquibase/runtime/graal/SubstituteStringUtil.java", "diffHunk": "@@ -13,4 +14,14 @@\n     @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.Reset)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90cba41efd978140168cbdc2df07f4f38c2f9f55"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMzE4Ng==", "bodyText": "I will try it", "url": "https://github.com/quarkusio/quarkus/pull/12464#discussion_r498723186", "createdAt": "2020-10-02T09:47:26Z", "author": {"login": "andrejpetras"}, "path": "extensions/liquibase/runtime/src/main/java/io/quarkus/liquibase/runtime/graal/SubstituteStringUtil.java", "diffHunk": "@@ -13,4 +14,14 @@\n     @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.Reset)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMjc5OA=="}, "originalCommit": {"oid": "90cba41efd978140168cbdc2df07f4f38c2f9f55"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODkyNzkyMA==", "bodyText": "I remove the method and switch to NewInstance and got the following error:\nCaused by: com.oracle.svm.core.jdk.UnsupportedFeatureError: Code that was considered unreachable by closed-world analysis was reached. The call to java.util.Random.nextInt(int) is not reachable.\n        at com.oracle.svm.core.util.VMError.unsupportedFeature(VMError.java:86)\n        at com.oracle.svm.core.snippets.SnippetRuntime.unsupportedFeature(SnippetRuntime.java:153)\n        at liquibase.util.StringUtil.randomIdentifer(StringUtil.java:498)\n        at liquibase.Scope.enter(Scope.java:191)", "url": "https://github.com/quarkusio/quarkus/pull/12464#discussion_r498927920", "createdAt": "2020-10-02T16:33:46Z", "author": {"login": "andrejpetras"}, "path": "extensions/liquibase/runtime/src/main/java/io/quarkus/liquibase/runtime/graal/SubstituteStringUtil.java", "diffHunk": "@@ -13,4 +14,14 @@\n     @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.Reset)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMjc5OA=="}, "originalCommit": {"oid": "90cba41efd978140168cbdc2df07f4f38c2f9f55"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4MjkwOA==", "bodyText": "@gsmet do you have any suggestion how to get rid of the method?", "url": "https://github.com/quarkusio/quarkus/pull/12464#discussion_r500182908", "createdAt": "2020-10-06T10:54:27Z", "author": {"login": "andrejpetras"}, "path": "extensions/liquibase/runtime/src/main/java/io/quarkus/liquibase/runtime/graal/SubstituteStringUtil.java", "diffHunk": "@@ -13,4 +14,14 @@\n     @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.Reset)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMjc5OA=="}, "originalCommit": {"oid": "90cba41efd978140168cbdc2df07f4f38c2f9f55"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDE4ODE1NQ==", "bodyText": "@galderz any hint?\nApparently, if we use RESET we get a NPE and we have to reimplement the method using a local SecureRandom which is not very efficient. This looks a bit odd to me, I would have expected RESET to initialize the field properly.", "url": "https://github.com/quarkusio/quarkus/pull/12464#discussion_r500188155", "createdAt": "2020-10-06T11:04:25Z", "author": {"login": "gsmet"}, "path": "extensions/liquibase/runtime/src/main/java/io/quarkus/liquibase/runtime/graal/SubstituteStringUtil.java", "diffHunk": "@@ -13,4 +14,14 @@\n     @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.Reset)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMjc5OA=="}, "originalCommit": {"oid": "90cba41efd978140168cbdc2df07f4f38c2f9f55"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1NDUzNw==", "bodyText": "@galderz any chance you could have a look at this? Or have someone with native image knowledge to have a look? Thanks!", "url": "https://github.com/quarkusio/quarkus/pull/12464#discussion_r503354537", "createdAt": "2020-10-12T14:58:56Z", "author": {"login": "gsmet"}, "path": "extensions/liquibase/runtime/src/main/java/io/quarkus/liquibase/runtime/graal/SubstituteStringUtil.java", "diffHunk": "@@ -13,4 +14,14 @@\n     @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.Reset)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODcyMjc5OA=="}, "originalCommit": {"oid": "90cba41efd978140168cbdc2df07f4f38c2f9f55"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDY5NzI2OnYy", "diffSide": "RIGHT", "path": "extensions/liquibase/runtime/src/main/java/io/quarkus/liquibase/runtime/graal/SubstituteStringUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDoxMTozNlrOHkQhLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjozODo1OFrOHkXhQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4MTQyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            synchronized (SubstituteStringUtil.class) {\n          \n          \n            \n                            synchronized (SecureRandomAccessors.class) {", "url": "https://github.com/quarkusio/quarkus/pull/12464#discussion_r507781423", "createdAt": "2020-10-19T14:11:36Z", "author": {"login": "gastaldi"}, "path": "extensions/liquibase/runtime/src/main/java/io/quarkus/liquibase/runtime/graal/SubstituteStringUtil.java", "diffHunk": "@@ -3,14 +3,35 @@\n import java.security.SecureRandom;\n \n import com.oracle.svm.core.annotate.Alias;\n-import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.InjectAccessors;\n import com.oracle.svm.core.annotate.TargetClass;\n \n @TargetClass(className = \"liquibase.util.StringUtil\")\n final class SubstituteStringUtil {\n \n     @Alias\n-    @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.Reset)\n+    @InjectAccessors(SecureRandomAccessors.class)\n     private static SecureRandom rnd;\n \n+    public static final class SecureRandomAccessors {\n+\n+        private static volatile SecureRandom volatileRandom;\n+\n+        public static SecureRandom get() {\n+            SecureRandom localVolatileRandom = volatileRandom;\n+            if (localVolatileRandom == null) {\n+                synchronized (SubstituteStringUtil.class) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb8de48048ef36e1428d5c66b386bca3ea75856c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4NzE0OA==", "bodyText": "I wasn't exactly sure this class would exist in its current form with GraalVM doing its magic. That's why I did it this way.\nI can try the other way though and see if it works.", "url": "https://github.com/quarkusio/quarkus/pull/12464#discussion_r507787148", "createdAt": "2020-10-19T14:18:33Z", "author": {"login": "gsmet"}, "path": "extensions/liquibase/runtime/src/main/java/io/quarkus/liquibase/runtime/graal/SubstituteStringUtil.java", "diffHunk": "@@ -3,14 +3,35 @@\n import java.security.SecureRandom;\n \n import com.oracle.svm.core.annotate.Alias;\n-import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.InjectAccessors;\n import com.oracle.svm.core.annotate.TargetClass;\n \n @TargetClass(className = \"liquibase.util.StringUtil\")\n final class SubstituteStringUtil {\n \n     @Alias\n-    @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.Reset)\n+    @InjectAccessors(SecureRandomAccessors.class)\n     private static SecureRandom rnd;\n \n+    public static final class SecureRandomAccessors {\n+\n+        private static volatile SecureRandom volatileRandom;\n+\n+        public static SecureRandom get() {\n+            SecureRandom localVolatileRandom = volatileRandom;\n+            if (localVolatileRandom == null) {\n+                synchronized (SubstituteStringUtil.class) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4MTQyMw=="}, "originalCommit": {"oid": "bb8de48048ef36e1428d5c66b386bca3ea75856c"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg5NjEyOA==", "bodyText": "It worked so I pushed an update.", "url": "https://github.com/quarkusio/quarkus/pull/12464#discussion_r507896128", "createdAt": "2020-10-19T16:38:58Z", "author": {"login": "gsmet"}, "path": "extensions/liquibase/runtime/src/main/java/io/quarkus/liquibase/runtime/graal/SubstituteStringUtil.java", "diffHunk": "@@ -3,14 +3,35 @@\n import java.security.SecureRandom;\n \n import com.oracle.svm.core.annotate.Alias;\n-import com.oracle.svm.core.annotate.RecomputeFieldValue;\n+import com.oracle.svm.core.annotate.InjectAccessors;\n import com.oracle.svm.core.annotate.TargetClass;\n \n @TargetClass(className = \"liquibase.util.StringUtil\")\n final class SubstituteStringUtil {\n \n     @Alias\n-    @RecomputeFieldValue(kind = RecomputeFieldValue.Kind.Reset)\n+    @InjectAccessors(SecureRandomAccessors.class)\n     private static SecureRandom rnd;\n \n+    public static final class SecureRandomAccessors {\n+\n+        private static volatile SecureRandom volatileRandom;\n+\n+        public static SecureRandom get() {\n+            SecureRandom localVolatileRandom = volatileRandom;\n+            if (localVolatileRandom == null) {\n+                synchronized (SubstituteStringUtil.class) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc4MTQyMw=="}, "originalCommit": {"oid": "bb8de48048ef36e1428d5c66b386bca3ea75856c"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4343, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}