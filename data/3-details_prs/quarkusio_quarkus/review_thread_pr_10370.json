{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMDI0OTE4", "number": 10370, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDowMjo0MFrOEKHMSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDowMjo0MFrOEKHMSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDM5MDUxOnYy", "diffSide": "RIGHT", "path": "integration-tests/kubernetes/quarkus-standard-way/src/test/java/io/quarkus/it/kubernetes/OpenshiftWithApplicationPropertiesTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxNDowMjo0MFrOGq95rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMTowNDo0NVrOGrOa6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwNzU2NA==", "bodyText": "Can we also add a check for annotations?", "url": "https://github.com/quarkusio/quarkus/pull/10370#discussion_r447707564", "createdAt": "2020-06-30T14:02:40Z", "author": {"login": "geoand"}, "path": "integration-tests/kubernetes/quarkus-standard-way/src/test/java/io/quarkus/it/kubernetes/OpenshiftWithApplicationPropertiesTest.java", "diffHunk": "@@ -66,6 +67,14 @@ public void assertGeneratedResources() throws IOException {\n             });\n         });\n \n-        assertThat(openshiftList).filteredOn(h -> \"Route\".equals(h.getKind())).hasSize(1);\n+        assertThat(openshiftList).filteredOn(i -> \"Route\".equals(i.getKind())).hasOnlyOneElementSatisfying(i -> {\n+            assertThat(i).isInstanceOfSatisfying(Route.class, in -> {\n+                //Check that lables are also applied to Routes (#10260)\n+                assertThat(i.getMetadata()).satisfies(m -> {\n+                    assertThat(m.getName()).isEqualTo(\"test-it\");\n+                    assertThat(m.getLabels()).contains(entry(\"foo\", \"bar\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9263f1d67bf7bcfc39e44f8a767c4604cddd99da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk0MDA5OA==", "bodyText": "@iocanel can you please add a check for annotations as well?", "url": "https://github.com/quarkusio/quarkus/pull/10370#discussion_r447940098", "createdAt": "2020-06-30T19:51:49Z", "author": {"login": "geoand"}, "path": "integration-tests/kubernetes/quarkus-standard-way/src/test/java/io/quarkus/it/kubernetes/OpenshiftWithApplicationPropertiesTest.java", "diffHunk": "@@ -66,6 +67,14 @@ public void assertGeneratedResources() throws IOException {\n             });\n         });\n \n-        assertThat(openshiftList).filteredOn(h -> \"Route\".equals(h.getKind())).hasSize(1);\n+        assertThat(openshiftList).filteredOn(i -> \"Route\".equals(i.getKind())).hasOnlyOneElementSatisfying(i -> {\n+            assertThat(i).isInstanceOfSatisfying(Route.class, in -> {\n+                //Check that lables are also applied to Routes (#10260)\n+                assertThat(i.getMetadata()).satisfies(m -> {\n+                    assertThat(m.getName()).isEqualTo(\"test-it\");\n+                    assertThat(m.getLabels()).contains(entry(\"foo\", \"bar\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwNzU2NA=="}, "originalCommit": {"oid": "9263f1d67bf7bcfc39e44f8a767c4604cddd99da"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzk3ODIxOA==", "bodyText": "Sure", "url": "https://github.com/quarkusio/quarkus/pull/10370#discussion_r447978218", "createdAt": "2020-06-30T21:04:45Z", "author": {"login": "iocanel"}, "path": "integration-tests/kubernetes/quarkus-standard-way/src/test/java/io/quarkus/it/kubernetes/OpenshiftWithApplicationPropertiesTest.java", "diffHunk": "@@ -66,6 +67,14 @@ public void assertGeneratedResources() throws IOException {\n             });\n         });\n \n-        assertThat(openshiftList).filteredOn(h -> \"Route\".equals(h.getKind())).hasSize(1);\n+        assertThat(openshiftList).filteredOn(i -> \"Route\".equals(i.getKind())).hasOnlyOneElementSatisfying(i -> {\n+            assertThat(i).isInstanceOfSatisfying(Route.class, in -> {\n+                //Check that lables are also applied to Routes (#10260)\n+                assertThat(i.getMetadata()).satisfies(m -> {\n+                    assertThat(m.getName()).isEqualTo(\"test-it\");\n+                    assertThat(m.getLabels()).contains(entry(\"foo\", \"bar\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzcwNzU2NA=="}, "originalCommit": {"oid": "9263f1d67bf7bcfc39e44f8a767c4604cddd99da"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2733, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}