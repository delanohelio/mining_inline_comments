{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM3MTExOTg3", "number": 13843, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjo1ODozNVrOFEE66Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjo1ODozNVrOFEE66Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5ODE5MjQxOnYy", "diffSide": "RIGHT", "path": "extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/deployment/LiquibaseProcessor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNjo1ODozNVrOIEBhfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxODoyMzozMlrOIEEoLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA5MDE3NQ==", "bodyText": "Maybe it makes sense to only have Precondition do this and keep the others like they are?", "url": "https://github.com/quarkusio/quarkus/pull/13843#discussion_r541090175", "createdAt": "2020-12-11T16:58:35Z", "author": {"login": "geoand"}, "path": "extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/deployment/LiquibaseProcessor.java", "diffHunk": "@@ -169,7 +170,7 @@ private void addService(BuildProducer<ServiceProviderBuildItem> services,\n                     service);\n             services.produce(new ServiceProviderBuildItem(serviceClass.getName(), implementations.toArray(new String[0])));\n \n-            reflective.produce(new ReflectiveClassBuildItem(true, true, false, implementations.toArray(new String[0])));\n+            reflective.produce(new ReflectiveClassBuildItem(true, true, true, implementations.toArray(new String[0])));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ab2e42af2062e5444dee956585dd0ca9561e16b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEzMjA5Ng==", "bodyText": "We can do that. I thought so too but I think the reason I went with this implementation is that the others do not have fields that are set reflectively.", "url": "https://github.com/quarkusio/quarkus/pull/13843#discussion_r541132096", "createdAt": "2020-12-11T18:07:50Z", "author": {"login": "machi1990"}, "path": "extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/deployment/LiquibaseProcessor.java", "diffHunk": "@@ -169,7 +170,7 @@ private void addService(BuildProducer<ServiceProviderBuildItem> services,\n                     service);\n             services.produce(new ServiceProviderBuildItem(serviceClass.getName(), implementations.toArray(new String[0])));\n \n-            reflective.produce(new ReflectiveClassBuildItem(true, true, false, implementations.toArray(new String[0])));\n+            reflective.produce(new ReflectiveClassBuildItem(true, true, true, implementations.toArray(new String[0])));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA5MDE3NQ=="}, "originalCommit": {"oid": "7ab2e42af2062e5444dee956585dd0ca9561e16b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEzMjI2Nw==", "bodyText": "We can make it explicit and it won't be a harm.", "url": "https://github.com/quarkusio/quarkus/pull/13843#discussion_r541132267", "createdAt": "2020-12-11T18:08:12Z", "author": {"login": "machi1990"}, "path": "extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/deployment/LiquibaseProcessor.java", "diffHunk": "@@ -169,7 +170,7 @@ private void addService(BuildProducer<ServiceProviderBuildItem> services,\n                     service);\n             services.produce(new ServiceProviderBuildItem(serviceClass.getName(), implementations.toArray(new String[0])));\n \n-            reflective.produce(new ReflectiveClassBuildItem(true, true, false, implementations.toArray(new String[0])));\n+            reflective.produce(new ReflectiveClassBuildItem(true, true, true, implementations.toArray(new String[0])));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA5MDE3NQ=="}, "originalCommit": {"oid": "7ab2e42af2062e5444dee956585dd0ca9561e16b"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTE0MTAzOA==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/13843#discussion_r541141038", "createdAt": "2020-12-11T18:23:32Z", "author": {"login": "machi1990"}, "path": "extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/deployment/LiquibaseProcessor.java", "diffHunk": "@@ -169,7 +170,7 @@ private void addService(BuildProducer<ServiceProviderBuildItem> services,\n                     service);\n             services.produce(new ServiceProviderBuildItem(serviceClass.getName(), implementations.toArray(new String[0])));\n \n-            reflective.produce(new ReflectiveClassBuildItem(true, true, false, implementations.toArray(new String[0])));\n+            reflective.produce(new ReflectiveClassBuildItem(true, true, true, implementations.toArray(new String[0])));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTA5MDE3NQ=="}, "originalCommit": {"oid": "7ab2e42af2062e5444dee956585dd0ca9561e16b"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4508, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}