{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5OTM5MDY5", "number": 6938, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwOTo1MjoyOVrODcktGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzoxMjoyNlrODcoFxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMjg4MDkxOnYy", "diffSide": "RIGHT", "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QwOTo1MjoyOVrOFkrolA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODozMjo0NlrOFk7eCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAwNzk1Ng==", "bodyText": "This doesn't work in JDK 8 AFAIK", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374007956", "createdAt": "2020-02-03T09:52:29Z", "author": {"login": "gastaldi"}, "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.quarkus.gradle;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import org.gradle.testkit.runner.BuildResult;\n+import org.gradle.testkit.runner.GradleRunner;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+public class TaskDependenciesFunctionalTest {\n+    @TempDir Path projectDir;\n+\n+    /**\n+     * Ensure that all Test tasks depend on the task\n+     * QuarkusTestConfig\n+     * This should include Test tasks created after the\n+     * plugin is applied (such as acceptTest in this test).\n+     */\n+    @Test\n+    public void shouldMakeTestTasksDependOnQuarkusTestConfig() throws IOException {\n+        createBuildFile();\n+        \n+        BuildResult build = GradleRunner.create()\n+                .withProjectDir(projectDir.toFile())\n+                .withArguments(\"-m\", \"acceptTest\")\n+                .withPluginClasspath()\n+                .build();\n+        \n+        assertThat(build.getOutput()).contains(\":quarkusTestConfig SKIPPED\");\n+    }\n+\n+    private void createBuildFile() throws IOException {\n+        Path buildFile = projectDir.resolve(\"build.gradle\");\n+        \n+        try (InputStream is = getClass().getResourceAsStream(\"/TaskDependenciesFunctionalTest.gradle\")) {\n+            String txt = new String(is.readAllBytes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fad3174c59c292c793aaa2d28f7b9c3aa9a1a8dd"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAyODkyNQ==", "bodyText": "Really?\nWould the compiler not have caught that - source/target level is 8.\nBut I will test it on java8 as well.", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374028925", "createdAt": "2020-02-03T10:35:51Z", "author": {"login": "jskov-jyskebank-dk"}, "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.quarkus.gradle;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import org.gradle.testkit.runner.BuildResult;\n+import org.gradle.testkit.runner.GradleRunner;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+public class TaskDependenciesFunctionalTest {\n+    @TempDir Path projectDir;\n+\n+    /**\n+     * Ensure that all Test tasks depend on the task\n+     * QuarkusTestConfig\n+     * This should include Test tasks created after the\n+     * plugin is applied (such as acceptTest in this test).\n+     */\n+    @Test\n+    public void shouldMakeTestTasksDependOnQuarkusTestConfig() throws IOException {\n+        createBuildFile();\n+        \n+        BuildResult build = GradleRunner.create()\n+                .withProjectDir(projectDir.toFile())\n+                .withArguments(\"-m\", \"acceptTest\")\n+                .withPluginClasspath()\n+                .build();\n+        \n+        assertThat(build.getOutput()).contains(\":quarkusTestConfig SKIPPED\");\n+    }\n+\n+    private void createBuildFile() throws IOException {\n+        Path buildFile = projectDir.resolve(\"build.gradle\");\n+        \n+        try (InputStream is = getClass().getResourceAsStream(\"/TaskDependenciesFunctionalTest.gradle\")) {\n+            String txt = new String(is.readAllBytes());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAwNzk1Ng=="}, "originalCommit": {"oid": "fad3174c59c292c793aaa2d28f7b9c3aa9a1a8dd"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA5MjAyNw==", "bodyText": "Pretty sure it won't work if you compile with JDK 8: https://docs.oracle.com/javase/9/docs/api/java/io/InputStream.html#readAllBytes--", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374092027", "createdAt": "2020-02-03T13:09:48Z", "author": {"login": "gastaldi"}, "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.quarkus.gradle;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import org.gradle.testkit.runner.BuildResult;\n+import org.gradle.testkit.runner.GradleRunner;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+public class TaskDependenciesFunctionalTest {\n+    @TempDir Path projectDir;\n+\n+    /**\n+     * Ensure that all Test tasks depend on the task\n+     * QuarkusTestConfig\n+     * This should include Test tasks created after the\n+     * plugin is applied (such as acceptTest in this test).\n+     */\n+    @Test\n+    public void shouldMakeTestTasksDependOnQuarkusTestConfig() throws IOException {\n+        createBuildFile();\n+        \n+        BuildResult build = GradleRunner.create()\n+                .withProjectDir(projectDir.toFile())\n+                .withArguments(\"-m\", \"acceptTest\")\n+                .withPluginClasspath()\n+                .build();\n+        \n+        assertThat(build.getOutput()).contains(\":quarkusTestConfig SKIPPED\");\n+    }\n+\n+    private void createBuildFile() throws IOException {\n+        Path buildFile = projectDir.resolve(\"build.gradle\");\n+        \n+        try (InputStream is = getClass().getResourceAsStream(\"/TaskDependenciesFunctionalTest.gradle\")) {\n+            String txt = new String(is.readAllBytes());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAwNzk1Ng=="}, "originalCommit": {"oid": "fad3174c59c292c793aaa2d28f7b9c3aa9a1a8dd"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2NzQwMg==", "bodyText": "What a pain in the butt. Gradle, Maven, and Eclipse all conspire to hide this when using a newer JDK.\nTIL!", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374267402", "createdAt": "2020-02-03T18:32:46Z", "author": {"login": "jskov"}, "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.quarkus.gradle;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import org.gradle.testkit.runner.BuildResult;\n+import org.gradle.testkit.runner.GradleRunner;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+public class TaskDependenciesFunctionalTest {\n+    @TempDir Path projectDir;\n+\n+    /**\n+     * Ensure that all Test tasks depend on the task\n+     * QuarkusTestConfig\n+     * This should include Test tasks created after the\n+     * plugin is applied (such as acceptTest in this test).\n+     */\n+    @Test\n+    public void shouldMakeTestTasksDependOnQuarkusTestConfig() throws IOException {\n+        createBuildFile();\n+        \n+        BuildResult build = GradleRunner.create()\n+                .withProjectDir(projectDir.toFile())\n+                .withArguments(\"-m\", \"acceptTest\")\n+                .withPluginClasspath()\n+                .build();\n+        \n+        assertThat(build.getOutput()).contains(\":quarkusTestConfig SKIPPED\");\n+    }\n+\n+    private void createBuildFile() throws IOException {\n+        Path buildFile = projectDir.resolve(\"build.gradle\");\n+        \n+        try (InputStream is = getClass().getResourceAsStream(\"/TaskDependenciesFunctionalTest.gradle\")) {\n+            String txt = new String(is.readAllBytes());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDAwNzk1Ng=="}, "originalCommit": {"oid": "fad3174c59c292c793aaa2d28f7b9c3aa9a1a8dd"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzQzMDU3OnYy", "diffSide": "RIGHT", "path": "devtools/gradle/src/main/java/io/quarkus/gradle/QuarkusPlugin.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzoxMDo0MFrOFkwyQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxODozMDo1N1rOFk7aZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA5MjM1NA==", "bodyText": "tasks.withType(Test.class).whenTaskAdded(configureTestTask) ?", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374092354", "createdAt": "2020-02-03T13:10:40Z", "author": {"login": "gastaldi"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/QuarkusPlugin.java", "diffHunk": "@@ -104,15 +105,18 @@ private void registerTasks(Project project) {\n                     Task testNative = tasks.create(TEST_NATIVE_TASK_NAME, QuarkusTestNative.class);\n                     testNative.dependsOn(buildNative);\n                     testNative.setShouldRunAfter(Collections.singletonList(tasks.findByName(JavaPlugin.TEST_TASK_NAME)));\n-                    tasks.withType(Test.class).forEach(t -> {\n+\n+                    Consumer<Test> configureTestTask = t -> {\n                         // Quarkus test configuration task which should be executed before any Quarkus test\n                         t.dependsOn(quarkusTestConfig);\n                         // also make each task use the JUnit platform since it's the only supported test environment\n                         t.useJUnitPlatform();\n-                    });\n+                    };\n+                    tasks.withType(Test.class).forEach(configureTestTask);\n+                    tasks.withType(Test.class).whenTaskAdded(t -> configureTestTask.accept(t));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fad3174c59c292c793aaa2d28f7b9c3aa9a1a8dd"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI2NjQ3MA==", "bodyText": "Can't. It takes an Action, which is not compatible with Consumer.", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374266470", "createdAt": "2020-02-03T18:30:57Z", "author": {"login": "jskov"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/QuarkusPlugin.java", "diffHunk": "@@ -104,15 +105,18 @@ private void registerTasks(Project project) {\n                     Task testNative = tasks.create(TEST_NATIVE_TASK_NAME, QuarkusTestNative.class);\n                     testNative.dependsOn(buildNative);\n                     testNative.setShouldRunAfter(Collections.singletonList(tasks.findByName(JavaPlugin.TEST_TASK_NAME)));\n-                    tasks.withType(Test.class).forEach(t -> {\n+\n+                    Consumer<Test> configureTestTask = t -> {\n                         // Quarkus test configuration task which should be executed before any Quarkus test\n                         t.dependsOn(quarkusTestConfig);\n                         // also make each task use the JUnit platform since it's the only supported test environment\n                         t.useJUnitPlatform();\n-                    });\n+                    };\n+                    tasks.withType(Test.class).forEach(configureTestTask);\n+                    tasks.withType(Test.class).whenTaskAdded(t -> configureTestTask.accept(t));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA5MjM1NA=="}, "originalCommit": {"oid": "fad3174c59c292c793aaa2d28f7b9c3aa9a1a8dd"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzQzNTU3OnYy", "diffSide": "RIGHT", "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzoxMjoyNlrOFkw1HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzoxMjoyNlrOFkw1HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA5MzA4NA==", "bodyText": "This is also not compatible with JDK 8 as Files.writeString was introduced in JDK 11", "url": "https://github.com/quarkusio/quarkus/pull/6938#discussion_r374093084", "createdAt": "2020-02-03T13:12:26Z", "author": {"login": "gastaldi"}, "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/TaskDependenciesFunctionalTest.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package io.quarkus.gradle;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+\n+import org.gradle.testkit.runner.BuildResult;\n+import org.gradle.testkit.runner.GradleRunner;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.io.TempDir;\n+\n+public class TaskDependenciesFunctionalTest {\n+    @TempDir Path projectDir;\n+\n+    /**\n+     * Ensure that all Test tasks depend on the task\n+     * QuarkusTestConfig\n+     * This should include Test tasks created after the\n+     * plugin is applied (such as acceptTest in this test).\n+     */\n+    @Test\n+    public void shouldMakeTestTasksDependOnQuarkusTestConfig() throws IOException {\n+        createBuildFile();\n+        \n+        BuildResult build = GradleRunner.create()\n+                .withProjectDir(projectDir.toFile())\n+                .withArguments(\"-m\", \"acceptTest\")\n+                .withPluginClasspath()\n+                .build();\n+        \n+        assertThat(build.getOutput()).contains(\":quarkusTestConfig SKIPPED\");\n+    }\n+\n+    private void createBuildFile() throws IOException {\n+        Path buildFile = projectDir.resolve(\"build.gradle\");\n+        \n+        try (InputStream is = getClass().getResourceAsStream(\"/TaskDependenciesFunctionalTest.gradle\")) {\n+            String txt = new String(is.readAllBytes());\n+            Files.writeString(buildFile, txt);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fad3174c59c292c793aaa2d28f7b9c3aa9a1a8dd"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1081, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}