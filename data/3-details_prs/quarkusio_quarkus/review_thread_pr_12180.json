{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MDEyNjc4", "number": 12180, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDo1NzoxMlrOElAW3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDo1NzoxMlrOElAW3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MjM4NjIzOnYy", "diffSide": "RIGHT", "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNDo1NzoxMlrOHUQuWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNToyMToyNFrOHURoSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAwNzU3Ng==", "bodyText": "minor nit, should the variable name change from metricsContext?", "url": "https://github.com/quarkusio/quarkus/pull/12180#discussion_r491007576", "createdAt": "2020-09-18T14:57:12Z", "author": {"login": "kenfinnigan"}, "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java", "diffHunk": "@@ -68,97 +70,110 @@\n     /**\n      * Called when an http server response is pushed.\n      *\n-     * @param socketMetric a MetricsContext object for socket metric context\n+     * @param socketMetric a Map for socket metric context or null\n      * @param method the pushed response method\n      * @param uri the pushed response uri\n      * @param response the http server response\n-     * @return a MetricsContext object for request metric context or null\n+     * @return a RequestMetricContext\n      */\n     @Override\n-    public MetricsContext responsePushed(MetricsContext socketMetric, HttpMethod method, String uri,\n+    public RequestMetric responsePushed(Map<String, Object> socketMetric, HttpMethod method, String uri,\n             HttpServerResponse response) {\n+        RequestMetric metricContext = new RequestMetric();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6401584475fdaf32b0608db3df35f8b80ef0966"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAxMTgxNw==", "bodyText": "Am I correct in saying metricContext just returns a new RequestMetric that isn't hooked into anything? Could the method just return a new instance?", "url": "https://github.com/quarkusio/quarkus/pull/12180#discussion_r491011817", "createdAt": "2020-09-18T15:04:09Z", "author": {"login": "kenfinnigan"}, "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java", "diffHunk": "@@ -68,97 +70,110 @@\n     /**\n      * Called when an http server response is pushed.\n      *\n-     * @param socketMetric a MetricsContext object for socket metric context\n+     * @param socketMetric a Map for socket metric context or null\n      * @param method the pushed response method\n      * @param uri the pushed response uri\n      * @param response the http server response\n-     * @return a MetricsContext object for request metric context or null\n+     * @return a RequestMetricContext\n      */\n     @Override\n-    public MetricsContext responsePushed(MetricsContext socketMetric, HttpMethod method, String uri,\n+    public RequestMetric responsePushed(Map<String, Object> socketMetric, HttpMethod method, String uri,\n             HttpServerResponse response) {\n+        RequestMetric metricContext = new RequestMetric();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAwNzU3Ng=="}, "originalCommit": {"oid": "a6401584475fdaf32b0608db3df35f8b80ef0966"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAxMjQyMg==", "bodyText": "Should this be using retrieveRequestMetric ?", "url": "https://github.com/quarkusio/quarkus/pull/12180#discussion_r491012422", "createdAt": "2020-09-18T15:05:08Z", "author": {"login": "kenfinnigan"}, "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java", "diffHunk": "@@ -68,97 +70,110 @@\n     /**\n      * Called when an http server response is pushed.\n      *\n-     * @param socketMetric a MetricsContext object for socket metric context\n+     * @param socketMetric a Map for socket metric context or null\n      * @param method the pushed response method\n      * @param uri the pushed response uri\n      * @param response the http server response\n-     * @return a MetricsContext object for request metric context or null\n+     * @return a RequestMetricContext\n      */\n     @Override\n-    public MetricsContext responsePushed(MetricsContext socketMetric, HttpMethod method, String uri,\n+    public RequestMetric responsePushed(Map<String, Object> socketMetric, HttpMethod method, String uri,\n             HttpServerResponse response) {\n+        RequestMetric metricContext = new RequestMetric();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAwNzU3Ng=="}, "originalCommit": {"oid": "a6401584475fdaf32b0608db3df35f8b80ef0966"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAyMjQxMA==", "bodyText": "you are correct in that it creates and returns a RequestMetric ... but Vertx uses that returned object for later things. In the case of push, that's HTTP2/Stream, and it is difficult to follow where that is used.\nNote that any of the objects passed to/from these methods aren't interpreted by Vert.x .. it just takes them, and passes them back later. The responsePushed callback is especially weird re: parameters.\nsetRequestMetric/retrieveRequestMetric are specific to synchronous requests that go through handlers to work around a disconnect between the HttpServerRequest and the RoutingContext. HttpServerRequest has no storage in it, and requestBegin is called before the response is created (which is where cookies are stored.. ), so you can't even cheat and use cookies to pass the RequestMetric along to have RoutingContext added to it. As @stuartwdouglas says (quoted in javadoc): YUCK.", "url": "https://github.com/quarkusio/quarkus/pull/12180#discussion_r491022410", "createdAt": "2020-09-18T15:21:24Z", "author": {"login": "ebullient"}, "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java", "diffHunk": "@@ -68,97 +70,110 @@\n     /**\n      * Called when an http server response is pushed.\n      *\n-     * @param socketMetric a MetricsContext object for socket metric context\n+     * @param socketMetric a Map for socket metric context or null\n      * @param method the pushed response method\n      * @param uri the pushed response uri\n      * @param response the http server response\n-     * @return a MetricsContext object for request metric context or null\n+     * @return a RequestMetricContext\n      */\n     @Override\n-    public MetricsContext responsePushed(MetricsContext socketMetric, HttpMethod method, String uri,\n+    public RequestMetric responsePushed(Map<String, Object> socketMetric, HttpMethod method, String uri,\n             HttpServerResponse response) {\n+        RequestMetric metricContext = new RequestMetric();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAwNzU3Ng=="}, "originalCommit": {"oid": "a6401584475fdaf32b0608db3df35f8b80ef0966"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 324, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}