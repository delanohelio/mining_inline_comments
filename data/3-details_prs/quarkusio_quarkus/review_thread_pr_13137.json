{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MDY4ODgw", "number": 13137, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToyMToxMVrOE2INKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToyMjoxMFrOE2IOtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTkzMDAyOnYy", "diffSide": "RIGHT", "path": "integration-tests/spring-data-jpa/src/main/java/io/quarkus/it/spring/data/jpa/PostResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToyMToxMVrOHuyTKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjowMToyMFrOHuz3sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMDY1MA==", "bodyText": "Is there a reason this is commented out?", "url": "https://github.com/quarkusio/quarkus/pull/13137#discussion_r518820650", "createdAt": "2020-11-06T15:21:11Z", "author": {"login": "geoand"}, "path": "integration-tests/spring-data-jpa/src/main/java/io/quarkus/it/spring/data/jpa/PostResource.java", "diffHunk": "@@ -104,6 +104,27 @@ public Post byBypassTrue() {\n         return postCommentRepository.findByPostId(id);\n     }\n \n+    @GET\n+    @Produces(\"application/json\")\n+    @Path(\"/mandatory/{id}\")\n+    public Post findMandatoryByPostId(@PathParam(\"id\") Long id) {\n+        return postRepository.findMandatoryById(id);\n+    }\n+\n+    @GET\n+    @Produces(\"application/json\")\n+    @Path(\"/doNothing\")\n+    public void doNothing() {\n+        postRepository.doNothing();\n+    }\n+\n+    @GET\n+    @Produces(\"application/json\")\n+    @Path(\"/attribute/{attribute}/text/{text}\")\n+    public void findByAttributeContainsText(@PathParam(\"attribute\") String attribute, @PathParam(\"text\") String text) {\n+        //        postRepository.findByAttributeContainsText(attribute, text);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7306c40a988bbcb18ce647024dfd4ae068113fca"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg0NjM4Nw==", "bodyText": "removed. it should not be there", "url": "https://github.com/quarkusio/quarkus/pull/13137#discussion_r518846387", "createdAt": "2020-11-06T16:01:20Z", "author": {"login": "aureamunoz"}, "path": "integration-tests/spring-data-jpa/src/main/java/io/quarkus/it/spring/data/jpa/PostResource.java", "diffHunk": "@@ -104,6 +104,27 @@ public Post byBypassTrue() {\n         return postCommentRepository.findByPostId(id);\n     }\n \n+    @GET\n+    @Produces(\"application/json\")\n+    @Path(\"/mandatory/{id}\")\n+    public Post findMandatoryByPostId(@PathParam(\"id\") Long id) {\n+        return postRepository.findMandatoryById(id);\n+    }\n+\n+    @GET\n+    @Produces(\"application/json\")\n+    @Path(\"/doNothing\")\n+    public void doNothing() {\n+        postRepository.doNothing();\n+    }\n+\n+    @GET\n+    @Produces(\"application/json\")\n+    @Path(\"/attribute/{attribute}/text/{text}\")\n+    public void findByAttributeContainsText(@PathParam(\"attribute\") String attribute, @PathParam(\"text\") String text) {\n+        //        postRepository.findByAttributeContainsText(attribute, text);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMDY1MA=="}, "originalCommit": {"oid": "7306c40a988bbcb18ce647024dfd4ae068113fca"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MTkzMzk5OnYy", "diffSide": "RIGHT", "path": "integration-tests/spring-data-jpa/src/test/java/io/quarkus/it/spring/data/jpa/PostResourceTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNToyMjoxMFrOHuyVwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxNjowMTozOFrOHuz4Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMTMxNA==", "bodyText": "I know this isn't because of this PR but since you moved it: I think this comment no longer makes sense as this is definitely not the last test being executed", "url": "https://github.com/quarkusio/quarkus/pull/13137#discussion_r518821314", "createdAt": "2020-11-06T15:22:10Z", "author": {"login": "geoand"}, "path": "integration-tests/spring-data-jpa/src/test/java/io/quarkus/it/spring/data/jpa/PostResourceTest.java", "diffHunk": "@@ -79,9 +79,20 @@ void testAllPostComment() {\n                 .body(\"size()\", is(2));\n     }\n \n-    //    Pay attention to the order, this test must be executed always the last one\n     @Test\n     @Order(7)\n+    void testFindPostByTitleContainingText() {\n+        Post post = when().get(\"/post/mandatory/1\").then()\n+                .statusCode(200)\n+                .extract().body().as(Post.class);\n+\n+        assertThat(post).isNotNull();\n+        assertThat(post.getId()).isEqualTo(1L);\n+    }\n+\n+    //    Pay attention to the order, this test must be executed always the last one", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7306c40a988bbcb18ce647024dfd4ae068113fca"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODg0NjU1MQ==", "bodyText": "good catch, thanks!", "url": "https://github.com/quarkusio/quarkus/pull/13137#discussion_r518846551", "createdAt": "2020-11-06T16:01:38Z", "author": {"login": "aureamunoz"}, "path": "integration-tests/spring-data-jpa/src/test/java/io/quarkus/it/spring/data/jpa/PostResourceTest.java", "diffHunk": "@@ -79,9 +79,20 @@ void testAllPostComment() {\n                 .body(\"size()\", is(2));\n     }\n \n-    //    Pay attention to the order, this test must be executed always the last one\n     @Test\n     @Order(7)\n+    void testFindPostByTitleContainingText() {\n+        Post post = when().get(\"/post/mandatory/1\").then()\n+                .statusCode(200)\n+                .extract().body().as(Post.class);\n+\n+        assertThat(post).isNotNull();\n+        assertThat(post.getId()).isEqualTo(1L);\n+    }\n+\n+    //    Pay attention to the order, this test must be executed always the last one", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgyMTMxNA=="}, "originalCommit": {"oid": "7306c40a988bbcb18ce647024dfd4ae068113fca"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4015, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}