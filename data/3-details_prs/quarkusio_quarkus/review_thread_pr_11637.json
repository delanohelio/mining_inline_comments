{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNzc3NDYy", "number": 11637, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMDowNToyOVrOEdJtWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMDowNToyOVrOEdJtWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MDAzMjI0OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/neo4j.adoc", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMDowNToyOVrOHIJY5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMDo0NTowMlrOHIKqnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwNDQ4Ng==", "bodyText": "I'm wondering if it would be better to have a global metrics setting rather than something under pool. Wouldn't it be more in line with the other extensions?\nIf we want to add other metrics, will we add more boolean settings?", "url": "https://github.com/quarkusio/quarkus/pull/11637#discussion_r478304486", "createdAt": "2020-08-27T10:05:29Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/neo4j.adoc", "diffHunk": "@@ -403,6 +403,11 @@ So when you access the `/health/ready` endpoint of your application you will hav\n \n This behavior can be disabled by setting the `quarkus.neo4j.health.enabled` property to `false` in your `application.properties`.\n \n+=== Driver metrics\n+\n+If you are using a metrics extension and specify the config property `quarkus.neo4j.pool.metrics-enabled=true`, the Neo4j extension will", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2a9dc61ec506a96d73f4d58ff8e15031515bc21"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMxNDQwNA==", "bodyText": "That's a very good point. At first I was planning to add a quarkus.neo4j.metrics-enabled property, but then I saw that there already exists quarkus.neo4j.pool.metrics-enabled which enables collection of metrics (internally without exporting them). So what I did instead of adding a new property (which would be confusing due to a very similar name), I changed the meaning of the original property, and now, rather than just enable collection of metrics, it also enables exporting them by the Metrics extension.\nWe could potentially rename the original one to quarkus.neo4j.metrics-enabled and let it do both these things at the same time, but it would break any usage of the original property, so I decided to go with the backward compatible approach.\nIn the Agroal extension, we do have two different properties\nquarkus.datasource.jdbc.metrics-enabled and\nquarkus.datasource.DS_NAME.jdbc.enable-metrics\nThere it makes sense to me because here you can enable metrics for each named data source separately, but in Neo4j we only support one connection pool, so it doesn't seem to have much value to have two separate properties for it.", "url": "https://github.com/quarkusio/quarkus/pull/11637#discussion_r478314404", "createdAt": "2020-08-27T10:23:49Z", "author": {"login": "jmartisk"}, "path": "docs/src/main/asciidoc/neo4j.adoc", "diffHunk": "@@ -403,6 +403,11 @@ So when you access the `/health/ready` endpoint of your application you will hav\n \n This behavior can be disabled by setting the `quarkus.neo4j.health.enabled` property to `false` in your `application.properties`.\n \n+=== Driver metrics\n+\n+If you are using a metrics extension and specify the config property `quarkus.neo4j.pool.metrics-enabled=true`, the Neo4j extension will", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwNDQ4Ng=="}, "originalCommit": {"oid": "e2a9dc61ec506a96d73f4d58ff8e15031515bc21"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMyMjEzMQ==", "bodyText": "I think I would make it a global metric property, deprecate the old one (but still consider it if it's true). If you use the @Deprecated annotation, the old one won't be included in the config reference doc.", "url": "https://github.com/quarkusio/quarkus/pull/11637#discussion_r478322131", "createdAt": "2020-08-27T10:38:06Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/neo4j.adoc", "diffHunk": "@@ -403,6 +403,11 @@ So when you access the `/health/ready` endpoint of your application you will hav\n \n This behavior can be disabled by setting the `quarkus.neo4j.health.enabled` property to `false` in your `application.properties`.\n \n+=== Driver metrics\n+\n+If you are using a metrics extension and specify the config property `quarkus.neo4j.pool.metrics-enabled=true`, the Neo4j extension will", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwNDQ4Ng=="}, "originalCommit": {"oid": "e2a9dc61ec506a96d73f4d58ff8e15031515bc21"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMyMjUwNQ==", "bodyText": "But better wait for @michael-simons 's feedback.", "url": "https://github.com/quarkusio/quarkus/pull/11637#discussion_r478322505", "createdAt": "2020-08-27T10:38:55Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/neo4j.adoc", "diffHunk": "@@ -403,6 +403,11 @@ So when you access the `/health/ready` endpoint of your application you will hav\n \n This behavior can be disabled by setting the `quarkus.neo4j.health.enabled` property to `false` in your `application.properties`.\n \n+=== Driver metrics\n+\n+If you are using a metrics extension and specify the config property `quarkus.neo4j.pool.metrics-enabled=true`, the Neo4j extension will", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwNDQ4Ng=="}, "originalCommit": {"oid": "e2a9dc61ec506a96d73f4d58ff8e15031515bc21"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMyNDM1OA==", "bodyText": "When I read the PR I expected the meaning of the property to stay the same plus when SmallRye Metrics is available that our pool metrics are exported (Probably because that's the way we role with Spring Boot, which I actually like).\nApart from that we don't have any plans for metrics apart the pool itself in the driver for the time being (Thinking query metrics (which I would like btw)). But if we do this in the future, I would prefer dedicated a dedicated property for it.", "url": "https://github.com/quarkusio/quarkus/pull/11637#discussion_r478324358", "createdAt": "2020-08-27T10:42:54Z", "author": {"login": "michael-simons"}, "path": "docs/src/main/asciidoc/neo4j.adoc", "diffHunk": "@@ -403,6 +403,11 @@ So when you access the `/health/ready` endpoint of your application you will hav\n \n This behavior can be disabled by setting the `quarkus.neo4j.health.enabled` property to `false` in your `application.properties`.\n \n+=== Driver metrics\n+\n+If you are using a metrics extension and specify the config property `quarkus.neo4j.pool.metrics-enabled=true`, the Neo4j extension will", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwNDQ4Ng=="}, "originalCommit": {"oid": "e2a9dc61ec506a96d73f4d58ff8e15031515bc21"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMyNTQwNA==", "bodyText": "OK, I suppose we can keep it that way then and wait for user complaints if any.", "url": "https://github.com/quarkusio/quarkus/pull/11637#discussion_r478325404", "createdAt": "2020-08-27T10:45:02Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/neo4j.adoc", "diffHunk": "@@ -403,6 +403,11 @@ So when you access the `/health/ready` endpoint of your application you will hav\n \n This behavior can be disabled by setting the `quarkus.neo4j.health.enabled` property to `false` in your `application.properties`.\n \n+=== Driver metrics\n+\n+If you are using a metrics extension and specify the config property `quarkus.neo4j.pool.metrics-enabled=true`, the Neo4j extension will", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODMwNDQ4Ng=="}, "originalCommit": {"oid": "e2a9dc61ec506a96d73f4d58ff8e15031515bc21"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 524, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}