{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMTgyODM3", "number": 9604, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDozNTo1MFrOD_s-uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDozNTo1MFrOD_s-uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTIzODMzOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/logging.adoc", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDozNTo1MFrOGahSUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNjowNTozMVrOGalf8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ2MTUyMw==", "bodyText": "I am not an IntelliJ user but the Maven integration should automatically pick up systemPropertyVariables from the surefire config in pom.xml.", "url": "https://github.com/quarkusio/quarkus/pull/9604#discussion_r430461523", "createdAt": "2020-05-26T14:35:50Z", "author": {"login": "famod"}, "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -249,6 +247,33 @@ test {\n \tsystemProperty \"java.util.logging.manager\", \"org.jboss.logmanager.LogManager\"\n }\n ----\n+== Running `@QuarkusTest` from an IDE\n+\n+Most IDEs offer the possibility to run a selected class as JUnit test directly, in which case the above workaround will not be applied. You will need to apply it in the settings of your chosen IDE.\n+\n+=== Eclipse separate JRE definition\n+\n+Copy your current \"Installed JRE\" definition into a new one, where you will add the workaround as a new VM argument \n+`-Djava.util.logging.manager=org.jboss.logmanager.LogManager`. Use this JRE definition as your Quarkus project targeted runtime and the workaround will be applied to any \"Run as JUnit\" configuration.\n+\n+=== VSCode \"run with\" configuration\n+\n+The `settings.json` placed in the root of your project directory or in the workspace will need the workaround in your test configuration:\n+[source, json]\n+----\n+\"java.test.config\": [\n+    {\n+        \"name\": \"quarkusConfiguration\",\n+        \"vmargs\": [ \"-Djava.util.logging.manager=org.jboss.logmanager.LogManager ...\" ],\n+        ...\n+    },\n+  ...\n+]\n+----\n+\n+=== IntelliJ JUnit template\n+\n+In the same screen where you edit your run configuration you can edit the JUnit template to add the workaround Java VM argument `-Djava.util.logging.manager=org.jboss.logmanager.LogManager`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d2a30019b21d34dd98f91aa21c7f377ed9a635a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ2OTY4Mw==", "bodyText": "I took that from the issue discussion, as I'm not an IntelliJ user either. Just Eclipse and VSCode are tested.", "url": "https://github.com/quarkusio/quarkus/pull/9604#discussion_r430469683", "createdAt": "2020-05-26T14:46:47Z", "author": {"login": "sorin-costea"}, "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -249,6 +247,33 @@ test {\n \tsystemProperty \"java.util.logging.manager\", \"org.jboss.logmanager.LogManager\"\n }\n ----\n+== Running `@QuarkusTest` from an IDE\n+\n+Most IDEs offer the possibility to run a selected class as JUnit test directly, in which case the above workaround will not be applied. You will need to apply it in the settings of your chosen IDE.\n+\n+=== Eclipse separate JRE definition\n+\n+Copy your current \"Installed JRE\" definition into a new one, where you will add the workaround as a new VM argument \n+`-Djava.util.logging.manager=org.jboss.logmanager.LogManager`. Use this JRE definition as your Quarkus project targeted runtime and the workaround will be applied to any \"Run as JUnit\" configuration.\n+\n+=== VSCode \"run with\" configuration\n+\n+The `settings.json` placed in the root of your project directory or in the workspace will need the workaround in your test configuration:\n+[source, json]\n+----\n+\"java.test.config\": [\n+    {\n+        \"name\": \"quarkusConfiguration\",\n+        \"vmargs\": [ \"-Djava.util.logging.manager=org.jboss.logmanager.LogManager ...\" ],\n+        ...\n+    },\n+  ...\n+]\n+----\n+\n+=== IntelliJ JUnit template\n+\n+In the same screen where you edit your run configuration you can edit the JUnit template to add the workaround Java VM argument `-Djava.util.logging.manager=org.jboss.logmanager.LogManager`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ2MTUyMw=="}, "originalCommit": {"oid": "9d2a30019b21d34dd98f91aa21c7f377ed9a635a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDUzMDU0Nw==", "bodyText": "I can confirm surefire systemPropertyVariables get picked-up by https://github.com/JetBrains/intellij-community/blob/master/plugins/maven/src/main/java/org/jetbrains/idea/maven/execution/MavenJUnitPatcher.java#L162 , so it should work out of the box.", "url": "https://github.com/quarkusio/quarkus/pull/9604#discussion_r430530547", "createdAt": "2020-05-26T16:05:31Z", "author": {"login": "rquinio"}, "path": "docs/src/main/asciidoc/logging.adoc", "diffHunk": "@@ -249,6 +247,33 @@ test {\n \tsystemProperty \"java.util.logging.manager\", \"org.jboss.logmanager.LogManager\"\n }\n ----\n+== Running `@QuarkusTest` from an IDE\n+\n+Most IDEs offer the possibility to run a selected class as JUnit test directly, in which case the above workaround will not be applied. You will need to apply it in the settings of your chosen IDE.\n+\n+=== Eclipse separate JRE definition\n+\n+Copy your current \"Installed JRE\" definition into a new one, where you will add the workaround as a new VM argument \n+`-Djava.util.logging.manager=org.jboss.logmanager.LogManager`. Use this JRE definition as your Quarkus project targeted runtime and the workaround will be applied to any \"Run as JUnit\" configuration.\n+\n+=== VSCode \"run with\" configuration\n+\n+The `settings.json` placed in the root of your project directory or in the workspace will need the workaround in your test configuration:\n+[source, json]\n+----\n+\"java.test.config\": [\n+    {\n+        \"name\": \"quarkusConfiguration\",\n+        \"vmargs\": [ \"-Djava.util.logging.manager=org.jboss.logmanager.LogManager ...\" ],\n+        ...\n+    },\n+  ...\n+]\n+----\n+\n+=== IntelliJ JUnit template\n+\n+In the same screen where you edit your run configuration you can edit the JUnit template to add the workaround Java VM argument `-Djava.util.logging.manager=org.jboss.logmanager.LogManager`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ2MTUyMw=="}, "originalCommit": {"oid": "9d2a30019b21d34dd98f91aa21c7f377ed9a635a"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3008, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}