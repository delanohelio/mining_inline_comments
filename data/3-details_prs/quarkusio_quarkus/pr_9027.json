{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNTA3Nzk1", "number": 9027, "title": "Disable scheduler with runtime config", "bodyText": "Fixes #8913", "createdAt": "2020-05-02T21:01:05Z", "url": "https://github.com/quarkusio/quarkus/pull/9027", "merged": true, "mergeCommit": {"oid": "73db699f9753e222db5ed932e26312b732369a6f"}, "closed": true, "closedAt": "2020-05-08T10:33:23Z", "author": {"login": "adrianfiedler"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcd-taQAFqTQwNDk0MDk4Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfCD7TAFqTQwNzc1MzQ3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0OTQwOTgz", "url": "https://github.com/quarkusio/quarkus/pull/9027#pullrequestreview-404940983", "createdAt": "2020-05-04T12:30:00Z", "commit": {"oid": "0108de714c051f87a8095c088d51b946488ae34d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjozMDowMFrOGP-HJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjozMTo0NFrOGP-Kwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5OTQ2MQ==", "bodyText": "There is no need to introduce this config property. Quartz extension is built on top of the Scheduler extension - it's ok to reuse quarkus.scheduler.enabled.", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r419399461", "createdAt": "2020-05-04T12:30:00Z", "author": {"login": "mkouba"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzRuntimeConfig.java", "diffHunk": "@@ -27,4 +27,10 @@\n     @ConfigItem\n     public boolean forceStart;\n \n+    /**\n+     * If the quartz scheduler is enabled\n+     */\n+    @ConfigItem(defaultValue = \"true\")\n+    public boolean enabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0108de714c051f87a8095c088d51b946488ae34d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5OTk2Mw==", "bodyText": "This test will always take at least 5s :-(", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r419399963", "createdAt": "2020-05-04T12:31:00Z", "author": {"login": "mkouba"}, "path": "extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/DisabledSchedulerTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.quarkus.quartz.test;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.scheduler.Scheduled;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class DisabledSchedulerTest {\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest test = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(Jobs.class)\n+                    .addAsResource(new StringAsset(\"quarkus.quartz.enabled=false\"),\n+                            \"application.properties\"));\n+\n+    @Test\n+    public void testNoSchedulerInvocations() throws InterruptedException {\n+        // Check that @Scheduled method was never called\n+        assertFalse(Jobs.LATCH.await(5, TimeUnit.SECONDS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0108de714c051f87a8095c088d51b946488ae34d"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwMDM4Ng==", "bodyText": "As I commented on the issue - the preferred solution is to inject the config group directly.", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r419400386", "createdAt": "2020-05-04T12:31:44Z", "author": {"login": "mkouba"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "diffHunk": "@@ -68,7 +68,8 @@\n     }\n \n     public QuartzScheduler(SchedulerContext context, QuartzSupport quartzSupport, Config config) {\n-        if (!quartzSupport.getRuntimeConfig().forceStart && context.getScheduledMethods().isEmpty()) {\n+        if ((!quartzSupport.getRuntimeConfig().forceStart && context.getScheduledMethods().isEmpty())\n+                || !config.getValue(\"quarkus.quartz.enabled\", Boolean.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0108de714c051f87a8095c088d51b946488ae34d"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NjAzMzc2", "url": "https://github.com/quarkusio/quarkus/pull/9027#pullrequestreview-405603376", "createdAt": "2020-05-05T08:54:23Z", "commit": {"oid": "8cacb2e074cbfd1dc4343f61701b020b6f1cb0ba"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODo1NDoyM1rOGQgOdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODo1NDoyM1rOGQgOdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk1ODM4OA==", "bodyText": "The log message should probably reflect the conditions...", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r419958388", "createdAt": "2020-05-05T08:54:23Z", "author": {"login": "mkouba"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "diffHunk": "@@ -67,8 +68,10 @@\n         return scheduler;\n     }\n \n-    public QuartzScheduler(SchedulerContext context, QuartzSupport quartzSupport, Config config) {\n-        if (!quartzSupport.getRuntimeConfig().forceStart && context.getScheduledMethods().isEmpty()) {\n+    public QuartzScheduler(SchedulerContext context, QuartzSupport quartzSupport, Config config,\n+            SchedulerRuntimeConfig schedulerRuntimeConfig) {\n+        if ((!quartzSupport.getRuntimeConfig().forceStart && context.getScheduledMethods().isEmpty())\n+                || !schedulerRuntimeConfig.enabled) {\n             LOGGER.infof(\"No scheduled business methods found - Quartz scheduler will not be started\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cacb2e074cbfd1dc4343f61701b020b6f1cb0ba"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NjAzODkx", "url": "https://github.com/quarkusio/quarkus/pull/9027#pullrequestreview-405603891", "createdAt": "2020-05-05T08:55:06Z", "commit": {"oid": "8cacb2e074cbfd1dc4343f61701b020b6f1cb0ba"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODo1NTowN1rOGQgQCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODo1NTowN1rOGQgQCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk1ODc5NQ==", "bodyText": "I think that we should add an INFO log message here as well. WDYT?", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r419958795", "createdAt": "2020-05-05T08:55:07Z", "author": {"login": "mkouba"}, "path": "extensions/scheduler/runtime/src/main/java/io/quarkus/scheduler/runtime/SimpleScheduler.java", "diffHunk": "@@ -51,12 +51,12 @@\n     private volatile boolean running;\n     private final List<ScheduledTask> scheduledTasks;\n \n-    public SimpleScheduler(SchedulerContext context, Config config) {\n+    public SimpleScheduler(SchedulerContext context, Config config, SchedulerRuntimeConfig schedulerRuntimeConfig) {\n         this.running = true;\n         this.scheduledTasks = new ArrayList<>();\n         this.executor = context.getExecutor();\n \n-        if (context.getScheduledMethods().isEmpty()) {\n+        if (context.getScheduledMethods().isEmpty() || !schedulerRuntimeConfig.enabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cacb2e074cbfd1dc4343f61701b020b6f1cb0ba"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2ODUwOTc0", "url": "https://github.com/quarkusio/quarkus/pull/9027#pullrequestreview-406850974", "createdAt": "2020-05-06T17:51:32Z", "commit": {"oid": "f1249fd38d8fd01c68e8f2d6d2563ceeb2610aef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzo1MTozMlrOGRel-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzo1MTozMlrOGRel-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4MDIxNg==", "bodyText": "nitpick:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public boolean isRunning() {\n          \n          \n            \n                    if (!enabled) {\n          \n          \n            \n                        return false;\n          \n          \n            \n                    }\n          \n          \n            \n                    return running;\n          \n          \n            \n                }\n          \n          \n            \n                public boolean isRunning() {\n          \n          \n            \n                    return enabled && running;\n          \n          \n            \n                }", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r420980216", "createdAt": "2020-05-06T17:51:32Z", "author": {"login": "machi1990"}, "path": "extensions/scheduler/runtime/src/main/java/io/quarkus/scheduler/runtime/SimpleScheduler.java", "diffHunk": "@@ -137,12 +143,28 @@ public void run() {\n \n     @Override\n     public void pause() {\n-        running = false;\n+        if (!enabled) {\n+            LOGGER.warn(\"Scheduler is disabled and cannot be paused\");\n+        } else {\n+            running = false;\n+        }\n     }\n \n     @Override\n     public void resume() {\n-        running = true;\n+        if (!enabled) {\n+            LOGGER.warn(\"Scheduler is disabled and cannot be resumed\");\n+        } else {\n+            running = true;\n+        }\n+    }\n+\n+    @Override\n+    public boolean isRunning() {\n+        if (!enabled) {\n+            return false;\n+        }\n+        return running;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1249fd38d8fd01c68e8f2d6d2563ceeb2610aef"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2ODU1MTAx", "url": "https://github.com/quarkusio/quarkus/pull/9027#pullrequestreview-406855101", "createdAt": "2020-05-06T17:56:44Z", "commit": {"oid": "f1249fd38d8fd01c68e8f2d6d2563ceeb2610aef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzo1Njo0NFrOGRezRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzo1Njo0NFrOGRezRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4MzYyMA==", "bodyText": "According to this #8913 (comment), this should be null hence causing a NPE at https://github.com/quarkusio/quarkus/pull/9027/files#diff-b22e0da44e71f897e6899c8e8e9626fbR31 or am I missing something?\n/cc @mkouba", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r420983620", "createdAt": "2020-05-06T17:56:44Z", "author": {"login": "machi1990"}, "path": "extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/DisabledSchedulerTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.quarkus.quartz.test;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+import javax.inject.Inject;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.quartz.runtime.QuartzScheduler;\n+import io.quarkus.scheduler.Scheduled;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class DisabledSchedulerTest {\n+\n+    @Inject\n+    QuartzScheduler quartzScheduler;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1249fd38d8fd01c68e8f2d6d2563ceeb2610aef"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2ODU3ODM0", "url": "https://github.com/quarkusio/quarkus/pull/9027#pullrequestreview-406857834", "createdAt": "2020-05-06T18:00:22Z", "commit": {"oid": "f1249fd38d8fd01c68e8f2d6d2563ceeb2610aef"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODowMDoyMlrOGRe8pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxODoxOToxNlrOGRfpjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4NjAyMA==", "bodyText": "This field should be final.", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r420986020", "createdAt": "2020-05-06T18:00:22Z", "author": {"login": "mkouba"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "diffHunk": "@@ -60,19 +61,25 @@\n \n     private final org.quartz.Scheduler scheduler;\n     private final Map<String, ScheduledInvoker> invokers;\n+    private boolean enabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1249fd38d8fd01c68e8f2d6d2563ceeb2610aef"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4ODI5MQ==", "bodyText": "Message? In fact, I'd just throw an IllegalStateException instead of a warning. Although it seems that isInStandbyMode() never throws an expception...", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r420988291", "createdAt": "2020-05-06T18:04:02Z", "author": {"login": "mkouba"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "diffHunk": "@@ -185,24 +192,46 @@ public QuartzScheduler(SchedulerContext context, QuartzSupport quartzSupport, Co\n \n     @Override\n     public void pause() {\n-        try {\n-            if (scheduler != null) {\n-                scheduler.pauseAll();\n+        if (!enabled) {\n+            LOGGER.warn(\"Quartz Scheduler is disabled and cannot be paused\");\n+        } else {\n+            try {\n+                if (scheduler != null) {\n+                    scheduler.standby();\n+                }\n+            } catch (SchedulerException e) {\n+                LOGGER.warn(\"Unable to pause scheduler\", e);\n             }\n-        } catch (SchedulerException e) {\n-            LOGGER.warn(\"Unable to pause scheduler\", e);\n         }\n     }\n \n     @Override\n     public void resume() {\n-        try {\n-            if (scheduler != null) {\n-                scheduler.resumeAll();\n+        if (!enabled) {\n+            LOGGER.warn(\"Quartz Scheduler is disabled and cannot be resumed\");\n+        } else {\n+            try {\n+                if (scheduler != null) {\n+                    scheduler.start();\n+                }\n+            } catch (SchedulerException e) {\n+                LOGGER.warn(\"Unable to resume scheduler\", e);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public boolean isRunning() {\n+        if (!enabled || scheduler == null) {\n+            return false;\n+        } else {\n+            try {\n+                return !scheduler.isInStandbyMode();\n+            } catch (SchedulerException e) {\n+                LOGGER.warn(\"Unable to resume scheduler\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1249fd38d8fd01c68e8f2d6d2563ceeb2610aef"}, "originalPosition": 86}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk5MTY1OA==", "bodyText": "I think that we should be more specific here. Something like \"If a scheduler is running the triggers are fired and jobs are executed.\"", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r420991658", "createdAt": "2020-05-06T18:09:39Z", "author": {"login": "mkouba"}, "path": "extensions/scheduler/runtime/src/main/java/io/quarkus/scheduler/Scheduler.java", "diffHunk": "@@ -18,4 +18,9 @@\n      */\n     void resume();\n \n+    /**\n+     * @return if the scheduler is running", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1249fd38d8fd01c68e8f2d6d2563ceeb2610aef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk5MjM5OQ==", "bodyText": "Make it final ;-)", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r420992399", "createdAt": "2020-05-06T18:10:56Z", "author": {"login": "mkouba"}, "path": "extensions/scheduler/runtime/src/main/java/io/quarkus/scheduler/runtime/SimpleScheduler.java", "diffHunk": "@@ -50,14 +50,20 @@\n     private final ExecutorService executor;\n     private volatile boolean running;\n     private final List<ScheduledTask> scheduledTasks;\n+    private boolean enabled;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1249fd38d8fd01c68e8f2d6d2563ceeb2610aef"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk5Njc5MQ==", "bodyText": "So I believe that we should throw IllegalStateException from io.quarkus.quartz.runtime.QuartzScheduler.produceQuartzScheduler() if QuartzScheduler.scheduler is null. However, in this case we inject io.quarkus.quartz.runtime.QuartzScheduler which is OK. @adrianfiedler you should rather inject io.quarkus.scheduler.Scheduler which is part of the API (and is implemented by QuartzScheduler).", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r420996791", "createdAt": "2020-05-06T18:18:08Z", "author": {"login": "mkouba"}, "path": "extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/DisabledSchedulerTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.quarkus.quartz.test;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+import javax.inject.Inject;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.quartz.runtime.QuartzScheduler;\n+import io.quarkus.scheduler.Scheduled;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class DisabledSchedulerTest {\n+\n+    @Inject\n+    QuartzScheduler quartzScheduler;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk4MzYyMA=="}, "originalCommit": {"oid": "f1249fd38d8fd01c68e8f2d6d2563ceeb2610aef"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk5NzUxNw==", "bodyText": "|| scheduler == null is IMHO redundant and adds no value.", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r420997517", "createdAt": "2020-05-06T18:19:16Z", "author": {"login": "mkouba"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "diffHunk": "@@ -185,24 +192,46 @@ public QuartzScheduler(SchedulerContext context, QuartzSupport quartzSupport, Co\n \n     @Override\n     public void pause() {\n-        try {\n-            if (scheduler != null) {\n-                scheduler.pauseAll();\n+        if (!enabled) {\n+            LOGGER.warn(\"Quartz Scheduler is disabled and cannot be paused\");\n+        } else {\n+            try {\n+                if (scheduler != null) {\n+                    scheduler.standby();\n+                }\n+            } catch (SchedulerException e) {\n+                LOGGER.warn(\"Unable to pause scheduler\", e);\n             }\n-        } catch (SchedulerException e) {\n-            LOGGER.warn(\"Unable to pause scheduler\", e);\n         }\n     }\n \n     @Override\n     public void resume() {\n-        try {\n-            if (scheduler != null) {\n-                scheduler.resumeAll();\n+        if (!enabled) {\n+            LOGGER.warn(\"Quartz Scheduler is disabled and cannot be resumed\");\n+        } else {\n+            try {\n+                if (scheduler != null) {\n+                    scheduler.start();\n+                }\n+            } catch (SchedulerException e) {\n+                LOGGER.warn(\"Unable to resume scheduler\", e);\n+            }\n+        }\n+    }\n+\n+    @Override\n+    public boolean isRunning() {\n+        if (!enabled || scheduler == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1249fd38d8fd01c68e8f2d6d2563ceeb2610aef"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NDU4Njcx", "url": "https://github.com/quarkusio/quarkus/pull/9027#pullrequestreview-407458671", "createdAt": "2020-05-07T13:15:02Z", "commit": {"oid": "adb35a27b47243f68de9e1a1752d80dab5addaf8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NDg1MDY1", "url": "https://github.com/quarkusio/quarkus/pull/9027#pullrequestreview-407485065", "createdAt": "2020-05-07T13:44:04Z", "commit": {"oid": "b2da973403d7627de3183f0e1129cd90eba090d2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzo0NDowNFrOGR_NOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzo0NDowNFrOGR_NOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUxNDU1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Scheduler quartzScheduler;\n          \n          \n            \n                Scheduler scheduler;", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r421514555", "createdAt": "2020-05-07T13:44:04Z", "author": {"login": "machi1990"}, "path": "extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/DisabledSchedulerTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.quarkus.quartz.test;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+import javax.inject.Inject;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.scheduler.Scheduled;\n+import io.quarkus.scheduler.Scheduler;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class DisabledSchedulerTest {\n+\n+    @Inject\n+    Scheduler quartzScheduler;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2da973403d7627de3183f0e1129cd90eba090d2"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NDg3ODMy", "url": "https://github.com/quarkusio/quarkus/pull/9027#pullrequestreview-407487832", "createdAt": "2020-05-07T13:46:59Z", "commit": {"oid": "b2da973403d7627de3183f0e1129cd90eba090d2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzo0Njo1OVrOGR_WFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxMzo0Njo1OVrOGR_WFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTUxNjgyMw==", "bodyText": "Since we are only testing if scheduler is running or not, I think we can live off this class a.k.a we do not need it.", "url": "https://github.com/quarkusio/quarkus/pull/9027#discussion_r421516823", "createdAt": "2020-05-07T13:46:59Z", "author": {"login": "machi1990"}, "path": "extensions/scheduler/deployment/src/test/java/io/quarkus/scheduler/test/DisabledSchedulerTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.quarkus.scheduler.test;\n+\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+import javax.inject.Inject;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.scheduler.Scheduled;\n+import io.quarkus.scheduler.Scheduler;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class DisabledSchedulerTest {\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest test = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(Jobs.class)\n+                    .addAsResource(new StringAsset(\"quarkus.scheduler.enabled=false\"),\n+                            \"application.properties\"));\n+\n+    @Inject\n+    Scheduler scheduler;\n+\n+    @Test\n+    public void testNoSchedulerInvocations() throws InterruptedException {\n+        assertFalse(scheduler.isRunning());\n+    }\n+\n+    static class Jobs {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2da973403d7627de3183f0e1129cd90eba090d2"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1f5a3cab78a20f4cdb501ce4c57ae055859e4fc", "author": {"user": {"login": "adrianfiedler", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/a1f5a3cab78a20f4cdb501ce4c57ae055859e4fc", "committedDate": "2020-05-07T13:53:06Z", "message": "disabled schedulers by runtime config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NzUzNDc4", "url": "https://github.com/quarkusio/quarkus/pull/9027#pullrequestreview-407753478", "createdAt": "2020-05-07T19:01:50Z", "commit": {"oid": "a1f5a3cab78a20f4cdb501ce4c57ae055859e4fc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4434, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}