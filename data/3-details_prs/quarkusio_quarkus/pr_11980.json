{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMDkwMjY0", "number": 11980, "title": "ArC - distinguish \"bean archive\" and \"additional\" index", "bodyText": "the first one is used to discover beans, etc.\nthe latter one is also used to discover types during type-safe\ndiscovery\nfixes #11863", "createdAt": "2020-09-08T14:35:53Z", "url": "https://github.com/quarkusio/quarkus/pull/11980", "merged": true, "mergeCommit": {"oid": "8229f0072d6afa22eb82328749ea1ab294154606"}, "closed": true, "closedAt": "2020-09-09T13:19:05Z", "author": {"login": "mkouba"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG4mupAFqTQ4NDIwNzQ0Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHKkEQgFqTQ4NDkxNDg1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MjA3NDQz", "url": "https://github.com/quarkusio/quarkus/pull/11980#pullrequestreview-484207443", "createdAt": "2020-09-08T14:37:46Z", "commit": {"oid": "2de4da4f759d3cb22d8934a40a0b64776cf4e712"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNDozNzo0NlrOHOgVug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNDozNzo0NlrOHOgVug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk3MTk2Mg==", "bodyText": "I decided to use a more general name (additionalIndex) because it may be useful for other use cases as well...", "url": "https://github.com/quarkusio/quarkus/pull/11980#discussion_r484971962", "createdAt": "2020-09-08T14:37:46Z", "author": {"login": "mkouba"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "diffHunk": "@@ -291,7 +292,29 @@ public Builder setName(String name) {\n         }\n \n         public Builder setIndex(IndexView index) {\n-            this.index = index;\n+            return setBeanArchiveIndex(index);\n+        }\n+\n+        /**\n+         * Set the bean archive index used to discover beans, interceptors, qualifiers, etc.\n+         * \n+         * @param beanArchiveIndex\n+         * @return self\n+         */\n+        public Builder setBeanArchiveIndex(IndexView beanArchiveIndex) {\n+            this.beanArchiveIndex = beanArchiveIndex;\n+            return this;\n+        }\n+\n+        /**\n+         * Set the (optional) additional index used to discover types during type-safe resolution. These types may not be part\n+         * of the bean archive index.\n+         * \n+         * @param additionalIndex\n+         * @return self\n+         */\n+        public Builder setAdditionalIndex(IndexView additionalIndex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2de4da4f759d3cb22d8934a40a0b64776cf4e712"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MjE1MTYx", "url": "https://github.com/quarkusio/quarkus/pull/11980#pullrequestreview-484215161", "createdAt": "2020-09-08T14:45:32Z", "commit": {"oid": "2de4da4f759d3cb22d8934a40a0b64776cf4e712"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNDo0NTozM1rOHOgsyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNDo0NTozM1rOHOgsyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk3Nzg2Ng==", "bodyText": "Perhaps this can be improved? I'm bringing it up because I don't even remember what a type variable is :P", "url": "https://github.com/quarkusio/quarkus/pull/11980#discussion_r484977866", "createdAt": "2020-09-08T14:45:33Z", "author": {"login": "geoand"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/Types.java", "diffHunk": "@@ -164,13 +165,16 @@ static Type getProviderType(ClassInfo classInfo) {\n     static Set<Type> getProducerMethodTypeClosure(MethodInfo producerMethod, BeanDeployment beanDeployment) {\n         Set<Type> types;\n         Type returnType = producerMethod.returnType();\n+        if (returnType.kind() == Kind.TYPE_VARIABLE) {\n+            throw new DefinitionException(\"A type variable is not a legal bean type: \" + producerMethod);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2de4da4f759d3cb22d8934a40a0b64776cf4e712"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MjE1NzA3", "url": "https://github.com/quarkusio/quarkus/pull/11980#pullrequestreview-484215707", "createdAt": "2020-09-08T14:46:06Z", "commit": {"oid": "2de4da4f759d3cb22d8934a40a0b64776cf4e712"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNDo0NjowNlrOHOgucQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNDo0NjowNlrOHOgucQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDk3ODI4OQ==", "bodyText": "Same here", "url": "https://github.com/quarkusio/quarkus/pull/11980#discussion_r484978289", "createdAt": "2020-09-08T14:46:06Z", "author": {"login": "geoand"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/Types.java", "diffHunk": "@@ -192,12 +196,15 @@ static Type getProviderType(ClassInfo classInfo) {\n     static Set<Type> getProducerFieldTypeClosure(FieldInfo producerField, BeanDeployment beanDeployment) {\n         Set<Type> types;\n         Type fieldType = producerField.type();\n+        if (fieldType.kind() == Kind.TYPE_VARIABLE) {\n+            throw new DefinitionException(\"A type variable is not a legal bean type: \" + producerField);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2de4da4f759d3cb22d8934a40a0b64776cf4e712"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MjE2OTE5", "url": "https://github.com/quarkusio/quarkus/pull/11980#pullrequestreview-484216919", "createdAt": "2020-09-08T14:47:16Z", "commit": {"oid": "2de4da4f759d3cb22d8934a40a0b64776cf4e712"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2de4da4f759d3cb22d8934a40a0b64776cf4e712", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/2de4da4f759d3cb22d8934a40a0b64776cf4e712", "committedDate": "2020-09-08T14:35:24Z", "message": "ArC - distinguish \"bean archive\" and \"additional\" index\n\n- the first one is used to discover beans, etc.\n- the latter one is also used to discover types during type-safe\ndiscovery\n- fixes #11863"}, "afterCommit": {"oid": "e0b16605531e5f176dad6a3146061e827296d1a2", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/e0b16605531e5f176dad6a3146061e827296d1a2", "committedDate": "2020-09-08T14:52:50Z", "message": "ArC - distinguish \"bean archive\" and \"additional\" index\n\n- the first one is used to discover beans, etc.\n- the latter one is also used to discover types during type-safe\ndiscovery\n- fixes #11863"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0ODQzMzkx", "url": "https://github.com/quarkusio/quarkus/pull/11980#pullrequestreview-484843391", "createdAt": "2020-09-09T09:48:43Z", "commit": {"oid": "e0b16605531e5f176dad6a3146061e827296d1a2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwOTo0ODo0M1rOHO_n6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDowMTowNVrOHPAFEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ4NDUyMw==", "bodyText": "Do we need to keep this original method? It is considered public API?", "url": "https://github.com/quarkusio/quarkus/pull/11980#discussion_r485484523", "createdAt": "2020-09-09T09:48:43Z", "author": {"login": "manovotn"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanDeployment.java", "diffHunk": "@@ -357,7 +361,19 @@ ValidationContext validate(List<BeanDeploymentValidator> validators,\n     }\n \n     public IndexView getIndex() {\n-        return index;\n+        return getBeanArchiveIndex();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0b16605531e5f176dad6a3146061e827296d1a2"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ4NDkwNg==", "bodyText": "Similar to previous comment, is this needed?", "url": "https://github.com/quarkusio/quarkus/pull/11980#discussion_r485484906", "createdAt": "2020-09-09T09:49:16Z", "author": {"login": "manovotn"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "diffHunk": "@@ -291,7 +292,31 @@ public Builder setName(String name) {\n         }\n \n         public Builder setIndex(IndexView index) {\n-            this.index = index;\n+            return setBeanArchiveIndex(index);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0b16605531e5f176dad6a3146061e827296d1a2"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ5MTk4Ng==", "bodyText": "@mkouba ClassInfo doesn't override equals/hashCode(as noted in wildfly/jandex#83), can you be sure you won't get duplicates from both indexes?", "url": "https://github.com/quarkusio/quarkus/pull/11980#discussion_r485491986", "createdAt": "2020-09-09T10:01:05Z", "author": {"login": "manovotn"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanResolver.java", "diffHunk": "@@ -45,14 +43,20 @@ public BeanResolver(BeanDeployment beanDeployment) {\n         this.assignableFromMap = new ConcurrentHashMap<>();\n         this.assignableFromMapFunction = name -> {\n             Set<DotName> assignables = new HashSet<>();\n-            Collection<ClassInfo> subclasses = beanDeployment.getIndex().getAllKnownSubclasses(name);\n-            for (ClassInfo subclass : subclasses) {\n+            for (ClassInfo subclass : beanDeployment.getBeanArchiveIndex().getAllKnownSubclasses(name)) {\n                 assignables.add(subclass.name());\n             }\n-            Collection<ClassInfo> implementors = beanDeployment.getIndex().getAllKnownImplementors(name);\n-            for (ClassInfo implementor : implementors) {\n+            for (ClassInfo implementor : beanDeployment.getBeanArchiveIndex().getAllKnownImplementors(name)) {\n                 assignables.add(implementor.name());\n             }\n+            if (beanDeployment.hasApplicationIndex()) {\n+                for (ClassInfo subclass : beanDeployment.getApplicationIndex().getAllKnownSubclasses(name)) {\n+                    assignables.add(subclass.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0b16605531e5f176dad6a3146061e827296d1a2"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e0b16605531e5f176dad6a3146061e827296d1a2", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/e0b16605531e5f176dad6a3146061e827296d1a2", "committedDate": "2020-09-08T14:52:50Z", "message": "ArC - distinguish \"bean archive\" and \"additional\" index\n\n- the first one is used to discover beans, etc.\n- the latter one is also used to discover types during type-safe\ndiscovery\n- fixes #11863"}, "afterCommit": {"oid": "3e4c578df9d5f4a876cf606aebfa8dce655f1851", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/3e4c578df9d5f4a876cf606aebfa8dce655f1851", "committedDate": "2020-09-09T10:31:44Z", "message": "ArC - distinguish \"bean archive\" and \"application\" index\n\n- the first one is used to discover components and during type-safe\nresolution\n- the latter one is also used to discover types during type-safe\nresolution\n- fixes #11863"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8880a95ffbd43e47605c6f8caac4b9051fbdd267", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/8880a95ffbd43e47605c6f8caac4b9051fbdd267", "committedDate": "2020-09-09T11:09:13Z", "message": "ArC - distinguish \"bean archive\" and \"application\" index\n\n- the first one is used to discover components and during type-safe\nresolution\n- the latter one is also used to discover types during type-safe\nresolution\n- fixes #11863"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e4c578df9d5f4a876cf606aebfa8dce655f1851", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/3e4c578df9d5f4a876cf606aebfa8dce655f1851", "committedDate": "2020-09-09T10:31:44Z", "message": "ArC - distinguish \"bean archive\" and \"application\" index\n\n- the first one is used to discover components and during type-safe\nresolution\n- the latter one is also used to discover types during type-safe\nresolution\n- fixes #11863"}, "afterCommit": {"oid": "8880a95ffbd43e47605c6f8caac4b9051fbdd267", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/8880a95ffbd43e47605c6f8caac4b9051fbdd267", "committedDate": "2020-09-09T11:09:13Z", "message": "ArC - distinguish \"bean archive\" and \"application\" index\n\n- the first one is used to discover components and during type-safe\nresolution\n- the latter one is also used to discover types during type-safe\nresolution\n- fixes #11863"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0OTE0ODUx", "url": "https://github.com/quarkusio/quarkus/pull/11980#pullrequestreview-484914851", "createdAt": "2020-09-09T11:33:09Z", "commit": {"oid": "8880a95ffbd43e47605c6f8caac4b9051fbdd267"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 586, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}