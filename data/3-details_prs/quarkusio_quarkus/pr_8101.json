{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyODQwNzk1", "number": 8101, "title": "Add support for multiple extension overrides", "bodyText": "", "createdAt": "2020-03-24T08:13:38Z", "url": "https://github.com/quarkusio/quarkus/pull/8101", "merged": true, "mergeCommit": {"oid": "4c02d4f992c1761c1c7823465c09e20473d26dcc"}, "closed": true, "closedAt": "2020-03-26T01:24:31Z", "author": {"login": "maxandersen"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQ0k8OgBqjMxNjAxODAxMzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRPeTOABqjMxNjYwMzgyNjQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "88ac8b040f9467149ec013dae5014f8a5a501116", "author": {"user": {"login": "maxandersen", "name": "Max Rydahl Andersen"}}, "url": "https://github.com/quarkusio/quarkus/commit/88ac8b040f9467149ec013dae5014f8a5a501116", "committedDate": "2020-03-24T08:11:47Z", "message": "Add support for multiple extension overrides\n\nWhy:\n\n * needed to allow for adding additional overrides for custom platforms\n\nThis change addreses the need by:\n\n * add support for a fileset on the descriptor mojo\n   note: currently only extensions are merged, the rest is last one wins."}, "afterCommit": {"oid": "7530442d1cd40ea350a75c962d88f37418c32397", "author": {"user": {"login": "maxandersen", "name": "Max Rydahl Andersen"}}, "url": "https://github.com/quarkusio/quarkus/commit/7530442d1cd40ea350a75c962d88f37418c32397", "committedDate": "2020-03-24T15:21:14Z", "message": "Add support for multiple overrides\n\nWhy:\n\n * would like to add additional overrides without having to\n   duplicating or editing the original overrides.\n\nThis change addreses the need by:\n\n * overridesfile can now be a comma separated list of files.\n * overrides are processed from all files thus if multiple override the same\n   keys then the last one wins."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNDM5MzI5", "url": "https://github.com/quarkusio/quarkus/pull/8101#pullrequestreview-380439329", "createdAt": "2020-03-24T15:43:18Z", "commit": {"oid": "7530442d1cd40ea350a75c962d88f37418c32397"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNDM5Nzc1", "url": "https://github.com/quarkusio/quarkus/pull/8101#pullrequestreview-380439775", "createdAt": "2020-03-24T15:43:47Z", "commit": {"oid": "7530442d1cd40ea350a75c962d88f37418c32397"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNTc5MTE3", "url": "https://github.com/quarkusio/quarkus/pull/8101#pullrequestreview-380579117", "createdAt": "2020-03-24T18:17:26Z", "commit": {"oid": "7530442d1cd40ea350a75c962d88f37418c32397"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoxNzoyNlrOF69TMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoxNzoyNlrOF69TMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2NjA2Nw==", "bodyText": "We don't use star imports, can you use the appropriate code formatter?", "url": "https://github.com/quarkusio/quarkus/pull/8101#discussion_r397366067", "createdAt": "2020-03-24T18:17:26Z", "author": {"login": "gastaldi"}, "path": "devtools/platform-descriptor-json-plugin/src/main/java/io/quarkus/maven/GenerateExtensionsJsonMojo.java", "diffHunk": "@@ -9,20 +9,10 @@\n import java.nio.file.FileSystem;\n import java.nio.file.Files;\n import java.nio.file.Path;\n-import java.util.Collections;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n-\n-import javax.json.Json;\n-import javax.json.JsonArray;\n-import javax.json.JsonArrayBuilder;\n-import javax.json.JsonObject;\n-import javax.json.JsonObjectBuilder;\n-import javax.json.JsonReader;\n-import javax.json.JsonValue;\n-import javax.json.JsonWriter;\n-import javax.json.JsonWriterFactory;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7530442d1cd40ea350a75c962d88f37418c32397"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNTc5NDI1", "url": "https://github.com/quarkusio/quarkus/pull/8101#pullrequestreview-380579425", "createdAt": "2020-03-24T18:17:50Z", "commit": {"oid": "7530442d1cd40ea350a75c962d88f37418c32397"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoxNzo1MFrOF69UPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoxNzo1MFrOF69UPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2NjMzMg==", "bodyText": "Remove commented out code", "url": "https://github.com/quarkusio/quarkus/pull/8101#discussion_r397366332", "createdAt": "2020-03-24T18:17:50Z", "author": {"login": "gastaldi"}, "path": "devtools/platform-descriptor-json-plugin/src/main/java/io/quarkus/maven/GenerateExtensionsJsonMojo.java", "diffHunk": "@@ -121,29 +112,25 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n             return;\n         }\n \n-        // Read the overrides file for the extensions (if it exists)\n-        Map<String, JsonObject> extOverrides = new HashMap<>();\n-        JsonObject theRest = null;\n-        if (overridesFile.isFile()) {\n-            info(\"Found overrides file %s\", overridesFile);\n-            try (JsonReader jsonReader = Json.createReader(new FileInputStream(overridesFile))) {\n-                JsonObject overridesObject = jsonReader.readObject();\n-                JsonArray extOverrideObjects = overridesObject.getJsonArray(\"extensions\");\n-                if (extOverrideObjects != null) {\n-                    // Put the extension overrides into a map keyed to their GAV\n-                    for (JsonValue val : extOverrideObjects) {\n-                        JsonObject extOverrideObject = val.asJsonObject();\n-                        String key = extensionId(extOverrideObject);\n-                        extOverrides.put(key, extOverrideObject);\n-                    }\n-                }\n+        List<File> overrides = new ArrayList<>();\n \n-                theRest = overridesObject;\n-            } catch (IOException e) {\n-                throw new MojoExecutionException(\"Failed to read \" + overridesFile, e);\n+        overrides.addAll(Arrays.stream(overridesFile.split(\",\"))\n+                .map(s -> {\n+                    return new File(s.trim());\n+                })\n+                .collect(Collectors.toList()));\n+\n+        List<OverrideInfo> allOverrides = new ArrayList();\n+        for (File file : overrides) {\n+            OverrideInfo overrideInfo = getOverrideInfo(file);\n+            if (overrideInfo != null) {\n+                allOverrides.add(overrideInfo);\n             }\n         }\n \n+        //Map<String, JsonObject> extOverrides = overrideInfo.getExtOverrides();\n+        //JsonObject theRest = overrideInfo.getTheRest();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7530442d1cd40ea350a75c962d88f37418c32397"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNTgxMDIw", "url": "https://github.com/quarkusio/quarkus/pull/8101#pullrequestreview-380581020", "createdAt": "2020-03-24T18:19:55Z", "commit": {"oid": "7530442d1cd40ea350a75c962d88f37418c32397"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoxOTo1NlrOF69ZUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoxOTo1NlrOF69ZUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2NzYzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    overrides.addAll(Arrays.stream(overridesFile.split(\",\"))\n          \n          \n            \n                            .map(s -> {\n          \n          \n            \n                                return new File(s.trim());\n          \n          \n            \n                            })\n          \n          \n            \n                            .collect(Collectors.toList()));\n          \n          \n            \n                    for (String file: overridesFile.split(\",\")) {\n          \n          \n            \n                       overrides.add(new File(file.trim()));\n          \n          \n            \n                    }", "url": "https://github.com/quarkusio/quarkus/pull/8101#discussion_r397367635", "createdAt": "2020-03-24T18:19:56Z", "author": {"login": "gastaldi"}, "path": "devtools/platform-descriptor-json-plugin/src/main/java/io/quarkus/maven/GenerateExtensionsJsonMojo.java", "diffHunk": "@@ -121,29 +112,25 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n             return;\n         }\n \n-        // Read the overrides file for the extensions (if it exists)\n-        Map<String, JsonObject> extOverrides = new HashMap<>();\n-        JsonObject theRest = null;\n-        if (overridesFile.isFile()) {\n-            info(\"Found overrides file %s\", overridesFile);\n-            try (JsonReader jsonReader = Json.createReader(new FileInputStream(overridesFile))) {\n-                JsonObject overridesObject = jsonReader.readObject();\n-                JsonArray extOverrideObjects = overridesObject.getJsonArray(\"extensions\");\n-                if (extOverrideObjects != null) {\n-                    // Put the extension overrides into a map keyed to their GAV\n-                    for (JsonValue val : extOverrideObjects) {\n-                        JsonObject extOverrideObject = val.asJsonObject();\n-                        String key = extensionId(extOverrideObject);\n-                        extOverrides.put(key, extOverrideObject);\n-                    }\n-                }\n+        List<File> overrides = new ArrayList<>();\n \n-                theRest = overridesObject;\n-            } catch (IOException e) {\n-                throw new MojoExecutionException(\"Failed to read \" + overridesFile, e);\n+        overrides.addAll(Arrays.stream(overridesFile.split(\",\"))\n+                .map(s -> {\n+                    return new File(s.trim());\n+                })\n+                .collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7530442d1cd40ea350a75c962d88f37418c32397"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNTgyMjAy", "url": "https://github.com/quarkusio/quarkus/pull/8101#pullrequestreview-380582202", "createdAt": "2020-03-24T18:21:32Z", "commit": {"oid": "7530442d1cd40ea350a75c962d88f37418c32397"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoyMTozMlrOF69dGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODoyMTozMlrOF69dGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM2ODYwMg==", "bodyText": "You can iterate overridesFile.split(\",\") and delete the List<File> overrides above :)", "url": "https://github.com/quarkusio/quarkus/pull/8101#discussion_r397368602", "createdAt": "2020-03-24T18:21:32Z", "author": {"login": "gastaldi"}, "path": "devtools/platform-descriptor-json-plugin/src/main/java/io/quarkus/maven/GenerateExtensionsJsonMojo.java", "diffHunk": "@@ -121,29 +112,25 @@ public void execute() throws MojoExecutionException, MojoFailureException {\n             return;\n         }\n \n-        // Read the overrides file for the extensions (if it exists)\n-        Map<String, JsonObject> extOverrides = new HashMap<>();\n-        JsonObject theRest = null;\n-        if (overridesFile.isFile()) {\n-            info(\"Found overrides file %s\", overridesFile);\n-            try (JsonReader jsonReader = Json.createReader(new FileInputStream(overridesFile))) {\n-                JsonObject overridesObject = jsonReader.readObject();\n-                JsonArray extOverrideObjects = overridesObject.getJsonArray(\"extensions\");\n-                if (extOverrideObjects != null) {\n-                    // Put the extension overrides into a map keyed to their GAV\n-                    for (JsonValue val : extOverrideObjects) {\n-                        JsonObject extOverrideObject = val.asJsonObject();\n-                        String key = extensionId(extOverrideObject);\n-                        extOverrides.put(key, extOverrideObject);\n-                    }\n-                }\n+        List<File> overrides = new ArrayList<>();\n \n-                theRest = overridesObject;\n-            } catch (IOException e) {\n-                throw new MojoExecutionException(\"Failed to read \" + overridesFile, e);\n+        overrides.addAll(Arrays.stream(overridesFile.split(\",\"))\n+                .map(s -> {\n+                    return new File(s.trim());\n+                })\n+                .collect(Collectors.toList()));\n+\n+        List<OverrideInfo> allOverrides = new ArrayList();\n+        for (File file : overrides) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7530442d1cd40ea350a75c962d88f37418c32397"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwODMzODQ5", "url": "https://github.com/quarkusio/quarkus/pull/8101#pullrequestreview-380833849", "createdAt": "2020-03-25T03:13:39Z", "commit": {"oid": "7530442d1cd40ea350a75c962d88f37418c32397"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68b339aa8b80e38f6fc1f0691a2eb688233bbeba", "author": {"user": {"login": "maxandersen", "name": "Max Rydahl Andersen"}}, "url": "https://github.com/quarkusio/quarkus/commit/68b339aa8b80e38f6fc1f0691a2eb688233bbeba", "committedDate": "2020-03-25T21:35:00Z", "message": "Update devtools/platform-descriptor-json-plugin/src/main/java/io/quarkus/maven/GenerateExtensionsJsonMojo.java\n\nCo-Authored-By: George Gastaldi <gegastaldi@gmail.com>"}, "afterCommit": {"oid": "912a8a9c2a299e8daa873e7801557da9461f531d", "author": {"user": {"login": "maxandersen", "name": "Max Rydahl Andersen"}}, "url": "https://github.com/quarkusio/quarkus/commit/912a8a9c2a299e8daa873e7801557da9461f531d", "committedDate": "2020-03-25T22:04:39Z", "message": "Add support for multiple overrides\n\nWhy:\n\n * would like to add additional overrides without having to\n   duplicating or editing the original overrides.\n\nThis change addreses the need by:\n\n * overridesfile can now be a comma separated list of files.\n * overrides are processed from all files thus if multiple override the same\n   keys then the last one wins."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNTc1MjE5", "url": "https://github.com/quarkusio/quarkus/pull/8101#pullrequestreview-381575219", "createdAt": "2020-03-25T22:13:31Z", "commit": {"oid": "912a8a9c2a299e8daa873e7801557da9461f531d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2edc7342c6bdc3de893ee1ca1ced9ebf65d4c7bf", "author": {"user": {"login": "maxandersen", "name": "Max Rydahl Andersen"}}, "url": "https://github.com/quarkusio/quarkus/commit/2edc7342c6bdc3de893ee1ca1ced9ebf65d4c7bf", "committedDate": "2020-03-25T22:44:18Z", "message": "Add support for multiple overrides\n\nWhy:\n\n * would like to add additional overrides without having to\n   duplicating or editing the original overrides.\n\nThis change addreses the need by:\n\n * overridesfile can now be a comma separated list of files.\n * overrides are processed from all files thus if multiple override the same\n   keys then the last one wins."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "912a8a9c2a299e8daa873e7801557da9461f531d", "author": {"user": {"login": "maxandersen", "name": "Max Rydahl Andersen"}}, "url": "https://github.com/quarkusio/quarkus/commit/912a8a9c2a299e8daa873e7801557da9461f531d", "committedDate": "2020-03-25T22:04:39Z", "message": "Add support for multiple overrides\n\nWhy:\n\n * would like to add additional overrides without having to\n   duplicating or editing the original overrides.\n\nThis change addreses the need by:\n\n * overridesfile can now be a comma separated list of files.\n * overrides are processed from all files thus if multiple override the same\n   keys then the last one wins."}, "afterCommit": {"oid": "2edc7342c6bdc3de893ee1ca1ced9ebf65d4c7bf", "author": {"user": {"login": "maxandersen", "name": "Max Rydahl Andersen"}}, "url": "https://github.com/quarkusio/quarkus/commit/2edc7342c6bdc3de893ee1ca1ced9ebf65d4c7bf", "committedDate": "2020-03-25T22:44:18Z", "message": "Add support for multiple overrides\n\nWhy:\n\n * would like to add additional overrides without having to\n   duplicating or editing the original overrides.\n\nThis change addreses the need by:\n\n * overridesfile can now be a comma separated list of files.\n * overrides are processed from all files thus if multiple override the same\n   keys then the last one wins."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3591, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}