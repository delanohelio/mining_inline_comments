{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNzk3OTA5", "number": 6989, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNToxODozOVrODdNtIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNToxODozOVrODdNtIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxOTU5ODQxOnYy", "diffSide": "RIGHT", "path": "integration-tests/main/src/main/java/io/quarkus/it/metrics/DummyGauge.java", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwNToxODozOVrOFlsDpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQwOTowMzowOVrOFlwKEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA2MzQ2MQ==", "bodyText": "Shouldn't we add an assertion in io.quarkus.it.main.MetricsTestCase or somewhere to make sure the gauge really gets registered?", "url": "https://github.com/quarkusio/quarkus/pull/6989#discussion_r375063461", "createdAt": "2020-02-05T05:18:39Z", "author": {"login": "jmartisk"}, "path": "integration-tests/main/src/main/java/io/quarkus/it/metrics/DummyGauge.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.it.metrics;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.interceptor.AroundConstruct;\n+\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+import org.eclipse.microprofile.metrics.annotation.Gauge;\n+\n+import io.quarkus.runtime.StartupEvent;\n+\n+/**\n+ * The purpose of this bean is to test that ArC automatically registers the constructor for reflection if an\n+ * {@link AroundConstruct} interceptors is used. We use a dedicated bean to make sure the class is not registered by another\n+ * extension, ie. by resteasy in case of JAX-RS resource.\n+ * \n+ * See https://github.com/quarkusio/quarkus/issues/6898\n+ */\n+@ApplicationScoped\n+public class DummyGauge {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90fde871ec719ad62f88fa34d09863d79c624197"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA5NDA1OA==", "bodyText": "Hm, we should. But we will have to add @RegisterForReflection too, due to #6993. @jmartisk would you care to add this assertion to my PR? ;-)", "url": "https://github.com/quarkusio/quarkus/pull/6989#discussion_r375094058", "createdAt": "2020-02-05T07:27:16Z", "author": {"login": "mkouba"}, "path": "integration-tests/main/src/main/java/io/quarkus/it/metrics/DummyGauge.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.it.metrics;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.interceptor.AroundConstruct;\n+\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+import org.eclipse.microprofile.metrics.annotation.Gauge;\n+\n+import io.quarkus.runtime.StartupEvent;\n+\n+/**\n+ * The purpose of this bean is to test that ArC automatically registers the constructor for reflection if an\n+ * {@link AroundConstruct} interceptors is used. We use a dedicated bean to make sure the class is not registered by another\n+ * extension, ie. by resteasy in case of JAX-RS resource.\n+ * \n+ * See https://github.com/quarkusio/quarkus/issues/6898\n+ */\n+@ApplicationScoped\n+public class DummyGauge {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA2MzQ2MQ=="}, "originalCommit": {"oid": "90fde871ec719ad62f88fa34d09863d79c624197"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwMzg2NA==", "bodyText": "Oh, I thought the changes in this PR mean we don't need that annotation anymore. Ok.\nHow do I add something to your PR? I don't think I have permissions for that.", "url": "https://github.com/quarkusio/quarkus/pull/6989#discussion_r375103864", "createdAt": "2020-02-05T07:57:36Z", "author": {"login": "jmartisk"}, "path": "integration-tests/main/src/main/java/io/quarkus/it/metrics/DummyGauge.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.it.metrics;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.interceptor.AroundConstruct;\n+\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+import org.eclipse.microprofile.metrics.annotation.Gauge;\n+\n+import io.quarkus.runtime.StartupEvent;\n+\n+/**\n+ * The purpose of this bean is to test that ArC automatically registers the constructor for reflection if an\n+ * {@link AroundConstruct} interceptors is used. We use a dedicated bean to make sure the class is not registered by another\n+ * extension, ie. by resteasy in case of JAX-RS resource.\n+ * \n+ * See https://github.com/quarkusio/quarkus/issues/6898\n+ */\n+@ApplicationScoped\n+public class DummyGauge {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA2MzQ2MQ=="}, "originalCommit": {"oid": "90fde871ec719ad62f88fa34d09863d79c624197"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwNjYzNg==", "bodyText": "Nope, this PR merely fixes the problem in ArC where we did not register the constructor for reflection if @AroundConstruct was used...", "url": "https://github.com/quarkusio/quarkus/pull/6989#discussion_r375106636", "createdAt": "2020-02-05T08:05:42Z", "author": {"login": "mkouba"}, "path": "integration-tests/main/src/main/java/io/quarkus/it/metrics/DummyGauge.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.it.metrics;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.interceptor.AroundConstruct;\n+\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+import org.eclipse.microprofile.metrics.annotation.Gauge;\n+\n+import io.quarkus.runtime.StartupEvent;\n+\n+/**\n+ * The purpose of this bean is to test that ArC automatically registers the constructor for reflection if an\n+ * {@link AroundConstruct} interceptors is used. We use a dedicated bean to make sure the class is not registered by another\n+ * extension, ie. by resteasy in case of JAX-RS resource.\n+ * \n+ * See https://github.com/quarkusio/quarkus/issues/6898\n+ */\n+@ApplicationScoped\n+public class DummyGauge {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA2MzQ2MQ=="}, "originalCommit": {"oid": "90fde871ec719ad62f88fa34d09863d79c624197"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEwNzAyMA==", "bodyText": "@jmartisk as a member of the project you can push changes to any PR.", "url": "https://github.com/quarkusio/quarkus/pull/6989#discussion_r375107020", "createdAt": "2020-02-05T08:06:45Z", "author": {"login": "geoand"}, "path": "integration-tests/main/src/main/java/io/quarkus/it/metrics/DummyGauge.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.it.metrics;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.interceptor.AroundConstruct;\n+\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+import org.eclipse.microprofile.metrics.annotation.Gauge;\n+\n+import io.quarkus.runtime.StartupEvent;\n+\n+/**\n+ * The purpose of this bean is to test that ArC automatically registers the constructor for reflection if an\n+ * {@link AroundConstruct} interceptors is used. We use a dedicated bean to make sure the class is not registered by another\n+ * extension, ie. by resteasy in case of JAX-RS resource.\n+ * \n+ * See https://github.com/quarkusio/quarkus/issues/6898\n+ */\n+@ApplicationScoped\n+public class DummyGauge {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA2MzQ2MQ=="}, "originalCommit": {"oid": "90fde871ec719ad62f88fa34d09863d79c624197"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEyMTE2Nw==", "bodyText": "But how? Which remote repo and branch should I push to? It won't allow me to push into Martin's fork.\nPer https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/committing-changes-to-a-pull-request-branch-created-from-a-fork it seems it could work if I had push access to Quarkus repo, which I don't", "url": "https://github.com/quarkusio/quarkus/pull/6989#discussion_r375121167", "createdAt": "2020-02-05T08:42:30Z", "author": {"login": "jmartisk"}, "path": "integration-tests/main/src/main/java/io/quarkus/it/metrics/DummyGauge.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.it.metrics;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.interceptor.AroundConstruct;\n+\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+import org.eclipse.microprofile.metrics.annotation.Gauge;\n+\n+import io.quarkus.runtime.StartupEvent;\n+\n+/**\n+ * The purpose of this bean is to test that ArC automatically registers the constructor for reflection if an\n+ * {@link AroundConstruct} interceptors is used. We use a dedicated bean to make sure the class is not registered by another\n+ * extension, ie. by resteasy in case of JAX-RS resource.\n+ * \n+ * See https://github.com/quarkusio/quarkus/issues/6898\n+ */\n+@ApplicationScoped\n+public class DummyGauge {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA2MzQ2MQ=="}, "originalCommit": {"oid": "90fde871ec719ad62f88fa34d09863d79c624197"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEyNTkzNg==", "bodyText": "I am pretty sure you and I have the same push access and pushing to a PR works for me.\nThis is what I do:\n\nAdd a git remote for the user's fork (using ssh, not https as the protocol) - for example foo\nCheck out the PR in a branch, say pull/1234\nMake changes and commit\nPush like so: git push foo pull/1234:name-of-branch-in-users-fork", "url": "https://github.com/quarkusio/quarkus/pull/6989#discussion_r375125936", "createdAt": "2020-02-05T08:53:07Z", "author": {"login": "geoand"}, "path": "integration-tests/main/src/main/java/io/quarkus/it/metrics/DummyGauge.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.it.metrics;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.interceptor.AroundConstruct;\n+\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+import org.eclipse.microprofile.metrics.annotation.Gauge;\n+\n+import io.quarkus.runtime.StartupEvent;\n+\n+/**\n+ * The purpose of this bean is to test that ArC automatically registers the constructor for reflection if an\n+ * {@link AroundConstruct} interceptors is used. We use a dedicated bean to make sure the class is not registered by another\n+ * extension, ie. by resteasy in case of JAX-RS resource.\n+ * \n+ * See https://github.com/quarkusio/quarkus/issues/6898\n+ */\n+@ApplicationScoped\n+public class DummyGauge {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA2MzQ2MQ=="}, "originalCommit": {"oid": "90fde871ec719ad62f88fa34d09863d79c624197"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEyOTU5NQ==", "bodyText": "Well, that's what I did and receive this on push\nERROR: Permission to mkouba/quarkus.git denied to jmartisk.\n\nThe document explicitly says that I can do this if the PR is opened against a repository where I have push access to - that's probably the issue. I have triage permission, but not push.\nAnyway I pushed it to my own branch jmartisk@7025a98 so I guess you guys can cherry-pick it", "url": "https://github.com/quarkusio/quarkus/pull/6989#discussion_r375129595", "createdAt": "2020-02-05T09:00:48Z", "author": {"login": "jmartisk"}, "path": "integration-tests/main/src/main/java/io/quarkus/it/metrics/DummyGauge.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.it.metrics;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.interceptor.AroundConstruct;\n+\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+import org.eclipse.microprofile.metrics.annotation.Gauge;\n+\n+import io.quarkus.runtime.StartupEvent;\n+\n+/**\n+ * The purpose of this bean is to test that ArC automatically registers the constructor for reflection if an\n+ * {@link AroundConstruct} interceptors is used. We use a dedicated bean to make sure the class is not registered by another\n+ * extension, ie. by resteasy in case of JAX-RS resource.\n+ * \n+ * See https://github.com/quarkusio/quarkus/issues/6898\n+ */\n+@ApplicationScoped\n+public class DummyGauge {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA2MzQ2MQ=="}, "originalCommit": {"oid": "90fde871ec719ad62f88fa34d09863d79c624197"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTEzMDY0Mg==", "bodyText": "Ok, will do. Apparently you don't have the permissions. Thanks!", "url": "https://github.com/quarkusio/quarkus/pull/6989#discussion_r375130642", "createdAt": "2020-02-05T09:03:09Z", "author": {"login": "mkouba"}, "path": "integration-tests/main/src/main/java/io/quarkus/it/metrics/DummyGauge.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.it.metrics;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+import javax.interceptor.AroundConstruct;\n+\n+import org.eclipse.microprofile.metrics.MetricUnits;\n+import org.eclipse.microprofile.metrics.annotation.Gauge;\n+\n+import io.quarkus.runtime.StartupEvent;\n+\n+/**\n+ * The purpose of this bean is to test that ArC automatically registers the constructor for reflection if an\n+ * {@link AroundConstruct} interceptors is used. We use a dedicated bean to make sure the class is not registered by another\n+ * extension, ie. by resteasy in case of JAX-RS resource.\n+ * \n+ * See https://github.com/quarkusio/quarkus/issues/6898\n+ */\n+@ApplicationScoped\n+public class DummyGauge {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTA2MzQ2MQ=="}, "originalCommit": {"oid": "90fde871ec719ad62f88fa34d09863d79c624197"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1095, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}