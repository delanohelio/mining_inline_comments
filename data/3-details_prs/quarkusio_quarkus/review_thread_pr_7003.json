{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxMzY3NjE5", "number": 7003, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoyNDowNlrODdVEcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoyNzowMVrODdVINg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDgwNDk4OnYy", "diffSide": "RIGHT", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/AnnotationLiteralGenerator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoyNDowNlrOFl3g_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNDoxNToxNVrOFl5L4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1MTE5Ng==", "bodyText": "Shouldn't you use the LONG version?", "url": "https://github.com/quarkusio/quarkus/pull/7003#discussion_r375251196", "createdAt": "2020-02-05T13:24:06Z", "author": {"login": "gsmet"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/AnnotationLiteralGenerator.java", "diffHunk": "@@ -241,14 +254,30 @@ static ResultHandle arrayValue(AnnotationValue value, BytecodeCreator valueMetho\n                                 annotationClass);\n                     }\n                 }\n-                retValue = valueMethod.newArray(componentType(method), valueMethod.load(0));\n+                DotName componentName = componentTypeName(method);\n+                // Use empty array constants for common component kinds\n+                if (DotNames.CLASS.equals(componentName)) {\n+                    retValue = valueMethod.readStaticField(FieldDescriptors.ANNOTATION_LITERALS_EMPTY_CLASS_ARRAY);\n+                } else if (DotNames.STRING.equals(componentName)) {\n+                    retValue = valueMethod.readStaticField(FieldDescriptors.ANNOTATION_LITERALS_EMPTY_STRING_ARRAY);\n+                } else if (DotNames.LONG.equals(componentName)) {\n+                    retValue = valueMethod.readStaticField(FieldDescriptors.ANNOTATION_LITERALS_EMPTY_STRING_ARRAY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "689a18703ee3af8b634588407dfebdf8a6bf88f2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI3ODU2Mg==", "bodyText": "Yes, of course.. I'll fix it.", "url": "https://github.com/quarkusio/quarkus/pull/7003#discussion_r375278562", "createdAt": "2020-02-05T14:15:15Z", "author": {"login": "mkouba"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/AnnotationLiteralGenerator.java", "diffHunk": "@@ -241,14 +254,30 @@ static ResultHandle arrayValue(AnnotationValue value, BytecodeCreator valueMetho\n                                 annotationClass);\n                     }\n                 }\n-                retValue = valueMethod.newArray(componentType(method), valueMethod.load(0));\n+                DotName componentName = componentTypeName(method);\n+                // Use empty array constants for common component kinds\n+                if (DotNames.CLASS.equals(componentName)) {\n+                    retValue = valueMethod.readStaticField(FieldDescriptors.ANNOTATION_LITERALS_EMPTY_CLASS_ARRAY);\n+                } else if (DotNames.STRING.equals(componentName)) {\n+                    retValue = valueMethod.readStaticField(FieldDescriptors.ANNOTATION_LITERALS_EMPTY_STRING_ARRAY);\n+                } else if (DotNames.LONG.equals(componentName)) {\n+                    retValue = valueMethod.readStaticField(FieldDescriptors.ANNOTATION_LITERALS_EMPTY_STRING_ARRAY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1MTE5Ng=="}, "originalCommit": {"oid": "689a18703ee3af8b634588407dfebdf8a6bf88f2"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDgwNTQzOnYy", "diffSide": "RIGHT", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/AnnotationLiteralGenerator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoyNDoxNFrOFl3hPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoyNDoxNFrOFl3hPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1MTI2Mg==", "bodyText": "Shouldn't you use the INT version?", "url": "https://github.com/quarkusio/quarkus/pull/7003#discussion_r375251262", "createdAt": "2020-02-05T13:24:14Z", "author": {"login": "gsmet"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/AnnotationLiteralGenerator.java", "diffHunk": "@@ -241,14 +254,30 @@ static ResultHandle arrayValue(AnnotationValue value, BytecodeCreator valueMetho\n                                 annotationClass);\n                     }\n                 }\n-                retValue = valueMethod.newArray(componentType(method), valueMethod.load(0));\n+                DotName componentName = componentTypeName(method);\n+                // Use empty array constants for common component kinds\n+                if (DotNames.CLASS.equals(componentName)) {\n+                    retValue = valueMethod.readStaticField(FieldDescriptors.ANNOTATION_LITERALS_EMPTY_CLASS_ARRAY);\n+                } else if (DotNames.STRING.equals(componentName)) {\n+                    retValue = valueMethod.readStaticField(FieldDescriptors.ANNOTATION_LITERALS_EMPTY_STRING_ARRAY);\n+                } else if (DotNames.LONG.equals(componentName)) {\n+                    retValue = valueMethod.readStaticField(FieldDescriptors.ANNOTATION_LITERALS_EMPTY_STRING_ARRAY);\n+                } else if (DotNames.INTEGER.equals(componentName)) {\n+                    retValue = valueMethod.readStaticField(FieldDescriptors.ANNOTATION_LITERALS_EMPTY_STRING_ARRAY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "689a18703ee3af8b634588407dfebdf8a6bf88f2"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDgwNjUyOnYy", "diffSide": "RIGHT", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/FieldDescriptors.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoyNDozNVrOFl3h7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNDoxNTo1MVrOFl5NQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1MTQzNw==", "bodyText": "Is it normal it's String here?", "url": "https://github.com/quarkusio/quarkus/pull/7003#discussion_r375251437", "createdAt": "2020-02-05T13:24:35Z", "author": {"login": "gsmet"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/FieldDescriptors.java", "diffHunk": "@@ -12,6 +13,22 @@\n     static final FieldDescriptor QUALIFIERS_IP_QUALIFIERS = FieldDescriptor.of(Qualifiers.class, \"IP_DEFAULT_QUALIFIERS\",\n             Set.class);\n \n+    static final FieldDescriptor ANNOTATION_LITERALS_EMPTY_CLASS_ARRAY = FieldDescriptor.of(AnnotationLiterals.class,\n+            \"EMPTY_CLASS_ARRAY\",\n+            Class[].class);\n+\n+    static final FieldDescriptor ANNOTATION_LITERALS_EMPTY_STRING_ARRAY = FieldDescriptor.of(AnnotationLiterals.class,\n+            \"EMPTY_STRING_ARRAY\",\n+            String[].class);\n+\n+    static final FieldDescriptor ANNOTATION_LITERALS_EMPTY_LONG_ARRAY = FieldDescriptor.of(AnnotationLiterals.class,\n+            \"EMPTY_LONG_ARRAY\",\n+            String[].class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "689a18703ee3af8b634588407dfebdf8a6bf88f2"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI3ODkxNQ==", "bodyText": "Eh, of course not. I was just too tired...", "url": "https://github.com/quarkusio/quarkus/pull/7003#discussion_r375278915", "createdAt": "2020-02-05T14:15:51Z", "author": {"login": "mkouba"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/FieldDescriptors.java", "diffHunk": "@@ -12,6 +13,22 @@\n     static final FieldDescriptor QUALIFIERS_IP_QUALIFIERS = FieldDescriptor.of(Qualifiers.class, \"IP_DEFAULT_QUALIFIERS\",\n             Set.class);\n \n+    static final FieldDescriptor ANNOTATION_LITERALS_EMPTY_CLASS_ARRAY = FieldDescriptor.of(AnnotationLiterals.class,\n+            \"EMPTY_CLASS_ARRAY\",\n+            Class[].class);\n+\n+    static final FieldDescriptor ANNOTATION_LITERALS_EMPTY_STRING_ARRAY = FieldDescriptor.of(AnnotationLiterals.class,\n+            \"EMPTY_STRING_ARRAY\",\n+            String[].class);\n+\n+    static final FieldDescriptor ANNOTATION_LITERALS_EMPTY_LONG_ARRAY = FieldDescriptor.of(AnnotationLiterals.class,\n+            \"EMPTY_LONG_ARRAY\",\n+            String[].class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1MTQzNw=="}, "originalCommit": {"oid": "689a18703ee3af8b634588407dfebdf8a6bf88f2"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDgwNjkzOnYy", "diffSide": "RIGHT", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/FieldDescriptors.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoyNDo0M1rOFl3iMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoyNDo0M1rOFl3iMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1MTUwNQ==", "bodyText": "Same here?", "url": "https://github.com/quarkusio/quarkus/pull/7003#discussion_r375251505", "createdAt": "2020-02-05T13:24:43Z", "author": {"login": "gsmet"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/FieldDescriptors.java", "diffHunk": "@@ -12,6 +13,22 @@\n     static final FieldDescriptor QUALIFIERS_IP_QUALIFIERS = FieldDescriptor.of(Qualifiers.class, \"IP_DEFAULT_QUALIFIERS\",\n             Set.class);\n \n+    static final FieldDescriptor ANNOTATION_LITERALS_EMPTY_CLASS_ARRAY = FieldDescriptor.of(AnnotationLiterals.class,\n+            \"EMPTY_CLASS_ARRAY\",\n+            Class[].class);\n+\n+    static final FieldDescriptor ANNOTATION_LITERALS_EMPTY_STRING_ARRAY = FieldDescriptor.of(AnnotationLiterals.class,\n+            \"EMPTY_STRING_ARRAY\",\n+            String[].class);\n+\n+    static final FieldDescriptor ANNOTATION_LITERALS_EMPTY_LONG_ARRAY = FieldDescriptor.of(AnnotationLiterals.class,\n+            \"EMPTY_LONG_ARRAY\",\n+            String[].class);\n+    \n+    static final FieldDescriptor ANNOTATION_LITERALS_EMPTY_INT_ARRAY = FieldDescriptor.of(AnnotationLiterals.class,\n+            \"EMPTY_INT_ARRAY\",\n+            String[].class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "689a18703ee3af8b634588407dfebdf8a6bf88f2"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDgxNDYyOnYy", "diffSide": "RIGHT", "path": "independent-projects/arc/runtime/src/main/java/io/quarkus/arc/impl/AbstractInvocationContext.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMzoyNzowMVrOFl3m3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNDoxNjo0MFrOFl5PAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1MjcwMQ==", "bodyText": "Just to be sure, you call that one often or not? If you do better move that one to the constructor as they look fully immutable.", "url": "https://github.com/quarkusio/quarkus/pull/7003#discussion_r375252701", "createdAt": "2020-02-05T13:27:01Z", "author": {"login": "gsmet"}, "path": "independent-projects/arc/runtime/src/main/java/io/quarkus/arc/impl/AbstractInvocationContext.java", "diffHunk": "@@ -43,7 +44,7 @@ protected AbstractInvocationContext(Object target, Method method,\n \n     @Override\n     public Set<Annotation> getInterceptorBindings() {\n-        return interceptorBindings;\n+        return Collections.unmodifiableSet(interceptorBindings);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "689a18703ee3af8b634588407dfebdf8a6bf88f2"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI3OTM2MA==", "bodyText": "No. It's a consumer of the InvocationContext who can invoke this method inside the interceptor...", "url": "https://github.com/quarkusio/quarkus/pull/7003#discussion_r375279360", "createdAt": "2020-02-05T14:16:40Z", "author": {"login": "mkouba"}, "path": "independent-projects/arc/runtime/src/main/java/io/quarkus/arc/impl/AbstractInvocationContext.java", "diffHunk": "@@ -43,7 +44,7 @@ protected AbstractInvocationContext(Object target, Method method,\n \n     @Override\n     public Set<Annotation> getInterceptorBindings() {\n-        return interceptorBindings;\n+        return Collections.unmodifiableSet(interceptorBindings);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI1MjcwMQ=="}, "originalCommit": {"oid": "689a18703ee3af8b634588407dfebdf8a6bf88f2"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1103, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}