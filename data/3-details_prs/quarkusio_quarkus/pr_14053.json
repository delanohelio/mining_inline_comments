{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NTUyNzM0", "number": 14053, "title": "@TransactionScoped Context does not call @Predestroy on TransactionScoped Beans", "bodyText": "", "createdAt": "2020-12-25T08:37:58Z", "url": "https://github.com/quarkusio/quarkus/pull/14053", "merged": true, "mergeCommit": {"oid": "164c817a328a45fe7af40157c35b5b575aa99769"}, "closed": true, "closedAt": "2021-01-06T12:01:32Z", "author": {"login": "msfm"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABds5e-6AFqTU2MTE4MzcwMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtcLo-gFqTU2MjQ1NDI0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMTgzNzAx", "url": "https://github.com/quarkusio/quarkus/pull/14053#pullrequestreview-561183701", "createdAt": "2021-01-04T16:55:55Z", "commit": {"oid": "cbc452e4d5148ace79021708c412001b5a3820e1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNjo1NTo1NVrOIN5QnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNzowNzowNlrOIN5rEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0MDU0MA==", "bodyText": "Could you clarify why this needs to be a CopyOnWriteArraySet, and perhaps add a comment to the code?", "url": "https://github.com/quarkusio/quarkus/pull/14053#discussion_r551440540", "createdAt": "2021-01-04T16:55:55Z", "author": {"login": "Sanne"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/context/TransactionScopeCleanup.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.quarkus.narayana.jta.runtime.context;\n+\n+import java.util.Set;\n+import java.util.concurrent.CopyOnWriteArraySet;\n+\n+import javax.enterprise.context.spi.Contextual;\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.transaction.RollbackException;\n+import javax.transaction.Synchronization;\n+import javax.transaction.SystemException;\n+import javax.transaction.Transaction;\n+\n+public class TransactionScopeCleanup<T> implements Synchronization {\n+    private Set<TransactionScopedBean> beans;\n+    private TransactionContext context;\n+    private Transaction transaction;\n+\n+    public TransactionScopeCleanup(TransactionContext context, Transaction transaction) {\n+        this.context = context;\n+        this.transaction = transaction;\n+        this.beans = new CopyOnWriteArraySet<TransactionScopedBean>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbc452e4d5148ace79021708c412001b5a3820e1"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0MTU1NA==", "bodyText": "Also, if this instance is meant to be accessed concurrently (which the use of the CopyOnWrite seems to suggest), then the fields perhaps need to be declared final ?", "url": "https://github.com/quarkusio/quarkus/pull/14053#discussion_r551441554", "createdAt": "2021-01-04T16:57:26Z", "author": {"login": "Sanne"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/context/TransactionScopeCleanup.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.quarkus.narayana.jta.runtime.context;\n+\n+import java.util.Set;\n+import java.util.concurrent.CopyOnWriteArraySet;\n+\n+import javax.enterprise.context.spi.Contextual;\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.transaction.RollbackException;\n+import javax.transaction.Synchronization;\n+import javax.transaction.SystemException;\n+import javax.transaction.Transaction;\n+\n+public class TransactionScopeCleanup<T> implements Synchronization {\n+    private Set<TransactionScopedBean> beans;\n+    private TransactionContext context;\n+    private Transaction transaction;\n+\n+    public TransactionScopeCleanup(TransactionContext context, Transaction transaction) {\n+        this.context = context;\n+        this.transaction = transaction;\n+        this.beans = new CopyOnWriteArraySet<TransactionScopedBean>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0MDU0MA=="}, "originalCommit": {"oid": "cbc452e4d5148ace79021708c412001b5a3820e1"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0MjQyNQ==", "bodyText": "this could be marked static and final", "url": "https://github.com/quarkusio/quarkus/pull/14053#discussion_r551442425", "createdAt": "2021-01-04T16:58:48Z", "author": {"login": "Sanne"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/context/TransactionScopeCleanup.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.quarkus.narayana.jta.runtime.context;\n+\n+import java.util.Set;\n+import java.util.concurrent.CopyOnWriteArraySet;\n+\n+import javax.enterprise.context.spi.Contextual;\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.transaction.RollbackException;\n+import javax.transaction.Synchronization;\n+import javax.transaction.SystemException;\n+import javax.transaction.Transaction;\n+\n+public class TransactionScopeCleanup<T> implements Synchronization {\n+    private Set<TransactionScopedBean> beans;\n+    private TransactionContext context;\n+    private Transaction transaction;\n+\n+    public TransactionScopeCleanup(TransactionContext context, Transaction transaction) {\n+        this.context = context;\n+        this.transaction = transaction;\n+        this.beans = new CopyOnWriteArraySet<TransactionScopedBean>();\n+\n+        try {\n+            transaction.registerSynchronization(this);\n+        } catch (RollbackException e) {\n+            throw new RuntimeException(\"Cannot register synchronization because the transaction is in aborted state\");\n+        } catch (SystemException e) {\n+            throw new RuntimeException(\"null synchronization parameter!\");\n+        }\n+    }\n+\n+    public void registerBean(Contextual<T> contextual, CreationalContext<T> creationalContext, T bean) {\n+        beans.add(new TransactionScopedBean<>(contextual, creationalContext, bean));\n+    }\n+\n+    @Override\n+    public void beforeCompletion() {\n+    }\n+\n+    @Override\n+    public void afterCompletion(int i) {\n+        for (TransactionScopedBean bean : beans)\n+            bean.destroy();\n+\n+        context.cleanupScope(transaction);\n+    }\n+\n+    private class TransactionScopedBean<T> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbc452e4d5148ace79021708c412001b5a3820e1"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0MjUzNg==", "bodyText": "fields should be all final ?", "url": "https://github.com/quarkusio/quarkus/pull/14053#discussion_r551442536", "createdAt": "2021-01-04T16:59:01Z", "author": {"login": "Sanne"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/context/TransactionScopeCleanup.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.quarkus.narayana.jta.runtime.context;\n+\n+import java.util.Set;\n+import java.util.concurrent.CopyOnWriteArraySet;\n+\n+import javax.enterprise.context.spi.Contextual;\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.transaction.RollbackException;\n+import javax.transaction.Synchronization;\n+import javax.transaction.SystemException;\n+import javax.transaction.Transaction;\n+\n+public class TransactionScopeCleanup<T> implements Synchronization {\n+    private Set<TransactionScopedBean> beans;\n+    private TransactionContext context;\n+    private Transaction transaction;\n+\n+    public TransactionScopeCleanup(TransactionContext context, Transaction transaction) {\n+        this.context = context;\n+        this.transaction = transaction;\n+        this.beans = new CopyOnWriteArraySet<TransactionScopedBean>();\n+\n+        try {\n+            transaction.registerSynchronization(this);\n+        } catch (RollbackException e) {\n+            throw new RuntimeException(\"Cannot register synchronization because the transaction is in aborted state\");\n+        } catch (SystemException e) {\n+            throw new RuntimeException(\"null synchronization parameter!\");\n+        }\n+    }\n+\n+    public void registerBean(Contextual<T> contextual, CreationalContext<T> creationalContext, T bean) {\n+        beans.add(new TransactionScopedBean<>(contextual, creationalContext, bean));\n+    }\n+\n+    @Override\n+    public void beforeCompletion() {\n+    }\n+\n+    @Override\n+    public void afterCompletion(int i) {\n+        for (TransactionScopedBean bean : beans)\n+            bean.destroy();\n+\n+        context.cleanupScope(transaction);\n+    }\n+\n+    private class TransactionScopedBean<T> {\n+        Contextual<T> contextual;\n+        CreationalContext<T> creationalContext;\n+        T bean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbc452e4d5148ace79021708c412001b5a3820e1"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0MzQyMg==", "bodyText": "these two fields need to be final", "url": "https://github.com/quarkusio/quarkus/pull/14053#discussion_r551443422", "createdAt": "2021-01-04T17:00:27Z", "author": {"login": "Sanne"}, "path": "integration-tests/narayana-jta/src/main/java/io/quarkus/narayana/jta/TransactionScopedBean.java", "diffHunk": "@@ -1,9 +1,17 @@\n package io.quarkus.narayana.jta;\n \n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import javax.annotation.PostConstruct;\n+import javax.annotation.PreDestroy;\n import javax.transaction.TransactionScoped;\n \n @TransactionScoped\n public class TransactionScopedBean {\n+\n+    private static AtomicInteger initializedCount = new AtomicInteger(0);\n+    private static AtomicInteger destroyedCount = new AtomicInteger(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbc452e4d5148ace79021708c412001b5a3820e1"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0MzgyNA==", "bodyText": "Could you give this a different name? You're adding two classes with this name; I understand it's not a problem as they are in a different package, but it's a bit unpractical to have two around.", "url": "https://github.com/quarkusio/quarkus/pull/14053#discussion_r551443824", "createdAt": "2021-01-04T17:01:14Z", "author": {"login": "Sanne"}, "path": "integration-tests/narayana-jta/src/main/java/io/quarkus/narayana/jta/TransactionScopedBean.java", "diffHunk": "@@ -1,9 +1,17 @@\n package io.quarkus.narayana.jta;\n \n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import javax.annotation.PostConstruct;\n+import javax.annotation.PreDestroy;\n import javax.transaction.TransactionScoped;\n \n @TransactionScoped\n public class TransactionScopedBean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbc452e4d5148ace79021708c412001b5a3820e1"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0NTA5Mw==", "bodyText": "I'd prefer this to use a ConcurrentMap, so to not need synchronized on it further below.", "url": "https://github.com/quarkusio/quarkus/pull/14053#discussion_r551445093", "createdAt": "2021-01-04T17:03:20Z", "author": {"login": "Sanne"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/context/TransactionContext.java", "diffHunk": "@@ -32,6 +33,7 @@\n \n     private final TransactionSynchronizationRegistry transactionSynchronizationRegistry = new TransactionSynchronizationRegistryImple();\n     private final TransactionManager transactionManager = com.arjuna.ats.jta.TransactionManager.transactionManager();\n+    private final Map<Transaction, TransactionScopeCleanup<?>> transactions = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbc452e4d5148ace79021708c412001b5a3820e1"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0NTQ0MA==", "bodyText": "after making the transactions Map a ConcurrentMap, the synchronized can be removed.", "url": "https://github.com/quarkusio/quarkus/pull/14053#discussion_r551445440", "createdAt": "2021-01-04T17:03:54Z", "author": {"login": "Sanne"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/context/TransactionContext.java", "diffHunk": "@@ -154,6 +169,12 @@ private Transaction getCurrentTransaction() {\n         }\n     }\n \n+    void cleanupScope(Transaction transaction) {\n+        synchronized (transactions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbc452e4d5148ace79021708c412001b5a3820e1"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0NzMxNQ==", "bodyText": "after making the transactions Map a ConcurrentMap, the synchronized can be removed; the following operations can be made atomic with a little bit of care, e.g. using computeIfAbsent instead of get.\nEven better, for optimal performance, to a get first, and then resort to computeIfAbsent only if the first optimistic get operation failed.", "url": "https://github.com/quarkusio/quarkus/pull/14053#discussion_r551447315", "createdAt": "2021-01-04T17:07:06Z", "author": {"login": "Sanne"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/context/TransactionContext.java", "diffHunk": "@@ -105,12 +107,25 @@ public ContextState getState() {\n         if (instanceHandle != null) {\n             return instanceHandle.get();\n         } else if (creationalContext != null) {\n+            Transaction currentTransaction = getCurrentTransaction();\n             T createdInstance = contextual.create(creationalContext);\n             instanceHandle = new ContextInstanceHandleImpl<>((InjectableBean<T>) contextual, createdInstance,\n                     creationalContext);\n \n             contextState.put(contextual, instanceHandle);\n \n+            synchronized (transactions) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cbc452e4d5148ace79021708c412001b5a3820e1"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cbc452e4d5148ace79021708c412001b5a3820e1", "author": {"user": {"login": "msfm", "name": "Masafumi Miura"}}, "url": "https://github.com/quarkusio/quarkus/commit/cbc452e4d5148ace79021708c412001b5a3820e1", "committedDate": "2020-12-24T18:24:26Z", "message": "Update TransactionScopedTest to check @PostConstruct and @PreDestroy invocations for TransactionScoped bean"}, "afterCommit": {"oid": "79cc2a899b2fb56d251fd02ad526462834e9bd21", "author": {"user": {"login": "msfm", "name": "Masafumi Miura"}}, "url": "https://github.com/quarkusio/quarkus/commit/79cc2a899b2fb56d251fd02ad526462834e9bd21", "committedDate": "2021-01-05T17:02:28Z", "message": "Update TransactionScopedTest to check @PostConstruct and @PreDestroy invocations for TransactionScoped bean"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMTIxMjcz", "url": "https://github.com/quarkusio/quarkus/pull/14053#pullrequestreview-562121273", "createdAt": "2021-01-05T20:49:09Z", "commit": {"oid": "79cc2a899b2fb56d251fd02ad526462834e9bd21"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMDo0OTowOVrOIOmwNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQyMDo0OTowOVrOIOmwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MjE4NTkxMQ==", "bodyText": "Despite the argument is not used it could be named better.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public void afterCompletion(int i) {\n          \n          \n            \n                    public void afterCompletion(int status) {", "url": "https://github.com/quarkusio/quarkus/pull/14053#discussion_r552185911", "createdAt": "2021-01-05T20:49:09Z", "author": {"login": "ochaloup"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/context/TransactionContext.java", "diffHunk": "@@ -212,5 +222,13 @@ void destroy() {\n                     .collect(Collectors.toMap(ContextInstanceHandle::getBean, ContextInstanceHandle::get));\n         }\n \n+        @Override\n+        public void beforeCompletion() {\n+        }\n+\n+        @Override\n+        public void afterCompletion(int i) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79cc2a899b2fb56d251fd02ad526462834e9bd21"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMjQ0NDE5", "url": "https://github.com/quarkusio/quarkus/pull/14053#pullrequestreview-562244419", "createdAt": "2021-01-06T00:41:26Z", "commit": {"oid": "79cc2a899b2fb56d251fd02ad526462834e9bd21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79cc2a899b2fb56d251fd02ad526462834e9bd21", "author": {"user": {"login": "msfm", "name": "Masafumi Miura"}}, "url": "https://github.com/quarkusio/quarkus/commit/79cc2a899b2fb56d251fd02ad526462834e9bd21", "committedDate": "2021-01-05T17:02:28Z", "message": "Update TransactionScopedTest to check @PostConstruct and @PreDestroy invocations for TransactionScoped bean"}, "afterCommit": {"oid": "de5b88e3445f780784dd851e9e061cf18d83566c", "author": {"user": {"login": "msfm", "name": "Masafumi Miura"}}, "url": "https://github.com/quarkusio/quarkus/commit/de5b88e3445f780784dd851e9e061cf18d83566c", "committedDate": "2021-01-06T00:43:21Z", "message": "Update TransactionScopedTest to check @PostConstruct and @PreDestroy invocations for TransactionScoped bean"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzc3MDc3", "url": "https://github.com/quarkusio/quarkus/pull/14053#pullrequestreview-562377077", "createdAt": "2021-01-06T07:33:47Z", "commit": {"oid": "de5b88e3445f780784dd851e9e061cf18d83566c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39e1c0082ee23bb4273f674bd2937bbc2b0c2b0e", "author": {"user": {"login": "msfm", "name": "Masafumi Miura"}}, "url": "https://github.com/quarkusio/quarkus/commit/39e1c0082ee23bb4273f674bd2937bbc2b0c2b0e", "committedDate": "2021-01-06T08:24:21Z", "message": "Call @PreDestroy on TransactionScoped bean"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f5b2881ef97a298a86633c20d0279f7374f4ab3", "author": {"user": {"login": "msfm", "name": "Masafumi Miura"}}, "url": "https://github.com/quarkusio/quarkus/commit/2f5b2881ef97a298a86633c20d0279f7374f4ab3", "committedDate": "2021-01-06T08:24:22Z", "message": "Update TransactionScopedTest to check @PostConstruct and @PreDestroy invocations for TransactionScoped bean"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de5b88e3445f780784dd851e9e061cf18d83566c", "author": {"user": {"login": "msfm", "name": "Masafumi Miura"}}, "url": "https://github.com/quarkusio/quarkus/commit/de5b88e3445f780784dd851e9e061cf18d83566c", "committedDate": "2021-01-06T00:43:21Z", "message": "Update TransactionScopedTest to check @PostConstruct and @PreDestroy invocations for TransactionScoped bean"}, "afterCommit": {"oid": "2f5b2881ef97a298a86633c20d0279f7374f4ab3", "author": {"user": {"login": "msfm", "name": "Masafumi Miura"}}, "url": "https://github.com/quarkusio/quarkus/commit/2f5b2881ef97a298a86633c20d0279f7374f4ab3", "committedDate": "2021-01-06T08:24:22Z", "message": "Update TransactionScopedTest to check @PostConstruct and @PreDestroy invocations for TransactionScoped bean"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyNDQxNjUw", "url": "https://github.com/quarkusio/quarkus/pull/14053#pullrequestreview-562441650", "createdAt": "2021-01-06T09:23:38Z", "commit": {"oid": "2f5b2881ef97a298a86633c20d0279f7374f4ab3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyNDU0MjQ4", "url": "https://github.com/quarkusio/quarkus/pull/14053#pullrequestreview-562454248", "createdAt": "2021-01-06T09:33:53Z", "commit": {"oid": "2f5b2881ef97a298a86633c20d0279f7374f4ab3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4261, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}