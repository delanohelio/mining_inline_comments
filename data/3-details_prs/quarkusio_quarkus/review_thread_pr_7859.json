{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4MDE3MzMx", "number": 7859, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwNDoyNDoyNFrODoB8fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxODo0Njo1M1rODoEdOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzAxNTAyOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/config.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwNDoyNDoyNFrOF2Xr_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwNDoyNDoyNFrOF2Xr_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU1NTUxOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            will result on the value of the `callable.url` property to be at compilation time\n          \n          \n            \n            will result on the value of the `callable.url` property to be set at build time", "url": "https://github.com/quarkusio/quarkus/pull/7859#discussion_r392555518", "createdAt": "2020-03-14T04:24:24Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/config.adoc", "diffHunk": "@@ -442,6 +442,52 @@ The proper way to check the active profile programmatically is to use the `getAc\n Using `@ConfigProperty(\"quarkus.profile\")` will *not* work properly.\n ====\n \n+=== Using placeholders\n+\n+Quarkus supports the use of placeholders in the application.properties file. This allows the replacement of the used string by the value on compilation time.\n+\n+The placeholder can be used by enclosing the key inside `${}`.\n+\n+For example having the following property:\n+\n+[source,properties]\n+----\n+remote.host=google.com\n+----\n+having another property defined as\n+\n+[source,properties]\n+----\n+callable.url=http://${remote.host}/\n+----\n+\n+will result on the value of the `callable.url` property to be at compilation time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39fc45e1a5db65c067e96d419decef23d6dc15be"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzAxNTc0OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/config.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwNDoyNjoxOFrOF2XsZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwNDoyNjoxOFrOF2XsZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU1NTYyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            remote.host=google.com\n          \n          \n            \n            remote.host=quarkus.io\n          \n      \n    \n    \n  \n\nNo big deal, just a \"eat our own dog food\" thing \ud83d\ude04", "url": "https://github.com/quarkusio/quarkus/pull/7859#discussion_r392555621", "createdAt": "2020-03-14T04:26:18Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/config.adoc", "diffHunk": "@@ -442,6 +442,52 @@ The proper way to check the active profile programmatically is to use the `getAc\n Using `@ConfigProperty(\"quarkus.profile\")` will *not* work properly.\n ====\n \n+=== Using placeholders\n+\n+Quarkus supports the use of placeholders in the application.properties file. This allows the replacement of the used string by the value on compilation time.\n+\n+The placeholder can be used by enclosing the key inside `${}`.\n+\n+For example having the following property:\n+\n+[source,properties]\n+----\n+remote.host=google.com", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39fc45e1a5db65c067e96d419decef23d6dc15be"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzQxOTA4OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/config.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxODozNDoxOFrOF2a9vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxODozNDoxOFrOF2a9vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYwOTIxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Quarkus supports the use of placeholders in the application.properties file. This allows the replacement of the used string by the value on compilation time.\n          \n          \n            \n            Quarkus supports the use of placeholders in the `application.properties` file on build time.", "url": "https://github.com/quarkusio/quarkus/pull/7859#discussion_r392609214", "createdAt": "2020-03-14T18:34:18Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/config.adoc", "diffHunk": "@@ -442,6 +442,76 @@ The proper way to check the active profile programmatically is to use the `getAc\n Using `@ConfigProperty(\"quarkus.profile\")` will *not* work properly.\n ====\n \n+=== Using placeholders\n+\n+Quarkus supports the use of placeholders in the application.properties file. This allows the replacement of the used string by the value on compilation time.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a4895eec35f38255f8adc106cfc88346c541408"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMzQyNjQ4OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/config.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxODo0Njo1M1rOF2bBXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQxODo0Njo1M1rOF2bBXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxMDE0MA==", "bodyText": "Actually, this didn't work for me. To get the effect that is described, I had to do:\napplication.host=${HOST:${remote.host}}\n\nWhich also means that something like this would even work:\napplication.host=${HOST:${remote.host:localhost}}\n\nWould you like to give it a shot and update if you see the same effect?", "url": "https://github.com/quarkusio/quarkus/pull/7859#discussion_r392610140", "createdAt": "2020-03-14T18:46:53Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/config.adoc", "diffHunk": "@@ -488,6 +488,30 @@ quarkus.datasource.url=jdbc:mysql://${application.server}:3306/mydatabase?useSSL\n \n It does result in one more line in this example but the value of `application.server` can be reused in other properties, diminishing the possibility of typos and providing more flexibility in properties definitions.\n \n+=== Combining placeholders and environment variables\n+\n+Quarkus also supports the combination of both placeholders and environment variables.\n+\n+Let's assume you have following property defined in `application.properties`\n+[source,properties]\n+----\n+remote.host=quarkus.io\n+----\n+\n+You can combine environment variables and placeholders by having a property defined as follow\n+[source,properties]\n+----\n+application.host=${HOST:remote.host}\n+----\n+\n+This will expand the HOST environment variable and use the value of the property `remote.host` as the default value if `HOST` is not set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a4895eec35f38255f8adc106cfc88346c541408"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4872, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}