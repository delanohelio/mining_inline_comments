{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MTc3NzYz", "number": 10675, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMjowNjo1NlrOENyePw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMjowNjo1NlrOENyePw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyODkzODg3OnYy", "diffSide": "RIGHT", "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMjowNjo1NlrOGwlrZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMjoxODozNVrOGwmCNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwMjE0OQ==", "bodyText": "This is done for every class in hierarchy (until the method is found). Wouldn't once be sufficient?", "url": "https://github.com/quarkusio/quarkus/pull/10675#discussion_r453602149", "createdAt": "2020-07-13T12:06:56Z", "author": {"login": "famod"}, "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java", "diffHunk": "@@ -363,14 +370,45 @@ public void afterEach(ExtensionContext context) throws Exception {\n         }\n     }\n \n+    // We need the usual ClassLoader hacks in order to present the callbacks with the proper test object and context\n     private Map.Entry<Class<?>, ?> createQuarkusTestMethodContextTuple(ExtensionContext context) throws Exception {\n+        ClassLoader classLoader = runningQuarkusApplication.getClassLoader();\n         if (quarkusTestMethodContextClass == null) {\n-            quarkusTestMethodContextClass = Class.forName(QuarkusTestMethodContext.class.getName(), true,\n-                    runningQuarkusApplication.getClassLoader());\n+            quarkusTestMethodContextClass = Class.forName(QuarkusTestMethodContext.class.getName(), true, classLoader);\n         }\n+\n+        Method originalTestMethod = context.getRequiredTestMethod();\n+        Class<?>[] originalParameterTypes = originalTestMethod.getParameterTypes();\n+        Method actualTestMethod = null;\n+\n+        // go up the class hierachy to fetch the proper test method\n+        Class<?> c = actualTestClass;\n+        while (c != Object.class) {\n+            try {\n+                List<Class<?>> parameterTypesFromTccl = new ArrayList<>(originalParameterTypes.length);\n+                for (Class<?> type : originalParameterTypes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3813efab4ed9ce3c60294be5398c4e118f5ab31"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwMzg1OA==", "bodyText": "You're right! It got moved into the loop when I added the it (the initial implementation didn't have it)", "url": "https://github.com/quarkusio/quarkus/pull/10675#discussion_r453603858", "createdAt": "2020-07-13T12:10:24Z", "author": {"login": "geoand"}, "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java", "diffHunk": "@@ -363,14 +370,45 @@ public void afterEach(ExtensionContext context) throws Exception {\n         }\n     }\n \n+    // We need the usual ClassLoader hacks in order to present the callbacks with the proper test object and context\n     private Map.Entry<Class<?>, ?> createQuarkusTestMethodContextTuple(ExtensionContext context) throws Exception {\n+        ClassLoader classLoader = runningQuarkusApplication.getClassLoader();\n         if (quarkusTestMethodContextClass == null) {\n-            quarkusTestMethodContextClass = Class.forName(QuarkusTestMethodContext.class.getName(), true,\n-                    runningQuarkusApplication.getClassLoader());\n+            quarkusTestMethodContextClass = Class.forName(QuarkusTestMethodContext.class.getName(), true, classLoader);\n         }\n+\n+        Method originalTestMethod = context.getRequiredTestMethod();\n+        Class<?>[] originalParameterTypes = originalTestMethod.getParameterTypes();\n+        Method actualTestMethod = null;\n+\n+        // go up the class hierachy to fetch the proper test method\n+        Class<?> c = actualTestClass;\n+        while (c != Object.class) {\n+            try {\n+                List<Class<?>> parameterTypesFromTccl = new ArrayList<>(originalParameterTypes.length);\n+                for (Class<?> type : originalParameterTypes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwMjE0OQ=="}, "originalCommit": {"oid": "f3813efab4ed9ce3c60294be5398c4e118f5ab31"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwNDk2OA==", "bodyText": "the initial implementation didn't have it\n\nYeah, I noticed that. So you even fixed three problems! \ud83c\udf89", "url": "https://github.com/quarkusio/quarkus/pull/10675#discussion_r453604968", "createdAt": "2020-07-13T12:12:44Z", "author": {"login": "famod"}, "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java", "diffHunk": "@@ -363,14 +370,45 @@ public void afterEach(ExtensionContext context) throws Exception {\n         }\n     }\n \n+    // We need the usual ClassLoader hacks in order to present the callbacks with the proper test object and context\n     private Map.Entry<Class<?>, ?> createQuarkusTestMethodContextTuple(ExtensionContext context) throws Exception {\n+        ClassLoader classLoader = runningQuarkusApplication.getClassLoader();\n         if (quarkusTestMethodContextClass == null) {\n-            quarkusTestMethodContextClass = Class.forName(QuarkusTestMethodContext.class.getName(), true,\n-                    runningQuarkusApplication.getClassLoader());\n+            quarkusTestMethodContextClass = Class.forName(QuarkusTestMethodContext.class.getName(), true, classLoader);\n         }\n+\n+        Method originalTestMethod = context.getRequiredTestMethod();\n+        Class<?>[] originalParameterTypes = originalTestMethod.getParameterTypes();\n+        Method actualTestMethod = null;\n+\n+        // go up the class hierachy to fetch the proper test method\n+        Class<?> c = actualTestClass;\n+        while (c != Object.class) {\n+            try {\n+                List<Class<?>> parameterTypesFromTccl = new ArrayList<>(originalParameterTypes.length);\n+                for (Class<?> type : originalParameterTypes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwMjE0OQ=="}, "originalCommit": {"oid": "f3813efab4ed9ce3c60294be5398c4e118f5ab31"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwNzk5MA==", "bodyText": "I didn't set off to do so, that's for sure :)", "url": "https://github.com/quarkusio/quarkus/pull/10675#discussion_r453607990", "createdAt": "2020-07-13T12:18:35Z", "author": {"login": "geoand"}, "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java", "diffHunk": "@@ -363,14 +370,45 @@ public void afterEach(ExtensionContext context) throws Exception {\n         }\n     }\n \n+    // We need the usual ClassLoader hacks in order to present the callbacks with the proper test object and context\n     private Map.Entry<Class<?>, ?> createQuarkusTestMethodContextTuple(ExtensionContext context) throws Exception {\n+        ClassLoader classLoader = runningQuarkusApplication.getClassLoader();\n         if (quarkusTestMethodContextClass == null) {\n-            quarkusTestMethodContextClass = Class.forName(QuarkusTestMethodContext.class.getName(), true,\n-                    runningQuarkusApplication.getClassLoader());\n+            quarkusTestMethodContextClass = Class.forName(QuarkusTestMethodContext.class.getName(), true, classLoader);\n         }\n+\n+        Method originalTestMethod = context.getRequiredTestMethod();\n+        Class<?>[] originalParameterTypes = originalTestMethod.getParameterTypes();\n+        Method actualTestMethod = null;\n+\n+        // go up the class hierachy to fetch the proper test method\n+        Class<?> c = actualTestClass;\n+        while (c != Object.class) {\n+            try {\n+                List<Class<?>> parameterTypesFromTccl = new ArrayList<>(originalParameterTypes.length);\n+                for (Class<?> type : originalParameterTypes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzYwMjE0OQ=="}, "originalCommit": {"oid": "f3813efab4ed9ce3c60294be5398c4e118f5ab31"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2472, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}