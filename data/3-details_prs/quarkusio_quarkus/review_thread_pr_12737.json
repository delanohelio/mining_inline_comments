{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0MDkzNzA5", "number": 12737, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzoxNDowMlrOEt_QPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToyOTozNFrOEuJEKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjU3NzI0OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/rest-client.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzoxNDowMlrOHiHKXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMzoxNDowMlrOHiHKXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTUzMDk3NQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/quarkusio/quarkus/pull/12737#discussion_r505530975", "createdAt": "2020-10-15T13:14:02Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/rest-client.adoc", "diffHunk": "@@ -142,9 +141,15 @@ CDI injection as a REST Client\n \n [NOTE]\n ====\n-While `@Consumes` and `@Produces` are optional as auto-negotiation is supported,\n-it is heavily recommended to annotate your endpoints with them to define precisely the expected content-types.\n+When a JSON extension is installed such as `quarkus-rest-client-jsonb` or `quarkus-rest-client-jackson`, Quarkus will use the `application/json` media type\n+by default for most return values, unless the media type is explicitly set via\n+`@Produces` or `@Consumes` annotations (there are some exceptions for well known types, such as `String` and `File`, which default to `text/plain` and `application/octet-stream`\n+respectively).\n+\n+If you don't want JSON by default you can set `quarkus.resteasy-json.default-json=false` and the default will change back to being auto-negotiated. If you set this\n+you will need to add `@Produces(MediaType.APPLICATION_JSON)` and `@Consumes(MediaType.APPLICATION_JSON)` to your endpoints in order to use JSON.\n \n+If you don't rely on the JSON default, it is heavily recommended to annotate your endpoints with the `@Produces` and `@Consumes` annotations to define precisely the expected content-types.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e3330e2453ddb7c68b16cb6b431f90f03f63729"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2ODE4NDcyOnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-validator/runtime/src/main/java/io/quarkus/hibernate/validator/runtime/jaxrs/JaxrsEndPointValidationInterceptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToyOTozNFrOHiW23w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToyOTozNFrOHiW23w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc4ODEyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return Arrays.asList(MediaType.APPLICATION_JSON_TYPE);\n          \n          \n            \n                            return Collections.singletonList(MediaType.APPLICATION_JSON_TYPE);", "url": "https://github.com/quarkusio/quarkus/pull/12737#discussion_r505788127", "createdAt": "2020-10-15T19:29:34Z", "author": {"login": "gastaldi"}, "path": "extensions/hibernate-validator/runtime/src/main/java/io/quarkus/hibernate/validator/runtime/jaxrs/JaxrsEndPointValidationInterceptor.java", "diffHunk": "@@ -45,6 +46,10 @@ public void validateConstructorInvocation(InvocationContext ctx) throws Exceptio\n         MediaType[] producedMediaTypes = MediaTypeHelper.getProduces(method.getDeclaringClass(), method);\n \n         if (producedMediaTypes == null) {\n+            if (resteasyConfigSupport.isJsonDefault()) {\n+                return Arrays.asList(MediaType.APPLICATION_JSON_TYPE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b516dba161794cb4cf4e2c051edfebd475583ce9"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4321, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}