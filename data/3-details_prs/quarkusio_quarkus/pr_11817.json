{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NzgxMDYz", "number": 11817, "title": "Allow RestEasy JAXB collection serialization in native mode", "bodyText": "This PR fixes #11806\nIt adds a BuildStep for checking if specific RestEasy JAXB annotations are used for enforcing the Xml of the collection wrapping element (see https://docs.jboss.org/resteasy/docs/3.6.1.Final/userguide/html_single/#JAXB_Collections). If found, it is adding the wrapping RestEasy implementations as well as W3CDomHandler to the reflective classes.", "createdAt": "2020-09-02T12:20:45Z", "url": "https://github.com/quarkusio/quarkus/pull/11817", "merged": true, "mergeCommit": {"oid": "e896e68fd66337321345284ae5f580a9f41ba422"}, "closed": true, "closedAt": "2020-09-02T18:43:53Z", "author": {"login": "lbroudoux"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdE8CbGgFqTQ4MDgxOTEzMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdE9b4sAFqTQ4MDkyMDQ3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODE5MTMz", "url": "https://github.com/quarkusio/quarkus/pull/11817#pullrequestreview-480819133", "createdAt": "2020-09-02T13:28:55Z", "commit": {"oid": "d7b89121699bfe98e5e33c43dac1cab13b4f0d0f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzoyODo1NlrOHLvIeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzoyOToxNFrOHLvJYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA2ODYwMA==", "bodyText": "Maybe we could be a bit more clever and exit the for loop so that it's done only once?", "url": "https://github.com/quarkusio/quarkus/pull/11817#discussion_r482068600", "createdAt": "2020-09-02T13:28:56Z", "author": {"login": "gsmet"}, "path": "extensions/resteasy-jaxb/deployment/src/main/java/io/quarkus/resteasy/jaxb/deployment/ResteasyJaxbProcessor.java", "diffHunk": "@@ -1,14 +1,54 @@\n package io.quarkus.resteasy.jaxb.deployment;\n \n+import java.lang.annotation.Annotation;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.IndexView;\n+import org.jboss.resteasy.annotations.providers.jaxb.Wrapped;\n+import org.jboss.resteasy.annotations.providers.jaxb.WrappedMap;\n+\n import io.quarkus.deployment.Feature;\n import io.quarkus.deployment.annotations.BuildProducer;\n import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n \n public class ResteasyJaxbProcessor {\n \n+    private static final List<Class<? extends Annotation>> RESTEASY_JAXB_ANNOTATIONS = Arrays.asList(\n+            Wrapped.class,\n+            WrappedMap.class);\n+\n+    @Inject\n+    BuildProducer<ReflectiveClassBuildItem> reflectiveClass;\n+\n+    @BuildStep\n+    void processAnnotations(CombinedIndexBuildItem combinedIndexBuildItem) {\n+        IndexView index = combinedIndexBuildItem.getIndex();\n+\n+        // Handle RESTEasy annotations usage.\n+        for (Class annotationClazz : RESTEASY_JAXB_ANNOTATIONS) {\n+            DotName annotation = DotName.createSimple(annotationClazz.getName());\n+\n+            if (!index.getAnnotations(annotation).isEmpty()) {\n+                addReflectiveClass(true, true, \"org.jboss.resteasy.plugins.providers.jaxb.JaxbCollection\");\n+                addReflectiveClass(true, true, \"org.jboss.resteasy.plugins.providers.jaxb.JaxbMap\");\n+                addReflectiveClass(true, true, \"javax.xml.bind.annotation.W3CDomHandler\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7b89121699bfe98e5e33c43dac1cab13b4f0d0f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA2ODgzMg==", "bodyText": "Are the providers automatically added to RESTEasy somehow? If so I'm surprised they are not added for reflection there.", "url": "https://github.com/quarkusio/quarkus/pull/11817#discussion_r482068832", "createdAt": "2020-09-02T13:29:14Z", "author": {"login": "gsmet"}, "path": "extensions/resteasy-jaxb/deployment/src/main/java/io/quarkus/resteasy/jaxb/deployment/ResteasyJaxbProcessor.java", "diffHunk": "@@ -1,14 +1,54 @@\n package io.quarkus.resteasy.jaxb.deployment;\n \n+import java.lang.annotation.Annotation;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.IndexView;\n+import org.jboss.resteasy.annotations.providers.jaxb.Wrapped;\n+import org.jboss.resteasy.annotations.providers.jaxb.WrappedMap;\n+\n import io.quarkus.deployment.Feature;\n import io.quarkus.deployment.annotations.BuildProducer;\n import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n \n public class ResteasyJaxbProcessor {\n \n+    private static final List<Class<? extends Annotation>> RESTEASY_JAXB_ANNOTATIONS = Arrays.asList(\n+            Wrapped.class,\n+            WrappedMap.class);\n+\n+    @Inject\n+    BuildProducer<ReflectiveClassBuildItem> reflectiveClass;\n+\n+    @BuildStep\n+    void processAnnotations(CombinedIndexBuildItem combinedIndexBuildItem) {\n+        IndexView index = combinedIndexBuildItem.getIndex();\n+\n+        // Handle RESTEasy annotations usage.\n+        for (Class annotationClazz : RESTEASY_JAXB_ANNOTATIONS) {\n+            DotName annotation = DotName.createSimple(annotationClazz.getName());\n+\n+            if (!index.getAnnotations(annotation).isEmpty()) {\n+                addReflectiveClass(true, true, \"org.jboss.resteasy.plugins.providers.jaxb.JaxbCollection\");\n+                addReflectiveClass(true, true, \"org.jboss.resteasy.plugins.providers.jaxb.JaxbMap\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7b89121699bfe98e5e33c43dac1cab13b4f0d0f"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODIwNjA1", "url": "https://github.com/quarkusio/quarkus/pull/11817#pullrequestreview-480820605", "createdAt": "2020-09-02T13:30:28Z", "commit": {"oid": "d7b89121699bfe98e5e33c43dac1cab13b4f0d0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzozMDoyOFrOHLvM3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxMzozMDoyOFrOHLvM3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjA2OTcyNQ==", "bodyText": "Also, could you make it a parameter of the build step rather than injecting it here? It helps keeping track of the dependencies.", "url": "https://github.com/quarkusio/quarkus/pull/11817#discussion_r482069725", "createdAt": "2020-09-02T13:30:28Z", "author": {"login": "gsmet"}, "path": "extensions/resteasy-jaxb/deployment/src/main/java/io/quarkus/resteasy/jaxb/deployment/ResteasyJaxbProcessor.java", "diffHunk": "@@ -1,14 +1,54 @@\n package io.quarkus.resteasy.jaxb.deployment;\n \n+import java.lang.annotation.Annotation;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.IndexView;\n+import org.jboss.resteasy.annotations.providers.jaxb.Wrapped;\n+import org.jboss.resteasy.annotations.providers.jaxb.WrappedMap;\n+\n import io.quarkus.deployment.Feature;\n import io.quarkus.deployment.annotations.BuildProducer;\n import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n \n public class ResteasyJaxbProcessor {\n \n+    private static final List<Class<? extends Annotation>> RESTEASY_JAXB_ANNOTATIONS = Arrays.asList(\n+            Wrapped.class,\n+            WrappedMap.class);\n+\n+    @Inject\n+    BuildProducer<ReflectiveClassBuildItem> reflectiveClass;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7b89121699bfe98e5e33c43dac1cab13b4f0d0f"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwODYyNjY4", "url": "https://github.com/quarkusio/quarkus/pull/11817#pullrequestreview-480862668", "createdAt": "2020-09-02T14:13:16Z", "commit": {"oid": "287ea3385074ddb1ad6776ba41438a52f5ab61b3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDoxMzoxNlrOHLxJpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDoxMzoxNlrOHLxJpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwMTY3MA==", "bodyText": "I missed that one but we usually avoid star imports.", "url": "https://github.com/quarkusio/quarkus/pull/11817#discussion_r482101670", "createdAt": "2020-09-02T14:13:16Z", "author": {"login": "gsmet"}, "path": "extensions/resteasy-jaxb/deployment/src/test/java/io/quarkus/resteasy/jaxb/deployment/ProducesXMLTestCase.java", "diffHunk": "@@ -1,11 +1,18 @@\n package io.quarkus.resteasy.jaxb.deployment;\n \n+import static org.hamcrest.Matchers.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "287ea3385074ddb1ad6776ba41438a52f5ab61b3"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b318c9030c8cd5ca2b93d7b1cda5596d8f4ffa89", "author": {"user": {"login": "lbroudoux", "name": "Laurent Broudoux"}}, "url": "https://github.com/quarkusio/quarkus/commit/b318c9030c8cd5ca2b93d7b1cda5596d8f4ffa89", "committedDate": "2020-09-02T15:02:31Z", "message": "Allow RestEasy JAXB collection serialization in native mode"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "50af81b14d76de98acca5add8471ef2183e03153", "author": {"user": {"login": "lbroudoux", "name": "Laurent Broudoux"}}, "url": "https://github.com/quarkusio/quarkus/commit/50af81b14d76de98acca5add8471ef2183e03153", "committedDate": "2020-09-02T14:48:22Z", "message": "Merge branch 'reasteasy-jaxb-collection-serialization-fix' of https://github.com/lbroudoux/quarkus into reasteasy-jaxb-collection-serialization-fix"}, "afterCommit": {"oid": "b318c9030c8cd5ca2b93d7b1cda5596d8f4ffa89", "author": {"user": {"login": "lbroudoux", "name": "Laurent Broudoux"}}, "url": "https://github.com/quarkusio/quarkus/commit/b318c9030c8cd5ca2b93d7b1cda5596d8f4ffa89", "committedDate": "2020-09-02T15:02:31Z", "message": "Allow RestEasy JAXB collection serialization in native mode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwOTIwNDcz", "url": "https://github.com/quarkusio/quarkus/pull/11817#pullrequestreview-480920473", "createdAt": "2020-09-02T15:07:36Z", "commit": {"oid": "b318c9030c8cd5ca2b93d7b1cda5596d8f4ffa89"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 671, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}