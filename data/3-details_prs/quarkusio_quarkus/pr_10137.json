{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NTAwODkw", "number": 10137, "title": "Gradle support - Improve logging/visibility of native image generation", "bodyText": "Relates to #9306 (and there have been similar issues filed in the past).\nRight now, when using Gradle as the build tool to build a native image of a Quarkus application, there's hardly anything (literally nothing) that gets logged related to the native image generation. Being a Maven user, I had never tried Gradle before, but while investigating #9306, I was surprised at the starc contrast between Maven and Gradle output/logs that get generated during this native image generation. As I noted in that issue #9306 (comment), being used to the \"timing\" logs that native image process generates, not finding it in Gradle builds was like staring at the build screen for minutes, not knowing what's going on.\nThe root cause of this issue is that when using Gradle, if a Gradle build task (like the QuarkusBuild) spawns a Process (like the native-image process), then the process' STDOUT/STDERR content is lost, unless we explicitly stream it. Longer version of this issue is explained here gradle/gradle#13522. I was initially planning to propose a fix in gradle itself but having seen the inputs on that issue, I think they have their own valid limitations around this and a fix there most likely won't be feasible or easy to achieve.\nSo I went ahead and introduced this workaround where the build step(s) will now have a hint via the ProcessInheritIODisabled build item, that they can use to decide if they want to stream the STDOUT/STDERR of processes they might launch. Not all build steps that launch a process have to stream the content (some can just continue to ignore the output), but for a build step like native image generation, having the output/error made available is extremely useful.\nHere's what the Gradle build console looks like while building a native image for Quarkus, in the latest released versions and master:\n> Task :quarkusBuild\nbuilding quarkus runner\n\n(yes, literally nothing)\nand here's how it will look like with this patch:\n> Task :quarkusBuild\nbuilding quarkus runner\n\n-H:IncludeAllTimeZones and -H:IncludeTimeZones are now deprecated. Native-image includes all timezonesby default.\n[myapp-1.0.0-SNAPSHOT-runner:15146]    classlist:   4,076.37 ms,  0.96 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]        (cap):   2,416.19 ms,  0.94 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]        setup:   4,537.50 ms,  0.94 GB\n11:02:05,349 INFO  [org.jbo.threads] JBoss Threads version 3.1.1.Final\n[myapp-1.0.0-SNAPSHOT-runner:15146]     (clinit):     751.27 ms,  3.85 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]   (typeflow):  15,230.74 ms,  3.85 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]    (objects):  16,570.97 ms,  3.85 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]   (features):     640.82 ms,  3.85 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]     analysis:  34,543.19 ms,  3.85 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]     universe:   1,159.91 ms,  3.85 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]      (parse):   3,617.39 ms,  3.85 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]     (inline):   6,214.15 ms,  5.20 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]    (compile):  25,051.30 ms,  5.19 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]      compile:  37,606.24 ms,  5.19 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]        image:   6,257.57 ms,  5.16 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]        write:   2,376.77 ms,  5.16 GB\n[myapp-1.0.0-SNAPSHOT-runner:15146]      [total]:  90,954.49 ms,  5.16 GB\n\nIn this patch, I intentionally decided to keep out any build tool specific details (like Gradle specific APIs from the build steps and instead keep the hooks to support this workaround minimal and just depending on standard Java API).\nP.S: This is just one step towards making the Gradle build output, for Quarkus applicaitons, much more visible and informative (similar to Maven). There's still scope to improve the situation (outside of native image generation task) that I'm reviewing and working on. I plan to issue a separate PR for that once I have something useful.", "createdAt": "2020-06-21T05:55:57Z", "url": "https://github.com/quarkusio/quarkus/pull/10137", "merged": true, "mergeCommit": {"oid": "b21de5b4b92f7e83d3faa6adb34fcc75713452ec"}, "closed": true, "closedAt": "2020-06-22T00:06:35Z", "author": {"login": "jaikiran"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctWcRcAFqTQzNDQ3NDM5MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABctiVzuAFqTQzNDUzMDU5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NDc0Mzkw", "url": "https://github.com/quarkusio/quarkus/pull/10137#pullrequestreview-434474390", "createdAt": "2020-06-21T06:41:27Z", "commit": {"oid": "67bd7d61de298c5b88395c598c4cbe2cb757e5b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNjo0MToyN1rOGmqByQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQwNjo0MToyN1rOGmqByQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzE4NzY1Nw==", "bodyText": "Given that this code is now repeated everywhere the process is launched, how about adding a method to ProcessInheritIODsiabled that takes ProcessBuilder or arguments necessary to initialize and start it?", "url": "https://github.com/quarkusio/quarkus/pull/10137#discussion_r443187657", "createdAt": "2020-06-21T06:41:27Z", "author": {"login": "aloubyansky"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/NativeImageBuildStep.java", "diffHunk": "@@ -126,9 +129,15 @@ public NativeImageBuildItem build(NativeConfig nativeConfig, NativeImageSourceJa\n                 log.info(\"Pulling image \" + nativeConfig.builderImage);\n                 Process pullProcess = null;\n                 try {\n-                    pullProcess = new ProcessBuilder(Arrays.asList(containerRuntime, \"pull\", nativeConfig.builderImage))\n-                            .inheritIO()\n-                            .start();\n+                    final ProcessBuilder pb = new ProcessBuilder(\n+                            Arrays.asList(containerRuntime, \"pull\", nativeConfig.builderImage));\n+                    if (processInheritIODisabled.isPresent()) {\n+                        // explicitly stream the stdout/stderr of the new process to this process' System.out/System.err\n+                        pullProcess = pb.start();\n+                        ProcessUtil.streamToSysOutSysErr(pb.start());\n+                    } else {\n+                        pullProcess = pb.inheritIO().start();\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67bd7d61de298c5b88395c598c4cbe2cb757e5b5"}, "originalPosition": 36}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "67bd7d61de298c5b88395c598c4cbe2cb757e5b5", "author": {"user": {"login": "jaikiran", "name": "Jaikiran"}}, "url": "https://github.com/quarkusio/quarkus/commit/67bd7d61de298c5b88395c598c4cbe2cb757e5b5", "committedDate": "2020-06-21T05:32:42Z", "message": "Workaround Gradle issue https://github.com/gradle/gradle/issues/13522\nExplicitly capture stdout/stderr of processes launched by build steps when run in the context of a Gradle build"}, "afterCommit": {"oid": "8d00d52cdc9b74fa34e96e153b27e3e6dc32c285", "author": {"user": {"login": "jaikiran", "name": "Jaikiran"}}, "url": "https://github.com/quarkusio/quarkus/commit/8d00d52cdc9b74fa34e96e153b27e3e6dc32c285", "committedDate": "2020-06-21T07:11:00Z", "message": "Workaround Gradle issue https://github.com/gradle/gradle/issues/13522\nExplicitly capture stdout/stderr of processes launched by build steps when run in the context of a Gradle build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NDkwMjMz", "url": "https://github.com/quarkusio/quarkus/pull/10137#pullrequestreview-434490233", "createdAt": "2020-06-21T10:46:20Z", "commit": {"oid": "8d00d52cdc9b74fa34e96e153b27e3e6dc32c285"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxMDo0NjoyMVrOGmrL_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxMDo0NjoyMVrOGmrL_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIwNjY1Mg==", "bodyText": "Aren't standard and error streams merged into one in this case?", "url": "https://github.com/quarkusio/quarkus/pull/10137#discussion_r443206652", "createdAt": "2020-06-21T10:46:21Z", "author": {"login": "aloubyansky"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/util/ProcessUtil.java", "diffHunk": "@@ -0,0 +1,138 @@\n+package io.quarkus.deployment.util;\n+\n+import java.io.BufferedReader;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.InputStreamReader;\n+import java.io.PrintStream;\n+import java.nio.charset.StandardCharsets;\n+import java.util.Optional;\n+\n+import org.jboss.logging.Logger;\n+\n+import io.quarkus.deployment.pkg.builditem.ProcessInheritIODisabled;\n+\n+/**\n+ * Utility for {@link Process} related operations\n+ */\n+public class ProcessUtil {\n+\n+    private static final Logger logger = Logger.getLogger(ProcessUtil.class);\n+\n+    /**\n+     * Launches and returns a {@link Process} built from the {@link ProcessBuilder builder}.\n+     * Before launching the process, this method checks if {@link ProcessInheritIODisabled inherit IO is disabled}\n+     * and if so, streams both the {@code STDOUT} and {@code STDERR} of the launched process using\n+     * {@link #streamToSysOutSysErr(Process)}. Else, it launches the process with {@link ProcessBuilder#inheritIO()}\n+     *\n+     * @param builder The process builder\n+     * @param processInheritIODisabled Whether or not {@link java.lang.ProcessBuilder.Redirect#INHERIT} can be used for\n+     *        launching the process\n+     * @return Returns the newly launched process\n+     * @throws IOException\n+     */\n+    public static Process launchProcess(final ProcessBuilder builder,\n+            final Optional<ProcessInheritIODisabled> processInheritIODisabled) throws IOException {\n+        if (!processInheritIODisabled.isPresent()) {\n+            return builder.inheritIO().start();\n+        }\n+        final Process process = builder.redirectOutput(ProcessBuilder.Redirect.PIPE)\n+                .redirectError(ProcessBuilder.Redirect.PIPE)\n+                .start();\n+        // stream both stdout and stderr of the process\n+        ProcessUtil.streamToSysOutSysErr(process);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d00d52cdc9b74fa34e96e153b27e3e6dc32c285"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96825baf96884b709e09993a3bb11a523c94212d", "author": {"user": {"login": "jaikiran", "name": "Jaikiran"}}, "url": "https://github.com/quarkusio/quarkus/commit/96825baf96884b709e09993a3bb11a523c94212d", "committedDate": "2020-06-21T13:28:18Z", "message": "Workaround Gradle issue https://github.com/gradle/gradle/issues/13522\nExplicitly capture stdout/stderr of processes launched by build steps when run in the context of a Gradle build"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d00d52cdc9b74fa34e96e153b27e3e6dc32c285", "author": {"user": {"login": "jaikiran", "name": "Jaikiran"}}, "url": "https://github.com/quarkusio/quarkus/commit/8d00d52cdc9b74fa34e96e153b27e3e6dc32c285", "committedDate": "2020-06-21T07:11:00Z", "message": "Workaround Gradle issue https://github.com/gradle/gradle/issues/13522\nExplicitly capture stdout/stderr of processes launched by build steps when run in the context of a Gradle build"}, "afterCommit": {"oid": "96825baf96884b709e09993a3bb11a523c94212d", "author": {"user": {"login": "jaikiran", "name": "Jaikiran"}}, "url": "https://github.com/quarkusio/quarkus/commit/96825baf96884b709e09993a3bb11a523c94212d", "committedDate": "2020-06-21T13:28:18Z", "message": "Workaround Gradle issue https://github.com/gradle/gradle/issues/13522\nExplicitly capture stdout/stderr of processes launched by build steps when run in the context of a Gradle build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NTMwNTky", "url": "https://github.com/quarkusio/quarkus/pull/10137#pullrequestreview-434530592", "createdAt": "2020-06-21T20:33:16Z", "commit": {"oid": "96825baf96884b709e09993a3bb11a523c94212d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4273, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}