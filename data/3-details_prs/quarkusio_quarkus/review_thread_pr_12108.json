{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MjIyOTEw", "number": 12108, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzo1NTowM1rOEjmt1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzo1OTo1NlrOEjm3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzY5OTQzOnYy", "diffSide": "RIGHT", "path": "extensions/spring-cloud-config-client/runtime/src/main/java/io/quarkus/spring/cloud/config/client/runtime/SpringCloudConfigClientConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzo1NTowM1rOHSDHOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzo1ODoyMVrOHSDReQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4NzQxOQ==", "bodyText": "The HTTP spec RFC 2616 allows multiple values for a single HTTP header:\n\nMultiple message-header fields with the same field-name MAY be present in a message if and only if the entire field-value for that header field is defined as a comma-separated list [i.e., #(values)]. It MUST be possible to combine the multiple header fields into one \"field-name: field-value\" pair, without changing the semantics of the message, by appending each subsequent field-value to the first, each separated by a comma. The order in which header fields with the same field-name are received is therefore significant to the interpretation of the combined field value, and thus a proxy MUST NOT change the order of these field values when a message is forwarded.\n\nWhat this means is that you can send multiple values in a single header by concatenating them with commas. Do you want to support that here or that wouldn't matter?", "url": "https://github.com/quarkusio/quarkus/pull/12108#discussion_r488687419", "createdAt": "2020-09-15T13:55:03Z", "author": {"login": "gastaldi"}, "path": "extensions/spring-cloud-config-client/runtime/src/main/java/io/quarkus/spring/cloud/config/client/runtime/SpringCloudConfigClientConfig.java", "diffHunk": "@@ -96,7 +97,13 @@\n      * When using HTTPS and no keyStore has been specified, whether or not to trust all certificates\n      */\n     @ConfigItem(defaultValue = \"false\")\n-    boolean trustCerts;\n+    public boolean trustCerts;\n+\n+    /**\n+     * Custom headers to pass the Spring Cloud Config Server when performing the HTTP request\n+     */\n+    @ConfigItem\n+    public Map<String, String> headers;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f88f43c642c979ea6926d0204d775d772415a5b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5MDA0MQ==", "bodyText": "Yeah I know, but I really don't think it's necessary. Best keep the common case easy to use.", "url": "https://github.com/quarkusio/quarkus/pull/12108#discussion_r488690041", "createdAt": "2020-09-15T13:58:21Z", "author": {"login": "geoand"}, "path": "extensions/spring-cloud-config-client/runtime/src/main/java/io/quarkus/spring/cloud/config/client/runtime/SpringCloudConfigClientConfig.java", "diffHunk": "@@ -96,7 +97,13 @@\n      * When using HTTPS and no keyStore has been specified, whether or not to trust all certificates\n      */\n     @ConfigItem(defaultValue = \"false\")\n-    boolean trustCerts;\n+    public boolean trustCerts;\n+\n+    /**\n+     * Custom headers to pass the Spring Cloud Config Server when performing the HTTP request\n+     */\n+    @ConfigItem\n+    public Map<String, String> headers;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY4NzQxOQ=="}, "originalCommit": {"oid": "9f88f43c642c979ea6926d0204d775d772415a5b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NzcyMzM3OnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/configuration/RunTimeConfigurationGenerator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxMzo1OTo1NlrOHSDWjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNjo0NDoyMVrOHSKr8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5MTM0Mg==", "bodyText": "Uppercase them?", "url": "https://github.com/quarkusio/quarkus/pull/12108#discussion_r488691342", "createdAt": "2020-09-15T13:59:56Z", "author": {"login": "gastaldi"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/configuration/RunTimeConfigurationGenerator.java", "diffHunk": "@@ -1630,4 +1640,16 @@ private static boolean isFieldEligibleForDirectAccess(ClassDefinition.ClassMembe\n                 && Modifier.isPublic(classMember.getEnclosingDefinition().getConfigurationClass().getModifiers())\n                 && Modifier.isPublic(classMember.getField().getType().getModifiers());\n     }\n+\n+    private enum Type {\n+        BuildTime(\"si\"),\n+        Bootstrap(\"bs\"),\n+        Runtime(\"rt\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f88f43c642c979ea6926d0204d775d772415a5b"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5MjMxNg==", "bodyText": "Yeah I guess most of our enums are upper case, so I'll fix it", "url": "https://github.com/quarkusio/quarkus/pull/12108#discussion_r488692316", "createdAt": "2020-09-15T14:01:12Z", "author": {"login": "geoand"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/configuration/RunTimeConfigurationGenerator.java", "diffHunk": "@@ -1630,4 +1640,16 @@ private static boolean isFieldEligibleForDirectAccess(ClassDefinition.ClassMembe\n                 && Modifier.isPublic(classMember.getEnclosingDefinition().getConfigurationClass().getModifiers())\n                 && Modifier.isPublic(classMember.getField().getType().getModifiers());\n     }\n+\n+    private enum Type {\n+        BuildTime(\"si\"),\n+        Bootstrap(\"bs\"),\n+        Runtime(\"rt\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5MTM0Mg=="}, "originalCommit": {"oid": "9f88f43c642c979ea6926d0204d775d772415a5b"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODgxMTUwNg==", "bodyText": "Fixed", "url": "https://github.com/quarkusio/quarkus/pull/12108#discussion_r488811506", "createdAt": "2020-09-15T16:44:21Z", "author": {"login": "geoand"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/configuration/RunTimeConfigurationGenerator.java", "diffHunk": "@@ -1630,4 +1640,16 @@ private static boolean isFieldEligibleForDirectAccess(ClassDefinition.ClassMembe\n                 && Modifier.isPublic(classMember.getEnclosingDefinition().getConfigurationClass().getModifiers())\n                 && Modifier.isPublic(classMember.getField().getType().getModifiers());\n     }\n+\n+    private enum Type {\n+        BuildTime(\"si\"),\n+        Bootstrap(\"bs\"),\n+        Runtime(\"rt\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODY5MTM0Mg=="}, "originalCommit": {"oid": "9f88f43c642c979ea6926d0204d775d772415a5b"}, "originalPosition": 185}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 269, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}