{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3ODgyNzcw", "number": 10660, "title": "Access-Control-Allow-Credentials default value", "bodyText": "resolves: #10447", "createdAt": "2020-07-12T10:47:49Z", "url": "https://github.com/quarkusio/quarkus/pull/10660", "merged": true, "mergeCommit": {"oid": "475b2b424612105db92c40b041a74ca46ccede80"}, "closed": true, "closedAt": "2020-07-15T12:26:11Z", "author": {"login": "mcserra"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0NxkRgFqTQ0Njg4Mzc2OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1GenEABqjM1NDc1MDI1NDA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODgzNzY4", "url": "https://github.com/quarkusio/quarkus/pull/10660#pullrequestreview-446883768", "createdAt": "2020-07-12T14:32:40Z", "commit": {"oid": "42cff6982bec9c624926b9c28f5b12adc2a341b6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNDozMjo0MFrOGwUskA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNDozMjo0MFrOGwUskA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMyMzkyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            access-control-allow-credentials=true\n          \n          \n            \n            quarkus.http.cors.access-control-allow-credentials=true\n          \n      \n    \n    \n  \n\n?", "url": "https://github.com/quarkusio/quarkus/pull/10660#discussion_r453323920", "createdAt": "2020-07-12T14:32:40Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/http-reference.adoc", "diffHunk": "@@ -199,6 +201,7 @@ quarkus.http.cors.methods=GET,PUT,POST\n quarkus.http.cors.headers=X-Custom\n quarkus.http.cors.exposed-headers=Content-Disposition\n quarkus.http.cors.access-control-max-age=24H\n+access-control-allow-credentials=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42cff6982bec9c624926b9c28f5b12adc2a341b6"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODk3MDcy", "url": "https://github.com/quarkusio/quarkus/pull/10660#pullrequestreview-446897072", "createdAt": "2020-07-12T17:37:35Z", "commit": {"oid": "f72c6349c8f44ff698e7a283287436cf279967a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNzozNzozNVrOGwV4nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNzozNzozNVrOGwV4nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM0MzM4OQ==", "bodyText": "I think it should be boolean, with the defaultValue=false", "url": "https://github.com/quarkusio/quarkus/pull/10660#discussion_r453343389", "createdAt": "2020-07-12T17:37:35Z", "author": {"login": "sberyozkin"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSConfig.java", "diffHunk": "@@ -61,6 +61,14 @@\n     @ConfigItem\n     public Optional<Duration> accessControlMaxAge;\n \n+    /**\n+     * The `Access-Control-Allow-Credentials` header is used to tell the\n+     * browsers to expose the response to front-end JavaScript code when\n+     * the request\u2019s credentials mode Request.credentials is \u201cinclude\u201d.\n+     */\n+    @ConfigItem(defaultValueDocumentation = \"Default value is true when origins is present and does not include '*', else it is false\")\n+    public Optional<Boolean> accessControlAllowCredentials;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72c6349c8f44ff698e7a283287436cf279967a2"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODk3ODY0", "url": "https://github.com/quarkusio/quarkus/pull/10660#pullrequestreview-446897864", "createdAt": "2020-07-12T17:50:44Z", "commit": {"oid": "f72c6349c8f44ff698e7a283287436cf279967a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNzo1MDo0NFrOGwV9oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNzo1MDo0NFrOGwV9oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM0NDY3Mg==", "bodyText": "I'm trying to figure out how to change either the docs or the defaultValueDocumentation and I'm getting confused for the 3rd time :-).\nOK, so, if this property is false (which is a default value of this property) then Access-Control-Allow-Credentials is false unless a matching non-wildcard Origins is present.\nIt feels it would be less confusing if we remove this defaultValueDocumentation and instead add to the javaDocs:\nThe value of this header will be set to `true` if either this property is set to `true` or `quarkus.http.cors.origins` property is set and does not include '*' which will require a precise `Origin` header check.\n\nHow does it sound ?", "url": "https://github.com/quarkusio/quarkus/pull/10660#discussion_r453344672", "createdAt": "2020-07-12T17:50:44Z", "author": {"login": "sberyozkin"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSConfig.java", "diffHunk": "@@ -61,6 +61,14 @@\n     @ConfigItem\n     public Optional<Duration> accessControlMaxAge;\n \n+    /**\n+     * The `Access-Control-Allow-Credentials` header is used to tell the\n+     * browsers to expose the response to front-end JavaScript code when\n+     * the request\u2019s credentials mode Request.credentials is \u201cinclude\u201d.\n+     */\n+    @ConfigItem(defaultValueDocumentation = \"Default value is true when origins is present and does not include '*', else it is false\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72c6349c8f44ff698e7a283287436cf279967a2"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODk4MTk4", "url": "https://github.com/quarkusio/quarkus/pull/10660#pullrequestreview-446898198", "createdAt": "2020-07-12T17:56:19Z", "commit": {"oid": "f72c6349c8f44ff698e7a283287436cf279967a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNzo1NjoxOVrOGwV_qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNzo1NjoxOVrOGwV_qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM0NTE5NQ==", "bodyText": "Can you also have a boolean var recording the result of the origin comparison checked here ? It is probably not very critical but it is better to return true only if the exact origin match happened...", "url": "https://github.com/quarkusio/quarkus/pull/10660#discussion_r453345195", "createdAt": "2020-07-12T17:56:19Z", "author": {"login": "sberyozkin"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSFilter.java", "diffHunk": "@@ -97,7 +97,10 @@ public void handle(RoutingContext event) {\n                 response.headers().set(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, origin);\n             }\n \n-            response.headers().set(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, \"true\");\n+            boolean allowCredentials = corsConfig.accessControlAllowCredentials\n+                    .orElseGet(() -> (corsConfig.origins.isPresent() && !corsConfig.origins.get().contains(\"*\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f72c6349c8f44ff698e7a283287436cf279967a2"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDA2NzQ3", "url": "https://github.com/quarkusio/quarkus/pull/10660#pullrequestreview-447406747", "createdAt": "2020-07-13T16:24:18Z", "commit": {"oid": "8a4d829b12b28cdc1b9aeb7ecbe4f893837c808e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNDoxOFrOGwwGRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyNDoxOFrOGwwGRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3Mjg3MQ==", "bodyText": "Hi @mcserra, interesting case, I actually think it should be true here because a precise match possible, I think we may need to tweak the check, please see below", "url": "https://github.com/quarkusio/quarkus/pull/10660#discussion_r453772871", "createdAt": "2020-07-13T16:24:18Z", "author": {"login": "sberyozkin"}, "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/cors/CORSHandlerTestWildcardOriginCase.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package io.quarkus.vertx.http.cors;\n+\n+import static io.restassured.RestAssured.given;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class CORSHandlerTestWildcardOriginCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a4d829b12b28cdc1b9aeb7ecbe4f893837c808e"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDEwNTUy", "url": "https://github.com/quarkusio/quarkus/pull/10660#pullrequestreview-447410552", "createdAt": "2020-07-13T16:28:50Z", "commit": {"oid": "8a4d829b12b28cdc1b9aeb7ecbe4f893837c808e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyODo1MFrOGwwR0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyODo1MFrOGwwR0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3NTgyNQ==", "bodyText": "@mcserra Looks like we can drop !corsConfig.origins.get().contains(\"*\") because we have corsConfig.origins.get().contains(origin) which ensures the precise match, but instead we should check that the Origin header does no contain *.\nThis will ensure that, assuming Origin is something like https://origin, then if we have the allowed origins as https://origin,* then true will be returned due to a precise match.\nDo you agree ?", "url": "https://github.com/quarkusio/quarkus/pull/10660#discussion_r453775825", "createdAt": "2020-07-13T16:28:50Z", "author": {"login": "sberyozkin"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSFilter.java", "diffHunk": "@@ -97,7 +97,11 @@ public void handle(RoutingContext event) {\n                 response.headers().set(HttpHeaders.ACCESS_CONTROL_ALLOW_ORIGIN, origin);\n             }\n \n-            response.headers().set(HttpHeaders.ACCESS_CONTROL_ALLOW_CREDENTIALS, \"true\");\n+            boolean allowCredentials = corsConfig.accessControlAllowCredentials\n+                    || (corsConfig.origins.isPresent() && !corsConfig.origins.get().contains(\"*\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a4d829b12b28cdc1b9aeb7ecbe4f893837c808e"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NzMyMDk3", "url": "https://github.com/quarkusio/quarkus/pull/10660#pullrequestreview-448732097", "createdAt": "2020-07-15T08:20:51Z", "commit": {"oid": "88dcc96fa5ea6458aa44be2c1e3ca7bc3e2d1a96"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NzM2MTQ3", "url": "https://github.com/quarkusio/quarkus/pull/10660#pullrequestreview-448736147", "createdAt": "2020-07-15T08:26:10Z", "commit": {"oid": "88dcc96fa5ea6458aa44be2c1e3ca7bc3e2d1a96"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dceff50e80597272172cfbdfd75beca3fd29bf4", "author": {"user": {"login": "mcserra", "name": "Miguel Serra"}}, "url": "https://github.com/quarkusio/quarkus/commit/1dceff50e80597272172cfbdfd75beca3fd29bf4", "committedDate": "2020-07-15T08:35:53Z", "message": "Access-Control-Allow-Credentials default value\n\nUpdate docs/src/main/asciidoc/http-reference.adoc\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>\n\nconfig type + tests\n\nchange origin match rules\n\nchange config to Optional<Boolean>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "88dcc96fa5ea6458aa44be2c1e3ca7bc3e2d1a96", "author": {"user": {"login": "mcserra", "name": "Miguel Serra"}}, "url": "https://github.com/quarkusio/quarkus/commit/88dcc96fa5ea6458aa44be2c1e3ca7bc3e2d1a96", "committedDate": "2020-07-14T06:47:23Z", "message": "change config to Optional<Boolean>"}, "afterCommit": {"oid": "1dceff50e80597272172cfbdfd75beca3fd29bf4", "author": {"user": {"login": "mcserra", "name": "Miguel Serra"}}, "url": "https://github.com/quarkusio/quarkus/commit/1dceff50e80597272172cfbdfd75beca3fd29bf4", "committedDate": "2020-07-15T08:35:53Z", "message": "Access-Control-Allow-Credentials default value\n\nUpdate docs/src/main/asciidoc/http-reference.adoc\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>\n\nconfig type + tests\n\nchange origin match rules\n\nchange config to Optional<Boolean>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3515, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}