{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwNTk4MTY5", "number": 7943, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDoxOToyM1rODpQ8Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDoxOToyM1rODpQ8Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NTk1NzU0OnYy", "diffSide": "RIGHT", "path": "test-framework/junit5-internal/src/main/java/io/quarkus/test/InMemoryLogHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDoxOToyM1rOF4VZcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQyMDoxOToyM1rOF4VZcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDYxNTE1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.logging.LogRecord;\n          \n          \n            \n            \n          \n          \n            \n            public class InMemoryLogHandler extends Handler {\n          \n          \n            \n            \n          \n          \n            \n                private final Predicate<LogRecord> predicate;\n          \n          \n            \n            \n          \n          \n            \n                public InMemoryLogHandler(Predicate<LogRecord> predicate) {\n          \n          \n            \n                    this.predicate = predicate;\n          \n          \n            \n            import java.util.logging.LogRecord;\n          \n          \n            \n            import org.wildfly.common.Assert;\n          \n          \n            \n            \n          \n          \n            \n            public class InMemoryLogHandler extends Handler {\n          \n          \n            \n            \n          \n          \n            \n                private final Predicate<LogRecord> predicate;\n          \n          \n            \n            \n          \n          \n            \n                public InMemoryLogHandler(Predicate<LogRecord> predicate) {\n          \n          \n            \n                    this.predicate = Assert.checkNotNullParam(\"predicate\",predicate);", "url": "https://github.com/quarkusio/quarkus/pull/7943#discussion_r394615154", "createdAt": "2020-03-18T20:19:23Z", "author": {"login": "gastaldi"}, "path": "test-framework/junit5-internal/src/main/java/io/quarkus/test/InMemoryLogHandler.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.quarkus.test;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.function.Predicate;\n+import java.util.logging.Handler;\n+import java.util.logging.Level;\n+import java.util.logging.LogRecord;\n+\n+public class InMemoryLogHandler extends Handler {\n+\n+    private final Predicate<LogRecord> predicate;\n+\n+    public InMemoryLogHandler(Predicate<LogRecord> predicate) {\n+        this.predicate = predicate;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6112a475e00f530b5a93efd2783114d4e867f52"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4725, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}