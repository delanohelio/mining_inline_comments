{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3ODgyMjkz", "number": 8788, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMzo1NzoxOFrOD1SQEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMzo1ODoyNlrOD1SSUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjAwMTQ2OnYy", "diffSide": "RIGHT", "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/graal/MongoClientSubstitutions.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMzo1NzoxOFrOGKpXnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDoxNzoyMlrOGKqdOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNjczMw==", "bodyText": "Since this substitution targets a class which isn't MongoDB specific, does it belong here?\nMy concern is that if such subtitutions are kept within an extension, then they will eventually conflict with other extensions.\nI guess it could be acceptable as a temporary solution, if there's an issue tracking a further improvement.", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413816733", "createdAt": "2020-04-23T13:57:18Z", "author": {"login": "Sanne"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/graal/MongoClientSubstitutions.java", "diffHunk": "@@ -173,3 +173,13 @@ public String resolveAdditionalQueryParametersFromTxtRecords(final String host)\n         throw new UnsupportedOperationException(\"mongo+srv:// not supported in native mode\");\n     }\n }\n+\n+@TargetClass(com.sun.jna.Native.class)\n+final class JnaNativeSubstitutions {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84e6e4bd92721adf0a208a880f06705b64aa5ac4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgyNDQxMA==", "bodyText": "Yeah, the ideal situation would be to have a jna extension that does these substitutions just like we have with Netty.\nThat's probably a good thing to follow up with - an easy thing for someone to contribute as their first contribution.", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413824410", "createdAt": "2020-04-23T14:05:55Z", "author": {"login": "geoand"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/graal/MongoClientSubstitutions.java", "diffHunk": "@@ -173,3 +173,13 @@ public String resolveAdditionalQueryParametersFromTxtRecords(final String host)\n         throw new UnsupportedOperationException(\"mongo+srv:// not supported in native mode\");\n     }\n }\n+\n+@TargetClass(com.sun.jna.Native.class)\n+final class JnaNativeSubstitutions {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNjczMw=="}, "originalCommit": {"oid": "84e6e4bd92721adf0a208a880f06705b64aa5ac4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzMTM2Ng==", "bodyText": "We usually put that ones in core considering they are targetting JDK classes.", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413831366", "createdAt": "2020-04-23T14:13:43Z", "author": {"login": "gsmet"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/graal/MongoClientSubstitutions.java", "diffHunk": "@@ -173,3 +173,13 @@ public String resolveAdditionalQueryParametersFromTxtRecords(final String host)\n         throw new UnsupportedOperationException(\"mongo+srv:// not supported in native mode\");\n     }\n }\n+\n+@TargetClass(com.sun.jna.Native.class)\n+final class JnaNativeSubstitutions {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNjczMw=="}, "originalCommit": {"oid": "84e6e4bd92721adf0a208a880f06705b64aa5ac4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgzNDU1Mw==", "bodyText": "This isn't a JDK class however. It's coming from this dependency: \n  \n    \n      quarkus/bom/runtime/pom.xml\n    \n    \n         Line 1786\n      in\n      6a612a8\n    \n    \n    \n    \n\n        \n          \n           <groupId>net.java.dev.jna</groupId>", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413834553", "createdAt": "2020-04-23T14:17:22Z", "author": {"login": "geoand"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/graal/MongoClientSubstitutions.java", "diffHunk": "@@ -173,3 +173,13 @@ public String resolveAdditionalQueryParametersFromTxtRecords(final String host)\n         throw new UnsupportedOperationException(\"mongo+srv:// not supported in native mode\");\n     }\n }\n+\n+@TargetClass(com.sun.jna.Native.class)\n+final class JnaNativeSubstitutions {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNjczMw=="}, "originalCommit": {"oid": "84e6e4bd92721adf0a208a880f06705b64aa5ac4"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MjAwNzIyOnYy", "diffSide": "RIGHT", "path": "extensions/jdbc/jdbc-mariadb/runtime/src/main/java/io/quarkus/jdbc/mariadb/runtime/graal/SimpleSocketHandlerFunction.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMzo1ODoyNlrOGKpbLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNDo0ODoxNFrOGKsHDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNzY0Nw==", "bodyText": "should this perhaps log a warning or throw an exception if a MariaDB feature is being disabled?\nWe shouldn't silentily ignore configuration.", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413817647", "createdAt": "2020-04-23T13:58:26Z", "author": {"login": "Sanne"}, "path": "extensions/jdbc/jdbc-mariadb/runtime/src/main/java/io/quarkus/jdbc/mariadb/runtime/graal/SimpleSocketHandlerFunction.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.jdbc.mariadb.runtime.graal;\n+\n+import java.io.IOException;\n+import java.net.Socket;\n+\n+import org.mariadb.jdbc.internal.io.socket.SocketHandlerFunction;\n+import org.mariadb.jdbc.internal.util.Utils;\n+import org.mariadb.jdbc.util.Options;\n+\n+public class SimpleSocketHandlerFunction implements SocketHandlerFunction {\n+    @Override\n+    public Socket apply(Options options, String host) throws IOException {\n+        return Utils.standardSocket(options, host);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84e6e4bd92721adf0a208a880f06705b64aa5ac4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgyNTQ2Ng==", "bodyText": "Good idea yeah! Throwing an exception I think it the proper way to go. WDYT?", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413825466", "createdAt": "2020-04-23T14:07:03Z", "author": {"login": "geoand"}, "path": "extensions/jdbc/jdbc-mariadb/runtime/src/main/java/io/quarkus/jdbc/mariadb/runtime/graal/SimpleSocketHandlerFunction.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.jdbc.mariadb.runtime.graal;\n+\n+import java.io.IOException;\n+import java.net.Socket;\n+\n+import org.mariadb.jdbc.internal.io.socket.SocketHandlerFunction;\n+import org.mariadb.jdbc.internal.util.Utils;\n+import org.mariadb.jdbc.util.Options;\n+\n+public class SimpleSocketHandlerFunction implements SocketHandlerFunction {\n+    @Override\n+    public Socket apply(Options options, String host) throws IOException {\n+        return Utils.standardSocket(options, host);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNzY0Nw=="}, "originalCommit": {"oid": "84e6e4bd92721adf0a208a880f06705b64aa5ac4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzg2MTY0NQ==", "bodyText": "Updated", "url": "https://github.com/quarkusio/quarkus/pull/8788#discussion_r413861645", "createdAt": "2020-04-23T14:48:14Z", "author": {"login": "geoand"}, "path": "extensions/jdbc/jdbc-mariadb/runtime/src/main/java/io/quarkus/jdbc/mariadb/runtime/graal/SimpleSocketHandlerFunction.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.jdbc.mariadb.runtime.graal;\n+\n+import java.io.IOException;\n+import java.net.Socket;\n+\n+import org.mariadb.jdbc.internal.io.socket.SocketHandlerFunction;\n+import org.mariadb.jdbc.internal.util.Utils;\n+import org.mariadb.jdbc.util.Options;\n+\n+public class SimpleSocketHandlerFunction implements SocketHandlerFunction {\n+    @Override\n+    public Socket apply(Options options, String host) throws IOException {\n+        return Utils.standardSocket(options, host);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzgxNzY0Nw=="}, "originalCommit": {"oid": "84e6e4bd92721adf0a208a880f06705b64aa5ac4"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3429, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}