{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNjgwODc4", "number": 12977, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODozOTozNlrOEyf8yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODo0MDo0M1rOEyf-eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzg3NzIyOnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/customized/QuarkusJtaPlatform.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODozOTozNlrOHpLVuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODo0NjowMlrOHpLlXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkzOTQ0OA==", "bodyText": "Looks like some double checked locking except I don't see the synchronized part.\nIs it safe?", "url": "https://github.com/quarkusio/quarkus/pull/12977#discussion_r512939448", "createdAt": "2020-10-27T18:39:36Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/customized/QuarkusJtaPlatform.java", "diffHunk": "@@ -1,26 +1,72 @@\n package io.quarkus.hibernate.orm.runtime.customized;\n \n+import javax.transaction.Synchronization;\n+import javax.transaction.SystemException;\n+import javax.transaction.Transaction;\n import javax.transaction.TransactionManager;\n import javax.transaction.UserTransaction;\n \n-import org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform;\n+import org.hibernate.engine.transaction.jta.platform.internal.JtaSynchronizationStrategy;\n+import org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerAccess;\n+import org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerBasedSynchronizationStrategy;\n+import org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform;\n \n-public final class QuarkusJtaPlatform extends AbstractJtaPlatform {\n+public final class QuarkusJtaPlatform implements JtaPlatform, TransactionManagerAccess {\n \n     public static final QuarkusJtaPlatform INSTANCE = new QuarkusJtaPlatform();\n \n+    private final JtaSynchronizationStrategy tmSynchronizationStrategy = new TransactionManagerBasedSynchronizationStrategy(\n+            this);\n+    private volatile TransactionManager transactionManager;\n+    private volatile UserTransaction userTransaction;\n+\n     private QuarkusJtaPlatform() {\n         //nothing\n     }\n \n     @Override\n-    protected TransactionManager locateTransactionManager() {\n-        return com.arjuna.ats.jta.TransactionManager.transactionManager();\n+    public TransactionManager retrieveTransactionManager() {\n+        TransactionManager transactionManager = this.transactionManager;\n+        if (transactionManager == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a33daeae19c81846bf61b817d7a2f76297792d47"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk0MzQ1Mw==", "bodyText": "it's safe as the method we invoke is synchronized and returns a singleton.", "url": "https://github.com/quarkusio/quarkus/pull/12977#discussion_r512943453", "createdAt": "2020-10-27T18:46:02Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/customized/QuarkusJtaPlatform.java", "diffHunk": "@@ -1,26 +1,72 @@\n package io.quarkus.hibernate.orm.runtime.customized;\n \n+import javax.transaction.Synchronization;\n+import javax.transaction.SystemException;\n+import javax.transaction.Transaction;\n import javax.transaction.TransactionManager;\n import javax.transaction.UserTransaction;\n \n-import org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform;\n+import org.hibernate.engine.transaction.jta.platform.internal.JtaSynchronizationStrategy;\n+import org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerAccess;\n+import org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerBasedSynchronizationStrategy;\n+import org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform;\n \n-public final class QuarkusJtaPlatform extends AbstractJtaPlatform {\n+public final class QuarkusJtaPlatform implements JtaPlatform, TransactionManagerAccess {\n \n     public static final QuarkusJtaPlatform INSTANCE = new QuarkusJtaPlatform();\n \n+    private final JtaSynchronizationStrategy tmSynchronizationStrategy = new TransactionManagerBasedSynchronizationStrategy(\n+            this);\n+    private volatile TransactionManager transactionManager;\n+    private volatile UserTransaction userTransaction;\n+\n     private QuarkusJtaPlatform() {\n         //nothing\n     }\n \n     @Override\n-    protected TransactionManager locateTransactionManager() {\n-        return com.arjuna.ats.jta.TransactionManager.transactionManager();\n+    public TransactionManager retrieveTransactionManager() {\n+        TransactionManager transactionManager = this.transactionManager;\n+        if (transactionManager == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkzOTQ0OA=="}, "originalCommit": {"oid": "a33daeae19c81846bf61b817d7a2f76297792d47"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzg4MTU0OnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/customized/QuarkusJtaPlatform.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODo0MDo0M1rOHpLYXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODo0Njo1MFrOHpLnRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk0MDEyNw==", "bodyText": "Same question here.", "url": "https://github.com/quarkusio/quarkus/pull/12977#discussion_r512940127", "createdAt": "2020-10-27T18:40:43Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/customized/QuarkusJtaPlatform.java", "diffHunk": "@@ -1,26 +1,72 @@\n package io.quarkus.hibernate.orm.runtime.customized;\n \n+import javax.transaction.Synchronization;\n+import javax.transaction.SystemException;\n+import javax.transaction.Transaction;\n import javax.transaction.TransactionManager;\n import javax.transaction.UserTransaction;\n \n-import org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform;\n+import org.hibernate.engine.transaction.jta.platform.internal.JtaSynchronizationStrategy;\n+import org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerAccess;\n+import org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerBasedSynchronizationStrategy;\n+import org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform;\n \n-public final class QuarkusJtaPlatform extends AbstractJtaPlatform {\n+public final class QuarkusJtaPlatform implements JtaPlatform, TransactionManagerAccess {\n \n     public static final QuarkusJtaPlatform INSTANCE = new QuarkusJtaPlatform();\n \n+    private final JtaSynchronizationStrategy tmSynchronizationStrategy = new TransactionManagerBasedSynchronizationStrategy(\n+            this);\n+    private volatile TransactionManager transactionManager;\n+    private volatile UserTransaction userTransaction;\n+\n     private QuarkusJtaPlatform() {\n         //nothing\n     }\n \n     @Override\n-    protected TransactionManager locateTransactionManager() {\n-        return com.arjuna.ats.jta.TransactionManager.transactionManager();\n+    public TransactionManager retrieveTransactionManager() {\n+        TransactionManager transactionManager = this.transactionManager;\n+        if (transactionManager == null) {\n+            transactionManager = com.arjuna.ats.jta.TransactionManager.transactionManager();\n+            this.transactionManager = transactionManager;\n+        }\n+        return transactionManager;\n+    }\n+\n+    @Override\n+    public TransactionManager getTransactionManager() {\n+        return retrieveTransactionManager();\n+    }\n+\n+    @Override\n+    public UserTransaction retrieveUserTransaction() {\n+        UserTransaction userTransaction = this.userTransaction;\n+        if (this.userTransaction == null) {\n+            userTransaction = com.arjuna.ats.jta.UserTransaction.userTransaction();\n+            this.userTransaction = userTransaction;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a33daeae19c81846bf61b817d7a2f76297792d47"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk0Mzk0Mw==", "bodyText": "same :)", "url": "https://github.com/quarkusio/quarkus/pull/12977#discussion_r512943943", "createdAt": "2020-10-27T18:46:50Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/customized/QuarkusJtaPlatform.java", "diffHunk": "@@ -1,26 +1,72 @@\n package io.quarkus.hibernate.orm.runtime.customized;\n \n+import javax.transaction.Synchronization;\n+import javax.transaction.SystemException;\n+import javax.transaction.Transaction;\n import javax.transaction.TransactionManager;\n import javax.transaction.UserTransaction;\n \n-import org.hibernate.engine.transaction.jta.platform.internal.AbstractJtaPlatform;\n+import org.hibernate.engine.transaction.jta.platform.internal.JtaSynchronizationStrategy;\n+import org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerAccess;\n+import org.hibernate.engine.transaction.jta.platform.internal.TransactionManagerBasedSynchronizationStrategy;\n+import org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform;\n \n-public final class QuarkusJtaPlatform extends AbstractJtaPlatform {\n+public final class QuarkusJtaPlatform implements JtaPlatform, TransactionManagerAccess {\n \n     public static final QuarkusJtaPlatform INSTANCE = new QuarkusJtaPlatform();\n \n+    private final JtaSynchronizationStrategy tmSynchronizationStrategy = new TransactionManagerBasedSynchronizationStrategy(\n+            this);\n+    private volatile TransactionManager transactionManager;\n+    private volatile UserTransaction userTransaction;\n+\n     private QuarkusJtaPlatform() {\n         //nothing\n     }\n \n     @Override\n-    protected TransactionManager locateTransactionManager() {\n-        return com.arjuna.ats.jta.TransactionManager.transactionManager();\n+    public TransactionManager retrieveTransactionManager() {\n+        TransactionManager transactionManager = this.transactionManager;\n+        if (transactionManager == null) {\n+            transactionManager = com.arjuna.ats.jta.TransactionManager.transactionManager();\n+            this.transactionManager = transactionManager;\n+        }\n+        return transactionManager;\n+    }\n+\n+    @Override\n+    public TransactionManager getTransactionManager() {\n+        return retrieveTransactionManager();\n+    }\n+\n+    @Override\n+    public UserTransaction retrieveUserTransaction() {\n+        UserTransaction userTransaction = this.userTransaction;\n+        if (this.userTransaction == null) {\n+            userTransaction = com.arjuna.ats.jta.UserTransaction.userTransaction();\n+            this.userTransaction = userTransaction;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk0MDEyNw=="}, "originalCommit": {"oid": "a33daeae19c81846bf61b817d7a2f76297792d47"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4097, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}