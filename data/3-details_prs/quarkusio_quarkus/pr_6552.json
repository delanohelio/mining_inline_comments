{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNzA5MDMy", "number": 6552, "title": "Restore the ability to use a system property for remote-dev", "bodyText": "Fixes: #6550", "createdAt": "2020-01-14T15:54:08Z", "url": "https://github.com/quarkusio/quarkus/pull/6552", "merged": true, "mergeCommit": {"oid": "b39c598c6b041275ca3aa5218f1c462150a3307b"}, "closed": true, "closedAt": "2020-01-16T20:59:45Z", "author": {"login": "geoand"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6UCSOAFqTM0MjY5MjYwMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6-9YrABqjI5NTU3MDY2MTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNjkyNjAw", "url": "https://github.com/quarkusio/quarkus/pull/6552#pullrequestreview-342692600", "createdAt": "2020-01-14T17:03:07Z", "commit": {"oid": "c96f24ac3472627c3f93c408049a6931e99cae47"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNzowMzowOFrOFde-OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNzowMzowOFrOFde-OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ2MDQ3Mw==", "bodyText": "You also need an InputStreamReader explicitly set up with UTF-8 here, and load the properties from the reader, else there will be encoding problems.", "url": "https://github.com/quarkusio/quarkus/pull/6552#discussion_r366460473", "createdAt": "2020-01-14T17:03:08Z", "author": {"login": "dmlloyd"}, "path": "extensions/undertow-websockets/deployment/src/main/java/io/quarkus/undertow/websockets/deployment/WebsocketHotReloadSetup.java", "diffHunk": "@@ -31,17 +31,27 @@\n \n     @Override\n     public void setupHotDeployment(HotReplacementContext hotReplacementContext) {\n-        List<Path> resources = hotReplacementContext.getResourcesDir();\n-        if (!resources.isEmpty()) {\n-            //TODO: fix this\n-            File appConfig = resources.get(0).resolve(\"application.properties\").toFile();\n-            if (appConfig.isFile()) {\n-                try (InputStream pw = new FileInputStream(appConfig)) {\n-                    Properties p = new Properties();\n-                    p.load(pw);\n-                    replacementPassword = p.getProperty(HotReplacementWebsocketEndpoint.QUARKUS_HOT_RELOAD_PASSWORD);\n-                } catch (IOException e) {\n-                    logger.error(\"Failed to read application.properties\", e);\n+        // we can't use the typical ConfigProvider.getConfig() because it throws an ISE\n+        String password = System.getProperty(HotReplacementWebsocketEndpoint.QUARKUS_HOT_RELOAD_PASSWORD);\n+        if (password == null || password.isEmpty()) {\n+            password = System.getenv(HotReplacementWebsocketEndpoint.QUARKUS_HOT_RELOAD_PASSWORD_ENV);\n+        }\n+\n+        if (password != null && !password.isEmpty()) {\n+            replacementPassword = password;\n+        } else {\n+            List<Path> resources = hotReplacementContext.getResourcesDir();\n+            if (!resources.isEmpty()) {\n+                //TODO: fix this\n+                File appConfig = resources.get(0).resolve(\"application.properties\").toFile();\n+                if (appConfig.isFile()) {\n+                    try (InputStream pw = new FileInputStream(appConfig)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c96f24ac3472627c3f93c408049a6931e99cae47"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNzAzNDc4", "url": "https://github.com/quarkusio/quarkus/pull/6552#pullrequestreview-342703478", "createdAt": "2020-01-14T17:19:34Z", "commit": {"oid": "c96f24ac3472627c3f93c408049a6931e99cae47"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNzoxOTozNFrOFdfeOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxNzoyMToyOVrOFdfhqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ2ODY2NQ==", "bodyText": "Yes, please let's do it.", "url": "https://github.com/quarkusio/quarkus/pull/6552#discussion_r366468665", "createdAt": "2020-01-14T17:19:34Z", "author": {"login": "gsmet"}, "path": "extensions/undertow-websockets/deployment/src/main/java/io/quarkus/undertow/websockets/deployment/WebsocketHotReloadSetup.java", "diffHunk": "@@ -31,17 +31,27 @@\n \n     @Override\n     public void setupHotDeployment(HotReplacementContext hotReplacementContext) {\n-        List<Path> resources = hotReplacementContext.getResourcesDir();\n-        if (!resources.isEmpty()) {\n-            //TODO: fix this\n-            File appConfig = resources.get(0).resolve(\"application.properties\").toFile();\n-            if (appConfig.isFile()) {\n-                try (InputStream pw = new FileInputStream(appConfig)) {\n-                    Properties p = new Properties();\n-                    p.load(pw);\n-                    replacementPassword = p.getProperty(HotReplacementWebsocketEndpoint.QUARKUS_HOT_RELOAD_PASSWORD);\n-                } catch (IOException e) {\n-                    logger.error(\"Failed to read application.properties\", e);\n+        // we can't use the typical ConfigProvider.getConfig() because it throws an ISE\n+        String password = System.getProperty(HotReplacementWebsocketEndpoint.QUARKUS_HOT_RELOAD_PASSWORD);\n+        if (password == null || password.isEmpty()) {\n+            password = System.getenv(HotReplacementWebsocketEndpoint.QUARKUS_HOT_RELOAD_PASSWORD_ENV);\n+        }\n+\n+        if (password != null && !password.isEmpty()) {\n+            replacementPassword = password;\n+        } else {\n+            List<Path> resources = hotReplacementContext.getResourcesDir();\n+            if (!resources.isEmpty()) {\n+                //TODO: fix this\n+                File appConfig = resources.get(0).resolve(\"application.properties\").toFile();\n+                if (appConfig.isFile()) {\n+                    try (InputStream pw = new FileInputStream(appConfig)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ2MDQ3Mw=="}, "originalCommit": {"oid": "c96f24ac3472627c3f93c408049a6931e99cae47"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ2OTA1MQ==", "bodyText": "Should we rename the _HOT_RELOAD constants to _LIVE_RELOAD (it can be done in a separate commit/pr)", "url": "https://github.com/quarkusio/quarkus/pull/6552#discussion_r366469051", "createdAt": "2020-01-14T17:20:22Z", "author": {"login": "gsmet"}, "path": "extensions/undertow-websockets/deployment/src/main/java/io/quarkus/undertow/websockets/deployment/HotReplacementWebsocketEndpoint.java", "diffHunk": "@@ -36,6 +36,7 @@\n     static final String QUARKUS_HOT_RELOAD = \"/quarkus/live-reload\";\n     static final String QUARKUS_SECURITY_KEY = \"quarkus-security-key\";\n     static final String QUARKUS_HOT_RELOAD_PASSWORD = \"quarkus.live-reload.password\";\n+    static final String QUARKUS_HOT_RELOAD_PASSWORD_ENV = \"QUARKUS_LIVE_RELOAD_PASSWORD\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c96f24ac3472627c3f93c408049a6931e99cae47"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ2OTU0Ng==", "bodyText": "So I reckon this doesn't work with Yaml as we are playing with the properties file directly?", "url": "https://github.com/quarkusio/quarkus/pull/6552#discussion_r366469546", "createdAt": "2020-01-14T17:21:29Z", "author": {"login": "gsmet"}, "path": "extensions/undertow-websockets/deployment/src/main/java/io/quarkus/undertow/websockets/deployment/WebsocketHotReloadSetup.java", "diffHunk": "@@ -31,17 +31,27 @@\n \n     @Override\n     public void setupHotDeployment(HotReplacementContext hotReplacementContext) {\n-        List<Path> resources = hotReplacementContext.getResourcesDir();\n-        if (!resources.isEmpty()) {\n-            //TODO: fix this\n-            File appConfig = resources.get(0).resolve(\"application.properties\").toFile();\n-            if (appConfig.isFile()) {\n-                try (InputStream pw = new FileInputStream(appConfig)) {\n-                    Properties p = new Properties();\n-                    p.load(pw);\n-                    replacementPassword = p.getProperty(HotReplacementWebsocketEndpoint.QUARKUS_HOT_RELOAD_PASSWORD);\n-                } catch (IOException e) {\n-                    logger.error(\"Failed to read application.properties\", e);\n+        // we can't use the typical ConfigProvider.getConfig() because it throws an ISE\n+        String password = System.getProperty(HotReplacementWebsocketEndpoint.QUARKUS_HOT_RELOAD_PASSWORD);\n+        if (password == null || password.isEmpty()) {\n+            password = System.getenv(HotReplacementWebsocketEndpoint.QUARKUS_HOT_RELOAD_PASSWORD_ENV);\n+        }\n+\n+        if (password != null && !password.isEmpty()) {\n+            replacementPassword = password;\n+        } else {\n+            List<Path> resources = hotReplacementContext.getResourcesDir();\n+            if (!resources.isEmpty()) {\n+                //TODO: fix this\n+                File appConfig = resources.get(0).resolve(\"application.properties\").toFile();\n+                if (appConfig.isFile()) {\n+                    try (InputStream pw = new FileInputStream(appConfig)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ2MDQ3Mw=="}, "originalCommit": {"oid": "c96f24ac3472627c3f93c408049a6931e99cae47"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c96f24ac3472627c3f93c408049a6931e99cae47", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/c96f24ac3472627c3f93c408049a6931e99cae47", "committedDate": "2020-01-14T15:53:45Z", "message": "Restore the ability to use a system property for remote-dev\n\nFixes: #6550"}, "afterCommit": {"oid": "c9bca77d4ad2925811d9753e15ed243a2b0a774e", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/c9bca77d4ad2925811d9753e15ed243a2b0a774e", "committedDate": "2020-01-14T20:50:50Z", "message": "Make sure we read properties with UTF8 encoding during live-reload"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "213c59845b0feaf4b0f9187c3975e847141dbdf0", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/213c59845b0feaf4b0f9187c3975e847141dbdf0", "committedDate": "2020-01-14T21:31:04Z", "message": "Use MP Config when reading the password for dev-mode"}, "afterCommit": {"oid": "21ba858348c2f7beeaec0b7fe69cb60b69e02d58", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/21ba858348c2f7beeaec0b7fe69cb60b69e02d58", "committedDate": "2020-01-15T18:48:52Z", "message": "Make sure we read properties with UTF8 encoding during live-reload"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNDY0ODgw", "url": "https://github.com/quarkusio/quarkus/pull/6552#pullrequestreview-343464880", "createdAt": "2020-01-15T19:28:15Z", "commit": {"oid": "21ba858348c2f7beeaec0b7fe69cb60b69e02d58"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "829667384d5d35b3f6722c67b3a16f3f33381d07", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/829667384d5d35b3f6722c67b3a16f3f33381d07", "committedDate": "2020-01-16T19:03:29Z", "message": "Restore the ability to use a system property for remote-dev\n\nFixes: #6550"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6b0d920ffe387963044868d52c5f2b2b5dfa948", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/d6b0d920ffe387963044868d52c5f2b2b5dfa948", "committedDate": "2020-01-16T19:03:30Z", "message": "Make sure we read properties with UTF8 encoding during live-reload"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "21ba858348c2f7beeaec0b7fe69cb60b69e02d58", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/21ba858348c2f7beeaec0b7fe69cb60b69e02d58", "committedDate": "2020-01-15T18:48:52Z", "message": "Make sure we read properties with UTF8 encoding during live-reload"}, "afterCommit": {"oid": "d6b0d920ffe387963044868d52c5f2b2b5dfa948", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/d6b0d920ffe387963044868d52c5f2b2b5dfa948", "committedDate": "2020-01-16T19:03:30Z", "message": "Make sure we read properties with UTF8 encoding during live-reload"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 188, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}