{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMDg5NTYw", "number": 9061, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODozNzowMVrOD5HVLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODozNzowMVrOD5HVLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjE1NTMyOnYy", "diffSide": "RIGHT", "path": "extensions/spring-web/runtime/src/main/java/io/quarkus/spring/web/runtime/ResponseStatusExceptionMapper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODozNzowMVrOGQNE0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxODozOTowMFrOGQNJmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0NDYyNQ==", "bodyText": "Does Spring always send text/plain? I would expect it to be clever than that.", "url": "https://github.com/quarkusio/quarkus/pull/9061#discussion_r419644625", "createdAt": "2020-05-04T18:37:01Z", "author": {"login": "gsmet"}, "path": "extensions/spring-web/runtime/src/main/java/io/quarkus/spring/web/runtime/ResponseStatusExceptionMapper.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package io.quarkus.spring.web.runtime;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.ext.ExceptionMapper;\n+\n+import org.jboss.resteasy.specimpl.ResponseBuilderImpl;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.web.server.ResponseStatusException;\n+\n+public class ResponseStatusExceptionMapper implements ExceptionMapper<ResponseStatusException> {\n+\n+    @Override\n+    public Response toResponse(ResponseStatusException exception) {\n+        Response.ResponseBuilder responseBuilder = new ResponseBuilderImpl().status(exception.getStatus().value());\n+        addHeaders(responseBuilder, exception.getResponseHeaders());\n+        return responseBuilder.entity(exception.getMessage())\n+                .type(MediaType.TEXT_PLAIN).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f7b4facd5e0b0a7b98dd57325b86283323c7f15"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0NTg1MA==", "bodyText": "Fair point, but we have been using text/plain for exceptions annotated with @ResponseStatus (which is very similar to this) and we haven't had anyone complain so far.\nWe can certainly reexamine this on a grander scale if it becomes a problem.", "url": "https://github.com/quarkusio/quarkus/pull/9061#discussion_r419645850", "createdAt": "2020-05-04T18:39:00Z", "author": {"login": "geoand"}, "path": "extensions/spring-web/runtime/src/main/java/io/quarkus/spring/web/runtime/ResponseStatusExceptionMapper.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package io.quarkus.spring.web.runtime;\n+\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.ext.ExceptionMapper;\n+\n+import org.jboss.resteasy.specimpl.ResponseBuilderImpl;\n+import org.springframework.http.HttpHeaders;\n+import org.springframework.web.server.ResponseStatusException;\n+\n+public class ResponseStatusExceptionMapper implements ExceptionMapper<ResponseStatusException> {\n+\n+    @Override\n+    public Response toResponse(ResponseStatusException exception) {\n+        Response.ResponseBuilder responseBuilder = new ResponseBuilderImpl().status(exception.getStatus().value());\n+        addHeaders(responseBuilder, exception.getResponseHeaders());\n+        return responseBuilder.entity(exception.getMessage())\n+                .type(MediaType.TEXT_PLAIN).build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY0NDYyNQ=="}, "originalCommit": {"oid": "7f7b4facd5e0b0a7b98dd57325b86283323c7f15"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3237, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}