{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1OTI3OTk2", "number": 8687, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMDoxMToxMVrODzprXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMDoxMToxMVrODzprXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NDg2ODEyOnYy", "diffSide": "RIGHT", "path": "extensions/resteasy-server-common/deployment/src/main/java/io/quarkus/resteasy/server/common/deployment/ResteasyServerCommonProcessor.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMDoxMToxMVrOGINLnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMToxMjoyNVrOGIPV0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI1Nzc1Nw==", "bodyText": "Shouldn't these be outside of the if (!withoutDefaultCtor.containsKey(clazz.name())) check?", "url": "https://github.com/quarkusio/quarkus/pull/8687#discussion_r411257757", "createdAt": "2020-04-20T10:11:11Z", "author": {"login": "geoand"}, "path": "extensions/resteasy-server-common/deployment/src/main/java/io/quarkus/resteasy/server/common/deployment/ResteasyServerCommonProcessor.java", "diffHunk": "@@ -229,19 +229,21 @@ public void build(\n \n         Map<DotName, ClassInfo> scannedResources = new HashMap<>();\n         Set<DotName> pathInterfaces = new HashSet<>();\n-        Set<ClassInfo> withoutDefaultCtor = new HashSet<>();\n+        Map<DotName, ClassInfo> withoutDefaultCtor = new HashMap<>();\n         for (AnnotationInstance annotation : allPaths) {\n             if (annotation.target().kind() == AnnotationTarget.Kind.CLASS) {\n                 ClassInfo clazz = annotation.target().asClass();\n                 if (!Modifier.isInterface(clazz.flags())) {\n-                    String className = clazz.name().toString();\n-                    if (!additionalPaths.contains(annotation)) { // scanned resources only contains real JAX-RS resources\n-                        scannedResources.putIfAbsent(clazz.name(), clazz);\n-                    }\n-                    reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, className));\n+                    if (!withoutDefaultCtor.containsKey(clazz.name())) {\n+                        String className = clazz.name().toString();\n+                        if (!additionalPaths.contains(annotation)) { // scanned resources only contains real JAX-RS resources\n+                            scannedResources.putIfAbsent(clazz.name(), clazz);\n+                        }\n+                        reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, className));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd4de25e3a3fdf4207999518824d129615b46f38"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI2NzYzNA==", "bodyText": "If it's in withoutDefaultCtor it's already been processed, hasn't it?", "url": "https://github.com/quarkusio/quarkus/pull/8687#discussion_r411267634", "createdAt": "2020-04-20T10:27:33Z", "author": {"login": "aloubyansky"}, "path": "extensions/resteasy-server-common/deployment/src/main/java/io/quarkus/resteasy/server/common/deployment/ResteasyServerCommonProcessor.java", "diffHunk": "@@ -229,19 +229,21 @@ public void build(\n \n         Map<DotName, ClassInfo> scannedResources = new HashMap<>();\n         Set<DotName> pathInterfaces = new HashSet<>();\n-        Set<ClassInfo> withoutDefaultCtor = new HashSet<>();\n+        Map<DotName, ClassInfo> withoutDefaultCtor = new HashMap<>();\n         for (AnnotationInstance annotation : allPaths) {\n             if (annotation.target().kind() == AnnotationTarget.Kind.CLASS) {\n                 ClassInfo clazz = annotation.target().asClass();\n                 if (!Modifier.isInterface(clazz.flags())) {\n-                    String className = clazz.name().toString();\n-                    if (!additionalPaths.contains(annotation)) { // scanned resources only contains real JAX-RS resources\n-                        scannedResources.putIfAbsent(clazz.name(), clazz);\n-                    }\n-                    reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, className));\n+                    if (!withoutDefaultCtor.containsKey(clazz.name())) {\n+                        String className = clazz.name().toString();\n+                        if (!additionalPaths.contains(annotation)) { // scanned resources only contains real JAX-RS resources\n+                            scannedResources.putIfAbsent(clazz.name(), clazz);\n+                        }\n+                        reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, className));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI1Nzc1Nw=="}, "originalCommit": {"oid": "dd4de25e3a3fdf4207999518824d129615b46f38"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI4MTYxMA==", "bodyText": "That is certainly true, but the point of withoutDefaultCtor wasn't really to guard against that case.\nI do understand what your checking here, it just seems odd to reuse withoutDefaultCtor to perform this check.", "url": "https://github.com/quarkusio/quarkus/pull/8687#discussion_r411281610", "createdAt": "2020-04-20T10:52:23Z", "author": {"login": "geoand"}, "path": "extensions/resteasy-server-common/deployment/src/main/java/io/quarkus/resteasy/server/common/deployment/ResteasyServerCommonProcessor.java", "diffHunk": "@@ -229,19 +229,21 @@ public void build(\n \n         Map<DotName, ClassInfo> scannedResources = new HashMap<>();\n         Set<DotName> pathInterfaces = new HashSet<>();\n-        Set<ClassInfo> withoutDefaultCtor = new HashSet<>();\n+        Map<DotName, ClassInfo> withoutDefaultCtor = new HashMap<>();\n         for (AnnotationInstance annotation : allPaths) {\n             if (annotation.target().kind() == AnnotationTarget.Kind.CLASS) {\n                 ClassInfo clazz = annotation.target().asClass();\n                 if (!Modifier.isInterface(clazz.flags())) {\n-                    String className = clazz.name().toString();\n-                    if (!additionalPaths.contains(annotation)) { // scanned resources only contains real JAX-RS resources\n-                        scannedResources.putIfAbsent(clazz.name(), clazz);\n-                    }\n-                    reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, className));\n+                    if (!withoutDefaultCtor.containsKey(clazz.name())) {\n+                        String className = clazz.name().toString();\n+                        if (!additionalPaths.contains(annotation)) { // scanned resources only contains real JAX-RS resources\n+                            scannedResources.putIfAbsent(clazz.name(), clazz);\n+                        }\n+                        reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, className));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI1Nzc1Nw=="}, "originalCommit": {"oid": "dd4de25e3a3fdf4207999518824d129615b46f38"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI5MzEzNg==", "bodyText": "I could introduce another Set for that purpose.", "url": "https://github.com/quarkusio/quarkus/pull/8687#discussion_r411293136", "createdAt": "2020-04-20T11:12:25Z", "author": {"login": "aloubyansky"}, "path": "extensions/resteasy-server-common/deployment/src/main/java/io/quarkus/resteasy/server/common/deployment/ResteasyServerCommonProcessor.java", "diffHunk": "@@ -229,19 +229,21 @@ public void build(\n \n         Map<DotName, ClassInfo> scannedResources = new HashMap<>();\n         Set<DotName> pathInterfaces = new HashSet<>();\n-        Set<ClassInfo> withoutDefaultCtor = new HashSet<>();\n+        Map<DotName, ClassInfo> withoutDefaultCtor = new HashMap<>();\n         for (AnnotationInstance annotation : allPaths) {\n             if (annotation.target().kind() == AnnotationTarget.Kind.CLASS) {\n                 ClassInfo clazz = annotation.target().asClass();\n                 if (!Modifier.isInterface(clazz.flags())) {\n-                    String className = clazz.name().toString();\n-                    if (!additionalPaths.contains(annotation)) { // scanned resources only contains real JAX-RS resources\n-                        scannedResources.putIfAbsent(clazz.name(), clazz);\n-                    }\n-                    reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, className));\n+                    if (!withoutDefaultCtor.containsKey(clazz.name())) {\n+                        String className = clazz.name().toString();\n+                        if (!additionalPaths.contains(annotation)) { // scanned resources only contains real JAX-RS resources\n+                            scannedResources.putIfAbsent(clazz.name(), clazz);\n+                        }\n+                        reflectiveClass.produce(new ReflectiveClassBuildItem(true, true, className));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTI1Nzc1Nw=="}, "originalCommit": {"oid": "dd4de25e3a3fdf4207999518824d129615b46f38"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3376, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}