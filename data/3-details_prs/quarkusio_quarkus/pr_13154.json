{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NzMwODc5", "number": 13154, "title": "Support @TestProfile in native mode #12974", "bodyText": "Fix #12974\nEdit 2020-12-17:\nThis has two parts:\n\n\nConfigChangeRecorder can now be configured to make the application fail at boot if the build time config changed. (Originally it only warned, which is still the default). The new mode is used by the NativeTestExtension to make sure that native tests are run with the same build time config as was used during the compilation.\n\n\n@TestProfile support in the NativeTestExtension.\n\n\nThis PR originally included building of multiple native images based on %profile.quarkus.package.output-name. That part was left out based on reviews.\nOriginal description before 2020-12-17\nThis has several parts:\n\n\nConfigChangeRecorder can now be configured to make the application fail at boot if the build time config changed. (Originally it only warned, which is still the default). The new mode is used by the NativeTestExtension to make sure that native tests are run against the right native image.\n\n\nBuildMojo builds a separate native image for each profile found in application.properties that has quarkus.package.output-name property set.\n\n\nNativeTestExtension can start the right one of the images built by BuildMojo, passing the configuration from TestProfile to it.\n\n\nTODO:\n\nThe TestProfile support in native mode should be documented somewhere (where?)\nPossible follow up: Figure out whether/how this should be supported in Gradle", "createdAt": "2020-11-06T13:04:08Z", "url": "https://github.com/quarkusio/quarkus/pull/13154", "merged": true, "mergeCommit": {"oid": "3818ee1d1b75488f47c56702a4267bfcf4545d9f"}, "closed": true, "closedAt": "2020-12-21T15:32:16Z", "author": {"login": "ppalaga"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZ5iRhABqjM5Njc5NzEzMzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnUwXugFqTU1NTMzMTE3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6953237a2980a55c39fff1c1a4a84a128fc2773", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/quarkusio/quarkus/commit/c6953237a2980a55c39fff1c1a4a84a128fc2773", "committedDate": "2020-11-06T12:47:15Z", "message": "Support @TestProfile in native mode #12974"}, "afterCommit": {"oid": "8399489368c5ac340d6038d1a68a6e247fe0c957", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/quarkusio/quarkus/commit/8399489368c5ac340d6038d1a68a6e247fe0c957", "committedDate": "2020-11-06T16:27:11Z", "message": "Support @TestProfile in native mode #12974"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8399489368c5ac340d6038d1a68a6e247fe0c957", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/quarkusio/quarkus/commit/8399489368c5ac340d6038d1a68a6e247fe0c957", "committedDate": "2020-11-06T16:27:11Z", "message": "Support @TestProfile in native mode #12974"}, "afterCommit": {"oid": "9aa9f869a616e2ef700b59d6e71ebb30abd68dcc", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/quarkusio/quarkus/commit/9aa9f869a616e2ef700b59d6e71ebb30abd68dcc", "committedDate": "2020-11-25T11:16:19Z", "message": "Support @TestProfile in native mode #12974"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5MDQyNDU1", "url": "https://github.com/quarkusio/quarkus/pull/13154#pullrequestreview-539042455", "createdAt": "2020-11-26T07:14:34Z", "commit": {"oid": "9aa9f869a616e2ef700b59d6e71ebb30abd68dcc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNzoxNDozNFrOH6OTgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNzoxNDozNFrOH6OTgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgxMzgyNw==", "bodyText": "I don't think this can be supported as it is a build time property only", "url": "https://github.com/quarkusio/quarkus/pull/13154#discussion_r530813827", "createdAt": "2020-11-26T07:14:34Z", "author": {"login": "geoand"}, "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/NativeTestExtension.java", "diffHunk": "@@ -112,26 +82,117 @@ private void ensureNoInjectAnnotationIsUsed(Class<?> testClass) {\n \n     }\n \n-    /**\n-     * We don't support {@link TestProfile} in native tests because we don't want to incur the native binary rebuild cost\n-     * which is very high.\n-     *\n-     * This method looks up the annotations via Jandex in order to try and prevent the image generation if there are\n-     * any cases of {@link NativeImageTest} being used with {@link TestProfile}\n-     */\n-    private void ensureNoTestProfile(Class<?> testClass) {\n-        Index index = TestClassIndexer.readIndex(testClass);\n-        List<AnnotationInstance> instances = index.getAnnotations(DotName.createSimple(NativeImageTest.class.getName()));\n-        for (AnnotationInstance instance : instances) {\n-            if (instance.target().kind() != AnnotationTarget.Kind.CLASS) {\n-                continue;\n+    private ExtensionState ensureStarted(ExtensionContext extensionContext) {\n+        Class<?> testClass = extensionContext.getRequiredTestClass();\n+        ensureNoInjectAnnotationIsUsed(testClass);\n+\n+        ExtensionContext root = extensionContext.getRoot();\n+        ExtensionContext.Store store = root.getStore(ExtensionContext.Namespace.GLOBAL);\n+        ExtensionState state = store.get(ExtensionState.class.getName(), ExtensionState.class);\n+        TestProfile annotation = testClass.getAnnotation(TestProfile.class);\n+        Class<? extends QuarkusTestProfile> selectedProfile = null;\n+        if (annotation != null) {\n+            selectedProfile = annotation.value();\n+        }\n+        boolean wrongProfile = !Objects.equals(selectedProfile, quarkusTestProfile);\n+        if ((state == null && !failedBoot) || wrongProfile) {\n+            if (wrongProfile) {\n+                if (state != null) {\n+                    try {\n+                        state.close();\n+                    } catch (Throwable throwable) {\n+                        throwable.printStackTrace();\n+                    }\n+                }\n             }\n-            ClassInfo testClassInfo = instance.target().asClass();\n-            if (testClassInfo.classAnnotation(DotName.createSimple(TestProfile.class.getName())) != null) {\n-                throw new JUnitException(\n-                        \"@TestProfile is not supported in NativeImageTest tests. Offending class is \" + testClassInfo.name());\n+            PropertyTestUtil.setLogFileProperty();\n+            try {\n+                state = doNativeStart(extensionContext, selectedProfile);\n+                store.put(ExtensionState.class.getName(), state);\n+\n+            } catch (Throwable e) {\n+                failedBoot = true;\n+                firstException = e;\n             }\n         }\n+        return state;\n+    }\n+\n+    private ExtensionState doNativeStart(ExtensionContext context, Class<? extends QuarkusTestProfile> profile)\n+            throws Throwable {\n+        quarkusTestProfile = profile;\n+        TestResourceManager testResourceManager = null;\n+        try {\n+            Class<?> requiredTestClass = context.getRequiredTestClass();\n+\n+            Map<String, String> sysPropRestore = new HashMap<>();\n+            sysPropRestore.put(ProfileManager.QUARKUS_TEST_PROFILE_PROP,\n+                    System.getProperty(ProfileManager.QUARKUS_TEST_PROFILE_PROP));\n+\n+            QuarkusTestProfile profileInstance = null;\n+            final Map<String, String> additional = new HashMap<>();\n+            if (profile != null) {\n+                profileInstance = profile.newInstance();\n+                additional.putAll(profileInstance.getConfigOverrides());\n+                final Set<Class<?>> enabledAlternatives = profileInstance.getEnabledAlternatives();\n+                if (!enabledAlternatives.isEmpty()) {\n+                    additional.put(\"quarkus.arc.selected-alternatives\", enabledAlternatives.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9aa9f869a616e2ef700b59d6e71ebb30abd68dcc"}, "originalPosition": 178}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MzIwMzc2", "url": "https://github.com/quarkusio/quarkus/pull/13154#pullrequestreview-555320376", "createdAt": "2020-12-18T09:16:41Z", "commit": {"oid": "9aa9f869a616e2ef700b59d6e71ebb30abd68dcc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2478d22784fcd19117fa5a213a8e6fccc463df1b", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/quarkusio/quarkus/commit/2478d22784fcd19117fa5a213a8e6fccc463df1b", "committedDate": "2020-12-18T09:23:47Z", "message": "Support @TestProfile in native mode #12974"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9aa9f869a616e2ef700b59d6e71ebb30abd68dcc", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/quarkusio/quarkus/commit/9aa9f869a616e2ef700b59d6e71ebb30abd68dcc", "committedDate": "2020-11-25T11:16:19Z", "message": "Support @TestProfile in native mode #12974"}, "afterCommit": {"oid": "2478d22784fcd19117fa5a213a8e6fccc463df1b", "author": {"user": {"login": "ppalaga", "name": "Peter Palaga"}}, "url": "https://github.com/quarkusio/quarkus/commit/2478d22784fcd19117fa5a213a8e6fccc463df1b", "committedDate": "2020-12-18T09:23:47Z", "message": "Support @TestProfile in native mode #12974"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MzMxMTc4", "url": "https://github.com/quarkusio/quarkus/pull/13154#pullrequestreview-555331178", "createdAt": "2020-12-18T09:31:13Z", "commit": {"oid": "2478d22784fcd19117fa5a213a8e6fccc463df1b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1490, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}