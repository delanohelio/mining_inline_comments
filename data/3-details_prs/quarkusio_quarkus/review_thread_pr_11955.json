{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxNjM1MDkx", "number": 11955, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwOTo1ODoyOFrOEhLAaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzozNzowMFrOEhQEFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjE4Nzk1OnYy", "diffSide": "RIGHT", "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwOTo1ODoyOFrOHOVwZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMDoxNDoxMVrOHOWSdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc5ODU2NA==", "bodyText": "I think I would test the type of the key too. You never know what people do.", "url": "https://github.com/quarkusio/quarkus/pull/11955#discussion_r484798564", "createdAt": "2020-09-08T09:58:28Z", "author": {"login": "gsmet"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "diffHunk": "@@ -78,6 +78,29 @@ public FileCollection getClasspath() {\n                 .plus(mainSourceSet.getResources());\n     }\n \n+    @Input\n+    public Map<String, String> getQuarkusBuildSytemProperties() {\n+        Map<String, String> quarkusSystemProperties = new HashMap<>();\n+        for (Map.Entry<Object, Object> systemProperty : System.getProperties().entrySet()) {\n+            if (systemProperty.getKey() != null && systemProperty.getValue() instanceof String", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61cdec06fa045b575fd0c0976287c74dbc915bbb"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgwNzI4Nw==", "bodyText": "yes you right. I added a test.", "url": "https://github.com/quarkusio/quarkus/pull/11955#discussion_r484807287", "createdAt": "2020-09-08T10:14:11Z", "author": {"login": "glefloch"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "diffHunk": "@@ -78,6 +78,29 @@ public FileCollection getClasspath() {\n                 .plus(mainSourceSet.getResources());\n     }\n \n+    @Input\n+    public Map<String, String> getQuarkusBuildSytemProperties() {\n+        Map<String, String> quarkusSystemProperties = new HashMap<>();\n+        for (Map.Entry<Object, Object> systemProperty : System.getProperties().entrySet()) {\n+            if (systemProperty.getKey() != null && systemProperty.getValue() instanceof String", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc5ODU2NA=="}, "originalCommit": {"oid": "61cdec06fa045b575fd0c0976287c74dbc915bbb"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjE4ODMyOnYy", "diffSide": "RIGHT", "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwOTo1ODozNFrOHOVwng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwOTo1ODozNFrOHOVwng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc5ODYyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public Map<String, String> getQuarkusBuildSytemProperties() {\n          \n          \n            \n                public Map<String, String> getQuarkusBuildSystemProperties() {", "url": "https://github.com/quarkusio/quarkus/pull/11955#discussion_r484798622", "createdAt": "2020-09-08T09:58:34Z", "author": {"login": "gsmet"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "diffHunk": "@@ -78,6 +78,29 @@ public FileCollection getClasspath() {\n                 .plus(mainSourceSet.getResources());\n     }\n \n+    @Input\n+    public Map<String, String> getQuarkusBuildSytemProperties() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61cdec06fa045b575fd0c0976287c74dbc915bbb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjQ0MDY4OnYy", "diffSide": "RIGHT", "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToxMzoxOFrOHOYJhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzoyMTozM1rOHOcmwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNzc2Ng==", "bodyText": "Additional question: is it mandatory that the value is a string?", "url": "https://github.com/quarkusio/quarkus/pull/11955#discussion_r484837766", "createdAt": "2020-09-08T11:13:18Z", "author": {"login": "gsmet"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "diffHunk": "@@ -78,6 +78,30 @@ public FileCollection getClasspath() {\n                 .plus(mainSourceSet.getResources());\n     }\n \n+    @Input\n+    public Map<String, String> getQuarkusBuildSystemProperties() {\n+        Map<String, String> quarkusSystemProperties = new HashMap<>();\n+        for (Map.Entry<Object, Object> systemProperty : System.getProperties().entrySet()) {\n+            if (systemProperty.getKey() != null && systemProperty.getKey() instanceof String\n+                    && systemProperty.getValue() instanceof String\n+                    && ((String) systemProperty.getKey()).startsWith(\"quarkus.\")) {\n+                quarkusSystemProperties.put((String) systemProperty.getKey(), (String) systemProperty.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "842e1734986944e7f0331f9fe9673e69bd9ca2cd"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzOTQwNQ==", "bodyText": "Not necessarily but it must be Serializable", "url": "https://github.com/quarkusio/quarkus/pull/11955#discussion_r484839405", "createdAt": "2020-09-08T11:16:33Z", "author": {"login": "glefloch"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "diffHunk": "@@ -78,6 +78,30 @@ public FileCollection getClasspath() {\n                 .plus(mainSourceSet.getResources());\n     }\n \n+    @Input\n+    public Map<String, String> getQuarkusBuildSystemProperties() {\n+        Map<String, String> quarkusSystemProperties = new HashMap<>();\n+        for (Map.Entry<Object, Object> systemProperty : System.getProperties().entrySet()) {\n+            if (systemProperty.getKey() != null && systemProperty.getKey() instanceof String\n+                    && systemProperty.getValue() instanceof String\n+                    && ((String) systemProperty.getKey()).startsWith(\"quarkus.\")) {\n+                quarkusSystemProperties.put((String) systemProperty.getKey(), (String) systemProperty.getValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNzc2Ng=="}, "originalCommit": {"oid": "842e1734986944e7f0331f9fe9673e69bd9ca2cd"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg5NDI5Mw==", "bodyText": "I wonder why we make it mandatory for the values then? I don't see a lot of value in forcing it for the values but I might miss something :)", "url": "https://github.com/quarkusio/quarkus/pull/11955#discussion_r484894293", "createdAt": "2020-09-08T12:57:35Z", "author": {"login": "gsmet"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "diffHunk": "@@ -78,6 +78,30 @@ public FileCollection getClasspath() {\n                 .plus(mainSourceSet.getResources());\n     }\n \n+    @Input\n+    public Map<String, String> getQuarkusBuildSystemProperties() {\n+        Map<String, String> quarkusSystemProperties = new HashMap<>();\n+        for (Map.Entry<Object, Object> systemProperty : System.getProperties().entrySet()) {\n+            if (systemProperty.getKey() != null && systemProperty.getKey() instanceof String\n+                    && systemProperty.getValue() instanceof String\n+                    && ((String) systemProperty.getKey()).startsWith(\"quarkus.\")) {\n+                quarkusSystemProperties.put((String) systemProperty.getKey(), (String) systemProperty.getValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNzc2Ng=="}, "originalCommit": {"oid": "842e1734986944e7f0331f9fe9673e69bd9ca2cd"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg5NTU1OA==", "bodyText": "Maybe just test if systemProperty.getValue() instanceof Serializable should be enough, since we don't care about the value here", "url": "https://github.com/quarkusio/quarkus/pull/11955#discussion_r484895558", "createdAt": "2020-09-08T12:59:39Z", "author": {"login": "gastaldi"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "diffHunk": "@@ -78,6 +78,30 @@ public FileCollection getClasspath() {\n                 .plus(mainSourceSet.getResources());\n     }\n \n+    @Input\n+    public Map<String, String> getQuarkusBuildSystemProperties() {\n+        Map<String, String> quarkusSystemProperties = new HashMap<>();\n+        for (Map.Entry<Object, Object> systemProperty : System.getProperties().entrySet()) {\n+            if (systemProperty.getKey() != null && systemProperty.getKey() instanceof String\n+                    && systemProperty.getValue() instanceof String\n+                    && ((String) systemProperty.getKey()).startsWith(\"quarkus.\")) {\n+                quarkusSystemProperties.put((String) systemProperty.getKey(), (String) systemProperty.getValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNzc2Ng=="}, "originalCommit": {"oid": "842e1734986944e7f0331f9fe9673e69bd9ca2cd"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkxMDc4NA==", "bodyText": "right.", "url": "https://github.com/quarkusio/quarkus/pull/11955#discussion_r484910784", "createdAt": "2020-09-08T13:21:33Z", "author": {"login": "glefloch"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "diffHunk": "@@ -78,6 +78,30 @@ public FileCollection getClasspath() {\n                 .plus(mainSourceSet.getResources());\n     }\n \n+    @Input\n+    public Map<String, String> getQuarkusBuildSystemProperties() {\n+        Map<String, String> quarkusSystemProperties = new HashMap<>();\n+        for (Map.Entry<Object, Object> systemProperty : System.getProperties().entrySet()) {\n+            if (systemProperty.getKey() != null && systemProperty.getKey() instanceof String\n+                    && systemProperty.getValue() instanceof String\n+                    && ((String) systemProperty.getKey()).startsWith(\"quarkus.\")) {\n+                quarkusSystemProperties.put((String) systemProperty.getKey(), (String) systemProperty.getValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNzc2Ng=="}, "originalCommit": {"oid": "842e1734986944e7f0331f9fe9673e69bd9ca2cd"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjk4MjcwOnYy", "diffSide": "RIGHT", "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzozMDoyNVrOHOdO1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzozMDoyNVrOHOdO1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkyMTA0Ng==", "bodyText": "It's highly unlikely that we'll have a null key (or impossible I'd say), so maybe this can be shortened to:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (systemProperty.getKey() != null && systemProperty.getKey() instanceof String\n          \n          \n            \n                                && systemProperty.getValue() instanceof Serializable\n          \n          \n            \n                                && ((String) systemProperty.getKey()).startsWith(\"quarkus.\")) {\n          \n          \n            \n                        if (systemProperty.getKey().toString().startsWith(\"quarkus.\")\n          \n          \n            \n                                && systemProperty.getValue() instanceof Serializable) {", "url": "https://github.com/quarkusio/quarkus/pull/11955#discussion_r484921046", "createdAt": "2020-09-08T13:30:25Z", "author": {"login": "gastaldi"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "diffHunk": "@@ -78,6 +79,30 @@ public FileCollection getClasspath() {\n                 .plus(mainSourceSet.getResources());\n     }\n \n+    @Input\n+    public Map<String, Object> getQuarkusBuildSystemProperties() {\n+        Map<String, Object> quarkusSystemProperties = new HashMap<>();\n+        for (Map.Entry<Object, Object> systemProperty : System.getProperties().entrySet()) {\n+            if (systemProperty.getKey() != null && systemProperty.getKey() instanceof String\n+                    && systemProperty.getValue() instanceof Serializable\n+                    && ((String) systemProperty.getKey()).startsWith(\"quarkus.\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ce713d6fd167919b74042df03fbcb1bacb76ae3"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzAxNjUyOnYy", "diffSide": "RIGHT", "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzozNzowMFrOHOdjhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMzozOTo0MFrOHOdq4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkyNjM0Mg==", "bodyText": "I think we can avoid this cast by returning a Map<Object,Object>?", "url": "https://github.com/quarkusio/quarkus/pull/11955#discussion_r484926342", "createdAt": "2020-09-08T13:37:00Z", "author": {"login": "gastaldi"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "diffHunk": "@@ -78,6 +79,29 @@ public FileCollection getClasspath() {\n                 .plus(mainSourceSet.getResources());\n     }\n \n+    @Input\n+    public Map<String, Object> getQuarkusBuildSystemProperties() {\n+        Map<String, Object> quarkusSystemProperties = new HashMap<>();\n+        for (Map.Entry<Object, Object> systemProperty : System.getProperties().entrySet()) {\n+            if (systemProperty.getKey().toString().startsWith(\"quarkus.\") &&\n+                    systemProperty.getValue() instanceof Serializable) {\n+                quarkusSystemProperties.put((String) systemProperty.getKey(), systemProperty.getValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "645a336085a2d0540bf1b459527d203fa4f5aa33"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkyODIyNQ==", "bodyText": "Yes, I remove the cast for the value. I can do the same for the key.", "url": "https://github.com/quarkusio/quarkus/pull/11955#discussion_r484928225", "createdAt": "2020-09-08T13:39:40Z", "author": {"login": "glefloch"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusBuild.java", "diffHunk": "@@ -78,6 +79,29 @@ public FileCollection getClasspath() {\n                 .plus(mainSourceSet.getResources());\n     }\n \n+    @Input\n+    public Map<String, Object> getQuarkusBuildSystemProperties() {\n+        Map<String, Object> quarkusSystemProperties = new HashMap<>();\n+        for (Map.Entry<Object, Object> systemProperty : System.getProperties().entrySet()) {\n+            if (systemProperty.getKey().toString().startsWith(\"quarkus.\") &&\n+                    systemProperty.getValue() instanceof Serializable) {\n+                quarkusSystemProperties.put((String) systemProperty.getKey(), systemProperty.getValue());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDkyNjM0Mg=="}, "originalCommit": {"oid": "645a336085a2d0540bf1b459527d203fa4f5aa33"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 377, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}