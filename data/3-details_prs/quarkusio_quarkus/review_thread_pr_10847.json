{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzMjY0ODI3", "number": 10847, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMjo1MDowMFrOEQKPJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODowMTozMFrOEQT-0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1MzgwMzg4OnYy", "diffSide": "RIGHT", "path": "extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheMock.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMjo1MDowMFrOG0Knmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxMjo1MDowMFrOG0Knmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzM1MzExNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static PanacheStubber doAnser(Answer answer) {\n          \n          \n            \n                public static PanacheStubber doAnswer(Answer answer) {", "url": "https://github.com/quarkusio/quarkus/pull/10847#discussion_r457353114", "createdAt": "2020-07-20T12:50:00Z", "author": {"login": "geoand"}, "path": "extensions/panache/panache-mock/src/main/java/io/quarkus/panache/mock/PanacheMock.java", "diffHunk": "@@ -107,4 +108,35 @@ public Object invoke() throws Throwable {\n \n     }\n \n+    public static PanacheStubber doAnser(Answer answer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad204a7980e3b59baaf8f06190e09b592a69e901"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTQwMDQ4OnYy", "diffSide": "RIGHT", "path": "integration-tests/hibernate-orm-panache/src/test/java/io/quarkus/it/panache/PanacheMockingTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODowMTozMFrOG0ZUoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwODoxNjoyMFrOG0tKFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5NDAxNg==", "bodyText": "You can also use the AssertJ API for improved readability:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    try {\n          \n          \n            \n                        Person.voidMethod();\n          \n          \n            \n                        Assertions.fail();\n          \n          \n            \n                    } catch (RuntimeException x) {\n          \n          \n            \n                        Assertions.assertEquals(\"Stef\", x.getMessage());\n          \n          \n            \n                    }\n          \n          \n            \n                    assertThatExceptionOfType(RuntimeException.class)\n          \n          \n            \n                            .isThrownBy(Person::voidMethod)\n          \n          \n            \n                            .withMessage(\"Stef\");", "url": "https://github.com/quarkusio/quarkus/pull/10847#discussion_r457594016", "createdAt": "2020-07-20T18:01:30Z", "author": {"login": "gastaldi"}, "path": "integration-tests/hibernate-orm-panache/src/test/java/io/quarkus/it/panache/PanacheMockingTest.java", "diffHunk": "@@ -25,6 +25,40 @@\n     public void testPanacheMocking() {\n         PanacheMock.mock(Person.class);\n \n+        // does not throw (defaults to doNothing)\n+        Person.voidMethod();\n+\n+        // make it throw our exception\n+        Mockito.doThrow(new RuntimeException(\"Stef\")).when(PanacheMock.getMock(Person.class)).voidMethod();\n+        try {\n+            Person.voidMethod();\n+            Assertions.fail();\n+        } catch (RuntimeException x) {\n+            Assertions.assertEquals(\"Stef\", x.getMessage());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47b71e0809fd0292655e1fcfeb600557a4aba1de"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzkxODk5OA==", "bodyText": "Given that static method references don't work the same as normal static method calls, I'd rather not introduce this style which can lead to surprises.", "url": "https://github.com/quarkusio/quarkus/pull/10847#discussion_r457918998", "createdAt": "2020-07-21T08:16:20Z", "author": {"login": "FroMage"}, "path": "integration-tests/hibernate-orm-panache/src/test/java/io/quarkus/it/panache/PanacheMockingTest.java", "diffHunk": "@@ -25,6 +25,40 @@\n     public void testPanacheMocking() {\n         PanacheMock.mock(Person.class);\n \n+        // does not throw (defaults to doNothing)\n+        Person.voidMethod();\n+\n+        // make it throw our exception\n+        Mockito.doThrow(new RuntimeException(\"Stef\")).when(PanacheMock.getMock(Person.class)).voidMethod();\n+        try {\n+            Person.voidMethod();\n+            Assertions.fail();\n+        } catch (RuntimeException x) {\n+            Assertions.assertEquals(\"Stef\", x.getMessage());\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5NDAxNg=="}, "originalCommit": {"oid": "47b71e0809fd0292655e1fcfeb600557a4aba1de"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 814, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}