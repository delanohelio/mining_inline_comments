{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNDE4NDQ3", "number": 7073, "title": "Handle MongoDB BsonDiscriminator", "bodyText": "Fixes #6292\nThis PR :\n\nConfigure the POJO codec used by MongoDB with Panache with all the classes annotated with @BsonDiscriminator so that a user don't need to do the hack described in #6292\nRegister for reflection all classes annotated by @BsonDiscriminator\n\nI also add a section in the mongodb guide about the POJO codec.\nMaybe I need to have a few lines about this inside the MongoDB with Panache guide (on the section where we describe the various annotations we can use with the POJO codec) ?", "createdAt": "2020-02-07T13:43:34Z", "url": "https://github.com/quarkusio/quarkus/pull/7073", "merged": true, "mergeCommit": {"oid": "ea2b1dcb5d8675168fa481ed906d448b254789a4"}, "closed": true, "closedAt": "2020-02-10T22:37:02Z", "author": {"login": "loicmathieu"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcC31x1gFqTM1NTcyNDA3Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcC8EozABqjMwMjI0NjI0NTE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NzI0MDc2", "url": "https://github.com/quarkusio/quarkus/pull/7073#pullrequestreview-355724076", "createdAt": "2020-02-10T07:11:48Z", "commit": {"oid": "c6a896a63e66f1f9f36200f7ce195416ddd55ebf"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNzoxMTo0OVrOFnb3kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQwNzoxNzoxM1rOFnb9Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NTM3OA==", "bodyText": "I don't think this sentence provides any useful information. I propose we drop it and add the link to the next sentence", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376895378", "createdAt": "2020-02-10T07:11:49Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/mongodb.adoc", "diffHunk": "@@ -502,6 +502,18 @@ public class CodecFruitService {\n }\n ----\n \n+== The POJO Codec\n+\n+Quarkus initializes the link:http://mongodb.github.io/mongo-java-driver/3.12/bson/pojos[MongoDB POJO Codec], this codec is capable of automatically working with POJOs so in many cases,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a896a63e66f1f9f36200f7ce195416ddd55ebf"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NTk5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The POJO Codec provides a rich set of features to customize the way your POJO is mapped to a collection using a set of annotations.\n          \n          \n            \n            The POJO Codec provides a set of annotations that enable the customization of the way a POJO is mapped to a MongoDB collection.", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376895995", "createdAt": "2020-02-10T07:14:03Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/mongodb.adoc", "diffHunk": "@@ -502,6 +502,18 @@ public class CodecFruitService {\n }\n ----\n \n+== The POJO Codec\n+\n+Quarkus initializes the link:http://mongodb.github.io/mongo-java-driver/3.12/bson/pojos[MongoDB POJO Codec], this codec is capable of automatically working with POJOs so in many cases,\n+you will be able to avoid the creation of a specific codec.\n+\n+The POJO Codec provides a rich set of features to customize the way your POJO is mapped to a collection using a set of annotations.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a896a63e66f1f9f36200f7ce195416ddd55ebf"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NjM2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            One of these annotations is the `@BsonDiscriminator` annotation that allows to store in a single collection multiple Java types by adding\n          \n          \n            \n            One of these annotations is the `@BsonDiscriminator` annotation that allows to storage multiple Java types in a single MongoDB collection by adding", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376896361", "createdAt": "2020-02-10T07:15:26Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/mongodb.adoc", "diffHunk": "@@ -502,6 +502,18 @@ public class CodecFruitService {\n }\n ----\n \n+== The POJO Codec\n+\n+Quarkus initializes the link:http://mongodb.github.io/mongo-java-driver/3.12/bson/pojos[MongoDB POJO Codec], this codec is capable of automatically working with POJOs so in many cases,\n+you will be able to avoid the creation of a specific codec.\n+\n+The POJO Codec provides a rich set of features to customize the way your POJO is mapped to a collection using a set of annotations.\n+\n+One of these annotations is the `@BsonDiscriminator` annotation that allows to store in a single collection multiple Java types by adding", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a896a63e66f1f9f36200f7ce195416ddd55ebf"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5NjYwOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Quarkus will automatically register all the classes annotated with `@BsonDiscriminator` inside the POJO codec, so you don't have to do it by yourself.\n          \n          \n            \n            Quarkus will automatically register all the classes annotated with `@BsonDiscriminator` with the POJO codec.", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376896608", "createdAt": "2020-02-10T07:16:28Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/mongodb.adoc", "diffHunk": "@@ -502,6 +502,18 @@ public class CodecFruitService {\n }\n ----\n \n+== The POJO Codec\n+\n+Quarkus initializes the link:http://mongodb.github.io/mongo-java-driver/3.12/bson/pojos[MongoDB POJO Codec], this codec is capable of automatically working with POJOs so in many cases,\n+you will be able to avoid the creation of a specific codec.\n+\n+The POJO Codec provides a rich set of features to customize the way your POJO is mapped to a collection using a set of annotations.\n+\n+One of these annotations is the `@BsonDiscriminator` annotation that allows to store in a single collection multiple Java types by adding\n+a discriminator field inside the document. It can be useful when working with abstract types or interfaces.\n+\n+Quarkus will automatically register all the classes annotated with `@BsonDiscriminator` inside the POJO codec, so you don't have to do it by yourself.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a896a63e66f1f9f36200f7ce195416ddd55ebf"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Njg5Njc5MA==", "bodyText": "I don't think this can happen really... And if it does it's doubtful that AbstractMongoClientProducer.class.getClassLoader() will save you (certainly not dev mode that is :))", "url": "https://github.com/quarkusio/quarkus/pull/7073#discussion_r376896790", "createdAt": "2020-02-10T07:17:13Z", "author": {"login": "geoand"}, "path": "extensions/mongodb-client/runtime/src/main/java/io/quarkus/mongodb/runtime/AbstractMongoClientProducer.java", "diffHunk": "@@ -217,11 +219,24 @@ private MongoClientSettings createMongoConfiguration(MongoClientConfig config) {\n         }\n         // add pojo codec provider with automatic capabilities\n         // it always needs to be the last codec provided\n-        CodecProvider pojoCodecProvider = PojoCodecProvider.builder()\n+        PojoCodecProvider.Builder pojoCodecProviderBuilder = PojoCodecProvider.builder()\n                 .automatic(true)\n-                .conventions(Conventions.DEFAULT_CONVENTIONS)\n-                .build();\n-        providers.add(pojoCodecProvider);\n+                .conventions(Conventions.DEFAULT_CONVENTIONS);\n+        // register bson discriminators\n+        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();\n+        if (classLoader == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6a896a63e66f1f9f36200f7ce195416ddd55ebf"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7fcff1487cab6dc8c9a0590ca9fc87aae4bf5e54", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/7fcff1487cab6dc8c9a0590ca9fc87aae4bf5e54", "committedDate": "2020-02-10T08:50:16Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: Georgios Andrianakis <geoand@gmail.com>"}, "afterCommit": {"oid": "191c53d660651a6890dd41084fd86b49a4c9c1a7", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/191c53d660651a6890dd41084fd86b49a4c9c1a7", "committedDate": "2020-02-10T09:01:07Z", "message": "Handle MongoDB BsonDiscriminator\n\nFixes #6292"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1Nzc0OTMy", "url": "https://github.com/quarkusio/quarkus/pull/7073#pullrequestreview-355774932", "createdAt": "2020-02-10T09:06:56Z", "commit": {"oid": "191c53d660651a6890dd41084fd86b49a4c9c1a7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ee1c84725054f8a7a8036e4c4e22ae9badeffb7", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/9ee1c84725054f8a7a8036e4c4e22ae9badeffb7", "committedDate": "2020-02-10T12:12:57Z", "message": "Handle MongoDB BsonDiscriminator\n\nFixes #6292"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "191c53d660651a6890dd41084fd86b49a4c9c1a7", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/191c53d660651a6890dd41084fd86b49a4c9c1a7", "committedDate": "2020-02-10T09:01:07Z", "message": "Handle MongoDB BsonDiscriminator\n\nFixes #6292"}, "afterCommit": {"oid": "9ee1c84725054f8a7a8036e4c4e22ae9badeffb7", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/9ee1c84725054f8a7a8036e4c4e22ae9badeffb7", "committedDate": "2020-02-10T12:12:57Z", "message": "Handle MongoDB BsonDiscriminator\n\nFixes #6292"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4849, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}