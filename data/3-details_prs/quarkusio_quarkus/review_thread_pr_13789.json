{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1MzgyMjE3", "number": 13789, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDowMDoxM1rOFDfeog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDowMDoxM1rOFDfeog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5MjA1Nzk0OnYy", "diffSide": "RIGHT", "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDowMDoxM1rOIDKoNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxMjoxNDo1N1rOID2QYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5MDc3NA==", "bodyText": "I think an enhanced for-loop would be better here for performance purposes?", "url": "https://github.com/quarkusio/quarkus/pull/13789#discussion_r540190774", "createdAt": "2020-12-10T14:00:13Z", "author": {"login": "gastaldi"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -362,11 +365,13 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n \n     @Override\n     public Class<?> loadClass(String name) throws ClassNotFoundException {\n+        classLoaderEventListeners.forEach(l -> l.loadClass(name, this.name));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "181ee50f0d0b33925df6f7a6d4b534ef6a2e7d88"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5MjE3OQ==", "bodyText": "That's certainly true, but as this is the dev and test mode ClassLoader, it shouldn't make much of a difference.\nSanne knows I was real picky about the prod ClassLoader, but for this one I don't think we need to be that extreme :)", "url": "https://github.com/quarkusio/quarkus/pull/13789#discussion_r540192179", "createdAt": "2020-12-10T14:02:10Z", "author": {"login": "geoand"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -362,11 +365,13 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n \n     @Override\n     public Class<?> loadClass(String name) throws ClassNotFoundException {\n+        classLoaderEventListeners.forEach(l -> l.loadClass(name, this.name));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5MDc3NA=="}, "originalCommit": {"oid": "181ee50f0d0b33925df6f7a6d4b534ef6a2e7d88"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDM5NzY2Mw==", "bodyText": "I generally prefer avoiding lambdas myself, so I'd be happy to change this if you prefer.\nThe reason I went with it in this case is that this code only applies to test/dev mode - so I'm assuming the one-liner is less intrusive and maintenance friendly. No strong opinions, I just thought this stuff shouldn't be a distraction from the overall ClassLoading business :)", "url": "https://github.com/quarkusio/quarkus/pull/13789#discussion_r540397663", "createdAt": "2020-12-10T18:24:25Z", "author": {"login": "Sanne"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -362,11 +365,13 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n \n     @Override\n     public Class<?> loadClass(String name) throws ClassNotFoundException {\n+        classLoaderEventListeners.forEach(l -> l.loadClass(name, this.name));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5MDc3NA=="}, "originalCommit": {"oid": "181ee50f0d0b33925df6f7a6d4b534ef6a2e7d88"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQwMjE3Mg==", "bodyText": "If changing that makes the test or dev mode run faster, I'd say go for it \ud83d\ude09", "url": "https://github.com/quarkusio/quarkus/pull/13789#discussion_r540402172", "createdAt": "2020-12-10T18:31:08Z", "author": {"login": "gastaldi"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -362,11 +365,13 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n \n     @Override\n     public Class<?> loadClass(String name) throws ClassNotFoundException {\n+        classLoaderEventListeners.forEach(l -> l.loadClass(name, this.name));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5MDc3NA=="}, "originalCommit": {"oid": "181ee50f0d0b33925df6f7a6d4b534ef6a2e7d88"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDkwNTU3MQ==", "bodyText": "done", "url": "https://github.com/quarkusio/quarkus/pull/13789#discussion_r540905571", "createdAt": "2020-12-11T12:14:57Z", "author": {"login": "Sanne"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -362,11 +365,13 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n \n     @Override\n     public Class<?> loadClass(String name) throws ClassNotFoundException {\n+        classLoaderEventListeners.forEach(l -> l.loadClass(name, this.name));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5MDc3NA=="}, "originalCommit": {"oid": "181ee50f0d0b33925df6f7a6d4b534ef6a2e7d88"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3817, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}