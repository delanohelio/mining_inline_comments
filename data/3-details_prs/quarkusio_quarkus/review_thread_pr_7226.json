{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2MTQxMjM1", "number": 7226, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNToyNzo1NVrODgbcZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMjo1MjozOFrODghSXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzMwNjYyOnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNToyNzo1NVrOFqoTsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNTozOToxMlrOFqorjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI0NDkxMg==", "bodyText": "If we are doing that, why not copy them while walking the dependency tree?", "url": "https://github.com/quarkusio/quarkus/pull/7226#discussion_r380244912", "createdAt": "2020-02-17T15:27:55Z", "author": {"login": "aloubyansky"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "diffHunk": "@@ -415,43 +434,71 @@ private void doThinJarGeneration(CurateOutcomeBuildItem curateOutcomeBuildItem,\n \n         final List<AppDependency> appDeps = curateOutcomeBuildItem.getEffectiveModel().getUserDependencies();\n \n-        copyLibraryJars(transformedClasses, libDir, classPath, appDeps);\n+        Map<AppDependency, List<Path>> classesOfNonJarDependencies = copyLibraryJars(transformedClasses, libDir, classPath,\n+                appDeps, services);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ec78903638d3c12a422808bd306d7281d008d90"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI0NjA0OA==", "bodyText": "Very good point! I'll update the PR.", "url": "https://github.com/quarkusio/quarkus/pull/7226#discussion_r380246048", "createdAt": "2020-02-17T15:30:13Z", "author": {"login": "geoand"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "diffHunk": "@@ -415,43 +434,71 @@ private void doThinJarGeneration(CurateOutcomeBuildItem curateOutcomeBuildItem,\n \n         final List<AppDependency> appDeps = curateOutcomeBuildItem.getEffectiveModel().getUserDependencies();\n \n-        copyLibraryJars(transformedClasses, libDir, classPath, appDeps);\n+        Map<AppDependency, List<Path>> classesOfNonJarDependencies = copyLibraryJars(transformedClasses, libDir, classPath,\n+                appDeps, services);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI0NDkxMg=="}, "originalCommit": {"oid": "4ec78903638d3c12a422808bd306d7281d008d90"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI1MTAyMg==", "bodyText": "Fixed", "url": "https://github.com/quarkusio/quarkus/pull/7226#discussion_r380251022", "createdAt": "2020-02-17T15:39:12Z", "author": {"login": "geoand"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "diffHunk": "@@ -415,43 +434,71 @@ private void doThinJarGeneration(CurateOutcomeBuildItem curateOutcomeBuildItem,\n \n         final List<AppDependency> appDeps = curateOutcomeBuildItem.getEffectiveModel().getUserDependencies();\n \n-        copyLibraryJars(transformedClasses, libDir, classPath, appDeps);\n+        Map<AppDependency, List<Path>> classesOfNonJarDependencies = copyLibraryJars(transformedClasses, libDir, classPath,\n+                appDeps, services);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDI0NDkxMg=="}, "originalCommit": {"oid": "4ec78903638d3c12a422808bd306d7281d008d90"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDI2Mzk5OnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMjo1MjozOFrOFqxL6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNzoxMjoxOVrOFq3YLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM5MDM3Ng==", "bodyText": "Wouldn't !Files.isDirectory() be more appropriate here? I know it is not likely to happen but you could have a directory that ends in .jar.", "url": "https://github.com/quarkusio/quarkus/pull/7226#discussion_r380390376", "createdAt": "2020-02-17T22:52:38Z", "author": {"login": "stuartwdouglas"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "diffHunk": "@@ -284,6 +237,72 @@ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs)\n         return new JarBuildItem(runnerJar, originalJar, null);\n     }\n \n+    private boolean isAppDepAJar(AppArtifact artifact) {\n+        return \"jar\".equals(artifact.getType());\n+    }\n+\n+    private boolean isAppDepPathAJar(AppArtifact artifact) {\n+        return artifact.getPath().getFileName().toString().endsWith(\".jar\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93225491e60737a360f25447ac1d75a6c9125656"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ5MTgyMg==", "bodyText": "Makes perfect sense, fixed", "url": "https://github.com/quarkusio/quarkus/pull/7226#discussion_r380491822", "createdAt": "2020-02-18T07:12:19Z", "author": {"login": "geoand"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "diffHunk": "@@ -284,6 +237,72 @@ public FileVisitResult visitFile(Path file, BasicFileAttributes attrs)\n         return new JarBuildItem(runnerJar, originalJar, null);\n     }\n \n+    private boolean isAppDepAJar(AppArtifact artifact) {\n+        return \"jar\".equals(artifact.getType());\n+    }\n+\n+    private boolean isAppDepPathAJar(AppArtifact artifact) {\n+        return artifact.getPath().getFileName().toString().endsWith(\".jar\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM5MDM3Ng=="}, "originalCommit": {"oid": "93225491e60737a360f25447ac1d75a6c9125656"}, "originalPosition": 89}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1035, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}