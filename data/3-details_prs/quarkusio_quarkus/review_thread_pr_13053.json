{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNzA3MTc0", "number": 13053, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzo1MToxOVrOE0fRww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzo1ODozOVrOE0fcmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDczODU5OnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/PersistenceUnitsHolder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzo1MToxOVrOHsPgWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoxNzo0N1rOHsQatQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE1MzQzNA==", "bodyText": "We should maybe rename the method to popRecordedState or something similar? So that consumers know what they are doing?", "url": "https://github.com/quarkusio/quarkus/pull/13053#discussion_r516153434", "createdAt": "2020-11-02T17:51:19Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/PersistenceUnitsHolder.java", "diffHunk": "@@ -54,7 +54,7 @@ public static RecordedState getRecordedState(String persistenceUnitName) {\n         if (persistenceUnitName == null) {\n             key = NO_NAME_TOKEN;\n         }\n-        return persistenceUnits.recordedStates.get(key);\n+        return persistenceUnits.recordedStates.remove(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f6075e2df4220bd6496c9d3d26baa8256581d72c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE1OTE0OQ==", "bodyText": "ok good point.", "url": "https://github.com/quarkusio/quarkus/pull/13053#discussion_r516159149", "createdAt": "2020-11-02T18:00:59Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/PersistenceUnitsHolder.java", "diffHunk": "@@ -54,7 +54,7 @@ public static RecordedState getRecordedState(String persistenceUnitName) {\n         if (persistenceUnitName == null) {\n             key = NO_NAME_TOKEN;\n         }\n-        return persistenceUnits.recordedStates.get(key);\n+        return persistenceUnits.recordedStates.remove(key);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE1MzQzNA=="}, "originalCommit": {"oid": "f6075e2df4220bd6496c9d3d26baa8256581d72c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE2ODM3Mw==", "bodyText": "OK, then, if we can just adjust the method name in this commit, we can merge.", "url": "https://github.com/quarkusio/quarkus/pull/13053#discussion_r516168373", "createdAt": "2020-11-02T18:17:47Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/PersistenceUnitsHolder.java", "diffHunk": "@@ -54,7 +54,7 @@ public static RecordedState getRecordedState(String persistenceUnitName) {\n         if (persistenceUnitName == null) {\n             key = NO_NAME_TOKEN;\n         }\n-        return persistenceUnits.recordedStates.get(key);\n+        return persistenceUnits.recordedStates.remove(key);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE1MzQzNA=="}, "originalCommit": {"oid": "f6075e2df4220bd6496c9d3d26baa8256581d72c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNDc2NjMzOnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/service/FlatClassLoaderService.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNzo1ODozOVrOHsPxGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxODoxNjozMVrOHsQYAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE1NzcyMw==", "bodyText": "I'm not sure these will be included in the native image? Given it's a runtime class, I suppose it can be called at runtime?\nFor JAXB, I had to add this: https://github.com/quarkusio/quarkus/blob/master/extensions/jaxb/deployment/src/main/java/io/quarkus/jaxb/deployment/JaxbProcessor.java#L152 .\nI don't know if you're having this new method for a similar purpose.", "url": "https://github.com/quarkusio/quarkus/pull/13053#discussion_r516157723", "createdAt": "2020-11-02T17:58:39Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/service/FlatClassLoaderService.java", "diffHunk": "@@ -98,6 +98,20 @@ public InputStream locateResourceStream(String name) {\n         throw new AssertionFailure(\"Not implemented! generateProxy(InvocationHandler handler, Class... interfaces)\");\n     }\n \n+    @Override\n+    public Package packageForNameOrNull(String packageName) {\n+        try {\n+            Class<?> aClass = Class.forName(packageName + \".package-info\", false, getClassLoader());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7aa8967e26b90b3acf68b744120e59da6bce0bd"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE2MDMxMw==", "bodyText": "No we don't need to access these at runtime, the purpose is for package-level annotations to be discoverable during metadata scanning when not using Jandex. I even doubt it's at all useful for Quarkus.\nTo be clear, this is code that previously was handled by HCANN, I moved the responsibility to the ClassLoaderService - this method is just doing exactly the same as it was done before.", "url": "https://github.com/quarkusio/quarkus/pull/13053#discussion_r516160313", "createdAt": "2020-11-02T18:03:02Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/service/FlatClassLoaderService.java", "diffHunk": "@@ -98,6 +98,20 @@ public InputStream locateResourceStream(String name) {\n         throw new AssertionFailure(\"Not implemented! generateProxy(InvocationHandler handler, Class... interfaces)\");\n     }\n \n+    @Override\n+    public Package packageForNameOrNull(String packageName) {\n+        try {\n+            Class<?> aClass = Class.forName(packageName + \".package-info\", false, getClassLoader());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE1NzcyMw=="}, "originalCommit": {"oid": "d7aa8967e26b90b3acf68b744120e59da6bce0bd"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE2NzY4Mg==", "bodyText": "OK, if it's used when we build the metadata at build time, it's all good.", "url": "https://github.com/quarkusio/quarkus/pull/13053#discussion_r516167682", "createdAt": "2020-11-02T18:16:31Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/service/FlatClassLoaderService.java", "diffHunk": "@@ -98,6 +98,20 @@ public InputStream locateResourceStream(String name) {\n         throw new AssertionFailure(\"Not implemented! generateProxy(InvocationHandler handler, Class... interfaces)\");\n     }\n \n+    @Override\n+    public Package packageForNameOrNull(String packageName) {\n+        try {\n+            Class<?> aClass = Class.forName(packageName + \".package-info\", false, getClassLoader());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjE1NzcyMw=="}, "originalCommit": {"oid": "d7aa8967e26b90b3acf68b744120e59da6bce0bd"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4128, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}