{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NjgyNTAy", "number": 9193, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo0NzoxNVrOD7OV-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo0NzoxNVrOD7OV-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNDI3NTc3OnYy", "diffSide": "RIGHT", "path": "extensions/spring-data-jpa/deployment/src/main/java/io/quarkus/spring/data/deployment/generate/AbstractMethodsAdder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo0NzoxNVrOGTas4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxMjo0ODo0M1rOGTav9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxMzYwMA==", "bodyText": "Shouldn't we consider all the primitive types here while we are at it?", "url": "https://github.com/quarkusio/quarkus/pull/9193#discussion_r423013600", "createdAt": "2020-05-11T12:47:15Z", "author": {"login": "gsmet"}, "path": "extensions/spring-data-jpa/deployment/src/main/java/io/quarkus/spring/data/deployment/generate/AbstractMethodsAdder.java", "diffHunk": "@@ -203,10 +203,21 @@ protected void generateFindQueryResultHandling(MethodCreator methodCreator, Resu\n \n             methodCreator.returnValue(sliceResult);\n \n+        } else if (isIntLongOrBoolean(returnType)) {\n+            ResultHandle singleResult = methodCreator.invokeInterfaceMethod(\n+                    MethodDescriptor.ofMethod(PanacheQuery.class, \"singleResult\", Object.class),\n+                    panacheQuery);\n+            methodCreator.returnValue(singleResult);\n         } else {\n             throw new IllegalArgumentException(\n                     \"Return type of method \" + methodName + \" of Repository \" + repositoryClassInfo\n                             + \" does not match find query type\");\n         }\n     }\n+\n+    protected boolean isIntLongOrBoolean(DotName dotName) {\n+        return DotNames.BOOLEAN.equals(dotName) || DotNames.PRIMITIVE_BOOLEAN.equals(dotName)\n+                || DotNames.INTEGER.equals(dotName) || DotNames.PRIMITIVE_INTEGER.equals(dotName)\n+                || DotNames.LONG.equals(dotName) || DotNames.PRIMITIVE_LONG.equals(dotName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb92c400df559762e099e99536d8368b3fa79a7c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxNDM5MQ==", "bodyText": "We potentially could, but I don't know if they are all support by Spring Data anyway. These are the ones that show up often.", "url": "https://github.com/quarkusio/quarkus/pull/9193#discussion_r423014391", "createdAt": "2020-05-11T12:48:43Z", "author": {"login": "geoand"}, "path": "extensions/spring-data-jpa/deployment/src/main/java/io/quarkus/spring/data/deployment/generate/AbstractMethodsAdder.java", "diffHunk": "@@ -203,10 +203,21 @@ protected void generateFindQueryResultHandling(MethodCreator methodCreator, Resu\n \n             methodCreator.returnValue(sliceResult);\n \n+        } else if (isIntLongOrBoolean(returnType)) {\n+            ResultHandle singleResult = methodCreator.invokeInterfaceMethod(\n+                    MethodDescriptor.ofMethod(PanacheQuery.class, \"singleResult\", Object.class),\n+                    panacheQuery);\n+            methodCreator.returnValue(singleResult);\n         } else {\n             throw new IllegalArgumentException(\n                     \"Return type of method \" + methodName + \" of Repository \" + repositoryClassInfo\n                             + \" does not match find query type\");\n         }\n     }\n+\n+    protected boolean isIntLongOrBoolean(DotName dotName) {\n+        return DotNames.BOOLEAN.equals(dotName) || DotNames.PRIMITIVE_BOOLEAN.equals(dotName)\n+                || DotNames.INTEGER.equals(dotName) || DotNames.PRIMITIVE_INTEGER.equals(dotName)\n+                || DotNames.LONG.equals(dotName) || DotNames.PRIMITIVE_LONG.equals(dotName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzAxMzYwMA=="}, "originalCommit": {"oid": "fb92c400df559762e099e99536d8368b3fa79a7c"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3168, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}