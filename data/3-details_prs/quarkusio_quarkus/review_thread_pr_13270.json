{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMjkyNTcw", "number": 13270, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOTozODozMlrOE4mAGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOTozODozMlrOE4mAGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3Nzc4MzI5OnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/deployment/src/test/java/io/quarkus/hibernate/orm/HibernateMetricsTestCase.java", "isResolved": true, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwOTozODozMlrOHynQ7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMzo0MjowNlrOHyuvmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgzNDE1OA==", "bodyText": "Why this change? I was the one asking for -orm. Hibernate is more than ORM and we might add Hibernate Search metrics at some point.", "url": "https://github.com/quarkusio/quarkus/pull/13270#discussion_r522834158", "createdAt": "2020-11-13T09:38:32Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/deployment/src/test/java/io/quarkus/hibernate/orm/HibernateMetricsTestCase.java", "diffHunk": "@@ -57,20 +57,23 @@ public void setNumber(Long number) {\n     @Test\n     @Transactional\n     public void testMetrics() {\n-        assertEquals(0L, getCounterValueOrNull(\"hibernate-orm.queries.executed\",\n+        assertEquals(0L, getCounterValueOrNull(\"hibernate.query.executions\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19f7c2b80a7738ddc7e9b232ac9619481a251fe8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg3MzExMw==", "bodyText": "hi @gsmet - I've been discussing this with Erin, and while I explained her the same, she made some excellent points so she persuaded me.\nThe gist of the discusion is that Micrometer upstream has been using the \"wrong\" prefix hibernate. for a long time, and it's what is being used by many existing applications. So in practice, the metrics of many applications (most of them will be existing) are being collected in the same metrics-storage, and it's important for the radix to be consistent.\nI did remind that Quarkus doesn't aim to migrate existing applications, but this is about coexisting with (many) existing applications.\nWe also wondered if we should have a configuration property, but after thinking about that I think giving up on the prefix correction is fine - it's a ship that sailed long before we had the chance.\nI suppose Hibernate Search will be able to add additional metrics under the same, shared radix.\nNot sure about Validator; it is unlikely to need such metrics soon? If we want them, I think we can \"steal\" the validator. prefix and make it our own.", "url": "https://github.com/quarkusio/quarkus/pull/13270#discussion_r522873113", "createdAt": "2020-11-13T10:49:58Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/deployment/src/test/java/io/quarkus/hibernate/orm/HibernateMetricsTestCase.java", "diffHunk": "@@ -57,20 +57,23 @@ public void setNumber(Long number) {\n     @Test\n     @Transactional\n     public void testMetrics() {\n-        assertEquals(0L, getCounterValueOrNull(\"hibernate-orm.queries.executed\",\n+        assertEquals(0L, getCounterValueOrNull(\"hibernate.query.executions\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgzNDE1OA=="}, "originalCommit": {"oid": "19f7c2b80a7738ddc7e9b232ac9619481a251fe8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg3MzgwNA==", "bodyText": "adding @yrodiere for awareness and opinions as well..", "url": "https://github.com/quarkusio/quarkus/pull/13270#discussion_r522873804", "createdAt": "2020-11-13T10:51:16Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/deployment/src/test/java/io/quarkus/hibernate/orm/HibernateMetricsTestCase.java", "diffHunk": "@@ -57,20 +57,23 @@ public void setNumber(Long number) {\n     @Test\n     @Transactional\n     public void testMetrics() {\n-        assertEquals(0L, getCounterValueOrNull(\"hibernate-orm.queries.executed\",\n+        assertEquals(0L, getCounterValueOrNull(\"hibernate.query.executions\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgzNDE1OA=="}, "originalCommit": {"oid": "19f7c2b80a7738ddc7e9b232ac9619481a251fe8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg3OTAyOA==", "bodyText": "I don't expect us to have metrics for Validator.\nBut having the hibernate. prefix alone will certainly be confusing once we add search in the mix.", "url": "https://github.com/quarkusio/quarkus/pull/13270#discussion_r522879028", "createdAt": "2020-11-13T11:01:11Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/deployment/src/test/java/io/quarkus/hibernate/orm/HibernateMetricsTestCase.java", "diffHunk": "@@ -57,20 +57,23 @@ public void setNumber(Long number) {\n     @Test\n     @Transactional\n     public void testMetrics() {\n-        assertEquals(0L, getCounterValueOrNull(\"hibernate-orm.queries.executed\",\n+        assertEquals(0L, getCounterValueOrNull(\"hibernate.query.executions\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgzNDE1OA=="}, "originalCommit": {"oid": "19f7c2b80a7738ddc7e9b232ac9619481a251fe8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg4Mjg4NA==", "bodyText": "I agree with Guillaume that this is an annoying change.\nOn the communication side of things, it's kind of hard to explain what Hibernate Search is if you go around telling people that Hibernate is an ORM. Hibernate is not an ORM, it's a family of project, and organization, whatever you want, but not just an ORM. However, this ship has sailed too when it was decided (recently) to name \"Hibernate Reactive\" that way. We're clearly going in a direction where \"Hibernate\" is advertised as the name of an ORM. Explaining what that Hibernate Search is not Hibernate ORM is hard, and it'll stay that way, I gave up.\nIf I understand correctly, we're sticking to a pre-existing prefix for backward compatibility reasons. I suppose there are no ways to define aliases to just work around the problem? I.e. make sure that people retrieving metrics for the prefix 'hibernate.' will continue to get the metrics for hibernate-orm., with a warning? That would seem like a better solution.\nRegardless, when we will add metrics for Hibernate Search, we'll try to stick to whatever is the rule in Quarkus. I suspect reusing the hibernate. prefix will lead to problems along the way, so I'd rather avoid that.\nI think we're supposed to use the extension name, so we'll end up with something like hibernate-search-orm-elasticsearch.? I don't have a strong opinion as long as we avoid naming conflicts with future extensions based on Hibernate Search without ORM.", "url": "https://github.com/quarkusio/quarkus/pull/13270#discussion_r522882884", "createdAt": "2020-11-13T11:09:07Z", "author": {"login": "yrodiere"}, "path": "extensions/hibernate-orm/deployment/src/test/java/io/quarkus/hibernate/orm/HibernateMetricsTestCase.java", "diffHunk": "@@ -57,20 +57,23 @@ public void setNumber(Long number) {\n     @Test\n     @Transactional\n     public void testMetrics() {\n-        assertEquals(0L, getCounterValueOrNull(\"hibernate-orm.queries.executed\",\n+        assertEquals(0L, getCounterValueOrNull(\"hibernate.query.executions\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgzNDE1OA=="}, "originalCommit": {"oid": "19f7c2b80a7738ddc7e9b232ac9619481a251fe8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjg4ODMyOA==", "bodyText": "Remember it's a nested nodes structure, so you could still use the hibernate. prefix, as long as we manage to disambiguate sub elements.\nSpecifically, hibernate.query.executions is taken, but you could use hibernate.fulltextquery.executions, or hibernate.search.fulltextquery.executions.\nAnd yes it's annoying, but I also give up.. let's consider that this PR is about better integration with an existing library which did behave like this.\nIf one of you (both) feel very strongly this is wrong, I propose you follow up with a patch which makes the prefix configurable; if we default to hibernate-orm there's a (very remote) possibility that you manage to eventually re-educate the rest of the universe, but before we get there consider you'll be annoying many users who will be forced to figure out what's wrong, find the configuration property, reconfigure all their apps.", "url": "https://github.com/quarkusio/quarkus/pull/13270#discussion_r522888328", "createdAt": "2020-11-13T11:19:33Z", "author": {"login": "Sanne"}, "path": "extensions/hibernate-orm/deployment/src/test/java/io/quarkus/hibernate/orm/HibernateMetricsTestCase.java", "diffHunk": "@@ -57,20 +57,23 @@ public void setNumber(Long number) {\n     @Test\n     @Transactional\n     public void testMetrics() {\n-        assertEquals(0L, getCounterValueOrNull(\"hibernate-orm.queries.executed\",\n+        assertEquals(0L, getCounterValueOrNull(\"hibernate.query.executions\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgzNDE1OA=="}, "originalCommit": {"oid": "19f7c2b80a7738ddc7e9b232ac9619481a251fe8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk1MTI5MQ==", "bodyText": "I talked to Sanne about this. This change is more in line w/ the rest of the community's usage of hibernate metrics (it matches what the micrometer binder is doing verbatim, which makes it easier to intermix). @Sanne agreed that consistency across hibernate metrics providers is more important than the distinction of -orm in only Quarkus.\n(edit: Sorry.. somehow my browser was not showing me all of the above discussion!)", "url": "https://github.com/quarkusio/quarkus/pull/13270#discussion_r522951291", "createdAt": "2020-11-13T13:31:51Z", "author": {"login": "ebullient"}, "path": "extensions/hibernate-orm/deployment/src/test/java/io/quarkus/hibernate/orm/HibernateMetricsTestCase.java", "diffHunk": "@@ -57,20 +57,23 @@ public void setNumber(Long number) {\n     @Test\n     @Transactional\n     public void testMetrics() {\n-        assertEquals(0L, getCounterValueOrNull(\"hibernate-orm.queries.executed\",\n+        assertEquals(0L, getCounterValueOrNull(\"hibernate.query.executions\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgzNDE1OA=="}, "originalCommit": {"oid": "19f7c2b80a7738ddc7e9b232ac9619481a251fe8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjk1NjY5OQ==", "bodyText": "From a metrics perspective, I feel like there is an education argument to be made for orm vs. search -- but given existing usage patterns, I'm not sure how important this really is (other than for people that really care, which y'all do).\nIn micrometer, everything is dot qualified, which then is translated to whatever a meter registry expects (e.g. . to _) ... from what I understand, trying to disambiguate search is explained sufficiently with hibernate.search...", "url": "https://github.com/quarkusio/quarkus/pull/13270#discussion_r522956699", "createdAt": "2020-11-13T13:42:06Z", "author": {"login": "ebullient"}, "path": "extensions/hibernate-orm/deployment/src/test/java/io/quarkus/hibernate/orm/HibernateMetricsTestCase.java", "diffHunk": "@@ -57,20 +57,23 @@ public void setNumber(Long number) {\n     @Test\n     @Transactional\n     public void testMetrics() {\n-        assertEquals(0L, getCounterValueOrNull(\"hibernate-orm.queries.executed\",\n+        assertEquals(0L, getCounterValueOrNull(\"hibernate.query.executions\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjgzNDE1OA=="}, "originalCommit": {"oid": "19f7c2b80a7738ddc7e9b232ac9619481a251fe8"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3901, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}