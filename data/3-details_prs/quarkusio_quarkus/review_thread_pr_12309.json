{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMDU5NTE3", "number": 12309, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNjowNjoxNlrOEm4wZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNjowNjoxNlrOEm4wZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MjExMjM3OnYy", "diffSide": "RIGHT", "path": "extensions/smallrye-reactive-messaging/deployment/src/main/java/io/quarkus/smallrye/reactivemessaging/deployment/SmallRyeReactiveMessagingProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNjowNjoxNlrOHXK90A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjozMjo0NlrOHXYP7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA1ODk2MA==", "bodyText": "If it uses micrometer, how are the metrics reported?", "url": "https://github.com/quarkusio/quarkus/pull/12309#discussion_r494058960", "createdAt": "2020-09-24T06:06:16Z", "author": {"login": "cescoffier"}, "path": "extensions/smallrye-reactive-messaging/deployment/src/main/java/io/quarkus/smallrye/reactivemessaging/deployment/SmallRyeReactiveMessagingProcessor.java", "diffHunk": "@@ -282,11 +282,14 @@ private void createEmitter(BuildProducer<EmitterBuildItem> emitters, InjectionPo\n \n     @BuildStep\n     public void enableMetrics(BuildProducer<AnnotationsTransformerBuildItem> transformers,\n-            Capabilities capabilities, ReactiveMessagingConfiguration configuration) {\n-        boolean isMetricEnabled = capabilities.isPresent(Capability.METRICS) && configuration.metricsEnabled;\n-        if (!isMetricEnabled) {\n-            LOGGER.debug(\"Metric is disabled - vetoing the MetricDecorator\");\n-            // We veto the Metric Decorator\n+            Optional<MetricsCapabilityBuildItem> metricsCapability,\n+            ReactiveMessagingConfiguration configuration) {\n+        boolean isMetricEnabled = metricsCapability.isPresent() && configuration.metricsEnabled;\n+        boolean useMicrometer = isMetricEnabled && metricsCapability.get().metricsSupported(MetricsFactory.MICROMETER);\n+        if (!isMetricEnabled || useMicrometer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e61f4d6a8412e184bbfa4de1a07b8cc7a30e4ed"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI3NjU5MA==", "bodyText": "They aren't (yet). I was going to have another conversation with you about what metrics should be emitted w/ micrometer. (The metrics in this Decorator are only expected if MP Metrics is present, and I am not sure they're useful enough to preserve?)", "url": "https://github.com/quarkusio/quarkus/pull/12309#discussion_r494276590", "createdAt": "2020-09-24T12:32:46Z", "author": {"login": "ebullient"}, "path": "extensions/smallrye-reactive-messaging/deployment/src/main/java/io/quarkus/smallrye/reactivemessaging/deployment/SmallRyeReactiveMessagingProcessor.java", "diffHunk": "@@ -282,11 +282,14 @@ private void createEmitter(BuildProducer<EmitterBuildItem> emitters, InjectionPo\n \n     @BuildStep\n     public void enableMetrics(BuildProducer<AnnotationsTransformerBuildItem> transformers,\n-            Capabilities capabilities, ReactiveMessagingConfiguration configuration) {\n-        boolean isMetricEnabled = capabilities.isPresent(Capability.METRICS) && configuration.metricsEnabled;\n-        if (!isMetricEnabled) {\n-            LOGGER.debug(\"Metric is disabled - vetoing the MetricDecorator\");\n-            // We veto the Metric Decorator\n+            Optional<MetricsCapabilityBuildItem> metricsCapability,\n+            ReactiveMessagingConfiguration configuration) {\n+        boolean isMetricEnabled = metricsCapability.isPresent() && configuration.metricsEnabled;\n+        boolean useMicrometer = isMetricEnabled && metricsCapability.get().metricsSupported(MetricsFactory.MICROMETER);\n+        if (!isMetricEnabled || useMicrometer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA1ODk2MA=="}, "originalCommit": {"oid": "8e61f4d6a8412e184bbfa4de1a07b8cc7a30e4ed"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 215, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}