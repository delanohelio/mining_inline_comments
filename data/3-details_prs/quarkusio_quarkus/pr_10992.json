{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MTY0MzYx", "number": 10992, "title": "Reactive routes - register return/body types for reflection if needed", "bodyText": "resolves #10893", "createdAt": "2020-07-27T13:28:12Z", "url": "https://github.com/quarkusio/quarkus/pull/10992", "merged": true, "mergeCommit": {"oid": "88c654b8053fa36813665b6f4423d7994fab0858"}, "closed": true, "closedAt": "2020-07-28T16:04:18Z", "author": {"login": "mkouba"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc5CCeqgFqTQ1NTc5MjE1Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5RnIzAFqTQ1NjM4NTYxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NzkyMTU2", "url": "https://github.com/quarkusio/quarkus/pull/10992#pullrequestreview-455792156", "createdAt": "2020-07-27T13:42:06Z", "commit": {"oid": "d80360dd9d899e25733c76e7283758f01f548e6e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzo0MjowN1rOG3i-6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzo0MjowN1rOG3i-6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5ODAyNQ==", "bodyText": "Could these types be wrapped somehow in some other type? If so, it would be better to use a custom predicate (which delegates to the default one once these are checked).", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460898025", "createdAt": "2020-07-27T13:42:07Z", "author": {"login": "gsmet"}, "path": "extensions/vertx-web/deployment/src/main/java/io/quarkus/vertx/web/deployment/VertxWebProcessor.java", "diffHunk": "@@ -599,6 +611,17 @@ void implementInvoke(HandlerDescriptor descriptor, BeanInfo bean, MethodInfo met\n         invoke.returnValue(null);\n     }\n \n+    private static void registerForReflection(Type contentType,\n+            BuildProducer<ReflectiveHierarchyBuildItem> reflectiveHierarchy) {\n+        if (io.quarkus.arc.processor.DotNames.STRING.equals(contentType.name())\n+                || DotNames.BUFFER.equals(contentType.name())\n+                || DotNames.JSON_ARRAY.equals(contentType.name())\n+                || DotNames.JSON_OBJECT.equals(contentType.name())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80360dd9d899e25733c76e7283758f01f548e6e"}, "originalPosition": 110}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d80360dd9d899e25733c76e7283758f01f548e6e", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/d80360dd9d899e25733c76e7283758f01f548e6e", "committedDate": "2020-07-27T13:27:24Z", "message": "Reactive routes - register return/body types for reflection if needed\n\n- resolves #10893"}, "afterCommit": {"oid": "bb609ecf34809469ed3003eb06fa57accbf87adc", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/bb609ecf34809469ed3003eb06fa57accbf87adc", "committedDate": "2020-07-27T13:50:34Z", "message": "Reactive routes - register return/body types for reflection if needed\n\n- resolves #10893"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb609ecf34809469ed3003eb06fa57accbf87adc", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/bb609ecf34809469ed3003eb06fa57accbf87adc", "committedDate": "2020-07-27T13:50:34Z", "message": "Reactive routes - register return/body types for reflection if needed\n\n- resolves #10893"}, "afterCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/d23ca45cd8f93f38492695c55649c55580113b87", "committedDate": "2020-07-27T14:39:53Z", "message": "Reactive routes - register return/body types for reflection if needed\n\n- resolves #10893"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1ODY4NDg0", "url": "https://github.com/quarkusio/quarkus/pull/10992#pullrequestreview-455868484", "createdAt": "2020-07-27T15:02:02Z", "commit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTowMjowMlrOG3mkiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTowMjowMlrOG3mkiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1NjgxMQ==", "bodyText": "Does the timeout perhaps need to be increased or do we already have some headroom?", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460956811", "createdAt": "2020-07-27T15:02:02Z", "author": {"login": "geoand"}, "path": ".github/workflows/ci-actions.yml", "diffHunk": "@@ -517,6 +517,7 @@ jobs:\n               resteasy-mutiny\n               vertx\n               vertx-http\n+              vertx-web", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1ODcxMDcw", "url": "https://github.com/quarkusio/quarkus/pull/10992#pullrequestreview-455871070", "createdAt": "2020-07-27T15:04:50Z", "commit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTowNDo1MFrOG3msJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTowNDo1MFrOG3msJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1ODc1OA==", "bodyText": "As mentioned in my comment, I would use that + the default predicate.", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460958758", "createdAt": "2020-07-27T15:04:50Z", "author": {"login": "gsmet"}, "path": "extensions/vertx-web/deployment/src/main/java/io/quarkus/vertx/web/deployment/VertxWebProcessor.java", "diffHunk": "@@ -599,6 +611,17 @@ void implementInvoke(HandlerDescriptor descriptor, BeanInfo bean, MethodInfo met\n         invoke.returnValue(null);\n     }\n \n+    private static final List<DotName> TYPES_IGNORED_FOR_REFLECTION = Arrays.asList(io.quarkus.arc.processor.DotNames.STRING,\n+            DotNames.BUFFER, DotNames.JSON_ARRAY, DotNames.JSON_OBJECT);\n+\n+    private static void registerForReflection(Type contentType,\n+            BuildProducer<ReflectiveHierarchyBuildItem> reflectiveHierarchy) {\n+        if (TYPES_IGNORED_FOR_REFLECTION.contains(contentType.name())) {\n+            return;\n+        }\n+        reflectiveHierarchy.produce(new ReflectiveHierarchyBuildItem(contentType, TYPES_IGNORED_FOR_REFLECTION::contains));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "originalPosition": 113}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1ODcxMTc5", "url": "https://github.com/quarkusio/quarkus/pull/10992#pullrequestreview-455871179", "createdAt": "2020-07-27T15:04:57Z", "commit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTowNDo1N1rOG3msfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTowNDo1N1rOG3msfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1ODg0Nw==", "bodyText": "Can we please not use this old style for new integration tests? It's probably going to go away soon and best minimize the work when we do :)\nSetting:\n            <properties>\n                <quarkus.package.type>native</quarkus.package.type>\n            </properties>\n\nis all that needs to be done in the native Maven profile in order to produce a native binary", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460958847", "createdAt": "2020-07-27T15:04:57Z", "author": {"login": "geoand"}, "path": "integration-tests/vertx-web/pom.xml", "diffHunk": "@@ -0,0 +1,110 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <artifactId>quarkus-integration-tests-parent</artifactId>\n+        <groupId>io.quarkus</groupId>\n+        <version>999-SNAPSHOT</version>\n+        <relativePath>../</relativePath>\n+    </parent>\n+\n+    <artifactId>quarkus-integration-test-vertx-web</artifactId>\n+    <name>Quarkus - Integration Tests - Vert.x Web</name>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-vertx-web</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-junit5</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.rest-assured</groupId>\n+            <artifactId>rest-assured</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>build</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>\n+            <id>native-image</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-surefire-plugin</artifactId>\n+                        <configuration>\n+                            <skipTests>${native.surefire.skip}</skipTests>\n+                        </configuration>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <systemPropertyVariables>\n+                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n+                                    </systemPropertyVariables>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>io.quarkus</groupId>\n+                        <artifactId>quarkus-maven-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>native-image</id>\n+                                <goals>\n+                                    <goal>native-image</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <cleanupServer>true</cleanupServer>\n+                                    <enableHttpUrlHandler>true</enableHttpUrlHandler>\n+                                    <!-- Include the server certificate -->\n+                                    <additionalBuildArgs>\n+                                        <additionalBuildArg>-H:EnableURLProtocols=http,https</additionalBuildArg>\n+                                    </additionalBuildArgs>\n+                                    <graalvmHome>${graalvmHome}</graalvmHome>\n+                                    <enableAllSecurityServices>true</enableAllSecurityServices>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "originalPosition": 105}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce5272ec6c5f00bbca6cb9d67c0d8ab308713a40", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/ce5272ec6c5f00bbca6cb9d67c0d8ab308713a40", "committedDate": "2020-07-28T07:37:58Z", "message": "Reactive routes - register return/body types for reflection if needed\n\n- resolves #10893"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/d23ca45cd8f93f38492695c55649c55580113b87", "committedDate": "2020-07-27T14:39:53Z", "message": "Reactive routes - register return/body types for reflection if needed\n\n- resolves #10893"}, "afterCommit": {"oid": "ce5272ec6c5f00bbca6cb9d67c0d8ab308713a40", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/ce5272ec6c5f00bbca6cb9d67c0d8ab308713a40", "committedDate": "2020-07-28T07:37:58Z", "message": "Reactive routes - register return/body types for reflection if needed\n\n- resolves #10893"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2Mzc3MjMw", "url": "https://github.com/quarkusio/quarkus/pull/10992#pullrequestreview-456377230", "createdAt": "2020-07-28T07:39:11Z", "commit": {"oid": "ce5272ec6c5f00bbca6cb9d67c0d8ab308713a40"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2Mzg1NjE0", "url": "https://github.com/quarkusio/quarkus/pull/10992#pullrequestreview-456385614", "createdAt": "2020-07-28T07:50:54Z", "commit": {"oid": "ce5272ec6c5f00bbca6cb9d67c0d8ab308713a40"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1151, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}