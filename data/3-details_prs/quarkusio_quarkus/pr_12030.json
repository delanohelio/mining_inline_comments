{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzODcyMzMz", "number": 12030, "title": "Multi project codestart", "bodyText": "Give the possibility to have multiple type of codestart project (ex: quarkus, quarkus-jbang, quarkus-extension, ...), I chose to do it by separating project types in different directories (therefore this moves all the codestarts files).\nRe-activate devtools IT that weren't running because maven-failsafe-plugin was missing\nRefactor the api to make it easier to use with multiple types of project:\n\n// get the catalog\nfinal QuarkusCodestartCatalog catalog = QuarkusCodestartCatalog.fromQuarkusPlatformDescriptor(getPlatformDescriptor());\n\n// generate the project\nfinal QuarkusCodestartProjectInput input = QuarkusCodestartProjectInput.builder().build()\ncatalog.createProject(input).generate(Paths.get(\"test\"))", "createdAt": "2020-09-10T13:42:29Z", "url": "https://github.com/quarkusio/quarkus/pull/12030", "merged": true, "mergeCommit": {"oid": "b3d4192665172c871c09749c621b706cea997152"}, "closed": true, "closedAt": "2020-09-15T15:31:41Z", "author": {"login": "ia3andy"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHhDt9ABqjM3NTExNDM4Mzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJHxFRAFqTQ4ODY3OTAxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "256c6e8a889e41a1c0ef81602b53db79aca28818", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/256c6e8a889e41a1c0ef81602b53db79aca28818", "committedDate": "2020-09-10T13:41:51Z", "message": "Activate IT tests in devmode\n\nand rename Generate and Prepare to Test since they are closer to unit test than IT"}, "afterCommit": {"oid": "d89f949c4b133590d9e5f57008aa83124f1ed28e", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/d89f949c4b133590d9e5f57008aa83124f1ed28e", "committedDate": "2020-09-10T13:45:27Z", "message": "Activate IT tests in devtools integration-tests\n\nand rename Generate and Prepare to Test since they are closer to unit test than IT"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d89f949c4b133590d9e5f57008aa83124f1ed28e", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/d89f949c4b133590d9e5f57008aa83124f1ed28e", "committedDate": "2020-09-10T13:45:27Z", "message": "Activate IT tests in devtools integration-tests\n\nand rename Generate and Prepare to Test since they are closer to unit test than IT"}, "afterCommit": {"oid": "0ce84c932ae33879007e4420bd5b89450363f2b2", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/0ce84c932ae33879007e4420bd5b89450363f2b2", "committedDate": "2020-09-10T16:39:08Z", "message": "Activate IT tests in devtools integration-tests\n\nand rename Generate and Prepare to Test since they are closer to unit test than IT"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ce84c932ae33879007e4420bd5b89450363f2b2", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/0ce84c932ae33879007e4420bd5b89450363f2b2", "committedDate": "2020-09-10T16:39:08Z", "message": "Activate IT tests in devtools integration-tests\n\nand rename Generate and Prepare to Test since they are closer to unit test than IT"}, "afterCommit": {"oid": "b83daa4698c129c6a0fada791cacaebc3cb21ad7", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/b83daa4698c129c6a0fada791cacaebc3cb21ad7", "committedDate": "2020-09-11T08:42:20Z", "message": "Activate IT tests in devtools integration-tests\n\nand rename Generate and Prepare to Test since they are closer to unit test than IT"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b83daa4698c129c6a0fada791cacaebc3cb21ad7", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/b83daa4698c129c6a0fada791cacaebc3cb21ad7", "committedDate": "2020-09-11T08:42:20Z", "message": "Activate IT tests in devtools integration-tests\n\nand rename Generate and Prepare to Test since they are closer to unit test than IT"}, "afterCommit": {"oid": "18ab386bc5890ab99c0e545c2062b8ff005ab4d7", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/18ab386bc5890ab99c0e545c2062b8ff005ab4d7", "committedDate": "2020-09-11T11:19:01Z", "message": "Activate IT tests in devtools integration-tests\n\nand rename Generate and Prepare to Test since they are closer to unit test than IT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d13ba4dd2e7eafe26df5db183d593c1d518f40c6", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/d13ba4dd2e7eafe26df5db183d593c1d518f40c6", "committedDate": "2020-09-14T15:58:05Z", "message": "Multiproject codestarts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f92cc5a675f3bf0a35d6afa5d6a2046085eaa10", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/5f92cc5a675f3bf0a35d6afa5d6a2046085eaa10", "committedDate": "2020-09-14T15:58:05Z", "message": "Activate IT tests in devtools integration-tests\n\nand rename Generate and Prepare to Test since they are closer to unit test than IT"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "18ab386bc5890ab99c0e545c2062b8ff005ab4d7", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/18ab386bc5890ab99c0e545c2062b8ff005ab4d7", "committedDate": "2020-09-11T11:19:01Z", "message": "Activate IT tests in devtools integration-tests\n\nand rename Generate and Prepare to Test since they are closer to unit test than IT"}, "afterCommit": {"oid": "c08cf129de900b271d5be137353e37cc65fc291e", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/c08cf129de900b271d5be137353e37cc65fc291e", "committedDate": "2020-09-14T15:58:06Z", "message": "Refactor Codestart API to reduce coupling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3OTk5NDA3", "url": "https://github.com/quarkusio/quarkus/pull/12030#pullrequestreview-487999407", "createdAt": "2020-09-14T17:36:50Z", "commit": {"oid": "c08cf129de900b271d5be137353e37cc65fc291e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzozNjo1MFrOHRfwrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNzo0MzoxMlrOHRf-Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEwODIwNw==", "bodyText": "Some javadoc would be nice", "url": "https://github.com/quarkusio/quarkus/pull/12030#discussion_r488108207", "createdAt": "2020-09-14T17:36:50Z", "author": {"login": "gastaldi"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartProjectDefinition.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.quarkus.devtools.codestarts;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+public interface CodestartProjectDefinition {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08cf129de900b271d5be137353e37cc65fc291e"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEwOTM5NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                .map(c -> c.getName() + \"codestart has not been applied (doesn't implement language '\" + languageName\n          \n          \n            \n                                .map(c -> c.getName() + \" codestart has not been applied (doesn't implement language '\" + languageName", "url": "https://github.com/quarkusio/quarkus/pull/12030#discussion_r488109394", "createdAt": "2020-09-14T17:39:13Z", "author": {"login": "gastaldi"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/core/CodestartProjectGeneration.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.quarkus.devtools.codestarts.core;\n+\n+import static io.quarkus.devtools.codestarts.core.CodestartProcessor.buildStrategies;\n+\n+import io.quarkus.devtools.codestarts.Codestart;\n+import io.quarkus.devtools.codestarts.CodestartProjectDefinition;\n+import io.quarkus.devtools.codestarts.CodestartType;\n+import io.quarkus.devtools.codestarts.core.strategy.CodestartFileStrategy;\n+import io.quarkus.devtools.codestarts.utils.NestedMaps;\n+import io.quarkus.devtools.messagewriter.MessageWriter;\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+final class CodestartProjectGeneration {\n+\n+    private CodestartProjectGeneration() {\n+    }\n+\n+    static void generateProject(final CodestartProjectDefinition projectDefinition, final Path targetDirectory)\n+            throws IOException {\n+        final MessageWriter log = projectDefinition.getProjectInput().log();\n+\n+        final String languageName = projectDefinition.getLanguageName();\n+\n+        // Processing data\n+        final Map<String, Object> data = NestedMaps.deepMerge(Stream.of(\n+                projectDefinition.getSharedData(),\n+                projectDefinition.getDepsData(),\n+                projectDefinition.getCodestartProjectData()));\n+\n+        log.debug(\"processed shared-data: %s\" + data);\n+\n+        final Codestart projectCodestart = projectDefinition.getRequiredCodestart(CodestartType.PROJECT);\n+\n+        final List<CodestartFileStrategy> strategies = buildStrategies(mergeStrategies(projectDefinition));\n+\n+        log.debug(\"file strategies: %s\", strategies);\n+\n+        CodestartProcessor processor = new CodestartProcessor(log, projectDefinition.getResourceLoader(),\n+                languageName, targetDirectory, strategies, data);\n+        processor.checkTargetDir();\n+        for (Codestart codestart : projectDefinition.getImplementedCodestarts()) {\n+            processor.process(codestart);\n+        }\n+        processor.writeFiles();\n+        log.info(\"\\napplying codestarts...\");\n+        log.info(projectDefinition.getImplementedCodestarts().stream()\n+                .map(c -> c.getType().getIcon() + \" \"\n+                        + c.getName())\n+                .collect(Collectors.joining(\"\\n\")));\n+        if (!projectDefinition.getUnimplementedCodestarts().isEmpty()) {\n+            log.warn(projectDefinition.getUnimplementedCodestarts().stream()\n+                    .map(c -> c.getName() + \"codestart has not been applied (doesn't implement language '\" + languageName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08cf129de900b271d5be137353e37cc65fc291e"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExMDI2NA==", "bodyText": "Return CodestartCatalog? Or is there something particular in this implementation that I am missing?", "url": "https://github.com/quarkusio/quarkus/pull/12030#discussion_r488110264", "createdAt": "2020-09-14T17:40:46Z", "author": {"login": "gastaldi"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/CodestartCatalogLoader.java", "diffHunk": "@@ -6,57 +6,47 @@\n import com.fasterxml.jackson.databind.MapperFeature;\n import com.fasterxml.jackson.databind.ObjectMapper;\n import com.fasterxml.jackson.dataformat.yaml.YAMLFactory;\n+import io.quarkus.devtools.codestarts.core.CodestartSpec;\n+import io.quarkus.devtools.codestarts.core.DefaultCodestartCatalog;\n import java.io.IOException;\n import java.nio.file.Files;\n import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.ArrayList;\n import java.util.Collection;\n import java.util.List;\n import java.util.Objects;\n import java.util.Set;\n import java.util.stream.Collectors;\n import java.util.stream.Stream;\n-import org.apache.commons.io.FilenameUtils;\n \n-final class CodestartLoader {\n+public final class CodestartCatalogLoader {\n+\n     private static final ObjectMapper YAML_MAPPER = new ObjectMapper(new YAMLFactory())\n             .disable(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES)\n             .enable(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY)\n             .enable(DeserializationFeature.READ_ENUMS_USING_TO_STRING)\n             .enable(MapperFeature.ACCEPT_CASE_INSENSITIVE_ENUMS);\n \n-    private static final String CODESTARTS_DIR_BUNDLED = \"bundled-codestarts\";\n-    private static final String CODESTARTS_DIR_FROM_EXTENSIONS = \"codestarts\";\n-\n-    private CodestartLoader() {\n-    }\n-\n-    public static List<Codestart> loadAllCodestarts(CodestartInput input) throws IOException {\n-        return loadAllCodestarts(input.getResourceLoader());\n-    }\n-\n-    public static List<Codestart> loadAllCodestarts(CodestartResourceLoader resourceLoader) throws IOException {\n-        return Stream.concat(loadBundledCodestarts(resourceLoader).stream(),\n-                loadCodestartsFromExtensions(resourceLoader).stream()).collect(Collectors.toList());\n-    }\n-\n-    public static Collection<Codestart> loadBundledCodestarts(CodestartInput input) throws IOException {\n-        return loadBundledCodestarts(input.getResourceLoader());\n-    }\n-\n-    public static Collection<Codestart> loadBundledCodestarts(CodestartResourceLoader resourceLoader) throws IOException {\n-        return loadCodestarts(resourceLoader, CODESTARTS_DIR_BUNDLED);\n+    private CodestartCatalogLoader() {\n     }\n \n-    public static Collection<Codestart> loadCodestartsFromExtensions(CodestartInput input)\n+    public static DefaultCodestartCatalog loadDefaultCatalog(CodestartResourceLoader resourceLoader, String first,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08cf129de900b271d5be137353e37cc65fc291e"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODExMTYyNw==", "bodyText": "Where is extensionsToAdd used?", "url": "https://github.com/quarkusio/quarkus/pull/12030#discussion_r488111627", "createdAt": "2020-09-14T17:43:12Z", "author": {"login": "gastaldi"}, "path": "independent-projects/tools/devtools-common/src/main/java/io/quarkus/devtools/commands/handlers/CreateProjectCommandHandler.java", "diffHunk": "@@ -87,14 +86,19 @@ public QuarkusCommandOutcome execute(QuarkusCommandInvocation invocation) throws\n                         .messageWriter(invocation.log())\n                         .build();\n                 invocation.log().info(\"-----------\");\n-                invocation.log().info(\"selected extensions: \\n\"\n-                        + extensionsToAdd.stream().map(e -> \"- \" + e.getGroupId() + \":\" + e.getArtifactId() + \"\\n\")\n-                                .collect(Collectors.joining()));\n-                final CodestartProject codestartProject = prepareProject(input);\n-                Codestarts.generateProject(codestartProject, invocation.getQuarkusProject().getProjectDirPath());\n+                if (!extensionsToAdd.isEmpty()) {\n+                    invocation.log().info(\"selected extensions: \\n\"\n+                            + extensionsToAdd.stream().map(e -> \"- \" + e.getGroupId() + \":\" + e.getArtifactId() + \"\\n\")\n+                                    .collect(Collectors.joining()));\n+                }\n+\n+                final QuarkusCodestartCatalog catalog = QuarkusCodestartCatalog\n+                        .fromQuarkusPlatformDescriptor(invocation.getPlatformDescriptor());\n+                final CodestartProjectDefinition projectDefinition = catalog.createProject(input);\n+                projectDefinition.generate(invocation.getQuarkusProject().getProjectDirPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08cf129de900b271d5be137353e37cc65fc291e"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bf180540eb4eef35adaebf7d3a5f7b8c95b454e", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/6bf180540eb4eef35adaebf7d3a5f7b8c95b454e", "committedDate": "2020-09-15T08:36:14Z", "message": "Refactor Codestart API to reduce coupling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef03ea164f2e4f6af770f7024188ee3f2f0d1829", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/ef03ea164f2e4f6af770f7024188ee3f2f0d1829", "committedDate": "2020-09-15T08:36:19Z", "message": "Add quarkus-arc as a project dependency in Quarkus Codestarts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "452427f458b44e4da1c8954f0114fd0b1bc34c63", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/452427f458b44e4da1c8954f0114fd0b1bc34c63", "committedDate": "2020-09-15T08:20:43Z", "message": "Add quarkus-arc as a project dependency in Quarkus Codestarts"}, "afterCommit": {"oid": "ef03ea164f2e4f6af770f7024188ee3f2f0d1829", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/ef03ea164f2e4f6af770f7024188ee3f2f0d1829", "committedDate": "2020-09-15T08:36:19Z", "message": "Add quarkus-arc as a project dependency in Quarkus Codestarts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDY3NjM3", "url": "https://github.com/quarkusio/quarkus/pull/12030#pullrequestreview-488467637", "createdAt": "2020-09-15T08:53:53Z", "commit": {"oid": "ef03ea164f2e4f6af770f7024188ee3f2f0d1829"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1Mzo1M1rOHR3pYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwODo1Mzo1M1rOHR3pYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ5OTU1NQ==", "bodyText": "Is this a leftover?", "url": "https://github.com/quarkusio/quarkus/pull/12030#discussion_r488499555", "createdAt": "2020-09-15T08:53:53Z", "author": {"login": "aloubyansky"}, "path": "independent-projects/tools/codestarts/src/main/java/io/quarkus/devtools/codestarts/Codestart.java", "diffHunk": "@@ -1,6 +1,7 @@\n package io.quarkus.devtools.codestarts;\n \n-import java.util.Comparator;\n+import io.quarkus.devtools.codestarts.core.CodestartSpec;\n+import io.quarkus.devtools.codestarts.utils.NestedMaps;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef03ea164f2e4f6af770f7024188ee3f2f0d1829"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e2b048017f84166d609454b9a73f0a5463dc91b7", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/e2b048017f84166d609454b9a73f0a5463dc91b7", "committedDate": "2020-09-15T11:24:11Z", "message": "Fix generic and fix a bug with languages processing"}, "afterCommit": {"oid": "1174327d21fd62893dd18482fbcf7eb66fedf8ba", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/1174327d21fd62893dd18482fbcf7eb66fedf8ba", "committedDate": "2020-09-15T11:51:31Z", "message": "Fix generic and fix a bug with languages processing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1174327d21fd62893dd18482fbcf7eb66fedf8ba", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/1174327d21fd62893dd18482fbcf7eb66fedf8ba", "committedDate": "2020-09-15T11:51:31Z", "message": "Fix generic and fix a bug with languages processing"}, "afterCommit": {"oid": "3bb194f17ea305d83023a291ec6b746613f783f0", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/3bb194f17ea305d83023a291ec6b746613f783f0", "committedDate": "2020-09-15T12:16:34Z", "message": "Fix generic and fix a bug with languages processing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b71fbc4490fba006b012733349bf4b54ef4952a", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/4b71fbc4490fba006b012733349bf4b54ef4952a", "committedDate": "2020-09-15T12:23:52Z", "message": "Fix generic and fix a bug with languages processing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bb194f17ea305d83023a291ec6b746613f783f0", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/3bb194f17ea305d83023a291ec6b746613f783f0", "committedDate": "2020-09-15T12:16:34Z", "message": "Fix generic and fix a bug with languages processing"}, "afterCommit": {"oid": "4b71fbc4490fba006b012733349bf4b54ef4952a", "author": {"user": {"login": "ia3andy", "name": "Andy Damevin"}}, "url": "https://github.com/quarkusio/quarkus/commit/4b71fbc4490fba006b012733349bf4b54ef4952a", "committedDate": "2020-09-15T12:23:52Z", "message": "Fix generic and fix a bug with languages processing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4Njc5MDE4", "url": "https://github.com/quarkusio/quarkus/pull/12030#pullrequestreview-488679018", "createdAt": "2020-09-15T13:25:30Z", "commit": {"oid": "4b71fbc4490fba006b012733349bf4b54ef4952a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 619, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}