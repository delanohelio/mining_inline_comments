{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3Njk1Mzky", "number": 7837, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDo0OTowMlrODn3DwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoxNToxNVrODoWbUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTIzMTM3OnYy", "diffSide": "RIGHT", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/ArcConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDo0OTowMlrOF2GifA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDo1Mzo0OFrOF2GuCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NDU1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Deprecated\n          \n          \n            \n                @Deprecated(forRemoval=true)", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392274556", "createdAt": "2020-03-13T14:49:02Z", "author": {"login": "geoand"}, "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/ArcConfig.java", "diffHunk": "@@ -54,13 +52,25 @@\n     /**\n      * If set to true, Arc will transform the bytecode of beans containing methods that need to be proxyable\n      * but have been declared as final. The transformation is simply a matter of removing final.\n-     * This ensures that a proxy can be created properly.\n+     * This ensures that a proxy/subclass can be created properly.\n      * If the value is set to false, then an exception is thrown at build time indicating\n      * that a proxy could not be created because a method was final.\n+     * \n+     * @deprecated This config property is ignored and will be removed at some point post Quarkus 1.4\n+     * @see #transformUnproxyableClasses\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd54dd64b0ccf1a52a93b8071bf3f2ddb1d34752"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NjY0MQ==", "bodyText": "Hm, forRemoval is JDK9+. Is it required to build quarkus? Our pom still targets 1.8... and I'm still using JDK8 ;-).", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392276641", "createdAt": "2020-03-13T14:52:16Z", "author": {"login": "mkouba"}, "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/ArcConfig.java", "diffHunk": "@@ -54,13 +52,25 @@\n     /**\n      * If set to true, Arc will transform the bytecode of beans containing methods that need to be proxyable\n      * but have been declared as final. The transformation is simply a matter of removing final.\n-     * This ensures that a proxy can be created properly.\n+     * This ensures that a proxy/subclass can be created properly.\n      * If the value is set to false, then an exception is thrown at build time indicating\n      * that a proxy could not be created because a method was final.\n+     * \n+     * @deprecated This config property is ignored and will be removed at some point post Quarkus 1.4\n+     * @see #transformUnproxyableClasses\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NDU1Ng=="}, "originalCommit": {"oid": "bd54dd64b0ccf1a52a93b8071bf3f2ddb1d34752"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NzUxNQ==", "bodyText": "Ah damn it... You are right! I had just switched to JDK 11 in my IDE and didn't realize that this was a JDK 8+ thing since I was so used to viewing JDK 8 sources :)", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392277515", "createdAt": "2020-03-13T14:53:48Z", "author": {"login": "geoand"}, "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/ArcConfig.java", "diffHunk": "@@ -54,13 +52,25 @@\n     /**\n      * If set to true, Arc will transform the bytecode of beans containing methods that need to be proxyable\n      * but have been declared as final. The transformation is simply a matter of removing final.\n-     * This ensures that a proxy can be created properly.\n+     * This ensures that a proxy/subclass can be created properly.\n      * If the value is set to false, then an exception is thrown at build time indicating\n      * that a proxy could not be created because a method was final.\n+     * \n+     * @deprecated This config property is ignored and will be removed at some point post Quarkus 1.4\n+     * @see #transformUnproxyableClasses\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3NDU1Ng=="}, "originalCommit": {"oid": "bd54dd64b0ccf1a52a93b8071bf3f2ddb1d34752"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTI1OTg2OnYy", "diffSide": "RIGHT", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDo1NjozOFrOF2G1Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDo1NjozOFrOF2G1Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI3OTMzNQ==", "bodyText": "I think this comment needs to be augmented, right? Since the transformation isn't only about removing final anymore", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392279335", "createdAt": "2020-03-13T14:56:38Z", "author": {"login": "geoand"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "diffHunk": "@@ -403,8 +413,26 @@ public Builder addRemovalExclusion(Predicate<BeanInfo> exclusion) {\n             return this;\n         }\n \n+        /**\n+         * \n+         * @param removeFinalForProxyableMethods\n+         * @return self\n+         * @deprecated This method will be removed at some point post Quarkus 1.4\n+         */\n+        @Deprecated\n         public Builder setRemoveFinalFromProxyableMethods(boolean removeFinalForProxyableMethods) {\n-            this.removeFinalForProxyableMethods = removeFinalForProxyableMethods;\n+            return this;\n+        }\n+\n+        /**\n+         * If set to true the container will attempt to remove the final flag from a bean class that must be proxyable during", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd54dd64b0ccf1a52a93b8071bf3f2ddb1d34752"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTI3ODU0OnYy", "diffSide": "RIGHT", "path": "extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unproxyable/PrivateNoArgsConstructorDoNotChangeFlagTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNTowMTozNVrOF2HBMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNToxNToxN1rOF2Hjew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MjQxNw==", "bodyText": "These tests are great! I think that having a extra test where the bean extends some class that doesn't have a no-args constructor would be beneficial - to ensure that a build error is encountered. I don't think I saw such a test.", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392282417", "createdAt": "2020-03-13T15:01:35Z", "author": {"login": "geoand"}, "path": "extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unproxyable/PrivateNoArgsConstructorDoNotChangeFlagTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package io.quarkus.arc.test.unproxyable;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.spi.DeploymentException;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.arc.Unremovable;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class PrivateNoArgsConstructorDoNotChangeFlagTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd54dd64b0ccf1a52a93b8071bf3f2ddb1d34752"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MzkwNA==", "bodyText": "There is/was FailedToAddMissingNoargsConstructorTest... is that what you mean?", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392283904", "createdAt": "2020-03-13T15:03:55Z", "author": {"login": "mkouba"}, "path": "extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unproxyable/PrivateNoArgsConstructorDoNotChangeFlagTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package io.quarkus.arc.test.unproxyable;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.spi.DeploymentException;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.arc.Unremovable;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class PrivateNoArgsConstructorDoNotChangeFlagTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MjQxNw=="}, "originalCommit": {"oid": "bd54dd64b0ccf1a52a93b8071bf3f2ddb1d34752"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI5MTE5NQ==", "bodyText": "Oh yes! That is exactly what I meant. I missed that one", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r392291195", "createdAt": "2020-03-13T15:15:17Z", "author": {"login": "geoand"}, "path": "extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unproxyable/PrivateNoArgsConstructorDoNotChangeFlagTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package io.quarkus.arc.test.unproxyable;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.inject.spi.DeploymentException;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.arc.Unremovable;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class PrivateNoArgsConstructorDoNotChangeFlagTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI4MjQxNw=="}, "originalCommit": {"oid": "bd54dd64b0ccf1a52a93b8071bf3f2ddb1d34752"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjI5MzgzOnYy", "diffSide": "LEFT", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/ArcConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMzo1Nzo1MlrOF21S9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNToxNzo0NVrOF25CZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0MDYyOQ==", "bodyText": "Minor - aren't you going to miss the closing tag here? Line 28 still has <p>...", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393040629", "createdAt": "2020-03-16T13:57:52Z", "author": {"login": "manovotn"}, "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/ArcConfig.java", "diffHunk": "@@ -37,7 +36,6 @@\n      * <li>does not declare any producer which is eligible for injection to any injection point,</li>\n      * <li>is not directly eligible for injection into any {@link javax.enterprise.inject.Instance} injection point</li>\n      * </ul>\n-     * </p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9ea47d4779796308beb649e179124da9e9ef2bd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA3NzYyMg==", "bodyText": "That's ok in javadoc....", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393077622", "createdAt": "2020-03-16T14:43:34Z", "author": {"login": "mkouba"}, "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/ArcConfig.java", "diffHunk": "@@ -37,7 +36,6 @@\n      * <li>does not declare any producer which is eligible for injection to any injection point,</li>\n      * <li>is not directly eligible for injection into any {@link javax.enterprise.inject.Instance} injection point</li>\n      * </ul>\n-     * </p>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0MDYyOQ=="}, "originalCommit": {"oid": "d9ea47d4779796308beb649e179124da9e9ef2bd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwMTkyNA==", "bodyText": "I know, just noted it here since I caught a glimpse of it. Doesn't really matter :)", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393101924", "createdAt": "2020-03-16T15:17:45Z", "author": {"login": "manovotn"}, "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/ArcConfig.java", "diffHunk": "@@ -37,7 +36,6 @@\n      * <li>does not declare any producer which is eligible for injection to any injection point,</li>\n      * <li>is not directly eligible for injection into any {@link javax.enterprise.inject.Instance} injection point</li>\n      * </ul>\n-     * </p>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0MDYyOQ=="}, "originalCommit": {"oid": "d9ea47d4779796308beb649e179124da9e9ef2bd"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjMyNjk4OnYy", "diffSide": "RIGHT", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanDeploymentValidator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDowNTo0NVrOF21n_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNToxNTo1NFrOF249cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0NjAxNA==", "bodyText": "Do we have a substitute for this now or do we just drop it?", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393046014", "createdAt": "2020-03-16T14:05:45Z", "author": {"login": "manovotn"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanDeploymentValidator.java", "diffHunk": "@@ -23,11 +23,14 @@ default void validate(ValidationContext context) {\n     }\n \n     /**\n+     * This method is deprecated and is not used internally.\n      * \n      * @param target\n      * @param rule\n      * @return {@code true} if the given validation rule should be skipped for the specified target\n+     * @deprecated This method will be removed at some point post Quarkus 1.4\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9ea47d4779796308beb649e179124da9e9ef2bd"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA3ODEwMA==", "bodyText": "I think that we should just drop it.", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393078100", "createdAt": "2020-03-16T14:44:15Z", "author": {"login": "mkouba"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanDeploymentValidator.java", "diffHunk": "@@ -23,11 +23,14 @@ default void validate(ValidationContext context) {\n     }\n \n     /**\n+     * This method is deprecated and is not used internally.\n      * \n      * @param target\n      * @param rule\n      * @return {@code true} if the given validation rule should be skipped for the specified target\n+     * @deprecated This method will be removed at some point post Quarkus 1.4\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0NjAxNA=="}, "originalCommit": {"oid": "d9ea47d4779796308beb649e179124da9e9ef2bd"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwMDY1OA==", "bodyText": "Probably yes, I was just wondering since the deprecation doesn't mention it.", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393100658", "createdAt": "2020-03-16T15:15:54Z", "author": {"login": "manovotn"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanDeploymentValidator.java", "diffHunk": "@@ -23,11 +23,14 @@ default void validate(ValidationContext context) {\n     }\n \n     /**\n+     * This method is deprecated and is not used internally.\n      * \n      * @param target\n      * @param rule\n      * @return {@code true} if the given validation rule should be skipped for the specified target\n+     * @deprecated This method will be removed at some point post Quarkus 1.4\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA0NjAxNA=="}, "originalCommit": {"oid": "d9ea47d4779796308beb649e179124da9e9ef2bd"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjM1OTY1OnYy", "diffSide": "RIGHT", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoxMzozMVrOF218nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNToxNzoxNFrOF25BIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MTI5Mg==", "bodyText": "Why unsupported as opposed to just no-op? Also a comment would be nice to know that this is only for test container and is not going to be actually invoked.", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393051292", "createdAt": "2020-03-16T14:13:31Z", "author": {"login": "manovotn"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "diffHunk": "@@ -223,16 +232,17 @@ public BeanDeployment getBeanDeployment() {\n     }\n \n     public BeanDeployment process() throws IOException {\n-        registerCustomContexts();\n-        registerBeans();\n-        registerSyntheticObservers();\n-        initialize(new Consumer<BytecodeTransformer>() {\n+        Consumer<BytecodeTransformer> unsupportedBytecodeTransformer = new Consumer<BytecodeTransformer>() {\n             @Override\n             public void accept(BytecodeTransformer transformer) {\n-\n+                throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9ea47d4779796308beb649e179124da9e9ef2bd"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4MDQ0Mg==", "bodyText": "\"no-op\" would just cause a problem later... In theory, it can be used for non-test scenarios as well. From my POV it's just illegal state if transformUnproxyableClasses=true and no valid Consumer<BytecodeTransformer> is provided.", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393080442", "createdAt": "2020-03-16T14:47:31Z", "author": {"login": "mkouba"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "diffHunk": "@@ -223,16 +232,17 @@ public BeanDeployment getBeanDeployment() {\n     }\n \n     public BeanDeployment process() throws IOException {\n-        registerCustomContexts();\n-        registerBeans();\n-        registerSyntheticObservers();\n-        initialize(new Consumer<BytecodeTransformer>() {\n+        Consumer<BytecodeTransformer> unsupportedBytecodeTransformer = new Consumer<BytecodeTransformer>() {\n             @Override\n             public void accept(BytecodeTransformer transformer) {\n-\n+                throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MTI5Mg=="}, "originalCommit": {"oid": "d9ea47d4779796308beb649e179124da9e9ef2bd"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwMTYwMg==", "bodyText": "it's just illegal state if transformUnproxyableClasses=true and no valid Consumer is provided.\n\nFair enough, that makes sense.", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393101602", "createdAt": "2020-03-16T15:17:14Z", "author": {"login": "manovotn"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "diffHunk": "@@ -223,16 +232,17 @@ public BeanDeployment getBeanDeployment() {\n     }\n \n     public BeanDeployment process() throws IOException {\n-        registerCustomContexts();\n-        registerBeans();\n-        registerSyntheticObservers();\n-        initialize(new Consumer<BytecodeTransformer>() {\n+        Consumer<BytecodeTransformer> unsupportedBytecodeTransformer = new Consumer<BytecodeTransformer>() {\n             @Override\n             public void accept(BytecodeTransformer transformer) {\n-\n+                throw new UnsupportedOperationException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MTI5Mg=="}, "originalCommit": {"oid": "d9ea47d4779796308beb649e179124da9e9ef2bd"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjM3MDczOnYy", "diffSide": "RIGHT", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoxNToxNVrOF22D4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNToxNToyMFrOF2473Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MzE1NQ==", "bodyText": "Add @see setRemoveFinalFromProxyableMethods(boolean)`.", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393053155", "createdAt": "2020-03-16T14:15:15Z", "author": {"login": "manovotn"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "diffHunk": "@@ -403,8 +413,25 @@ public Builder addRemovalExclusion(Predicate<BeanInfo> exclusion) {\n             return this;\n         }\n \n+        /**\n+         * \n+         * @param removeFinalForProxyableMethods\n+         * @return self\n+         * @deprecated This method will be removed at some point post Quarkus 1.4\n+         */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9ea47d4779796308beb649e179124da9e9ef2bd"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4MTQ2MQ==", "bodyText": "Did you mean @see #setTransformUnproxyableClasses()?", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393081461", "createdAt": "2020-03-16T14:48:58Z", "author": {"login": "mkouba"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "diffHunk": "@@ -403,8 +413,25 @@ public Builder addRemovalExclusion(Predicate<BeanInfo> exclusion) {\n             return this;\n         }\n \n+        /**\n+         * \n+         * @param removeFinalForProxyableMethods\n+         * @return self\n+         * @deprecated This method will be removed at some point post Quarkus 1.4\n+         */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MzE1NQ=="}, "originalCommit": {"oid": "d9ea47d4779796308beb649e179124da9e9ef2bd"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzEwMDI1Mw==", "bodyText": "Yea, that's what I meant :-D", "url": "https://github.com/quarkusio/quarkus/pull/7837#discussion_r393100253", "createdAt": "2020-03-16T15:15:20Z", "author": {"login": "manovotn"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanProcessor.java", "diffHunk": "@@ -403,8 +413,25 @@ public Builder addRemovalExclusion(Predicate<BeanInfo> exclusion) {\n             return this;\n         }\n \n+        /**\n+         * \n+         * @param removeFinalForProxyableMethods\n+         * @return self\n+         * @deprecated This method will be removed at some point post Quarkus 1.4\n+         */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MzE1NQ=="}, "originalCommit": {"oid": "d9ea47d4779796308beb649e179124da9e9ef2bd"}, "originalPosition": 109}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4857, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}