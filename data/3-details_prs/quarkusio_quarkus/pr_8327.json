{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2OTEzNDg2", "number": 8327, "title": "Add support for @InjectMock", "bodyText": "This PR builds on #8175 and allows users to easily\ncombine Mockito with Quarkus mocks without having\nto use anything more than the @MockBean annotation", "createdAt": "2020-04-01T10:45:18Z", "url": "https://github.com/quarkusio/quarkus/pull/8327", "merged": true, "mergeCommit": {"oid": "b1dcac84270ff65ef80136e1d55e82ecb5692d36"}, "closed": true, "closedAt": "2020-04-02T15:00:37Z", "author": {"login": "geoand"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTY92HgFqTM4NTYzODI3MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTsICrgBqjMxOTIxNDU4NjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1NjM4Mjcx", "url": "https://github.com/quarkusio/quarkus/pull/8327#pullrequestreview-385638271", "createdAt": "2020-04-01T14:26:11Z", "commit": {"oid": "fa3f510a221c4301fac90bd6bd302de4238af9f9"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDoyNjoxMlrOF_DNTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo1NTo0NFrOF_El9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY1NzE2NQ==", "bodyText": "If you store the InstanceHandle you can use it later to destroy a @Dependent bean correctly. See io.quarkus.arc.InstanceHandle.close().", "url": "https://github.com/quarkusio/quarkus/pull/8327#discussion_r401657165", "createdAt": "2020-04-01T14:26:12Z", "author": {"login": "mkouba"}, "path": "test-framework/junit5-mockito/src/main/java/io/quarkus/test/junit/mockito/internal/CreateMockitoMocksCallback.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package io.quarkus.test.junit.mockito.internal;\n+\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.inject.Qualifier;\n+\n+import org.mockito.Mockito;\n+\n+import io.quarkus.arc.Arc;\n+import io.quarkus.arc.InstanceHandle;\n+import io.quarkus.test.junit.callback.QuarkusTestBeforeAllCallback;\n+import io.quarkus.test.junit.mockito.MockBean;\n+\n+public class CreateMockitoMocksCallback implements QuarkusTestBeforeAllCallback {\n+\n+    @Override\n+    public void beforeAll(Object testInstance) {\n+        Class<?> current = testInstance.getClass();\n+        while (current.getSuperclass() != null) {\n+            for (Field field : current.getDeclaredFields()) {\n+                MockBean mockBeanAnnotation = field.getAnnotation(MockBean.class);\n+                if (mockBeanAnnotation != null) {\n+                    Object beanInstance = getBeanInstance(testInstance, field);\n+                    Object mock = createMockAndSetTestField(testInstance, field, beanInstance);\n+                    MockitoMocksTracker.track(testInstance, mock, beanInstance);\n+                }\n+            }\n+            current = current.getSuperclass();\n+        }\n+    }\n+\n+    private Object createMockAndSetTestField(Object testInstance, Field field, Object beanInstance) {\n+        Object mock = Mockito.mock(beanInstance.getClass());\n+        field.setAccessible(true);\n+        try {\n+            field.set(testInstance, mock);\n+        } catch (IllegalAccessException e) {\n+            throw new RuntimeException(e);\n+        }\n+        return mock;\n+    }\n+\n+    private Object getBeanInstance(Object testInstance, Field field) {\n+        Class<?> fieldClass = field.getType();\n+        InstanceHandle<?> instance = Arc.container().instance(fieldClass, getQualifiers(field));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa3f510a221c4301fac90bd6bd302de4238af9f9"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2NTE2NA==", "bodyText": "Since these are not CDI injection points it could happen that ArC will consider the resolved beans removable. Maybe we should handle this use case and mark them unremovable?", "url": "https://github.com/quarkusio/quarkus/pull/8327#discussion_r401665164", "createdAt": "2020-04-01T14:36:26Z", "author": {"login": "mkouba"}, "path": "integration-tests/mockbean/src/test/java/io/quarkus/it/mockbean/GreetingResourceTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.quarkus.it.mockbean;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.Matchers.is;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.quarkus.test.junit.mockito.MockBean;\n+\n+@QuarkusTest\n+class GreetingResourceTest {\n+\n+    @MockBean\n+    MessageService messageService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa3f510a221c4301fac90bd6bd302de4238af9f9"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDE5NA==", "bodyText": "So I wonder if we could just get rid of the injection part and provide an API like this:\n@Test\npublic void testGreet() {\n   Mockito.when(MockBean.of(MessageService.class).getMessage()).thenReturn(\"hi\");\n   ...\n}\n... where MockBean.of() would basically do QuarkusMock.installMockForType(Mockito.mock(MessageService.class), MessageService.class) and return the mock instance (and possibly cache the instance or something like that).", "url": "https://github.com/quarkusio/quarkus/pull/8327#discussion_r401674194", "createdAt": "2020-04-01T14:48:23Z", "author": {"login": "mkouba"}, "path": "integration-tests/mockbean/src/test/java/io/quarkus/it/mockbean/GreetingResourceTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.quarkus.it.mockbean;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.Matchers.is;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.quarkus.test.junit.mockito.MockBean;\n+\n+@QuarkusTest\n+class GreetingResourceTest {\n+\n+    @MockBean\n+    MessageService messageService;\n+\n+    @MockBean\n+    SuffixService suffixService;\n+\n+    @Test\n+    public void testGreet() {\n+        Mockito.when(messageService.getMessage()).thenReturn(\"hi\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fa3f510a221c4301fac90bd6bd302de4238af9f9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3OTg2MQ==", "bodyText": "Hm, maybe it's not a good idea. The injection points can be reused and allow us to mark the beans unremovable. Another idea - if we do @Inject @MockBean the client proxies will be injected first and we could wrap it afterwards. @MockBean is ignored by ArC but allows CreateMockitoMocksCallback to wrap the stuff. The advantage of this approach would be (1) no need to mark the beans unremovable, (2) no need to hold the instance handles and destroy them correctly.", "url": "https://github.com/quarkusio/quarkus/pull/8327#discussion_r401679861", "createdAt": "2020-04-01T14:55:44Z", "author": {"login": "mkouba"}, "path": "integration-tests/mockbean/src/test/java/io/quarkus/it/mockbean/GreetingResourceTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.quarkus.it.mockbean;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.Matchers.is;\n+\n+import org.junit.jupiter.api.Test;\n+import org.mockito.Mockito;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.quarkus.test.junit.mockito.MockBean;\n+\n+@QuarkusTest\n+class GreetingResourceTest {\n+\n+    @MockBean\n+    MessageService messageService;\n+\n+    @MockBean\n+    SuffixService suffixService;\n+\n+    @Test\n+    public void testGreet() {\n+        Mockito.when(messageService.getMessage()).thenReturn(\"hi\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDE5NA=="}, "originalCommit": {"oid": "fa3f510a221c4301fac90bd6bd302de4238af9f9"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1OTcxNzQ4", "url": "https://github.com/quarkusio/quarkus/pull/8327#pullrequestreview-385971748", "createdAt": "2020-04-01T21:44:56Z", "commit": {"oid": "fa3f510a221c4301fac90bd6bd302de4238af9f9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa3f510a221c4301fac90bd6bd302de4238af9f9", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/fa3f510a221c4301fac90bd6bd302de4238af9f9", "committedDate": "2020-04-01T10:43:57Z", "message": "Add support for @MockBean\n\nThis allows users to easily combine Mockito with\nQuarkus mocks without having to use anything\nmore than the @MockBean annotation"}, "afterCommit": {"oid": "aee3aa72899766681b0e1e2d3e1b46f02fd7ce14", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/aee3aa72899766681b0e1e2d3e1b46f02fd7ce14", "committedDate": "2020-04-02T10:28:25Z", "message": "Add support for @MockBean\n\nThis allows users to easily combine Mockito with\nQuarkus mocks without having to use anything\nmore than the @MockBean annotation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Mzg2MTY1", "url": "https://github.com/quarkusio/quarkus/pull/8327#pullrequestreview-386386165", "createdAt": "2020-04-02T12:42:14Z", "commit": {"oid": "aee3aa72899766681b0e1e2d3e1b46f02fd7ce14"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aee3aa72899766681b0e1e2d3e1b46f02fd7ce14", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/aee3aa72899766681b0e1e2d3e1b46f02fd7ce14", "committedDate": "2020-04-02T10:28:25Z", "message": "Add support for @MockBean\n\nThis allows users to easily combine Mockito with\nQuarkus mocks without having to use anything\nmore than the @MockBean annotation"}, "afterCommit": {"oid": "6b92320db3c9a50cac32c3871099b4db63b8855b", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/6b92320db3c9a50cac32c3871099b4db63b8855b", "committedDate": "2020-04-02T12:48:46Z", "message": "Add support for @InjectMock\n\nThis allows users to easily combine Mockito with\nQuarkus mocks without having to use anything\nmore than the @InjectMock annotation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NDExMjIy", "url": "https://github.com/quarkusio/quarkus/pull/8327#pullrequestreview-386411222", "createdAt": "2020-04-02T13:13:28Z", "commit": {"oid": "6b92320db3c9a50cac32c3871099b4db63b8855b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96db1d725d689f441bcf674741ae974a3cf2c90b", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/96db1d725d689f441bcf674741ae974a3cf2c90b", "committedDate": "2020-04-02T13:15:08Z", "message": "Add support for @InjectMock\n\nThis allows users to easily combine Mockito with\nQuarkus mocks without having to use anything\nmore than the @InjectMock annotation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b92320db3c9a50cac32c3871099b4db63b8855b", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/6b92320db3c9a50cac32c3871099b4db63b8855b", "committedDate": "2020-04-02T12:48:46Z", "message": "Add support for @InjectMock\n\nThis allows users to easily combine Mockito with\nQuarkus mocks without having to use anything\nmore than the @InjectMock annotation"}, "afterCommit": {"oid": "96db1d725d689f441bcf674741ae974a3cf2c90b", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/96db1d725d689f441bcf674741ae974a3cf2c90b", "committedDate": "2020-04-02T13:15:08Z", "message": "Add support for @InjectMock\n\nThis allows users to easily combine Mockito with\nQuarkus mocks without having to use anything\nmore than the @InjectMock annotation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4673, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}