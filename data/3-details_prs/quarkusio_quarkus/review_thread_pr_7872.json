{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg4ODYxMDIw", "number": 7872, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjo1Njo1NFrODoUkdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjo1Njo1NFrODoUkdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjA2NjQ1OnYy", "diffSide": "RIGHT", "path": "integration-tests/main/src/test/java/io/quarkus/it/main/MockitoTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMjo1Njo1NFrOF2zCig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxMzowNzo1MFrOF2zZKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwMzY1OA==", "bodyText": "How about using AssertJ like this?\nassertThatCode(() -> mock(HttpServletRequest.class)).doesNotThrowAnyException();", "url": "https://github.com/quarkusio/quarkus/pull/7872#discussion_r393003658", "createdAt": "2020-03-16T12:56:54Z", "author": {"login": "gastaldi"}, "path": "integration-tests/main/src/test/java/io/quarkus/it/main/MockitoTest.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.it.main;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.mock;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+\n+@QuarkusTest\n+public class MockitoTest {\n+\n+    @Test\n+    public void testMockHttpServletRequest() {\n+        HttpServletRequest request = mock(HttpServletRequest.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5fb8a75472cf3b2c971df9762adbd6a8112ca675"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwNTQ3Mw==", "bodyText": "Thought about it, but adding AssertJ just for this didn't seem to warrant it.\nBut I guess I should do it since AssertJ would provide a much better error message if mockito does start failing...", "url": "https://github.com/quarkusio/quarkus/pull/7872#discussion_r393005473", "createdAt": "2020-03-16T13:00:20Z", "author": {"login": "geoand"}, "path": "integration-tests/main/src/test/java/io/quarkus/it/main/MockitoTest.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.it.main;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.mock;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+\n+@QuarkusTest\n+public class MockitoTest {\n+\n+    @Test\n+    public void testMockHttpServletRequest() {\n+        HttpServletRequest request = mock(HttpServletRequest.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwMzY1OA=="}, "originalCommit": {"oid": "5fb8a75472cf3b2c971df9762adbd6a8112ca675"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwOTQ1MQ==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/7872#discussion_r393009451", "createdAt": "2020-03-16T13:07:50Z", "author": {"login": "geoand"}, "path": "integration-tests/main/src/test/java/io/quarkus/it/main/MockitoTest.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package io.quarkus.it.main;\n+\n+import static org.junit.jupiter.api.Assertions.*;\n+import static org.mockito.Mockito.mock;\n+\n+import javax.servlet.http.HttpServletRequest;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.junit.QuarkusTest;\n+\n+@QuarkusTest\n+public class MockitoTest {\n+\n+    @Test\n+    public void testMockHttpServletRequest() {\n+        HttpServletRequest request = mock(HttpServletRequest.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzAwMzY1OA=="}, "originalCommit": {"oid": "5fb8a75472cf3b2c971df9762adbd6a8112ca675"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4666, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}