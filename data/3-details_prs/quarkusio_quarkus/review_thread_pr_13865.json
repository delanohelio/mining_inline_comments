{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MTc2MDA0", "number": 13865, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo0OTo1N1rOFE66_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo1MjozNlrOFE6_4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzAzOTk3OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo0OTo1N1rOIFKriw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo1MToyMVrOIFKvQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI4ODc3OQ==", "bodyText": "Hi Stuart @stuartwdouglas , this is probably it, should be urlNoTls here", "url": "https://github.com/quarkusio/quarkus/pull/13865#discussion_r542288779", "createdAt": "2020-12-14T10:49:57Z", "author": {"login": "sberyozkin"}, "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package io.quarkus.vertx.http.security;\n+\n+import static org.hamcrest.Matchers.is;\n+\n+import java.io.File;\n+import java.net.URL;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.security.test.utils.TestIdentityController;\n+import io.quarkus.security.test.utils.TestIdentityProvider;\n+import io.quarkus.test.QuarkusUnitTest;\n+import io.quarkus.test.common.http.TestHTTPResource;\n+import io.quarkus.vertx.http.runtime.security.QuarkusHttpUser;\n+import io.restassured.RestAssured;\n+import io.vertx.ext.web.Router;\n+\n+public class MtlsRequestBasicAuthTest {\n+\n+    @TestHTTPResource(value = \"/mtls\", ssl = true)\n+    URL url;\n+\n+    @TestHTTPResource(value = \"/mtls\", ssl = false)\n+    URL urlNoTls;\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest config = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(MyBean.class)\n+                    .addClasses(TestIdentityProvider.class, TestTrustedIdentityProvider.class, TestIdentityController.class)\n+                    .addAsResource(\"conf/mtls/mtls-basic-jks.conf\", \"application.properties\")\n+                    .addAsResource(\"conf/mtls/server-keystore.jks\", \"server-keystore.jks\")\n+                    .addAsResource(\"conf/mtls/server-truststore.jks\", \"server-truststore.jks\"));\n+\n+    @BeforeAll\n+    public static void setup() {\n+        TestIdentityController.resetRoles()\n+                .add(\"admin\", \"admin\", \"admin\");\n+    }\n+\n+    @Test\n+    public void testClientAuthentication() {\n+        RestAssured.given()\n+                .keyStore(new File(\"src/test/resources/conf/mtls/client-keystore.jks\"), \"password\")\n+                .trustStore(new File(\"src/test/resources/conf/mtls/client-truststore.jks\"), \"password\")\n+                .get(url).then().statusCode(200).body(is(\"CN=client,OU=cert,O=quarkus,L=city,ST=state,C=AU\"));\n+    }\n+\n+    @Test\n+    public void testNoClientCert() {\n+        RestAssured.given()\n+                .trustStore(new File(\"src/test/resources/conf/mtls/client-truststore.jks\"), \"password\")\n+                .get(url).then().statusCode(200).body(is(\"\"));\n+    }\n+\n+    @Test\n+    public void testNoClientCertBasicAuth() {\n+        RestAssured.given()\n+                .auth()\n+                .preemptive()\n+                .basic(\"admin\", \"admin\")\n+                .trustStore(new File(\"src/test/resources/conf/mtls/client-truststore.jks\"), \"password\")\n+                .get(url).then().statusCode(200).body(is(\"admin\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa62b9c2dc91e2a19fd0410642e862990fb6e972"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI4OTczMQ==", "bodyText": "Ignore it, sorry :-)", "url": "https://github.com/quarkusio/quarkus/pull/13865#discussion_r542289731", "createdAt": "2020-12-14T10:51:21Z", "author": {"login": "sberyozkin"}, "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package io.quarkus.vertx.http.security;\n+\n+import static org.hamcrest.Matchers.is;\n+\n+import java.io.File;\n+import java.net.URL;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.security.test.utils.TestIdentityController;\n+import io.quarkus.security.test.utils.TestIdentityProvider;\n+import io.quarkus.test.QuarkusUnitTest;\n+import io.quarkus.test.common.http.TestHTTPResource;\n+import io.quarkus.vertx.http.runtime.security.QuarkusHttpUser;\n+import io.restassured.RestAssured;\n+import io.vertx.ext.web.Router;\n+\n+public class MtlsRequestBasicAuthTest {\n+\n+    @TestHTTPResource(value = \"/mtls\", ssl = true)\n+    URL url;\n+\n+    @TestHTTPResource(value = \"/mtls\", ssl = false)\n+    URL urlNoTls;\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest config = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(MyBean.class)\n+                    .addClasses(TestIdentityProvider.class, TestTrustedIdentityProvider.class, TestIdentityController.class)\n+                    .addAsResource(\"conf/mtls/mtls-basic-jks.conf\", \"application.properties\")\n+                    .addAsResource(\"conf/mtls/server-keystore.jks\", \"server-keystore.jks\")\n+                    .addAsResource(\"conf/mtls/server-truststore.jks\", \"server-truststore.jks\"));\n+\n+    @BeforeAll\n+    public static void setup() {\n+        TestIdentityController.resetRoles()\n+                .add(\"admin\", \"admin\", \"admin\");\n+    }\n+\n+    @Test\n+    public void testClientAuthentication() {\n+        RestAssured.given()\n+                .keyStore(new File(\"src/test/resources/conf/mtls/client-keystore.jks\"), \"password\")\n+                .trustStore(new File(\"src/test/resources/conf/mtls/client-truststore.jks\"), \"password\")\n+                .get(url).then().statusCode(200).body(is(\"CN=client,OU=cert,O=quarkus,L=city,ST=state,C=AU\"));\n+    }\n+\n+    @Test\n+    public void testNoClientCert() {\n+        RestAssured.given()\n+                .trustStore(new File(\"src/test/resources/conf/mtls/client-truststore.jks\"), \"password\")\n+                .get(url).then().statusCode(200).body(is(\"\"));\n+    }\n+\n+    @Test\n+    public void testNoClientCertBasicAuth() {\n+        RestAssured.given()\n+                .auth()\n+                .preemptive()\n+                .basic(\"admin\", \"admin\")\n+                .trustStore(new File(\"src/test/resources/conf/mtls/client-truststore.jks\"), \"password\")\n+                .get(url).then().statusCode(200).body(is(\"admin\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI4ODc3OQ=="}, "originalCommit": {"oid": "aa62b9c2dc91e2a19fd0410642e862990fb6e972"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNzA1MjQ5OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo1MjozNlrOIFKypQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMDo1MjozNlrOIFKypQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI5MDU5Nw==", "bodyText": "Did you plan to use this property as well ?", "url": "https://github.com/quarkusio/quarkus/pull/13865#discussion_r542290597", "createdAt": "2020-12-14T10:52:36Z", "author": {"login": "sberyozkin"}, "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/security/MtlsRequestBasicAuthTest.java", "diffHunk": "@@ -0,0 +1,83 @@\n+package io.quarkus.vertx.http.security;\n+\n+import static org.hamcrest.Matchers.is;\n+\n+import java.io.File;\n+import java.net.URL;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.event.Observes;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.security.test.utils.TestIdentityController;\n+import io.quarkus.security.test.utils.TestIdentityProvider;\n+import io.quarkus.test.QuarkusUnitTest;\n+import io.quarkus.test.common.http.TestHTTPResource;\n+import io.quarkus.vertx.http.runtime.security.QuarkusHttpUser;\n+import io.restassured.RestAssured;\n+import io.vertx.ext.web.Router;\n+\n+public class MtlsRequestBasicAuthTest {\n+\n+    @TestHTTPResource(value = \"/mtls\", ssl = true)\n+    URL url;\n+\n+    @TestHTTPResource(value = \"/mtls\", ssl = false)\n+    URL urlNoTls;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa62b9c2dc91e2a19fd0410642e862990fb6e972"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4528, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}