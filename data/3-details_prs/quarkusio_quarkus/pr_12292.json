{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNzUwMzcw", "number": 12292, "title": "Support OIDC cookie domain property", "bodyText": "Fixes #12281\nAlso updates the docs (copied some of them from the code authentication listener PR)", "createdAt": "2020-09-23T12:38:05Z", "url": "https://github.com/quarkusio/quarkus/pull/12292", "merged": true, "mergeCommit": {"oid": "87c7dbcb4b8c2a57b28665f334637aab6fc8be58"}, "closed": true, "closedAt": "2020-09-24T15:56:12Z", "author": {"login": "sberyozkin"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLr7x-gBqjM3OTc5MDQ3NTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMA42GgFqTQ5NTU0ODg4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a6425c8929c36b972eed33bf24619f35b21a90f1", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/a6425c8929c36b972eed33bf24619f35b21a90f1", "committedDate": "2020-09-23T12:34:29Z", "message": "Support OIDC cookie domain property"}, "afterCommit": {"oid": "634c9610288ae89170dea0fd6c32c74665ebbadb", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/634c9610288ae89170dea0fd6c32c74665ebbadb", "committedDate": "2020-09-23T12:41:24Z", "message": "Support OIDC cookie domain property"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "634c9610288ae89170dea0fd6c32c74665ebbadb", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/634c9610288ae89170dea0fd6c32c74665ebbadb", "committedDate": "2020-09-23T12:41:24Z", "message": "Support OIDC cookie domain property"}, "afterCommit": {"oid": "6f11ab7e43efe7edeab98209997204d4c26dad15", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/6f11ab7e43efe7edeab98209997204d4c26dad15", "committedDate": "2020-09-23T12:58:35Z", "message": "Support OIDC cookie domain property"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0Njg3NTY0", "url": "https://github.com/quarkusio/quarkus/pull/12292#pullrequestreview-494687564", "createdAt": "2020-09-23T13:55:47Z", "commit": {"oid": "6f11ab7e43efe7edeab98209997204d4c26dad15"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzo1NTo0N1rOHWvvrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDowMDoyMFrOHWv_EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYxMjk3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            OIDC adapter uses cookies to keep the session, code flow and post logout state.\n          \n          \n            \n            The OIDC adapter uses cookies to keep the session, code flow and post logout state.", "url": "https://github.com/quarkusio/quarkus/pull/12292#discussion_r493612972", "createdAt": "2020-09-23T13:55:47Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/security-openid-connect-web-authentication.adoc", "diffHunk": "@@ -191,6 +191,17 @@ In such cases a `quarkus.oidc.authentication.redirect-path` property has to be s\n \n If `quarkus.oidc.authentication.redirect-path` is set but the original request URL has to be restored after the user has been redirected back to a callback URL such as `http://localhost:8080/service/callback` then a `quarkus.oidc.authentication.restore-path-after-redirect` property has to be set to `true` which will restore the request URL such as `http://localhost:8080/service/1`, etc.\n \n+[[oidc-cookies]]\n+== Dealing with Cookies\n+\n+OIDC adapter uses cookies to keep the session, code flow and post logout state.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f11ab7e43efe7edeab98209997204d4c26dad15"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYxNDc2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you access the protected resources with the overlapping or different roots, for example, `/index.html` and `/web-app/service` or `/web-app/service1` and `/web-app/service2` or `/web-app1/service` and `/web-app2/service` then most likely you also need to set a `quarkus.oidc.authentication.cookie-path` property to a path value common to all of the application resources, such as `/` or `/web-app`, etc.\n          \n          \n            \n            If you access the protected resources with overlapping or different roots, for example: \n          \n          \n            \n            \n          \n          \n            \n            * `/index.html` and `/web-app/service`\n          \n          \n            \n            * `/web-app/service1` and `/web-app/service2`\n          \n          \n            \n            * `/web-app1/service` and `/web-app2/service` \n          \n          \n            \n            \n          \n          \n            \n            then most likely you also need to set a `quarkus.oidc.authentication.cookie-path` property to a path value that is common to all of them, such as `/` or `/web-app`, etc.", "url": "https://github.com/quarkusio/quarkus/pull/12292#discussion_r493614769", "createdAt": "2020-09-23T13:57:54Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/security-openid-connect-web-authentication.adoc", "diffHunk": "@@ -191,6 +191,17 @@ In such cases a `quarkus.oidc.authentication.redirect-path` property has to be s\n \n If `quarkus.oidc.authentication.redirect-path` is set but the original request URL has to be restored after the user has been redirected back to a callback URL such as `http://localhost:8080/service/callback` then a `quarkus.oidc.authentication.restore-path-after-redirect` property has to be set to `true` which will restore the request URL such as `http://localhost:8080/service/1`, etc.\n \n+[[oidc-cookies]]\n+== Dealing with Cookies\n+\n+OIDC adapter uses cookies to keep the session, code flow and post logout state.\n+\n+If you access the protected resources with the overlapping or different roots, for example, `/index.html` and `/web-app/service` or `/web-app/service1` and `/web-app/service2` or `/web-app1/service` and `/web-app2/service` then most likely you also need to set a `quarkus.oidc.authentication.cookie-path` property to a path value common to all of the application resources, such as `/` or `/web-app`, etc.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f11ab7e43efe7edeab98209997204d4c26dad15"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYxNjkxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If your application is deployed across multiple domains then you may also need to set a `quarkus.oidc.authentication.cookie-domain` property.\n          \n          \n            \n            \n          \n          \n            \n            Otherwise the browser cache manager may keep request path specific cookies which in turn may lead to some difficult to diagnoze errors. For example, an authorization code flow may fail due to a missing state cookie if a user has initially accessed `/index.html` but configured a callback URI to `/web-app/callback`.\n          \n          \n            \n            If your application is deployed across multiple domains, make sure to set a `quarkus.oidc.authentication.cookie-domain` property, otherwise the browser cache manager may keep request path specific cookies. \n          \n          \n            \n            Not setting this property may lead to some errors that are difficult to diagnose, for example: an authorization code flow may fail due to a missing state cookie if a user has initially accessed `/index.html` but configured a callback URI to `/web-app/callback`.", "url": "https://github.com/quarkusio/quarkus/pull/12292#discussion_r493616912", "createdAt": "2020-09-23T14:00:20Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/security-openid-connect-web-authentication.adoc", "diffHunk": "@@ -191,6 +191,17 @@ In such cases a `quarkus.oidc.authentication.redirect-path` property has to be s\n \n If `quarkus.oidc.authentication.redirect-path` is set but the original request URL has to be restored after the user has been redirected back to a callback URL such as `http://localhost:8080/service/callback` then a `quarkus.oidc.authentication.restore-path-after-redirect` property has to be set to `true` which will restore the request URL such as `http://localhost:8080/service/1`, etc.\n \n+[[oidc-cookies]]\n+== Dealing with Cookies\n+\n+OIDC adapter uses cookies to keep the session, code flow and post logout state.\n+\n+If you access the protected resources with the overlapping or different roots, for example, `/index.html` and `/web-app/service` or `/web-app/service1` and `/web-app/service2` or `/web-app1/service` and `/web-app2/service` then most likely you also need to set a `quarkus.oidc.authentication.cookie-path` property to a path value common to all of the application resources, such as `/` or `/web-app`, etc.\n+\n+If your application is deployed across multiple domains then you may also need to set a `quarkus.oidc.authentication.cookie-domain` property.\n+\n+Otherwise the browser cache manager may keep request path specific cookies which in turn may lead to some difficult to diagnoze errors. For example, an authorization code flow may fail due to a missing state cookie if a user has initially accessed `/index.html` but configured a callback URI to `/web-app/callback`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f11ab7e43efe7edeab98209997204d4c26dad15"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe6ece830112264545607fcc9af07618e6c96ae7", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/fe6ece830112264545607fcc9af07618e6c96ae7", "committedDate": "2020-09-24T12:02:27Z", "message": "Update docs/src/main/asciidoc/security-openid-connect-web-authentication.adoc\n\nCo-authored-by: George Gastaldi <gegastaldi@gmail.com>"}, "afterCommit": {"oid": "57ff4076c352f2c03d69b4f6bb4e2492deb0daf6", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/57ff4076c352f2c03d69b4f6bb4e2492deb0daf6", "committedDate": "2020-09-24T12:23:53Z", "message": "Support OIDC cookie domain property"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57ff4076c352f2c03d69b4f6bb4e2492deb0daf6", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/57ff4076c352f2c03d69b4f6bb4e2492deb0daf6", "committedDate": "2020-09-24T12:23:53Z", "message": "Support OIDC cookie domain property"}, "afterCommit": {"oid": "3b618e69605ce85cfc72a650b4b81885af82cbaf", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/3b618e69605ce85cfc72a650b4b81885af82cbaf", "committedDate": "2020-09-24T12:42:24Z", "message": "Support OIDC cookie domain property"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NTM5OTIx", "url": "https://github.com/quarkusio/quarkus/pull/12292#pullrequestreview-495539921", "createdAt": "2020-09-24T12:56:05Z", "commit": {"oid": "3b618e69605ce85cfc72a650b4b81885af82cbaf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjo1NjowNVrOHXZUHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjo1NjowNVrOHXZUHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI5NDA0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If your application is deployed across multiple domains, make sure to set a `quarkus.oidc.authentication.cookie-domain` property for the session cookie be visible to all protected Quarkus services, for example, if you have 2 services deployd at:\n          \n          \n            \n            If your application is deployed across multiple domains, make sure to set a `quarkus.oidc.authentication.cookie-domain` property for the session cookie be visible to all protected Quarkus services, for example, if you have 2 services deployed at:", "url": "https://github.com/quarkusio/quarkus/pull/12292#discussion_r494294045", "createdAt": "2020-09-24T12:56:05Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/security-openid-connect-web-authentication.adoc", "diffHunk": "@@ -191,6 +191,28 @@ In such cases a `quarkus.oidc.authentication.redirect-path` property has to be s\n \n If `quarkus.oidc.authentication.redirect-path` is set but the original request URL has to be restored after the user has been redirected back to a callback URL such as `http://localhost:8080/service/callback` then a `quarkus.oidc.authentication.restore-path-after-redirect` property has to be set to `true` which will restore the request URL such as `http://localhost:8080/service/1`, etc.\n \n+[[oidc-cookies]]\n+== Dealing with Cookies\n+\n+The OIDC adapter uses cookies to keep the session, code flow and post logout state.\n+\n+If you access the protected resources with overlapping or different roots, for example: \n+\n+* `/index.html` and `/web-app/service`\n+* `/web-app/service1` and `/web-app/service2`\n+* `/web-app1/service` and `/web-app2/service` \n+\n+then most likely you also need to set a `quarkus.oidc.authentication.cookie-path` property to a path value that is common to all of them, such as `/` or `/web-app`, etc.\n+\n+Otherwise the browser cache manager may keep request path specific cookies which in turn may lead to some difficult to diagnoze errors. For example, an authorization code flow may fail due to a missing state cookie if a user has initially accessed `/index.html` but configured a callback URI to `/web-app/callback`.\n+\n+If your application is deployed across multiple domains, make sure to set a `quarkus.oidc.authentication.cookie-domain` property for the session cookie be visible to all protected Quarkus services, for example, if you have 2 services deployd at:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b618e69605ce85cfc72a650b4b81885af82cbaf"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NTQwMzg5", "url": "https://github.com/quarkusio/quarkus/pull/12292#pullrequestreview-495540389", "createdAt": "2020-09-24T12:56:37Z", "commit": {"oid": "3b618e69605ce85cfc72a650b4b81885af82cbaf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjo1NjozN1rOHXZVZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxMjo1NjozN1rOHXZVZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDI5NDM3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            then `quarkus.oidc.authentication.cookie-domain` property must be set to `company.net`.\n          \n          \n            \n            then the `quarkus.oidc.authentication.cookie-domain` property must be set to `company.net`.", "url": "https://github.com/quarkusio/quarkus/pull/12292#discussion_r494294374", "createdAt": "2020-09-24T12:56:37Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/security-openid-connect-web-authentication.adoc", "diffHunk": "@@ -191,6 +191,28 @@ In such cases a `quarkus.oidc.authentication.redirect-path` property has to be s\n \n If `quarkus.oidc.authentication.redirect-path` is set but the original request URL has to be restored after the user has been redirected back to a callback URL such as `http://localhost:8080/service/callback` then a `quarkus.oidc.authentication.restore-path-after-redirect` property has to be set to `true` which will restore the request URL such as `http://localhost:8080/service/1`, etc.\n \n+[[oidc-cookies]]\n+== Dealing with Cookies\n+\n+The OIDC adapter uses cookies to keep the session, code flow and post logout state.\n+\n+If you access the protected resources with overlapping or different roots, for example: \n+\n+* `/index.html` and `/web-app/service`\n+* `/web-app/service1` and `/web-app/service2`\n+* `/web-app1/service` and `/web-app2/service` \n+\n+then most likely you also need to set a `quarkus.oidc.authentication.cookie-path` property to a path value that is common to all of them, such as `/` or `/web-app`, etc.\n+\n+Otherwise the browser cache manager may keep request path specific cookies which in turn may lead to some difficult to diagnoze errors. For example, an authorization code flow may fail due to a missing state cookie if a user has initially accessed `/index.html` but configured a callback URI to `/web-app/callback`.\n+\n+If your application is deployed across multiple domains, make sure to set a `quarkus.oidc.authentication.cookie-domain` property for the session cookie be visible to all protected Quarkus services, for example, if you have 2 services deployd at:\n+\n+* https://whatever.wherever.company.net/\n+* https://another.address.company.net/\n+\n+then `quarkus.oidc.authentication.cookie-domain` property must be set to `company.net`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b618e69605ce85cfc72a650b4b81885af82cbaf"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3ec7fb4c2c3b4e287214db12dea114dc863da1d", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/d3ec7fb4c2c3b4e287214db12dea114dc863da1d", "committedDate": "2020-09-24T13:03:35Z", "message": "Support OIDC cookie domain property"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a3da618df3dfa42b327b329648669012fac7beb7", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/a3da618df3dfa42b327b329648669012fac7beb7", "committedDate": "2020-09-24T12:59:55Z", "message": "Update docs/src/main/asciidoc/security-openid-connect-web-authentication.adoc\n\nCo-authored-by: George Gastaldi <gegastaldi@gmail.com>"}, "afterCommit": {"oid": "d3ec7fb4c2c3b4e287214db12dea114dc863da1d", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/d3ec7fb4c2c3b4e287214db12dea114dc863da1d", "committedDate": "2020-09-24T13:03:35Z", "message": "Support OIDC cookie domain property"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1NTQ4ODg0", "url": "https://github.com/quarkusio/quarkus/pull/12292#pullrequestreview-495548884", "createdAt": "2020-09-24T13:06:25Z", "commit": {"oid": "d3ec7fb4c2c3b4e287214db12dea114dc863da1d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 407, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}