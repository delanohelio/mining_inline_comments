{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwOTg3MTIy", "number": 12986, "title": "Implemented opaque/binary token integration test", "bodyText": "Signed-off-by: Cem Nura cem.nura@gmail.com", "createdAt": "2020-10-27T19:03:34Z", "url": "https://github.com/quarkusio/quarkus/pull/12986", "merged": true, "mergeCommit": {"oid": "38bc4e3d5e19095b4b1101707ea4f93973641452"}, "closed": true, "closedAt": "2020-12-24T09:43:45Z", "author": {"login": "cemnura"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdW8H1lAFqTUxODU3NTYzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdpQh2VgFqTU1ODQzNDQzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NTc1NjM2", "url": "https://github.com/quarkusio/quarkus/pull/12986#pullrequestreview-518575636", "createdAt": "2020-10-28T11:46:25Z", "commit": {"oid": "e92b75f997cb5c3fc07923d9dd092d204f6e259b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMTo0NjoyNVrOHpmLSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMTo0NjoyNVrOHpmLSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM3OTE0NQ==", "bodyText": "@cemnura We need to return a different token value (say 456) here and differentiate an introspection response, see more on it below", "url": "https://github.com/quarkusio/quarkus/pull/12986#discussion_r513379145", "createdAt": "2020-10-28T11:46:25Z", "author": {"login": "sberyozkin"}, "path": "integration-tests/oidc-mock/src/test/java/io/quarkus/it/keycloak/BearerOpaqueTokenAuthorizationTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package io.quarkus.it.keycloak;\n+\n+import static org.hamcrest.Matchers.equalTo;\n+\n+import java.time.Instant;\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import org.hamcrest.Matchers;\n+import org.junit.jupiter.api.Disabled;\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.RestAssured;\n+import io.smallrye.jwt.build.Jwt;\n+\n+/**\n+ * @author <a href=\"mailto:psilva@redhat.com\">Pedro Igor</a>\n+ */\n+@QuarkusTest\n+@QuarkusTestResource(KeycloakTestResource.class)\n+public class BearerOpaqueTokenAuthorizationTest {\n+\n+    @Test\n+    public void testSecureAccessSuccessPreferredUsername() {\n+        for (String username : Arrays.asList(\"alice\", \"jdoe\", \"admin\")) {\n+            RestAssured.given().auth().oauth2(getAccessToken(username, new HashSet<>(Arrays.asList(\"user\", \"admin\"))))\n+                    .when().get(\"/api/users/preferredUserName\")\n+                    .then()\n+                    .statusCode(200)\n+                    .body(\"userName\", equalTo(username));\n+        }\n+    }\n+\n+    @Test\n+    public void testAccessAdminResource() {\n+        RestAssured.given().auth().oauth2(getAccessToken(\"admin\", new HashSet<>(Arrays.asList(\"admin\"))))\n+                .when().get(\"/api/admin\")\n+                .then()\n+                .statusCode(200)\n+                .body(Matchers.containsString(\"granted:admin\"));\n+    }\n+\n+    @Test\n+    public void testDeniedAccessAdminResource() {\n+        RestAssured.given().auth().oauth2(getAccessToken(\"alice\", new HashSet<>(Arrays.asList(\"user\"))))\n+                .when().get(\"/api/admin\")\n+                .then()\n+                .statusCode(403);\n+    }\n+\n+    @Test\n+    public void testDeniedNoBearerToken() {\n+        RestAssured.given()\n+                .when().get(\"/api/users/me\").then()\n+                .statusCode(401);\n+    }\n+\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92b75f997cb5c3fc07923d9dd092d204f6e259b"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NTc5NzUy", "url": "https://github.com/quarkusio/quarkus/pull/12986#pullrequestreview-518579752", "createdAt": "2020-10-28T11:51:46Z", "commit": {"oid": "e92b75f997cb5c3fc07923d9dd092d204f6e259b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMTo1MTo0N1rOHpmWyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxMTo1MTo0N1rOHpmWyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzM4MjA5MQ==", "bodyText": "@cemnura what should be done here is to check if the incoming token is equal to 123 and if yes then return this response, it should be done anyway, without the expired token check, as it has to be tested that it is indeed a 123 token which is being introspected.\nOnce it works then it will be easy to check if this token is equal to 456 and if yes then return the response with the expired value set to some low value, less than the issued at time etc :-)", "url": "https://github.com/quarkusio/quarkus/pull/12986#discussion_r513382091", "createdAt": "2020-10-28T11:51:47Z", "author": {"login": "sberyozkin"}, "path": "integration-tests/oidc-mock/src/test/java/io/quarkus/it/keycloak/KeycloakTestResource.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.it.keycloak;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import javax.ws.rs.core.MediaType;\n+\n+import org.jboss.logging.Logger;\n+\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.github.tomakehurst.wiremock.client.WireMock;\n+\n+import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n+\n+public class KeycloakTestResource implements QuarkusTestResourceLifecycleManager {\n+\n+    private static final Logger LOG = Logger.getLogger(KeycloakTestResource.class);\n+\n+    private WireMockServer server;\n+\n+    @Override\n+    public Map<String, String> start() {\n+\n+        server = new WireMockServer();\n+        server.start();\n+\n+        WireMock.stubFor(\n+                get(urlEqualTo(\"/auth/realms/quarkus/.well-known/openid-configuration\"))\n+                        .willReturn(aResponse()\n+                                .withHeader(\"Content-Type\", MediaType.APPLICATION_JSON)\n+                                .withBody(\"{\\n\" +\n+                                        \"    \\\"introspection_path\\\": \\\"\" + server.baseUrl()\n+                                        + \"/auth/realms/quarkus/protocol/openid-connect/token/introspect\\\"\\n\" +\n+                                        \"}\")));\n+\n+        // define the mock for the introspect endpoint\n+        WireMock.stubFor(WireMock.post(\"/auth/realms/quarkus/protocol/openid-connect/token/introspect\").willReturn(WireMock", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92b75f997cb5c3fc07923d9dd092d204f6e259b"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MDUyNDQ5", "url": "https://github.com/quarkusio/quarkus/pull/12986#pullrequestreview-518052449", "createdAt": "2020-10-27T19:11:51Z", "commit": {"oid": "e92b75f997cb5c3fc07923d9dd092d204f6e259b"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxOToxMTo1MVrOHpMf0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxOToxMjoyMFrOHpMg8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1ODQxNw==", "bodyText": "Introspection mock similar to what @loicmathieu did.\nThis introspection url is learned from /auth/realms/quarkus/.well-known/openid-configuration discovery", "url": "https://github.com/quarkusio/quarkus/pull/12986#discussion_r512958417", "createdAt": "2020-10-27T19:11:51Z", "author": {"login": "cemnura"}, "path": "integration-tests/oidc-mock/src/test/java/io/quarkus/it/keycloak/KeycloakTestResource.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.it.keycloak;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import javax.ws.rs.core.MediaType;\n+\n+import org.jboss.logging.Logger;\n+\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.github.tomakehurst.wiremock.client.WireMock;\n+\n+import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n+\n+public class KeycloakTestResource implements QuarkusTestResourceLifecycleManager {\n+\n+    private static final Logger LOG = Logger.getLogger(KeycloakTestResource.class);\n+\n+    private WireMockServer server;\n+\n+    @Override\n+    public Map<String, String> start() {\n+\n+        server = new WireMockServer();\n+        server.start();\n+\n+        WireMock.stubFor(\n+                get(urlEqualTo(\"/auth/realms/quarkus/.well-known/openid-configuration\"))\n+                        .willReturn(aResponse()\n+                                .withHeader(\"Content-Type\", MediaType.APPLICATION_JSON)\n+                                .withBody(\"{\\n\" +\n+                                        \"    \\\"introspection_path\\\": \\\"\" + server.baseUrl()\n+                                        + \"/auth/realms/quarkus/protocol/openid-connect/token/introspect\\\"\\n\" +\n+                                        \"}\")));\n+\n+        // define the mock for the introspect endpoint\n+        WireMock.stubFor(WireMock.post(\"/auth/realms/quarkus/protocol/openid-connect/token/introspect\").willReturn(WireMock\n+                .aResponse()\n+                .withBody(\n+                        \"{\\\"active\\\":true,\\\"scope\\\":\\\"user admin\\\",\\\"username\\\":\\\"alice\\\",\\\"iat\\\":1562315654,\\\"exp\\\":1562317454,\\\"expires_in\\\":1458,\\\"client_id\\\":\\\"my_client_id\\\"}\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92b75f997cb5c3fc07923d9dd092d204f6e259b"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjk1ODcwNw==", "bodyText": "Discovery mock that notifies quarkus the introspection_path", "url": "https://github.com/quarkusio/quarkus/pull/12986#discussion_r512958707", "createdAt": "2020-10-27T19:12:20Z", "author": {"login": "cemnura"}, "path": "integration-tests/oidc-mock/src/test/java/io/quarkus/it/keycloak/KeycloakTestResource.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.it.keycloak;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import javax.ws.rs.core.MediaType;\n+\n+import org.jboss.logging.Logger;\n+\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.github.tomakehurst.wiremock.client.WireMock;\n+\n+import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n+\n+public class KeycloakTestResource implements QuarkusTestResourceLifecycleManager {\n+\n+    private static final Logger LOG = Logger.getLogger(KeycloakTestResource.class);\n+\n+    private WireMockServer server;\n+\n+    @Override\n+    public Map<String, String> start() {\n+\n+        server = new WireMockServer();\n+        server.start();\n+\n+        WireMock.stubFor(\n+                get(urlEqualTo(\"/auth/realms/quarkus/.well-known/openid-configuration\"))\n+                        .willReturn(aResponse()\n+                                .withHeader(\"Content-Type\", MediaType.APPLICATION_JSON)\n+                                .withBody(\"{\\n\" +\n+                                        \"    \\\"introspection_path\\\": \\\"\" + server.baseUrl()\n+                                        + \"/auth/realms/quarkus/protocol/openid-connect/token/introspect\\\"\\n\" +\n+                                        \"}\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e92b75f997cb5c3fc07923d9dd092d204f6e259b"}, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e92b75f997cb5c3fc07923d9dd092d204f6e259b", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/e92b75f997cb5c3fc07923d9dd092d204f6e259b", "committedDate": "2020-10-27T17:49:58Z", "message": "[WIP] Implemented opaque/binary token integration test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}, "afterCommit": {"oid": "b8b8e70e5a9e6c8efff1b9f30b85b927dd9949a3", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/b8b8e70e5a9e6c8efff1b9f30b85b927dd9949a3", "committedDate": "2020-11-03T23:46:06Z", "message": "[WIP] Implemented opaque/binary token integration test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b8b8e70e5a9e6c8efff1b9f30b85b927dd9949a3", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/b8b8e70e5a9e6c8efff1b9f30b85b927dd9949a3", "committedDate": "2020-11-03T23:46:06Z", "message": "[WIP] Implemented opaque/binary token integration test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}, "afterCommit": {"oid": "0c6d698826761f26c0a2f667c8581c014a3195d1", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/0c6d698826761f26c0a2f667c8581c014a3195d1", "committedDate": "2020-11-04T00:02:22Z", "message": "[WIP] Implemented opaque/binary token integration test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDg5MDA1", "url": "https://github.com/quarkusio/quarkus/pull/12986#pullrequestreview-523489005", "createdAt": "2020-11-04T15:46:07Z", "commit": {"oid": "0c6d698826761f26c0a2f667c8581c014a3195d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo0NjowN1rOHteDuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo0NjowN1rOHteDuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ0MDQ0Mw==", "bodyText": "@cemnura Can we have a different KeycloakTestResource for the introspection endpoint, we need to keep it simple for the users :-), i.e, if the users want to test JWT, they don't need to set the introspection path (in most cases) and likewise for the opaque tokens. Please add KeycloakOpaqueTokenTestResource instead", "url": "https://github.com/quarkusio/quarkus/pull/12986#discussion_r517440443", "createdAt": "2020-11-04T15:46:07Z", "author": {"login": "sberyozkin"}, "path": "integration-tests/oidc-wiremock/src/test/java/io/quarkus/it/keycloak/KeycloakTestResource.java", "diffHunk": "@@ -34,8 +36,9 @@\n                                 .withHeader(\"Content-Type\", MediaType.APPLICATION_JSON)\n                                 .withBody(\"{\\n\" +\n                                         \"    \\\"jwks_uri\\\": \\\"\" + server.baseUrl()\n-                                        + \"/auth/realms/quarkus/protocol/openid-connect/certs\\\"\\n\"\n-                                        +\n+                                        + \"/auth/realms/quarkus/protocol/openid-connect/certs\\\",\\n\" +\n+                                        \"    \\\"introspection_path\\\": \\\"\" + server.baseUrl()\n+                                        + \"/auth/realms/quarkus/protocol/openid-connect/token/introspect\\\"\\n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c6d698826761f26c0a2f667c8581c014a3195d1"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDg5ODgw", "url": "https://github.com/quarkusio/quarkus/pull/12986#pullrequestreview-523489880", "createdAt": "2020-11-04T15:47:03Z", "commit": {"oid": "0c6d698826761f26c0a2f667c8581c014a3195d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo0NzowM1rOHteGZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo0NzowM1rOHteGZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ0MTEyNw==", "bodyText": "It is not in the header, but in the POST payload", "url": "https://github.com/quarkusio/quarkus/pull/12986#discussion_r517441127", "createdAt": "2020-11-04T15:47:03Z", "author": {"login": "sberyozkin"}, "path": "integration-tests/oidc-wiremock/src/test/java/io/quarkus/it/keycloak/KeycloakTestResource.java", "diffHunk": "@@ -54,6 +57,21 @@\n                                         \"  ]\\n\" +\n                                         \"}\")));\n \n+        // define the mock for the introspect endpoint\n+        WireMock.stubFor(WireMock.post(\"/auth/realms/quarkus/protocol/openid-connect/token/introspect\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c6d698826761f26c0a2f667c8581c014a3195d1"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c6d698826761f26c0a2f667c8581c014a3195d1", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/0c6d698826761f26c0a2f667c8581c014a3195d1", "committedDate": "2020-11-04T00:02:22Z", "message": "[WIP] Implemented opaque/binary token integration test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}, "afterCommit": {"oid": "f59ca687ee0bb02010fa0a69161fdca11172f0dd", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/f59ca687ee0bb02010fa0a69161fdca11172f0dd", "committedDate": "2020-11-05T23:25:08Z", "message": "[WIP] Implemented opaque/binary token integration test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f59ca687ee0bb02010fa0a69161fdca11172f0dd", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/f59ca687ee0bb02010fa0a69161fdca11172f0dd", "committedDate": "2020-11-05T23:25:08Z", "message": "[WIP] Implemented opaque/binary token integration test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}, "afterCommit": {"oid": "979da8a3ca93512fa8a591dfaefd1aed34533be2", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/979da8a3ca93512fa8a591dfaefd1aed34533be2", "committedDate": "2020-11-10T22:31:49Z", "message": "Implemented opaque/binary token integration test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d4241a14b4444211f62c6446260abc5f27391ec7", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/d4241a14b4444211f62c6446260abc5f27391ec7", "committedDate": "2020-12-05T06:35:40Z", "message": "Changed OIDC discovery doc property\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}, "afterCommit": {"oid": "3041f5c2b0162000d23e2963a2cbe4dd7b96227e", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/3041f5c2b0162000d23e2963a2cbe4dd7b96227e", "committedDate": "2020-12-10T23:11:54Z", "message": "Changed OIDC discovery doc property\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3041f5c2b0162000d23e2963a2cbe4dd7b96227e", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/3041f5c2b0162000d23e2963a2cbe4dd7b96227e", "committedDate": "2020-12-10T23:11:54Z", "message": "Changed OIDC discovery doc property\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}, "afterCommit": {"oid": "57f44f4a8f1c2551fb415c8558bb0fc8fab83236", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/57f44f4a8f1c2551fb415c8558bb0fc8fab83236", "committedDate": "2020-12-22T22:17:02Z", "message": "Added Opaque endpoint to be able to test opaque test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "57f44f4a8f1c2551fb415c8558bb0fc8fab83236", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/57f44f4a8f1c2551fb415c8558bb0fc8fab83236", "committedDate": "2020-12-22T22:17:02Z", "message": "Added Opaque endpoint to be able to test opaque test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}, "afterCommit": {"oid": "142f617e48811ce49a0aa15eef82e9ae77de6f93", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/142f617e48811ce49a0aa15eef82e9ae77de6f93", "committedDate": "2020-12-22T22:21:51Z", "message": "Added Opaque endpoint to be able to test opaque test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "142f617e48811ce49a0aa15eef82e9ae77de6f93", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/142f617e48811ce49a0aa15eef82e9ae77de6f93", "committedDate": "2020-12-22T22:21:51Z", "message": "Added Opaque endpoint to be able to test opaque test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}, "afterCommit": {"oid": "a978bb9c564a375841b8e183fd102426fb115e67", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/a978bb9c564a375841b8e183fd102426fb115e67", "committedDate": "2020-12-22T23:41:58Z", "message": "Added Opaque endpoint to be able to test opaque test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05254a700c4cffed4be01758fd10c8688bd6e1e4", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/05254a700c4cffed4be01758fd10c8688bd6e1e4", "committedDate": "2020-12-23T00:06:14Z", "message": "Implemented opaque/binary token integration test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a978bb9c564a375841b8e183fd102426fb115e67", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/a978bb9c564a375841b8e183fd102426fb115e67", "committedDate": "2020-12-22T23:41:58Z", "message": "Added Opaque endpoint to be able to test opaque test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}, "afterCommit": {"oid": "05254a700c4cffed4be01758fd10c8688bd6e1e4", "author": {"user": {"login": "cemnura", "name": "Cem Nura"}}, "url": "https://github.com/quarkusio/quarkus/commit/05254a700c4cffed4be01758fd10c8688bd6e1e4", "committedDate": "2020-12-23T00:06:14Z", "message": "Implemented opaque/binary token integration test\n\nSigned-off-by: Cem Nura <cem.nura@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4NDM0NDMx", "url": "https://github.com/quarkusio/quarkus/pull/12986#pullrequestreview-558434431", "createdAt": "2020-12-24T09:43:35Z", "commit": {"oid": "05254a700c4cffed4be01758fd10c8688bd6e1e4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1577, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}