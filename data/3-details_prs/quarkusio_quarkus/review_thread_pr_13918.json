{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMDkyOTky", "number": 13918, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMzoxNDo0NVrOFGL56Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMzoxNDo0NVrOFGL56Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMDMwODI1OnYy", "diffSide": "RIGHT", "path": "independent-projects/resteasy-reactive/common/processor/src/main/java/org/jboss/resteasy/reactive/common/processor/EndpointIndexer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMzoxNDo0NVrOIHEtLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMzoxOTo1M1rOIHE6pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI4ODA0NA==", "bodyText": "Perhaps currentClass.typeParameters() can be extracted to a local variable here", "url": "https://github.com/quarkusio/quarkus/pull/13918#discussion_r544288044", "createdAt": "2020-12-16T13:14:45Z", "author": {"login": "gastaldi"}, "path": "independent-projects/resteasy-reactive/common/processor/src/main/java/org/jboss/resteasy/reactive/common/processor/EndpointIndexer.java", "diffHunk": "@@ -609,29 +618,40 @@ protected static String toClassName(Type indexType, ClassInfo currentClass, Clas\n                 if (typeVariable.bounds().isEmpty()) {\n                     return Object.class.getName();\n                 }\n-                int pos = -1;\n-                for (int i = 0; i < currentClass.typeParameters().size(); ++i) {\n-                    if (currentClass.typeParameters().get(i).identifier().equals(typeVariable.identifier())) {\n-                        pos = i;\n-                        break;\n-                    }\n-                }\n-                if (pos != -1) {\n-                    List<Type> params = JandexUtil.resolveTypeParameters(actualEndpointClass.name(), currentClass.name(),\n-                            indexView);\n \n-                    Type resolved = params.get(pos);\n-                    if (resolved.kind() != Type.Kind.TYPE_VARIABLE\n-                            || !resolved.asTypeVariable().identifier().equals(typeVariable.identifier())) {\n-                        return toClassName(resolved, currentClass, actualEndpointClass, indexView);\n-                    }\n-                }\n-                return toClassName(typeVariable.bounds().get(0), currentClass, actualEndpointClass, indexView);\n+                return toClassName(resolveTypeVariable(typeVariable, currentClass, actualEndpointClass, indexView),\n+                        currentClass, actualEndpointClass, indexView);\n             default:\n                 throw new RuntimeException(\"Unknown parameter type \" + indexType);\n         }\n     }\n \n+    private static Type resolveTypeVariable(TypeVariable typeVariable, ClassInfo currentClass, ClassInfo actualEndpointClass,\n+            IndexView indexView) {\n+        if (typeVariable.bounds().isEmpty()) {\n+            return Type.create(DotName.createSimple(Object.class.getName()), Kind.CLASS);\n+        }\n+        int pos = -1;\n+        for (int i = 0; i < currentClass.typeParameters().size(); ++i) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e3836b28cfba69703ad41b7a963c3a48cc1b8f0"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI5MTQ5NQ==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/13918#discussion_r544291495", "createdAt": "2020-12-16T13:19:53Z", "author": {"login": "geoand"}, "path": "independent-projects/resteasy-reactive/common/processor/src/main/java/org/jboss/resteasy/reactive/common/processor/EndpointIndexer.java", "diffHunk": "@@ -609,29 +618,40 @@ protected static String toClassName(Type indexType, ClassInfo currentClass, Clas\n                 if (typeVariable.bounds().isEmpty()) {\n                     return Object.class.getName();\n                 }\n-                int pos = -1;\n-                for (int i = 0; i < currentClass.typeParameters().size(); ++i) {\n-                    if (currentClass.typeParameters().get(i).identifier().equals(typeVariable.identifier())) {\n-                        pos = i;\n-                        break;\n-                    }\n-                }\n-                if (pos != -1) {\n-                    List<Type> params = JandexUtil.resolveTypeParameters(actualEndpointClass.name(), currentClass.name(),\n-                            indexView);\n \n-                    Type resolved = params.get(pos);\n-                    if (resolved.kind() != Type.Kind.TYPE_VARIABLE\n-                            || !resolved.asTypeVariable().identifier().equals(typeVariable.identifier())) {\n-                        return toClassName(resolved, currentClass, actualEndpointClass, indexView);\n-                    }\n-                }\n-                return toClassName(typeVariable.bounds().get(0), currentClass, actualEndpointClass, indexView);\n+                return toClassName(resolveTypeVariable(typeVariable, currentClass, actualEndpointClass, indexView),\n+                        currentClass, actualEndpointClass, indexView);\n             default:\n                 throw new RuntimeException(\"Unknown parameter type \" + indexType);\n         }\n     }\n \n+    private static Type resolveTypeVariable(TypeVariable typeVariable, ClassInfo currentClass, ClassInfo actualEndpointClass,\n+            IndexView indexView) {\n+        if (typeVariable.bounds().isEmpty()) {\n+            return Type.create(DotName.createSimple(Object.class.getName()), Kind.CLASS);\n+        }\n+        int pos = -1;\n+        for (int i = 0; i < currentClass.typeParameters().size(); ++i) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDI4ODA0NA=="}, "originalCommit": {"oid": "2e3836b28cfba69703ad41b7a963c3a48cc1b8f0"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4399, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}