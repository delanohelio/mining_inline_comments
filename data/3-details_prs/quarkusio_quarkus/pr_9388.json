{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MTU5Nzcw", "number": 9388, "title": "Added support for @InjectSpy", "bodyText": "This PR builds on #8327 to provide the ability to inject Mockito.spy objects instead of Mockito.mock objects. This is useful when you need to override a small subset of methods in a Bean or you just want to verify logic branching is going where you want.", "createdAt": "2020-05-17T19:17:34Z", "url": "https://github.com/quarkusio/quarkus/pull/9388", "merged": true, "mergeCommit": {"oid": "cc98a6515fd02f851d832ce93df54a33c61b455a"}, "closed": true, "closedAt": "2020-05-22T07:04:28Z", "author": {"login": "aaron-rogers82"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABciQ1kbAFqTQxMzE5MzUxMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjgHVIAH2gAyNDE5MTU5NzcwOjQ2MjA4NzEwOWZhNzBmZDBlMjY0MzQwYWRhYWVhNzQxMWRjYjNhZDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMTkzNTEx", "url": "https://github.com/quarkusio/quarkus/pull/9388#pullrequestreview-413193511", "createdAt": "2020-05-17T19:56:30Z", "commit": {"oid": "91c6a4a73a789d65a2f87115bb2e18daa0d82346"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMjczOTQw", "url": "https://github.com/quarkusio/quarkus/pull/9388#pullrequestreview-413273940", "createdAt": "2020-05-18T05:07:15Z", "commit": {"oid": "677fa036c0975056826ffbf66aab395bb7b90fd5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNTowNzoxNVrOGWnrkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNTowNzoxNVrOGWnrkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjM3MTk4NA==", "bodyText": "I'm afraid that this could get us into trouble.\nWhat this does is basically set a private field on the CDI proxy. For mock that works great because the mock is just some object. But in this case you would be setting the that private field to the CDI proxy itself.\nI really think we need to find a more safe way of providing this facility.", "url": "https://github.com/quarkusio/quarkus/pull/9388#discussion_r426371984", "createdAt": "2020-05-18T05:07:15Z", "author": {"login": "geoand"}, "path": "test-framework/junit5-mockito/src/main/java/io/quarkus/test/junit/mockito/internal/CreateMockitoSpiesCallback.java", "diffHunk": "@@ -0,0 +1,70 @@\n+package io.quarkus.test.junit.mockito.internal;\n+\n+import java.lang.annotation.Annotation;\n+import java.lang.reflect.Field;\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.inject.Qualifier;\n+\n+import org.mockito.Mockito;\n+\n+import io.quarkus.arc.Arc;\n+import io.quarkus.arc.InstanceHandle;\n+import io.quarkus.test.junit.callback.QuarkusTestBeforeAllCallback;\n+import io.quarkus.test.junit.mockito.InjectSpy;\n+\n+public class CreateMockitoSpiesCallback implements QuarkusTestBeforeAllCallback {\n+\n+    @Override\n+    public void beforeAll(Object testInstance) {\n+        Class<?> current = testInstance.getClass();\n+        while (current.getSuperclass() != null) {\n+            for (Field field : current.getDeclaredFields()) {\n+                InjectSpy injectSpyAnnotation = field.getAnnotation(InjectSpy.class);\n+                if (injectSpyAnnotation != null) {\n+                    Object beanInstance = getBeanInstance(testInstance, field);\n+                    Object spy = createSpyAndSetTestField(testInstance, field, beanInstance);\n+                    MockitoMocksTracker.track(testInstance, spy, beanInstance);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677fa036c0975056826ffbf66aab395bb7b90fd5"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MDUzNDQ4", "url": "https://github.com/quarkusio/quarkus/pull/9388#pullrequestreview-415053448", "createdAt": "2020-05-20T07:17:00Z", "commit": {"oid": "0e7fe2bddc768c10b6dca3b33d33873b8834015e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzoxNzowMVrOGX-RlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzoxNzowMVrOGX-RlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc5MDc0MA==", "bodyText": "I think that we should be clear what \"called normally\" means and describe the lifecycle of the spied bean more thoroughly....", "url": "https://github.com/quarkusio/quarkus/pull/9388#discussion_r427790740", "createdAt": "2020-05-20T07:17:01Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/getting-started-testing.adoc", "diffHunk": "@@ -525,6 +525,72 @@ public class MockGreetingServiceTest {\n ----\n <1> Since we configured `greetingService` as a mock, the `GreetingResource` which uses the `GreetingService` bean, we get the mocked response instead of the response of the regular `GreetingService` bean\n \n+==== Using Spies instead of Mocks with `@InjectSpy`\n+\n+Building on the features provided by `InjectMock`, Quarkus also allows users to effortlessly take advantage of link:https://site.mockito.org/[Mockito] for spying on the beans supported by `QuarkusMock`.\n+This functionality is available via the `@io.quarkus.test.junit.mockito.InjectSpy` annotation which is available in the `quarkus-junit5-mockito` dependency.\n+\n+Sometimes when testing you only need to verify that a certain logical path was taken, or you only need to override a single method and want the rest of the methods to be called normally.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e7fe2bddc768c10b6dca3b33d33873b8834015e"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MTA0NDIz", "url": "https://github.com/quarkusio/quarkus/pull/9388#pullrequestreview-416104423", "createdAt": "2020-05-21T12:29:13Z", "commit": {"oid": "d44ccdd066435dbcf14f83f33b4cd5770c211e69"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMjoyOToxNFrOGYw-6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMjoyOToxNFrOGYw-6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODYyMTU0NQ==", "bodyText": "Small nitpick: Can we add a link to that documentation please?", "url": "https://github.com/quarkusio/quarkus/pull/9388#discussion_r428621545", "createdAt": "2020-05-21T12:29:14Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/getting-started-testing.adoc", "diffHunk": "@@ -525,6 +525,72 @@ public class MockGreetingServiceTest {\n ----\n <1> Since we configured `greetingService` as a mock, the `GreetingResource` which uses the `GreetingService` bean, we get the mocked response instead of the response of the regular `GreetingService` bean\n \n+==== Using Spies instead of Mocks with `@InjectSpy`\n+\n+Building on the features provided by `InjectMock`, Quarkus also allows users to effortlessly take advantage of link:https://site.mockito.org/[Mockito] for spying on the beans supported by `QuarkusMock`.\n+This functionality is available via the `@io.quarkus.test.junit.mockito.InjectSpy` annotation which is available in the `quarkus-junit5-mockito` dependency.\n+\n+Sometimes when testing you only need to verify that a certain logical path was taken, or you only need to stub out a single method's response while still executing the rest of the methods on the Spied clone. Please see Mockito documentation for more details on Spy partial mocks.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d44ccdd066435dbcf14f83f33b4cd5770c211e69"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MTcyOTIw", "url": "https://github.com/quarkusio/quarkus/pull/9388#pullrequestreview-416172920", "createdAt": "2020-05-21T14:04:57Z", "commit": {"oid": "087512f53a095437e288765978d5849f3485e5f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MTc4MjE0", "url": "https://github.com/quarkusio/quarkus/pull/9388#pullrequestreview-416178214", "createdAt": "2020-05-21T14:11:26Z", "commit": {"oid": "087512f53a095437e288765978d5849f3485e5f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "462087109fa70fd0e264340adaaea7411dcb3ad3", "author": {"user": {"login": "aaron-rogers82", "name": "Aaron Rogers"}}, "url": "https://github.com/quarkusio/quarkus/commit/462087109fa70fd0e264340adaaea7411dcb3ad3", "committedDate": "2020-05-21T16:18:24Z", "message": "Added support for @InjectSpy"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3284, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}