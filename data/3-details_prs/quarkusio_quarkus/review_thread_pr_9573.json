{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNjk4MzUz", "number": 9573, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzoxNToxOVrOD_jLcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzoxNToxOVrOD_jLcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTYzMjQ5OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/devmode/ArcEndpointTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzoxNToxOVrOGaRdPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzoyMDozN1rOGaRnPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwMjE3NA==", "bodyText": "I'm a little unclear about this, can you please explain it?", "url": "https://github.com/quarkusio/quarkus/pull/9573#discussion_r430202174", "createdAt": "2020-05-26T07:15:19Z", "author": {"login": "geoand"}, "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/devmode/ArcEndpointTest.java", "diffHunk": "@@ -46,21 +50,28 @@ public void testBeans() {\n \n         for (int i = 0; i < observers.size(); i++) {\n             JsonObject observer = observers.getJsonObject(i);\n-            if (beanId.equals(observer.getString(\"declaringBean\"))) {\n+            if (beanId.equals(observer.getString(\"declaringBean\"))\n+                    && StartupEvent.class.getName().equals(observer.getString(\"observedType\"))) {\n                 fooObserver = observer;\n+                assertEquals(2500, fooObserver.getInteger(\"priority\"));\n             }\n         }\n         assertNotNull(fooObserver);\n-        assertEquals(StartupEvent.class.getName(), fooObserver.getString(\"observedType\"));\n-        assertEquals(2500, fooObserver.getInteger(\"priority\"));\n     }\n \n     @Named\n     @ApplicationScoped\n     public static class Foo {\n \n+        @Inject // do not remove the bean\n+        HttpBuildTimeConfig httpConfig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfb8ba49f3d9d320b63bf2132aeac3b23c122cc8"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwMzg5Mw==", "bodyText": "Ah, that's a leftover from the previous version of the test where I tried to inject the config root using Arc.container().instance() (and it's removable). Will remove the comment...", "url": "https://github.com/quarkusio/quarkus/pull/9573#discussion_r430203893", "createdAt": "2020-05-26T07:18:51Z", "author": {"login": "mkouba"}, "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/devmode/ArcEndpointTest.java", "diffHunk": "@@ -46,21 +50,28 @@ public void testBeans() {\n \n         for (int i = 0; i < observers.size(); i++) {\n             JsonObject observer = observers.getJsonObject(i);\n-            if (beanId.equals(observer.getString(\"declaringBean\"))) {\n+            if (beanId.equals(observer.getString(\"declaringBean\"))\n+                    && StartupEvent.class.getName().equals(observer.getString(\"observedType\"))) {\n                 fooObserver = observer;\n+                assertEquals(2500, fooObserver.getInteger(\"priority\"));\n             }\n         }\n         assertNotNull(fooObserver);\n-        assertEquals(StartupEvent.class.getName(), fooObserver.getString(\"observedType\"));\n-        assertEquals(2500, fooObserver.getInteger(\"priority\"));\n     }\n \n     @Named\n     @ApplicationScoped\n     public static class Foo {\n \n+        @Inject // do not remove the bean\n+        HttpBuildTimeConfig httpConfig;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwMjE3NA=="}, "originalCommit": {"oid": "cfb8ba49f3d9d320b63bf2132aeac3b23c122cc8"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwNDczNQ==", "bodyText": "Cool, because I was beginning to worry :)", "url": "https://github.com/quarkusio/quarkus/pull/9573#discussion_r430204735", "createdAt": "2020-05-26T07:20:37Z", "author": {"login": "geoand"}, "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/devmode/ArcEndpointTest.java", "diffHunk": "@@ -46,21 +50,28 @@ public void testBeans() {\n \n         for (int i = 0; i < observers.size(); i++) {\n             JsonObject observer = observers.getJsonObject(i);\n-            if (beanId.equals(observer.getString(\"declaringBean\"))) {\n+            if (beanId.equals(observer.getString(\"declaringBean\"))\n+                    && StartupEvent.class.getName().equals(observer.getString(\"observedType\"))) {\n                 fooObserver = observer;\n+                assertEquals(2500, fooObserver.getInteger(\"priority\"));\n             }\n         }\n         assertNotNull(fooObserver);\n-        assertEquals(StartupEvent.class.getName(), fooObserver.getString(\"observedType\"));\n-        assertEquals(2500, fooObserver.getInteger(\"priority\"));\n     }\n \n     @Named\n     @ApplicationScoped\n     public static class Foo {\n \n+        @Inject // do not remove the bean\n+        HttpBuildTimeConfig httpConfig;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIwMjE3NA=="}, "originalCommit": {"oid": "cfb8ba49f3d9d320b63bf2132aeac3b23c122cc8"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2995, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}