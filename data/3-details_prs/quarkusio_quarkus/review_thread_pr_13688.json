{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMjUyMjc4", "number": 13688, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDo0MjoxMlrOFA1Nlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDo0Njo1OVrOFA1Wog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDE2MTUxOnYy", "diffSide": "RIGHT", "path": "extensions/amazon-lambda-http/runtime/src/main/java/io/quarkus/amazon/lambda/http/model/ApiGatewayAuthorizerContext.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDo0MjoxMlrOH_T2hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQyMzo0MjowOVrOIARIwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE0NzU5MA==", "bodyText": "public String getContextValue(String key).  The @JsonAnyGetter annotation should be removed from this method", "url": "https://github.com/quarkusio/quarkus/pull/13688#discussion_r536147590", "createdAt": "2020-12-04T14:42:12Z", "author": {"login": "patriot1burke"}, "path": "extensions/amazon-lambda-http/runtime/src/main/java/io/quarkus/amazon/lambda/http/model/ApiGatewayAuthorizerContext.java", "diffHunk": "@@ -42,6 +42,11 @@\n     // Methods - Public\n     //-------------------------------------------------------------\n \n+    @JsonAnyGetter\n+    public Map<String, String> getContextProperties() {\n+        return contextProperties;\n+    }\n+\n     @JsonAnyGetter\n     public String getContextValue(String key) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd3cc5db9a2f30a3a69f6f8199b69db46c92c299"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE1MTY4MQ==", "bodyText": "Removed", "url": "https://github.com/quarkusio/quarkus/pull/13688#discussion_r537151681", "createdAt": "2020-12-06T23:42:09Z", "author": {"login": "kenkFarmRoad"}, "path": "extensions/amazon-lambda-http/runtime/src/main/java/io/quarkus/amazon/lambda/http/model/ApiGatewayAuthorizerContext.java", "diffHunk": "@@ -42,6 +42,11 @@\n     // Methods - Public\n     //-------------------------------------------------------------\n \n+    @JsonAnyGetter\n+    public Map<String, String> getContextProperties() {\n+        return contextProperties;\n+    }\n+\n     @JsonAnyGetter\n     public String getContextValue(String key) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE0NzU5MA=="}, "originalCommit": {"oid": "dd3cc5db9a2f30a3a69f6f8199b69db46c92c299"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDE3ODk1OnYy", "diffSide": "RIGHT", "path": "extensions/amazon-lambda-http/runtime/src/main/java/io/quarkus/amazon/lambda/http/LambdaHttpHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDo0NTo0OVrOH_UA2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNlQxOToyOToyOFrOIAOZWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE1MDIzMw==", "bodyText": "Why are you adding this as a header?  You should be using setContextObject:\nquarkusHeaders.setContextObject(ApiGatewayAuthorizerContext.class, request.getRequeestContext().getAuthorizer());\nIMO, you should just add a the whole request context instead\nquarkusHeaders.setContextObject(AwsProxyRequestContext.class, request.getRequeestContext());", "url": "https://github.com/quarkusio/quarkus/pull/13688#discussion_r536150233", "createdAt": "2020-12-04T14:45:49Z", "author": {"login": "patriot1burke"}, "path": "extensions/amazon-lambda-http/runtime/src/main/java/io/quarkus/amazon/lambda/http/LambdaHttpHandler.java", "diffHunk": "@@ -176,6 +177,9 @@ private AwsProxyResponse nettyDispatch(InetSocketAddress clientAddress, AwsProxy\n         }\n         QuarkusHttpHeaders quarkusHeaders = new QuarkusHttpHeaders();\n         quarkusHeaders.setContextObject(Context.class, context);\n+        if (request.getRequestContext().getAuthorizer() != null) {\n+            quarkusHeaders.add(ApiGatewayAuthorizerContext.class.getName(), request.getRequestContext().getAuthorizer());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd3cc5db9a2f30a3a69f6f8199b69db46c92c299"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzEwNjc3OA==", "bodyText": "That's a much better idea. Thanks!", "url": "https://github.com/quarkusio/quarkus/pull/13688#discussion_r537106778", "createdAt": "2020-12-06T19:29:28Z", "author": {"login": "kenkFarmRoad"}, "path": "extensions/amazon-lambda-http/runtime/src/main/java/io/quarkus/amazon/lambda/http/LambdaHttpHandler.java", "diffHunk": "@@ -176,6 +177,9 @@ private AwsProxyResponse nettyDispatch(InetSocketAddress clientAddress, AwsProxy\n         }\n         QuarkusHttpHeaders quarkusHeaders = new QuarkusHttpHeaders();\n         quarkusHeaders.setContextObject(Context.class, context);\n+        if (request.getRequestContext().getAuthorizer() != null) {\n+            quarkusHeaders.add(ApiGatewayAuthorizerContext.class.getName(), request.getRequestContext().getAuthorizer());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE1MDIzMw=="}, "originalCommit": {"oid": "dd3cc5db9a2f30a3a69f6f8199b69db46c92c299"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDE4NDY2OnYy", "diffSide": "RIGHT", "path": "integration-tests/amazon-lambda-http-resteasy/src/test/java/io/quarkus/it/amazon/lambda/AmazonLambdaSimpleTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDo0Njo1OVrOH_UEKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDo0Njo1OVrOH_UEKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE1MTA4Mg==", "bodyText": "Your test is incomplete.  You should have a jaxrs resource or something that injects the context object with @context", "url": "https://github.com/quarkusio/quarkus/pull/13688#discussion_r536151082", "createdAt": "2020-12-04T14:46:59Z", "author": {"login": "patriot1burke"}, "path": "integration-tests/amazon-lambda-http-resteasy/src/test/java/io/quarkus/it/amazon/lambda/AmazonLambdaSimpleTestCase.java", "diffHunk": "@@ -105,4 +107,19 @@ public void testPostEmpty() throws Exception {\n \n     }\n \n+    @Test\n+    public void testAwsProxyRequestContext() throws Exception {\n+        ApiGatewayAuthorizerContext authorizerContext = new ApiGatewayAuthorizerContext();\n+        authorizerContext.setContextValue(\"authorizerValue\", \"testValue\");\n+        AwsProxyRequestContext awsProxyRequestContext = new AwsProxyRequestContext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd3cc5db9a2f30a3a69f6f8199b69db46c92c299"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3772, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}