{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5ODczMDQ0", "number": 11115, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToyMTo1MVrOEUGNKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToyMTo1MVrOEUGNKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTA4NjQ4OnYy", "diffSide": "RIGHT", "path": "extensions/neo4j/deployment/src/main/java/io/quarkus/neo4j/deployment/Neo4jDriverProcessor.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNToyMTo1MVrOG6MeAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzowMTo1OFrOG8IpoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3NDg4Mg==", "bodyText": "I don't think that will work, you need to use a RuntimeValue<Driver>. We have plenty of examples if you look for RuntimeValue in the code.", "url": "https://github.com/quarkusio/quarkus/pull/11115#discussion_r463674882", "createdAt": "2020-07-31T15:21:51Z", "author": {"login": "gsmet"}, "path": "extensions/neo4j/deployment/src/main/java/io/quarkus/neo4j/deployment/Neo4jDriverProcessor.java", "diffHunk": "@@ -33,11 +35,13 @@ AdditionalBeanBuildItem createDriverProducer() {\n \n     @BuildStep\n     @Record(ExecutionTime.RUNTIME_INIT)\n-    void configureDriverProducer(Neo4jDriverRecorder recorder, BeanContainerBuildItem beanContainerBuildItem,\n+    Neo4jDriverBuildItem configureDriverProducer(Neo4jDriverRecorder recorder, BeanContainerBuildItem beanContainerBuildItem,\n             Neo4jConfiguration configuration,\n             ShutdownContextBuildItem shutdownContext) {\n \n-        recorder.configureNeo4jProducer(beanContainerBuildItem.getValue(), configuration, shutdownContext);\n+        Driver driver = recorder.initializeDriver(configuration, shutdownContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6726974f8b5fc11d458d52c2e16c470cfabf5ddd"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY5NDg1Mw==", "bodyText": "Yes, this is absolutely correct. It might work even without it, but there is no point in risking it and not using RuntimeValue", "url": "https://github.com/quarkusio/quarkus/pull/11115#discussion_r463694853", "createdAt": "2020-07-31T15:58:18Z", "author": {"login": "geoand"}, "path": "extensions/neo4j/deployment/src/main/java/io/quarkus/neo4j/deployment/Neo4jDriverProcessor.java", "diffHunk": "@@ -33,11 +35,13 @@ AdditionalBeanBuildItem createDriverProducer() {\n \n     @BuildStep\n     @Record(ExecutionTime.RUNTIME_INIT)\n-    void configureDriverProducer(Neo4jDriverRecorder recorder, BeanContainerBuildItem beanContainerBuildItem,\n+    Neo4jDriverBuildItem configureDriverProducer(Neo4jDriverRecorder recorder, BeanContainerBuildItem beanContainerBuildItem,\n             Neo4jConfiguration configuration,\n             ShutdownContextBuildItem shutdownContext) {\n \n-        recorder.configureNeo4jProducer(beanContainerBuildItem.getValue(), configuration, shutdownContext);\n+        Driver driver = recorder.initializeDriver(configuration, shutdownContext);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3NDg4Mg=="}, "originalCommit": {"oid": "6726974f8b5fc11d458d52c2e16c470cfabf5ddd"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwODAyOQ==", "bodyText": "Just to clarify why this worked without RuntimeValue: It worked because Driver is an interface and as such the bytecode recorder knew to just create a proxy for it.\nIf however the class was not an interface, the whole endeavor would have failed \ud83d\ude09", "url": "https://github.com/quarkusio/quarkus/pull/11115#discussion_r465708029", "createdAt": "2020-08-05T12:59:34Z", "author": {"login": "geoand"}, "path": "extensions/neo4j/deployment/src/main/java/io/quarkus/neo4j/deployment/Neo4jDriverProcessor.java", "diffHunk": "@@ -33,11 +35,13 @@ AdditionalBeanBuildItem createDriverProducer() {\n \n     @BuildStep\n     @Record(ExecutionTime.RUNTIME_INIT)\n-    void configureDriverProducer(Neo4jDriverRecorder recorder, BeanContainerBuildItem beanContainerBuildItem,\n+    Neo4jDriverBuildItem configureDriverProducer(Neo4jDriverRecorder recorder, BeanContainerBuildItem beanContainerBuildItem,\n             Neo4jConfiguration configuration,\n             ShutdownContextBuildItem shutdownContext) {\n \n-        recorder.configureNeo4jProducer(beanContainerBuildItem.getValue(), configuration, shutdownContext);\n+        Driver driver = recorder.initializeDriver(configuration, shutdownContext);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3NDg4Mg=="}, "originalCommit": {"oid": "6726974f8b5fc11d458d52c2e16c470cfabf5ddd"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwODkxNA==", "bodyText": "Thanks for getting back with this info. Might come in handy some time to know this!", "url": "https://github.com/quarkusio/quarkus/pull/11115#discussion_r465708914", "createdAt": "2020-08-05T13:00:55Z", "author": {"login": "michael-simons"}, "path": "extensions/neo4j/deployment/src/main/java/io/quarkus/neo4j/deployment/Neo4jDriverProcessor.java", "diffHunk": "@@ -33,11 +35,13 @@ AdditionalBeanBuildItem createDriverProducer() {\n \n     @BuildStep\n     @Record(ExecutionTime.RUNTIME_INIT)\n-    void configureDriverProducer(Neo4jDriverRecorder recorder, BeanContainerBuildItem beanContainerBuildItem,\n+    Neo4jDriverBuildItem configureDriverProducer(Neo4jDriverRecorder recorder, BeanContainerBuildItem beanContainerBuildItem,\n             Neo4jConfiguration configuration,\n             ShutdownContextBuildItem shutdownContext) {\n \n-        recorder.configureNeo4jProducer(beanContainerBuildItem.getValue(), configuration, shutdownContext);\n+        Driver driver = recorder.initializeDriver(configuration, shutdownContext);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3NDg4Mg=="}, "originalCommit": {"oid": "6726974f8b5fc11d458d52c2e16c470cfabf5ddd"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcwOTQ3Mg==", "bodyText": "You are welcome!", "url": "https://github.com/quarkusio/quarkus/pull/11115#discussion_r465709472", "createdAt": "2020-08-05T13:01:58Z", "author": {"login": "geoand"}, "path": "extensions/neo4j/deployment/src/main/java/io/quarkus/neo4j/deployment/Neo4jDriverProcessor.java", "diffHunk": "@@ -33,11 +35,13 @@ AdditionalBeanBuildItem createDriverProducer() {\n \n     @BuildStep\n     @Record(ExecutionTime.RUNTIME_INIT)\n-    void configureDriverProducer(Neo4jDriverRecorder recorder, BeanContainerBuildItem beanContainerBuildItem,\n+    Neo4jDriverBuildItem configureDriverProducer(Neo4jDriverRecorder recorder, BeanContainerBuildItem beanContainerBuildItem,\n             Neo4jConfiguration configuration,\n             ShutdownContextBuildItem shutdownContext) {\n \n-        recorder.configureNeo4jProducer(beanContainerBuildItem.getValue(), configuration, shutdownContext);\n+        Driver driver = recorder.initializeDriver(configuration, shutdownContext);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY3NDg4Mg=="}, "originalCommit": {"oid": "6726974f8b5fc11d458d52c2e16c470cfabf5ddd"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 784, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}