{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0MDE3ODMy", "number": 12031, "title": "Make sure that Funqy types are registered for reflection", "bodyText": "Done in a way very similar to what we do for RESTEasy\nFixes: #12019\ncc @matejvasek", "createdAt": "2020-09-10T15:42:41Z", "url": "https://github.com/quarkusio/quarkus/pull/12031", "merged": true, "mergeCommit": {"oid": "1ba4f5fbfea86cbb6733e51234d58ceac212d2b3"}, "closed": true, "closedAt": "2020-09-12T12:09:18Z", "author": {"login": "geoand"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHjkFoAFqTQ4NjEyMDY1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdII4JkAFqTQ4NzIyNTYyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MTIwNjUw", "url": "https://github.com/quarkusio/quarkus/pull/12031#pullrequestreview-486120650", "createdAt": "2020-09-10T16:40:48Z", "commit": {"oid": "8e69cc957d5278be4d867183df8a5fff7a179985"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo0MDo0OFrOHP8rww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNjo0MDo0OFrOHP8rww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ4NDkzMQ==", "bodyText": "If the return type Uni<T> doesn't this register whole Uni<T>  instead of just T?\nWe do some processing related to this in FunctionInvoker.\nIf possible maybe registration of FunctionInvoker::inputType and FunctionInvoker::outputType should be sufficient.", "url": "https://github.com/quarkusio/quarkus/pull/12031#discussion_r486484931", "createdAt": "2020-09-10T16:40:48Z", "author": {"login": "matejvasek"}, "path": "extensions/funqy/funqy-server-common/deployment/src/main/java/io/quarkus/funqy/deployment/FunctionScannerBuildStep.java", "diffHunk": "@@ -63,6 +70,34 @@ public void scanFunctions(BeanArchiveIndexBuildItem beanArchiveIndexBuildItem,\n             if (functionName != null && functionName.isEmpty())\n                 functionName = null;\n             functions.produce(new FunctionBuildItem(className, methodName, functionName));\n+\n+            String source = FunctionScannerBuildStep.class.getSimpleName() + \" > \" + method.declaringClass() + \"[\" + method\n+                    + \"]\";\n+\n+            Type returnType = method.returnType();\n+            if (returnType.kind() != Type.Kind.VOID) {\n+                reflectiveHierarchy.produce(new ReflectiveHierarchyBuildItem.Builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e69cc957d5278be4d867183df8a5fff7a179985"}, "originalPosition": 55}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e69cc957d5278be4d867183df8a5fff7a179985", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/8e69cc957d5278be4d867183df8a5fff7a179985", "committedDate": "2020-09-10T15:41:33Z", "message": "Make sure that Funqy types are registered for reflection\n\nDone in a way very similar to what we do for RESTEasy\n\nFixes: #12019"}, "afterCommit": {"oid": "7a5f55d30ed7c9005d4230972075aa520792df9c", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/7a5f55d30ed7c9005d4230972075aa520792df9c", "committedDate": "2020-09-10T17:45:00Z", "message": "Make sure that Funqy types are registered for reflection\n\nDone in a way very similar to what we do for RESTEasy\n\nFixes: #12019"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2Mjg2MzE2", "url": "https://github.com/quarkusio/quarkus/pull/12031#pullrequestreview-486286316", "createdAt": "2020-09-10T20:29:03Z", "commit": {"oid": "7a5f55d30ed7c9005d4230972075aa520792df9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoyOTowM1rOHQEmeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDoyOTowM1rOHQEmeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxNDY0OA==", "bodyText": "I don't think so. It should be in the RESTEasy ones though.\nBasically, we need to ignore them if we have some special handling for them, which is the case for RESTEasy.", "url": "https://github.com/quarkusio/quarkus/pull/12031#discussion_r486614648", "createdAt": "2020-09-10T20:29:03Z", "author": {"login": "gsmet"}, "path": "extensions/funqy/funqy-server-common/deployment/src/main/java/io/quarkus/funqy/deployment/ReflectionRegistrationUtil.java", "diffHunk": "@@ -0,0 +1,64 @@\n+package io.quarkus.funqy.deployment;\n+\n+import java.util.function.Predicate;\n+\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.FieldInfo;\n+import org.jboss.jandex.MethodInfo;\n+\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveHierarchyBuildItem;\n+\n+final class ReflectionRegistrationUtil {\n+\n+    private ReflectionRegistrationUtil() {\n+    }\n+\n+    static final IgnoreTypeForReflectionPredicate IGNORE_TYPE_FOR_REFLECTION_PREDICATE = new IgnoreTypeForReflectionPredicate();\n+    static final IgnoreFieldForReflectionPredicate IGNORE_FIELD_FOR_REFLECTION_PREDICATE = new IgnoreFieldForReflectionPredicate();\n+    static final IgnoreMethodForReflectionPredicate IGNORE_METHOD_FOR_REFLECTION_PREDICATE = new IgnoreMethodForReflectionPredicate();\n+\n+    private static final DotName JSON_IGNORE = DotName.createSimple(\"com.fasterxml.jackson.annotation.JsonIgnore\");\n+    private static final DotName JSONB_TRANSIENT = DotName.createSimple(\"javax.json.bind.annotation.JsonbTransient\");\n+\n+    private static class IgnoreTypeForReflectionPredicate implements Predicate<DotName> {\n+\n+        @Override\n+        public boolean test(DotName dotName) {\n+            if (ReflectiveHierarchyBuildItem.DefaultIgnoreTypePredicate.INSTANCE.test(dotName)) {\n+                return true;\n+            }\n+\n+            String name = dotName.toString();\n+            for (String packageName : PACKAGES_IGNORED_FOR_REFLECTION) {\n+                if (name.startsWith(packageName)) {\n+                    return true;\n+                }\n+            }\n+            return false;\n+        }\n+    }\n+\n+    private static class IgnoreFieldForReflectionPredicate implements Predicate<FieldInfo> {\n+\n+        @Override\n+        public boolean test(FieldInfo fieldInfo) {\n+            return fieldInfo.hasAnnotation(JSON_IGNORE)\n+                    || fieldInfo.hasAnnotation(JSONB_TRANSIENT);\n+        }\n+    }\n+\n+    private static class IgnoreMethodForReflectionPredicate implements Predicate<MethodInfo> {\n+\n+        @Override\n+        public boolean test(MethodInfo methodInfo) {\n+            return methodInfo.hasAnnotation(JSON_IGNORE)\n+                    || methodInfo.hasAnnotation(JSONB_TRANSIENT);\n+        }\n+    }\n+\n+    private static final String[] PACKAGES_IGNORED_FOR_REFLECTION = {\n+            // Mutiny\n+            // TODO: should this be in ReflectiveHierarchyBuildItem.DefaultIgnoreTypePredicate?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a5f55d30ed7c9005d4230972075aa520792df9c"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0428da3102eb000e930f2dbec370754f6b6e284", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/c0428da3102eb000e930f2dbec370754f6b6e284", "committedDate": "2020-09-11T18:02:23Z", "message": "Avoid potential NPE in ReflectiveHierarchyStep"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "809610fdf6bc4cae4e51f7a6e407abab3655f064", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/809610fdf6bc4cae4e51f7a6e407abab3655f064", "committedDate": "2020-09-11T18:02:23Z", "message": "Make sure that Funqy types are registered for reflection\n\nDone in a way very similar to what we do for RESTEasy\n\nFixes: #12019"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bf7f6e6b1501542f306ea7ba14f2e6e77059910", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/6bf7f6e6b1501542f306ea7ba14f2e6e77059910", "committedDate": "2020-09-11T18:02:23Z", "message": "Add mutiny to ignored to types for reflection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a5f55d30ed7c9005d4230972075aa520792df9c", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/7a5f55d30ed7c9005d4230972075aa520792df9c", "committedDate": "2020-09-10T17:45:00Z", "message": "Make sure that Funqy types are registered for reflection\n\nDone in a way very similar to what we do for RESTEasy\n\nFixes: #12019"}, "afterCommit": {"oid": "6bf7f6e6b1501542f306ea7ba14f2e6e77059910", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/6bf7f6e6b1501542f306ea7ba14f2e6e77059910", "committedDate": "2020-09-11T18:02:23Z", "message": "Add mutiny to ignored to types for reflection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MjI1NjIx", "url": "https://github.com/quarkusio/quarkus/pull/12031#pullrequestreview-487225621", "createdAt": "2020-09-12T12:09:12Z", "commit": {"oid": "6bf7f6e6b1501542f306ea7ba14f2e6e77059910"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 622, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}