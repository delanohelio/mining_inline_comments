{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1MDEzMjI3", "number": 14038, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwOTozOToxM1rOFI5BXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwOTozOToxM1rOFI5BXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODY3MTY3OnYy", "diffSide": "RIGHT", "path": "extensions/spring-data-jpa/deployment/src/main/java/io/quarkus/spring/data/deployment/generate/CustomQueryMethodsAdder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwOTozOToxM1rOILD4PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMjoxNzo1MVrOILGnJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ2ODc5Nw==", "bodyText": "I don't think we need the comment TBH - that comment is best left on the issue (as you have already done)", "url": "https://github.com/quarkusio/quarkus/pull/14038#discussion_r548468797", "createdAt": "2020-12-24T09:39:13Z", "author": {"login": "geoand"}, "path": "extensions/spring-data-jpa/deployment/src/main/java/io/quarkus/spring/data/deployment/generate/CustomQueryMethodsAdder.java", "diffHunk": "@@ -150,6 +153,19 @@ public void add(ClassCreator classCreator, FieldDescriptor entityClassFieldDescr\n             try (MethodCreator methodCreator = classCreator.getMethodCreator(method.name(), methodReturnTypeDotName.toString(),\n                     methodParameterTypesStr)) {\n \n+                Set<String> usedNamedParameters = extractNamedParameters(queryString);\n+                if (!usedNamedParameters.isEmpty()) {\n+                    Set<String> missingParameters = new LinkedHashSet<>(usedNamedParameters);\n+                    missingParameters.removeAll(namedParameterToIndex.keySet());\n+                    if (!missingParameters.isEmpty()) {\n+                        // better error message than \"Could not locate ordinal parameter [1], expecting one of []\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7894ecd86fdd4581d3f4735b863bfd97a935f284"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODUxMzU3Mw==", "bodyText": "Yes, you're right. I removed it.", "url": "https://github.com/quarkusio/quarkus/pull/14038#discussion_r548513573", "createdAt": "2020-12-24T12:17:51Z", "author": {"login": "renegrob"}, "path": "extensions/spring-data-jpa/deployment/src/main/java/io/quarkus/spring/data/deployment/generate/CustomQueryMethodsAdder.java", "diffHunk": "@@ -150,6 +153,19 @@ public void add(ClassCreator classCreator, FieldDescriptor entityClassFieldDescr\n             try (MethodCreator methodCreator = classCreator.getMethodCreator(method.name(), methodReturnTypeDotName.toString(),\n                     methodParameterTypesStr)) {\n \n+                Set<String> usedNamedParameters = extractNamedParameters(queryString);\n+                if (!usedNamedParameters.isEmpty()) {\n+                    Set<String> missingParameters = new LinkedHashSet<>(usedNamedParameters);\n+                    missingParameters.removeAll(namedParameterToIndex.keySet());\n+                    if (!missingParameters.isEmpty()) {\n+                        // better error message than \"Could not locate ordinal parameter [1], expecting one of []\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ2ODc5Nw=="}, "originalCommit": {"oid": "7894ecd86fdd4581d3f4735b863bfd97a935f284"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4461, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}