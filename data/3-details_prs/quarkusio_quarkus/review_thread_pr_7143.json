{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNzA0Njkz", "number": 7143, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjoyMzo1OVrODe3sow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToxOTo1MlrODfI9pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjk2NDE5OnYy", "diffSide": "LEFT", "path": "extensions/undertow/deployment/src/main/java/io/quarkus/undertow/deployment/UndertowBuildStep.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjoyMzo1OVrOFoPvKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDo0OToyMlrOFoYkDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc0NTE5NA==", "bodyText": "Actually I think it should be:\nif (servlet.getInitParam() != null) {\n   for (ParamValueMetaData pvm : servlet.getInitParam()) {\n      params.put(pvm.getParamName(), pvm.getParamValue());\n   }\n}\nAnd the for loop below can be removed completely", "url": "https://github.com/quarkusio/quarkus/pull/7143#discussion_r377745194", "createdAt": "2020-02-11T16:23:59Z", "author": {"login": "gastaldi"}, "path": "extensions/undertow/deployment/src/main/java/io/quarkus/undertow/deployment/UndertowBuildStep.java", "diffHunk": "@@ -329,16 +328,12 @@ public ServletDeploymentManagerBuildItem build(List<ServletBuildItem> servlets,\n         if (webMetaData.getServlets() != null) {\n             for (ServletMetaData servlet : webMetaData.getServlets()) {\n                 reflectiveClasses.accept(new ReflectiveClassBuildItem(false, false, servlet.getServletClass()));\n-                Map<String, String> params = new HashMap<>();\n-                for (Map.Entry<String, String> i : params.entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68e77eb275934ac73fb99fed2890405a3b8f744e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc4NTA3NQ==", "bodyText": "@gastaldi The thing is I tried exactly that without any impact :)\nThat is why I went ahead with the test, to reach out to that part of code.\nDo you happen to have any hint on the test case?\nNo point in having here something that actually doesn't get used.\nI'll check it again though...", "url": "https://github.com/quarkusio/quarkus/pull/7143#discussion_r377785075", "createdAt": "2020-02-11T17:27:38Z", "author": {"login": "Karm"}, "path": "extensions/undertow/deployment/src/main/java/io/quarkus/undertow/deployment/UndertowBuildStep.java", "diffHunk": "@@ -329,16 +328,12 @@ public ServletDeploymentManagerBuildItem build(List<ServletBuildItem> servlets,\n         if (webMetaData.getServlets() != null) {\n             for (ServletMetaData servlet : webMetaData.getServlets()) {\n                 reflectiveClasses.accept(new ReflectiveClassBuildItem(false, false, servlet.getServletClass()));\n-                Map<String, String> params = new HashMap<>();\n-                for (Map.Entry<String, String> i : params.entrySet()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc0NTE5NA=="}, "originalCommit": {"oid": "68e77eb275934ac73fb99fed2890405a3b8f744e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc5NTIwMg==", "bodyText": "Do you happen to have any hint on the test case?\n\nI think your test case looks correct. You mean that the init parameters are not set in the ServletMetaData object?", "url": "https://github.com/quarkusio/quarkus/pull/7143#discussion_r377795202", "createdAt": "2020-02-11T17:46:50Z", "author": {"login": "gastaldi"}, "path": "extensions/undertow/deployment/src/main/java/io/quarkus/undertow/deployment/UndertowBuildStep.java", "diffHunk": "@@ -329,16 +328,12 @@ public ServletDeploymentManagerBuildItem build(List<ServletBuildItem> servlets,\n         if (webMetaData.getServlets() != null) {\n             for (ServletMetaData servlet : webMetaData.getServlets()) {\n                 reflectiveClasses.accept(new ReflectiveClassBuildItem(false, false, servlet.getServletClass()));\n-                Map<String, String> params = new HashMap<>();\n-                for (Map.Entry<String, String> i : params.entrySet()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc0NTE5NA=="}, "originalCommit": {"oid": "68e77eb275934ac73fb99fed2890405a3b8f744e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg4OTgwNA==", "bodyText": "This parameter should just be deleted. The init params are added in the next line with a seperate call to the recorder.", "url": "https://github.com/quarkusio/quarkus/pull/7143#discussion_r377889804", "createdAt": "2020-02-11T20:49:22Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/undertow/deployment/src/main/java/io/quarkus/undertow/deployment/UndertowBuildStep.java", "diffHunk": "@@ -329,16 +328,12 @@ public ServletDeploymentManagerBuildItem build(List<ServletBuildItem> servlets,\n         if (webMetaData.getServlets() != null) {\n             for (ServletMetaData servlet : webMetaData.getServlets()) {\n                 reflectiveClasses.accept(new ReflectiveClassBuildItem(false, false, servlet.getServletClass()));\n-                Map<String, String> params = new HashMap<>();\n-                for (Map.Entry<String, String> i : params.entrySet()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc0NTE5NA=="}, "originalCommit": {"oid": "68e77eb275934ac73fb99fed2890405a3b8f744e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjk2NzM5OnYy", "diffSide": "LEFT", "path": "extensions/undertow/deployment/src/main/java/io/quarkus/undertow/deployment/UndertowBuildStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjoyNDo0OFrOFoPxQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNjoyNDo0OFrOFoPxQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzc0NTczMA==", "bodyText": "This should be:\nif (filter.getInitParam() != null) {\n   for (ParamValueMetaData pvm : filter.getInitParam()) {\n      params.put(pvm.getParamName(), pvm.getParamValue());\n   }\n}\nAnd the for loop below can be removed", "url": "https://github.com/quarkusio/quarkus/pull/7143#discussion_r377745730", "createdAt": "2020-02-11T16:24:48Z", "author": {"login": "gastaldi"}, "path": "extensions/undertow/deployment/src/main/java/io/quarkus/undertow/deployment/UndertowBuildStep.java", "diffHunk": "@@ -402,16 +397,13 @@ public ServletDeploymentManagerBuildItem build(List<ServletBuildItem> servlets,\n         if (webMetaData.getFilters() != null) {\n             for (FilterMetaData filter : webMetaData.getFilters()) {\n                 reflectiveClasses.accept(new ReflectiveClassBuildItem(false, false, filter.getFilterClass()));\n-                Map<String, String> params = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68e77eb275934ac73fb99fed2890405a3b8f744e"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTc5MDU1OnYy", "diffSide": "RIGHT", "path": "extensions/undertow/runtime/src/main/java/io/quarkus/undertow/runtime/UndertowDeploymentRecorder.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToxOTowM1rOFoq1uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNDoxNDo1NlrOFowHrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4OTI0MQ==", "bodyText": "I am not sure it's a good idea to change the API here. Other extensions (external to core - camel?) may be using it", "url": "https://github.com/quarkusio/quarkus/pull/7143#discussion_r378189241", "createdAt": "2020-02-12T11:19:03Z", "author": {"login": "gastaldi"}, "path": "extensions/undertow/runtime/src/main/java/io/quarkus/undertow/runtime/UndertowDeploymentRecorder.java", "diffHunk": "@@ -221,16 +220,13 @@ public static SocketAddress getHttpAddress() {\n             Class<?> servletClass,\n             boolean asyncSupported,\n             int loadOnStartup,\n-            BeanContainer beanContainer, Map<String, String> initParams,\n+            BeanContainer beanContainer,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af0251cfff43b386814f5a44285dd515810996a8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIyODM4NQ==", "bodyText": "@gastaldi Hmm, such external extension would have to be fiddling with how Servlet is built in Quarkus and use Undertow extension for that...\nIf you have any suggestion what area such extension might appear in, I will try to find it and run its tests...", "url": "https://github.com/quarkusio/quarkus/pull/7143#discussion_r378228385", "createdAt": "2020-02-12T12:46:31Z", "author": {"login": "Karm"}, "path": "extensions/undertow/runtime/src/main/java/io/quarkus/undertow/runtime/UndertowDeploymentRecorder.java", "diffHunk": "@@ -221,16 +220,13 @@ public static SocketAddress getHttpAddress() {\n             Class<?> servletClass,\n             boolean asyncSupported,\n             int loadOnStartup,\n-            BeanContainer beanContainer, Map<String, String> initParams,\n+            BeanContainer beanContainer,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4OTI0MQ=="}, "originalCommit": {"oid": "af0251cfff43b386814f5a44285dd515810996a8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIyOTUwOA==", "bodyText": "Check if camel-quarkus is using it, otherwise it may be good to go then", "url": "https://github.com/quarkusio/quarkus/pull/7143#discussion_r378229508", "createdAt": "2020-02-12T12:48:51Z", "author": {"login": "gastaldi"}, "path": "extensions/undertow/runtime/src/main/java/io/quarkus/undertow/runtime/UndertowDeploymentRecorder.java", "diffHunk": "@@ -221,16 +220,13 @@ public static SocketAddress getHttpAddress() {\n             Class<?> servletClass,\n             boolean asyncSupported,\n             int loadOnStartup,\n-            BeanContainer beanContainer, Map<String, String> initParams,\n+            BeanContainer beanContainer,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4OTI0MQ=="}, "originalCommit": {"oid": "af0251cfff43b386814f5a44285dd515810996a8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI3NTc1OQ==", "bodyText": "@gastaldi I run quarkus-camel tests, excluding Mongo (does not build with Quarkus master, talked to @ppalaga ) and JMS (local network shenanigans), and it looks unaffected, e.g. org.apache.camel.quarkus.component.servlet.CamelServletTest is \u2714\ufe0f  etc.\n\nbasic search for usage of said API did not show anything...\n\nIMHO safe to go.", "url": "https://github.com/quarkusio/quarkus/pull/7143#discussion_r378275759", "createdAt": "2020-02-12T14:14:56Z", "author": {"login": "Karm"}, "path": "extensions/undertow/runtime/src/main/java/io/quarkus/undertow/runtime/UndertowDeploymentRecorder.java", "diffHunk": "@@ -221,16 +220,13 @@ public static SocketAddress getHttpAddress() {\n             Class<?> servletClass,\n             boolean asyncSupported,\n             int loadOnStartup,\n-            BeanContainer beanContainer, Map<String, String> initParams,\n+            BeanContainer beanContainer,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4OTI0MQ=="}, "originalCommit": {"oid": "af0251cfff43b386814f5a44285dd515810996a8"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTc5MzAxOnYy", "diffSide": "RIGHT", "path": "extensions/undertow/deployment/src/main/java/io/quarkus/undertow/deployment/UndertowBuildStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMToxOTo1MlrOFoq3MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMjo0Mjo0NFrOFotIGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4OTYxNg==", "bodyText": "Where are these init params used?", "url": "https://github.com/quarkusio/quarkus/pull/7143#discussion_r378189616", "createdAt": "2020-02-12T11:19:52Z", "author": {"login": "gastaldi"}, "path": "extensions/undertow/deployment/src/main/java/io/quarkus/undertow/deployment/UndertowBuildStep.java", "diffHunk": "@@ -499,7 +488,7 @@ public ServletDeploymentManagerBuildItem build(List<ServletBuildItem> servlets,\n             String filterClass = filter.getFilterClass();\n             reflectiveClasses.accept(new ReflectiveClassBuildItem(false, false, filterClass));\n             recorder.registerFilter(deployment, filter.getName(), context.classProxy(filterClass), filter.isAsyncSupported(),\n-                    bc.getValue(), filter.getInitParams(), filter.getInstanceFactory());\n+                    bc.getValue(), filter.getInstanceFactory());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af0251cfff43b386814f5a44285dd515810996a8"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODIyNjcxNA==", "bodyText": "@gastaldi\nWell, they were redundantly used in in io.quarkus.undertow.runtime.UndertowDeploymentRecorder#registerFilter.\nThe real place where initParams are set for filters is this: UndertowBuildStep.java#L406.", "url": "https://github.com/quarkusio/quarkus/pull/7143#discussion_r378226714", "createdAt": "2020-02-12T12:42:44Z", "author": {"login": "Karm"}, "path": "extensions/undertow/deployment/src/main/java/io/quarkus/undertow/deployment/UndertowBuildStep.java", "diffHunk": "@@ -499,7 +488,7 @@ public ServletDeploymentManagerBuildItem build(List<ServletBuildItem> servlets,\n             String filterClass = filter.getFilterClass();\n             reflectiveClasses.accept(new ReflectiveClassBuildItem(false, false, filterClass));\n             recorder.registerFilter(deployment, filter.getName(), context.classProxy(filterClass), filter.isAsyncSupported(),\n-                    bc.getValue(), filter.getInitParams(), filter.getInstanceFactory());\n+                    bc.getValue(), filter.getInstanceFactory());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODE4OTYxNg=="}, "originalCommit": {"oid": "af0251cfff43b386814f5a44285dd515810996a8"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 977, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}