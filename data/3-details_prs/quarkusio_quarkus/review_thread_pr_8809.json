{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MzQyODQ0", "number": 8809, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzoxMjo0NFrOD1oOPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzoxMjo0NFrOD1oOPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NTYwMTI3OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzoxMjo0NFrOGLJzAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToxNzowMFrOGLS24w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0ODAzMg==", "bodyText": "As discussed on zulip, this sentence is wrong. @ActivateRequestContext merely activates the request context and makes it possible to use @RequestScoped beans in the command mode.", "url": "https://github.com/quarkusio/quarkus/pull/8809#discussion_r414348032", "createdAt": "2020-04-24T07:12:44Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "diffHunk": "@@ -20,25 +20,28 @@ that exit.\n In this document the `QuarkusApplication` instance is referred to as the application main,\n and a class with a Java main method is the Java main.\n \n-The simplest possible command mode application might appear as follows:\n+The simplest possible command mode application with access to Quarkus API's might appear as follows:\n \n [source,java]\n ----\n import io.quarkus.runtime.QuarkusApplication;\n import io.quarkus.runtime.annotations.QuarkusMain;\n \n-@QuarkusMain    // <1>\n+@QuarkusMain    // <.>\n public class HelloWorldMain implements QuarkusApplication {\n   @Override\n-  public int run(String... args) throws Exception {   // <2>\n+  @ActivateRequestContext // <.>\n+  public int run(String... args) throws Exception {   // <.>\n     System.out.println(\"Hello World\");\n     return 10;\n  }\n }\n ----\n-<1> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.\n-<2> The `run` method is invoked once Quarkus starts, and the application stops when it finishes.\n+<.> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.\n+<.> The `@ActivateRequestContext` annotation is not strictly required for this example, but ensures you have access to context dependency injection. Allowing you to use API's such as Hibernate Panache.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "703d48868ff2c78b6605f3ed42c170b55728a767"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM3NzA3OA==", "bodyText": "@mkouba what would be the cost of activating it always?", "url": "https://github.com/quarkusio/quarkus/pull/8809#discussion_r414377078", "createdAt": "2020-04-24T08:02:29Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "diffHunk": "@@ -20,25 +20,28 @@ that exit.\n In this document the `QuarkusApplication` instance is referred to as the application main,\n and a class with a Java main method is the Java main.\n \n-The simplest possible command mode application might appear as follows:\n+The simplest possible command mode application with access to Quarkus API's might appear as follows:\n \n [source,java]\n ----\n import io.quarkus.runtime.QuarkusApplication;\n import io.quarkus.runtime.annotations.QuarkusMain;\n \n-@QuarkusMain    // <1>\n+@QuarkusMain    // <.>\n public class HelloWorldMain implements QuarkusApplication {\n   @Override\n-  public int run(String... args) throws Exception {   // <2>\n+  @ActivateRequestContext // <.>\n+  public int run(String... args) throws Exception {   // <.>\n     System.out.println(\"Hello World\");\n     return 10;\n  }\n }\n ----\n-<1> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.\n-<2> The `run` method is invoked once Quarkus starts, and the application stops when it finishes.\n+<.> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.\n+<.> The `@ActivateRequestContext` annotation is not strictly required for this example, but ensures you have access to context dependency injection. Allowing you to use API's such as Hibernate Panache.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0ODAzMg=="}, "originalCommit": {"oid": "703d48868ff2c78b6605f3ed42c170b55728a767"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM4OTA5Mw==", "bodyText": "what would be the cost\n\nNegligible. So in general, a command execution is a kind of a request. The only concern I have is that someone can use the command mode to execute a relatively long-lived app and since the automatic activation turns @RequestScoped into @ApplicationScoped it loses its meaning...", "url": "https://github.com/quarkusio/quarkus/pull/8809#discussion_r414389093", "createdAt": "2020-04-24T08:22:38Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "diffHunk": "@@ -20,25 +20,28 @@ that exit.\n In this document the `QuarkusApplication` instance is referred to as the application main,\n and a class with a Java main method is the Java main.\n \n-The simplest possible command mode application might appear as follows:\n+The simplest possible command mode application with access to Quarkus API's might appear as follows:\n \n [source,java]\n ----\n import io.quarkus.runtime.QuarkusApplication;\n import io.quarkus.runtime.annotations.QuarkusMain;\n \n-@QuarkusMain    // <1>\n+@QuarkusMain    // <.>\n public class HelloWorldMain implements QuarkusApplication {\n   @Override\n-  public int run(String... args) throws Exception {   // <2>\n+  @ActivateRequestContext // <.>\n+  public int run(String... args) throws Exception {   // <.>\n     System.out.println(\"Hello World\");\n     return 10;\n  }\n }\n ----\n-<1> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.\n-<2> The `run` method is invoked once Quarkus starts, and the application stops when it finishes.\n+<.> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.\n+<.> The `@ActivateRequestContext` annotation is not strictly required for this example, but ensures you have access to context dependency injection. Allowing you to use API's such as Hibernate Panache.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0ODAzMg=="}, "originalCommit": {"oid": "703d48868ff2c78b6605f3ed42c170b55728a767"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ5NjQ4Mw==", "bodyText": "I'm going to update this pr - cli's can easily be long lived and have multiple (even concurrent) requests thus it makes sense to be explicit wehn you want one over the other.", "url": "https://github.com/quarkusio/quarkus/pull/8809#discussion_r414496483", "createdAt": "2020-04-24T11:17:00Z", "author": {"login": "maxandersen"}, "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "diffHunk": "@@ -20,25 +20,28 @@ that exit.\n In this document the `QuarkusApplication` instance is referred to as the application main,\n and a class with a Java main method is the Java main.\n \n-The simplest possible command mode application might appear as follows:\n+The simplest possible command mode application with access to Quarkus API's might appear as follows:\n \n [source,java]\n ----\n import io.quarkus.runtime.QuarkusApplication;\n import io.quarkus.runtime.annotations.QuarkusMain;\n \n-@QuarkusMain    // <1>\n+@QuarkusMain    // <.>\n public class HelloWorldMain implements QuarkusApplication {\n   @Override\n-  public int run(String... args) throws Exception {   // <2>\n+  @ActivateRequestContext // <.>\n+  public int run(String... args) throws Exception {   // <.>\n     System.out.println(\"Hello World\");\n     return 10;\n  }\n }\n ----\n-<1> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.\n-<2> The `run` method is invoked once Quarkus starts, and the application stops when it finishes.\n+<.> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.\n+<.> The `@ActivateRequestContext` annotation is not strictly required for this example, but ensures you have access to context dependency injection. Allowing you to use API's such as Hibernate Panache.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0ODAzMg=="}, "originalCommit": {"oid": "703d48868ff2c78b6605f3ed42c170b55728a767"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3438, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}