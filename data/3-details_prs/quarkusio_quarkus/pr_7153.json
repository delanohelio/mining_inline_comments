{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczODkxMTUw", "number": 7153, "title": "Registering classes with @ConstructorProperties for Reflection for #7152", "bodyText": "First proposal on how classes with @ConstructorProperties annotated constructors could be registered for reflection. There fields aren't registered for now, because @ConstructorProperties only relates constructor parameters to getter methods.", "createdAt": "2020-02-11T21:28:28Z", "url": "https://github.com/quarkusio/quarkus/pull/7153", "merged": true, "mergeCommit": {"oid": "b5bff0ffa7619e51ea87c9769de4cfea1b4cb580"}, "closed": true, "closedAt": "2020-02-21T11:44:54Z", "author": {"login": "JohT"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDrUuygFqTM1NzcxNzU4Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGeQe5gFqTM2MjU3NDQ0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU3NzE3NTg2", "url": "https://github.com/quarkusio/quarkus/pull/7153#pullrequestreview-357717586", "createdAt": "2020-02-12T19:15:32Z", "commit": {"oid": "98cb49bb5e5c38d35a0c8f18b3b9b5537d2aa6ec"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOToxNTozM1rOFo7PvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxOToxNjowM1rOFo7Qzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1ODA0NQ==", "bodyText": "Please use a String for the name instead. I prefer we don't have any dependency to java.beans.", "url": "https://github.com/quarkusio/quarkus/pull/7153#discussion_r378458045", "createdAt": "2020-02-12T19:15:33Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/ConstructorPropertiesProcessor.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package io.quarkus.deployment;\n+\n+import java.beans.ConstructorProperties;\n+\n+import org.jboss.jandex.AnnotationInstance;\n+import org.jboss.jandex.ClassInfo;\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.MethodInfo;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+\n+/**\n+ * Registers all classes for reflection,\n+ * that contain a constructor annotated with {@link ConstructorProperties}.\n+ */\n+public class ConstructorPropertiesProcessor {\n+\n+    private static final DotName CONSTRUCTOR_PROPERTIES = DotName.createSimple(ConstructorProperties.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98cb49bb5e5c38d35a0c8f18b3b9b5537d2aa6ec"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ1ODMxOQ==", "bodyText": "Honestly, this is far less readable than a good old for loop.", "url": "https://github.com/quarkusio/quarkus/pull/7153#discussion_r378458319", "createdAt": "2020-02-12T19:16:03Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/ConstructorPropertiesProcessor.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package io.quarkus.deployment;\n+\n+import java.beans.ConstructorProperties;\n+\n+import org.jboss.jandex.AnnotationInstance;\n+import org.jboss.jandex.ClassInfo;\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.MethodInfo;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+\n+/**\n+ * Registers all classes for reflection,\n+ * that contain a constructor annotated with {@link ConstructorProperties}.\n+ */\n+public class ConstructorPropertiesProcessor {\n+\n+    private static final DotName CONSTRUCTOR_PROPERTIES = DotName.createSimple(ConstructorProperties.class.getName());\n+\n+    @BuildStep\n+    void build(BuildProducer<ReflectiveClassBuildItem> reflectiveClass, CombinedIndexBuildItem indexBuildItem) {\n+        indexBuildItem.getIndex().getAnnotations(CONSTRUCTOR_PROPERTIES).stream()\n+                .map(AnnotationInstance::target)\n+                .filter(MethodInfo.class::isInstance)\n+                .map(MethodInfo.class::cast)\n+                .map(MethodInfo::declaringClass)\n+                .map(ClassInfo::toString)\n+                .map(this::asReflectiveClassBuildItem)\n+                .forEach(reflectiveClass::produce);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98cb49bb5e5c38d35a0c8f18b3b9b5537d2aa6ec"}, "originalPosition": 32}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb18cc3e98748c0138bbb9f8aa9486fe98fb4356", "author": {"user": {"login": "JohT", "name": "Johannes"}}, "url": "https://github.com/quarkusio/quarkus/commit/bb18cc3e98748c0138bbb9f8aa9486fe98fb4356", "committedDate": "2020-02-13T06:40:09Z", "message": "#7152 Integration test corrected"}, "afterCommit": {"oid": "df76c0cc5553dbd1bbfe4e9322e9fba97218eb89", "author": {"user": {"login": "JohT", "name": "Johannes"}}, "url": "https://github.com/quarkusio/quarkus/commit/df76c0cc5553dbd1bbfe4e9322e9fba97218eb89", "committedDate": "2020-02-13T17:48:47Z", "message": "#7152 Classes with @ConstructorProperties for Reflection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNTAwMDM3", "url": "https://github.com/quarkusio/quarkus/pull/7153#pullrequestreview-360500037", "createdAt": "2020-02-18T16:46:27Z", "commit": {"oid": "df76c0cc5553dbd1bbfe4e9322e9fba97218eb89"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjo0NjoyN1rOFrKE5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxNjo0NjoyN1rOFrKE5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDc5ODE4Mg==", "bodyText": "Could you remove the link here? I would like to avoid having the import.\nOtherwise it looks good to me.", "url": "https://github.com/quarkusio/quarkus/pull/7153#discussion_r380798182", "createdAt": "2020-02-18T16:46:27Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/ConstructorPropertiesProcessor.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package io.quarkus.deployment;\n+\n+import java.beans.ConstructorProperties;\n+\n+import org.jboss.jandex.AnnotationInstance;\n+import org.jboss.jandex.AnnotationTarget;\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.IndexView;\n+import org.jboss.jandex.MethodInfo;\n+\n+import io.quarkus.deployment.annotations.BuildProducer;\n+import io.quarkus.deployment.annotations.BuildStep;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.nativeimage.ReflectiveClassBuildItem;\n+\n+/**\n+ * Registers all classes for reflection,\n+ * that contain a constructor annotated with {@link ConstructorProperties}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df76c0cc5553dbd1bbfe4e9322e9fba97218eb89"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df76c0cc5553dbd1bbfe4e9322e9fba97218eb89", "author": {"user": {"login": "JohT", "name": "Johannes"}}, "url": "https://github.com/quarkusio/quarkus/commit/df76c0cc5553dbd1bbfe4e9322e9fba97218eb89", "committedDate": "2020-02-13T17:48:47Z", "message": "#7152 Classes with @ConstructorProperties for Reflection"}, "afterCommit": {"oid": "85c8cbb29df793f22713344c4c1939376dfe857a", "author": {"user": {"login": "JohT", "name": "Johannes"}}, "url": "https://github.com/quarkusio/quarkus/commit/85c8cbb29df793f22713344c4c1939376dfe857a", "committedDate": "2020-02-19T06:38:04Z", "message": "#7152 Classes with @ConstructorProperties for Reflection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "85c8cbb29df793f22713344c4c1939376dfe857a", "author": {"user": {"login": "JohT", "name": "Johannes"}}, "url": "https://github.com/quarkusio/quarkus/commit/85c8cbb29df793f22713344c4c1939376dfe857a", "committedDate": "2020-02-19T06:38:04Z", "message": "#7152 Classes with @ConstructorProperties for Reflection"}, "afterCommit": {"oid": "f55366cf51ed7c5674023c42d1b3f4208dea96bb", "author": {"user": {"login": "JohT", "name": "Johannes"}}, "url": "https://github.com/quarkusio/quarkus/commit/f55366cf51ed7c5674023c42d1b3f4208dea96bb", "committedDate": "2020-02-19T17:31:50Z", "message": "#7152 Classes with @ConstructorProperties for Reflection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3236502ca80588c9bb5ac847d4cb867d55c37fec", "author": {"user": {"login": "JohT", "name": "Johannes"}}, "url": "https://github.com/quarkusio/quarkus/commit/3236502ca80588c9bb5ac847d4cb867d55c37fec", "committedDate": "2020-02-21T06:20:09Z", "message": "#7152 Classes with @ConstructorProperties for Reflection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f55366cf51ed7c5674023c42d1b3f4208dea96bb", "author": {"user": {"login": "JohT", "name": "Johannes"}}, "url": "https://github.com/quarkusio/quarkus/commit/f55366cf51ed7c5674023c42d1b3f4208dea96bb", "committedDate": "2020-02-19T17:31:50Z", "message": "#7152 Classes with @ConstructorProperties for Reflection"}, "afterCommit": {"oid": "3236502ca80588c9bb5ac847d4cb867d55c37fec", "author": {"user": {"login": "JohT", "name": "Johannes"}}, "url": "https://github.com/quarkusio/quarkus/commit/3236502ca80588c9bb5ac847d4cb867d55c37fec", "committedDate": "2020-02-21T06:20:09Z", "message": "#7152 Classes with @ConstructorProperties for Reflection"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNTc0NDQz", "url": "https://github.com/quarkusio/quarkus/pull/7153#pullrequestreview-362574443", "createdAt": "2020-02-21T11:44:47Z", "commit": {"oid": "3236502ca80588c9bb5ac847d4cb867d55c37fec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4920, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}