{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NDIwMDk5", "number": 14032, "title": "Refactor CacheResultInterceptor exceptions handling and tests", "bodyText": "The code from CacheResultInterceptor was simplified with 72ea4e8 but the corresponding tests were left behind at that time and are unnecessarily complicated today. I removed the deprecated part of the tests, added a new test for Errors and also simplified a bit the CacheResultInterceptor code related to exceptions handling.", "createdAt": "2020-12-22T23:20:51Z", "url": "https://github.com/quarkusio/quarkus/pull/14032", "merged": true, "mergeCommit": {"oid": "8c4404fca9c7565121eafa7e70dfe175bf0bd76d"}, "closed": true, "closedAt": "2020-12-30T16:36:59Z", "author": {"login": "gwenneg"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdoy5HtgH2gAyNTQ0NDIwMDk5OjIyMGVkZTk0YThiYzEzNjdhNzE4OGI4NzU4Zjg2ODA0NzUwODE3MzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdrSCMcAFqTU2MDExOTY2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "220ede94a8bc1367a7188b8758f8680475081732", "author": {"user": {"login": "gwenneg", "name": "Gwenneg Lepage"}}, "url": "https://github.com/quarkusio/quarkus/commit/220ede94a8bc1367a7188b8758f8680475081732", "committedDate": "2020-12-22T23:11:51Z", "message": "Refactor CacheResultInterceptor exceptions handling and tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDIzMDQ5", "url": "https://github.com/quarkusio/quarkus/pull/14032#pullrequestreview-557423049", "createdAt": "2020-12-22T23:24:21Z", "commit": {"oid": "220ede94a8bc1367a7188b8758f8680475081732"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMzoyNDoyMVrOIKMFGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMzoyNDoyMVrOIKMFGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU1NDU4Ng==", "bodyText": "There used to be two code branches and we had to deal with asynchronous cache computations before, but today cache computations are done synchronously on the calling thread so this method has become completely useless.", "url": "https://github.com/quarkusio/quarkus/pull/14032#discussion_r547554586", "createdAt": "2020-12-22T23:24:21Z", "author": {"login": "gwenneg"}, "path": "extensions/cache/deployment/src/test/java/io/quarkus/cache/test/runtime/ThrowExecutionExceptionCauseTest.java", "diffHunk": "@@ -55,74 +48,13 @@ public void testCheckedExceptionThrowDuringCacheComputation() {\n     }\n \n     @Test\n-    public void testRuntimeExceptionThrowDuringCacheComputationWithLockTimeout() {\n-        UnsupportedOperationException e = assertThrows(UnsupportedOperationException.class, () -> {\n-            cachedService.throwRuntimeExceptionDuringCacheComputationWithLockTimeout();\n+    public void testErrorThrowDuringCacheComputation() {\n+        OutOfMemoryError e = assertThrows(OutOfMemoryError.class, () -> {\n+            cachedService.throwErrorDuringCacheComputation();\n         });\n         assertEquals(FORCED_EXCEPTION_MESSAGE, e.getMessage());\n     }\n \n-    @Test\n-    public void testBothLockTimeoutCodeBranches() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "220ede94a8bc1367a7188b8758f8680475081732"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDIzMzIz", "url": "https://github.com/quarkusio/quarkus/pull/14032#pullrequestreview-557423323", "createdAt": "2020-12-22T23:25:13Z", "commit": {"oid": "220ede94a8bc1367a7188b8758f8680475081732"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMzoyNToxM1rOIKMGKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMzoyNToxM1rOIKMGKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU1NDg1Ng==", "bodyText": "That was actually wrong, interceptors can throw any Throwable \ud83d\ude04", "url": "https://github.com/quarkusio/quarkus/pull/14032#discussion_r547554856", "createdAt": "2020-12-22T23:25:13Z", "author": {"login": "gwenneg"}, "path": "extensions/cache/runtime/src/main/java/io/quarkus/cache/runtime/CacheResultInterceptor.java", "diffHunk": "@@ -65,24 +65,20 @@ public Object apply(Object k) {\n              * thrown during a CompletionStage execution.\n              */\n             if (e.getCause() instanceof CacheException) {\n-                // The ExecutionException was caused by a CacheException (most likely case).\n-                CacheException cacheException = (CacheException) e.getCause();\n-                // Let's see if we can throw the root cause of the exceptions chain.\n-                if (cacheException.getCause() instanceof Exception) {\n-                    // If it is an Exception, the root cause is thrown.\n-                    throw (Exception) cacheException.getCause();\n+                /*\n+                 * The ExecutionException was caused by a CacheException (most likely case).\n+                 * Let's throw the CacheException cause if possible or the CacheException itself otherwise.\n+                 */\n+                if (e.getCause().getCause() != null) {\n+                    throw e.getCause().getCause();\n                 } else {\n-                    // If it is an Error, the CacheException itself is thrown because interceptors have to throw exceptions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "220ede94a8bc1367a7188b8758f8680475081732"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMTE5NjY2", "url": "https://github.com/quarkusio/quarkus/pull/14032#pullrequestreview-560119666", "createdAt": "2020-12-30T16:36:40Z", "commit": {"oid": "220ede94a8bc1367a7188b8758f8680475081732"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4253, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}