{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NTkxOTAz", "number": 9190, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo0NDo0N1rOD7JMSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo0OTowOVrOD7JS-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMzQzMTc5OnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/ReflectiveHierarchyStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo0NDo0N1rOGTSl5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo1NzowOFrOGTTD8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MDc0Mw==", "bodyText": "then the ensure?", "url": "https://github.com/quarkusio/quarkus/pull/9190#discussion_r422880743", "createdAt": "2020-05-11T08:44:47Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/ReflectiveHierarchyStep.java", "diffHunk": "@@ -82,9 +74,26 @@ public void build() throws Exception {\n         }\n     }\n \n-    private void addReflectiveHierarchy(ReflectiveHierarchyBuildItem reflectiveHierarchyBuildItem, Type type,\n+    private void removeIgnored(Set<DotName> unindexedClasses, List<ReflectiveHierarchyIgnoreWarningBuildItem> ignored) {\n+        if (ignored.isEmpty()) {\n+            return;\n+        }\n+        Set<DotName> ignoredWarnings = new HashSet<>();\n+        // if at least one of the predicates indicates that warning should be ignored, then the ensure that it is ignored", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb98be7d6cd3702acb7eca73013ad39fd5eab8f"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4ODQzMg==", "bodyText": "Fixed", "url": "https://github.com/quarkusio/quarkus/pull/9190#discussion_r422888432", "createdAt": "2020-05-11T08:57:08Z", "author": {"login": "geoand"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/ReflectiveHierarchyStep.java", "diffHunk": "@@ -82,9 +74,26 @@ public void build() throws Exception {\n         }\n     }\n \n-    private void addReflectiveHierarchy(ReflectiveHierarchyBuildItem reflectiveHierarchyBuildItem, Type type,\n+    private void removeIgnored(Set<DotName> unindexedClasses, List<ReflectiveHierarchyIgnoreWarningBuildItem> ignored) {\n+        if (ignored.isEmpty()) {\n+            return;\n+        }\n+        Set<DotName> ignoredWarnings = new HashSet<>();\n+        // if at least one of the predicates indicates that warning should be ignored, then the ensure that it is ignored", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MDc0Mw=="}, "originalCommit": {"oid": "1fb98be7d6cd3702acb7eca73013ad39fd5eab8f"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMzQ0ODkxOnYy", "diffSide": "LEFT", "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/ReflectiveHierarchyStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo0OTowOVrOGTSwBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQwODo1MzoxOVrOGTS6uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MzMzMg==", "bodyText": "Please do that in a separate commit next time. It makes the review far harder than it needs to be.", "url": "https://github.com/quarkusio/quarkus/pull/9190#discussion_r422883332", "createdAt": "2020-05-11T08:49:09Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/ReflectiveHierarchyStep.java", "diffHunk": "@@ -36,23 +34,17 @@\n \n     private static final Logger log = Logger.getLogger(ReflectiveHierarchyStep.class);\n \n-    @Inject\n-    List<ReflectiveHierarchyBuildItem> hierarchy;\n-\n-    @Inject\n-    CombinedIndexBuildItem combinedIndexBuildItem;\n-\n-    @Inject\n-    BuildProducer<ReflectiveClassBuildItem> reflectiveClass;\n-\n-    @Inject\n-    List<ReflectiveHierarchyIgnoreWarningBuildItem> ignored;\n-\n-    @Inject\n-    List<ReflectiveClassFinalFieldsWritablePredicateBuildItem> finalFieldsWritablePredicates;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb98be7d6cd3702acb7eca73013ad39fd5eab8f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4NjA3Mg==", "bodyText": "You are absolutely right. I thought of it myself, but I guess I decided against it because I (stupidly) decided it would be best to economize on commits \ud83d\ude06", "url": "https://github.com/quarkusio/quarkus/pull/9190#discussion_r422886072", "createdAt": "2020-05-11T08:53:19Z", "author": {"login": "geoand"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/ReflectiveHierarchyStep.java", "diffHunk": "@@ -36,23 +34,17 @@\n \n     private static final Logger log = Logger.getLogger(ReflectiveHierarchyStep.class);\n \n-    @Inject\n-    List<ReflectiveHierarchyBuildItem> hierarchy;\n-\n-    @Inject\n-    CombinedIndexBuildItem combinedIndexBuildItem;\n-\n-    @Inject\n-    BuildProducer<ReflectiveClassBuildItem> reflectiveClass;\n-\n-    @Inject\n-    List<ReflectiveHierarchyIgnoreWarningBuildItem> ignored;\n-\n-    @Inject\n-    List<ReflectiveClassFinalFieldsWritablePredicateBuildItem> finalFieldsWritablePredicates;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjg4MzMzMg=="}, "originalCommit": {"oid": "1fb98be7d6cd3702acb7eca73013ad39fd5eab8f"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3165, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}