{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NjI2ODY4", "number": 7302, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTowMTozN1rODhcQsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxOToyMzo0OVrODhpk0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MzkyNjI2OnYy", "diffSide": "RIGHT", "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/NativeTestExtension.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTowMTozN1rOFsLFcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTowNDowMFrOFsLKiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg2MzI4Mw==", "bodyText": "in QuarkusTest tests -> in NativeImageTest tests?", "url": "https://github.com/quarkusio/quarkus/pull/7302#discussion_r381863283", "createdAt": "2020-02-20T09:01:37Z", "author": {"login": "Ladicek"}, "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/NativeTestExtension.java", "diffHunk": "@@ -71,6 +75,23 @@ public void beforeAll(ExtensionContext extensionContext) throws Exception {\n         }\n     }\n \n+    private void ensureNoInjectAnnotationIsUsed(Class<?> testClass) {\n+        Class<?> current = testClass;\n+        while (current.getSuperclass() != null) {\n+            for (Field field : current.getDeclaredFields()) {\n+                Inject injectAnnotation = field.getAnnotation(Inject.class);\n+                if (injectAnnotation != null) {\n+                    throw new JUnitException(\n+                            \"@Inject is not supported in QuarkusTest tests. Offending field is \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da246f6a74de040df5ef43cb34ae9176d49a0058"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg2NDU4NA==", "bodyText": "Thanks!", "url": "https://github.com/quarkusio/quarkus/pull/7302#discussion_r381864584", "createdAt": "2020-02-20T09:04:00Z", "author": {"login": "geoand"}, "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/NativeTestExtension.java", "diffHunk": "@@ -71,6 +75,23 @@ public void beforeAll(ExtensionContext extensionContext) throws Exception {\n         }\n     }\n \n+    private void ensureNoInjectAnnotationIsUsed(Class<?> testClass) {\n+        Class<?> current = testClass;\n+        while (current.getSuperclass() != null) {\n+            for (Field field : current.getDeclaredFields()) {\n+                Inject injectAnnotation = field.getAnnotation(Inject.class);\n+                if (injectAnnotation != null) {\n+                    throw new JUnitException(\n+                            \"@Inject is not supported in QuarkusTest tests. Offending field is \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg2MzI4Mw=="}, "originalCommit": {"oid": "da246f6a74de040df5ef43cb34ae9176d49a0058"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NjEwNzY4OnYy", "diffSide": "RIGHT", "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/NativeImageTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxOToyMzo0OVrOFsgH3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxOTo0MTo0MVrOFsgsrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwNzk2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * {@link @QuarkusTest} so the test class structure must be take this into account\n          \n          \n            \n             * {@link @QuarkusTest} so the test class structure must take this into account.", "url": "https://github.com/quarkusio/quarkus/pull/7302#discussion_r382207965", "createdAt": "2020-02-20T19:23:49Z", "author": {"login": "gsmet"}, "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/NativeImageTest.java", "diffHunk": "@@ -20,6 +20,9 @@\n  * run, it is expected that the JVM tests will be standard unit tests that are\n  * executed by surefire, while the native image tests will be integration tests\n  * executed by failsafe.\n+ * This also means that injection of beans into a test class using {@code @Inject} is not supported\n+ * in native image tests. Such injection is only possible in tests injected with\n+ * {@link @QuarkusTest} so the test class structure must be take this into account", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0761d1bd1286e91b17c108f5c7b954f1dd0d5f3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIxNzM4OQ==", "bodyText": "It wouldn't have been a proper PR of mine unless it had a typo :). Thanks for spotting it", "url": "https://github.com/quarkusio/quarkus/pull/7302#discussion_r382217389", "createdAt": "2020-02-20T19:41:41Z", "author": {"login": "geoand"}, "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/NativeImageTest.java", "diffHunk": "@@ -20,6 +20,9 @@\n  * run, it is expected that the JVM tests will be standard unit tests that are\n  * executed by surefire, while the native image tests will be integration tests\n  * executed by failsafe.\n+ * This also means that injection of beans into a test class using {@code @Inject} is not supported\n+ * in native image tests. Such injection is only possible in tests injected with\n+ * {@link @QuarkusTest} so the test class structure must be take this into account", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjIwNzk2NQ=="}, "originalCommit": {"oid": "d0761d1bd1286e91b17c108f5c7b954f1dd0d5f3"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 119, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}