{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1OTQ2ODUz", "number": 10078, "title": "Abstract REST Data resource and entity info", "bodyText": "", "createdAt": "2020-06-17T15:58:05Z", "url": "https://github.com/quarkusio/quarkus/pull/10078", "merged": true, "mergeCommit": {"oid": "3bd79a07133258d3b76350118e069fc3f45388e0"}, "closed": true, "closedAt": "2020-08-17T09:50:33Z", "author": {"login": "gytis"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsMBCwgFqTQzMjU0Nzg3Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc_vTuwAFqTQ2ODMyMjE2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNTQ3ODc3", "url": "https://github.com/quarkusio/quarkus/pull/10078#pullrequestreview-432547877", "createdAt": "2020-06-17T15:58:44Z", "commit": {"oid": "618e76d64832cf2a7c1cb5d2922bb6996b843ce5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTo1ODo0NVrOGlMgqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNTo1ODo0NVrOGlMgqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTQ2Ng==", "bodyText": "@FroMage could you verify that this is a correct way to get a setter?", "url": "https://github.com/quarkusio/quarkus/pull/10078#discussion_r441655466", "createdAt": "2020-06-17T15:58:45Z", "author": {"login": "gytis"}, "path": "extensions/panache/hibernate-orm-rest-data-panache/deployment/src/main/java/io/quarkus/hibernate/orm/rest/data/panache/deployment/RestDataEntityInfoProvider.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package io.quarkus.hibernate.orm.rest.data.panache.deployment;\n+\n+import javax.persistence.Id;\n+\n+import org.hibernate.bytecode.enhance.spi.EnhancerConstants;\n+import org.jboss.jandex.ClassInfo;\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.FieldInfo;\n+import org.jboss.jandex.IndexView;\n+import org.jboss.jandex.MethodInfo;\n+\n+import io.quarkus.deployment.bean.JavaBeanUtil;\n+import io.quarkus.gizmo.MethodDescriptor;\n+import io.quarkus.hibernate.orm.panache.PanacheEntityBase;\n+import io.quarkus.rest.data.panache.deployment.RestDataEntityInfo;\n+\n+final class RestDataEntityInfoProvider {\n+\n+    private static final DotName PANACHE_ENTITY_BASE = DotName.createSimple(PanacheEntityBase.class.getName());\n+\n+    private final IndexView index;\n+\n+    RestDataEntityInfoProvider(IndexView index) {\n+        this.index = index;\n+    }\n+\n+    RestDataEntityInfo get(String type) {\n+        ClassInfo classInfo = index.getClassByName(DotName.createSimple(type));\n+        FieldInfo idField = getIdField(classInfo);\n+        return new RestDataEntityInfo(classInfo.toString(), idField, getSetter(classInfo, idField));\n+    }\n+\n+    private FieldInfo getIdField(ClassInfo classInfo) {\n+        ClassInfo tmpClassInfo = classInfo;\n+        while (tmpClassInfo != null) {\n+            for (FieldInfo field : tmpClassInfo.fields()) {\n+                if (field.hasAnnotation(DotName.createSimple(Id.class.getName()))) {\n+                    return field;\n+                }\n+            }\n+            if (classInfo.superName() != null) {\n+                tmpClassInfo = index.getClassByName(classInfo.superName());\n+            } else {\n+                tmpClassInfo = null;\n+            }\n+        }\n+        throw new IllegalArgumentException(\"Couldn't find id field of \" + classInfo);\n+    }\n+\n+    private MethodDescriptor getSetter(ClassInfo entityClass, FieldInfo field) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618e76d64832cf2a7c1cb5d2922bb6996b843ce5"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODA2NDE0", "url": "https://github.com/quarkusio/quarkus/pull/10078#pullrequestreview-432806414", "createdAt": "2020-06-17T21:58:36Z", "commit": {"oid": "618e76d64832cf2a7c1cb5d2922bb6996b843ce5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMTo1ODozNlrOGlY15g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMjowMzoxNlrOGlY9OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1NzUxMA==", "bodyText": "This part is OK.", "url": "https://github.com/quarkusio/quarkus/pull/10078#discussion_r441857510", "createdAt": "2020-06-17T21:58:36Z", "author": {"login": "FroMage"}, "path": "extensions/panache/hibernate-orm-rest-data-panache/deployment/src/main/java/io/quarkus/hibernate/orm/rest/data/panache/deployment/RestDataEntityInfoProvider.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package io.quarkus.hibernate.orm.rest.data.panache.deployment;\n+\n+import javax.persistence.Id;\n+\n+import org.hibernate.bytecode.enhance.spi.EnhancerConstants;\n+import org.jboss.jandex.ClassInfo;\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.FieldInfo;\n+import org.jboss.jandex.IndexView;\n+import org.jboss.jandex.MethodInfo;\n+\n+import io.quarkus.deployment.bean.JavaBeanUtil;\n+import io.quarkus.gizmo.MethodDescriptor;\n+import io.quarkus.hibernate.orm.panache.PanacheEntityBase;\n+import io.quarkus.rest.data.panache.deployment.RestDataEntityInfo;\n+\n+final class RestDataEntityInfoProvider {\n+\n+    private static final DotName PANACHE_ENTITY_BASE = DotName.createSimple(PanacheEntityBase.class.getName());\n+\n+    private final IndexView index;\n+\n+    RestDataEntityInfoProvider(IndexView index) {\n+        this.index = index;\n+    }\n+\n+    RestDataEntityInfo get(String type) {\n+        ClassInfo classInfo = index.getClassByName(DotName.createSimple(type));\n+        FieldInfo idField = getIdField(classInfo);\n+        return new RestDataEntityInfo(classInfo.toString(), idField, getSetter(classInfo, idField));\n+    }\n+\n+    private FieldInfo getIdField(ClassInfo classInfo) {\n+        ClassInfo tmpClassInfo = classInfo;\n+        while (tmpClassInfo != null) {\n+            for (FieldInfo field : tmpClassInfo.fields()) {\n+                if (field.hasAnnotation(DotName.createSimple(Id.class.getName()))) {\n+                    return field;\n+                }\n+            }\n+            if (classInfo.superName() != null) {\n+                tmpClassInfo = index.getClassByName(classInfo.superName());\n+            } else {\n+                tmpClassInfo = null;\n+            }\n+        }\n+        throw new IllegalArgumentException(\"Couldn't find id field of \" + classInfo);\n+    }\n+\n+    private MethodDescriptor getSetter(ClassInfo entityClass, FieldInfo field) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY1NTQ2Ng=="}, "originalCommit": {"oid": "618e76d64832cf2a7c1cb5d2922bb6996b843ce5"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg1OTM4NA==", "bodyText": "This is not OK:\n\nyou should target \"set\"+capitalize(field.name) rather than go directly via the Hibernate method.\nthis won't work for generics:\n\n@Entity\npublic class MyEntity extends EntitySupertype<String> {}\n@MappedSuperclass\npublic class EntitySupertype<IdType> extends PanacheEntityBase{\n @Id\n public IdType id;\n}\nHere, field.type() is going to return IdType even though in your case it's really String. Note that this issue may also affect your use of the id field without setter and the generic entity setter. A few tests will tell you if they're affected.", "url": "https://github.com/quarkusio/quarkus/pull/10078#discussion_r441859384", "createdAt": "2020-06-17T22:03:16Z", "author": {"login": "FroMage"}, "path": "extensions/panache/hibernate-orm-rest-data-panache/deployment/src/main/java/io/quarkus/hibernate/orm/rest/data/panache/deployment/RestDataEntityInfoProvider.java", "diffHunk": "@@ -0,0 +1,86 @@\n+package io.quarkus.hibernate.orm.rest.data.panache.deployment;\n+\n+import javax.persistence.Id;\n+\n+import org.hibernate.bytecode.enhance.spi.EnhancerConstants;\n+import org.jboss.jandex.ClassInfo;\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.FieldInfo;\n+import org.jboss.jandex.IndexView;\n+import org.jboss.jandex.MethodInfo;\n+\n+import io.quarkus.deployment.bean.JavaBeanUtil;\n+import io.quarkus.gizmo.MethodDescriptor;\n+import io.quarkus.hibernate.orm.panache.PanacheEntityBase;\n+import io.quarkus.rest.data.panache.deployment.RestDataEntityInfo;\n+\n+final class RestDataEntityInfoProvider {\n+\n+    private static final DotName PANACHE_ENTITY_BASE = DotName.createSimple(PanacheEntityBase.class.getName());\n+\n+    private final IndexView index;\n+\n+    RestDataEntityInfoProvider(IndexView index) {\n+        this.index = index;\n+    }\n+\n+    RestDataEntityInfo get(String type) {\n+        ClassInfo classInfo = index.getClassByName(DotName.createSimple(type));\n+        FieldInfo idField = getIdField(classInfo);\n+        return new RestDataEntityInfo(classInfo.toString(), idField, getSetter(classInfo, idField));\n+    }\n+\n+    private FieldInfo getIdField(ClassInfo classInfo) {\n+        ClassInfo tmpClassInfo = classInfo;\n+        while (tmpClassInfo != null) {\n+            for (FieldInfo field : tmpClassInfo.fields()) {\n+                if (field.hasAnnotation(DotName.createSimple(Id.class.getName()))) {\n+                    return field;\n+                }\n+            }\n+            if (classInfo.superName() != null) {\n+                tmpClassInfo = index.getClassByName(classInfo.superName());\n+            } else {\n+                tmpClassInfo = null;\n+            }\n+        }\n+        throw new IllegalArgumentException(\"Couldn't find id field of \" + classInfo);\n+    }\n+\n+    private MethodDescriptor getSetter(ClassInfo entityClass, FieldInfo field) {\n+        if (isPanacheEntity(entityClass)) {\n+            return getPanacheEntitySetter(entityClass, field);\n+        }\n+        return getGenericEntitySetter(entityClass, field);\n+    }\n+\n+    private boolean isPanacheEntity(ClassInfo entityClass) {\n+        if (entityClass == null || entityClass.superName() == null) {\n+            return false;\n+        }\n+        if (PANACHE_ENTITY_BASE.equals(entityClass.superName())) {\n+            return true;\n+        }\n+        return isPanacheEntity(index.getClassByName(entityClass.superName()));\n+    }\n+\n+    private MethodDescriptor getPanacheEntitySetter(ClassInfo entityClass, FieldInfo field) {\n+        return MethodDescriptor.ofMethod(entityClass.toString(),\n+                EnhancerConstants.PERSISTENT_FIELD_WRITER_PREFIX + field.name(), void.class, field.type().toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618e76d64832cf2a7c1cb5d2922bb6996b843ce5"}, "originalPosition": 69}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "618e76d64832cf2a7c1cb5d2922bb6996b843ce5", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/618e76d64832cf2a7c1cb5d2922bb6996b843ce5", "committedDate": "2020-06-17T15:50:37Z", "message": "Abstract REST Data resource and entity info"}, "afterCommit": {"oid": "1ca6d133be19b265b831bccfc23d2804fb9b2f14", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/1ca6d133be19b265b831bccfc23d2804fb9b2f14", "committedDate": "2020-06-18T11:38:58Z", "message": "Abstract REST Data resource and entity info"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ca6d133be19b265b831bccfc23d2804fb9b2f14", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/1ca6d133be19b265b831bccfc23d2804fb9b2f14", "committedDate": "2020-06-18T11:38:58Z", "message": "Abstract REST Data resource and entity info"}, "afterCommit": {"oid": "216ad8334a34db69026357d2a9ae435b4d565186", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/216ad8334a34db69026357d2a9ae435b4d565186", "committedDate": "2020-06-22T12:27:19Z", "message": "Revert \"Revert making the fields protected for now\"\n\nThis reverts commit 6cd1f0a7f310105943221b320509c1214029ab43."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "216ad8334a34db69026357d2a9ae435b4d565186", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/216ad8334a34db69026357d2a9ae435b4d565186", "committedDate": "2020-06-22T12:27:19Z", "message": "Revert \"Revert making the fields protected for now\"\n\nThis reverts commit 6cd1f0a7f310105943221b320509c1214029ab43."}, "afterCommit": {"oid": "ebfddbcab393a9775feda30d8f9f4d295d58333b", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/ebfddbcab393a9775feda30d8f9f4d295d58333b", "committedDate": "2020-06-23T07:33:28Z", "message": "Revert \"Revert making the fields protected for now\"\n\nThis reverts commit 6cd1f0a7f310105943221b320509c1214029ab43."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ebfddbcab393a9775feda30d8f9f4d295d58333b", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/ebfddbcab393a9775feda30d8f9f4d295d58333b", "committedDate": "2020-06-23T07:33:28Z", "message": "Revert \"Revert making the fields protected for now\"\n\nThis reverts commit 6cd1f0a7f310105943221b320509c1214029ab43."}, "afterCommit": {"oid": "5c3b56359086c23f0938f91c5459a6be23256735", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/5c3b56359086c23f0938f91c5459a6be23256735", "committedDate": "2020-07-02T13:42:02Z", "message": "Revert \"Revert making the fields protected for now\"\n\nThis reverts commit 6cd1f0a7f310105943221b320509c1214029ab43."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c3b56359086c23f0938f91c5459a6be23256735", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/5c3b56359086c23f0938f91c5459a6be23256735", "committedDate": "2020-07-02T13:42:02Z", "message": "Revert \"Revert making the fields protected for now\"\n\nThis reverts commit 6cd1f0a7f310105943221b320509c1214029ab43."}, "afterCommit": {"oid": "b819d090b5c803c4bb4bfd2fe7922f9931ef1834", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/b819d090b5c803c4bb4bfd2fe7922f9931ef1834", "committedDate": "2020-07-21T13:07:17Z", "message": "Revert \"Revert making the fields protected for now\"\n\nThis reverts commit 6cd1f0a7f310105943221b320509c1214029ab43."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b819d090b5c803c4bb4bfd2fe7922f9931ef1834", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/b819d090b5c803c4bb4bfd2fe7922f9931ef1834", "committedDate": "2020-07-21T13:07:17Z", "message": "Revert \"Revert making the fields protected for now\"\n\nThis reverts commit 6cd1f0a7f310105943221b320509c1214029ab43."}, "afterCommit": {"oid": "d3c9e5a7881f078fcb9cc75f833b216bf27a09f9", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/d3c9e5a7881f078fcb9cc75f833b216bf27a09f9", "committedDate": "2020-08-06T11:16:22Z", "message": "Revert \"Revert making the fields protected for now\"\n\nThis reverts commit 6cd1f0a7f310105943221b320509c1214029ab43."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92d7ee78ded3647e9a35474d796de5de51e7646f", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/92d7ee78ded3647e9a35474d796de5de51e7646f", "committedDate": "2020-08-10T09:33:11Z", "message": "Abstract REST Data resource and entity info"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62505279fb59ce9f28db8abf7b81e9a1ae721fe0", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/62505279fb59ce9f28db8abf7b81e9a1ae721fe0", "committedDate": "2020-08-10T09:33:11Z", "message": "Revert \"Revert making the fields protected for now\"\n\nThis reverts commit 6cd1f0a7f310105943221b320509c1214029ab43."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3c9e5a7881f078fcb9cc75f833b216bf27a09f9", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/d3c9e5a7881f078fcb9cc75f833b216bf27a09f9", "committedDate": "2020-08-06T11:16:22Z", "message": "Revert \"Revert making the fields protected for now\"\n\nThis reverts commit 6cd1f0a7f310105943221b320509c1214029ab43."}, "afterCommit": {"oid": "62505279fb59ce9f28db8abf7b81e9a1ae721fe0", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/62505279fb59ce9f28db8abf7b81e9a1ae721fe0", "committedDate": "2020-08-10T09:33:11Z", "message": "Revert \"Revert making the fields protected for now\"\n\nThis reverts commit 6cd1f0a7f310105943221b320509c1214029ab43."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MzIyMTYx", "url": "https://github.com/quarkusio/quarkus/pull/10078#pullrequestreview-468322161", "createdAt": "2020-08-17T09:50:24Z", "commit": {"oid": "62505279fb59ce9f28db8abf7b81e9a1ae721fe0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4258, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}