{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NTgzNTQ5", "number": 7254, "title": "Quartz - make it possible to access the underlying scheduler instance", "bodyText": "resolves #7246", "createdAt": "2020-02-18T12:13:24Z", "url": "https://github.com/quarkusio/quarkus/pull/7254", "merged": true, "mergeCommit": {"oid": "8cecc2aa1ac86831d5b3319a3560a3e8aa66da2b"}, "closed": true, "closedAt": "2020-02-20T18:18:12Z", "author": {"login": "mkouba"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFhHH0gFqTM2MDI5MjA0OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGMh8jABqjMwNTY1NDkwMzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMjkyMDQ5", "url": "https://github.com/quarkusio/quarkus/pull/7254#pullrequestreview-360292049", "createdAt": "2020-02-18T12:18:24Z", "commit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjoxODoyNFrOFrANiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjoyOTowOVrOFrAgyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzNjU1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      Arc.container().instance(TaskBean.class).get().perform(); <3>\n          \n          \n            \n                      Arc.container().instance(TaskBean.class).get(). performTask(); <3>", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r380636552", "createdAt": "2020-02-18T12:18:24Z", "author": {"login": "machi1990"}, "path": "docs/src/main/asciidoc/quartz.adoc", "diffHunk": "@@ -124,6 +124,58 @@ public class TaskBean {\n 3. Create a new `Task` with the current start time.\n 4. Persist the task in database using https://quarkus.io/guides/hibernate-orm-panache[Panache].\n \n+=== Scheduling Jobs Programatically\n+\n+It is also possible to leverage the Quartz API directly.\n+You can inject the underlying `org.quartz.Scheduler` in any bean:\n+\n+[source,java]\n+----\n+package org.acme.quartz;\n+\n+@ApplicationScoped\n+public class TaskBean {\n+\n+    @Inject\n+    org.quartz.Scheduler quartz; <1>\n+    \n+    void onStart(@Observes StartupEvent event) {\n+       JobDetail job = JobBuilder.newJob(MyJob.class)\n+                         .withIdentity(\"myJob\", \"myGroup\")\n+                         .build();\n+       Trigger trigger = TriggerBuilder.newTrigger()\n+                            .withIdentity(\"myTrigger\", \"myGroup\")\n+                            .startNow()\n+                            .withSchedule(\n+                               SimpleScheduleBuilder.simpleSchedule()\n+                                  .withIntervalInSeconds(10)\n+                                  .repeatForever())\n+                            .build();\n+       quartz.scheduleJob(job, trigger); <2>\n+    }\n+    \n+    @Transactional\n+    void performTask() {\n+        Task task = new Task();\n+        task.persist();\n+    }\n+    \n+    // A new instance of MyJob is created by Quartz for every job execution\n+    static class MyJob implements Job {\n+    \n+       public void execute(JobExecutionContext context) throws JobExecutionException {\n+          Arc.container().instance(TaskBean.class).get().perform(); <3>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzODg3MA==", "bodyText": "defaultValue is not necessary. boolean config items defaults to false", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r380638870", "createdAt": "2020-02-18T12:23:24Z", "author": {"login": "machi1990"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzRuntimeConfig.java", "diffHunk": "@@ -19,4 +19,12 @@\n     @ConfigItem(defaultValue = \"5\")\n     public int threadPriority;\n \n+    /**\n+     * By default, the scheduler is not started unless a {@link io.quarkus.scheduler.Scheduled} business method is found.\n+     * If set to true the scheduler will be started even if no scheduled business methods are found. This is necessary for\n+     * \"pure\" programmatic scheduling.\n+     */\n+    @ConfigItem(defaultValue = \"false\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0MDkzMQ==", "bodyText": "We should probably update Quartz QS  with this example", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r380640931", "createdAt": "2020-02-18T12:28:01Z", "author": {"login": "machi1990"}, "path": "docs/src/main/asciidoc/quartz.adoc", "diffHunk": "@@ -124,6 +124,58 @@ public class TaskBean {\n 3. Create a new `Task` with the current start time.\n 4. Persist the task in database using https://quarkus.io/guides/hibernate-orm-panache[Panache].\n \n+=== Scheduling Jobs Programatically\n+\n+It is also possible to leverage the Quartz API directly.\n+You can inject the underlying `org.quartz.Scheduler` in any bean:\n+\n+[source,java]\n+----\n+package org.acme.quartz;\n+\n+@ApplicationScoped\n+public class TaskBean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0MTQ4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                .addAsResource(new StringAsset(\"quarkus.quartz-runtime.force-start=true\"),\n          \n          \n            \n                                .addAsResource(new StringAsset(\"quarkus.quartz.force-start=true\"),", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r380641480", "createdAt": "2020-02-18T12:29:09Z", "author": {"login": "machi1990"}, "path": "extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/InjectQuartzSchedulerTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package io.quarkus.quartz.test;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.enterprise.event.Observes;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+import org.quartz.Job;\n+import org.quartz.JobBuilder;\n+import org.quartz.JobDetail;\n+import org.quartz.JobExecutionContext;\n+import org.quartz.JobExecutionException;\n+import org.quartz.Scheduler;\n+import org.quartz.SchedulerException;\n+import org.quartz.SimpleScheduleBuilder;\n+import org.quartz.Trigger;\n+import org.quartz.TriggerBuilder;\n+\n+import io.quarkus.runtime.StartupEvent;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class InjectQuartzSchedulerTest {\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest test = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(Starter.class)\n+                    .addAsResource(new StringAsset(\"quarkus.quartz-runtime.force-start=true\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c62c68de394ecfee8e63325e5b629d9d3e31dd0", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/2c62c68de394ecfee8e63325e5b629d9d3e31dd0", "committedDate": "2020-02-19T10:38:39Z", "message": "Quartz - make it possible to access the underlying scheduler instance\n\n- resolves #7246"}, "afterCommit": {"oid": "e88272e3b71ed4925446245d26319651920a8769", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/e88272e3b71ed4925446245d26319651920a8769", "committedDate": "2020-02-19T10:39:39Z", "message": "Quartz - make it possible to access the underlying scheduler instance\n\n- resolves #7246"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMDEwOTEw", "url": "https://github.com/quarkusio/quarkus/pull/7254#pullrequestreview-361010910", "createdAt": "2020-02-19T10:46:44Z", "commit": {"oid": "e88272e3b71ed4925446245d26319651920a8769"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxMTIyMzU5", "url": "https://github.com/quarkusio/quarkus/pull/7254#pullrequestreview-361122359", "createdAt": "2020-02-19T13:48:53Z", "commit": {"oid": "e88272e3b71ed4925446245d26319651920a8769"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzo0ODo1M1rOFrot0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzo0ODo1M1rOFrot0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMDE3Ng==", "bodyText": "Should we use @DefaultBean here?", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r381300176", "createdAt": "2020-02-19T13:48:53Z", "author": {"login": "gastaldi"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "diffHunk": "@@ -56,8 +59,15 @@\n     private final AtomicInteger triggerNameSequence;\n     private final Map<String, ScheduledInvoker> invokers;\n \n+    @Produces\n+    @Singleton", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e88272e3b71ed4925446245d26319651920a8769"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c37a1bd0292537324155ab5514a0ab431207baad", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/c37a1bd0292537324155ab5514a0ab431207baad", "committedDate": "2020-02-20T15:05:22Z", "message": "Quartz - make it possible to access the underlying scheduler instance\n\n- resolves #7246"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e88272e3b71ed4925446245d26319651920a8769", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/e88272e3b71ed4925446245d26319651920a8769", "committedDate": "2020-02-19T10:39:39Z", "message": "Quartz - make it possible to access the underlying scheduler instance\n\n- resolves #7246"}, "afterCommit": {"oid": "c37a1bd0292537324155ab5514a0ab431207baad", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/c37a1bd0292537324155ab5514a0ab431207baad", "committedDate": "2020-02-20T15:05:22Z", "message": "Quartz - make it possible to access the underlying scheduler instance\n\n- resolves #7246"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4107, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}