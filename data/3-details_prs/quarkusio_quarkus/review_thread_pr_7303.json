{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NjQyNTA4", "number": 7303, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTo0NjoxMFrODhdPiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDoxMjoxMFrODhigUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDA4NzE1OnYy", "diffSide": "RIGHT", "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TransactionalInterceptorBase.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwOTo0NjoxMFrOFsMnJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDo1ODoyNlrOFsPAfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4ODI5Mw==", "bodyText": "Why did you drop this clause? We don't have to convert it if it's a Publisher.", "url": "https://github.com/quarkusio/quarkus/pull/7303#discussion_r381888293", "createdAt": "2020-02-20T09:46:10Z", "author": {"login": "FroMage"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TransactionalInterceptorBase.java", "diffHunk": "@@ -124,8 +124,7 @@ protected Object invokeInOurTx(InvocationContext ic, TransactionManager tm, Runn\n             // handle asynchronously if not throwing\n             if (!throwing && ret != null) {\n                 ReactiveTypeConverter<Object> converter = null;\n-                if (ret instanceof CompletionStage == false\n-                        && ret instanceof Publisher == false) {\n+                if (ret instanceof CompletionStage == false) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ca9fad6d743bd23d4ef678fb6f453cd816a0acc"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg5NzU4MQ==", "bodyText": "We actually do.\nIf we don't, then the following block does not work as expected (line 145):\nret = handleAsync(tm, tx, ic, ret, afterEndTransaction);\n// convert back\nif (converter != null)\n       ret = converter.fromPublisher((Publisher<?>) ret);\n\nImagine we have a Multi. As Multi is an instance of Publisher, you don't look up for the converter (in the current code, before this PR). However, this Publisher gets decorated in handleAsync which returns a Publisher. As we don't have a converter, it is not converted back to a Multi... boom ClassCastException.  It works with RX Java because the implementation of Reactive Streams Operators (used in handleAsync) returned a Flowable, but if you use a Flux or a Multi it does not work.", "url": "https://github.com/quarkusio/quarkus/pull/7303#discussion_r381897581", "createdAt": "2020-02-20T10:02:38Z", "author": {"login": "cescoffier"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TransactionalInterceptorBase.java", "diffHunk": "@@ -124,8 +124,7 @@ protected Object invokeInOurTx(InvocationContext ic, TransactionManager tm, Runn\n             // handle asynchronously if not throwing\n             if (!throwing && ret != null) {\n                 ReactiveTypeConverter<Object> converter = null;\n-                if (ret instanceof CompletionStage == false\n-                        && ret instanceof Publisher == false) {\n+                if (ret instanceof CompletionStage == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4ODI5Mw=="}, "originalCommit": {"oid": "6ca9fad6d743bd23d4ef678fb6f453cd816a0acc"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkwNTE1Mw==", "bodyText": "Ah, damn. Well, OK. Perhaps we could check the intercepted method's return type and allow reusing the Publisher if its return type is Publisher (as opposed to Multi)?", "url": "https://github.com/quarkusio/quarkus/pull/7303#discussion_r381905153", "createdAt": "2020-02-20T10:16:28Z", "author": {"login": "FroMage"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TransactionalInterceptorBase.java", "diffHunk": "@@ -124,8 +124,7 @@ protected Object invokeInOurTx(InvocationContext ic, TransactionManager tm, Runn\n             // handle asynchronously if not throwing\n             if (!throwing && ret != null) {\n                 ReactiveTypeConverter<Object> converter = null;\n-                if (ret instanceof CompletionStage == false\n-                        && ret instanceof Publisher == false) {\n+                if (ret instanceof CompletionStage == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4ODI5Mw=="}, "originalCommit": {"oid": "6ca9fad6d743bd23d4ef678fb6f453cd816a0acc"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyNDMzNw==", "bodyText": "That would remove the need to call the converter in this case. Something like:\nif (ret instanceof CompletionStage == false && ! ret.getClass().equals(Publisher.class)) {", "url": "https://github.com/quarkusio/quarkus/pull/7303#discussion_r381924337", "createdAt": "2020-02-20T10:52:04Z", "author": {"login": "cescoffier"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TransactionalInterceptorBase.java", "diffHunk": "@@ -124,8 +124,7 @@ protected Object invokeInOurTx(InvocationContext ic, TransactionManager tm, Runn\n             // handle asynchronously if not throwing\n             if (!throwing && ret != null) {\n                 ReactiveTypeConverter<Object> converter = null;\n-                if (ret instanceof CompletionStage == false\n-                        && ret instanceof Publisher == false) {\n+                if (ret instanceof CompletionStage == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4ODI5Mw=="}, "originalCommit": {"oid": "6ca9fad6d743bd23d4ef678fb6f453cd816a0acc"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyNzU1MA==", "bodyText": "Fixed.", "url": "https://github.com/quarkusio/quarkus/pull/7303#discussion_r381927550", "createdAt": "2020-02-20T10:58:26Z", "author": {"login": "cescoffier"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TransactionalInterceptorBase.java", "diffHunk": "@@ -124,8 +124,7 @@ protected Object invokeInOurTx(InvocationContext ic, TransactionManager tm, Runn\n             // handle asynchronously if not throwing\n             if (!throwing && ret != null) {\n                 ReactiveTypeConverter<Object> converter = null;\n-                if (ret instanceof CompletionStage == false\n-                        && ret instanceof Publisher == false) {\n+                if (ret instanceof CompletionStage == false) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTg4ODI5Mw=="}, "originalCommit": {"oid": "6ca9fad6d743bd23d4ef678fb6f453cd816a0acc"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDk0OTI5OnYy", "diffSide": "RIGHT", "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TransactionalInterceptorBase.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDoxMjoxMVrOFsUzaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1ODozNlrOFsWpTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyMjUwNw==", "bodyText": "Shouldn't it be:\nif(ret instanceof CompletionStage == false\n && (ret instanceof Publisher == false || !ic.getMethod().getReturnType() == Publisher.class))\nYou need to check the method's declared return type, not the instance exact type, which can never be Publisher since it's an interface.\nNote that I wonder if we don't have the same issue with CompletionStage and CompletableFuture. Could you add a test to see what happens if an intercepted method is declared to return a CompletableFuture?", "url": "https://github.com/quarkusio/quarkus/pull/7303#discussion_r382022507", "createdAt": "2020-02-20T14:12:11Z", "author": {"login": "FroMage"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TransactionalInterceptorBase.java", "diffHunk": "@@ -124,8 +124,7 @@ protected Object invokeInOurTx(InvocationContext ic, TransactionManager tm, Runn\n             // handle asynchronously if not throwing\n             if (!throwing && ret != null) {\n                 ReactiveTypeConverter<Object> converter = null;\n-                if (ret instanceof CompletionStage == false\n-                        && ret instanceof Publisher == false) {\n+                if (ret instanceof CompletionStage == false && !ret.getClass().equals(Publisher.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e25a8bf4925b416731632d9eb17fd662523111a1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NDMyNg==", "bodyText": "Adding the test right now.", "url": "https://github.com/quarkusio/quarkus/pull/7303#discussion_r382044326", "createdAt": "2020-02-20T14:46:17Z", "author": {"login": "cescoffier"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TransactionalInterceptorBase.java", "diffHunk": "@@ -124,8 +124,7 @@ protected Object invokeInOurTx(InvocationContext ic, TransactionManager tm, Runn\n             // handle asynchronously if not throwing\n             if (!throwing && ret != null) {\n                 ReactiveTypeConverter<Object> converter = null;\n-                if (ret instanceof CompletionStage == false\n-                        && ret instanceof Publisher == false) {\n+                if (ret instanceof CompletionStage == false && !ret.getClass().equals(Publisher.class)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyMjUwNw=="}, "originalCommit": {"oid": "e25a8bf4925b416731632d9eb17fd662523111a1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MjY4NA==", "bodyText": "I fixed the condition.", "url": "https://github.com/quarkusio/quarkus/pull/7303#discussion_r382052684", "createdAt": "2020-02-20T14:58:36Z", "author": {"login": "cescoffier"}, "path": "extensions/narayana-jta/runtime/src/main/java/io/quarkus/narayana/jta/runtime/interceptor/TransactionalInterceptorBase.java", "diffHunk": "@@ -124,8 +124,7 @@ protected Object invokeInOurTx(InvocationContext ic, TransactionManager tm, Runn\n             // handle asynchronously if not throwing\n             if (!throwing && ret != null) {\n                 ReactiveTypeConverter<Object> converter = null;\n-                if (ret instanceof CompletionStage == false\n-                        && ret instanceof Publisher == false) {\n+                if (ret instanceof CompletionStage == false && !ret.getClass().equals(Publisher.class)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyMjUwNw=="}, "originalCommit": {"oid": "e25a8bf4925b416731632d9eb17fd662523111a1"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 121, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}