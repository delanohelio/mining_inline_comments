{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4OTM2MTE4", "number": 12902, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjozNzozNFrOExMArQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjozOTo0MlrOExMDrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDEyNDYxOnYy", "diffSide": "RIGHT", "path": "integration-tests/redis-client/src/main/java/io/quarkus/redis/it/RedisWithNamedClientResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjozNzozNFrOHnMBTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjozNzozNFrOHnMBTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg1MzQ1Mg==", "bodyText": "I would test both.", "url": "https://github.com/quarkusio/quarkus/pull/12902#discussion_r510853452", "createdAt": "2020-10-23T12:37:34Z", "author": {"login": "cescoffier"}, "path": "integration-tests/redis-client/src/main/java/io/quarkus/redis/it/RedisWithNamedClientResource.java", "diffHunk": "@@ -18,13 +18,15 @@\n @Path(\"/quarkus-redis-with-named\")\n @ApplicationScoped\n public class RedisWithNamedClientResource {\n-    @Inject\n-    @RedisClientName(\"named-client\")\n-    RedisClient redisClient;\n+    private RedisClient redisClient;\n+    private ReactiveRedisClient reactiveRedisClient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82bdb87d5d421bd47ef1c9e6c83e439f66e7d1d2"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDEyOTM5OnYy", "diffSide": "RIGHT", "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/RedisClientName.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjozOTowMlrOHnMEZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMzowMDoyMlrOHnM03w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg1NDI0Nw==", "bodyText": "We need @mkouba opinion. The last time I used a qualifier, I heard him shouting at me and I'm living more than 1000 km away from him :-)\nIt seems ok here, but better check.", "url": "https://github.com/quarkusio/quarkus/pull/12902#discussion_r510854247", "createdAt": "2020-10-23T12:39:02Z", "author": {"login": "cescoffier"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/RedisClientName.java", "diffHunk": "@@ -26,7 +26,7 @@\n  *     RedisClient client;\n  * </pre>\n  */\n-@Target({ ElementType.TYPE, ElementType.METHOD, ElementType.FIELD })\n+@Target({ ElementType.TYPE, ElementType.METHOD, ElementType.FIELD, ElementType.PARAMETER })\n @Retention(RUNTIME)\n @Documented\n @Qualifier", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82bdb87d5d421bd47ef1c9e6c83e439f66e7d1d2"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg1NzEwMQ==", "bodyText": "Hmm, this is OK. This is what we use everywhere for named whatever.", "url": "https://github.com/quarkusio/quarkus/pull/12902#discussion_r510857101", "createdAt": "2020-10-23T12:44:00Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/RedisClientName.java", "diffHunk": "@@ -26,7 +26,7 @@\n  *     RedisClient client;\n  * </pre>\n  */\n-@Target({ ElementType.TYPE, ElementType.METHOD, ElementType.FIELD })\n+@Target({ ElementType.TYPE, ElementType.METHOD, ElementType.FIELD, ElementType.PARAMETER })\n @Retention(RUNTIME)\n @Documented\n @Qualifier", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg1NDI0Nw=="}, "originalCommit": {"oid": "82bdb87d5d421bd47ef1c9e6c83e439f66e7d1d2"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg2NjY1NQ==", "bodyText": "This should be fine as the annotation is used as a CDI qualifier (@cescoffier do you spot the difference? Also I don't remember this incident and BTW you live approx. 1000km away from me, or? ;-)", "url": "https://github.com/quarkusio/quarkus/pull/12902#discussion_r510866655", "createdAt": "2020-10-23T13:00:22Z", "author": {"login": "mkouba"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/RedisClientName.java", "diffHunk": "@@ -26,7 +26,7 @@\n  *     RedisClient client;\n  * </pre>\n  */\n-@Target({ ElementType.TYPE, ElementType.METHOD, ElementType.FIELD })\n+@Target({ ElementType.TYPE, ElementType.METHOD, ElementType.FIELD, ElementType.PARAMETER })\n @Retention(RUNTIME)\n @Documented\n @Qualifier", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg1NDI0Nw=="}, "originalCommit": {"oid": "82bdb87d5d421bd47ef1c9e6c83e439f66e7d1d2"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDEzMjI4OnYy", "diffSide": "RIGHT", "path": "integration-tests/redis-client/src/main/java/io/quarkus/redis/it/RedisWithNamedClientResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjozOTo0MlrOHnMGFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjo1MjoyMlrOHnMiWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg1NDY3OA==", "bodyText": "I would add a specific test rather than fiddling with an existing one.", "url": "https://github.com/quarkusio/quarkus/pull/12902#discussion_r510854678", "createdAt": "2020-10-23T12:39:42Z", "author": {"login": "gsmet"}, "path": "integration-tests/redis-client/src/main/java/io/quarkus/redis/it/RedisWithNamedClientResource.java", "diffHunk": "@@ -18,13 +18,15 @@\n @Path(\"/quarkus-redis-with-named\")\n @ApplicationScoped\n public class RedisWithNamedClientResource {\n-    @Inject\n-    @RedisClientName(\"named-client\")\n-    RedisClient redisClient;\n+    private RedisClient redisClient;\n+    private ReactiveRedisClient reactiveRedisClient;\n \n     @Inject\n-    @RedisClientName(\"named-client\")\n-    ReactiveRedisClient reactiveRedisClient;\n+    public RedisWithNamedClientResource(@RedisClientName(\"named-client\") ReactiveRedisClient reactiveRedisClient,\n+            @RedisClientName(\"named-client\") RedisClient redisClient) {\n+        this.reactiveRedisClient = reactiveRedisClient;\n+        this.redisClient = redisClient;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82bdb87d5d421bd47ef1c9e6c83e439f66e7d1d2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg1Njg0OQ==", "bodyText": "I've changed it the way @cescoffier suggested here #12902 (comment) with constructor and field injection.", "url": "https://github.com/quarkusio/quarkus/pull/12902#discussion_r510856849", "createdAt": "2020-10-23T12:43:32Z", "author": {"login": "machi1990"}, "path": "integration-tests/redis-client/src/main/java/io/quarkus/redis/it/RedisWithNamedClientResource.java", "diffHunk": "@@ -18,13 +18,15 @@\n @Path(\"/quarkus-redis-with-named\")\n @ApplicationScoped\n public class RedisWithNamedClientResource {\n-    @Inject\n-    @RedisClientName(\"named-client\")\n-    RedisClient redisClient;\n+    private RedisClient redisClient;\n+    private ReactiveRedisClient reactiveRedisClient;\n \n     @Inject\n-    @RedisClientName(\"named-client\")\n-    ReactiveRedisClient reactiveRedisClient;\n+    public RedisWithNamedClientResource(@RedisClientName(\"named-client\") ReactiveRedisClient reactiveRedisClient,\n+            @RedisClientName(\"named-client\") RedisClient redisClient) {\n+        this.reactiveRedisClient = reactiveRedisClient;\n+        this.redisClient = redisClient;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg1NDY3OA=="}, "originalCommit": {"oid": "82bdb87d5d421bd47ef1c9e6c83e439f66e7d1d2"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg2MTkxNA==", "bodyText": "It's really better to add an entirely separate test, testing both clients for each injection type.\nJust copy/paste the existing one and change the injection.", "url": "https://github.com/quarkusio/quarkus/pull/12902#discussion_r510861914", "createdAt": "2020-10-23T12:52:22Z", "author": {"login": "gsmet"}, "path": "integration-tests/redis-client/src/main/java/io/quarkus/redis/it/RedisWithNamedClientResource.java", "diffHunk": "@@ -18,13 +18,15 @@\n @Path(\"/quarkus-redis-with-named\")\n @ApplicationScoped\n public class RedisWithNamedClientResource {\n-    @Inject\n-    @RedisClientName(\"named-client\")\n-    RedisClient redisClient;\n+    private RedisClient redisClient;\n+    private ReactiveRedisClient reactiveRedisClient;\n \n     @Inject\n-    @RedisClientName(\"named-client\")\n-    ReactiveRedisClient reactiveRedisClient;\n+    public RedisWithNamedClientResource(@RedisClientName(\"named-client\") ReactiveRedisClient reactiveRedisClient,\n+            @RedisClientName(\"named-client\") RedisClient redisClient) {\n+        this.reactiveRedisClient = reactiveRedisClient;\n+        this.redisClient = redisClient;\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg1NDY3OA=="}, "originalCommit": {"oid": "82bdb87d5d421bd47ef1c9e6c83e439f66e7d1d2"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4238, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}