{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1MDYyOTU2", "number": 8641, "title": "Register BUILD_AND_RUN_TIME_FIXED and RUN_TIME config roots as beans", "bodyText": "i.e. make them injectable\n\nMotivation\nVery often extensions register beans that need to access the runtime configuration (and BUILD_AND_RUN_TIME_FIXED). Currently, the only way how to accomplish this is to pass a root config through a recorder method. This has several disadvantages. First of all, you need to write more code. Morever, a bean instance is initialized after it's created. As a result, the bean state must be synchronized (volatile fields etc.). This may lead to errors where a bean client reads an uninitialized state.\nImplementation note\nFor each BUILD_AND_RUN_TIME_FIXED and RUN_TIME config root a synthetic bean is registered. The bean has the @Default qualifier and the contextual instance is the value of a static field stored in the generated Config class, i.e. return Config.ApplicationConfig. This should be safe because bean instances are always created after the CDI container is started.", "createdAt": "2020-04-17T10:51:20Z", "url": "https://github.com/quarkusio/quarkus/pull/8641", "merged": true, "mergeCommit": {"oid": "6405b146a5125e3112bdd83b82cbac01a6279dba"}, "closed": true, "closedAt": "2020-04-20T07:14:32Z", "author": {"login": "mkouba"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYgTVsgFqTM5NTQwMzE3MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZY5dIAFqTM5NjE2NDM5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDAzMTcw", "url": "https://github.com/quarkusio/quarkus/pull/8641#pullrequestreview-395403170", "createdAt": "2020-04-17T12:18:21Z", "commit": {"oid": "a60264ea2e26290425bf91e5fac3ecd43cd0041e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjoxODoyMVrOGHLqKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMjoxODoyMVrOGHLqKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDE4NDIzNQ==", "bodyText": "It might be a stupid question but why a Dependent scope?", "url": "https://github.com/quarkusio/quarkus/pull/8641#discussion_r410184235", "createdAt": "2020-04-17T12:18:21Z", "author": {"login": "gsmet"}, "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/ConfigBuildStep.java", "diffHunk": "@@ -137,6 +143,25 @@ void validateConfigProperties(ConfigRecorder recorder, List<ConfigPropertyBuildI\n         recorder.validateConfigProperties(propNamesToClasses);\n     }\n \n+    @BuildStep\n+    BeanRegistrarBuildItem registerConfigRootsAsBeans(ConfigurationBuildItem configItem) {\n+        return new BeanRegistrarBuildItem(new BeanRegistrar() {\n+            @Override\n+            public void register(RegistrationContext context) {\n+                for (RootDefinition rootDefinition : configItem.getReadResult().getAllRoots()) {\n+                    if (rootDefinition.getConfigPhase() == ConfigPhase.BUILD_AND_RUN_TIME_FIXED\n+                            || rootDefinition.getConfigPhase() == ConfigPhase.RUN_TIME) {\n+                        context.configure(rootDefinition.getConfigurationClass()).types(rootDefinition.getConfigurationClass())\n+                                .scope(Dependent.class).creator(mc -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a60264ea2e26290425bf91e5fac3ecd43cd0041e"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDMzMDA4", "url": "https://github.com/quarkusio/quarkus/pull/8641#pullrequestreview-395433008", "createdAt": "2020-04-17T13:02:53Z", "commit": {"oid": "a60264ea2e26290425bf91e5fac3ecd43cd0041e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1NDgxOTE5", "url": "https://github.com/quarkusio/quarkus/pull/8641#pullrequestreview-395481919", "createdAt": "2020-04-17T14:03:08Z", "commit": {"oid": "a60264ea2e26290425bf91e5fac3ecd43cd0041e"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNDowMzowOFrOGHPUhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNDowMzowOFrOGHPUhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDI0NDIzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ThreadPoolConfig thredPoolConfig;\n          \n          \n            \n                    ThreadPoolConfig threadPoolConfig;", "url": "https://github.com/quarkusio/quarkus/pull/8641#discussion_r410244231", "createdAt": "2020-04-17T14:03:08Z", "author": {"login": "gsmet"}, "path": "extensions/arc/deployment/src/test/java/io/quarkus/arc/test/configroot/ConfigRootInjectionTest.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package io.quarkus.arc.test.configroot;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.runtime.ApplicationConfig;\n+import io.quarkus.runtime.ThreadPoolConfig;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class ConfigRootInjectionTest {\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest config = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(ConfigRootInjectionTest.class, Client.class));\n+\n+    @Inject\n+    Client client;\n+\n+    @Test\n+    public void testInjectionWorks() {\n+        assertNotNull(client.applicationConfig);\n+        assertNotNull(client.applicationConfig.name);\n+        assertEquals(1, client.thredPoolConfig.coreThreads);\n+    }\n+\n+    @Singleton\n+    static class Client {\n+\n+        @Inject\n+        ApplicationConfig applicationConfig;\n+\n+        @Inject\n+        ThreadPoolConfig thredPoolConfig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a60264ea2e26290425bf91e5fac3ecd43cd0041e"}, "originalPosition": 42}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a874d89bca12ae793f4b5eddad3ab43dea018940", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/a874d89bca12ae793f4b5eddad3ab43dea018940", "committedDate": "2020-04-17T19:42:08Z", "message": "Update extensions/arc/deployment/src/test/java/io/quarkus/arc/test/configroot/ConfigRootInjectionTest.java\n\nCo-Authored-By: Guillaume Smet <guillaume.smet@gmail.com>"}, "afterCommit": {"oid": "f7d30baf6455e98aad36413f0945a89cc6cd55a7", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/f7d30baf6455e98aad36413f0945a89cc6cd55a7", "committedDate": "2020-04-18T07:54:10Z", "message": "Register BUILD_AND_RUN_TIME_FIXED and RUN_TIME config roots as beans\n\n- i.e. make them injectable"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e355da809f054fbeca9ef11bf851964b32761344", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/e355da809f054fbeca9ef11bf851964b32761344", "committedDate": "2020-04-19T08:26:26Z", "message": "Register BUILD_AND_RUN_TIME_FIXED and RUN_TIME config roots as beans\n\n- i.e. make them injectable"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f7d30baf6455e98aad36413f0945a89cc6cd55a7", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/f7d30baf6455e98aad36413f0945a89cc6cd55a7", "committedDate": "2020-04-18T07:54:10Z", "message": "Register BUILD_AND_RUN_TIME_FIXED and RUN_TIME config roots as beans\n\n- i.e. make them injectable"}, "afterCommit": {"oid": "e355da809f054fbeca9ef11bf851964b32761344", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/e355da809f054fbeca9ef11bf851964b32761344", "committedDate": "2020-04-19T08:26:26Z", "message": "Register BUILD_AND_RUN_TIME_FIXED and RUN_TIME config roots as beans\n\n- i.e. make them injectable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MTY0Mzk3", "url": "https://github.com/quarkusio/quarkus/pull/8641#pullrequestreview-396164397", "createdAt": "2020-04-20T06:14:40Z", "commit": {"oid": "e355da809f054fbeca9ef11bf851964b32761344"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4640, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}