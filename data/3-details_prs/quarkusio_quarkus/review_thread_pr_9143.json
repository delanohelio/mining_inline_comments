{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NTE1NDgz", "number": 9143, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODo1ODoyMFrOD6KAhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODo1ODoyMFrOD6KAhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMzA3OTc1OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesDeploy.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODo1ODoyMFrOGR1FiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOTowMDoyOVrOGR1K3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM0ODc0NQ==", "bodyText": "should this not also include the masterURL?", "url": "https://github.com/quarkusio/quarkus/pull/9143#discussion_r421348745", "createdAt": "2020-05-07T08:58:20Z", "author": {"login": "maxandersen"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesDeploy.java", "diffHunk": "@@ -32,25 +31,28 @@ public boolean getAsBoolean() {\n         if (serverFound) {\n             return true;\n         }\n-        try (final KubernetesClient client = KubernetesClientUtils.createClient()) {\n+\n+        KubernetesClient client = KubernetesClientUtils.createClient();\n+        String masterURL = client.getConfiguration().getMasterUrl();\n+        try {\n+            masterURL = client.getConfiguration().getMasterUrl();\n             //Let's check id we can connect.\n             RootPaths paths = client.rootPaths();\n-            log.info(\"Found kubernetes server.\");\n+            log.info(\"Kubernetes API Server at '\" + masterURL + \"' successfully contacted.\");\n             serverFound = true;\n+            client.close();\n             return true;\n         } catch (Exception e) {\n-            if (!alreadyWarned) {\n-                if (e.getCause() instanceof SSLHandshakeException) {\n-                    String message = \"Although a Kubernetes deployment was requested, it will however not take place because the API Server certificates are not trusted. The certificates can be configured using the relevant configuration propertiers under the 'quarkus.kubernetes-client' config root, or \\\"quarkus.kubernetes-client.trust-certs=true\\\" can be set to explicitly trust the certificates (not recommended)\";\n-                    log.warn(message);\n-                } else {\n-                    log.error(\n-                            \"Although a Kubernetes deployment was requested, it will however not take place because there was an error during communication with the API Server: \"\n-                                    + e.getMessage());\n-                }\n-                alreadyWarned = true;\n+            if (e.getCause() instanceof SSLHandshakeException) {\n+                throw new RuntimeException(\n+                        \"Although a Kubernetes deployment was requested, it however cannot take place because the API Server certificates are not trusted. The certificates can be configured using the relevant configuration propertiers under the 'quarkus.kubernetes-client' config root, or \\\"quarkus.kubernetes-client.trust-certs=true\\\" can be set to explicitly trust the certificates (not recommended)\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b4209a8d3558a2017158dcf46379cf398faebb"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM1MDEwOA==", "bodyText": "Ah yeah, I missed it", "url": "https://github.com/quarkusio/quarkus/pull/9143#discussion_r421350108", "createdAt": "2020-05-07T09:00:29Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesDeploy.java", "diffHunk": "@@ -32,25 +31,28 @@ public boolean getAsBoolean() {\n         if (serverFound) {\n             return true;\n         }\n-        try (final KubernetesClient client = KubernetesClientUtils.createClient()) {\n+\n+        KubernetesClient client = KubernetesClientUtils.createClient();\n+        String masterURL = client.getConfiguration().getMasterUrl();\n+        try {\n+            masterURL = client.getConfiguration().getMasterUrl();\n             //Let's check id we can connect.\n             RootPaths paths = client.rootPaths();\n-            log.info(\"Found kubernetes server.\");\n+            log.info(\"Kubernetes API Server at '\" + masterURL + \"' successfully contacted.\");\n             serverFound = true;\n+            client.close();\n             return true;\n         } catch (Exception e) {\n-            if (!alreadyWarned) {\n-                if (e.getCause() instanceof SSLHandshakeException) {\n-                    String message = \"Although a Kubernetes deployment was requested, it will however not take place because the API Server certificates are not trusted. The certificates can be configured using the relevant configuration propertiers under the 'quarkus.kubernetes-client' config root, or \\\"quarkus.kubernetes-client.trust-certs=true\\\" can be set to explicitly trust the certificates (not recommended)\";\n-                    log.warn(message);\n-                } else {\n-                    log.error(\n-                            \"Although a Kubernetes deployment was requested, it will however not take place because there was an error during communication with the API Server: \"\n-                                    + e.getMessage());\n-                }\n-                alreadyWarned = true;\n+            if (e.getCause() instanceof SSLHandshakeException) {\n+                throw new RuntimeException(\n+                        \"Although a Kubernetes deployment was requested, it however cannot take place because the API Server certificates are not trusted. The certificates can be configured using the relevant configuration propertiers under the 'quarkus.kubernetes-client' config root, or \\\"quarkus.kubernetes-client.trust-certs=true\\\" can be set to explicitly trust the certificates (not recommended)\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM0ODc0NQ=="}, "originalCommit": {"oid": "c6b4209a8d3558a2017158dcf46379cf398faebb"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3275, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}