{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNjEwMzIz", "number": 10396, "title": "Document mocking an authorization server with Mockito", "bodyText": "Fixes #10364\nI'll open a PR on the quickstart to add this later.", "createdAt": "2020-07-01T10:39:33Z", "url": "https://github.com/quarkusio/quarkus/pull/10396", "merged": true, "mergeCommit": {"oid": "7af8f210c3e886ee7fbf14ef8850c4a4993bc0ba"}, "closed": true, "closedAt": "2020-07-01T16:04:16Z", "author": {"login": "loicmathieu"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwn7h5AFqTQ0MDc1NjUxNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwsb4-AFqTQ0MTAwMzgzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNzU2NTE1", "url": "https://github.com/quarkusio/quarkus/pull/10396#pullrequestreview-440756515", "createdAt": "2020-07-01T10:45:45Z", "commit": {"oid": "a3cca0832d93734cb522ddaf52dcdd5a13974ec2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo0NTo0NVrOGrgu2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMDo0NTo0NVrOGrgu2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI3ODIzMg==", "bodyText": "I am pretty sure that we want to do something like \n  \n    \n      quarkus/docs/src/main/asciidoc/rest-client.adoc\n    \n    \n         Line 478\n      in\n      db21557\n    \n    \n    \n    \n\n        \n          \n           public class WiremockCountries implements QuarkusTestResourceLifecycleManager {  // <2> \n        \n    \n  \n\n instead of this per pest configuration", "url": "https://github.com/quarkusio/quarkus/pull/10396#discussion_r448278232", "createdAt": "2020-07-01T10:45:45Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/security-oauth2.adoc", "diffHunk": "@@ -342,3 +342,74 @@ $ ./target/security-oauth2-quickstart-runner\n 2019-03-28 14:31:37,315 INFO  [io.quarkus] (main) Quarkus 0.20.0 started in 0.006s. Listening on: http://[::]:8080\n 2019-03-28 14:31:37,316 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy, resteasy-jsonb, security, security-oauth2]\n ----\n+\n+== Integration testing\n+\n+If you don't want to use a real OAuth2 authorization server for your integration tests, you can use the\n+link:security-properties[Properties based security] extension for your test, or mock an authorization server using Wiremock.\n+\n+To mock an authentication server via Wiremock, you first need to add the Wiremock library inside your `pom.xml`.\n+\n+[source,xml]\n+----\n+<dependency>\n+    <groupId>com.github.tomakehurst</groupId>\n+    <artifactId>wiremock-jre8</artifactId>\n+    <scope>test</scope>\n+</dependency>\n+----\n+\n+Then you setup Wiremock to always return a valid response for any OAuth2 token send to the `/introspect` endpoint,\n+you must adapt the response to fit your needs (at least the scope).\n+\n+[source,java]\n+----\n+private static WireMockServer wireMockServer = new WireMockServer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3cca0832d93734cb522ddaf52dcdd5a13974ec2"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a3cca0832d93734cb522ddaf52dcdd5a13974ec2", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/a3cca0832d93734cb522ddaf52dcdd5a13974ec2", "committedDate": "2020-07-01T10:38:53Z", "message": "Document mocking an authorization server with Mockito"}, "afterCommit": {"oid": "6956c3ccf55250858fdba6a765f3bbf75048fcc4", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/6956c3ccf55250858fdba6a765f3bbf75048fcc4", "committedDate": "2020-07-01T12:23:36Z", "message": "Document mocking an authorization server with Mockito"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwOTY4MTA2", "url": "https://github.com/quarkusio/quarkus/pull/10396#pullrequestreview-440968106", "createdAt": "2020-07-01T15:18:10Z", "commit": {"oid": "6956c3ccf55250858fdba6a765f3bbf75048fcc4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNToxODoxMFrOGrqa_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNToxODoxMFrOGrqa_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQzNjk5MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Bellow is an example of a test that uses the `MockAuthorizationServerTestResource`.\n          \n          \n            \n            Below is an example of a test that uses the `MockAuthorizationServerTestResource`.", "url": "https://github.com/quarkusio/quarkus/pull/10396#discussion_r448436991", "createdAt": "2020-07-01T15:18:10Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/security-oauth2.adoc", "diffHunk": "@@ -342,3 +342,122 @@ $ ./target/security-oauth2-quickstart-runner\n 2019-03-28 14:31:37,315 INFO  [io.quarkus] (main) Quarkus 0.20.0 started in 0.006s. Listening on: http://[::]:8080\n 2019-03-28 14:31:37,316 INFO  [io.quarkus] (main) Installed features: [cdi, resteasy, resteasy-jsonb, security, security-oauth2]\n ----\n+\n+== Integration testing\n+\n+If you don't want to use a real OAuth2 authorization server for your integration tests, you can use the\n+link:security-properties[Properties based security] extension for your test, or mock an authorization server using Wiremock.\n+\n+First of all, Wiremock needs to be added as a test dependency. For a Maven project that would happen like so:\n+\n+[source,xml]\n+----\n+<dependency>\n+    <groupId>com.github.tomakehurst</groupId>\n+    <artifactId>wiremock-jre8</artifactId>\n+    <scope>test</scope>\n+    <version>${wiremock.version}</version> // <1>\n+</dependency>\n+----\n+\n+<1> Use a proper Wiremock version. All available versions can be found link:https://search.maven.org/artifact/com.github.tomakehurst/wiremock-jre8[here].\n+\n+In Quarkus tests when some service needs to be started before the Quarkus tests are ran, we utilize the `@io.quarkus.test.common.QuarkusTestResource`\n+annotation to specify a `io.quarkus.test.common.QuarkusTestResourceLifecycleManager` which can start the service and supply configuration\n+values that Quarkus will use.\n+\n+[NOTE]\n+====\n+For more details about `@QuarkusTestResource` refer to  link:getting-started-testing#quarkus-test-resource[this part of the documentation].\n+====\n+\n+Let's create an implementation of `QuarkusTestResourceLifecycleManager` called `MockAuthorizationServerTestResource` like so:\n+\n+[source,java]\n+----\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import com.github.tomakehurst.wiremock.client.WireMock;\n+import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+public class MockAuthorizationServerTestResource implements QuarkusTestResourceLifecycleManager {  // <1>\n+\n+    private WireMockServer wireMockServer;\n+\n+    @Override\n+    public Map<String, String> start() {\n+        wireMockServer = new WireMockServer();\n+        wireMockServer.start(); // <2>\n+\n+        // define the mock for the introspect endpoint\n+        WireMock.stubFor(WireMock.post(\"/introspect\").willReturn(WireMock.aResponse() // <3>\n+                .withBody(\n+                        \"{\\\"active\\\":true,\\\"scope\\\":\\\"Echoer\\\",\\\"username\\\":null,\\\"iat\\\":1562315654,\\\"exp\\\":1562317454,\\\"expires_in\\\":1458,\\\"client_id\\\":\\\"my_client_id\\\"}\")));\n+\n+\n+        return Collections.singletonMap(\"quarkus.oauth2.introspection-url\", wireMockServer.baseUrl() + \"/introspect\"); // <4>\n+    }\n+\n+    @Override\n+    public void stop() {\n+        if (null != wireMockServer) {\n+            wireMockServer.stop();  // (5)\n+        }\n+    }\n+}\n+----\n+\n+<1> The `start` method is invoked by Quarkus before any test is run and returns a `Map` of configuration properties that apply during the test execution.\n+<2> Launch Wiremock.\n+<3> Configure Wiremock to stub the calls to `/introspect` by returning an OAuth2 introspect response. You need to customize this line to return what's needed for your application (at least the scope property as roles are derived from the scope).\n+<5> As the `start` method returns configuration that applies for tests, we set the `quarkus.oauth2.introspection-url` property that controls the URL of the introspect endpoint used by the OAuth2 extension.\n+<5> When all tests have finished, shutdown Wiremock.\n+\n+\n+Your test class needs to be annotated like with `@QuarkusTestResource(MockAuthorizationServerTestResource.class)` to use this `QuarkusTestResourceLifecycleManager`.\n+\n+Bellow is an example of a test that uses the `MockAuthorizationServerTestResource`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6956c3ccf55250858fdba6a765f3bbf75048fcc4"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwOTY4NDY2", "url": "https://github.com/quarkusio/quarkus/pull/10396#pullrequestreview-440968466", "createdAt": "2020-07-01T15:18:33Z", "commit": {"oid": "6956c3ccf55250858fdba6a765f3bbf75048fcc4"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3765f3b1789636ba088e50a281fe81955912a47f", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/3765f3b1789636ba088e50a281fe81955912a47f", "committedDate": "2020-07-01T15:55:01Z", "message": "Document mocking an authorization server with Mockito"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6956c3ccf55250858fdba6a765f3bbf75048fcc4", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/6956c3ccf55250858fdba6a765f3bbf75048fcc4", "committedDate": "2020-07-01T12:23:36Z", "message": "Document mocking an authorization server with Mockito"}, "afterCommit": {"oid": "3765f3b1789636ba088e50a281fe81955912a47f", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/3765f3b1789636ba088e50a281fe81955912a47f", "committedDate": "2020-07-01T15:55:01Z", "message": "Document mocking an authorization server with Mockito"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMDAzODMw", "url": "https://github.com/quarkusio/quarkus/pull/10396#pullrequestreview-441003830", "createdAt": "2020-07-01T16:00:44Z", "commit": {"oid": "3765f3b1789636ba088e50a281fe81955912a47f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3588, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}