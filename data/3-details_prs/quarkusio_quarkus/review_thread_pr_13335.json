{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMjAyMzc1", "number": 13335, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozMjoyM1rOE553oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozMjoyM1rOE553oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MTUyNDE2OnYy", "diffSide": "RIGHT", "path": "extensions/resteasy/runtime/src/main/java/io/quarkus/resteasy/runtime/standalone/VertxRequestHandler.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozMjoyM1rOH0pntw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo0MDoyN1rOH01NOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTkxMQ==", "bodyText": "I think you should be using the variant that creates a new Closeable context : addCloseableContextDataLevel that you can use in a try-with-resource.", "url": "https://github.com/quarkusio/quarkus/pull/13335#discussion_r524969911", "createdAt": "2020-11-17T08:32:23Z", "author": {"login": "FroMage"}, "path": "extensions/resteasy/runtime/src/main/java/io/quarkus/resteasy/runtime/standalone/VertxRequestHandler.java", "diffHunk": "@@ -127,8 +129,10 @@ private void dispatch(RoutingContext routingContext, InputStream is, VertxOutput\n                     dispatcher.getDispatcher(), vertxResponse, requestContext, executor);\n             vertxRequest.setInputStream(is);\n             try {\n-                ResteasyContext.pushContext(SecurityContext.class, new QuarkusResteasySecurityContext(request, routingContext));\n-                ResteasyContext.pushContext(RoutingContext.class, routingContext);\n+                Map<Class<?>, Object> map = new HashMap<>();\n+                map.put(SecurityContext.class, new QuarkusResteasySecurityContext(request, routingContext));\n+                map.put(RoutingContext.class, routingContext);\n+                ResteasyContext.pushContextDataMap(map);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8eab583c28406ca229b3383c6137aa5571268ada"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTAzMzM4Mw==", "bodyText": "What about async requests?", "url": "https://github.com/quarkusio/quarkus/pull/13335#discussion_r525033383", "createdAt": "2020-11-17T10:08:51Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/resteasy/runtime/src/main/java/io/quarkus/resteasy/runtime/standalone/VertxRequestHandler.java", "diffHunk": "@@ -127,8 +129,10 @@ private void dispatch(RoutingContext routingContext, InputStream is, VertxOutput\n                     dispatcher.getDispatcher(), vertxResponse, requestContext, executor);\n             vertxRequest.setInputStream(is);\n             try {\n-                ResteasyContext.pushContext(SecurityContext.class, new QuarkusResteasySecurityContext(request, routingContext));\n-                ResteasyContext.pushContext(RoutingContext.class, routingContext);\n+                Map<Class<?>, Object> map = new HashMap<>();\n+                map.put(SecurityContext.class, new QuarkusResteasySecurityContext(request, routingContext));\n+                map.put(RoutingContext.class, routingContext);\n+                ResteasyContext.pushContextDataMap(map);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTkxMQ=="}, "originalCommit": {"oid": "8eab583c28406ca229b3383c6137aa5571268ada"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE1OTczNw==", "bodyText": "Async requests need to capture this context anyway, since we've no idea what thread they'll be in when they get executed. This doesn't destroy anything, BTW. It just pops it from the current context stack and restore the previous context map.", "url": "https://github.com/quarkusio/quarkus/pull/13335#discussion_r525159737", "createdAt": "2020-11-17T13:40:27Z", "author": {"login": "FroMage"}, "path": "extensions/resteasy/runtime/src/main/java/io/quarkus/resteasy/runtime/standalone/VertxRequestHandler.java", "diffHunk": "@@ -127,8 +129,10 @@ private void dispatch(RoutingContext routingContext, InputStream is, VertxOutput\n                     dispatcher.getDispatcher(), vertxResponse, requestContext, executor);\n             vertxRequest.setInputStream(is);\n             try {\n-                ResteasyContext.pushContext(SecurityContext.class, new QuarkusResteasySecurityContext(request, routingContext));\n-                ResteasyContext.pushContext(RoutingContext.class, routingContext);\n+                Map<Class<?>, Object> map = new HashMap<>();\n+                map.put(SecurityContext.class, new QuarkusResteasySecurityContext(request, routingContext));\n+                map.put(RoutingContext.class, routingContext);\n+                ResteasyContext.pushContextDataMap(map);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2OTkxMQ=="}, "originalCommit": {"oid": "8eab583c28406ca229b3383c6137aa5571268ada"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3935, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}