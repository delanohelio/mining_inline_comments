{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxOTM2Mjgz", "number": 9891, "title": "OIDC JWK refresh support", "bodyText": "Fixes #5003\nFixes #7286\nThis PR:\n\nSupports a forced JWK refresh based on a missingKeyHandler Vertx Auth 3.9.1 feature with a controlled refresh interval period (10 mins by default). Right now, if the rotation happens and the current token has no local JWK with a matching kid to verify it then 2 requests will go to OIDC server, 1 JWK refresh from our handler and one fallback introspection request - this is not really a problem for now as it will happen only once in some long enough irregular rotation interval in a long running application\nAlong the way the opaque access tokens are now also supported\nadds a test OidcResource server endpoint to emulate Keycloak\nadds a test that confirms that a JWK refresh alone, without the introspection, is enough to verify a token after the key rotation, plus checks the fallback introspection is effective for the opaque token\n\nCC @pmlopes", "createdAt": "2020-06-09T16:48:04Z", "url": "https://github.com/quarkusio/quarkus/pull/9891", "merged": true, "mergeCommit": {"oid": "fd413f3857dabf9e6f4fb7ea7c5784a3548a3b3f"}, "closed": true, "closedAt": "2020-06-15T11:22:18Z", "author": {"login": "sberyozkin"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpnmbfgH2gAyNDMxOTM2MjgzOmNiMThmMDVkMGQ2ZTEzM2ZhNjZmOTE2ZmRlZjljZDZiNGJhOTU3NDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqigV6AFqTQyOTcyMTQ1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cb18f05d0d6e133fa66f916fdef9cd6b4ba95740", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/cb18f05d0d6e133fa66f916fdef9cd6b4ba95740", "committedDate": "2020-06-09T16:25:15Z", "message": "OIDC JWK refresh support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3OTUzNjE2", "url": "https://github.com/quarkusio/quarkus/pull/9891#pullrequestreview-427953616", "createdAt": "2020-06-10T11:17:38Z", "commit": {"oid": "cb18f05d0d6e133fa66f916fdef9cd6b4ba95740"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToxNzozOVrOGhwQDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToyMDo1OFrOGhwWPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0NjczNA==", "bodyText": "I think this should be a Duration, so our standard time based converters work.", "url": "https://github.com/quarkusio/quarkus/pull/9891#discussion_r438046734", "createdAt": "2020-06-10T11:17:39Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/OidcTenantConfig.java", "diffHunk": "@@ -638,6 +638,12 @@ public static Token fromAudience(String... audience) {\n         @ConfigItem\n         public boolean refreshExpired;\n \n+        /**\n+         * Forced JWK set refresh interval in minutes.\n+         */\n+        @ConfigItem(defaultValue = \"10\")\n+        public long forcedJwkRefreshInterval = 10;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb18f05d0d6e133fa66f916fdef9cd6b4ba95740"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0ODMxOA==", "bodyText": "Wouldn't it be a lot more efficient to just use a loop? Using a regex to count the number of '.' characters in a string feels like overkill.", "url": "https://github.com/quarkusio/quarkus/pull/9891#discussion_r438048318", "createdAt": "2020-06-10T11:20:58Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java", "diffHunk": "@@ -27,11 +29,25 @@\n      * ignoring those which are located inside a pair of the double quotes.\n      */\n     private static final Pattern CLAIM_PATH_PATTERN = Pattern.compile(\"\\\\/(?=(?:(?:[^\\\"]*\\\"){2})*[^\\\"]*$)\");\n+    private static final Pattern JWT_PARTS_PATTERN = Pattern.compile(\"\\\\.\");\n \n     private OidcUtils() {\n \n     }\n \n+    public static boolean isOpaqueToken(String token) {\n+        return JWT_PARTS_PATTERN.split(token).length != 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb18f05d0d6e133fa66f916fdef9cd6b4ba95740"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6d153a6f2ea0ad644e33a715aaeee35a0760a93", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/e6d153a6f2ea0ad644e33a715aaeee35a0760a93", "committedDate": "2020-06-10T13:26:18Z", "message": "Minor optimizations"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MDY2Nzg5", "url": "https://github.com/quarkusio/quarkus/pull/9891#pullrequestreview-428066789", "createdAt": "2020-06-10T13:44:15Z", "commit": {"oid": "e6d153a6f2ea0ad644e33a715aaeee35a0760a93"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzo0NDoxNVrOGh1gOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzo1NzozOFrOGh2HZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEzMjc5NQ==", "bodyText": "I'm not sure if it is a good idea to log the state value considering it is used in OAuth2 to prevent CSRF.", "url": "https://github.com/quarkusio/quarkus/pull/9891#discussion_r438132795", "createdAt": "2020-06-10T13:44:15Z", "author": {"login": "pedroigor"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -193,7 +193,8 @@ public SecurityIdentity apply(Throwable throwable) {\n                 LOG.debug(\"State parameter can not be empty or multi-valued\");\n                 return Uni.createFrom().failure(new AuthenticationCompletionException());\n             } else if (!stateCookie.getValue().startsWith(values.get(0))) {\n-                LOG.debug(\"State cookie does not match the state parameter\");\n+                LOG.debugf(\"State cookie value '%s' does not match the state query parameter value '%s'\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6d153a6f2ea0ad644e33a715aaeee35a0760a93"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE0MjgyMA==", "bodyText": "A minor comment. Right now we only support JWS, but JWE uses 5 tokens.\nBut I guess we would handle JWEs as opaque tokens considering that you would need an introspection call to check claims.", "url": "https://github.com/quarkusio/quarkus/pull/9891#discussion_r438142820", "createdAt": "2020-06-10T13:57:38Z", "author": {"login": "pedroigor"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcUtils.java", "diffHunk": "@@ -32,6 +35,31 @@ private OidcUtils() {\n \n     }\n \n+    public static boolean isOpaqueToken(String token) {\n+        return new StringTokenizer(token, \".\").countTokens() != 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6d153a6f2ea0ad644e33a715aaeee35a0760a93"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcc41479459bf7721aa2109061441dceea0c0ceb", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/dcc41479459bf7721aa2109061441dceea0c0ceb", "committedDate": "2020-06-10T15:21:06Z", "message": "Revert logging the state values"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTA1NDI4", "url": "https://github.com/quarkusio/quarkus/pull/9891#pullrequestreview-428505428", "createdAt": "2020-06-10T23:58:18Z", "commit": {"oid": "dcc41479459bf7721aa2109061441dceea0c0ceb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5NzIxNDU3", "url": "https://github.com/quarkusio/quarkus/pull/9891#pullrequestreview-429721457", "createdAt": "2020-06-12T13:03:00Z", "commit": {"oid": "dcc41479459bf7721aa2109061441dceea0c0ceb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4321, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}