{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MDQ3MDc5", "number": 12140, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTo1MjoxMVrOEkHr4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTo1MjoxMVrOEkHr4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzEwMTEyOnYy", "diffSide": "RIGHT", "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTo1MjoxMVrOHS3fPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozOTo0MlrOHS5UgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0NTUzNQ==", "bodyText": "It's minor and you don't have to fix it this time but we usually recommend to do:\nif (socketMetric == null) {\n    return socketMetric; // or return null\n}\n\nrather than nesting ifs.\nIt's far more readable to just take care of the exceptional cases at the beginning of your method and then do your logic.", "url": "https://github.com/quarkusio/quarkus/pull/12140#discussion_r489545535", "createdAt": "2020-09-16T15:52:11Z", "author": {"login": "gsmet"}, "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java", "diffHunk": "@@ -77,12 +77,14 @@\n     @Override\n     public MetricsContext responsePushed(MetricsContext socketMetric, HttpMethod method, String uri,\n             HttpServerResponse response) {\n-        String path = VertxMetricsTags.parseUriPath(matchPatterns, ignorePatterns, uri);\n-        if (path != null) {\n-            registry.counter(nameHttpServerPush,\n-                    Tags.of(VertxMetricsTags.uri(path, response.getStatusCode()), VertxMetricsTags.method(method),\n-                            VertxMetricsTags.outcome(response), VertxMetricsTags.status(response.getStatusCode())))\n-                    .increment();\n+        if (socketMetric != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18688019277ff1af422dabcfeca23ad1e9ff78c3"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1NTg3Mw==", "bodyText": "I actually thought of doing that first as I prefer positive checks, too. Give me a few minutes", "url": "https://github.com/quarkusio/quarkus/pull/12140#discussion_r489555873", "createdAt": "2020-09-16T16:07:38Z", "author": {"login": "ebullient"}, "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java", "diffHunk": "@@ -77,12 +77,14 @@\n     @Override\n     public MetricsContext responsePushed(MetricsContext socketMetric, HttpMethod method, String uri,\n             HttpServerResponse response) {\n-        String path = VertxMetricsTags.parseUriPath(matchPatterns, ignorePatterns, uri);\n-        if (path != null) {\n-            registry.counter(nameHttpServerPush,\n-                    Tags.of(VertxMetricsTags.uri(path, response.getStatusCode()), VertxMetricsTags.method(method),\n-                            VertxMetricsTags.outcome(response), VertxMetricsTags.status(response.getStatusCode())))\n-                    .increment();\n+        if (socketMetric != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0NTUzNQ=="}, "originalCommit": {"oid": "18688019277ff1af422dabcfeca23ad1e9ff78c3"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU1OTkwNg==", "bodyText": "Yeah it's not really about positive checks, I would have said the same thing if it would have been a negative one. The idea is to keep the normal flow as simple as possible by evacuating special cases first.", "url": "https://github.com/quarkusio/quarkus/pull/12140#discussion_r489559906", "createdAt": "2020-09-16T16:14:03Z", "author": {"login": "gsmet"}, "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java", "diffHunk": "@@ -77,12 +77,14 @@\n     @Override\n     public MetricsContext responsePushed(MetricsContext socketMetric, HttpMethod method, String uri,\n             HttpServerResponse response) {\n-        String path = VertxMetricsTags.parseUriPath(matchPatterns, ignorePatterns, uri);\n-        if (path != null) {\n-            registry.counter(nameHttpServerPush,\n-                    Tags.of(VertxMetricsTags.uri(path, response.getStatusCode()), VertxMetricsTags.method(method),\n-                            VertxMetricsTags.outcome(response), VertxMetricsTags.status(response.getStatusCode())))\n-                    .increment();\n+        if (socketMetric != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0NTUzNQ=="}, "originalCommit": {"oid": "18688019277ff1af422dabcfeca23ad1e9ff78c3"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3NTU1Mw==", "bodyText": "I simplified a few, and clarified javadoc re: null params & return values.", "url": "https://github.com/quarkusio/quarkus/pull/12140#discussion_r489575553", "createdAt": "2020-09-16T16:39:42Z", "author": {"login": "ebullient"}, "path": "extensions/micrometer/runtime/src/main/java/io/quarkus/micrometer/runtime/binder/vertx/VertxHttpServerMetrics.java", "diffHunk": "@@ -77,12 +77,14 @@\n     @Override\n     public MetricsContext responsePushed(MetricsContext socketMetric, HttpMethod method, String uri,\n             HttpServerResponse response) {\n-        String path = VertxMetricsTags.parseUriPath(matchPatterns, ignorePatterns, uri);\n-        if (path != null) {\n-            registry.counter(nameHttpServerPush,\n-                    Tags.of(VertxMetricsTags.uri(path, response.getStatusCode()), VertxMetricsTags.method(method),\n-                            VertxMetricsTags.outcome(response), VertxMetricsTags.status(response.getStatusCode())))\n-                    .increment();\n+        if (socketMetric != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU0NTUzNQ=="}, "originalCommit": {"oid": "18688019277ff1af422dabcfeca23ad1e9ff78c3"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 288, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}