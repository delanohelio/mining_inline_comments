{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMjg2NTIw", "number": 7058, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMToxNjo0MVrODd_XuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMToxNjo0MVrODd_XuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNzczNTYwOnYy", "diffSide": "RIGHT", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/StartupBuildSteps.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMToxNjo0MVrOFm5-cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNDowNjozN1rOFm-C2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM0MDA4MA==", "bodyText": "I know it's somewhat far-fetched but should we care about non-built in scopes? Users can have custom ones, or there is Transactional one already present. Both cases will pass this check and try to add yet another scope on the bean (which should later on blow up).", "url": "https://github.com/quarkusio/quarkus/pull/7058#discussion_r376340080", "createdAt": "2020-02-07T11:16:41Z", "author": {"login": "manovotn"}, "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/StartupBuildSteps.java", "diffHunk": "@@ -45,6 +49,31 @@\n     static final MethodDescriptor CONTEXTUAL_DESTROY = MethodDescriptor.ofMethod(Contextual.class,\n             \"destroy\", void.class, Object.class, CreationalContext.class);\n \n+    private static final Logger LOGGER = Logger.getLogger(StartupBuildSteps.class);\n+\n+    @BuildStep\n+    AnnotationsTransformerBuildItem annotationTransformer() {\n+        return new AnnotationsTransformerBuildItem(new AnnotationsTransformer() {\n+\n+            @Override\n+            public boolean appliesTo(org.jboss.jandex.AnnotationTarget.Kind kind) {\n+                return kind == org.jboss.jandex.AnnotationTarget.Kind.CLASS;\n+            }\n+\n+            @Override\n+            public void transform(TransformationContext context) {\n+                if (context.isClass() && !BuiltinScope.isDeclaredOn(context.getTarget().asClass())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "206041b818a3a464842ff73732cb15328cd79bd9"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM4MjE5NQ==", "bodyText": "That's a good point. Although in this case I doubt that a @Startup bean would be annotated with @Transactional or a custom scope. Let's create a separate issue to handle this corretly. WDYT?", "url": "https://github.com/quarkusio/quarkus/pull/7058#discussion_r376382195", "createdAt": "2020-02-07T13:13:11Z", "author": {"login": "mkouba"}, "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/StartupBuildSteps.java", "diffHunk": "@@ -45,6 +49,31 @@\n     static final MethodDescriptor CONTEXTUAL_DESTROY = MethodDescriptor.ofMethod(Contextual.class,\n             \"destroy\", void.class, Object.class, CreationalContext.class);\n \n+    private static final Logger LOGGER = Logger.getLogger(StartupBuildSteps.class);\n+\n+    @BuildStep\n+    AnnotationsTransformerBuildItem annotationTransformer() {\n+        return new AnnotationsTransformerBuildItem(new AnnotationsTransformer() {\n+\n+            @Override\n+            public boolean appliesTo(org.jboss.jandex.AnnotationTarget.Kind kind) {\n+                return kind == org.jboss.jandex.AnnotationTarget.Kind.CLASS;\n+            }\n+\n+            @Override\n+            public void transform(TransformationContext context) {\n+                if (context.isClass() && !BuiltinScope.isDeclaredOn(context.getTarget().asClass())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM0MDA4MA=="}, "originalCommit": {"oid": "206041b818a3a464842ff73732cb15328cd79bd9"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQwMTk1OQ==", "bodyText": "Hm, the problem is that annotation transformers are registered before the final set of scopes is known...", "url": "https://github.com/quarkusio/quarkus/pull/7058#discussion_r376401959", "createdAt": "2020-02-07T13:56:40Z", "author": {"login": "mkouba"}, "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/StartupBuildSteps.java", "diffHunk": "@@ -45,6 +49,31 @@\n     static final MethodDescriptor CONTEXTUAL_DESTROY = MethodDescriptor.ofMethod(Contextual.class,\n             \"destroy\", void.class, Object.class, CreationalContext.class);\n \n+    private static final Logger LOGGER = Logger.getLogger(StartupBuildSteps.class);\n+\n+    @BuildStep\n+    AnnotationsTransformerBuildItem annotationTransformer() {\n+        return new AnnotationsTransformerBuildItem(new AnnotationsTransformer() {\n+\n+            @Override\n+            public boolean appliesTo(org.jboss.jandex.AnnotationTarget.Kind kind) {\n+                return kind == org.jboss.jandex.AnnotationTarget.Kind.CLASS;\n+            }\n+\n+            @Override\n+            public void transform(TransformationContext context) {\n+                if (context.isClass() && !BuiltinScope.isDeclaredOn(context.getTarget().asClass())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM0MDA4MA=="}, "originalCommit": {"oid": "206041b818a3a464842ff73732cb15328cd79bd9"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQwNjc0NA==", "bodyText": "I've created #7076", "url": "https://github.com/quarkusio/quarkus/pull/7058#discussion_r376406744", "createdAt": "2020-02-07T14:06:37Z", "author": {"login": "mkouba"}, "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/StartupBuildSteps.java", "diffHunk": "@@ -45,6 +49,31 @@\n     static final MethodDescriptor CONTEXTUAL_DESTROY = MethodDescriptor.ofMethod(Contextual.class,\n             \"destroy\", void.class, Object.class, CreationalContext.class);\n \n+    private static final Logger LOGGER = Logger.getLogger(StartupBuildSteps.class);\n+\n+    @BuildStep\n+    AnnotationsTransformerBuildItem annotationTransformer() {\n+        return new AnnotationsTransformerBuildItem(new AnnotationsTransformer() {\n+\n+            @Override\n+            public boolean appliesTo(org.jboss.jandex.AnnotationTarget.Kind kind) {\n+                return kind == org.jboss.jandex.AnnotationTarget.Kind.CLASS;\n+            }\n+\n+            @Override\n+            public void transform(TransformationContext context) {\n+                if (context.isClass() && !BuiltinScope.isDeclaredOn(context.getTarget().asClass())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM0MDA4MA=="}, "originalCommit": {"oid": "206041b818a3a464842ff73732cb15328cd79bd9"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1118, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}