{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNDA5MDU3", "number": 12970, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjoyMzoyNVrOEyMraw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODozNTowNFrOEyf2cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDcxOTc5OnYy", "diffSide": "RIGHT", "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwNjoyMzoyNVrOHos7dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTo0ODozMFrOHpDZpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ0MTIwNA==", "bodyText": "This doesn't seem to retry as the existing code does. The reason I added the retry is because I had seen the external service the test hits, be a tad unstable", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512441204", "createdAt": "2020-10-27T06:23:25Z", "author": {"login": "geoand"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();\n+        return String.valueOf(client.invoke().getStatus());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b910061b1ec10f7b0a92c6abdcfc3686c28ab1a"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2MjAzMw==", "bodyText": "Ah good catch. Probably should use FT here or the Junit's @Retry. WDYT?", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512662033", "createdAt": "2020-10-27T12:46:54Z", "author": {"login": "gastaldi"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();\n+        return String.valueOf(client.invoke().getStatus());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ0MTIwNA=="}, "originalCommit": {"oid": "2b910061b1ec10f7b0a92c6abdcfc3686c28ab1a"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2NDA5OQ==", "bodyText": "Both sound fine to me", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512664099", "createdAt": "2020-10-27T12:50:11Z", "author": {"login": "geoand"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();\n+        return String.valueOf(client.invoke().getStatus());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ0MTIwNA=="}, "originalCommit": {"oid": "2b910061b1ec10f7b0a92c6abdcfc3686c28ab1a"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgwOTM4MA==", "bodyText": "Ok, I used FT and it retries now. Thanks!", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512809380", "createdAt": "2020-10-27T15:48:30Z", "author": {"login": "gastaldi"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();\n+        return String.valueOf(client.invoke().getStatus());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ0MTIwNA=="}, "originalCommit": {"oid": "2b910061b1ec10f7b0a92c6abdcfc3686c28ab1a"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzA5MDUwOnYy", "diffSide": "LEFT", "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "isResolved": true, "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTo1MjoyNVrOHpDoIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNzo1Mjo1MlrOHrw3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA==", "bodyText": "Actually, now that I think of it, I think that this block was meant to test that that the truststore is used by default. With the change it won't be doing that as the truststore is specific to the rest client", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512813088", "createdAt": "2020-10-27T15:52:25Z", "author": {"login": "geoand"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxNjAwNQ==", "bodyText": "Sounds like a test smell to me :)", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512816005", "createdAt": "2020-10-27T15:55:44Z", "author": {"login": "gastaldi"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxOTIwNw==", "bodyText": "Maybe... But what other way do you have of testing that the truststore works in native mode?", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512819207", "createdAt": "2020-10-27T15:59:18Z", "author": {"login": "geoand"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg0Nzk5NA==", "bodyText": "Well, setting the truststore specifically in the TestResource class for the rest client works in native, maybe that's how we should do it to keep tests isolated", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512847994", "createdAt": "2020-10-27T16:35:09Z", "author": {"login": "gastaldi"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjg1MTI3Ng==", "bodyText": "The thing is that for native, truststore isn't settable at runtime IIRC", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512851276", "createdAt": "2020-10-27T16:39:26Z", "author": {"login": "geoand"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzMzNDI0OA==", "bodyText": "I am still against this change. The rest looks real good", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r513334248", "createdAt": "2020-10-28T10:28:19Z", "author": {"login": "geoand"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ2Mzg4OA==", "bodyText": "I am probably missing something, but how do you set the default trust store in this test? I don't see that being done in the existing test, can you point me to where that is set?", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r513463888", "createdAt": "2020-10-28T13:57:22Z", "author": {"login": "gastaldi"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzU5ODQ3NQ==", "bodyText": "I'll take a closer look tomorrow", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r513598475", "createdAt": "2020-10-28T16:43:17Z", "author": {"login": "geoand"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDkyNzM3OA==", "bodyText": "What I said above is indeed why it was done this way. And it works because of: \n  \n    \n      quarkus/integration-tests/rest-client/pom.xml\n    \n    \n         Line 105\n      in\n      22c529e\n    \n    \n    \n    \n\n        \n          \n           <javax.net.ssl.trustStore>${self-signed.trust-store}</javax.net.ssl.trustStore> \n        \n    \n  \n\n\nSo I really think this part of the PR should be reverted, otherwise we have no way of testing the default trust-store handling in native image", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r514927378", "createdAt": "2020-10-30T08:05:27Z", "author": {"login": "geoand"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0OTY3Mw==", "bodyText": "@geoand this wasn't changed, the system properties are still set when the test runs and the specified trust-store is still loaded as the default in both tests.\nNote that there isn't a QuarkusTestResourceLifecycleManager associated with the ExternalSelfSignedTestCase, so the self-signed.trust-store is used only in the javax.net.ssl.trustStore property", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r515649673", "createdAt": "2020-11-01T17:36:46Z", "author": {"login": "gastaldi"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0OTgxNw==", "bodyText": "Yeah, but unless I am misreading the PR, now there is nowhere where the default trust-store is exercised. This is what the existing code is meant to do", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r515649817", "createdAt": "2020-11-01T17:38:27Z", "author": {"login": "geoand"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1MDIxOQ==", "bodyText": "I see, but is this the right place to test this feature? I mean, this is not related to the rest-client integration, right?", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r515650219", "createdAt": "2020-11-01T17:41:41Z", "author": {"login": "gastaldi"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1MDY0OQ==", "bodyText": "Yes and no.\nI added it here because this came about when I fixed the SSL handling a little while a back (it broke when we moved to 19.3).\nAnd unless we have this sort of test, it can easily break again.\nSure there are perhaps better places to put it, but I don't really see a lot of value in moving it", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r515650649", "createdAt": "2020-11-01T17:45:42Z", "author": {"login": "geoand"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1MTMxNg==", "bodyText": "Cool, I'm convinced now. Thanks for the explanation \ud83d\ude09", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r515651316", "createdAt": "2020-11-01T17:52:08Z", "author": {"login": "gastaldi"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY1MTM4MA==", "bodyText": "Sure thing \ud83d\udc4c", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r515651380", "createdAt": "2020-11-01T17:52:52Z", "author": {"login": "geoand"}, "path": "integration-tests/rest-client/src/main/java/io/quarkus/it/rest/client/selfsigned/ExternalSelfSignedResource.java", "diffHunk": "@@ -1,45 +1,29 @@\n package io.quarkus.it.rest.client.selfsigned;\n \n import java.io.IOException;\n-import java.net.URL;\n \n-import javax.net.ssl.HttpsURLConnection;\n+import javax.inject.Inject;\n import javax.ws.rs.GET;\n import javax.ws.rs.Path;\n import javax.ws.rs.Produces;\n import javax.ws.rs.core.MediaType;\n \n+import org.eclipse.microprofile.rest.client.inject.RestClient;\n+\n /**\n  * This has nothing to do with rest-client, but we add it here in order to avoid creating\n  * a new integration test that would slow down our CI\n  */\n @Path(\"/self-signed\")\n public class ExternalSelfSignedResource {\n \n+    @Inject\n+    @RestClient\n+    ExternalSelfSignedClient client;\n+\n     @GET\n     @Produces(MediaType.TEXT_PLAIN)\n     public String perform() throws IOException {\n-        try {\n-            return doGetCipher();\n-        } catch (IOException e) {\n-\n-            // if it fails it might be because the remote service is down, so sleep and try again\n-            try {\n-                Thread.sleep(1000);\n-            } catch (InterruptedException ignored) {\n-\n-            }\n-\n-            return doGetCipher();\n-        }\n-    }\n-\n-    private String doGetCipher() throws IOException {\n-        // this URL provides an always on example of an HTTPS URL utilizing self-signed certificate\n-        URL url = new URL(\"https://self-signed.badssl.com/\");\n-        HttpsURLConnection con = (HttpsURLConnection) url.openConnection();\n-        con.setRequestMethod(\"GET\");\n-        con.getResponseCode();\n-        return con.getCipherSuite();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgxMzA4OA=="}, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzg2MDk2OnYy", "diffSide": "RIGHT", "path": "extensions/rest-client/runtime/src/main/java/io/quarkus/restclient/runtime/NoopHostnameVerifier.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODozNTowNFrOHpLLjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxODozNTowNFrOHpLLjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjkzNjg0Ng==", "bodyText": "If it's exposed to the user and not some implementation detail, it should be at the root, not in the runtime package.", "url": "https://github.com/quarkusio/quarkus/pull/12970#discussion_r512936846", "createdAt": "2020-10-27T18:35:04Z", "author": {"login": "gsmet"}, "path": "extensions/rest-client/runtime/src/main/java/io/quarkus/restclient/runtime/NoopHostnameVerifier.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package io.quarkus.restclient.runtime;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b2e2abce89525d43834344b8cb8e9165a73d06c"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4092, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}