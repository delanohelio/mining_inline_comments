{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0OTIzMzU1", "number": 12044, "title": "Allow adding /health endpoint to OpenAPI using config", "bodyText": "This PR supersede #11988\nFix #11965\nAs suggested by @kenfinnigan this version uses an OpenAPI BuildItem that other extensions can use to contribute to the\nOpenAPI Document.\nThe changes include:\n\nNew build item in OpenAPI and changes to the processor to include the filters from the builditem when generating the document.\nHealthOpenAPIFilter in Health extension to add the Health endpoints (if configured)\n\nSigned-off-by: Phillip Kruger phillip.kruger@gmail.com", "createdAt": "2020-09-11T10:39:28Z", "url": "https://github.com/quarkusio/quarkus/pull/12044", "merged": true, "mergeCommit": {"oid": "6394db3a333351b0ad3d942a4533da92894c887a"}, "closed": true, "closedAt": "2020-09-16T17:11:30Z", "author": {"login": "phillip-kruger"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdH0BP-AFqTQ4NjczNzU0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJD0q-AH2gAyNDg0OTIzMzU1OjliMTY2YWQ0ODhhOGRiNDNiMTE4ODA2YzMyZGJiNWU5ZWIxZjEwMGI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NzM3NTQ3", "url": "https://github.com/quarkusio/quarkus/pull/12044#pullrequestreview-486737547", "createdAt": "2020-09-11T11:51:08Z", "commit": {"oid": "8b1ce2ec32162a0b8c41d1e79a7fc269d0401afc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NzM0ODk1", "url": "https://github.com/quarkusio/quarkus/pull/12044#pullrequestreview-486734895", "createdAt": "2020-09-11T11:46:38Z", "commit": {"oid": "8b1ce2ec32162a0b8c41d1e79a7fc269d0401afc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMTo0NjozOFrOHQbmiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxMTo0NjozOFrOHQbmiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njk5MTQ5Ng==", "bodyText": "should also have 503 and 500 - https://github.com/eclipse/microprofile-health/blob/master/spec/src/main/asciidoc/protocol-wireformat.adoc#status-codes", "url": "https://github.com/quarkusio/quarkus/pull/12044#discussion_r486991496", "createdAt": "2020-09-11T11:46:38Z", "author": {"login": "xstefank"}, "path": "extensions/smallrye-health/deployment/src/main/java/io/quarkus/smallrye/health/deployment/HealthOpenAPIFilter.java", "diffHunk": "@@ -0,0 +1,214 @@\n+package io.quarkus.smallrye.health.deployment;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.eclipse.microprofile.openapi.OASFilter;\n+import org.eclipse.microprofile.openapi.models.OpenAPI;\n+import org.eclipse.microprofile.openapi.models.Operation;\n+import org.eclipse.microprofile.openapi.models.PathItem;\n+import org.eclipse.microprofile.openapi.models.Paths;\n+import org.eclipse.microprofile.openapi.models.media.Content;\n+import org.eclipse.microprofile.openapi.models.media.MediaType;\n+import org.eclipse.microprofile.openapi.models.media.Schema;\n+import org.eclipse.microprofile.openapi.models.responses.APIResponse;\n+import org.eclipse.microprofile.openapi.models.responses.APIResponses;\n+\n+import io.smallrye.openapi.api.models.ComponentsImpl;\n+import io.smallrye.openapi.api.models.OperationImpl;\n+import io.smallrye.openapi.api.models.PathItemImpl;\n+import io.smallrye.openapi.api.models.PathsImpl;\n+import io.smallrye.openapi.api.models.media.ContentImpl;\n+import io.smallrye.openapi.api.models.media.MediaTypeImpl;\n+import io.smallrye.openapi.api.models.media.SchemaImpl;\n+import io.smallrye.openapi.api.models.responses.APIResponseImpl;\n+import io.smallrye.openapi.api.models.responses.APIResponsesImpl;\n+\n+/**\n+ * Create OpenAPI entries (if configured)\n+ */\n+public class HealthOpenAPIFilter implements OASFilter {\n+    private static final List<String> MICROPROFILE_HEALTH_TAG = Collections.singletonList(\"MicroProfile Health\");\n+\n+    private final String rootPath;\n+    private final String livenessPath;\n+    private final String readinessPath;\n+\n+    public HealthOpenAPIFilter(String rootPath, String livenessPath, String readinessPath) {\n+        this.rootPath = rootPath;\n+        this.livenessPath = livenessPath;\n+        this.readinessPath = readinessPath;\n+    }\n+\n+    @Override\n+    public void filterOpenAPI(OpenAPI openAPI) {\n+        if (openAPI.getComponents() == null) {\n+            openAPI.setComponents(new ComponentsImpl());\n+        }\n+        openAPI.getComponents().addSchema(\"HealthCheckResponse\", createHealthCheckResponse());\n+        openAPI.getComponents().addSchema(\"State\", createState());\n+\n+        if (openAPI.getPaths() == null) {\n+            openAPI.setPaths(new PathsImpl());\n+        }\n+        Paths paths = openAPI.getPaths();\n+\n+        // Health\n+        paths.addPathItem(rootPath, createHealthPathItem());\n+\n+        // Liveness\n+        paths.addPathItem(livenessPath, createLivenessPathItem());\n+\n+        // Readiness\n+        paths.addPathItem(readinessPath, createReadinessPathItem());\n+    }\n+\n+    private PathItem createHealthPathItem() {\n+        PathItem pathItem = new PathItemImpl();\n+        pathItem.setDescription(\"MicroProfile Health Endpoint\");\n+        pathItem.setSummary(\n+                \"MicroProfile Health provides a way for your application to distribute information about its healthiness state to state whether or not it is able to function properly\");\n+        pathItem.setGET(createHealthOperation());\n+        return pathItem;\n+    }\n+\n+    private PathItem createLivenessPathItem() {\n+        PathItem pathItem = new PathItemImpl();\n+        pathItem.setDescription(\"MicroProfile Health - Liveness Endpoint\");\n+        pathItem.setSummary(\n+                \"Liveness checks are utilized to tell whether the application should be restarted\");\n+        pathItem.setGET(createLivenessOperation());\n+        return pathItem;\n+    }\n+\n+    private PathItem createReadinessPathItem() {\n+        PathItem pathItem = new PathItemImpl();\n+        pathItem.setDescription(\"MicroProfile Health - Readiness Endpoint\");\n+        pathItem.setSummary(\n+                \"Readiness checks are used to tell whether the application is able to process requests\");\n+        pathItem.setGET(createReadinessOperation());\n+        return pathItem;\n+    }\n+\n+    private Operation createHealthOperation() {\n+        Operation operation = new OperationImpl();\n+        operation.setDescription(\"Check the health of the application\");\n+        operation.setOperationId(\"microprofile_health_root\");\n+        operation.setTags(MICROPROFILE_HEALTH_TAG);\n+        operation.setSummary(\"An aggregated view of the Liveness and Readiness of this application\");\n+        operation.setResponses(createAPIResponses());\n+        return operation;\n+    }\n+\n+    private Operation createLivenessOperation() {\n+        Operation operation = new OperationImpl();\n+        operation.setDescription(\"Check the liveness of the application\");\n+        operation.setOperationId(\"microprofile_health_liveness\");\n+        operation.setTags(MICROPROFILE_HEALTH_TAG);\n+        operation.setSummary(\"The Liveness check of this application\");\n+        operation.setResponses(createAPIResponses());\n+        return operation;\n+    }\n+\n+    private Operation createReadinessOperation() {\n+        Operation operation = new OperationImpl();\n+        operation.setDescription(\"Check the readiness of the application\");\n+        operation.setOperationId(\"microprofile_health_readiness\");\n+        operation.setTags(MICROPROFILE_HEALTH_TAG);\n+        operation.setSummary(\"The Readiness check of this application\");\n+        operation.setResponses(createAPIResponses());\n+        return operation;\n+    }\n+\n+    private APIResponses createAPIResponses() {\n+        APIResponses responses = new APIResponsesImpl();\n+        responses.addAPIResponse(\"200\", createAPIResponse());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b1ce2ec32162a0b8c41d1e79a7fc269d0401afc"}, "originalPosition": 128}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2NzY2Nzgx", "url": "https://github.com/quarkusio/quarkus/pull/12044#pullrequestreview-486766781", "createdAt": "2020-09-11T12:37:30Z", "commit": {"oid": "5298a08f471a91e6f4cc177896c71006368c0e30"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2OTA1Nzcz", "url": "https://github.com/quarkusio/quarkus/pull/12044#pullrequestreview-486905773", "createdAt": "2020-09-11T15:25:29Z", "commit": {"oid": "5298a08f471a91e6f4cc177896c71006368c0e30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNToyNToyOVrOHQjcnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNToyNToyOVrOHQjcnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMDAyOQ==", "bodyText": "Maybe this should be more specific? Like OpenAPIFilterBuildItem?", "url": "https://github.com/quarkusio/quarkus/pull/12044#discussion_r487120029", "createdAt": "2020-09-11T15:25:29Z", "author": {"login": "gastaldi"}, "path": "extensions/smallrye-openapi/spi/src/main/java/io/quarkus/smallrye/openapi/deployment/spi/OpenAPIBuildItem.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package io.quarkus.smallrye.openapi.deployment.spi;\n+\n+import org.eclipse.microprofile.openapi.OASFilter;\n+\n+import io.quarkus.builder.item.MultiBuildItem;\n+\n+public final class OpenAPIBuildItem extends MultiBuildItem {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5298a08f471a91e6f4cc177896c71006368c0e30"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2OTA5NjEy", "url": "https://github.com/quarkusio/quarkus/pull/12044#pullrequestreview-486909612", "createdAt": "2020-09-11T15:30:13Z", "commit": {"oid": "5298a08f471a91e6f4cc177896c71006368c0e30"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTozMDoxM1rOHQjoXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTozMDoxM1rOHQjoXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMzAzOQ==", "bodyText": "Interesting that this works, I always thought we had to use simple types and build the object when the build item is consumed", "url": "https://github.com/quarkusio/quarkus/pull/12044#discussion_r487123039", "createdAt": "2020-09-11T15:30:13Z", "author": {"login": "gastaldi"}, "path": "extensions/smallrye-openapi/spi/src/main/java/io/quarkus/smallrye/openapi/deployment/spi/OpenAPIBuildItem.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package io.quarkus.smallrye.openapi.deployment.spi;\n+\n+import org.eclipse.microprofile.openapi.OASFilter;\n+\n+import io.quarkus.builder.item.MultiBuildItem;\n+\n+public final class OpenAPIBuildItem extends MultiBuildItem {\n+\n+    private final OASFilter filter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5298a08f471a91e6f4cc177896c71006368c0e30"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2OTA4MDI3", "url": "https://github.com/quarkusio/quarkus/pull/12044#pullrequestreview-486908027", "createdAt": "2020-09-11T15:28:20Z", "commit": {"oid": "5298a08f471a91e6f4cc177896c71006368c0e30"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNToyODoyMFrOHQjjdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQxNTozMDo0OVrOHQjptQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMTc4MA==", "bodyText": "Granted I don't know if this would work.\nBut could the spi dependency be optional and then use a different build step method that is only \"used\" if OpenAPI extension is actually present?", "url": "https://github.com/quarkusio/quarkus/pull/12044#discussion_r487121780", "createdAt": "2020-09-11T15:28:20Z", "author": {"login": "kenfinnigan"}, "path": "extensions/smallrye-health/deployment/src/main/java/io/quarkus/smallrye/health/deployment/SmallRyeHealthProcessor.java", "diffHunk": "@@ -175,6 +176,7 @@ void build(SmallRyeHealthRecorder recorder,\n \n     @BuildStep\n     public void defineHealthRoutes(BuildProducer<RouteBuildItem> routes,\n+            BuildProducer<OpenAPIBuildItem> openAPIProducer,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5298a08f471a91e6f4cc177896c71006368c0e30"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMzM4MQ==", "bodyText": "I'm wondering if it needs to be super specific to what we're actually doing.\nThough what's being included is an implementation of OASFilter, maybe the build item should be something like IncludeEndpointInOpenAPIDefinitionBuildItem? I know, very wordy, but elaborates what it's for", "url": "https://github.com/quarkusio/quarkus/pull/12044#discussion_r487123381", "createdAt": "2020-09-11T15:30:49Z", "author": {"login": "kenfinnigan"}, "path": "extensions/smallrye-openapi/spi/src/main/java/io/quarkus/smallrye/openapi/deployment/spi/OpenAPIBuildItem.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package io.quarkus.smallrye.openapi.deployment.spi;\n+\n+import org.eclipse.microprofile.openapi.OASFilter;\n+\n+import io.quarkus.builder.item.MultiBuildItem;\n+\n+public final class OpenAPIBuildItem extends MultiBuildItem {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzEyMDAyOQ=="}, "originalCommit": {"oid": "5298a08f471a91e6f4cc177896c71006368c0e30"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3ODc3MTAx", "url": "https://github.com/quarkusio/quarkus/pull/12044#pullrequestreview-487877101", "createdAt": "2020-09-14T15:14:27Z", "commit": {"oid": "a3b69b8287e7b9ec6d89136f1825a9a899bea209"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNToxNDoyOFrOHRZ6VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNToxNDoyOFrOHRZ6VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAxMjM3Mw==", "bodyText": "Not a deal breaker, but wondering if there's a better name?\nMaybe \"openapi.included\"?\nTo me, \"openapi.enabled\" doesn't really embody what happens", "url": "https://github.com/quarkusio/quarkus/pull/12044#discussion_r488012373", "createdAt": "2020-09-14T15:14:28Z", "author": {"login": "kenfinnigan"}, "path": "extensions/smallrye-health/deployment/src/main/java/io/quarkus/smallrye/health/deployment/HealthBuildTimeConfig.java", "diffHunk": "@@ -10,4 +10,10 @@\n      */\n     @ConfigItem(name = \"extensions.enabled\", defaultValue = \"true\")\n     public boolean extensionsEnabled;\n+\n+    /**\n+     * Whether or not to include the Liveness and Readiness Health endpoints in the generated OpenAPI document\n+     */\n+    @ConfigItem(name = \"openapi.enabled\", defaultValue = \"false\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3b69b8287e7b9ec6d89136f1825a9a899bea209"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3ODc4OTcy", "url": "https://github.com/quarkusio/quarkus/pull/12044#pullrequestreview-487878972", "createdAt": "2020-09-14T15:16:25Z", "commit": {"oid": "a3b69b8287e7b9ec6d89136f1825a9a899bea209"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNToxNjoyNVrOHRZ_-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNToxNjoyNVrOHRZ_-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAxMzgxOA==", "bodyText": "I think this should be in a separate build step that means it is more easily not included if OpenAPI isn't present.\nCan something like this be done: https://github.com/quarkusio/quarkus/blob/master/extensions/micrometer/deployment/src/main/java/io/quarkus/micrometer/deployment/MicrometerProcessor.java#L58", "url": "https://github.com/quarkusio/quarkus/pull/12044#discussion_r488013818", "createdAt": "2020-09-14T15:16:25Z", "author": {"login": "kenfinnigan"}, "path": "extensions/smallrye-health/deployment/src/main/java/io/quarkus/smallrye/health/deployment/SmallRyeHealthProcessor.java", "diffHunk": "@@ -220,6 +225,13 @@ public void defineHealthRoutes(BuildProducer<RouteBuildItem> routes,\n                     new RouteBuildItem(health.rootPath + health.groupPath + \"/\" + healthGroup,\n                             handler, HandlerType.BLOCKING));\n         }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3b69b8287e7b9ec6d89136f1825a9a899bea209"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3ODgwMTAw", "url": "https://github.com/quarkusio/quarkus/pull/12044#pullrequestreview-487880100", "createdAt": "2020-09-14T15:17:37Z", "commit": {"oid": "a3b69b8287e7b9ec6d89136f1825a9a899bea209"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNToxNzozN1rOHRaDdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNToxNzozN1rOHRaDdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAxNDcwOQ==", "bodyText": "Does it work if the OpenAPI SPI dependency is optional?", "url": "https://github.com/quarkusio/quarkus/pull/12044#discussion_r488014709", "createdAt": "2020-09-14T15:17:37Z", "author": {"login": "kenfinnigan"}, "path": "extensions/smallrye-health/deployment/pom.xml", "diffHunk": "@@ -34,6 +34,10 @@\n             <groupId>io.quarkus</groupId>\n             <artifactId>quarkus-smallrye-health-spi</artifactId>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3b69b8287e7b9ec6d89136f1825a9a899bea209"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MDI0MTYz", "url": "https://github.com/quarkusio/quarkus/pull/12044#pullrequestreview-488024163", "createdAt": "2020-09-14T18:11:45Z", "commit": {"oid": "f95d39220818faca88427636e7c00a66d3183159"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODoxMTo0NVrOHRg9VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxODoxMTo0NVrOHRg9VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODEyNzgyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                SMALLRYE_OPERAPI;\n          \n          \n            \n                SMALLRYE_OPENAPI;", "url": "https://github.com/quarkusio/quarkus/pull/12044#discussion_r488127828", "createdAt": "2020-09-14T18:11:45Z", "author": {"login": "gastaldi"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/Capability.java", "diffHunk": "@@ -59,7 +59,8 @@\n      * Presence of SmallRye OpenTracing.\n      */\n     SMALLRYE_OPENTRACING,\n-    SPRING_WEB;\n+    SPRING_WEB,\n+    SMALLRYE_OPERAPI;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f95d39220818faca88427636e7c00a66d3183159"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MDI1NDg3", "url": "https://github.com/quarkusio/quarkus/pull/12044#pullrequestreview-488025487", "createdAt": "2020-09-14T18:13:38Z", "commit": {"oid": "2a559a0d586e44c9574c17b971a3e7bc8ec98daa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c19900c331e7568e5e46d5bcaa3e65981e649b17", "author": {"user": {"login": "phillip-kruger", "name": "Phillip Kr\u00fcger"}}, "url": "https://github.com/quarkusio/quarkus/commit/c19900c331e7568e5e46d5bcaa3e65981e649b17", "committedDate": "2020-09-15T08:48:08Z", "message": "Allow adding /health endpoint to OpenAPI using config\n\nSigned-off-by: Phillip Kruger <phillip.kruger@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b166ad488a8db43b118806c32dbb5e9eb1f100b", "author": {"user": {"login": "phillip-kruger", "name": "Phillip Kr\u00fcger"}}, "url": "https://github.com/quarkusio/quarkus/commit/9b166ad488a8db43b118806c32dbb5e9eb1f100b", "committedDate": "2020-09-15T08:49:48Z", "message": "Merge branch 'master' into openapi-add-health2"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 451, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}