{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2OTgwOTMw", "number": 7799, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNzoyNjoxMVrODnW0ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNzoyNjoxMVrODnW0ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTk0OTc5OnYy", "diffSide": "RIGHT", "path": "test-framework/junit5-internal/src/main/java/io/quarkus/test/QuarkusDevModeTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNzoyNjoxMVrOF1TlIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwODowNzoxOVrOF1UfuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQzOTY0OQ==", "bodyText": "I don't really understand this, why sleep when the timeout has been exceeded and not just throw the exception right away?", "url": "https://github.com/quarkusio/quarkus/pull/7799#discussion_r391439649", "createdAt": "2020-03-12T07:26:11Z", "author": {"login": "geoand"}, "path": "test-framework/junit5-internal/src/main/java/io/quarkus/test/QuarkusDevModeTest.java", "diffHunk": "@@ -404,10 +404,27 @@ public void addResourceFile(String path, byte[] data) {\n      */\n     public void deleteResourceFile(String path) {\n         final Path resourceFilePath = deploymentResourcePath.resolve(path);\n-        try {\n-            Files.delete(resourceFilePath);\n-        } catch (IOException e) {\n-            throw new UncheckedIOException(e);\n+        long timeout = System.currentTimeMillis() + 5000;\n+        //in general there is a potential race here\n+        //if you serve a file you will send the data to the client, then close the resource\n+        //this means that by the time the client request is run the file may not \n+        //have been closed yet, as the test sees the response as being complete after the last data is send\n+        //we wait up to 5s for this condition to be resolved\n+        for (;;) {\n+            try {\n+                Files.delete(resourceFilePath);\n+                break;\n+            } catch (IOException e) {\n+                if (System.currentTimeMillis() < timeout) {\n+                    continue;\n+                }\n+                try {\n+                    Thread.sleep(50);\n+                } catch (InterruptedException ex) {\n+                    //ignore\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fde13441484357bef80061bc2a691e1da34a94f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ0Mzc5NQ==", "bodyText": "Oops, I have them in the wrong order", "url": "https://github.com/quarkusio/quarkus/pull/7799#discussion_r391443795", "createdAt": "2020-03-12T07:38:11Z", "author": {"login": "stuartwdouglas"}, "path": "test-framework/junit5-internal/src/main/java/io/quarkus/test/QuarkusDevModeTest.java", "diffHunk": "@@ -404,10 +404,27 @@ public void addResourceFile(String path, byte[] data) {\n      */\n     public void deleteResourceFile(String path) {\n         final Path resourceFilePath = deploymentResourcePath.resolve(path);\n-        try {\n-            Files.delete(resourceFilePath);\n-        } catch (IOException e) {\n-            throw new UncheckedIOException(e);\n+        long timeout = System.currentTimeMillis() + 5000;\n+        //in general there is a potential race here\n+        //if you serve a file you will send the data to the client, then close the resource\n+        //this means that by the time the client request is run the file may not \n+        //have been closed yet, as the test sees the response as being complete after the last data is send\n+        //we wait up to 5s for this condition to be resolved\n+        for (;;) {\n+            try {\n+                Files.delete(resourceFilePath);\n+                break;\n+            } catch (IOException e) {\n+                if (System.currentTimeMillis() < timeout) {\n+                    continue;\n+                }\n+                try {\n+                    Thread.sleep(50);\n+                } catch (InterruptedException ex) {\n+                    //ignore\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQzOTY0OQ=="}, "originalCommit": {"oid": "9fde13441484357bef80061bc2a691e1da34a94f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ1NDY0OA==", "bodyText": "OK :). I'll approve as soon as it's fixed", "url": "https://github.com/quarkusio/quarkus/pull/7799#discussion_r391454648", "createdAt": "2020-03-12T08:07:19Z", "author": {"login": "geoand"}, "path": "test-framework/junit5-internal/src/main/java/io/quarkus/test/QuarkusDevModeTest.java", "diffHunk": "@@ -404,10 +404,27 @@ public void addResourceFile(String path, byte[] data) {\n      */\n     public void deleteResourceFile(String path) {\n         final Path resourceFilePath = deploymentResourcePath.resolve(path);\n-        try {\n-            Files.delete(resourceFilePath);\n-        } catch (IOException e) {\n-            throw new UncheckedIOException(e);\n+        long timeout = System.currentTimeMillis() + 5000;\n+        //in general there is a potential race here\n+        //if you serve a file you will send the data to the client, then close the resource\n+        //this means that by the time the client request is run the file may not \n+        //have been closed yet, as the test sees the response as being complete after the last data is send\n+        //we wait up to 5s for this condition to be resolved\n+        for (;;) {\n+            try {\n+                Files.delete(resourceFilePath);\n+                break;\n+            } catch (IOException e) {\n+                if (System.currentTimeMillis() < timeout) {\n+                    continue;\n+                }\n+                try {\n+                    Thread.sleep(50);\n+                } catch (InterruptedException ex) {\n+                    //ignore\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQzOTY0OQ=="}, "originalCommit": {"oid": "9fde13441484357bef80061bc2a691e1da34a94f"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4835, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}