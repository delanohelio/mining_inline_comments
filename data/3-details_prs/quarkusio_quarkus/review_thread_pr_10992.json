{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MTY0MzYx", "number": 10992, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzo0MjowNlrOESZGpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTowNDo1N1rOESbe4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzIxMTI1OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-web/deployment/src/main/java/io/quarkus/vertx/web/deployment/VertxWebProcessor.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMzo0MjowN1rOG3i-6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNDo1Nzo0NlrOG3mX-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5ODAyNQ==", "bodyText": "Could these types be wrapped somehow in some other type? If so, it would be better to use a custom predicate (which delegates to the default one once these are checked).", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460898025", "createdAt": "2020-07-27T13:42:07Z", "author": {"login": "gsmet"}, "path": "extensions/vertx-web/deployment/src/main/java/io/quarkus/vertx/web/deployment/VertxWebProcessor.java", "diffHunk": "@@ -599,6 +611,17 @@ void implementInvoke(HandlerDescriptor descriptor, BeanInfo bean, MethodInfo met\n         invoke.returnValue(null);\n     }\n \n+    private static void registerForReflection(Type contentType,\n+            BuildProducer<ReflectiveHierarchyBuildItem> reflectiveHierarchy) {\n+        if (io.quarkus.arc.processor.DotNames.STRING.equals(contentType.name())\n+                || DotNames.BUFFER.equals(contentType.name())\n+                || DotNames.JSON_ARRAY.equals(contentType.name())\n+                || DotNames.JSON_OBJECT.equals(contentType.name())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d80360dd9d899e25733c76e7283758f01f548e6e"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkwNTE3MA==", "bodyText": "I'm not sure I understand the question...", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460905170", "createdAt": "2020-07-27T13:52:07Z", "author": {"login": "mkouba"}, "path": "extensions/vertx-web/deployment/src/main/java/io/quarkus/vertx/web/deployment/VertxWebProcessor.java", "diffHunk": "@@ -599,6 +611,17 @@ void implementInvoke(HandlerDescriptor descriptor, BeanInfo bean, MethodInfo met\n         invoke.returnValue(null);\n     }\n \n+    private static void registerForReflection(Type contentType,\n+            BuildProducer<ReflectiveHierarchyBuildItem> reflectiveHierarchy) {\n+        if (io.quarkus.arc.processor.DotNames.STRING.equals(contentType.name())\n+                || DotNames.BUFFER.equals(contentType.name())\n+                || DotNames.JSON_ARRAY.equals(contentType.name())\n+                || DotNames.JSON_OBJECT.equals(contentType.name())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5ODAyNQ=="}, "originalCommit": {"oid": "d80360dd9d899e25733c76e7283758f01f548e6e"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkxOTI2MA==", "bodyText": "So if you have a return type that is:\nclass Wrapper {\n   private JsonArray array;\n}\n\nWhat you do won't work. While using the ignore predicate will properly ignore the inner JsonArray.\nAgain not sure it can happen in your case.", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460919260", "createdAt": "2020-07-27T14:12:02Z", "author": {"login": "gsmet"}, "path": "extensions/vertx-web/deployment/src/main/java/io/quarkus/vertx/web/deployment/VertxWebProcessor.java", "diffHunk": "@@ -599,6 +611,17 @@ void implementInvoke(HandlerDescriptor descriptor, BeanInfo bean, MethodInfo met\n         invoke.returnValue(null);\n     }\n \n+    private static void registerForReflection(Type contentType,\n+            BuildProducer<ReflectiveHierarchyBuildItem> reflectiveHierarchy) {\n+        if (io.quarkus.arc.processor.DotNames.STRING.equals(contentType.name())\n+                || DotNames.BUFFER.equals(contentType.name())\n+                || DotNames.JSON_ARRAY.equals(contentType.name())\n+                || DotNames.JSON_OBJECT.equals(contentType.name())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5ODAyNQ=="}, "originalCommit": {"oid": "d80360dd9d899e25733c76e7283758f01f548e6e"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkyOTkwNQ==", "bodyText": "@mkouba see where ReflectiveHierarchyIgnoreWarningBuildItem is being used, or the ctor of ReflectiveHierarchyBuildItem that takes a preducate.\nBasically the ensure that whenever those types are encountered (no matter what the nesting or reason they \"should\" be registered, thet won't be)", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460929905", "createdAt": "2020-07-27T14:26:18Z", "author": {"login": "geoand"}, "path": "extensions/vertx-web/deployment/src/main/java/io/quarkus/vertx/web/deployment/VertxWebProcessor.java", "diffHunk": "@@ -599,6 +611,17 @@ void implementInvoke(HandlerDescriptor descriptor, BeanInfo bean, MethodInfo met\n         invoke.returnValue(null);\n     }\n \n+    private static void registerForReflection(Type contentType,\n+            BuildProducer<ReflectiveHierarchyBuildItem> reflectiveHierarchy) {\n+        if (io.quarkus.arc.processor.DotNames.STRING.equals(contentType.name())\n+                || DotNames.BUFFER.equals(contentType.name())\n+                || DotNames.JSON_ARRAY.equals(contentType.name())\n+                || DotNames.JSON_OBJECT.equals(contentType.name())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5ODAyNQ=="}, "originalCommit": {"oid": "d80360dd9d899e25733c76e7283758f01f548e6e"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk0MDMzOA==", "bodyText": "Ok, I think I understand now! So I don't expect nested values like this and even if they are used like this it shouldn't be a problem to register those types for reflection. That said, a predicate would be definitely a cleaner solution ;-).", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460940338", "createdAt": "2020-07-27T14:40:02Z", "author": {"login": "mkouba"}, "path": "extensions/vertx-web/deployment/src/main/java/io/quarkus/vertx/web/deployment/VertxWebProcessor.java", "diffHunk": "@@ -599,6 +611,17 @@ void implementInvoke(HandlerDescriptor descriptor, BeanInfo bean, MethodInfo met\n         invoke.returnValue(null);\n     }\n \n+    private static void registerForReflection(Type contentType,\n+            BuildProducer<ReflectiveHierarchyBuildItem> reflectiveHierarchy) {\n+        if (io.quarkus.arc.processor.DotNames.STRING.equals(contentType.name())\n+                || DotNames.BUFFER.equals(contentType.name())\n+                || DotNames.JSON_ARRAY.equals(contentType.name())\n+                || DotNames.JSON_OBJECT.equals(contentType.name())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5ODAyNQ=="}, "originalCommit": {"oid": "d80360dd9d899e25733c76e7283758f01f548e6e"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk0MDc1Mg==", "bodyText": "Is it better now?", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460940752", "createdAt": "2020-07-27T14:40:38Z", "author": {"login": "mkouba"}, "path": "extensions/vertx-web/deployment/src/main/java/io/quarkus/vertx/web/deployment/VertxWebProcessor.java", "diffHunk": "@@ -599,6 +611,17 @@ void implementInvoke(HandlerDescriptor descriptor, BeanInfo bean, MethodInfo met\n         invoke.returnValue(null);\n     }\n \n+    private static void registerForReflection(Type contentType,\n+            BuildProducer<ReflectiveHierarchyBuildItem> reflectiveHierarchy) {\n+        if (io.quarkus.arc.processor.DotNames.STRING.equals(contentType.name())\n+                || DotNames.BUFFER.equals(contentType.name())\n+                || DotNames.JSON_ARRAY.equals(contentType.name())\n+                || DotNames.JSON_OBJECT.equals(contentType.name())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5ODAyNQ=="}, "originalCommit": {"oid": "d80360dd9d899e25733c76e7283758f01f548e6e"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1MzU5NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460953594", "createdAt": "2020-07-27T14:57:46Z", "author": {"login": "geoand"}, "path": "extensions/vertx-web/deployment/src/main/java/io/quarkus/vertx/web/deployment/VertxWebProcessor.java", "diffHunk": "@@ -599,6 +611,17 @@ void implementInvoke(HandlerDescriptor descriptor, BeanInfo bean, MethodInfo met\n         invoke.returnValue(null);\n     }\n \n+    private static void registerForReflection(Type contentType,\n+            BuildProducer<ReflectiveHierarchyBuildItem> reflectiveHierarchy) {\n+        if (io.quarkus.arc.processor.DotNames.STRING.equals(contentType.name())\n+                || DotNames.BUFFER.equals(contentType.name())\n+                || DotNames.JSON_ARRAY.equals(contentType.name())\n+                || DotNames.JSON_OBJECT.equals(contentType.name())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg5ODAyNQ=="}, "originalCommit": {"oid": "d80360dd9d899e25733c76e7283758f01f548e6e"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzU4ODQ0OnYy", "diffSide": "RIGHT", "path": ".github/workflows/ci-actions.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTowMjowMlrOG3mkiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzozODo0NFrOG4AZbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1NjgxMQ==", "bodyText": "Does the timeout perhaps need to be increased or do we already have some headroom?", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460956811", "createdAt": "2020-07-27T15:02:02Z", "author": {"login": "geoand"}, "path": ".github/workflows/ci-actions.yml", "diffHunk": "@@ -517,6 +517,7 @@ jobs:\n               resteasy-mutiny\n               vertx\n               vertx-http\n+              vertx-web", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3OTk1MQ==", "bodyText": "Added 5 extra mins.", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r461379951", "createdAt": "2020-07-28T07:38:44Z", "author": {"login": "mkouba"}, "path": ".github/workflows/ci-actions.yml", "diffHunk": "@@ -517,6 +517,7 @@ jobs:\n               resteasy-mutiny\n               vertx\n               vertx-http\n+              vertx-web", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1NjgxMQ=="}, "originalCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzYwMDQwOnYy", "diffSide": "RIGHT", "path": "extensions/vertx-web/deployment/src/main/java/io/quarkus/vertx/web/deployment/VertxWebProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTowNDo1MFrOG3msJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzozODozNFrOG4AZHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1ODc1OA==", "bodyText": "As mentioned in my comment, I would use that + the default predicate.", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460958758", "createdAt": "2020-07-27T15:04:50Z", "author": {"login": "gsmet"}, "path": "extensions/vertx-web/deployment/src/main/java/io/quarkus/vertx/web/deployment/VertxWebProcessor.java", "diffHunk": "@@ -599,6 +611,17 @@ void implementInvoke(HandlerDescriptor descriptor, BeanInfo bean, MethodInfo met\n         invoke.returnValue(null);\n     }\n \n+    private static final List<DotName> TYPES_IGNORED_FOR_REFLECTION = Arrays.asList(io.quarkus.arc.processor.DotNames.STRING,\n+            DotNames.BUFFER, DotNames.JSON_ARRAY, DotNames.JSON_OBJECT);\n+\n+    private static void registerForReflection(Type contentType,\n+            BuildProducer<ReflectiveHierarchyBuildItem> reflectiveHierarchy) {\n+        if (TYPES_IGNORED_FOR_REFLECTION.contains(contentType.name())) {\n+            return;\n+        }\n+        reflectiveHierarchy.produce(new ReflectiveHierarchyBuildItem(contentType, TYPES_IGNORED_FOR_REFLECTION::contains));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3OTg2OQ==", "bodyText": "Fixed.", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r461379869", "createdAt": "2020-07-28T07:38:34Z", "author": {"login": "mkouba"}, "path": "extensions/vertx-web/deployment/src/main/java/io/quarkus/vertx/web/deployment/VertxWebProcessor.java", "diffHunk": "@@ -599,6 +611,17 @@ void implementInvoke(HandlerDescriptor descriptor, BeanInfo bean, MethodInfo met\n         invoke.returnValue(null);\n     }\n \n+    private static final List<DotName> TYPES_IGNORED_FOR_REFLECTION = Arrays.asList(io.quarkus.arc.processor.DotNames.STRING,\n+            DotNames.BUFFER, DotNames.JSON_ARRAY, DotNames.JSON_OBJECT);\n+\n+    private static void registerForReflection(Type contentType,\n+            BuildProducer<ReflectiveHierarchyBuildItem> reflectiveHierarchy) {\n+        if (TYPES_IGNORED_FOR_REFLECTION.contains(contentType.name())) {\n+            return;\n+        }\n+        reflectiveHierarchy.produce(new ReflectiveHierarchyBuildItem(contentType, TYPES_IGNORED_FOR_REFLECTION::contains));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1ODc1OA=="}, "originalCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NzYwMDk4OnYy", "diffSide": "RIGHT", "path": "integration-tests/vertx-web/pom.xml", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNTowNDo1N1rOG3msfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNzozODoyMlrOG4AYpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1ODg0Nw==", "bodyText": "Can we please not use this old style for new integration tests? It's probably going to go away soon and best minimize the work when we do :)\nSetting:\n            <properties>\n                <quarkus.package.type>native</quarkus.package.type>\n            </properties>\n\nis all that needs to be done in the native Maven profile in order to produce a native binary", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r460958847", "createdAt": "2020-07-27T15:04:57Z", "author": {"login": "geoand"}, "path": "integration-tests/vertx-web/pom.xml", "diffHunk": "@@ -0,0 +1,110 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <artifactId>quarkus-integration-tests-parent</artifactId>\n+        <groupId>io.quarkus</groupId>\n+        <version>999-SNAPSHOT</version>\n+        <relativePath>../</relativePath>\n+    </parent>\n+\n+    <artifactId>quarkus-integration-test-vertx-web</artifactId>\n+    <name>Quarkus - Integration Tests - Vert.x Web</name>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-vertx-web</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-junit5</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.rest-assured</groupId>\n+            <artifactId>rest-assured</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>build</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>\n+            <id>native-image</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-surefire-plugin</artifactId>\n+                        <configuration>\n+                            <skipTests>${native.surefire.skip}</skipTests>\n+                        </configuration>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <systemPropertyVariables>\n+                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n+                                    </systemPropertyVariables>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>io.quarkus</groupId>\n+                        <artifactId>quarkus-maven-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>native-image</id>\n+                                <goals>\n+                                    <goal>native-image</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <cleanupServer>true</cleanupServer>\n+                                    <enableHttpUrlHandler>true</enableHttpUrlHandler>\n+                                    <!-- Include the server certificate -->\n+                                    <additionalBuildArgs>\n+                                        <additionalBuildArg>-H:EnableURLProtocols=http,https</additionalBuildArg>\n+                                    </additionalBuildArgs>\n+                                    <graalvmHome>${graalvmHome}</graalvmHome>\n+                                    <enableAllSecurityServices>true</enableAllSecurityServices>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3MjU4Mg==", "bodyText": "@geoand Shouldn't we update all integration tests in a separate PR then? I copied this from vertx-http.", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r461372582", "createdAt": "2020-07-28T07:24:54Z", "author": {"login": "mkouba"}, "path": "integration-tests/vertx-web/pom.xml", "diffHunk": "@@ -0,0 +1,110 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <artifactId>quarkus-integration-tests-parent</artifactId>\n+        <groupId>io.quarkus</groupId>\n+        <version>999-SNAPSHOT</version>\n+        <relativePath>../</relativePath>\n+    </parent>\n+\n+    <artifactId>quarkus-integration-test-vertx-web</artifactId>\n+    <name>Quarkus - Integration Tests - Vert.x Web</name>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-vertx-web</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-junit5</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.rest-assured</groupId>\n+            <artifactId>rest-assured</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>build</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>\n+            <id>native-image</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-surefire-plugin</artifactId>\n+                        <configuration>\n+                            <skipTests>${native.surefire.skip}</skipTests>\n+                        </configuration>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <systemPropertyVariables>\n+                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n+                                    </systemPropertyVariables>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>io.quarkus</groupId>\n+                        <artifactId>quarkus-maven-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>native-image</id>\n+                                <goals>\n+                                    <goal>native-image</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <cleanupServer>true</cleanupServer>\n+                                    <enableHttpUrlHandler>true</enableHttpUrlHandler>\n+                                    <!-- Include the server certificate -->\n+                                    <additionalBuildArgs>\n+                                        <additionalBuildArg>-H:EnableURLProtocols=http,https</additionalBuildArg>\n+                                    </additionalBuildArgs>\n+                                    <graalvmHome>${graalvmHome}</graalvmHome>\n+                                    <enableAllSecurityServices>true</enableAllSecurityServices>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1ODg0Nw=="}, "originalCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3MzE4Nw==", "bodyText": "Yes, at some point we will have to. My point here is that since we are adding a new IT, let's not add extra work for our future selves :)", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r461373187", "createdAt": "2020-07-28T07:25:58Z", "author": {"login": "geoand"}, "path": "integration-tests/vertx-web/pom.xml", "diffHunk": "@@ -0,0 +1,110 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <artifactId>quarkus-integration-tests-parent</artifactId>\n+        <groupId>io.quarkus</groupId>\n+        <version>999-SNAPSHOT</version>\n+        <relativePath>../</relativePath>\n+    </parent>\n+\n+    <artifactId>quarkus-integration-test-vertx-web</artifactId>\n+    <name>Quarkus - Integration Tests - Vert.x Web</name>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-vertx-web</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-junit5</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.rest-assured</groupId>\n+            <artifactId>rest-assured</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>build</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>\n+            <id>native-image</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-surefire-plugin</artifactId>\n+                        <configuration>\n+                            <skipTests>${native.surefire.skip}</skipTests>\n+                        </configuration>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <systemPropertyVariables>\n+                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n+                                    </systemPropertyVariables>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>io.quarkus</groupId>\n+                        <artifactId>quarkus-maven-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>native-image</id>\n+                                <goals>\n+                                    <goal>native-image</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <cleanupServer>true</cleanupServer>\n+                                    <enableHttpUrlHandler>true</enableHttpUrlHandler>\n+                                    <!-- Include the server certificate -->\n+                                    <additionalBuildArgs>\n+                                        <additionalBuildArg>-H:EnableURLProtocols=http,https</additionalBuildArg>\n+                                    </additionalBuildArgs>\n+                                    <graalvmHome>${graalvmHome}</graalvmHome>\n+                                    <enableAllSecurityServices>true</enableAllSecurityServices>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1ODg0Nw=="}, "originalCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3MzUxNw==", "bodyText": "quarkus-integration-test-spring-web also uses the old style ;-)", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r461373517", "createdAt": "2020-07-28T07:26:32Z", "author": {"login": "mkouba"}, "path": "integration-tests/vertx-web/pom.xml", "diffHunk": "@@ -0,0 +1,110 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <artifactId>quarkus-integration-tests-parent</artifactId>\n+        <groupId>io.quarkus</groupId>\n+        <version>999-SNAPSHOT</version>\n+        <relativePath>../</relativePath>\n+    </parent>\n+\n+    <artifactId>quarkus-integration-test-vertx-web</artifactId>\n+    <name>Quarkus - Integration Tests - Vert.x Web</name>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-vertx-web</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-junit5</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.rest-assured</groupId>\n+            <artifactId>rest-assured</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>build</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>\n+            <id>native-image</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-surefire-plugin</artifactId>\n+                        <configuration>\n+                            <skipTests>${native.surefire.skip}</skipTests>\n+                        </configuration>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <systemPropertyVariables>\n+                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n+                                    </systemPropertyVariables>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>io.quarkus</groupId>\n+                        <artifactId>quarkus-maven-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>native-image</id>\n+                                <goals>\n+                                    <goal>native-image</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <cleanupServer>true</cleanupServer>\n+                                    <enableHttpUrlHandler>true</enableHttpUrlHandler>\n+                                    <!-- Include the server certificate -->\n+                                    <additionalBuildArgs>\n+                                        <additionalBuildArg>-H:EnableURLProtocols=http,https</additionalBuildArg>\n+                                    </additionalBuildArgs>\n+                                    <graalvmHome>${graalvmHome}</graalvmHome>\n+                                    <enableAllSecurityServices>true</enableAllSecurityServices>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1ODg0Nw=="}, "originalCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3NTAxMQ==", "bodyText": "Yup, it's kinda old as well and needs to be fixed :P", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r461375011", "createdAt": "2020-07-28T07:29:19Z", "author": {"login": "geoand"}, "path": "integration-tests/vertx-web/pom.xml", "diffHunk": "@@ -0,0 +1,110 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <artifactId>quarkus-integration-tests-parent</artifactId>\n+        <groupId>io.quarkus</groupId>\n+        <version>999-SNAPSHOT</version>\n+        <relativePath>../</relativePath>\n+    </parent>\n+\n+    <artifactId>quarkus-integration-test-vertx-web</artifactId>\n+    <name>Quarkus - Integration Tests - Vert.x Web</name>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-vertx-web</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-junit5</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.rest-assured</groupId>\n+            <artifactId>rest-assured</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>build</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>\n+            <id>native-image</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-surefire-plugin</artifactId>\n+                        <configuration>\n+                            <skipTests>${native.surefire.skip}</skipTests>\n+                        </configuration>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <systemPropertyVariables>\n+                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n+                                    </systemPropertyVariables>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>io.quarkus</groupId>\n+                        <artifactId>quarkus-maven-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>native-image</id>\n+                                <goals>\n+                                    <goal>native-image</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <cleanupServer>true</cleanupServer>\n+                                    <enableHttpUrlHandler>true</enableHttpUrlHandler>\n+                                    <!-- Include the server certificate -->\n+                                    <additionalBuildArgs>\n+                                        <additionalBuildArg>-H:EnableURLProtocols=http,https</additionalBuildArg>\n+                                    </additionalBuildArgs>\n+                                    <graalvmHome>${graalvmHome}</graalvmHome>\n+                                    <enableAllSecurityServices>true</enableAllSecurityServices>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1ODg0Nw=="}, "originalCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTM3OTc0OQ==", "bodyText": "Fixed.", "url": "https://github.com/quarkusio/quarkus/pull/10992#discussion_r461379749", "createdAt": "2020-07-28T07:38:22Z", "author": {"login": "mkouba"}, "path": "integration-tests/vertx-web/pom.xml", "diffHunk": "@@ -0,0 +1,110 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <parent>\n+        <artifactId>quarkus-integration-tests-parent</artifactId>\n+        <groupId>io.quarkus</groupId>\n+        <version>999-SNAPSHOT</version>\n+        <relativePath>../</relativePath>\n+    </parent>\n+\n+    <artifactId>quarkus-integration-test-vertx-web</artifactId>\n+    <name>Quarkus - Integration Tests - Vert.x Web</name>\n+\n+    <dependencies>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-vertx-web</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.quarkus</groupId>\n+            <artifactId>quarkus-junit5</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.rest-assured</groupId>\n+            <artifactId>rest-assured</artifactId>\n+            <scope>test</scope>\n+        </dependency>\n+    </dependencies>\n+\n+    <build>\n+        <plugins>\n+            <plugin>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-maven-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <goals>\n+                            <goal>build</goal>\n+                        </goals>\n+                    </execution>\n+                </executions>\n+            </plugin>\n+        </plugins>\n+    </build>\n+\n+    <profiles>\n+        <profile>\n+            <id>native-image</id>\n+            <activation>\n+                <property>\n+                    <name>native</name>\n+                </property>\n+            </activation>\n+            <build>\n+                <plugins>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-surefire-plugin</artifactId>\n+                        <configuration>\n+                            <skipTests>${native.surefire.skip}</skipTests>\n+                        </configuration>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>org.apache.maven.plugins</groupId>\n+                        <artifactId>maven-failsafe-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <systemPropertyVariables>\n+                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n+                                    </systemPropertyVariables>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>\n+                    <plugin>\n+                        <groupId>io.quarkus</groupId>\n+                        <artifactId>quarkus-maven-plugin</artifactId>\n+                        <executions>\n+                            <execution>\n+                                <id>native-image</id>\n+                                <goals>\n+                                    <goal>native-image</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <cleanupServer>true</cleanupServer>\n+                                    <enableHttpUrlHandler>true</enableHttpUrlHandler>\n+                                    <!-- Include the server certificate -->\n+                                    <additionalBuildArgs>\n+                                        <additionalBuildArg>-H:EnableURLProtocols=http,https</additionalBuildArg>\n+                                    </additionalBuildArgs>\n+                                    <graalvmHome>${graalvmHome}</graalvmHome>\n+                                    <enableAllSecurityServices>true</enableAllSecurityServices>\n+                                </configuration>\n+                            </execution>\n+                        </executions>\n+                    </plugin>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1ODg0Nw=="}, "originalCommit": {"oid": "d23ca45cd8f93f38492695c55649c55580113b87"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 889, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}