{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MTgzMjkx", "number": 7327, "title": "Mongodb panache/mutiny", "bodyText": "@cescoffier I wanted to play with Mutiny so I integrate it in MongoDB with Panache instead of Axle.\nIt works !\nI have one big question, for the moment it uses Mutiny on the inside but it still exposes CompletionStage/Publisher.\nIs the plan to expose Mutiny at the API level or only used it on the inside and expose standard reactive types at the API level ?", "createdAt": "2020-02-21T09:21:08Z", "url": "https://github.com/quarkusio/quarkus/pull/7327", "merged": true, "mergeCommit": {"oid": "f2a99476ddbb56286d15c56b5ce8e0d2412cb091"}, "closed": true, "closedAt": "2020-02-25T12:04:29Z", "author": {"login": "loicmathieu"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGcWjMABqjMwNTk4MTg1NDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcHuD38gFqTM2Mzk1NTMwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5f528cd49be0e23d255c6fc5503b307b7ef549c", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/f5f528cd49be0e23d255c6fc5503b307b7ef549c", "committedDate": "2020-02-21T09:10:27Z", "message": "Implement reactive panache with Mutiny"}, "afterCommit": {"oid": "89ec31f267348b8d510c33836e7c82d8620fc43b", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/89ec31f267348b8d510c33836e7c82d8620fc43b", "committedDate": "2020-02-21T09:30:57Z", "message": "Implement reactive panache with Mutiny"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "89ec31f267348b8d510c33836e7c82d8620fc43b", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/89ec31f267348b8d510c33836e7c82d8620fc43b", "committedDate": "2020-02-21T09:30:57Z", "message": "Implement reactive panache with Mutiny"}, "afterCommit": {"oid": "e9be51cab611da885f22d0e56f345c68d0bf8820", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/e9be51cab611da885f22d0e56f345c68d0bf8820", "committedDate": "2020-02-24T15:25:06Z", "message": "Implement reactive panache with Mutiny"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e9be51cab611da885f22d0e56f345c68d0bf8820", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/e9be51cab611da885f22d0e56f345c68d0bf8820", "committedDate": "2020-02-24T15:25:06Z", "message": "Implement reactive panache with Mutiny"}, "afterCommit": {"oid": "14782e9a2f95c3745646f835ddcc825681d11196", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/14782e9a2f95c3745646f835ddcc825681d11196", "committedDate": "2020-02-24T15:28:49Z", "message": "Implement reactive panache with Mutiny"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14782e9a2f95c3745646f835ddcc825681d11196", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/14782e9a2f95c3745646f835ddcc825681d11196", "committedDate": "2020-02-24T15:28:49Z", "message": "Implement reactive panache with Mutiny"}, "afterCommit": {"oid": "5695a259bb978facedd787d2e7c0fb8d00d922ca", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/5695a259bb978facedd787d2e7c0fb8d00d922ca", "committedDate": "2020-02-24T16:05:14Z", "message": "Implement reactive panache with Mutiny"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNTUzNzcw", "url": "https://github.com/quarkusio/quarkus/pull/7327#pullrequestreview-363553770", "createdAt": "2020-02-24T17:07:24Z", "commit": {"oid": "5695a259bb978facedd787d2e7c0fb8d00d922ca"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzowNzoyNFrOFtok0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNzowNzoyNFrOFtok0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM5NTAyNQ==", "bodyText": "They should return a Multi (which implement Publisher)", "url": "https://github.com/quarkusio/quarkus/pull/7327#discussion_r383395025", "createdAt": "2020-02-24T17:07:24Z", "author": {"login": "cescoffier"}, "path": "docs/src/main/asciidoc/mongodb-panache.adoc", "diffHunk": "@@ -623,43 +623,43 @@ person.birth = LocalDate.of(1910, Month.FEBRUARY, 1);\n person.status = Status.Alive;\n \n // persist it\n-CompletionStage<Void> cs1 = person.persist();\n+Uni<Void> cs1 = person.persist();\n \n person.status = Status.Dead;\n \n // Your must call update() in order to send your entity modifications to MongoDB\n-CompletionStage<Void> cs2 = person.update();\n+Uni<Void> cs2 = person.update();\n \n // delete it\n-CompletionStage<Void> cs3 = person.delete();\n+Uni<Void> cs3 = person.delete();\n \n // getting a list of all persons\n-CompletionStage<List<ReactivePerson>> allPersons = ReactivePerson.listAll();\n+Uni<List<ReactivePerson>> allPersons = ReactivePerson.listAll();\n \n // finding a specific person by ID\n-CompletionStage<ReactivePerson> personById = ReactivePerson.findById(personId);\n+Uni<ReactivePerson> personById = ReactivePerson.findById(personId);\n \n // finding a specific person by ID via an Optional\n-CompletionStage<Optional<ReactivePerson>> optional = ReactivePerson.findByIdOptional(personId);\n-personById = optional.thenApply(o -> o.orElseThrow(() -> new NotFoundException()));\n+Uni<Optional<ReactivePerson>> optional = ReactivePerson.findByIdOptional(personId);\n+personById = optional.map(o -> o.orElseThrow(() -> new NotFoundException()));\n \n // finding all living persons\n-CompletionStage<List<ReactivePerson>> livingPersons = ReactivePerson.list(\"status\", Status.Alive);\n+Uni<List<ReactivePerson>> livingPersons = ReactivePerson.list(\"status\", Status.Alive);\n \n // counting all persons\n-CompletionStage<Long> countAll = ReactivePerson.count();\n+Uni<Long> countAll = ReactivePerson.count();\n \n // counting all living persons\n-CompletionStage<Long> countAlive = ReactivePerson.count(\"status\", Status.Alive);\n+Uni<Long> countAlive = ReactivePerson.count(\"status\", Status.Alive);\n \n // delete all living persons\n-CompletionStage<Long>  deleteCount = ReactivePerson.delete(\"status\", Status.Alive);\n+Uni<Long>  deleteCount = ReactivePerson.delete(\"status\", Status.Alive);\n \n // delete all persons\n deleteCount = ReactivePerson.deleteAll();\n ----\n \n-TIP: If you use MongoDB with Panache in conjunction with RESTEasy, you can directly return a reactive type inside your JAX-RS resource endpoint as RESTEasy will handle it correctly.\n+TIP: If you use MongoDB with Panache in conjunction with RESTEasy, you can directly return a reactive type inside your JAX-RS resource endpoint as long as you include the `quarkus-resteasy-mutiny` extension.\n \n The same query facility exists for the reactive types, but the `stream()` methods act differently: they return a reactive stream `Publisher` instead of a `Stream`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5695a259bb978facedd787d2e7c0fb8d00d922ca"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1758ebc1315eddc44b2336e1bbd3e238f43bffa", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/c1758ebc1315eddc44b2336e1bbd3e238f43bffa", "committedDate": "2020-02-25T08:35:29Z", "message": "Implement reactive panache with Mutiny"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5695a259bb978facedd787d2e7c0fb8d00d922ca", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/5695a259bb978facedd787d2e7c0fb8d00d922ca", "committedDate": "2020-02-24T16:05:14Z", "message": "Implement reactive panache with Mutiny"}, "afterCommit": {"oid": "c1758ebc1315eddc44b2336e1bbd3e238f43bffa", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/c1758ebc1315eddc44b2336e1bbd3e238f43bffa", "committedDate": "2020-02-25T08:35:29Z", "message": "Implement reactive panache with Mutiny"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzOTU1MzA0", "url": "https://github.com/quarkusio/quarkus/pull/7327#pullrequestreview-363955304", "createdAt": "2020-02-25T08:43:25Z", "commit": {"oid": "c1758ebc1315eddc44b2336e1bbd3e238f43bffa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4163, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}