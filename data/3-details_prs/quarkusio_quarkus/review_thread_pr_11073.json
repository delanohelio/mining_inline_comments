{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4Nzk4MDE1", "number": 11073, "reviewThreads": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDoyMjozOFrOEUE4tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMDozMToyM1rOEe192g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDg3MDMwOnYy", "diffSide": "RIGHT", "path": "extensions/micrometer/deployment/src/main/java/io/quarkus/micrometer/deployment/MicrometerProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDoyMjozOFrOG6KZog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNzoxNToxMFrOG6P7jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0MDk5NA==", "bodyText": "Are there other exporters that we want to support in the future that have endpoints as well, or is it just Prometheus?", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r463640994", "createdAt": "2020-07-31T14:22:38Z", "author": {"login": "kenfinnigan"}, "path": "extensions/micrometer/deployment/src/main/java/io/quarkus/micrometer/deployment/MicrometerProcessor.java", "diffHunk": "@@ -0,0 +1,195 @@\n+package io.quarkus.micrometer.deployment;\n+\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.function.BooleanSupplier;\n+\n+import org.jboss.jandex.AnnotationInstance;\n+import org.jboss.jandex.AnnotationTarget;\n+import org.jboss.jandex.ClassInfo;\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.FieldInfo;\n+import org.jboss.jandex.IndexView;\n+import org.jboss.jandex.MethodInfo;\n+\n+import io.micrometer.core.instrument.MeterRegistry;\n+import io.micrometer.core.instrument.binder.MeterBinder;\n+import io.micrometer.core.instrument.config.MeterFilter;\n+import io.micrometer.core.instrument.config.NamingConvention;\n+import io.quarkus.arc.deployment.AdditionalBeanBuildItem;\n+import io.quarkus.arc.deployment.BeanContainerBuildItem;\n+import io.quarkus.arc.deployment.UnremovableBeanBuildItem;\n+import io.quarkus.arc.processor.DotNames;\n+import io.quarkus.deployment.annotations.*;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.ShutdownContextBuildItem;\n+import io.quarkus.deployment.metrics.MetricsCapabilityBuildItem;\n+import io.quarkus.deployment.metrics.MetricsFactoryConsumerBuildItem;\n+import io.quarkus.micrometer.deployment.export.PrometheusRegistryProcessor;\n+import io.quarkus.micrometer.runtime.ClockProvider;\n+import io.quarkus.micrometer.runtime.CompositeRegistryCreator;\n+import io.quarkus.micrometer.runtime.MeterFilterConstraint;\n+import io.quarkus.micrometer.runtime.MeterFilterConstraints;\n+import io.quarkus.micrometer.runtime.MicrometerRecorder;\n+import io.quarkus.micrometer.runtime.config.MicrometerConfig;\n+import io.quarkus.runtime.RuntimeValue;\n+import io.quarkus.runtime.metrics.MetricsFactory;\n+\n+public class MicrometerProcessor {\n+    private static final DotName METER_REGISTRY = DotName.createSimple(MeterRegistry.class.getName());\n+    private static final DotName METER_BINDER = DotName.createSimple(MeterBinder.class.getName());\n+    private static final DotName METER_FILTER = DotName.createSimple(MeterFilter.class.getName());\n+    private static final DotName NAMING_CONVENTION = DotName.createSimple(NamingConvention.class.getName());\n+\n+    private static final String FEATURE = \"micrometer\";\n+\n+    static class MicrometerEnabled implements BooleanSupplier {\n+        MicrometerConfig mConfig;\n+\n+        public boolean getAsBoolean() {\n+            return mConfig.enabled;\n+        }\n+    }\n+\n+    MicrometerConfig mConfig;\n+\n+    @BuildStep(onlyIf = MicrometerEnabled.class)\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep(onlyIf = MicrometerEnabled.class, onlyIfNot = PrometheusRegistryProcessor.PrometheusEnabled.class)\n+    MetricsCapabilityBuildItem metricsCapabilityBuildItem() {\n+        return new MetricsCapabilityBuildItem(x -> MetricsFactory.MICROMETER.equals(x),\n+                null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzczMTU5OA==", "bodyText": "I think the k8s stuff can only look for one scrape path... I left room here should a different registry extension provide one, but I think only prometheus will.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r463731598", "createdAt": "2020-07-31T17:15:10Z", "author": {"login": "ebullient"}, "path": "extensions/micrometer/deployment/src/main/java/io/quarkus/micrometer/deployment/MicrometerProcessor.java", "diffHunk": "@@ -0,0 +1,195 @@\n+package io.quarkus.micrometer.deployment;\n+\n+import java.util.Collection;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.function.BooleanSupplier;\n+\n+import org.jboss.jandex.AnnotationInstance;\n+import org.jboss.jandex.AnnotationTarget;\n+import org.jboss.jandex.ClassInfo;\n+import org.jboss.jandex.DotName;\n+import org.jboss.jandex.FieldInfo;\n+import org.jboss.jandex.IndexView;\n+import org.jboss.jandex.MethodInfo;\n+\n+import io.micrometer.core.instrument.MeterRegistry;\n+import io.micrometer.core.instrument.binder.MeterBinder;\n+import io.micrometer.core.instrument.config.MeterFilter;\n+import io.micrometer.core.instrument.config.NamingConvention;\n+import io.quarkus.arc.deployment.AdditionalBeanBuildItem;\n+import io.quarkus.arc.deployment.BeanContainerBuildItem;\n+import io.quarkus.arc.deployment.UnremovableBeanBuildItem;\n+import io.quarkus.arc.processor.DotNames;\n+import io.quarkus.deployment.annotations.*;\n+import io.quarkus.deployment.builditem.CombinedIndexBuildItem;\n+import io.quarkus.deployment.builditem.FeatureBuildItem;\n+import io.quarkus.deployment.builditem.ShutdownContextBuildItem;\n+import io.quarkus.deployment.metrics.MetricsCapabilityBuildItem;\n+import io.quarkus.deployment.metrics.MetricsFactoryConsumerBuildItem;\n+import io.quarkus.micrometer.deployment.export.PrometheusRegistryProcessor;\n+import io.quarkus.micrometer.runtime.ClockProvider;\n+import io.quarkus.micrometer.runtime.CompositeRegistryCreator;\n+import io.quarkus.micrometer.runtime.MeterFilterConstraint;\n+import io.quarkus.micrometer.runtime.MeterFilterConstraints;\n+import io.quarkus.micrometer.runtime.MicrometerRecorder;\n+import io.quarkus.micrometer.runtime.config.MicrometerConfig;\n+import io.quarkus.runtime.RuntimeValue;\n+import io.quarkus.runtime.metrics.MetricsFactory;\n+\n+public class MicrometerProcessor {\n+    private static final DotName METER_REGISTRY = DotName.createSimple(MeterRegistry.class.getName());\n+    private static final DotName METER_BINDER = DotName.createSimple(MeterBinder.class.getName());\n+    private static final DotName METER_FILTER = DotName.createSimple(MeterFilter.class.getName());\n+    private static final DotName NAMING_CONVENTION = DotName.createSimple(NamingConvention.class.getName());\n+\n+    private static final String FEATURE = \"micrometer\";\n+\n+    static class MicrometerEnabled implements BooleanSupplier {\n+        MicrometerConfig mConfig;\n+\n+        public boolean getAsBoolean() {\n+            return mConfig.enabled;\n+        }\n+    }\n+\n+    MicrometerConfig mConfig;\n+\n+    @BuildStep(onlyIf = MicrometerEnabled.class)\n+    FeatureBuildItem feature() {\n+        return new FeatureBuildItem(FEATURE);\n+    }\n+\n+    @BuildStep(onlyIf = MicrometerEnabled.class, onlyIfNot = PrometheusRegistryProcessor.PrometheusEnabled.class)\n+    MetricsCapabilityBuildItem metricsCapabilityBuildItem() {\n+        return new MetricsCapabilityBuildItem(x -> MetricsFactory.MICROMETER.equals(x),\n+                null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0MDk5NA=="}, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTEzNjI2OnYy", "diffSide": "RIGHT", "path": "integration-tests/micrometer-jmx/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTozNjowOVrOG6M9Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNzoxMzowMFrOG6P3rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MjgyNw==", "bodyText": "Is micrometer-core needed as a dependency if the micrometer extension is present?", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r463682827", "createdAt": "2020-07-31T15:36:09Z", "author": {"login": "kenfinnigan"}, "path": "integration-tests/micrometer-jmx/pom.xml", "diffHunk": "@@ -0,0 +1,144 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>io.quarkus</groupId>\n+    <artifactId>quarkus-integration-tests-parent</artifactId>\n+    <version>999-SNAPSHOT</version>\n+    <relativePath>../</relativePath>\n+  </parent>\n+\n+  <artifactId>quarkus-integration-test-micrometer-jmx</artifactId>\n+  <name>Quarkus - Integration Tests - Micrometer JMX</name>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-micrometer</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzczMDYwNg==", "bodyText": "I removed this yesterday. ;)", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r463730606", "createdAt": "2020-07-31T17:13:00Z", "author": {"login": "ebullient"}, "path": "integration-tests/micrometer-jmx/pom.xml", "diffHunk": "@@ -0,0 +1,144 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>io.quarkus</groupId>\n+    <artifactId>quarkus-integration-tests-parent</artifactId>\n+    <version>999-SNAPSHOT</version>\n+    <relativePath>../</relativePath>\n+  </parent>\n+\n+  <artifactId>quarkus-integration-test-micrometer-jmx</artifactId>\n+  <name>Quarkus - Integration Tests - Micrometer JMX</name>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-micrometer</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MjgyNw=="}, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTEzOTkxOnYy", "diffSide": "RIGHT", "path": "integration-tests/micrometer-jmx/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTozNzoxOFrOG6M_Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxODowODo0MlrOG6RdvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MzQxOA==", "bodyText": "We need to explicitly disable the prometheus export when the dependency isn't present?", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r463683418", "createdAt": "2020-07-31T15:37:18Z", "author": {"login": "kenfinnigan"}, "path": "integration-tests/micrometer-jmx/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,11 @@\n+\n+quarkus.log.category.\"io.quarkus.micrometer\".level=DEBUG\n+quarkus.log.category.\"io.quarkus.bootstrap\".level=INFO\n+quarkus.log.category.\"io.quarkus.netty\".level=INFO\n+quarkus.log.category.\"io.quarkus.resteasy.runtime\".level=INFO\n+\n+quarkus.log.category.\"io.netty\".level=INFO\n+quarkus.log.category.\"org.apache\".level=INFO\n+\n+quarkus.micrometer.export.prometheus.enabled=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzczMTE2NA==", "bodyText": "We shouldn't. I may have just to be sure.. this might also be left over from how things were structured in my other project. Good observation.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r463731164", "createdAt": "2020-07-31T17:14:17Z", "author": {"login": "ebullient"}, "path": "integration-tests/micrometer-jmx/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,11 @@\n+\n+quarkus.log.category.\"io.quarkus.micrometer\".level=DEBUG\n+quarkus.log.category.\"io.quarkus.bootstrap\".level=INFO\n+quarkus.log.category.\"io.quarkus.netty\".level=INFO\n+quarkus.log.category.\"io.quarkus.resteasy.runtime\".level=INFO\n+\n+quarkus.log.category.\"io.netty\".level=INFO\n+quarkus.log.category.\"org.apache\".level=INFO\n+\n+quarkus.micrometer.export.prometheus.enabled=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MzQxOA=="}, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1NjczMg==", "bodyText": "fixed.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r463756732", "createdAt": "2020-07-31T18:08:42Z", "author": {"login": "ebullient"}, "path": "integration-tests/micrometer-jmx/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,11 @@\n+\n+quarkus.log.category.\"io.quarkus.micrometer\".level=DEBUG\n+quarkus.log.category.\"io.quarkus.bootstrap\".level=INFO\n+quarkus.log.category.\"io.quarkus.netty\".level=INFO\n+quarkus.log.category.\"io.quarkus.resteasy.runtime\".level=INFO\n+\n+quarkus.log.category.\"io.netty\".level=INFO\n+quarkus.log.category.\"org.apache\".level=INFO\n+\n+quarkus.micrometer.export.prometheus.enabled=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4MzQxOA=="}, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTE0MjE1OnYy", "diffSide": "RIGHT", "path": "integration-tests/micrometer-mp-metrics/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTozNzo1N1rOG6NAtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTozNzo1N1rOG6NAtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4Mzc2Nw==", "bodyText": "Again, is micrometer-core needed?", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r463683767", "createdAt": "2020-07-31T15:37:57Z", "author": {"login": "kenfinnigan"}, "path": "integration-tests/micrometer-mp-metrics/pom.xml", "diffHunk": "@@ -0,0 +1,149 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>io.quarkus</groupId>\n+    <artifactId>quarkus-integration-tests-parent</artifactId>\n+    <version>999-SNAPSHOT</version>\n+    <relativePath>../</relativePath>\n+  </parent>\n+\n+  <artifactId>quarkus-integration-test-micrometer-mp-metrics</artifactId>\n+  <name>Quarkus - Integration Tests - Micrometer MP Metrics</name>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-micrometer</artifactId>\n+      <version>${project.version}</version>\n+    </dependency>\n+\n+    <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTE0NjE2OnYy", "diffSide": "RIGHT", "path": "integration-tests/micrometer-mp-metrics/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTozOTowNlrOG6NDOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMTozNzoyOFrOG_zwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4NDQxMA==", "bodyText": "Can the presence of the API be enough to enable it, or we need to be specific?", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r463684410", "createdAt": "2020-07-31T15:39:06Z", "author": {"login": "kenfinnigan"}, "path": "integration-tests/micrometer-mp-metrics/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,13 @@\n+quarkus.log.category.\"io.quarkus.micrometer\".level=DEBUG\n+quarkus.log.category.\"io.quarkus.micrometer.runtime.binder.vertx\".level=INFO\n+\n+quarkus.log.category.\"io.quarkus.bootstrap\".level=INFO\n+quarkus.log.category.\"io.quarkus.netty\".level=INFO\n+quarkus.log.category.\"io.quarkus.resteasy\".level=INFO\n+\n+quarkus.log.category.\"io.netty\".level=INFO\n+quarkus.log.category.\"io.restassured\".level=INFO\n+quarkus.log.category.\"org.apache\".level=INFO\n+quarkus.log.category.\"org.jboss.resteasy\".level=INFO\n+\n+quarkus.micrometer.binder.mp-metrics.enabled=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1NzEyMA==", "bodyText": "This one needs to be specific because (for the foreseeable future), the smallrye API will be around. I could leave it as default on if the classes are found and just .. let that be a coping mechanism...", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r463757120", "createdAt": "2020-07-31T18:09:31Z", "author": {"login": "ebullient"}, "path": "integration-tests/micrometer-mp-metrics/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,13 @@\n+quarkus.log.category.\"io.quarkus.micrometer\".level=DEBUG\n+quarkus.log.category.\"io.quarkus.micrometer.runtime.binder.vertx\".level=INFO\n+\n+quarkus.log.category.\"io.quarkus.bootstrap\".level=INFO\n+quarkus.log.category.\"io.quarkus.netty\".level=INFO\n+quarkus.log.category.\"io.quarkus.resteasy\".level=INFO\n+\n+quarkus.log.category.\"io.netty\".level=INFO\n+quarkus.log.category.\"io.restassured\".level=INFO\n+quarkus.log.category.\"org.apache\".level=INFO\n+quarkus.log.category.\"org.jboss.resteasy\".level=INFO\n+\n+quarkus.micrometer.binder.mp-metrics.enabled=true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4NDQxMA=="}, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MTQwMQ==", "bodyText": "I've adjusted this extension so that MP Metrics compat layer is on if MP Metrics API is present.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r469561401", "createdAt": "2020-08-12T21:37:28Z", "author": {"login": "ebullient"}, "path": "integration-tests/micrometer-mp-metrics/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,13 @@\n+quarkus.log.category.\"io.quarkus.micrometer\".level=DEBUG\n+quarkus.log.category.\"io.quarkus.micrometer.runtime.binder.vertx\".level=INFO\n+\n+quarkus.log.category.\"io.quarkus.bootstrap\".level=INFO\n+quarkus.log.category.\"io.quarkus.netty\".level=INFO\n+quarkus.log.category.\"io.quarkus.resteasy\".level=INFO\n+\n+quarkus.log.category.\"io.netty\".level=INFO\n+quarkus.log.category.\"io.restassured\".level=INFO\n+quarkus.log.category.\"org.apache\".level=INFO\n+quarkus.log.category.\"org.jboss.resteasy\".level=INFO\n+\n+quarkus.micrometer.binder.mp-metrics.enabled=true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4NDQxMA=="}, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTE1ODQ5OnYy", "diffSide": "RIGHT", "path": "extensions/micrometer/runtime/src/main/resources/META-INF/quarkus-extension.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNTo0Mjo0MlrOG6NK5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMTozODowM1rOG_zxIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4NjM3Mg==", "bodyText": "Can't remember if we'd discussed or not, did you want to include a guide with this PR?", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r463686372", "createdAt": "2020-07-31T15:42:42Z", "author": {"login": "kenfinnigan"}, "path": "extensions/micrometer/runtime/src/main/resources/META-INF/quarkus-extension.yaml", "diffHunk": "@@ -0,0 +1,11 @@\n+name: \"Micrometer - SLF4J for metrics\"\n+metadata:\n+  keywords:\n+  - \"micrometer\"\n+  - \"metrics\"\n+  - \"metric\"\n+  - \"prometheus\"\n+  guide: \"https://github.com/ebullient/quarkus-micrometer-extension\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzczMDg2Nw==", "bodyText": "Yes. I can and should.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r463730867", "createdAt": "2020-07-31T17:13:36Z", "author": {"login": "ebullient"}, "path": "extensions/micrometer/runtime/src/main/resources/META-INF/quarkus-extension.yaml", "diffHunk": "@@ -0,0 +1,11 @@\n+name: \"Micrometer - SLF4J for metrics\"\n+metadata:\n+  keywords:\n+  - \"micrometer\"\n+  - \"metrics\"\n+  - \"metric\"\n+  - \"prometheus\"\n+  guide: \"https://github.com/ebullient/quarkus-micrometer-extension\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4NjM3Mg=="}, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTU2MTYzMw==", "bodyText": "Latest commit has the beginnings of a guide. We should talk about what else should be in there..", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r469561633", "createdAt": "2020-08-12T21:38:03Z", "author": {"login": "ebullient"}, "path": "extensions/micrometer/runtime/src/main/resources/META-INF/quarkus-extension.yaml", "diffHunk": "@@ -0,0 +1,11 @@\n+name: \"Micrometer - SLF4J for metrics\"\n+metadata:\n+  keywords:\n+  - \"micrometer\"\n+  - \"metrics\"\n+  - \"metric\"\n+  - \"prometheus\"\n+  guide: \"https://github.com/ebullient/quarkus-micrometer-extension\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY4NjM3Mg=="}, "originalCommit": {"oid": "828acbd0b07b6da28dbdd648354a302c3b1c4b60"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjM3NDg2OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/micrometer-metrics.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMjo1NDowNlrOHD_Z6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxNDoxNTo1M1rOHJ6q5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk0NjYwMg==", "bodyText": "Does this add the prometheus registry dependency automatically? I thought it would just be the micrometer extension only and the prometheus registry needs to be manually added?", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r473946602", "createdAt": "2020-08-20T12:54:06Z", "author": {"login": "kenfinnigan"}, "path": "docs/src/main/asciidoc/micrometer-metrics.adoc", "diffHunk": "@@ -0,0 +1,283 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Micrometer Metrics\n+\n+include::./attributes.adoc[]\n+\n+This guide demonstrates how your Quarkus application can utilize the Micrometer\n+metrics library for runtime and application metrics.\n+\n+\n+== Prerequisites\n+\n+To complete this guide, you need:\n+\n+* less than 15 minutes\n+* an IDE\n+* JDK 1.8+ installed with `JAVA_HOME` configured appropriately\n+* Apache Maven {maven-version}\n+\n+== Architecture\n+\n+In this example, we build a very simple microservice which offers one REST endpoint and that determines\n+if a number is prime.\n+\n+== Solution\n+\n+We recommend that you follow the instructions in the next sections and create the application step by step.\n+However, you can go right to the completed example.\n+\n+Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive].\n+\n+The solution is located in the `micrometer-quickstart` {quickstarts-tree-url}/micrometer-quickstart[directory].\n+\n+== Creating the Maven Project\n+\n+First, we need a new project. Create a new project with the following command:\n+\n+[source, subs=attributes+]\n+----\n+mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n+    -DprojectGroupId=org.acme \\\n+    -DprojectArtifactId=micrometer-quickstart \\\n+    -Dextensions=\"micrometer\"\n+cd micrometer-quickstart\n+----\n+\n+This command generates a Maven project, that imports the `micrometer` extension and the micrometer\n+prometheus registry as dependencies.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38390e7ed3a634f48b982f28e42076dfb24f811f"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDE2MDQ4NQ==", "bodyText": "Not sure if you sure this comment @ebullient?", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r480160485", "createdAt": "2020-08-31T14:15:53Z", "author": {"login": "kenfinnigan"}, "path": "docs/src/main/asciidoc/micrometer-metrics.adoc", "diffHunk": "@@ -0,0 +1,283 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Micrometer Metrics\n+\n+include::./attributes.adoc[]\n+\n+This guide demonstrates how your Quarkus application can utilize the Micrometer\n+metrics library for runtime and application metrics.\n+\n+\n+== Prerequisites\n+\n+To complete this guide, you need:\n+\n+* less than 15 minutes\n+* an IDE\n+* JDK 1.8+ installed with `JAVA_HOME` configured appropriately\n+* Apache Maven {maven-version}\n+\n+== Architecture\n+\n+In this example, we build a very simple microservice which offers one REST endpoint and that determines\n+if a number is prime.\n+\n+== Solution\n+\n+We recommend that you follow the instructions in the next sections and create the application step by step.\n+However, you can go right to the completed example.\n+\n+Clone the Git repository: `git clone {quickstarts-clone-url}`, or download an {quickstarts-archive-url}[archive].\n+\n+The solution is located in the `micrometer-quickstart` {quickstarts-tree-url}/micrometer-quickstart[directory].\n+\n+== Creating the Maven Project\n+\n+First, we need a new project. Create a new project with the following command:\n+\n+[source, subs=attributes+]\n+----\n+mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n+    -DprojectGroupId=org.acme \\\n+    -DprojectArtifactId=micrometer-quickstart \\\n+    -Dextensions=\"micrometer\"\n+cd micrometer-quickstart\n+----\n+\n+This command generates a Maven project, that imports the `micrometer` extension and the micrometer\n+prometheus registry as dependencies.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk0NjYwMg=="}, "originalCommit": {"oid": "38390e7ed3a634f48b982f28e42076dfb24f811f"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjYzOTQ2OnYy", "diffSide": "RIGHT", "path": "extensions/micrometer/runtime/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMDo0Nzo0NVrOHEon8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMDo0Nzo0NVrOHEon8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYyMTkzOA==", "bodyText": "We don't want license headers (I don't know if there are other places but please remove them all from your PR).", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r474621938", "createdAt": "2020-08-21T10:47:45Z", "author": {"login": "gsmet"}, "path": "extensions/micrometer/runtime/pom.xml", "diffHunk": "@@ -0,0 +1,135 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Copyright 2020 the original author or authors.\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38390e7ed3a634f48b982f28e42076dfb24f811f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjY0MTk1OnYy", "diffSide": "RIGHT", "path": "extensions/micrometer/runtime/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMDo0ODo0NVrOHEoplg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMDo0ODo0NVrOHEoplg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYyMjM1OA==", "bodyText": "This POM requires a description as it's what's used in code.quarkus.io.\nThe one for SmallRye Metrics is Expose metrics for your services. Something along these lines starting with a verb would be nice.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r474622358", "createdAt": "2020-08-21T10:48:45Z", "author": {"login": "gsmet"}, "path": "extensions/micrometer/runtime/pom.xml", "diffHunk": "@@ -0,0 +1,135 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Copyright 2020 the original author or authors.\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>io.quarkus</groupId>\n+    <artifactId>quarkus-micrometer-parent</artifactId>\n+    <version>999-SNAPSHOT</version>\n+    <relativePath>../</relativePath>\n+  </parent>\n+\n+  <artifactId>quarkus-micrometer</artifactId>\n+  <name>Quarkus - Micrometer - Runtime</name>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38390e7ed3a634f48b982f28e42076dfb24f811f"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjY0Mzc2OnYy", "diffSide": "RIGHT", "path": "extensions/micrometer/runtime/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMDo0OToyNFrOHEoqpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMDo0OToyNFrOHEoqpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYyMjYzMQ==", "bodyText": "Please format your pom files with 4 spaces. It's not entirely consistent in the codebase but that's the convention we use.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r474622631", "createdAt": "2020-08-21T10:49:24Z", "author": {"login": "gsmet"}, "path": "extensions/micrometer/runtime/pom.xml", "diffHunk": "@@ -0,0 +1,135 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Copyright 2020 the original author or authors.\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38390e7ed3a634f48b982f28e42076dfb24f811f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjY0NTM1OnYy", "diffSide": "RIGHT", "path": "extensions/micrometer/runtime/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMDo0OTo1NFrOHEorkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMDo0OTo1NFrOHEorkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYyMjg2Nw==", "bodyText": "The indentation here is completely off but it should be fixed if you reformat things properly with 4 spaces.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r474622867", "createdAt": "2020-08-21T10:49:54Z", "author": {"login": "gsmet"}, "path": "extensions/micrometer/runtime/pom.xml", "diffHunk": "@@ -0,0 +1,135 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<!--\n+  Copyright 2020 the original author or authors.\n+\n+  Licensed under the Apache License, Version 2.0 (the \"License\");\n+  you may not use this file except in compliance with the License.\n+  You may obtain a copy of the License at\n+\n+    http://www.apache.org/licenses/LICENSE-2.0\n+\n+  Unless required by applicable law or agreed to in writing, software\n+  distributed under the License is distributed on an \"AS IS\" BASIS,\n+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  See the License for the specific language governing permissions and\n+  limitations under the License.\n+-->\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>io.quarkus</groupId>\n+    <artifactId>quarkus-micrometer-parent</artifactId>\n+    <version>999-SNAPSHOT</version>\n+    <relativePath>../</relativePath>\n+  </parent>\n+\n+  <artifactId>quarkus-micrometer</artifactId>\n+  <name>Quarkus - Micrometer - Runtime</name>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-core</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-arc</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-vertx-http</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.micrometer</groupId>\n+      <artifactId>micrometer-core</artifactId>\n+    </dependency>\n+\n+    <!-- Registry providers (optional) -->\n+\n+    <dependency>\n+      <groupId>io.micrometer</groupId>\n+      <artifactId>micrometer-registry-datadog</artifactId>\n+      <optional>true</optional>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.micrometer</groupId>\n+      <artifactId>micrometer-registry-jmx</artifactId>\n+      <optional>true</optional>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.micrometer</groupId>\n+      <artifactId>micrometer-registry-prometheus</artifactId>\n+      <optional>true</optional>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.micrometer</groupId>\n+      <artifactId>micrometer-registry-stackdriver</artifactId>\n+      <optional>true</optional>\n+    </dependency>\n+\n+    <!-- Dependencies for Binding (optional) -->\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>\n+      <optional>true</optional>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-hibernate-orm</artifactId>\n+      <optional>true</optional>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.eclipse.microprofile.metrics</groupId>\n+      <artifactId>microprofile-metrics-api</artifactId>\n+      <optional>true</optional>\n+    </dependency>\n+\n+    <!-- Test -->\n+\n+    <dependency>\n+      <groupId>org.junit.jupiter</groupId>\n+      <artifactId>junit-jupiter-api</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.junit.jupiter</groupId>\n+      <artifactId>junit-jupiter-engine</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.mockito</groupId>\n+      <artifactId>mockito-core</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n+  </dependencies>\n+\n+  <build>\n+    <plugins>\n+      <plugin>\n+        <groupId>io.quarkus</groupId>\n+        <artifactId>quarkus-bootstrap-maven-plugin</artifactId>\n+      </plugin>\n+            <plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38390e7ed3a634f48b982f28e42076dfb24f811f"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2NjY0NzE4OnYy", "diffSide": "RIGHT", "path": "extensions/micrometer/runtime/src/main/resources/META-INF/quarkus-extension.yaml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMDo1MDoyNVrOHEosmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwNTo1Nzo0M1rOHIqgMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYyMzEyOQ==", "bodyText": "SLF4J?", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r474623129", "createdAt": "2020-08-21T10:50:25Z", "author": {"login": "gsmet"}, "path": "extensions/micrometer/runtime/src/main/resources/META-INF/quarkus-extension.yaml", "diffHunk": "@@ -0,0 +1,11 @@\n+name: \"Micrometer - SLF4J for metrics\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38390e7ed3a634f48b982f28e42076dfb24f811f"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODY5NTc5MQ==", "bodyText": "One of their phrases. It is like SLF4J (the logging API that adapts to other things), but for metrics.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r478695791", "createdAt": "2020-08-27T21:06:43Z", "author": {"login": "ebullient"}, "path": "extensions/micrometer/runtime/src/main/resources/META-INF/quarkus-extension.yaml", "diffHunk": "@@ -0,0 +1,11 @@\n+name: \"Micrometer - SLF4J for metrics\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYyMzEyOQ=="}, "originalCommit": {"oid": "38390e7ed3a634f48b982f28e42076dfb24f811f"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODcxODkyNQ==", "bodyText": "I think it's confusing and we should remove that. It's marketing stuff, it really has no value here.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r478718925", "createdAt": "2020-08-27T21:58:06Z", "author": {"login": "gsmet"}, "path": "extensions/micrometer/runtime/src/main/resources/META-INF/quarkus-extension.yaml", "diffHunk": "@@ -0,0 +1,11 @@\n+name: \"Micrometer - SLF4J for metrics\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYyMzEyOQ=="}, "originalCommit": {"oid": "38390e7ed3a634f48b982f28e42076dfb24f811f"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODg0NzAyNg==", "bodyText": "I did.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r478847026", "createdAt": "2020-08-28T05:57:43Z", "author": {"login": "ebullient"}, "path": "extensions/micrometer/runtime/src/main/resources/META-INF/quarkus-extension.yaml", "diffHunk": "@@ -0,0 +1,11 @@\n+name: \"Micrometer - SLF4J for metrics\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYyMzEyOQ=="}, "originalCommit": {"oid": "38390e7ed3a634f48b982f28e42076dfb24f811f"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNzc2OTIyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/ci-actions.yml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMDozMToyM1rOHKwTlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQxMTowMzo1N1rOHKxS7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzOTI1NA==", "bodyText": "Do we have micrometer-jmx somewhere in the CI? Isn't it missing?", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r481039254", "createdAt": "2020-09-01T10:31:23Z", "author": {"login": "jmartisk"}, "path": ".github/workflows/ci-actions.yml", "diffHunk": "@@ -501,11 +501,13 @@ jobs:\n             test-modules: >\n               kubernetes-client\n           - category: Misc4\n-            timeout: 30\n+            timeout: 45\n             test-modules: >\n               smallrye-graphql\n               picocli-native\n               gradle\n+              micrometer-mp-metrics\n+              micrometer-prometheus", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "405a6f03ef3f0716706725e82e40dd61de6532a2"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA0MTQyNQ==", "bodyText": "Does it have native tests? If not, there's no need.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r481041425", "createdAt": "2020-09-01T10:35:49Z", "author": {"login": "gsmet"}, "path": ".github/workflows/ci-actions.yml", "diffHunk": "@@ -501,11 +501,13 @@ jobs:\n             test-modules: >\n               kubernetes-client\n           - category: Misc4\n-            timeout: 30\n+            timeout: 45\n             test-modules: >\n               smallrye-graphql\n               picocli-native\n               gradle\n+              micrometer-mp-metrics\n+              micrometer-prometheus", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzOTI1NA=="}, "originalCommit": {"oid": "405a6f03ef3f0716706725e82e40dd61de6532a2"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA0OTA2MQ==", "bodyText": "Oh. You're right.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r481049061", "createdAt": "2020-09-01T10:50:48Z", "author": {"login": "jmartisk"}, "path": ".github/workflows/ci-actions.yml", "diffHunk": "@@ -501,11 +501,13 @@ jobs:\n             test-modules: >\n               kubernetes-client\n           - category: Misc4\n-            timeout: 30\n+            timeout: 45\n             test-modules: >\n               smallrye-graphql\n               picocli-native\n               gradle\n+              micrometer-mp-metrics\n+              micrometer-prometheus", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzOTI1NA=="}, "originalCommit": {"oid": "405a6f03ef3f0716706725e82e40dd61de6532a2"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTA1NTQ3MA==", "bodyText": "I didn't set up all of them. There is a native test for Micrometer + JMX, but I didn't want to extend the build time too much. If/when we have incremental builds, I would make a separate bucket for micrometer and go to town.", "url": "https://github.com/quarkusio/quarkus/pull/11073#discussion_r481055470", "createdAt": "2020-09-01T11:03:57Z", "author": {"login": "ebullient"}, "path": ".github/workflows/ci-actions.yml", "diffHunk": "@@ -501,11 +501,13 @@ jobs:\n             test-modules: >\n               kubernetes-client\n           - category: Misc4\n-            timeout: 30\n+            timeout: 45\n             test-modules: >\n               smallrye-graphql\n               picocli-native\n               gradle\n+              micrometer-mp-metrics\n+              micrometer-prometheus", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTAzOTI1NA=="}, "originalCommit": {"oid": "405a6f03ef3f0716706725e82e40dd61de6532a2"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 768, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}