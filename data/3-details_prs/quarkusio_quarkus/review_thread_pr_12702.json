{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMTE2NTEz", "number": 12702, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjo0MTo1NVrOEtVmyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzowODowMFrOEt0gtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTc1MzcwOnYy", "diffSide": "RIGHT", "path": "integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjo0MTo1NVrOHhEYMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODoxOTowNFrOHhfcIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjc4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void consume(String json) {\n          \n          \n            \n                    Person person = new JsonObject(json).mapTo(Person.class);\n          \n          \n            \n                    list.add(person);\n          \n          \n            \n                }\n          \n          \n            \n                public void consume(Person json) {\n          \n          \n            \n                    list.add(person);\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nGood PR. Should we use the value deserializer since we have it in config?", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r504436784", "createdAt": "2020-10-14T06:41:55Z", "author": {"login": "machi1990"}, "path": "integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package io.quarkus.it.kafka;\n+\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+\n+import org.eclipse.microprofile.reactive.messaging.Incoming;\n+import org.jboss.logging.Logger;\n+\n+import io.vertx.core.json.JsonObject;\n+\n+public class PeopleManager {\n+\n+    private final Logger log = Logger.getLogger(PeopleManager.class);\n+\n+    private final List<Person> list = new CopyOnWriteArrayList<>();\n+\n+    @Incoming(\"people-in\")\n+    public void consume(String json) {\n+        Person person = new JsonObject(json).mapTo(Person.class);\n+        list.add(person);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff241d2318b14f8b9c49247e1c11c6ab8fe37f0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg4MDE2MA==", "bodyText": "Yes, you are right.", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r504880160", "createdAt": "2020-10-14T18:19:04Z", "author": {"login": "geoandri"}, "path": "integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java", "diffHunk": "@@ -0,0 +1,27 @@\n+package io.quarkus.it.kafka;\n+\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+\n+import org.eclipse.microprofile.reactive.messaging.Incoming;\n+import org.jboss.logging.Logger;\n+\n+import io.vertx.core.json.JsonObject;\n+\n+public class PeopleManager {\n+\n+    private final Logger log = Logger.getLogger(PeopleManager.class);\n+\n+    private final List<Person> list = new CopyOnWriteArrayList<>();\n+\n+    @Incoming(\"people-in\")\n+    public void consume(String json) {\n+        Person person = new JsonObject(json).mapTo(Person.class);\n+        list.add(person);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNjc4NA=="}, "originalCommit": {"oid": "fff241d2318b14f8b9c49247e1c11c6ab8fe37f0"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTc2MDE2OnYy", "diffSide": "RIGHT", "path": "integration-tests/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjo0NDoxOFrOHhEcJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxODoxOTozOVrOHhfdaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNzc5Ng==", "bodyText": "We'll have to add the IT job in the CI too, especially the native part. It can go in this Messaging block https://github.com/quarkusio/quarkus/blob/master/.github/workflows/ci-actions.yml#L476", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r504437796", "createdAt": "2020-10-14T06:44:18Z", "author": {"login": "machi1990"}, "path": "integration-tests/pom.xml", "diffHunk": "@@ -147,6 +147,7 @@\n         <module>grpc-health</module>\n         <module>google-cloud-functions-http</module>\n         <module>google-cloud-functions</module>\n+        <module>reactive-messaging-kafka</module>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fff241d2318b14f8b9c49247e1c11c6ab8fe37f0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg4MDQ4OA==", "bodyText": "Added to the latest commit.", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r504880488", "createdAt": "2020-10-14T18:19:39Z", "author": {"login": "geoandri"}, "path": "integration-tests/pom.xml", "diffHunk": "@@ -147,6 +147,7 @@\n         <module>grpc-health</module>\n         <module>google-cloud-functions-http</module>\n         <module>google-cloud-functions</module>\n+        <module>reactive-messaging-kafka</module>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQzNzc5Ng=="}, "originalCommit": {"oid": "fff241d2318b14f8b9c49247e1c11c6ab8fe37f0"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzM1NDE3OnYy", "diffSide": "RIGHT", "path": "integration-tests/reactive-messaging-kafka/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjowMzowMlrOHhnAgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNDowNzoyNVrOHhwB_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAwNDE2MA==", "bodyText": "We can also add name and description following this pattern:\n\n  \n    \n      quarkus/integration-tests/reactive-messaging-amqp/pom.xml\n    \n    \n        Lines 14 to 15\n      in\n      efc6dc8\n    \n    \n    \n    \n\n        \n          \n           <name>Quarkus - Integration Tests - Reactive Messaging - AMQP</name> \n        \n\n        \n          \n           <description>The AMQP integration tests module</description>", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505004160", "createdAt": "2020-10-14T22:03:02Z", "author": {"login": "machi1990"}, "path": "integration-tests/reactive-messaging-kafka/pom.xml", "diffHunk": "@@ -0,0 +1,297 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>quarkus-integration-tests-parent</artifactId>\n+        <groupId>io.quarkus</groupId>\n+        <version>999-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>quarkus-integration-test-reactive-messaging-kafka</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efc6dc8e43599d3d574c468fdf70a02e1f226acb"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1MTk5Ng==", "bodyText": "Added to the latest commit.", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505151996", "createdAt": "2020-10-15T04:07:25Z", "author": {"login": "geoandri"}, "path": "integration-tests/reactive-messaging-kafka/pom.xml", "diffHunk": "@@ -0,0 +1,297 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n+    <parent>\n+        <artifactId>quarkus-integration-tests-parent</artifactId>\n+        <groupId>io.quarkus</groupId>\n+        <version>999-SNAPSHOT</version>\n+    </parent>\n+    <modelVersion>4.0.0</modelVersion>\n+\n+    <artifactId>quarkus-integration-test-reactive-messaging-kafka</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAwNDE2MA=="}, "originalCommit": {"oid": "efc6dc8e43599d3d574c468fdf70a02e1f226acb"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2MzM1OTM3OnYy", "diffSide": "RIGHT", "path": "integration-tests/reactive-messaging-kafka/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMjowNDoxM1rOHhnD8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNDowNzoxMFrOHhwBxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAwNTA0Mg==", "bodyText": "I think the incoming sink is missing the topic.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            mp.messaging.incoming.people-in.connector=smallrye-kafka\n          \n          \n            \n            mp.messaging.incoming.people-in.value.deserializer=io.quarkus.it.kafka.PersonDeserializer\n          \n          \n            \n            mp.messaging.incoming.people-in.connector=smallrye-kafka\n          \n          \n            \n            mp.messaging.incoming.people-in.value.deserializer=io.quarkus.it.kafka.PersonDeserializer\n          \n          \n            \n            mp.messaging.incoming.people-in.topic=people", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505005042", "createdAt": "2020-10-14T22:04:13Z", "author": {"login": "machi1990"}, "path": "integration-tests/reactive-messaging-kafka/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,13 @@\n+quarkus.log.category.kafka.level=WARN\n+quarkus.log.category.\\\"org.apache.kafka\\\".level=WARN\n+quarkus.log.category.\\\"org.apache.zookeeper\\\".level=WARN\n+\n+# enable health check\n+quarkus.kafka.health.enabled=true\n+kafka.bootstrap.servers=localhost:19092\n+\n+mp.messaging.outgoing.people-out.connector=smallrye-kafka\n+mp.messaging.outgoing.people-out.topic=people\n+mp.messaging.outgoing.people-out.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer\n+mp.messaging.incoming.people-in.connector=smallrye-kafka\n+mp.messaging.incoming.people-in.value.deserializer=io.quarkus.it.kafka.PersonDeserializer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efc6dc8e43599d3d574c468fdf70a02e1f226acb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1MTk0MA==", "bodyText": "Added the topic for the incoming sink. I had used as a guide the example project (https://quarkus.io/guides/kafka#configuring-the-kafka-connector) which does not actually set the topic for the incoming sink.", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505151940", "createdAt": "2020-10-15T04:07:10Z", "author": {"login": "geoandri"}, "path": "integration-tests/reactive-messaging-kafka/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,13 @@\n+quarkus.log.category.kafka.level=WARN\n+quarkus.log.category.\\\"org.apache.kafka\\\".level=WARN\n+quarkus.log.category.\\\"org.apache.zookeeper\\\".level=WARN\n+\n+# enable health check\n+quarkus.kafka.health.enabled=true\n+kafka.bootstrap.servers=localhost:19092\n+\n+mp.messaging.outgoing.people-out.connector=smallrye-kafka\n+mp.messaging.outgoing.people-out.topic=people\n+mp.messaging.outgoing.people-out.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer\n+mp.messaging.incoming.people-in.connector=smallrye-kafka\n+mp.messaging.incoming.people-in.value.deserializer=io.quarkus.it.kafka.PersonDeserializer", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTAwNTA0Mg=="}, "originalCommit": {"oid": "efc6dc8e43599d3d574c468fdf70a02e1f226acb"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDI4MDY1OnYy", "diffSide": "RIGHT", "path": "integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNDoxNDowMlrOHhwHaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNDoxNDowMlrOHhwHaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1MzM4NA==", "bodyText": "Add @ApplicationScoped", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505153384", "createdAt": "2020-10-15T04:14:02Z", "author": {"login": "cescoffier"}, "path": "integration-tests/reactive-messaging-kafka/src/main/java/io/quarkus/it/kafka/PeopleManager.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package io.quarkus.it.kafka;\n+\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+\n+import org.eclipse.microprofile.reactive.messaging.Incoming;\n+import org.jboss.logging.Logger;\n+\n+public class PeopleManager {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ced77b63f239a728216d01650ca5126b448f6a2c"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDQ3MTkyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/ci-actions.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNTo1NzowOFrOHhx2Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjoxMjoyOVrOHiPiAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4MTcyMg==", "bodyText": "You should add 10 minutes to the timeout.", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505181722", "createdAt": "2020-10-15T05:57:08Z", "author": {"login": "cescoffier"}, "path": ".github/workflows/ci-actions.yml", "diffHunk": "@@ -481,6 +481,7 @@ jobs:\n               kafka\n               kafka-streams\n               reactive-messaging-amqp\n+              reactive-messaging-kafka", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ced77b63f239a728216d01650ca5126b448f6a2c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2ODA5OQ==", "bodyText": "Added in the latest commit.", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505668099", "createdAt": "2020-10-15T16:12:29Z", "author": {"login": "geoandri"}, "path": ".github/workflows/ci-actions.yml", "diffHunk": "@@ -481,6 +481,7 @@ jobs:\n               kafka\n               kafka-streams\n               reactive-messaging-amqp\n+              reactive-messaging-kafka", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4MTcyMg=="}, "originalCommit": {"oid": "ced77b63f239a728216d01650ca5126b448f6a2c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDQ3NDE0OnYy", "diffSide": "RIGHT", "path": "integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNTo1ODoyNFrOHhx3oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjowOToxMVrOHiPZXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4MjExMw==", "bodyText": "I would use await().untilAsserted", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505182113", "createdAt": "2020-10-15T05:58:24Z", "author": {"login": "cescoffier"}, "path": "integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.quarkus.it.kafka;\n+\n+import static io.restassured.RestAssured.get;\n+import static org.awaitility.Awaitility.await;\n+\n+import java.util.List;\n+\n+import org.jboss.logging.Logger;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.common.mapper.TypeRef;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KafkaTestResource.class)\n+public class KafkaConnectorTest {\n+    private static final Logger log = Logger.getLogger(KafkaTestResource.class);\n+\n+    protected static final TypeRef<List<Person>> TYPE_REF = new TypeRef<List<Person>>() {\n+    };\n+\n+    @Test\n+    public void test() {\n+        log.info(\"Test run\");\n+        try {\n+            await()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ced77b63f239a728216d01650ca5126b448f6a2c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0NTg1NQ==", "bodyText": "@Test\npublic void test() {\n        await().untilAsserted(() -> \n           Assertions.assertEquals(get(\"/kafka/people\").as(TYPE_REF).size(), 6));\n}", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505245855", "createdAt": "2020-10-15T07:12:32Z", "author": {"login": "cescoffier"}, "path": "integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.quarkus.it.kafka;\n+\n+import static io.restassured.RestAssured.get;\n+import static org.awaitility.Awaitility.await;\n+\n+import java.util.List;\n+\n+import org.jboss.logging.Logger;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.common.mapper.TypeRef;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KafkaTestResource.class)\n+public class KafkaConnectorTest {\n+    private static final Logger log = Logger.getLogger(KafkaTestResource.class);\n+\n+    protected static final TypeRef<List<Person>> TYPE_REF = new TypeRef<List<Person>>() {\n+    };\n+\n+    @Test\n+    public void test() {\n+        log.info(\"Test run\");\n+        try {\n+            await()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4MjExMw=="}, "originalCommit": {"oid": "ced77b63f239a728216d01650ca5126b448f6a2c"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2NTg4NQ==", "bodyText": "Done in the latest commit.", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505665885", "createdAt": "2020-10-15T16:09:11Z", "author": {"login": "geoandri"}, "path": "integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.quarkus.it.kafka;\n+\n+import static io.restassured.RestAssured.get;\n+import static org.awaitility.Awaitility.await;\n+\n+import java.util.List;\n+\n+import org.jboss.logging.Logger;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.common.mapper.TypeRef;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KafkaTestResource.class)\n+public class KafkaConnectorTest {\n+    private static final Logger log = Logger.getLogger(KafkaTestResource.class);\n+\n+    protected static final TypeRef<List<Person>> TYPE_REF = new TypeRef<List<Person>>() {\n+    };\n+\n+    @Test\n+    public void test() {\n+        log.info(\"Test run\");\n+        try {\n+            await()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4MjExMw=="}, "originalCommit": {"oid": "ced77b63f239a728216d01650ca5126b448f6a2c"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDgxMzM0OnYy", "diffSide": "RIGHT", "path": "integration-tests/reactive-messaging-kafka/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzowNzoyOFrOHh1awA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjoxMDoxM1rOHiPcOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0MDI1Ng==", "bodyText": "The tests fail because of a missing property:\nmp.messaging.incoming.people-in.auto.offset.reset=earliest\n\nWithout, it uses Kafka's. default which is latest. Basically, it only receives records sends after the subscription. earliest instructs the consumers to reset its offset to the last processed offset from consumers from its consumer group. Here, it will reset the offset to 0, as there are no other consumers (so obviously none in its group) and no records have been erased due to retention expiration (24h by default).", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505240256", "createdAt": "2020-10-15T07:07:28Z", "author": {"login": "cescoffier"}, "path": "integration-tests/reactive-messaging-kafka/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,14 @@\n+quarkus.log.category.kafka.level=WARN\n+quarkus.log.category.\\\"org.apache.kafka\\\".level=WARN\n+quarkus.log.category.\\\"org.apache.zookeeper\\\".level=WARN\n+\n+# enable health check\n+quarkus.kafka.health.enabled=true\n+kafka.bootstrap.servers=localhost:19092\n+\n+mp.messaging.outgoing.people-out.connector=smallrye-kafka\n+mp.messaging.outgoing.people-out.topic=people\n+mp.messaging.outgoing.people-out.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer\n+mp.messaging.incoming.people-in.connector=smallrye-kafka\n+mp.messaging.incoming.people-in.topic=people", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ced77b63f239a728216d01650ca5126b448f6a2c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2NjYxNg==", "bodyText": "Indeed, many thanks @cescoffier for the help and the detailed explanation as well.", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505666616", "createdAt": "2020-10-15T16:10:13Z", "author": {"login": "geoandri"}, "path": "integration-tests/reactive-messaging-kafka/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,14 @@\n+quarkus.log.category.kafka.level=WARN\n+quarkus.log.category.\\\"org.apache.kafka\\\".level=WARN\n+quarkus.log.category.\\\"org.apache.zookeeper\\\".level=WARN\n+\n+# enable health check\n+quarkus.kafka.health.enabled=true\n+kafka.bootstrap.servers=localhost:19092\n+\n+mp.messaging.outgoing.people-out.connector=smallrye-kafka\n+mp.messaging.outgoing.people-out.topic=people\n+mp.messaging.outgoing.people-out.value.serializer=io.quarkus.kafka.client.serialization.JsonbSerializer\n+mp.messaging.incoming.people-in.connector=smallrye-kafka\n+mp.messaging.incoming.people-in.topic=people", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0MDI1Ng=="}, "originalCommit": {"oid": "ced77b63f239a728216d01650ca5126b448f6a2c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDgxNzE2OnYy", "diffSide": "RIGHT", "path": "integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNzowODowMFrOHh1dSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjoxMTowM1rOHiPeWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0MDkwNA==", "bodyText": "Could you add the associated native tests?\npackage io.quarkus.it.kafka;\n\nimport io.quarkus.test.junit.NativeImageTest;\n\n@NativeImageTest\npublic class KafkaConnectorIT extends KafkaConnectorTest {\n\n}", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505240904", "createdAt": "2020-10-15T07:08:00Z", "author": {"login": "cescoffier"}, "path": "integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.quarkus.it.kafka;\n+\n+import static io.restassured.RestAssured.get;\n+import static org.awaitility.Awaitility.await;\n+\n+import java.util.List;\n+\n+import org.jboss.logging.Logger;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.common.mapper.TypeRef;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KafkaTestResource.class)\n+public class KafkaConnectorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ced77b63f239a728216d01650ca5126b448f6a2c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY2NzE2Mg==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/12702#discussion_r505667162", "createdAt": "2020-10-15T16:11:03Z", "author": {"login": "geoandri"}, "path": "integration-tests/reactive-messaging-kafka/src/test/java/io/quarkus/it/kafka/KafkaConnectorTest.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.quarkus.it.kafka;\n+\n+import static io.restassured.RestAssured.get;\n+import static org.awaitility.Awaitility.await;\n+\n+import java.util.List;\n+\n+import org.jboss.logging.Logger;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.common.mapper.TypeRef;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KafkaTestResource.class)\n+public class KafkaConnectorTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTI0MDkwNA=="}, "originalCommit": {"oid": "ced77b63f239a728216d01650ca5126b448f6a2c"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4304, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}