{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2ODIxODkz", "number": 7786, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjowMDozMVrODnREYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzowNjoyMFrODnSIHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTAwNzA3OnYy", "diffSide": "RIGHT", "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/LocalProject.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjowMDozMVrOF1KlsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjoxMToyMVrOF1K3vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI5MjMzNw==", "bodyText": "Just a heads up: https://maven.apache.org/maven-ci-friendly.html does not only support revision but also sha1 and/or changelist.", "url": "https://github.com/quarkusio/quarkus/pull/7786#discussion_r391292337", "createdAt": "2020-03-11T22:00:31Z", "author": {"login": "famod"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/LocalProject.java", "diffHunk": "@@ -28,17 +28,24 @@\n \n     private static final String PROJECT_BASEDIR = \"${project.basedir}\";\n     private static final String POM_XML = \"pom.xml\";\n+    private static final String REVISION = \"revision\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f14d4c42f6bdfd97930ddb5867b188edffd57bfe"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI5NTU5MA==", "bodyText": "Thanks for pointing this out. I'll probably add support for those in another PR just to get this one in quicker. Unless you tell me you absolutely need them :)", "url": "https://github.com/quarkusio/quarkus/pull/7786#discussion_r391295590", "createdAt": "2020-03-11T22:09:22Z", "author": {"login": "aloubyansky"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/LocalProject.java", "diffHunk": "@@ -28,17 +28,24 @@\n \n     private static final String PROJECT_BASEDIR = \"${project.basedir}\";\n     private static final String POM_XML = \"pom.xml\";\n+    private static final String REVISION = \"revision\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI5MjMzNw=="}, "originalCommit": {"oid": "f14d4c42f6bdfd97930ddb5867b188edffd57bfe"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI5Njk1OA==", "bodyText": "I'm fine with just revision!", "url": "https://github.com/quarkusio/quarkus/pull/7786#discussion_r391296958", "createdAt": "2020-03-11T22:11:21Z", "author": {"login": "famod"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/LocalProject.java", "diffHunk": "@@ -28,17 +28,24 @@\n \n     private static final String PROJECT_BASEDIR = \"${project.basedir}\";\n     private static final String POM_XML = \"pom.xml\";\n+    private static final String REVISION = \"revision\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI5MjMzNw=="}, "originalCommit": {"oid": "f14d4c42f6bdfd97930ddb5867b188edffd57bfe"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTE4MDQ3OnYy", "diffSide": "RIGHT", "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/LocalProject.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzowNjoyMFrOF1MRHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNTo0Mzo1NFrOF1kK5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxOTgzNg==", "bodyText": "Does this also cover -Drevision=<something_different_than_in_pom>?\nThis is important, because that is what CI (e.g. Jenkins via Jenkinsfile) would be passing to mvn to override the default revision.\nA variation is of that would be:\n\n\n<properties>\n    <revision>0.1-${revisionSuffix}</revision>\n    <revisionSuffix>SNAPSHOT</revisionSuffix>\n</properties>\n\nCI passes -DrevisionSuffix=build-${BUILD_NUMBER}\n\nThis way local build produces 0.1-SNAPSHOT and CI produces something like 0.1-build-123.", "url": "https://github.com/quarkusio/quarkus/pull/7786#discussion_r391319836", "createdAt": "2020-03-11T23:06:20Z", "author": {"login": "famod"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/LocalProject.java", "diffHunk": "@@ -136,10 +143,30 @@ private LocalProject(Model rawModel, LocalWorkspace workspace) throws BootstrapE\n         this.workspace = workspace;\n         this.groupId = ModelUtils.getGroupId(rawModel);\n         this.artifactId = rawModel.getArtifactId();\n-        this.version = ModelUtils.getVersion(rawModel);\n+\n+        String version = ModelUtils.getVersion(rawModel);\n+        final boolean revisionVersion;\n+        if (revisionVersion = REVISION_EXPR.equals(version)) {\n+            version = rawModel.getProperties().getProperty(REVISION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f14d4c42f6bdfd97930ddb5867b188edffd57bfe"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUxOTI2Mg==", "bodyText": "Actually according to the Maven doc you referenced this is not supported by Maven itself, isn't it?", "url": "https://github.com/quarkusio/quarkus/pull/7786#discussion_r391519262", "createdAt": "2020-03-12T10:13:48Z", "author": {"login": "aloubyansky"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/LocalProject.java", "diffHunk": "@@ -136,10 +143,30 @@ private LocalProject(Model rawModel, LocalWorkspace workspace) throws BootstrapE\n         this.workspace = workspace;\n         this.groupId = ModelUtils.getGroupId(rawModel);\n         this.artifactId = rawModel.getArtifactId();\n-        this.version = ModelUtils.getVersion(rawModel);\n+\n+        String version = ModelUtils.getVersion(rawModel);\n+        final boolean revisionVersion;\n+        if (revisionVersion = REVISION_EXPR.equals(version)) {\n+            version = rawModel.getProperties().getProperty(REVISION);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxOTgzNg=="}, "originalCommit": {"oid": "f14d4c42f6bdfd97930ddb5867b188edffd57bfe"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyMDM5MA==", "bodyText": "I tried adding support for sha1 and changelist but strangely it also didn't work in Maven itself. Unless I somehow did it wrong.", "url": "https://github.com/quarkusio/quarkus/pull/7786#discussion_r391520390", "createdAt": "2020-03-12T10:15:49Z", "author": {"login": "aloubyansky"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/LocalProject.java", "diffHunk": "@@ -136,10 +143,30 @@ private LocalProject(Model rawModel, LocalWorkspace workspace) throws BootstrapE\n         this.workspace = workspace;\n         this.groupId = ModelUtils.getGroupId(rawModel);\n         this.artifactId = rawModel.getArtifactId();\n-        this.version = ModelUtils.getVersion(rawModel);\n+\n+        String version = ModelUtils.getVersion(rawModel);\n+        final boolean revisionVersion;\n+        if (revisionVersion = REVISION_EXPR.equals(version)) {\n+            version = rawModel.getProperties().getProperty(REVISION);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxOTgzNg=="}, "originalCommit": {"oid": "f14d4c42f6bdfd97930ddb5867b188edffd57bfe"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUyODc1Mg==", "bodyText": "Does this also cover -Drevision=<something_different_than_in_pom>?\n\nThis will work though.", "url": "https://github.com/quarkusio/quarkus/pull/7786#discussion_r391528752", "createdAt": "2020-03-12T10:30:50Z", "author": {"login": "aloubyansky"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/LocalProject.java", "diffHunk": "@@ -136,10 +143,30 @@ private LocalProject(Model rawModel, LocalWorkspace workspace) throws BootstrapE\n         this.workspace = workspace;\n         this.groupId = ModelUtils.getGroupId(rawModel);\n         this.artifactId = rawModel.getArtifactId();\n-        this.version = ModelUtils.getVersion(rawModel);\n+\n+        String version = ModelUtils.getVersion(rawModel);\n+        final boolean revisionVersion;\n+        if (revisionVersion = REVISION_EXPR.equals(version)) {\n+            version = rawModel.getProperties().getProperty(REVISION);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxOTgzNg=="}, "originalCommit": {"oid": "f14d4c42f6bdfd97930ddb5867b188edffd57bfe"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY5Nzg3Ng==", "bodyText": "Actually according to the Maven doc you referenced this is not supported by Maven itself, isn't it?\n\nWhich part do you mean? -Drevision=... is mentioned explicitly multiple times.\nThe revisionSuffix is not mentioned but IMHO this is just basic Maven interpolation logic, no?\nYou could also have myFancySomethingProperty instead of revisionSuffix, doesn't matter.\n\nI tried adding support for sha1 and changelist but strangely it also didn't work in Maven itself.\n\nI swapped revision with sha1 locally in my sample project and it worked (apart from the Quarkus build problem). I even changed the default value from 1.0-SNAPSHOT to 0.2-SNAPSHOT and I also tried -Dsha1=1.1-SNAPSHOT.\n\n\nDoes this also cover -Drevision=<something_different_than_in_pom>?\n\nThis will work though.\n\nOk, as long as this works the main problem is solved. The rest could be addressed separately.", "url": "https://github.com/quarkusio/quarkus/pull/7786#discussion_r391697876", "createdAt": "2020-03-12T15:23:36Z", "author": {"login": "famod"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/LocalProject.java", "diffHunk": "@@ -136,10 +143,30 @@ private LocalProject(Model rawModel, LocalWorkspace workspace) throws BootstrapE\n         this.workspace = workspace;\n         this.groupId = ModelUtils.getGroupId(rawModel);\n         this.artifactId = rawModel.getArtifactId();\n-        this.version = ModelUtils.getVersion(rawModel);\n+\n+        String version = ModelUtils.getVersion(rawModel);\n+        final boolean revisionVersion;\n+        if (revisionVersion = REVISION_EXPR.equals(version)) {\n+            version = rawModel.getProperties().getProperty(REVISION);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxOTgzNg=="}, "originalCommit": {"oid": "f14d4c42f6bdfd97930ddb5867b188edffd57bfe"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcwMDU4Nw==", "bodyText": "You could also have myFancySomethingProperty instead of revisionSuffix, doesn't matter.\n\nArbitrary property interpolation is not allowed in the version elements. There is an example in that doc.\n\nI swapped revision with sha1 locally in my sample project and it worked\n\nAh, I need to try that. I tried combining the three mentioned properties like they had in the doc, which for some reason didn't work.", "url": "https://github.com/quarkusio/quarkus/pull/7786#discussion_r391700587", "createdAt": "2020-03-12T15:27:35Z", "author": {"login": "aloubyansky"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/LocalProject.java", "diffHunk": "@@ -136,10 +143,30 @@ private LocalProject(Model rawModel, LocalWorkspace workspace) throws BootstrapE\n         this.workspace = workspace;\n         this.groupId = ModelUtils.getGroupId(rawModel);\n         this.artifactId = rawModel.getArtifactId();\n-        this.version = ModelUtils.getVersion(rawModel);\n+\n+        String version = ModelUtils.getVersion(rawModel);\n+        final boolean revisionVersion;\n+        if (revisionVersion = REVISION_EXPR.equals(version)) {\n+            version = rawModel.getProperties().getProperty(REVISION);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxOTgzNg=="}, "originalCommit": {"oid": "f14d4c42f6bdfd97930ddb5867b188edffd57bfe"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTcxMTQ2MQ==", "bodyText": "You could also have myFancySomethingProperty instead of revisionSuffix, doesn't matter.\n\nArbitrary property interpolation is not allowed in the version elements. There is an example in that doc.\n\nYou are right, I have totally missed that!\n\n\nI swapped revision with sha1 locally in my sample project and it worked\n\nAh, I need to try that. I tried combining the three mentioned properties like they had in the doc, which for some reason didn't work.\n\nI just tried the following and everything works as expected (in Maven itself):\ndiff --git a/core/pom.xml b/core/pom.xml\nindex ea45976..b52f070 100644\n--- a/core/pom.xml\n+++ b/core/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.github.famod.modmono-quarkus</groupId>\n     <artifactId>modmono-quarkus-parent</artifactId>\n-    <version>${revision}</version>\n+    <version>${revision}${sha1}</version>\n   </parent>\n   <artifactId>modmono-quarkus-core</artifactId>\n   <dependencies>\ndiff --git a/dist/pom.xml b/dist/pom.xml\nindex 278e9c5..e0df457 100644\n--- a/dist/pom.xml\n+++ b/dist/pom.xml\n@@ -5,7 +5,7 @@\n   <parent>\n     <groupId>com.github.famod.modmono-quarkus</groupId>\n     <artifactId>modmono-quarkus-parent</artifactId>\n-    <version>${revision}</version>\n+    <version>${revision}${sha1}</version>\n   </parent>\n   <artifactId>modmono-quarkus-dist</artifactId>\n   <dependencies>\ndiff --git a/pom.xml b/pom.xml\nindex b895c66..f72103c 100644\n--- a/pom.xml\n+++ b/pom.xml\n@@ -4,10 +4,11 @@\n   <modelVersion>4.0.0</modelVersion>\n   <groupId>com.github.famod.modmono-quarkus</groupId>\n   <artifactId>modmono-quarkus-parent</artifactId>\n-  <version>${revision}</version>\n+  <version>${revision}${sha1}</version>\n   <packaging>pom</packaging>\n   <properties>\n-    <revision>1.0-SNAPSHOT</revision>\n+    <revision>0.3</revision>\n+    <sha1>-SNAPSHOT</sha1>\n\n     <compiler-plugin.version>3.8.1</compiler-plugin.version>", "url": "https://github.com/quarkusio/quarkus/pull/7786#discussion_r391711461", "createdAt": "2020-03-12T15:43:54Z", "author": {"login": "famod"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/resolver/maven/workspace/LocalProject.java", "diffHunk": "@@ -136,10 +143,30 @@ private LocalProject(Model rawModel, LocalWorkspace workspace) throws BootstrapE\n         this.workspace = workspace;\n         this.groupId = ModelUtils.getGroupId(rawModel);\n         this.artifactId = rawModel.getArtifactId();\n-        this.version = ModelUtils.getVersion(rawModel);\n+\n+        String version = ModelUtils.getVersion(rawModel);\n+        final boolean revisionVersion;\n+        if (revisionVersion = REVISION_EXPR.equals(version)) {\n+            version = rawModel.getProperties().getProperty(REVISION);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxOTgzNg=="}, "originalCommit": {"oid": "f14d4c42f6bdfd97930ddb5867b188edffd57bfe"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4833, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}