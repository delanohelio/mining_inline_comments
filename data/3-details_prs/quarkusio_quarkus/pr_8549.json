{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjAxMjMx", "number": 8549, "title": "Panache check", "bodyText": "Fixes #5433\nThis PR adds a check to crash the build if an ID field is defined when using PanacheEntity or PanacheMongoEntity.\nI check the performance impact on the build and it's less than 5ms for the integration test.", "createdAt": "2020-04-13T11:23:17Z", "url": "https://github.com/quarkusio/quarkus/pull/8549", "merged": true, "mergeCommit": {"oid": "3cea6a0922ac4b1171096feb0637f8a3e9814cf2"}, "closed": true, "closedAt": "2020-04-24T10:49:23Z", "author": {"login": "loicmathieu"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXOeibAFqTM5MjEyNzcwNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcasmlkgFqTM5OTcxNDE4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMTI3NzA0", "url": "https://github.com/quarkusio/quarkus/pull/8549#pullrequestreview-392127704", "createdAt": "2020-04-13T12:58:22Z", "commit": {"oid": "d3cab3ecaa189266224a763f32327cec2109c6fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMjo1ODoyMlrOGEluKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMjo1ODoyMlrOGEluKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ2NTUxMg==", "bodyText": "Where is this dependency used? I wonder if we should add to quarkus-junit5-internal instead?", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r407465512", "createdAt": "2020-04-13T12:58:22Z", "author": {"login": "gastaldi"}, "path": "extensions/panache/hibernate-orm-panache/deployment/pom.xml", "diffHunk": "@@ -72,6 +72,12 @@\n             <artifactId>rest-assured</artifactId>\n             <scope>test</scope>\n         </dependency>\n+        <dependency>\n+            <groupId>org.junit.platform</groupId>\n+            <artifactId>junit-platform-launcher</artifactId>\n+            <version>1.6.1</version>\n+            <scope>test</scope>\n+        </dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3cab3ecaa189266224a763f32327cec2109c6fb"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMTQ2NDgz", "url": "https://github.com/quarkusio/quarkus/pull/8549#pullrequestreview-392146483", "createdAt": "2020-04-13T13:34:31Z", "commit": {"oid": "d3cab3ecaa189266224a763f32327cec2109c6fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzozNDozMVrOGEmosA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzozNDozMVrOGEmosA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ4MDQ5Ng==", "bodyText": "Hmm, I think we do not need to specify the configuration file since it is application.properties so it'll be picked by default.", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r407480496", "createdAt": "2020-04-13T13:34:31Z", "author": {"login": "machi1990"}, "path": "extensions/panache/mongodb-panache/deployment/src/test/java/io/quarkus/mongodb/panache/DuplicateIdReactiveMongoEntityTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package io.quarkus.mongodb.panache;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.platform.engine.discovery.DiscoverySelectors.selectClass;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+import org.junit.platform.launcher.Launcher;\n+import org.junit.platform.launcher.LauncherDiscoveryRequest;\n+import org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\n+import org.junit.platform.launcher.core.LauncherFactory;\n+import org.junit.platform.launcher.listeners.SummaryGeneratingListener;\n+import org.junit.platform.launcher.listeners.TestExecutionSummary;\n+\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class DuplicateIdReactiveMongoEntityTest {\n+    public static class DuplicateIdReactiveMongoEntityTestTest {\n+        @RegisterExtension\n+        static QuarkusUnitTest runner = new QuarkusUnitTest()\n+                .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                        .addClasses(DuplicateIdReactiveMongoEntity.class))\n+                .withConfigurationResource(\"application.properties\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3cab3ecaa189266224a763f32327cec2109c6fb"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMTQ3ODg1", "url": "https://github.com/quarkusio/quarkus/pull/8549#pullrequestreview-392147885", "createdAt": "2020-04-13T13:37:04Z", "commit": {"oid": "d3cab3ecaa189266224a763f32327cec2109c6fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzozNzowNFrOGEms2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzozNzowNFrOGEms2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ4MTU2Mg==", "bodyText": "I wonder if in this test case we could have used this pattern instead https://github.com/quarkusio/quarkus/blob/master/extensions/hibernate-orm/deployment/src/test/java/io/quarkus/hibernate/orm/sql_load_script/InvalidMultilineSqlLoadScriptTestCase.java#L17 ?", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r407481562", "createdAt": "2020-04-13T13:37:04Z", "author": {"login": "machi1990"}, "path": "extensions/panache/mongodb-panache/deployment/src/test/java/io/quarkus/mongodb/panache/DuplicateIdReactiveMongoEntityTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package io.quarkus.mongodb.panache;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.platform.engine.discovery.DiscoverySelectors.selectClass;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+import org.junit.platform.launcher.Launcher;\n+import org.junit.platform.launcher.LauncherDiscoveryRequest;\n+import org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\n+import org.junit.platform.launcher.core.LauncherFactory;\n+import org.junit.platform.launcher.listeners.SummaryGeneratingListener;\n+import org.junit.platform.launcher.listeners.TestExecutionSummary;\n+\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class DuplicateIdReactiveMongoEntityTest {\n+    public static class DuplicateIdReactiveMongoEntityTestTest {\n+        @RegisterExtension\n+        static QuarkusUnitTest runner = new QuarkusUnitTest()\n+                .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                        .addClasses(DuplicateIdReactiveMongoEntity.class))\n+                .withConfigurationResource(\"application.properties\");\n+\n+        @Test\n+        void shouldThrow() {\n+            DuplicateIdMongoEntity.findAll();\n+        }\n+    }\n+\n+    @Test\n+    void verifyIdTest() {\n+        // as the test will fail to be created, we need a way to launch it manually to assert\n+        // that there was a build issue (the BuildException will be thrown at test instanciation time).\n+        SummaryGeneratingListener listener = new SummaryGeneratingListener();\n+        LauncherDiscoveryRequest request = LauncherDiscoveryRequestBuilder.request()\n+                .selectors(selectClass(DuplicateIdReactiveMongoEntityTestTest.class))\n+                .build();\n+        Launcher launcher = LauncherFactory.create();\n+        launcher.registerTestExecutionListeners(listener);\n+        launcher.execute(request);\n+\n+        // we check that the test failed\n+        TestExecutionSummary summary = listener.getSummary();\n+        assertEquals(1, summary.getFailures().size());\n+        String exceptionMsg = summary.getFailures().get(0).getException().getMessage();\n+        assertTrue(exceptionMsg.contains(\"io.quarkus.builder.BuildException\"));\n+        assertTrue(exceptionMsg.contains(\"You provide a MongoDB identifier via @BsonId inside\"));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3cab3ecaa189266224a763f32327cec2109c6fb"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMTQ4Mjc0", "url": "https://github.com/quarkusio/quarkus/pull/8549#pullrequestreview-392148274", "createdAt": "2020-04-13T13:37:46Z", "commit": {"oid": "d3cab3ecaa189266224a763f32327cec2109c6fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzozNzo0NlrOGEmt9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxMzozNzo0NlrOGEmt9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzQ4MTg0NQ==", "bodyText": "see this comment https://github.com/quarkusio/quarkus/pull/8549/files#r407481562 and let me know what you think", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r407481845", "createdAt": "2020-04-13T13:37:46Z", "author": {"login": "machi1990"}, "path": "extensions/panache/mongodb-panache/deployment/src/test/java/io/quarkus/mongodb/panache/DuplicateIdMongoEntityTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package io.quarkus.mongodb.panache;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.junit.platform.engine.discovery.DiscoverySelectors.selectClass;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+import org.junit.platform.launcher.Launcher;\n+import org.junit.platform.launcher.LauncherDiscoveryRequest;\n+import org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\n+import org.junit.platform.launcher.core.LauncherFactory;\n+import org.junit.platform.launcher.listeners.SummaryGeneratingListener;\n+import org.junit.platform.launcher.listeners.TestExecutionSummary;\n+\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class DuplicateIdMongoEntityTest {\n+    public static class DuplicateIdMongoEntityTestTest {\n+        @RegisterExtension\n+        static QuarkusUnitTest runner = new QuarkusUnitTest()\n+                .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                        .addClasses(DuplicateIdMongoEntity.class))\n+                .withConfigurationResource(\"application.properties\");\n+\n+        @Test\n+        void shouldThrow() {\n+            DuplicateIdMongoEntity.findAll();\n+        }\n+    }\n+\n+    @Test\n+    void verifyIdTest() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3cab3ecaa189266224a763f32327cec2109c6fb"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3cab3ecaa189266224a763f32327cec2109c6fb", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/d3cab3ecaa189266224a763f32327cec2109c6fb", "committedDate": "2020-04-13T09:02:35Z", "message": "Check @Id usage inside Hibernate with Panache"}, "afterCommit": {"oid": "408d8faba5c6f0dcb998de6e9a5916ef238b450f", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/408d8faba5c6f0dcb998de6e9a5916ef238b450f", "committedDate": "2020-04-14T07:40:19Z", "message": "Check @Id usage inside Hibernate with Panache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODY4NzIz", "url": "https://github.com/quarkusio/quarkus/pull/8549#pullrequestreview-393868723", "createdAt": "2020-04-15T15:08:22Z", "commit": {"oid": "408d8faba5c6f0dcb998de6e9a5916ef238b450f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNTowODoyM1rOGF-VTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNToxMzoyNFrOGF-kqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkxNzMyNA==", "bodyText": "This should be recursive: it is possible that we have superclasses between the entity class and PanacheEntity.", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r408917324", "createdAt": "2020-04-15T15:08:23Z", "author": {"login": "FroMage"}, "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheResourceProcessor.java", "diffHunk": "@@ -78,6 +81,16 @@ void build(CombinedIndexBuildItem index,\n             BuildProducer<PanacheEntityClassesBuildItem> entityClasses,\n             BuildProducer<NamedQueryEntityClassBuildStep> namedQueries) throws Exception {\n \n+        // we verify that no ID fields are defined (via @BsonId) when extending PanacheMongoEntity\n+        for (AnnotationInstance annotationInstance : index.getIndex().getAnnotations(DOTNAME_ID)) {\n+            ClassInfo info = io.quarkus.panache.common.deployment.JandexUtil.getEnclosingClass(annotationInstance);\n+            if (info.superName().equals(DOTNAME_PANACHE_ENTITY)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "408d8faba5c6f0dcb998de6e9a5916ef238b450f"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkxNzc4Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    \"your class should extend PanacheEntityBase instead\", Collections.emptyList());\n          \n          \n            \n                                    \"your class should extend PanacheEntityBase instead, or use the id provided by PanacheEntity\", Collections.emptyList());", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r408917786", "createdAt": "2020-04-15T15:08:55Z", "author": {"login": "FroMage"}, "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheResourceProcessor.java", "diffHunk": "@@ -78,6 +81,16 @@ void build(CombinedIndexBuildItem index,\n             BuildProducer<PanacheEntityClassesBuildItem> entityClasses,\n             BuildProducer<NamedQueryEntityClassBuildStep> namedQueries) throws Exception {\n \n+        // we verify that no ID fields are defined (via @BsonId) when extending PanacheMongoEntity\n+        for (AnnotationInstance annotationInstance : index.getIndex().getAnnotations(DOTNAME_ID)) {\n+            ClassInfo info = io.quarkus.panache.common.deployment.JandexUtil.getEnclosingClass(annotationInstance);\n+            if (info.superName().equals(DOTNAME_PANACHE_ENTITY)) {\n+                throw new BuildException(\"You provide a JPA identifier via @Id inside '\" + info.name() +\n+                        \"' but one is already provided by PanacheEntity, \" +\n+                        \"your class should extend PanacheEntityBase instead\", Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "408d8faba5c6f0dcb998de6e9a5916ef238b450f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyMDQ2NA==", "bodyText": "Same remark about inheritance.", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r408920464", "createdAt": "2020-04-15T15:12:25Z", "author": {"login": "FroMage"}, "path": "extensions/panache/mongodb-panache/deployment/src/main/java/io/quarkus/mongodb/panache/deployment/PanacheResourceProcessor.java", "diffHunk": "@@ -133,7 +136,17 @@ void buildImperative(CombinedIndexBuildItem index,\n             BuildProducer<BytecodeTransformerBuildItem> transformers,\n             BuildProducer<ReflectiveClassBuildItem> reflectiveClass,\n             BuildProducer<PropertyMappingClassBuildStep> propertyMappingClass,\n-            BuildProducer<PanacheEntityClassesBuildItem> entityClasses) {\n+            BuildProducer<PanacheEntityClassesBuildItem> entityClasses) throws BuildException {\n+\n+        // we verify that no ID fields are defined (via @BsonId) when extending PanacheMongoEntity\n+        for (AnnotationInstance annotationInstance : index.getIndex().getAnnotations(DOTNAME_BSON_ID)) {\n+            ClassInfo info = io.quarkus.panache.common.deployment.JandexUtil.getEnclosingClass(annotationInstance);\n+            if (info.superName().equals(DOTNAME_PANACHE_ENTITY)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "408d8faba5c6f0dcb998de6e9a5916ef238b450f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyMDc3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    \"your class should extend PanacheMongoEntityBase instead\", Collections.emptyList());\n          \n          \n            \n                                    \"your class should extend PanacheMongoEntityBase instead, or use the id provided by PanageMongoEntity\", Collections.emptyList());", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r408920776", "createdAt": "2020-04-15T15:12:48Z", "author": {"login": "FroMage"}, "path": "extensions/panache/mongodb-panache/deployment/src/main/java/io/quarkus/mongodb/panache/deployment/PanacheResourceProcessor.java", "diffHunk": "@@ -133,7 +136,17 @@ void buildImperative(CombinedIndexBuildItem index,\n             BuildProducer<BytecodeTransformerBuildItem> transformers,\n             BuildProducer<ReflectiveClassBuildItem> reflectiveClass,\n             BuildProducer<PropertyMappingClassBuildStep> propertyMappingClass,\n-            BuildProducer<PanacheEntityClassesBuildItem> entityClasses) {\n+            BuildProducer<PanacheEntityClassesBuildItem> entityClasses) throws BuildException {\n+\n+        // we verify that no ID fields are defined (via @BsonId) when extending PanacheMongoEntity\n+        for (AnnotationInstance annotationInstance : index.getIndex().getAnnotations(DOTNAME_BSON_ID)) {\n+            ClassInfo info = io.quarkus.panache.common.deployment.JandexUtil.getEnclosingClass(annotationInstance);\n+            if (info.superName().equals(DOTNAME_PANACHE_ENTITY)) {\n+                throw new BuildException(\"You provide a MongoDB identifier via @BsonId inside '\" + info.name() +\n+                        \"' but one is already provided by PanacheMongoEntity, \" +\n+                        \"your class should extend PanacheMongoEntityBase instead\", Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "408d8faba5c6f0dcb998de6e9a5916ef238b450f"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyMTAyNA==", "bodyText": "Same remark about inheritance.", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r408921024", "createdAt": "2020-04-15T15:13:05Z", "author": {"login": "FroMage"}, "path": "extensions/panache/mongodb-panache/deployment/src/main/java/io/quarkus/mongodb/panache/deployment/PanacheResourceProcessor.java", "diffHunk": "@@ -214,7 +227,17 @@ void buildMutiny(CombinedIndexBuildItem index,\n             ApplicationIndexBuildItem applicationIndex,\n             BuildProducer<ReflectiveClassBuildItem> reflectiveClass,\n             BuildProducer<PropertyMappingClassBuildStep> propertyMappingClass,\n-            BuildProducer<BytecodeTransformerBuildItem> transformers) {\n+            BuildProducer<BytecodeTransformerBuildItem> transformers) throws BuildException {\n+\n+        // we verify that no ID fields are defined (via @BsonId) when extending ReactivePanacheMongoEntity\n+        for (AnnotationInstance annotationInstance : index.getIndex().getAnnotations(DOTNAME_BSON_ID)) {\n+            ClassInfo info = io.quarkus.panache.common.deployment.JandexUtil.getEnclosingClass(annotationInstance);\n+            if (info.superName().equals(DOTNAME_MUTINY_PANACHE_ENTITY)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "408d8faba5c6f0dcb998de6e9a5916ef238b450f"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODkyMTI1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    \"your class should extend ReactivePanacheMongoEntityBase instead\", Collections.emptyList());\n          \n          \n            \n                                    \"your class should extend ReactivePanacheMongoEntityBase instead, or use the id provided by ReactivePanacheMongoEntity\", Collections.emptyList());", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r408921257", "createdAt": "2020-04-15T15:13:24Z", "author": {"login": "FroMage"}, "path": "extensions/panache/mongodb-panache/deployment/src/main/java/io/quarkus/mongodb/panache/deployment/PanacheResourceProcessor.java", "diffHunk": "@@ -214,7 +227,17 @@ void buildMutiny(CombinedIndexBuildItem index,\n             ApplicationIndexBuildItem applicationIndex,\n             BuildProducer<ReflectiveClassBuildItem> reflectiveClass,\n             BuildProducer<PropertyMappingClassBuildStep> propertyMappingClass,\n-            BuildProducer<BytecodeTransformerBuildItem> transformers) {\n+            BuildProducer<BytecodeTransformerBuildItem> transformers) throws BuildException {\n+\n+        // we verify that no ID fields are defined (via @BsonId) when extending ReactivePanacheMongoEntity\n+        for (AnnotationInstance annotationInstance : index.getIndex().getAnnotations(DOTNAME_BSON_ID)) {\n+            ClassInfo info = io.quarkus.panache.common.deployment.JandexUtil.getEnclosingClass(annotationInstance);\n+            if (info.superName().equals(DOTNAME_MUTINY_PANACHE_ENTITY)) {\n+                throw new BuildException(\"You provide a MongoDB identifier via @BsonId inside '\" + info.name() +\n+                        \"' but one is already provided by ReactivePanacheMongoEntity, \" +\n+                        \"your class should extend ReactivePanacheMongoEntityBase instead\", Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "408d8faba5c6f0dcb998de6e9a5916ef238b450f"}, "originalPosition": 56}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a463bd2a14485a5a4b80189e923f9dbed7336e1a", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/a463bd2a14485a5a4b80189e923f9dbed7336e1a", "committedDate": "2020-04-16T07:52:15Z", "message": "Apply suggestions from code review\n\nCo-Authored-By: St\u00e9phane \u00c9pardaud <stef@inforealm.org>"}, "afterCommit": {"oid": "f9a3443053d0e561a6cce87924c35fe59e71eb37", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/f9a3443053d0e561a6cce87924c35fe59e71eb37", "committedDate": "2020-04-16T08:52:19Z", "message": "Check @Id usage inside Hibernate with Panache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0NTg2Mzk0", "url": "https://github.com/quarkusio/quarkus/pull/8549#pullrequestreview-394586394", "createdAt": "2020-04-16T12:35:00Z", "commit": {"oid": "f9a3443053d0e561a6cce87924c35fe59e71eb37"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMjozNTowMVrOGGjGOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMjozNTowMVrOGGjGOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTUxOTY3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static boolean isChildOf(IndexView index, ClassInfo info, DotName parentName) throws BuildException {\n          \n          \n            \n                public static boolean isSubclassOf(IndexView index, ClassInfo info, DotName parentName) throws BuildException {\n          \n      \n    \n    \n  \n\nGiven that this is only for superclasses (not interfaces) the name should make it clear.", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r409519675", "createdAt": "2020-04-16T12:35:01Z", "author": {"login": "FroMage"}, "path": "extensions/panache/panache-common/deployment/src/main/java/io/quarkus/panache/common/deployment/JandexUtil.java", "diffHunk": "@@ -201,4 +206,40 @@ public static boolean containsMethod(ClassInfo classInfo, MethodInfo methodInfo)\n         }\n         return false;\n     }\n+\n+    public static ClassInfo getEnclosingClass(AnnotationInstance annotationInstance) {\n+        switch (annotationInstance.target().kind()) {\n+            case FIELD:\n+                return annotationInstance.target().asField().declaringClass();\n+            case METHOD:\n+                return annotationInstance.target().asMethod().declaringClass();\n+            case METHOD_PARAMETER:\n+                return annotationInstance.target().asMethodParameter().method().declaringClass();\n+            case CLASS:\n+                return annotationInstance.target().asClass();\n+            case TYPE:\n+                return annotationInstance.target().asType().asClass(); // TODO is it legal here or should I throw ?\n+            default:\n+                throw new RuntimeException(); // this should not occurs\n+        }\n+    }\n+\n+    public static boolean isChildOf(IndexView index, ClassInfo info, DotName parentName) throws BuildException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a3443053d0e561a6cce87924c35fe59e71eb37"}, "originalPosition": 51}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a7324e9f8dea097c1ed4d0883e54993d8bf01436", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/a7324e9f8dea097c1ed4d0883e54993d8bf01436", "committedDate": "2020-04-17T07:13:56Z", "message": "Update extensions/panache/panache-common/deployment/src/main/java/io/quarkus/panache/common/deployment/JandexUtil.java\n\nCo-Authored-By: St\u00e9phane \u00c9pardaud <stef@inforealm.org>"}, "afterCommit": {"oid": "0ce1a822e2b2218b7c911c04b8e550113a1cac3f", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/0ce1a822e2b2218b7c911c04b8e550113a1cac3f", "committedDate": "2020-04-17T08:11:56Z", "message": "Check @Id usage inside Hibernate with Panache"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "979fd404339da5ee734564d52e28ae2d0ed47d47", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/979fd404339da5ee734564d52e28ae2d0ed47d47", "committedDate": "2020-04-17T08:32:20Z", "message": "Move check to the validation phase"}, "afterCommit": {"oid": "eb5da3488e68f7bf8f437480ce81aa68a13d79d4", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/eb5da3488e68f7bf8f437480ce81aa68a13d79d4", "committedDate": "2020-04-17T08:36:20Z", "message": "Move check to the validation phase"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eb5da3488e68f7bf8f437480ce81aa68a13d79d4", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/eb5da3488e68f7bf8f437480ce81aa68a13d79d4", "committedDate": "2020-04-17T08:36:20Z", "message": "Move check to the validation phase"}, "afterCommit": {"oid": "f10ee649ed60f01d65bc430935f1fde15e46b68b", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/f10ee649ed60f01d65bc430935f1fde15e46b68b", "committedDate": "2020-04-17T08:38:47Z", "message": "Move check to the validation phase"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f10ee649ed60f01d65bc430935f1fde15e46b68b", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/f10ee649ed60f01d65bc430935f1fde15e46b68b", "committedDate": "2020-04-17T08:38:47Z", "message": "Move check to the validation phase"}, "afterCommit": {"oid": "bb82b9667fa07eb50621eeb1385d2380403e38d5", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/bb82b9667fa07eb50621eeb1385d2380403e38d5", "committedDate": "2020-04-20T14:26:47Z", "message": "Move check to the validation phase"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NTY4MjUy", "url": "https://github.com/quarkusio/quarkus/pull/8549#pullrequestreview-396568252", "createdAt": "2020-04-20T15:33:18Z", "commit": {"oid": "bb82b9667fa07eb50621eeb1385d2380403e38d5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f410c14c572c24a9dca08bd2f39ea0fbda605e9", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/2f410c14c572c24a9dca08bd2f39ea0fbda605e9", "committedDate": "2020-04-22T08:16:58Z", "message": "Check @BsonId usage inside MongoDB with Panache"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb82b9667fa07eb50621eeb1385d2380403e38d5", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/bb82b9667fa07eb50621eeb1385d2380403e38d5", "committedDate": "2020-04-20T14:26:47Z", "message": "Move check to the validation phase"}, "afterCommit": {"oid": "32dc77c5746c53bd734894477591de4335a96a83", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/32dc77c5746c53bd734894477591de4335a96a83", "committedDate": "2020-04-22T08:17:15Z", "message": "Check @Id usage inside Hibernate with Panache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MzU1NTcy", "url": "https://github.com/quarkusio/quarkus/pull/8549#pullrequestreview-399355572", "createdAt": "2020-04-23T18:13:24Z", "commit": {"oid": "32dc77c5746c53bd734894477591de4335a96a83"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODoxMzoyNFrOGK1mEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODoyMDo1MFrOGK14mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAxNzA0MA==", "bodyText": "Seems like the exception is not thrown anymore..", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r414017040", "createdAt": "2020-04-23T18:13:24Z", "author": {"login": "machi1990"}, "path": "extensions/panache/mongodb-panache/deployment/src/main/java/io/quarkus/mongodb/panache/deployment/PanacheResourceProcessor.java", "diffHunk": "@@ -137,7 +139,7 @@ void buildImperative(CombinedIndexBuildItem index,\n             BuildProducer<ReflectiveClassBuildItem> reflectiveClass,\n             BuildProducer<PropertyMappingClassBuildStep> propertyMappingClass,\n             BuildProducer<PanacheEntityClassesBuildItem> entityClasses,\n-            List<PanacheMethodCustomizerBuildItem> methodCustomizersBuildItems) {\n+            List<PanacheMethodCustomizerBuildItem> methodCustomizersBuildItems) throws BuildException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32dc77c5746c53bd734894477591de4335a96a83"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAxNzIyMw==", "bodyText": "Same here the exception is not thrown anymore", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r414017223", "createdAt": "2020-04-23T18:13:42Z", "author": {"login": "machi1990"}, "path": "extensions/panache/mongodb-panache/deployment/src/main/java/io/quarkus/mongodb/panache/deployment/PanacheResourceProcessor.java", "diffHunk": "@@ -222,11 +224,10 @@ void buildMutiny(CombinedIndexBuildItem index,\n             BuildProducer<ReflectiveClassBuildItem> reflectiveClass,\n             BuildProducer<PropertyMappingClassBuildStep> propertyMappingClass,\n             BuildProducer<BytecodeTransformerBuildItem> transformers,\n-            List<PanacheMethodCustomizerBuildItem> methodCustomizersBuildItems) {\n+            List<PanacheMethodCustomizerBuildItem> methodCustomizersBuildItems) throws BuildException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32dc77c5746c53bd734894477591de4335a96a83"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAxODEwOQ==", "bodyText": "nitpick: We could maybe have an import of DOTNAME_OBJECT  and avoid this long line", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r414018109", "createdAt": "2020-04-23T18:15:05Z", "author": {"login": "machi1990"}, "path": "extensions/panache/mongodb-panache/deployment/src/main/java/io/quarkus/mongodb/panache/deployment/PanacheResourceProcessor.java", "diffHunk": "@@ -344,7 +370,7 @@ private void extractMappings(Map<String, String> classPropertyMapping, ClassInfo\n         }\n \n         // climb up the hierarchy of types\n-        if (!target.superClassType().name().equals(DOTNAME_OBJECT)) {\n+        if (!target.superClassType().name().equals(io.quarkus.panache.common.deployment.JandexUtil.DOTNAME_OBJECT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32dc77c5746c53bd734894477591de4335a96a83"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAxOTEzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        // this can happens if the parent is not inside the Yandex index\n          \n          \n            \n                        // this can happens if the parent is not inside the Jandex index", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r414019139", "createdAt": "2020-04-23T18:16:40Z", "author": {"login": "machi1990"}, "path": "extensions/panache/panache-common/deployment/src/main/java/io/quarkus/panache/common/deployment/JandexUtil.java", "diffHunk": "@@ -308,6 +314,42 @@ public static int getLoadOpcode(Type jandexType) {\n         return Opcodes.ALOAD;\n     }\n \n+    public static ClassInfo getEnclosingClass(AnnotationInstance annotationInstance) {\n+        switch (annotationInstance.target().kind()) {\n+            case FIELD:\n+                return annotationInstance.target().asField().declaringClass();\n+            case METHOD:\n+                return annotationInstance.target().asMethod().declaringClass();\n+            case METHOD_PARAMETER:\n+                return annotationInstance.target().asMethodParameter().method().declaringClass();\n+            case CLASS:\n+                return annotationInstance.target().asClass();\n+            case TYPE:\n+                return annotationInstance.target().asType().asClass(); // TODO is it legal here or should I throw ?\n+            default:\n+                throw new RuntimeException(); // this should not occurs\n+        }\n+    }\n+\n+    public static boolean isSubclassOf(IndexView index, ClassInfo info, DotName parentName) throws BuildException {\n+        if (info.superName().equals(DOTNAME_OBJECT)) {\n+            return false;\n+        }\n+        if (info.superName().equals(parentName)) {\n+            return true;\n+        }\n+\n+        // climb up the hierarchy of classes\n+        Type superType = info.superClassType();\n+        ClassInfo superClass = index.getClassByName(superType.name());\n+        if (superClass == null) {\n+            // this can happens if the parent is not inside the Yandex index", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32dc77c5746c53bd734894477591de4335a96a83"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAxOTM3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            throw new RuntimeException(); // this should not occurs\n          \n          \n            \n                            throw new RuntimeException(); // this should not occur", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r414019371", "createdAt": "2020-04-23T18:16:59Z", "author": {"login": "machi1990"}, "path": "extensions/panache/panache-common/deployment/src/main/java/io/quarkus/panache/common/deployment/JandexUtil.java", "diffHunk": "@@ -308,6 +314,42 @@ public static int getLoadOpcode(Type jandexType) {\n         return Opcodes.ALOAD;\n     }\n \n+    public static ClassInfo getEnclosingClass(AnnotationInstance annotationInstance) {\n+        switch (annotationInstance.target().kind()) {\n+            case FIELD:\n+                return annotationInstance.target().asField().declaringClass();\n+            case METHOD:\n+                return annotationInstance.target().asMethod().declaringClass();\n+            case METHOD_PARAMETER:\n+                return annotationInstance.target().asMethodParameter().method().declaringClass();\n+            case CLASS:\n+                return annotationInstance.target().asClass();\n+            case TYPE:\n+                return annotationInstance.target().asType().asClass(); // TODO is it legal here or should I throw ?\n+            default:\n+                throw new RuntimeException(); // this should not occurs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32dc77c5746c53bd734894477591de4335a96a83"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAyMDQ3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        CombinedIndexBuildItem index) throws BuildException {\n          \n          \n            \n                        CombinedIndexBuildItem index)  {\n          \n      \n    \n    \n  \n\nNo exception is thrown", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r414020473", "createdAt": "2020-04-23T18:18:42Z", "author": {"login": "machi1990"}, "path": "extensions/panache/mongodb-panache/deployment/src/main/java/io/quarkus/mongodb/panache/deployment/PanacheResourceProcessor.java", "diffHunk": "@@ -300,6 +301,31 @@ void buildMutiny(CombinedIndexBuildItem index,\n         }\n     }\n \n+    @BuildStep\n+    ValidationPhaseBuildItem.ValidationErrorBuildItem validate(ValidationPhaseBuildItem validationPhase,\n+            CombinedIndexBuildItem index) throws BuildException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32dc77c5746c53bd734894477591de4335a96a83"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAyMTI1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        CombinedIndexBuildItem index) throws BuildException {\n          \n          \n            \n                        CombinedIndexBuildItem index)  {\n          \n      \n    \n    \n  \n\nWe do not throw any exception", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r414021252", "createdAt": "2020-04-23T18:19:58Z", "author": {"login": "machi1990"}, "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheResourceProcessor.java", "diffHunk": "@@ -154,6 +157,23 @@ void build(CombinedIndexBuildItem index,\n         }\n     }\n \n+    @BuildStep\n+    ValidationPhaseBuildItem.ValidationErrorBuildItem validate(ValidationPhaseBuildItem validationPhase,\n+            CombinedIndexBuildItem index) throws BuildException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32dc77c5746c53bd734894477591de4335a96a83"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAyMTc4Ng==", "bodyText": "static import of DOTNAME_OBJECT  would be better instead of this very long line.\nor we could import JandexUtil at the very least since it seems to be used everywhere.", "url": "https://github.com/quarkusio/quarkus/pull/8549#discussion_r414021786", "createdAt": "2020-04-23T18:20:50Z", "author": {"login": "machi1990"}, "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheResourceProcessor.java", "diffHunk": "@@ -191,7 +211,7 @@ private void lookupNamedQueries(CombinedIndexBuildItem index, DotName name, Set<\n         }\n \n         // climb up the hierarchy of types\n-        if (!classInfo.superClassType().name().equals(DOTNAME_OBJECT)) {\n+        if (!classInfo.superClassType().name().equals(io.quarkus.panache.common.deployment.JandexUtil.DOTNAME_OBJECT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32dc77c5746c53bd734894477591de4335a96a83"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be19569747d2a3d313adab5225d69494721ef45b", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/be19569747d2a3d313adab5225d69494721ef45b", "committedDate": "2020-04-24T07:39:11Z", "message": "Check @Id usage inside Hibernate with Panache"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32dc77c5746c53bd734894477591de4335a96a83", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/32dc77c5746c53bd734894477591de4335a96a83", "committedDate": "2020-04-22T08:17:15Z", "message": "Check @Id usage inside Hibernate with Panache"}, "afterCommit": {"oid": "be19569747d2a3d313adab5225d69494721ef45b", "author": {"user": {"login": "loicmathieu", "name": "Lo\u00efc Mathieu"}}, "url": "https://github.com/quarkusio/quarkus/commit/be19569747d2a3d313adab5225d69494721ef45b", "committedDate": "2020-04-24T07:39:11Z", "message": "Check @Id usage inside Hibernate with Panache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5NzE0MTg4", "url": "https://github.com/quarkusio/quarkus/pull/8549#pullrequestreview-399714188", "createdAt": "2020-04-24T07:46:05Z", "commit": {"oid": "be19569747d2a3d313adab5225d69494721ef45b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4562, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}