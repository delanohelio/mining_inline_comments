{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMTM1Mzcw", "number": 8565, "title": "SmallRye Reactive Messaging 2.0", "bodyText": "", "createdAt": "2020-04-14T11:47:31Z", "url": "https://github.com/quarkusio/quarkus/pull/8565", "merged": true, "mergeCommit": {"oid": "de943e52045bdf298a38739c9670e664c2005c72"}, "closed": true, "closedAt": "2020-04-14T19:16:18Z", "author": {"login": "michalszynkiewicz"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWNnhYgH2gAyNDAzMTM1MzcwOjk2Njk5YWIwY2ZlMWZkMDRkY2U4YzE3NTk4YjQ1ZmI5MWViNjZlMjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXiyraAFqTM5Mjg4NDM3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "96699ab0cfe1fd04dce8c17598b45fb91eb66e27", "author": {"user": {"login": "michalszynkiewicz", "name": "Micha\u0142 Szynkiewicz"}}, "url": "https://github.com/quarkusio/quarkus/commit/96699ab0cfe1fd04dce8c17598b45fb91eb66e27", "committedDate": "2020-04-10T09:24:21Z", "message": "SmallRye Reactive Messaging 2.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8334a906c071815974d43ad06b7089c34b2b288b", "author": {"user": {"login": "michalszynkiewicz", "name": "Micha\u0142 Szynkiewicz"}}, "url": "https://github.com/quarkusio/quarkus/commit/8334a906c071815974d43ad06b7089c34b2b288b", "committedDate": "2020-04-14T10:21:29Z", "message": "SmallRye Reactive Messaging 2.0 - blocking support + tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyODYyMjM0", "url": "https://github.com/quarkusio/quarkus/pull/8565#pullrequestreview-392862234", "createdAt": "2020-04-14T12:07:15Z", "commit": {"oid": "8334a906c071815974d43ad06b7089c34b2b288b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjowNzoxNVrOGFLeXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjoxMTozN1rOGFLnbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NDA2MA==", "bodyText": "Can you add: Thread.currentThread().interrupt();", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408084060", "createdAt": "2020-04-14T12:07:15Z", "author": {"login": "cescoffier"}, "path": "extensions/smallrye-reactive-messaging/deployment/src/test/java/io/quarkus/smallrye/reactivemessaging/blocking/beans/BeanReturningMessages.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.quarkus.smallrye.reactivemessaging.blocking.beans;\n+\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.eclipse.microprofile.reactive.messaging.Message;\n+import org.eclipse.microprofile.reactive.messaging.Outgoing;\n+\n+import io.smallrye.reactive.messaging.annotations.Blocking;\n+\n+@ApplicationScoped\n+public class BeanReturningMessages {\n+    private AtomicInteger count = new AtomicInteger();\n+    private List<String> threads = new CopyOnWriteArrayList<>();\n+\n+    @Blocking\n+    @Outgoing(\"infinite-producer-msg\")\n+    public Message<Integer> create() {\n+        try {\n+            Thread.sleep(200);\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8334a906c071815974d43ad06b7089c34b2b288b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NDE3Nw==", "bodyText": "(and remove the dump of the stack trace maybe)", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408084177", "createdAt": "2020-04-14T12:07:30Z", "author": {"login": "cescoffier"}, "path": "extensions/smallrye-reactive-messaging/deployment/src/test/java/io/quarkus/smallrye/reactivemessaging/blocking/beans/BeanReturningMessages.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package io.quarkus.smallrye.reactivemessaging.blocking.beans;\n+\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.eclipse.microprofile.reactive.messaging.Message;\n+import org.eclipse.microprofile.reactive.messaging.Outgoing;\n+\n+import io.smallrye.reactive.messaging.annotations.Blocking;\n+\n+@ApplicationScoped\n+public class BeanReturningMessages {\n+    private AtomicInteger count = new AtomicInteger();\n+    private List<String> threads = new CopyOnWriteArrayList<>();\n+\n+    @Blocking\n+    @Outgoing(\"infinite-producer-msg\")\n+    public Message<Integer> create() {\n+        try {\n+            Thread.sleep(200);\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NDA2MA=="}, "originalCommit": {"oid": "8334a906c071815974d43ad06b7089c34b2b288b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NDI1Mw==", "bodyText": "Same comment as above (reset interrupt flag)", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408084253", "createdAt": "2020-04-14T12:07:40Z", "author": {"login": "cescoffier"}, "path": "extensions/smallrye-reactive-messaging/deployment/src/test/java/io/quarkus/smallrye/reactivemessaging/blocking/beans/BeanReturningPayloads.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package io.quarkus.smallrye.reactivemessaging.blocking.beans;\n+\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+\n+import org.eclipse.microprofile.reactive.messaging.Outgoing;\n+\n+import io.smallrye.reactive.messaging.annotations.Blocking;\n+\n+@ApplicationScoped\n+public class BeanReturningPayloads {\n+    private AtomicInteger count = new AtomicInteger();\n+    private List<String> threads = new CopyOnWriteArrayList<>();\n+\n+    @Blocking\n+    @Outgoing(\"infinite-producer-payload\")\n+    public int create() {\n+        try {\n+            Thread.sleep(200);\n+        } catch (InterruptedException e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8334a906c071815974d43ad06b7089c34b2b288b"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NTU2MA==", "bodyText": "We should be able to remove the quarkus-vertx-core dependency, as it's a transitive dependency of this one.", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408085560", "createdAt": "2020-04-14T12:10:02Z", "author": {"login": "cescoffier"}, "path": "extensions/smallrye-reactive-messaging/runtime/pom.xml", "diffHunk": "@@ -25,6 +25,10 @@\n             <groupId>io.quarkus</groupId>\n             <artifactId>quarkus-vertx-core</artifactId>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8334a906c071815974d43ad06b7089c34b2b288b"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NTc0Ng==", "bodyText": "Should it be private?", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408085746", "createdAt": "2020-04-14T12:10:24Z", "author": {"login": "cescoffier"}, "path": "extensions/smallrye-reactive-messaging/runtime/src/main/java/io/quarkus/smallrye/reactivemessaging/runtime/QuarkusMediatorConfiguration.java", "diffHunk": "@@ -44,6 +44,12 @@\n \n     private Class<? extends Invoker> invokerClass;\n \n+    private boolean blocking;\n+\n+    private boolean blockingExecutionOrdered;\n+\n+    String workerPoolName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8334a906c071815974d43ad06b7089c34b2b288b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4NjM4MA==", "bodyText": "IS the only difference with the upstream version the AlternativePriority?", "url": "https://github.com/quarkusio/quarkus/pull/8565#discussion_r408086380", "createdAt": "2020-04-14T12:11:37Z", "author": {"login": "cescoffier"}, "path": "extensions/smallrye-reactive-messaging/runtime/src/main/java/io/quarkus/smallrye/reactivemessaging/runtime/QuarkusWorkerPoolRegistry.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package io.quarkus.smallrye.reactivemessaging.runtime;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Objects;\n+import java.util.Optional;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import javax.annotation.Priority;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.BeforeDestroyed;\n+import javax.enterprise.event.Observes;\n+import javax.enterprise.event.Reception;\n+import javax.inject.Inject;\n+\n+import org.eclipse.microprofile.config.ConfigProvider;\n+import org.slf4j.LoggerFactory;\n+\n+import io.quarkus.arc.AlternativePriority;\n+import io.smallrye.mutiny.Uni;\n+import io.smallrye.reactive.messaging.annotations.Blocking;\n+import io.smallrye.reactive.messaging.connectors.ExecutionHolder;\n+import io.smallrye.reactive.messaging.connectors.WorkerPoolRegistry;\n+import io.smallrye.reactive.messaging.helpers.Validation;\n+import io.vertx.core.Handler;\n+import io.vertx.mutiny.core.Promise;\n+import io.vertx.mutiny.core.WorkerExecutor;\n+\n+@AlternativePriority(1)\n+@ApplicationScoped\n+// TODO: create a different entry for WorkerPoolRegistry than `analyzeWorker` and drop this class\n+public class QuarkusWorkerPoolRegistry extends WorkerPoolRegistry {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8334a906c071815974d43ad06b7089c34b2b288b"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "356f1c7a77ad3464917ee5105f7112cbd3d00ada", "author": {"user": {"login": "michalszynkiewicz", "name": "Micha\u0142 Szynkiewicz"}}, "url": "https://github.com/quarkusio/quarkus/commit/356f1c7a77ad3464917ee5105f7112cbd3d00ada", "committedDate": "2020-04-14T12:33:56Z", "message": "SmallRye Reactive Messaging 2.0 - rework"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyODg0Mzcz", "url": "https://github.com/quarkusio/quarkus/pull/8565#pullrequestreview-392884373", "createdAt": "2020-04-14T12:38:28Z", "commit": {"oid": "8334a906c071815974d43ad06b7089c34b2b288b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4573, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}