{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1NDYxNTM5", "number": 8263, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo0Njo0MlrODsp8lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo0Njo0MlrODsp8lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MTUxMTg5OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo0Njo0MlrOF9n-lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxMjo1MzozMlrOF9oPeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MjQ1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    platformConfiguration.getHost().map(h -> unPrefixed.put(DEKORATE_PREFIX + generator + \".host\", h));\n          \n          \n            \n                                    platformConfiguration.getHost().ifPresent(h -> unPrefixed.put(DEKORATE_PREFIX + generator + \".host\", h));", "url": "https://github.com/quarkusio/quarkus/pull/8263#discussion_r400162453", "createdAt": "2020-03-30T12:46:42Z", "author": {"login": "gastaldi"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "diffHunk": "@@ -96,6 +97,12 @@ private static void handleExpose(Config config, Map<String, Object> unPrefixed)\n                     .orElse(false);\n             if (unprefixedExpose || prefixedExpose) {\n                 unPrefixed.put(DEKORATE_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, true);\n+                for (PlatformConfiguration platformConfiguration : platformConfigurations) {\n+                    if (platformConfiguration.getConfigName().equals(generator)) {\n+                        platformConfiguration.getHost().map(h -> unPrefixed.put(DEKORATE_PREFIX + generator + \".host\", h));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "167364d21138c025b2eb60a9319a98ccc009e6f7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MjgwOQ==", "bodyText": "Or the whole for/if/break block could be written using streams :)", "url": "https://github.com/quarkusio/quarkus/pull/8263#discussion_r400162809", "createdAt": "2020-03-30T12:47:16Z", "author": {"login": "gastaldi"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "diffHunk": "@@ -96,6 +97,12 @@ private static void handleExpose(Config config, Map<String, Object> unPrefixed)\n                     .orElse(false);\n             if (unprefixedExpose || prefixedExpose) {\n                 unPrefixed.put(DEKORATE_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, true);\n+                for (PlatformConfiguration platformConfiguration : platformConfigurations) {\n+                    if (platformConfiguration.getConfigName().equals(generator)) {\n+                        platformConfiguration.getHost().map(h -> unPrefixed.put(DEKORATE_PREFIX + generator + \".host\", h));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MjQ1Mw=="}, "originalCommit": {"oid": "167364d21138c025b2eb60a9319a98ccc009e6f7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2NDQ4NA==", "bodyText": "Arrays.stream(platformConfigurations)\n    .filter(f->f.getConfigName().equals(generator))\n    .map(PlatformConfiguration::getHost)\n    .findFirst()\n    .ifPresent(h-> unPrefixed.put(DEKORATE_PREFIX + generator + \".host\", h))", "url": "https://github.com/quarkusio/quarkus/pull/8263#discussion_r400164484", "createdAt": "2020-03-30T12:49:57Z", "author": {"login": "gastaldi"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "diffHunk": "@@ -96,6 +97,12 @@ private static void handleExpose(Config config, Map<String, Object> unPrefixed)\n                     .orElse(false);\n             if (unprefixedExpose || prefixedExpose) {\n                 unPrefixed.put(DEKORATE_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, true);\n+                for (PlatformConfiguration platformConfiguration : platformConfigurations) {\n+                    if (platformConfiguration.getConfigName().equals(generator)) {\n+                        platformConfiguration.getHost().map(h -> unPrefixed.put(DEKORATE_PREFIX + generator + \".host\", h));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MjQ1Mw=="}, "originalCommit": {"oid": "167364d21138c025b2eb60a9319a98ccc009e6f7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2Njc3Ng==", "bodyText": "Yes to first, no to the second :)", "url": "https://github.com/quarkusio/quarkus/pull/8263#discussion_r400166776", "createdAt": "2020-03-30T12:53:32Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "diffHunk": "@@ -96,6 +97,12 @@ private static void handleExpose(Config config, Map<String, Object> unPrefixed)\n                     .orElse(false);\n             if (unprefixedExpose || prefixedExpose) {\n                 unPrefixed.put(DEKORATE_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, true);\n+                for (PlatformConfiguration platformConfiguration : platformConfigurations) {\n+                    if (platformConfiguration.getConfigName().equals(generator)) {\n+                        platformConfiguration.getHost().map(h -> unPrefixed.put(DEKORATE_PREFIX + generator + \".host\", h));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDE2MjQ1Mw=="}, "originalCommit": {"oid": "167364d21138c025b2eb60a9319a98ccc009e6f7"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3698, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}