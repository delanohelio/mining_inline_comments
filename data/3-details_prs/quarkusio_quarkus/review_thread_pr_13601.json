{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNTQ2MTE1", "number": 13601, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjozNTo1OFrOFApg6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODozMjoyMVrOFDExvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjI0NDkxOnYy", "diffSide": "RIGHT", "path": "extensions/smallrye-metrics/deployment/src/main/java/io/quarkus/smallrye/metrics/deployment/SmallRyeMetricsProcessor.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjozNTo1OFrOH_C2Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwMTozMDo0OFrOIASg6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2OTAwMw==", "bodyText": "So, does that mean that Framework is equivalent to NonApplication?\nCan't we have a single word?", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r535869003", "createdAt": "2020-12-04T06:35:58Z", "author": {"login": "cescoffier"}, "path": "extensions/smallrye-metrics/deployment/src/main/java/io/quarkus/smallrye/metrics/deployment/SmallRyeMetricsProcessor.java", "diffHunk": "@@ -154,7 +153,7 @@ MetricsCapabilityBuildItem metricsCapabilityBuildItem() {\n     @Record(STATIC_INIT)\n     void createRoute(BuildProducer<RouteBuildItem> routes,\n             SmallRyeMetricsRecorder recorder,\n-            HttpRootPathBuildItem httpRoot,\n+            FrameworkRootPathBuildItem frameworkRoot,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MTg3Nw==", "bodyText": "Yeah, I kind of flip flopped between them.\nLeaning towards \"NonApplication\". If that's preferred I can align them all", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r536081877", "createdAt": "2020-12-04T12:58:57Z", "author": {"login": "kenfinnigan"}, "path": "extensions/smallrye-metrics/deployment/src/main/java/io/quarkus/smallrye/metrics/deployment/SmallRyeMetricsProcessor.java", "diffHunk": "@@ -154,7 +153,7 @@ MetricsCapabilityBuildItem metricsCapabilityBuildItem() {\n     @Record(STATIC_INIT)\n     void createRoute(BuildProducer<RouteBuildItem> routes,\n             SmallRyeMetricsRecorder recorder,\n-            HttpRootPathBuildItem httpRoot,\n+            FrameworkRootPathBuildItem frameworkRoot,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2OTAwMw=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEwMDkwOA==", "bodyText": "Yes, I actually prefer avoiding the word \"framework\"", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r536100908", "createdAt": "2020-12-04T13:31:22Z", "author": {"login": "cescoffier"}, "path": "extensions/smallrye-metrics/deployment/src/main/java/io/quarkus/smallrye/metrics/deployment/SmallRyeMetricsProcessor.java", "diffHunk": "@@ -154,7 +153,7 @@ MetricsCapabilityBuildItem metricsCapabilityBuildItem() {\n     @Record(STATIC_INIT)\n     void createRoute(BuildProducer<RouteBuildItem> routes,\n             SmallRyeMetricsRecorder recorder,\n-            HttpRootPathBuildItem httpRoot,\n+            FrameworkRootPathBuildItem frameworkRoot,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2OTAwMw=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE1NDkzNA==", "bodyText": "How about Core?", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r537154934", "createdAt": "2020-12-07T00:00:14Z", "author": {"login": "gastaldi"}, "path": "extensions/smallrye-metrics/deployment/src/main/java/io/quarkus/smallrye/metrics/deployment/SmallRyeMetricsProcessor.java", "diffHunk": "@@ -154,7 +153,7 @@ MetricsCapabilityBuildItem metricsCapabilityBuildItem() {\n     @Record(STATIC_INIT)\n     void createRoute(BuildProducer<RouteBuildItem> routes,\n             SmallRyeMetricsRecorder recorder,\n-            HttpRootPathBuildItem httpRoot,\n+            FrameworkRootPathBuildItem frameworkRoot,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2OTAwMw=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE1NTQ0NA==", "bodyText": "Um, actually I think something like management would make more sense", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r537155444", "createdAt": "2020-12-07T00:02:38Z", "author": {"login": "gastaldi"}, "path": "extensions/smallrye-metrics/deployment/src/main/java/io/quarkus/smallrye/metrics/deployment/SmallRyeMetricsProcessor.java", "diffHunk": "@@ -154,7 +153,7 @@ MetricsCapabilityBuildItem metricsCapabilityBuildItem() {\n     @Record(STATIC_INIT)\n     void createRoute(BuildProducer<RouteBuildItem> routes,\n             SmallRyeMetricsRecorder recorder,\n-            HttpRootPathBuildItem httpRoot,\n+            FrameworkRootPathBuildItem frameworkRoot,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2OTAwMw=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzE3NDI1MA==", "bodyText": "management implies you can actually manage something, which isn't the case with these endpoints.\nI've changed it to \"NonApplication\"", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r537174250", "createdAt": "2020-12-07T01:30:48Z", "author": {"login": "kenfinnigan"}, "path": "extensions/smallrye-metrics/deployment/src/main/java/io/quarkus/smallrye/metrics/deployment/SmallRyeMetricsProcessor.java", "diffHunk": "@@ -154,7 +153,7 @@ MetricsCapabilityBuildItem metricsCapabilityBuildItem() {\n     @Record(STATIC_INIT)\n     void createRoute(BuildProducer<RouteBuildItem> routes,\n             SmallRyeMetricsRecorder recorder,\n-            HttpRootPathBuildItem httpRoot,\n+            FrameworkRootPathBuildItem frameworkRoot,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2OTAwMw=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjI0OTI1OnYy", "diffSide": "RIGHT", "path": "extensions/smallrye-openapi/deployment/src/test/java/io/quarkus/smallrye/openapi/test/spring/SwaggerAndOpenAPIWithCommonPrefixTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjozNzozMFrOH_C4oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNDoyMzo0OFrOH_TEbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2OTYwMA==", "bodyText": "Why does swagger-ui stay on the main router?\nI understand it's an asset, but that looks not totally right.", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r535869600", "createdAt": "2020-12-04T06:37:30Z", "author": {"login": "cescoffier"}, "path": "extensions/smallrye-openapi/deployment/src/test/java/io/quarkus/smallrye/openapi/test/spring/SwaggerAndOpenAPIWithCommonPrefixTest.java", "diffHunk": "@@ -25,7 +25,7 @@\n     @Test\n     public void shouldWorkEvenWithCommonPrefix() {\n         RestAssured.when().get(\"/swagger-ui/index.html\").then().statusCode(200).body(containsString(\"/swagger\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MjQ2NA==", "bodyText": "My reasoning, for now, is it's a Dev/Test extension only.\nHappy to revise either now or in future if that's the preferred approach", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r536082464", "createdAt": "2020-12-04T12:59:56Z", "author": {"login": "kenfinnigan"}, "path": "extensions/smallrye-openapi/deployment/src/test/java/io/quarkus/smallrye/openapi/test/spring/SwaggerAndOpenAPIWithCommonPrefixTest.java", "diffHunk": "@@ -25,7 +25,7 @@\n     @Test\n     public void shouldWorkEvenWithCommonPrefix() {\n         RestAssured.when().get(\"/swagger-ui/index.html\").then().statusCode(200).body(containsString(\"/swagger\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2OTYwMA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEwMTQxMg==", "bodyText": "it's dev mode only because it was exposed on the public internet. But if we fix that \"small\" issue, it might be very useful even in prod.", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r536101412", "createdAt": "2020-12-04T13:32:12Z", "author": {"login": "cescoffier"}, "path": "extensions/smallrye-openapi/deployment/src/test/java/io/quarkus/smallrye/openapi/test/spring/SwaggerAndOpenAPIWithCommonPrefixTest.java", "diffHunk": "@@ -25,7 +25,7 @@\n     @Test\n     public void shouldWorkEvenWithCommonPrefix() {\n         RestAssured.when().get(\"/swagger-ui/index.html\").then().statusCode(200).body(containsString(\"/swagger\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2OTYwMA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEzNDc2NA==", "bodyText": "Fair enough, I can move to \"non app\" as well", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r536134764", "createdAt": "2020-12-04T14:23:48Z", "author": {"login": "kenfinnigan"}, "path": "extensions/smallrye-openapi/deployment/src/test/java/io/quarkus/smallrye/openapi/test/spring/SwaggerAndOpenAPIWithCommonPrefixTest.java", "diffHunk": "@@ -25,7 +25,7 @@\n     @Test\n     public void shouldWorkEvenWithCommonPrefix() {\n         RestAssured.when().get(\"/swagger-ui/index.html\").then().statusCode(200).body(containsString(\"/swagger\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg2OTYwMA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjI1MzM3OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/FrameworkRootPathBuildItem.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjozOTowNlrOH_C7Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzozMjoyM1rOH_RCqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MDIxMA==", "bodyText": "That only configure the \"/q\".\nDon't you want to allow having a separate HTTP server (maybe it's done somewhere else)", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r535870210", "createdAt": "2020-12-04T06:39:06Z", "author": {"login": "cescoffier"}, "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/FrameworkRootPathBuildItem.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package io.quarkus.vertx.http.deployment;\n+\n+import io.quarkus.builder.item.SimpleBuildItem;\n+\n+public final class FrameworkRootPathBuildItem extends SimpleBuildItem {\n+    private final String frameworkRootPath;\n+    private final boolean separateRoot;\n+\n+    public FrameworkRootPathBuildItem(String frameworkRootPath) {\n+        this.frameworkRootPath = frameworkRootPath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MjY5NA==", "bodyText": "I've created #13602 to handle the port and binding options to keep this PR simple and get it in", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r536082694", "createdAt": "2020-12-04T13:00:20Z", "author": {"login": "kenfinnigan"}, "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/FrameworkRootPathBuildItem.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package io.quarkus.vertx.http.deployment;\n+\n+import io.quarkus.builder.item.SimpleBuildItem;\n+\n+public final class FrameworkRootPathBuildItem extends SimpleBuildItem {\n+    private final String frameworkRootPath;\n+    private final boolean separateRoot;\n+\n+    public FrameworkRootPathBuildItem(String frameworkRootPath) {\n+        this.frameworkRootPath = frameworkRootPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MDIxMA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEwMTU0NQ==", "bodyText": "ah ok!", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r536101545", "createdAt": "2020-12-04T13:32:23Z", "author": {"login": "cescoffier"}, "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/FrameworkRootPathBuildItem.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package io.quarkus.vertx.http.deployment;\n+\n+import io.quarkus.builder.item.SimpleBuildItem;\n+\n+public final class FrameworkRootPathBuildItem extends SimpleBuildItem {\n+    private final String frameworkRootPath;\n+    private final boolean separateRoot;\n+\n+    public FrameworkRootPathBuildItem(String frameworkRootPath) {\n+        this.frameworkRootPath = frameworkRootPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MDIxMA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjI1OTM1OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/HttpBuildTimeConfig.java", "isResolved": false, "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjo0MToyNVrOH_C-SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODo0NjowOFrOIBNyBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTA0OA==", "bodyText": "So, we have /quarkus for the console and /q for framework.\nI may be wrong but I don't believe the console should be \"application\".\nAlso, all guides, workshops and quickstarts would need an update once this is merged", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r535871048", "createdAt": "2020-12-04T06:41:25Z", "author": {"login": "cescoffier"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/HttpBuildTimeConfig.java", "diffHunk": "@@ -35,4 +35,13 @@\n      */\n     @ConfigItem(defaultValue = \"/quarkus\")\n     public String consolePath;\n+\n+    /**\n+     * The HTTP root path for framework endpoints. Various endpoints such as metrics, health,\n+     * and open api are deployed under this path.\n+     * Setting the value to \"/\" disables the separate framework root,\n+     * resulting in all framework endpoints being served from \"/\" along with the application.\n+     */\n+    @ConfigItem(defaultValue = \"/q\")\n+    public String frameworkRootPath;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEzNTU0Mw==", "bodyText": "Is that the new dev console that was created as part of Reactive Resteasy? Did that get merged already, might have missed it.\nIf it's in, would /q/console be ok?\nShould the guides be updated as part of this PR?", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r536135543", "createdAt": "2020-12-04T14:24:53Z", "author": {"login": "kenfinnigan"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/HttpBuildTimeConfig.java", "diffHunk": "@@ -35,4 +35,13 @@\n      */\n     @ConfigItem(defaultValue = \"/quarkus\")\n     public String consolePath;\n+\n+    /**\n+     * The HTTP root path for framework endpoints. Various endpoints such as metrics, health,\n+     * and open api are deployed under this path.\n+     * Setting the value to \"/\" disables the separate framework root,\n+     * resulting in all framework endpoints being served from \"/\" along with the application.\n+     */\n+    @ConfigItem(defaultValue = \"/q\")\n+    public String frameworkRootPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTA0OA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI1OTY4OQ==", "bodyText": "I let @FroMage @stuartwdouglas and @geoand decide.", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r537259689", "createdAt": "2020-12-07T06:26:40Z", "author": {"login": "cescoffier"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/HttpBuildTimeConfig.java", "diffHunk": "@@ -35,4 +35,13 @@\n      */\n     @ConfigItem(defaultValue = \"/quarkus\")\n     public String consolePath;\n+\n+    /**\n+     * The HTTP root path for framework endpoints. Various endpoints such as metrics, health,\n+     * and open api are deployed under this path.\n+     * Setting the value to \"/\" disables the separate framework root,\n+     * resulting in all framework endpoints being served from \"/\" along with the application.\n+     */\n+    @ConfigItem(defaultValue = \"/q\")\n+    public String frameworkRootPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTA0OA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI2MDY4Mw==", "bodyText": "The console started out as part of RESTEasy Reactive, but is now in a separate (not yet merged) branch. The console currently is under /@dev.", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r537260683", "createdAt": "2020-12-07T06:29:33Z", "author": {"login": "geoand"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/HttpBuildTimeConfig.java", "diffHunk": "@@ -35,4 +35,13 @@\n      */\n     @ConfigItem(defaultValue = \"/quarkus\")\n     public String consolePath;\n+\n+    /**\n+     * The HTTP root path for framework endpoints. Various endpoints such as metrics, health,\n+     * and open api are deployed under this path.\n+     * Setting the value to \"/\" disables the separate framework root,\n+     * resulting in all framework endpoints being served from \"/\" along with the application.\n+     */\n+    @ConfigItem(defaultValue = \"/q\")\n+    public String frameworkRootPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTA0OA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzMyNzA5MQ==", "bodyText": "Who decided on the /q default prefix? Isn't it likely to conflict with user paths?", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r537327091", "createdAt": "2020-12-07T08:48:08Z", "author": {"login": "FroMage"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/HttpBuildTimeConfig.java", "diffHunk": "@@ -35,4 +35,13 @@\n      */\n     @ConfigItem(defaultValue = \"/quarkus\")\n     public String consolePath;\n+\n+    /**\n+     * The HTTP root path for framework endpoints. Various endpoints such as metrics, health,\n+     * and open api are deployed under this path.\n+     * Setting the value to \"/\" disables the separate framework root,\n+     * resulting in all framework endpoints being served from \"/\" along with the application.\n+     */\n+    @ConfigItem(defaultValue = \"/q\")\n+    public String frameworkRootPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTA0OA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ4ODA0NA==", "bodyText": "It was agreed a few weeks ago in a team meeting, but not set in stone", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r537488044", "createdAt": "2020-12-07T13:00:39Z", "author": {"login": "kenfinnigan"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/HttpBuildTimeConfig.java", "diffHunk": "@@ -35,4 +35,13 @@\n      */\n     @ConfigItem(defaultValue = \"/quarkus\")\n     public String consolePath;\n+\n+    /**\n+     * The HTTP root path for framework endpoints. Various endpoints such as metrics, health,\n+     * and open api are deployed under this path.\n+     * Setting the value to \"/\" disables the separate framework root,\n+     * resulting in all framework endpoints being served from \"/\" along with the application.\n+     */\n+    @ConfigItem(defaultValue = \"/q\")\n+    public String frameworkRootPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTA0OA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3MjM2Mg==", "bodyText": "I guess I would have made it /@q to make sure it didn't conflict. But if everyone prefers /q let's go with that.\nAs for the dev console it should move to /q/dev if we do that.", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r537572362", "createdAt": "2020-12-07T14:57:52Z", "author": {"login": "FroMage"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/HttpBuildTimeConfig.java", "diffHunk": "@@ -35,4 +35,13 @@\n      */\n     @ConfigItem(defaultValue = \"/quarkus\")\n     public String consolePath;\n+\n+    /**\n+     * The HTTP root path for framework endpoints. Various endpoints such as metrics, health,\n+     * and open api are deployed under this path.\n+     * Setting the value to \"/\" disables the separate framework root,\n+     * resulting in all framework endpoints being served from \"/\" along with the application.\n+     */\n+    @ConfigItem(defaultValue = \"/q\")\n+    public String frameworkRootPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTA0OA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU3NjIyNw==", "bodyText": "I think @ is reserved for a special meaning within a scheme (eg.\nhttps://foo:bar@example.com)", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r537576227", "createdAt": "2020-12-07T15:02:50Z", "author": {"login": "gastaldi"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/HttpBuildTimeConfig.java", "diffHunk": "@@ -35,4 +35,13 @@\n      */\n     @ConfigItem(defaultValue = \"/quarkus\")\n     public String consolePath;\n+\n+    /**\n+     * The HTTP root path for framework endpoints. Various endpoints such as metrics, health,\n+     * and open api are deployed under this path.\n+     * Setting the value to \"/\" disables the separate framework root,\n+     * resulting in all framework endpoints being served from \"/\" along with the application.\n+     */\n+    @ConfigItem(defaultValue = \"/q\")\n+    public String frameworkRootPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTA0OA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzU4MzAzMQ==", "bodyText": "But looking at the URL RFC I see that @ is accepted as part of the URL path, so I dunno \ud83d\ude03", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r537583031", "createdAt": "2020-12-07T15:11:34Z", "author": {"login": "gastaldi"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/HttpBuildTimeConfig.java", "diffHunk": "@@ -35,4 +35,13 @@\n      */\n     @ConfigItem(defaultValue = \"/quarkus\")\n     public String consolePath;\n+\n+    /**\n+     * The HTTP root path for framework endpoints. Various endpoints such as metrics, health,\n+     * and open api are deployed under this path.\n+     * Setting the value to \"/\" disables the separate framework root,\n+     * resulting in all framework endpoints being served from \"/\" along with the application.\n+     */\n+    @ConfigItem(defaultValue = \"/q\")\n+    public String frameworkRootPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTA0OA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0NTI4NA==", "bodyText": "It's only reserved as part of the authority section (host name).", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r538145284", "createdAt": "2020-12-08T08:46:08Z", "author": {"login": "FroMage"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/HttpBuildTimeConfig.java", "diffHunk": "@@ -35,4 +35,13 @@\n      */\n     @ConfigItem(defaultValue = \"/quarkus\")\n     public String consolePath;\n+\n+    /**\n+     * The HTTP root path for framework endpoints. Various endpoints such as metrics, health,\n+     * and open api are deployed under this path.\n+     * Setting the value to \"/\" disables the separate framework root,\n+     * resulting in all framework endpoints being served from \"/\" along with the application.\n+     */\n+    @ConfigItem(defaultValue = \"/q\")\n+    public String frameworkRootPath;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTA0OA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjI2NDY1OnYy", "diffSide": "RIGHT", "path": "tcks/microprofile-health/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNjo0MzoxOFrOH_DBEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzowMToxOVrOH_P66g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTc2MA==", "bodyText": "Should we consider updating the TCKs to allows setting the prefix?", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r535871760", "createdAt": "2020-12-04T06:43:18Z", "author": {"login": "cescoffier"}, "path": "tcks/microprofile-health/pom.xml", "diffHunk": "@@ -18,6 +18,10 @@\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-surefire-plugin</artifactId>\n                 <configuration>\n+                    <systemPropertyVariables>\n+                        <!-- Change metrics endpoint to be /metrics -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA4MzE3OA==", "bodyText": "Some TCKs explicitly indicate the name of the URL path, sometimes in relation to root context, so I don't think this would be possible", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r536083178", "createdAt": "2020-12-04T13:01:19Z", "author": {"login": "kenfinnigan"}, "path": "tcks/microprofile-health/pom.xml", "diffHunk": "@@ -18,6 +18,10 @@\n                 <groupId>org.apache.maven.plugins</groupId>\n                 <artifactId>maven-surefire-plugin</artifactId>\n                 <configuration>\n+                    <systemPropertyVariables>\n+                        <!-- Change metrics endpoint to be /metrics -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg3MTc2MA=="}, "originalCommit": {"oid": "fe24084c5ace32ad009faa20f610a569fdfa2519"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzY2MjQ5OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/VertxHttpProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODoyNzo1MlrOICjNmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODozNTowMFrOICjgzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU0NDk4Ng==", "bodyText": "Should this be disable-able?", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r539544986", "createdAt": "2020-12-09T18:27:52Z", "author": {"login": "ebullient"}, "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/VertxHttpProcessor.java", "diffHunk": "@@ -117,11 +122,28 @@ public KubernetesPortBuildItem kubernetes() {\n     VertxWebRouterBuildItem initializeRouter(VertxHttpRecorder recorder,\n             CoreVertxBuildItem vertx,\n             List<RouteBuildItem> routes,\n+            NonApplicationRootPathBuildItem nonApplicationRootPath,\n+            BuildProducer<VertxNonApplicationRouterBuildItem> frameworkRouterBuildProducer,\n             ShutdownContextBuildItem shutdown) {\n \n         RuntimeValue<Router> router = recorder.initializeRouter(vertx.getVertx());\n+        RuntimeValue<Router> frameworkRouter = recorder.initializeRouter(vertx.getVertx());\n+        boolean frameworkRouterFound = false;\n+\n         for (RouteBuildItem route : routes) {\n-            recorder.addRoute(router, route.getRouteFunction(), route.getHandler(), route.getType());\n+            if (nonApplicationRootPath.isSeparateRoot() && route.isFrameworkRoute()) {\n+                frameworkRouterFound = true;\n+                recorder.addRoute(frameworkRouter, route.getRouteFunction(), route.getHandler(), route.getType());\n+            } else {\n+                recorder.addRoute(router, route.getRouteFunction(), route.getHandler(), route.getType());\n+            }\n+        }\n+\n+        if (frameworkRouterFound && nonApplicationRootPath.isSeparateRoot()) {\n+            // Handle redirects from old paths to new non application endpoint root\n+            recorder.addNonApplicationPathRedirect(router, frameworkRouter, nonApplicationRootPath.getFrameworkRootPath());\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d55418d49e5eeec611a31ef82750ccdd61eb0e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU0OTkwMg==", "bodyText": "I think httpBuildTimeConfig.redirectToNonApplicationRootPath came in while I was reviewing .. ;)", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r539549902", "createdAt": "2020-12-09T18:35:00Z", "author": {"login": "ebullient"}, "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/VertxHttpProcessor.java", "diffHunk": "@@ -117,11 +122,28 @@ public KubernetesPortBuildItem kubernetes() {\n     VertxWebRouterBuildItem initializeRouter(VertxHttpRecorder recorder,\n             CoreVertxBuildItem vertx,\n             List<RouteBuildItem> routes,\n+            NonApplicationRootPathBuildItem nonApplicationRootPath,\n+            BuildProducer<VertxNonApplicationRouterBuildItem> frameworkRouterBuildProducer,\n             ShutdownContextBuildItem shutdown) {\n \n         RuntimeValue<Router> router = recorder.initializeRouter(vertx.getVertx());\n+        RuntimeValue<Router> frameworkRouter = recorder.initializeRouter(vertx.getVertx());\n+        boolean frameworkRouterFound = false;\n+\n         for (RouteBuildItem route : routes) {\n-            recorder.addRoute(router, route.getRouteFunction(), route.getHandler(), route.getType());\n+            if (nonApplicationRootPath.isSeparateRoot() && route.isFrameworkRoute()) {\n+                frameworkRouterFound = true;\n+                recorder.addRoute(frameworkRouter, route.getRouteFunction(), route.getHandler(), route.getType());\n+            } else {\n+                recorder.addRoute(router, route.getRouteFunction(), route.getHandler(), route.getType());\n+            }\n+        }\n+\n+        if (frameworkRouterFound && nonApplicationRootPath.isSeparateRoot()) {\n+            // Handle redirects from old paths to new non application endpoint root\n+            recorder.addNonApplicationPathRedirect(router, frameworkRouter, nonApplicationRootPath.getFrameworkRootPath());\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU0NDk4Ng=="}, "originalCommit": {"oid": "44d55418d49e5eeec611a31ef82750ccdd61eb0e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NzY4MzE3OnYy", "diffSide": "RIGHT", "path": "integration-tests/main/src/test/java/io/quarkus/it/main/OpenApiTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODozMjoyMVrOICjZnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxODozMjoyMVrOICjZnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTU0ODA2MA==", "bodyText": "This is one of the only places w/o the leading '/' ...\nwhile it may work, the inconsistency is noticable", "url": "https://github.com/quarkusio/quarkus/pull/13601#discussion_r539548060", "createdAt": "2020-12-09T18:32:21Z", "author": {"login": "ebullient"}, "path": "integration-tests/main/src/test/java/io/quarkus/it/main/OpenApiTestCase.java", "diffHunk": "@@ -22,7 +22,7 @@\n \n     private static final String DEFAULT_MEDIA_TYPE = \"application/json\";\n \n-    @TestHTTPResource(\"openapi\")\n+    @TestHTTPResource(\"q/openapi\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d55418d49e5eeec611a31ef82750ccdd61eb0e"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3897, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}