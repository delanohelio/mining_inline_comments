{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTY2NjYw", "number": 10626, "title": "Remove/reduce usage of MetricBuildItem", "bodyText": "Remove/reduce usage of MetricBuildItem to allow support for different metrics systems.\nThis will resolve #8272\n@Sanne -- this is the next step of our conversation. This is similar / comparable to what the micrometer HibernateMeterBinder does, and is a basic re-frame of what the MetricBuildItem did, but is more direct.\n@kenfinnigan / @jmartisk : FYI & review, too\nFor Hibernate-ORM metrics produced look like this w/ the changes in this PR:\n# HELP vendor_hibernate_orm_collections_fetched_total Global number of collections fetched\n# TYPE vendor_hibernate_orm_collections_fetched_total counter\nvendor_hibernate_orm_collections_fetched_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_collections_loaded_total Global number of collections loaded\n# TYPE vendor_hibernate_orm_collections_loaded_total counter\nvendor_hibernate_orm_collections_loaded_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_collections_recreated_total Global number of collections recreated\n# TYPE vendor_hibernate_orm_collections_recreated_total counter\nvendor_hibernate_orm_collections_recreated_total{entityManagerFactory=\"default\"} 5.0\n# HELP vendor_hibernate_orm_collections_removed_total Global number of collections removed\n# TYPE vendor_hibernate_orm_collections_removed_total counter\nvendor_hibernate_orm_collections_removed_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_collections_updated_total Global number of collections updated\n# TYPE vendor_hibernate_orm_collections_updated_total counter\nvendor_hibernate_orm_collections_updated_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_connections_obtained_total Get the global number of connections asked by the sessions (the actual number of connections used may be much smaller depending whether you use a connection pool or not)\n# TYPE vendor_hibernate_orm_connections_obtained_total counter\nvendor_hibernate_orm_connections_obtained_total{entityManagerFactory=\"default\"} 54.0\n# HELP vendor_hibernate_orm_entities_deleted_total Global number of entity deletes\n# TYPE vendor_hibernate_orm_entities_deleted_total counter\nvendor_hibernate_orm_entities_deleted_total{entityManagerFactory=\"default\"} 1.0\n# HELP vendor_hibernate_orm_entities_fetched_total Global number of entity fetches\n# TYPE vendor_hibernate_orm_entities_fetched_total counter\nvendor_hibernate_orm_entities_fetched_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_entities_inserted_total Global number of entity inserts\n# TYPE vendor_hibernate_orm_entities_inserted_total counter\nvendor_hibernate_orm_entities_inserted_total{entityManagerFactory=\"default\"} 15.0\n# HELP vendor_hibernate_orm_entities_loaded_total Global number of entity loads\n# TYPE vendor_hibernate_orm_entities_loaded_total counter\nvendor_hibernate_orm_entities_loaded_total{entityManagerFactory=\"default\"} 3.0\n# HELP vendor_hibernate_orm_entities_updated_total Global number of entity updates\n# TYPE vendor_hibernate_orm_entities_updated_total counter\nvendor_hibernate_orm_entities_updated_total{entityManagerFactory=\"default\"} 2.0\n# HELP vendor_hibernate_orm_flushes_total Global number of flush operations executed (either manual or automatic).\n# TYPE vendor_hibernate_orm_flushes_total counter\nvendor_hibernate_orm_flushes_total{entityManagerFactory=\"default\"} 26.0\n# HELP vendor_hibernate_orm_natural_id_cache_hits_total Global number of cached natural id lookups successfully retrieved from cache\n# TYPE vendor_hibernate_orm_natural_id_cache_hits_total counter\nvendor_hibernate_orm_natural_id_cache_hits_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_natural_id_cache_misses_total Global number of cached natural id lookups *not* found in cache\n# TYPE vendor_hibernate_orm_natural_id_cache_misses_total counter\nvendor_hibernate_orm_natural_id_cache_misses_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_natural_id_cache_puts_total Global number of cacheable natural id lookups put in cache\n# TYPE vendor_hibernate_orm_natural_id_cache_puts_total counter\nvendor_hibernate_orm_natural_id_cache_puts_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_natural_id_queries_executions_total Global number of natural id queries executed against the database\n# TYPE vendor_hibernate_orm_natural_id_queries_executions_total counter\nvendor_hibernate_orm_natural_id_queries_executions_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_optimistic_lock_failures_total The number of Hibernate StaleObjectStateExceptions or JPA OptimisticLockExceptions that occurred.\n# TYPE vendor_hibernate_orm_optimistic_lock_failures_total counter\nvendor_hibernate_orm_optimistic_lock_failures_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_queries_executed_total Global number of executed queries\n# TYPE vendor_hibernate_orm_queries_executed_total counter\nvendor_hibernate_orm_queries_executed_total{entityManagerFactory=\"default\"} 21.0\n# HELP vendor_hibernate_orm_query_cache_hits_total Global number of cached queries successfully retrieved from cache\n# TYPE vendor_hibernate_orm_query_cache_hits_total counter\nvendor_hibernate_orm_query_cache_hits_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_query_cache_misses_total Global number of cached queries *not* found in cache\n# TYPE vendor_hibernate_orm_query_cache_misses_total counter\nvendor_hibernate_orm_query_cache_misses_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_query_cache_puts_total Global number of cacheable queries put in cache\n# TYPE vendor_hibernate_orm_query_cache_puts_total counter\nvendor_hibernate_orm_query_cache_puts_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_second_level_cache_hits_total Global number of cacheable entities/collections successfully retrieved from the cache\n# TYPE vendor_hibernate_orm_second_level_cache_hits_total counter\nvendor_hibernate_orm_second_level_cache_hits_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_second_level_cache_misses_total Global number of cacheable entities/collections not found in the cache and loaded from the database.\n# TYPE vendor_hibernate_orm_second_level_cache_misses_total counter\nvendor_hibernate_orm_second_level_cache_misses_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_second_level_cache_puts_total Global number of cacheable entities/collections put in the cache\n# TYPE vendor_hibernate_orm_second_level_cache_puts_total counter\nvendor_hibernate_orm_second_level_cache_puts_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_sessions_closed_total Global number of sessions closed\n# TYPE vendor_hibernate_orm_sessions_closed_total counter\nvendor_hibernate_orm_sessions_closed_total{entityManagerFactory=\"default\"} 16.0\n# HELP vendor_hibernate_orm_sessions_open_total Global number of sessions opened\n# TYPE vendor_hibernate_orm_sessions_open_total counter\nvendor_hibernate_orm_sessions_open_total{entityManagerFactory=\"default\"} 16.0\n# HELP vendor_hibernate_orm_statements_closed_total The number of prepared statements that were released\n# TYPE vendor_hibernate_orm_statements_closed_total counter\nvendor_hibernate_orm_statements_closed_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_statements_prepared_total The number of prepared statements that were acquired\n# TYPE vendor_hibernate_orm_statements_prepared_total counter\nvendor_hibernate_orm_statements_prepared_total{entityManagerFactory=\"default\"} 62.0\n# HELP vendor_hibernate_orm_timestamps_cache_hits_total Global number of timestamps successfully retrieved from cache\n# TYPE vendor_hibernate_orm_timestamps_cache_hits_total counter\nvendor_hibernate_orm_timestamps_cache_hits_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_timestamps_cache_misses_total Global number of timestamp requests that were not found in the cache\n# TYPE vendor_hibernate_orm_timestamps_cache_misses_total counter\nvendor_hibernate_orm_timestamps_cache_misses_total{entityManagerFactory=\"default\"} 0.0\n# HELP vendor_hibernate_orm_timestamps_cache_puts_total Global number of timestamps put in cache\n# TYPE vendor_hibernate_orm_timestamps_cache_puts_total counter\nvendor_hibernate_orm_timestamps_cache_puts_total{entityManagerFactory=\"default\"} 33.0\n# HELP vendor_hibernate_orm_transactions_total The number of transactions we know to have completed\n# TYPE vendor_hibernate_orm_transactions_total counter\nvendor_hibernate_orm_transactions_total{entityManagerFactory=\"default\"} 15.0\n# HELP vendor_hibernate_orm_transactions_successful_total The number of transactions we know to have been successful\n# TYPE vendor_hibernate_orm_transactions_successful_total counter\nvendor_hibernate_orm_transactions_successful_total{entityManagerFactory=\"default\"} 15.0", "createdAt": "2020-07-10T01:04:21Z", "url": "https://github.com/quarkusio/quarkus/pull/10626", "merged": true, "mergeCommit": {"oid": "3edd874866e771f20527f3eb36138f4a701c1662"}, "closed": true, "closedAt": "2020-07-29T09:24:22Z", "author": {"login": "ebullient"}, "timelineItems": {"totalCount": 63, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczZQzaABqjM1MzIwMDI0NDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5k0M9AFqTQ1NzIyMTI2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec4b67791d745506b68dde2391f4c23e60365fb0", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/ec4b67791d745506b68dde2391f4c23e60365fb0", "committedDate": "2020-07-10T00:58:37Z", "message": "Support all persistence units; remove MetricBuildItems"}, "afterCommit": {"oid": "0209901a10cb064fe1fe3a464cba9202cf65737c", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/0209901a10cb064fe1fe3a464cba9202cf65737c", "committedDate": "2020-07-10T01:22:04Z", "message": "Support all persistence units; remove MetricBuildItems"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MTIwOTU5", "url": "https://github.com/quarkusio/quarkus/pull/10626#pullrequestreview-446120959", "createdAt": "2020-07-10T04:55:50Z", "commit": {"oid": "0209901a10cb064fe1fe3a464cba9202cf65737c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDo1NTo1MFrOGvp1Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDo1NTo1MFrOGvp1Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYyMTY1MA==", "bodyText": "persistence-unit would sound more suitable to me for the tag key", "url": "https://github.com/quarkusio/quarkus/pull/10626#discussion_r452621650", "createdAt": "2020-07-10T04:55:50Z", "author": {"login": "jmartisk"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/metrics/HibernateMpMetricsProvider.java", "diffHunk": "@@ -0,0 +1,185 @@\n+package io.quarkus.hibernate.orm.runtime.metrics;\n+\n+import java.util.function.ToLongFunction;\n+\n+import javax.annotation.Priority;\n+import javax.enterprise.event.Observes;\n+import javax.enterprise.inject.Instance;\n+import javax.inject.Inject;\n+\n+import org.eclipse.microprofile.metrics.*;\n+import org.eclipse.microprofile.metrics.annotation.RegistryType;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.stat.Statistics;\n+\n+import io.quarkus.hibernate.orm.runtime.JPAConfig;\n+import io.quarkus.runtime.StartupEvent;\n+\n+/**\n+ * This is only discovered if\n+ */\n+public class HibernateMpMetricsProvider {\n+    private static final String SESSION_FACTORY_TAG_NAME = \"entityManagerFactory\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0209901a10cb064fe1fe3a464cba9202cf65737c"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0209901a10cb064fe1fe3a464cba9202cf65737c", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/0209901a10cb064fe1fe3a464cba9202cf65737c", "committedDate": "2020-07-10T01:22:04Z", "message": "Support all persistence units; remove MetricBuildItems"}, "afterCommit": {"oid": "896a43d7123f96ad941d11040a026d488682797f", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/896a43d7123f96ad941d11040a026d488682797f", "committedDate": "2020-07-10T12:50:25Z", "message": "Support all persistence units; remove MetricBuildItems"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MzgyODU5", "url": "https://github.com/quarkusio/quarkus/pull/10626#pullrequestreview-446382859", "createdAt": "2020-07-10T13:03:37Z", "commit": {"oid": "896a43d7123f96ad941d11040a026d488682797f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMzowMzozN1rOGv2gQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMzowMzozN1rOGv2gQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjgyOTI1MA==", "bodyText": "I think there's some sentence missing?", "url": "https://github.com/quarkusio/quarkus/pull/10626#discussion_r452829250", "createdAt": "2020-07-10T13:03:37Z", "author": {"login": "kenfinnigan"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/metrics/HibernateMpMetricsProvider.java", "diffHunk": "@@ -0,0 +1,185 @@\n+package io.quarkus.hibernate.orm.runtime.metrics;\n+\n+import java.util.function.ToLongFunction;\n+\n+import javax.annotation.Priority;\n+import javax.enterprise.event.Observes;\n+import javax.enterprise.inject.Instance;\n+import javax.inject.Inject;\n+\n+import org.eclipse.microprofile.metrics.*;\n+import org.eclipse.microprofile.metrics.annotation.RegistryType;\n+import org.hibernate.SessionFactory;\n+import org.hibernate.stat.Statistics;\n+\n+import io.quarkus.hibernate.orm.runtime.JPAConfig;\n+import io.quarkus.runtime.StartupEvent;\n+\n+/**\n+ * This is only discovered if", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "896a43d7123f96ad941d11040a026d488682797f"}, "originalPosition": 19}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "896a43d7123f96ad941d11040a026d488682797f", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/896a43d7123f96ad941d11040a026d488682797f", "committedDate": "2020-07-10T12:50:25Z", "message": "Support all persistence units; remove MetricBuildItems"}, "afterCommit": {"oid": "ef9065df5dfa05b1411740ea9d864487d1e4c289", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/ef9065df5dfa05b1411740ea9d864487d1e4c289", "committedDate": "2020-07-13T17:05:50Z", "message": "Support all persistence units; remove MetricBuildItems"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1494266fa1bde09f41d83bd738292837eb2c886f", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/1494266fa1bde09f41d83bd738292837eb2c886f", "committedDate": "2020-07-15T16:56:05Z", "message": "Register metrics w/ runtime recorder"}, "afterCommit": {"oid": "135723086419b42221bf5afb7a7c7b4ea44b2e94", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/135723086419b42221bf5afb7a7c7b4ea44b2e94", "committedDate": "2020-07-15T16:59:02Z", "message": "Register metrics w/ runtime recorder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "135723086419b42221bf5afb7a7c7b4ea44b2e94", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/135723086419b42221bf5afb7a7c7b4ea44b2e94", "committedDate": "2020-07-15T16:59:02Z", "message": "Register metrics w/ runtime recorder"}, "afterCommit": {"oid": "349ba936813ce56828c20e15b964e7e50e42dc47", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/349ba936813ce56828c20e15b964e7e50e42dc47", "committedDate": "2020-07-15T18:08:47Z", "message": "Register metrics w/ runtime recorder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "349ba936813ce56828c20e15b964e7e50e42dc47", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/349ba936813ce56828c20e15b964e7e50e42dc47", "committedDate": "2020-07-15T18:08:47Z", "message": "Register metrics w/ runtime recorder"}, "afterCommit": {"oid": "817fd23ebc14915561ca0f0705c12764ee12ff83", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/817fd23ebc14915561ca0f0705c12764ee12ff83", "committedDate": "2020-07-16T13:25:41Z", "message": "Remove MetricBuildItem from hibernate-orm"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "817fd23ebc14915561ca0f0705c12764ee12ff83", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/817fd23ebc14915561ca0f0705c12764ee12ff83", "committedDate": "2020-07-16T13:25:41Z", "message": "Remove MetricBuildItem from hibernate-orm"}, "afterCommit": {"oid": "581e53fa9dba29d8678a00c3db60c0193a3ca852", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/581e53fa9dba29d8678a00c3db60c0193a3ca852", "committedDate": "2020-07-16T20:35:04Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "581e53fa9dba29d8678a00c3db60c0193a3ca852", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/581e53fa9dba29d8678a00c3db60c0193a3ca852", "committedDate": "2020-07-16T20:35:04Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "021161695e44c2863214356a144998bf14666f61", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/021161695e44c2863214356a144998bf14666f61", "committedDate": "2020-07-16T23:23:29Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "021161695e44c2863214356a144998bf14666f61", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/021161695e44c2863214356a144998bf14666f61", "committedDate": "2020-07-16T23:23:29Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "e495e901fe00e677b66b39605bdd3c137ded21ba", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/e495e901fe00e677b66b39605bdd3c137ded21ba", "committedDate": "2020-07-17T15:23:19Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e495e901fe00e677b66b39605bdd3c137ded21ba", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/e495e901fe00e677b66b39605bdd3c137ded21ba", "committedDate": "2020-07-17T15:23:19Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "1708e4a7207f36dd2122ddcf5738f420af41a6b3", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/1708e4a7207f36dd2122ddcf5738f420af41a6b3", "committedDate": "2020-07-17T16:53:56Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1708e4a7207f36dd2122ddcf5738f420af41a6b3", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/1708e4a7207f36dd2122ddcf5738f420af41a6b3", "committedDate": "2020-07-17T16:53:56Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "daffce8cce9729b6d446df401172fd9223ae680d", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/daffce8cce9729b6d446df401172fd9223ae680d", "committedDate": "2020-07-17T16:57:46Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "daffce8cce9729b6d446df401172fd9223ae680d", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/daffce8cce9729b6d446df401172fd9223ae680d", "committedDate": "2020-07-17T16:57:46Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "1c8c1d24c35a41f2ec4ddffcfb865e6ad89cf020", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/1c8c1d24c35a41f2ec4ddffcfb865e6ad89cf020", "committedDate": "2020-07-17T17:04:21Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c8c1d24c35a41f2ec4ddffcfb865e6ad89cf020", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/1c8c1d24c35a41f2ec4ddffcfb865e6ad89cf020", "committedDate": "2020-07-17T17:04:21Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "81bfcf1727b6cff377c22c14c931c6d4907d1539", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/81bfcf1727b6cff377c22c14c931c6d4907d1539", "committedDate": "2020-07-17T17:08:30Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81bfcf1727b6cff377c22c14c931c6d4907d1539", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/81bfcf1727b6cff377c22c14c931c6d4907d1539", "committedDate": "2020-07-17T17:08:30Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "286ec65e370cf459ac1779d1c191c5418d8c00f7", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/286ec65e370cf459ac1779d1c191c5418d8c00f7", "committedDate": "2020-07-17T17:49:19Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "286ec65e370cf459ac1779d1c191c5418d8c00f7", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/286ec65e370cf459ac1779d1c191c5418d8c00f7", "committedDate": "2020-07-17T17:49:19Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "961634874715f99d148cb8c44c0227af19182f05", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/961634874715f99d148cb8c44c0227af19182f05", "committedDate": "2020-07-17T17:50:15Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "961634874715f99d148cb8c44c0227af19182f05", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/961634874715f99d148cb8c44c0227af19182f05", "committedDate": "2020-07-17T17:50:15Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "ca19ae206072f546a93a88529595040b206b4da9", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/ca19ae206072f546a93a88529595040b206b4da9", "committedDate": "2020-07-17T17:58:15Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ca19ae206072f546a93a88529595040b206b4da9", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/ca19ae206072f546a93a88529595040b206b4da9", "committedDate": "2020-07-17T17:58:15Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "0e4734f887aeda7553e26590eb36e30edd9b3a59", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/0e4734f887aeda7553e26590eb36e30edd9b3a59", "committedDate": "2020-07-17T17:58:35Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0e4734f887aeda7553e26590eb36e30edd9b3a59", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/0e4734f887aeda7553e26590eb36e30edd9b3a59", "committedDate": "2020-07-17T17:58:35Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "1b01cebe4d4723f0f5eb957f7742f8269a0af979", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/1b01cebe4d4723f0f5eb957f7742f8269a0af979", "committedDate": "2020-07-17T18:01:18Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b01cebe4d4723f0f5eb957f7742f8269a0af979", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/1b01cebe4d4723f0f5eb957f7742f8269a0af979", "committedDate": "2020-07-17T18:01:18Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "d187ace389f50b9d296cc9b01a1476dfbf21ceb4", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/d187ace389f50b9d296cc9b01a1476dfbf21ceb4", "committedDate": "2020-07-17T18:02:42Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d187ace389f50b9d296cc9b01a1476dfbf21ceb4", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/d187ace389f50b9d296cc9b01a1476dfbf21ceb4", "committedDate": "2020-07-17T18:02:42Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "a096c5c6b6045c11a8bafa9f0fdbe7a18b8e2b7b", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/a096c5c6b6045c11a8bafa9f0fdbe7a18b8e2b7b", "committedDate": "2020-07-17T19:13:40Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a096c5c6b6045c11a8bafa9f0fdbe7a18b8e2b7b", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/a096c5c6b6045c11a8bafa9f0fdbe7a18b8e2b7b", "committedDate": "2020-07-17T19:13:40Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "b7fc6ee2e841dbbea6b996d68f3657da27e94be2", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/b7fc6ee2e841dbbea6b996d68f3657da27e94be2", "committedDate": "2020-07-17T19:34:38Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7fc6ee2e841dbbea6b996d68f3657da27e94be2", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/b7fc6ee2e841dbbea6b996d68f3657da27e94be2", "committedDate": "2020-07-17T19:34:38Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "8dfedf12a3c0c9bc4805cd27949b16cbc9cc8e25", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/8dfedf12a3c0c9bc4805cd27949b16cbc9cc8e25", "committedDate": "2020-07-17T20:10:34Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8dfedf12a3c0c9bc4805cd27949b16cbc9cc8e25", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/8dfedf12a3c0c9bc4805cd27949b16cbc9cc8e25", "committedDate": "2020-07-17T20:10:34Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "3773d79c12658e50e2d356b310433aea9764658f", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/3773d79c12658e50e2d356b310433aea9764658f", "committedDate": "2020-07-17T20:47:50Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3773d79c12658e50e2d356b310433aea9764658f", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/3773d79c12658e50e2d356b310433aea9764658f", "committedDate": "2020-07-17T20:47:50Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "17a38c69bf5fccf78b7e1e8840b10df0b5a7e297", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/17a38c69bf5fccf78b7e1e8840b10df0b5a7e297", "committedDate": "2020-07-20T12:27:28Z", "message": "Remove MetricBuildItem from agroal"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "17a38c69bf5fccf78b7e1e8840b10df0b5a7e297", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/17a38c69bf5fccf78b7e1e8840b10df0b5a7e297", "committedDate": "2020-07-20T12:27:28Z", "message": "Remove MetricBuildItem from agroal"}, "afterCommit": {"oid": "82b771dd2226b9bee20621cfc6b658ffff661570", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/82b771dd2226b9bee20621cfc6b658ffff661570", "committedDate": "2020-07-21T03:50:45Z", "message": "Docs: update extension guide"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82b771dd2226b9bee20621cfc6b658ffff661570", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/82b771dd2226b9bee20621cfc6b658ffff661570", "committedDate": "2020-07-21T03:50:45Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "fa5c0d5c6c18de089f8e181e8c5fdf9b21167cc8", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/fa5c0d5c6c18de089f8e181e8c5fdf9b21167cc8", "committedDate": "2020-07-21T03:51:40Z", "message": "Docs: update extension guide"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa5c0d5c6c18de089f8e181e8c5fdf9b21167cc8", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/fa5c0d5c6c18de089f8e181e8c5fdf9b21167cc8", "committedDate": "2020-07-21T03:51:40Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "2606e7d823441c134f93af4d11554a3af699c595", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/2606e7d823441c134f93af4d11554a3af699c595", "committedDate": "2020-07-21T13:17:13Z", "message": "Docs: update extension guide"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2606e7d823441c134f93af4d11554a3af699c595", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/2606e7d823441c134f93af4d11554a3af699c595", "committedDate": "2020-07-21T13:17:13Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "429b1add4161019fc4ef051c1015b7c00654bca8", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/429b1add4161019fc4ef051c1015b7c00654bca8", "committedDate": "2020-07-21T15:00:36Z", "message": "Docs: update extension guide"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "429b1add4161019fc4ef051c1015b7c00654bca8", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/429b1add4161019fc4ef051c1015b7c00654bca8", "committedDate": "2020-07-21T15:00:36Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "1b7eb790196bc14dc68985dc5b5666f9ad10ff50", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/1b7eb790196bc14dc68985dc5b5666f9ad10ff50", "committedDate": "2020-07-21T15:31:22Z", "message": "Docs: update extension guide"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b7eb790196bc14dc68985dc5b5666f9ad10ff50", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/1b7eb790196bc14dc68985dc5b5666f9ad10ff50", "committedDate": "2020-07-21T15:31:22Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "9587033c14746a322d934066312c4e0e55bc4205", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/9587033c14746a322d934066312c4e0e55bc4205", "committedDate": "2020-07-21T17:00:55Z", "message": "Docs: update extension guide"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMDQxNDM2", "url": "https://github.com/quarkusio/quarkus/pull/10626#pullrequestreview-453041436", "createdAt": "2020-07-22T06:55:53Z", "commit": {"oid": "9587033c14746a322d934066312c4e0e55bc4205"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNjo1NTo1M1rOG1VKJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzozNToxOFrOG1WV9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU3NDM3NA==", "bodyText": "incorrect description on this one", "url": "https://github.com/quarkusio/quarkus/pull/10626#discussion_r458574374", "createdAt": "2020-07-22T06:55:53Z", "author": {"login": "jmartisk"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/metrics/MetricsFactory.java", "diffHunk": "@@ -0,0 +1,141 @@\n+package io.quarkus.runtime.metrics;\n+\n+import java.time.Duration;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+import java.util.function.ToDoubleFunction;\n+\n+/**\n+ * Extensions can create or register metrics using this factory\n+ * independent of the enabled metrics provider\n+ */\n+public interface MetricsFactory {\n+\n+    /** A well-known string for MicroProfile metrics provided by the SmallRye Metrics quarkus extension */\n+    final String MP_METRICS = \"smallrye-metrics\";\n+\n+    /** A well-known string for MicroProfile metrics provided by the SmallRye Metrics quarkus extension */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9587033c14746a322d934066312c4e0e55bc4205"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU3ODU0NQ==", "bodyText": "Some metrics created by extensions go to BASE, so this needs to be a changeable", "url": "https://github.com/quarkusio/quarkus/pull/10626#discussion_r458578545", "createdAt": "2020-07-22T07:05:06Z", "author": {"login": "jmartisk"}, "path": "extensions/smallrye-metrics/runtime/src/main/java/io/quarkus/smallrye/metrics/runtime/SmallRyeMetricsFactory.java", "diffHunk": "@@ -0,0 +1,203 @@\n+package io.quarkus.smallrye.metrics.runtime;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+import java.util.function.ToDoubleFunction;\n+\n+import org.eclipse.microprofile.metrics.Counter;\n+import org.eclipse.microprofile.metrics.Gauge;\n+import org.eclipse.microprofile.metrics.MetricRegistry;\n+import org.eclipse.microprofile.metrics.MetricType;\n+import org.eclipse.microprofile.metrics.Tag;\n+import org.eclipse.microprofile.metrics.Timer;\n+\n+import io.quarkus.runtime.metrics.MetricsFactory;\n+import io.smallrye.metrics.MetricRegistries;\n+\n+public class SmallRyeMetricsFactory implements MetricsFactory {\n+    MetricRegistry registry = MetricRegistries.get(MetricRegistry.Type.VENDOR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9587033c14746a322d934066312c4e0e55bc4205"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4NDc4MQ==", "bodyText": "What if an extension needs to create a counter that will be updated via calls to inc() rather than be a supplier or function? I guess we need a counter() function here without parameters that just registers  a plain counter", "url": "https://github.com/quarkusio/quarkus/pull/10626#discussion_r458584781", "createdAt": "2020-07-22T07:18:27Z", "author": {"login": "jmartisk"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/metrics/MetricsFactory.java", "diffHunk": "@@ -0,0 +1,141 @@\n+package io.quarkus.runtime.metrics;\n+\n+import java.time.Duration;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+import java.util.function.ToDoubleFunction;\n+\n+/**\n+ * Extensions can create or register metrics using this factory\n+ * independent of the enabled metrics provider\n+ */\n+public interface MetricsFactory {\n+\n+    /** A well-known string for MicroProfile metrics provided by the SmallRye Metrics quarkus extension */\n+    final String MP_METRICS = \"smallrye-metrics\";\n+\n+    /** A well-known string for MicroProfile metrics provided by the SmallRye Metrics quarkus extension */\n+    final String MICROMETER = \"micrometer\";\n+\n+    /**\n+     * @return true if this factory supports the named metrics system. Arbitrary\n+     *         strings are allowed. Constants are present for a few.\n+     * @see #MICROMETER\n+     * @see #MP_METRICS\n+     */\n+    boolean metricsSystemSupported(String name);\n+\n+    /** Create a fluid builder for registering counters and gauges */\n+    MetricBuilder builder(String name);\n+\n+    interface MetricBuilder {\n+        /**\n+         * @param description Description text of the eventual metric (optional).\n+         * @return The builder with added description.\n+         */\n+        MetricBuilder description(String description);\n+\n+        /**\n+         * @param key The tag key.\n+         * @param value The tag value.\n+         * @return The builder with added tag.\n+         */\n+        MetricBuilder tag(String key, String value);\n+\n+        /**\n+         * Specify the metric unit (optional)\n+         * \n+         * @param unit Base unit of the eventual metric\n+         * @return The builder with added base unit.\n+         */\n+        MetricBuilder unit(String unit);\n+\n+        /**\n+         * Register a counter that retrieves its value from a supplier function\n+         * \n+         * @param countFunction Function supplying a monotonically increasing number value\n+         */\n+        void counter(Supplier<Number> countFunction);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9587033c14746a322d934066312c4e0e55bc4205"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4Nzg5Nw==", "bodyText": "the question is whether we will merge the micrometer extension to the core repo, if not then we shouldn't be mentioning that Quarkus can use that out of the box (not yet)", "url": "https://github.com/quarkusio/quarkus/pull/10626#discussion_r458587897", "createdAt": "2020-07-22T07:24:19Z", "author": {"login": "jmartisk"}, "path": "docs/src/main/asciidoc/writing-extensions.adoc", "diffHunk": "@@ -1486,143 +1486,111 @@ HealthBuildItem addHealthCheck(AgroalBuildTimeConfig agroalBuildTimeConfig) {\n \n === Extension Metrics\n \n-An extension can decide to provide metrics through the `quarkus-smallrye-metrics` extension.\n-A typical use case for this would be that an extension scans the application code for relevant components (like entities, messaging endpoints, etc.)\n-and creates a set of metrics for each of these components. A unified mechanism for metric registration is provided via the `MetricBuildItem` class\n-provided by the `quarkus-smallrye-metrics-spi` module.\n-\n-There are several distinct situations that can occur and each requires slightly different handling:\n-\n-1. The underlying library used by your extension is using the MicroProfile Metrics API directly.\n-2. The underlying library uses its own way for collecting metrics and makes them available at runtime using its own API.\n-3. The underlying library does not provide metrics (or there is no library at all) and you need to insert some code in the extension's codebase that will collect the metrics.\n-\n-What is common for all cases is that the extension should have a build-time config property that enables metrics exposure for the extension,\n-it should be named `quarkus.<extension>.metrics.enabled` and be `false` by default.\n-\n-==== Case 1: The library uses MP Metrics\n-If the library exposes metrics by itself, we don't have to do much. However, there are a few points to consider:\n-\n-- It should be possible to disable all metrics for an extension, which can be a bit problematic if the library registers them directly\n-rather than through the unified registration mechanism in the `quarkus-smallrye-metrics-spi` module. Therefore the library should contain\n-a way to turn all metrics off, for example using a library-specific system property that can be set during build time (by emitting a `SystemPropertyBuildItem`),\n-and will disable metrics if at least one of the properties `quarkus.<extensionName>.metrics.enabled` and `quarkus.smallrye-metrics.extensions.enabled` is `false`.\n-- It is desirable to be able to omit the MP Metrics dependency at runtime, so if possible, the library should be written in a way that\n-it will still work when the MP Metrics dependencies (or at least the implementation, `io.smallrye:smallrye-metrics`) are unavailable. This can be achieved by\n-wrapping all code that does something metric-related into an `if` condition that checks whether metrics integration is enabled. If the library performs injections\n-of the `MetricRegistry`, which is not avoidable by introducing an `if` condition, it will unfortunately not be possible to remove the `microprofile-metrics` dependency,\n-but it is still possible to avoid the need for `smallrye-metrics` (which contains the implementation class of the metric registry) by introducing a custom \"no-op\"\n-implementation of the `MetricRegistry` which can, for example, return `null` from all its methods. This no-op implementation should be added to the application's classes\n-so that it can be injected instead of the regular `io.smallrye.metrics.MetricRegistryImpl`. An example of a no-op implementation can be found at\n-https://github.com/quarkusio/quarkus/blob/master/extensions/smallrye-fault-tolerance/runtime/src/main/java/io/quarkus/smallrye/faulttolerance/runtime/NoopMetricRegistry.java[NoopMetricRegistry]\n+Quarkus can be configured to gather and emit metrics using either MicroProfile Metrics or Micrometer. Extensions may want to contribute their own instrumentation, and usually do so in one of the following ways :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9587033c14746a322d934066312c4e0e55bc4205"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU5Mzc4Mw==", "bodyText": "I find it a bit odd when something called *Builder doesn't have any build() method to be called last, but it seems it would be quite hard to add one here because we build distinct types of objects. Just thinking, would it help if we renamed the counter, gauge, etc. methods to buildCounter, buildGauge?", "url": "https://github.com/quarkusio/quarkus/pull/10626#discussion_r458593783", "createdAt": "2020-07-22T07:35:18Z", "author": {"login": "jmartisk"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/metrics/MetricsFactory.java", "diffHunk": "@@ -0,0 +1,141 @@\n+package io.quarkus.runtime.metrics;\n+\n+import java.time.Duration;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+import java.util.function.ToDoubleFunction;\n+\n+/**\n+ * Extensions can create or register metrics using this factory\n+ * independent of the enabled metrics provider\n+ */\n+public interface MetricsFactory {\n+\n+    /** A well-known string for MicroProfile metrics provided by the SmallRye Metrics quarkus extension */\n+    final String MP_METRICS = \"smallrye-metrics\";\n+\n+    /** A well-known string for MicroProfile metrics provided by the SmallRye Metrics quarkus extension */\n+    final String MICROMETER = \"micrometer\";\n+\n+    /**\n+     * @return true if this factory supports the named metrics system. Arbitrary\n+     *         strings are allowed. Constants are present for a few.\n+     * @see #MICROMETER\n+     * @see #MP_METRICS\n+     */\n+    boolean metricsSystemSupported(String name);\n+\n+    /** Create a fluid builder for registering counters and gauges */\n+    MetricBuilder builder(String name);\n+\n+    interface MetricBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9587033c14746a322d934066312c4e0e55bc4205"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMTA2Nzk4", "url": "https://github.com/quarkusio/quarkus/pull/10626#pullrequestreview-453106798", "createdAt": "2020-07-22T08:32:32Z", "commit": {"oid": "9587033c14746a322d934066312c4e0e55bc4205"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODozMjozMlrOG1YXpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwODozMjozMlrOG1YXpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODYyNjk4Mg==", "bodyText": "\u26d4", "url": "https://github.com/quarkusio/quarkus/pull/10626#discussion_r458626982", "createdAt": "2020-07-22T08:32:32Z", "author": {"login": "jmartisk"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/metrics/MetricsFactory.java", "diffHunk": "@@ -0,0 +1,141 @@\n+package io.quarkus.runtime.metrics;\n+\n+import java.time.Duration;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+import java.util.function.ToDoubleFunction;\n+\n+/**\n+ * Extensions can create or register metrics using this factory\n+ * independent of the enabled metrics provider\n+ */\n+public interface MetricsFactory {\n+\n+    /** A well-known string for MicroProfile metrics provided by the SmallRye Metrics quarkus extension */\n+    final String MP_METRICS = \"smallrye-metrics\";\n+\n+    /** A well-known string for MicroProfile metrics provided by the SmallRye Metrics quarkus extension */\n+    final String MICROMETER = \"micrometer\";\n+\n+    /**\n+     * @return true if this factory supports the named metrics system. Arbitrary\n+     *         strings are allowed. Constants are present for a few.\n+     * @see #MICROMETER\n+     * @see #MP_METRICS\n+     */\n+    boolean metricsSystemSupported(String name);\n+\n+    /** Create a fluid builder for registering counters and gauges */\n+    MetricBuilder builder(String name);\n+\n+    interface MetricBuilder {\n+        /**\n+         * @param description Description text of the eventual metric (optional).\n+         * @return The builder with added description.\n+         */\n+        MetricBuilder description(String description);\n+\n+        /**\n+         * @param key The tag key.\n+         * @param value The tag value.\n+         * @return The builder with added tag.\n+         */\n+        MetricBuilder tag(String key, String value);\n+\n+        /**\n+         * Specify the metric unit (optional)\n+         * \n+         * @param unit Base unit of the eventual metric\n+         * @return The builder with added base unit.\n+         */\n+        MetricBuilder unit(String unit);\n+\n+        /**\n+         * Register a counter that retrieves its value from a supplier function\n+         * \n+         * @param countFunction Function supplying a monotonically increasing number value\n+         */\n+        void counter(Supplier<Number> countFunction);\n+\n+        /**\n+         * Register a counter that retrieves its value by the applying a function\n+         * to an object\n+         * \n+         * @param obj Object instance to observe\n+         * @param countFunction Function returning a monotonically increasing double value\n+         */\n+        <S> void counter(S obj, ToDoubleFunction<S> countFunction);\n+\n+        /**\n+         * Register a gauge that retrieves its value from a supplier function\n+         * \n+         * @param gaugeFunction Function supplying number value\n+         */\n+        void gauge(Supplier<Number> gaugeFunction);\n+\n+        /**\n+         * Register a gauge that retrieves its value by applying a function\n+         * to an object\n+         * \n+         * @param obj Object instance to observe\n+         * @param gaugeFunction Function returning a long value\n+         */\n+        <S> void gauge(S obj, ToDoubleFunction<S> gaugeFunction);\n+\n+        /**\n+         * @return TimeRecorder to measure passage of time using\n+         *         incremental updates.\n+         */\n+        TimeRecorder timeRecorder();\n+\n+        /**\n+         * Wrap a {@link Runnable} so that it is timed when invoked.\n+         *\n+         * @param f The Runnable to time when it is invoked.\n+         * @return The wrapped Runnable.\n+         */\n+        Runnable timed(Runnable f);\n+\n+        /**\n+         * Wrap a {@link Callable} so that it is timed when invoked.\n+         *\n+         * @param f The Callable to time when it is invoked.\n+         * @param <T> The return type of the callable.\n+         * @return The wrapped callable.\n+         */\n+        <T> Callable<T> timed(Callable<T> f);\n+\n+        /**\n+         * Wrap a {@link Supplier} so that it is timed when invoked.\n+         *\n+         * @param f The {@code Supplier} to time when it is invoked.\n+         * @param <T> The return type of the {@code Supplier} result.\n+         * @return The wrapped supplier.\n+         * @since 1.2.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9587033c14746a322d934066312c4e0e55bc4205"}, "originalPosition": 115}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9587033c14746a322d934066312c4e0e55bc4205", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/9587033c14746a322d934066312c4e0e55bc4205", "committedDate": "2020-07-21T17:00:55Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "ccc6e04c765c3f6c5181559e2d46c2b489f2403c", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/ccc6e04c765c3f6c5181559e2d46c2b489f2403c", "committedDate": "2020-07-22T13:10:45Z", "message": "Docs: update extension guide"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ccc6e04c765c3f6c5181559e2d46c2b489f2403c", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/ccc6e04c765c3f6c5181559e2d46c2b489f2403c", "committedDate": "2020-07-22T13:10:45Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "312e63a4b4360f5bbfe298caeeac4fcb06a9fe6b", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/312e63a4b4360f5bbfe298caeeac4fcb06a9fe6b", "committedDate": "2020-07-22T13:29:27Z", "message": "Docs: update extension guide"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72a4204606066e6ee4e173ae2c296f5bf9e618ec", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/72a4204606066e6ee4e173ae2c296f5bf9e618ec", "committedDate": "2020-07-22T14:22:08Z", "message": "simplify consumer init"}, "afterCommit": {"oid": "9e99f7b3104223eb7a780deea4d5e972dfbb05b2", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/9e99f7b3104223eb7a780deea4d5e972dfbb05b2", "committedDate": "2020-07-22T14:25:34Z", "message": "simplify consumer init"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e99f7b3104223eb7a780deea4d5e972dfbb05b2", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/9e99f7b3104223eb7a780deea4d5e972dfbb05b2", "committedDate": "2020-07-22T14:25:34Z", "message": "simplify consumer init"}, "afterCommit": {"oid": "312e63a4b4360f5bbfe298caeeac4fcb06a9fe6b", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/312e63a4b4360f5bbfe298caeeac4fcb06a9fe6b", "committedDate": "2020-07-22T13:29:27Z", "message": "Docs: update extension guide"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "312e63a4b4360f5bbfe298caeeac4fcb06a9fe6b", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/312e63a4b4360f5bbfe298caeeac4fcb06a9fe6b", "committedDate": "2020-07-22T13:29:27Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "315f616c9b441486302f85f2942984fe2350093b", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/315f616c9b441486302f85f2942984fe2350093b", "committedDate": "2020-07-22T15:47:46Z", "message": "Docs: update extension guide"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "315f616c9b441486302f85f2942984fe2350093b", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/315f616c9b441486302f85f2942984fe2350093b", "committedDate": "2020-07-22T15:47:46Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "8c334972c7da05614b7341e6370c0fbae091fda9", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/8c334972c7da05614b7341e6370c0fbae091fda9", "committedDate": "2020-07-22T19:49:31Z", "message": "Docs: update extension guide"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c334972c7da05614b7341e6370c0fbae091fda9", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/8c334972c7da05614b7341e6370c0fbae091fda9", "committedDate": "2020-07-22T19:49:31Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "f99ae0b657ceff5e9d8df347d6bd668eb88699b0", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/f99ae0b657ceff5e9d8df347d6bd668eb88699b0", "committedDate": "2020-07-22T20:21:43Z", "message": "Docs: update extension guide"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f99ae0b657ceff5e9d8df347d6bd668eb88699b0", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/f99ae0b657ceff5e9d8df347d6bd668eb88699b0", "committedDate": "2020-07-22T20:21:43Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "4666b60fac97aaf564d3aa213506e4a8e3cd890d", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/4666b60fac97aaf564d3aa213506e4a8e3cd890d", "committedDate": "2020-07-22T21:22:08Z", "message": "Docs: update extension guide"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MDc5NTg3", "url": "https://github.com/quarkusio/quarkus/pull/10626#pullrequestreview-454079587", "createdAt": "2020-07-23T12:28:20Z", "commit": {"oid": "4666b60fac97aaf564d3aa213506e4a8e3cd890d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyODoyMFrOG2IN9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyODoyMFrOG2IN9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQxMDkzMg==", "bodyText": "Does it need a new factory for each consumer, or because each consumer creates a new builder from the factory, the factory can be the same?", "url": "https://github.com/quarkusio/quarkus/pull/10626#discussion_r459410932", "createdAt": "2020-07-23T12:28:20Z", "author": {"login": "kenfinnigan"}, "path": "extensions/smallrye-metrics/runtime/src/main/java/io/quarkus/smallrye/metrics/runtime/SmallRyeMetricsRecorder.java", "diffHunk": "@@ -209,6 +211,11 @@ public void registerMetric(MetricRegistry.Type scope,\n         }\n     }\n \n+    public void registerMetrics(Consumer<MetricsFactory> consumer) {\n+        SmallRyeMetricsFactory factory = new SmallRyeMetricsFactory();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4666b60fac97aaf564d3aa213506e4a8e3cd890d"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4666b60fac97aaf564d3aa213506e4a8e3cd890d", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/4666b60fac97aaf564d3aa213506e4a8e3cd890d", "committedDate": "2020-07-22T21:22:08Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "cb2dc0b8ebb071a14e9da6cfcbd6e1fd487751c6", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/cb2dc0b8ebb071a14e9da6cfcbd6e1fd487751c6", "committedDate": "2020-07-23T12:56:58Z", "message": "Docs: update extension guide"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0MTExODkw", "url": "https://github.com/quarkusio/quarkus/pull/10626#pullrequestreview-454111890", "createdAt": "2020-07-23T13:07:39Z", "commit": {"oid": "cb2dc0b8ebb071a14e9da6cfcbd6e1fd487751c6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb2dc0b8ebb071a14e9da6cfcbd6e1fd487751c6", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/cb2dc0b8ebb071a14e9da6cfcbd6e1fd487751c6", "committedDate": "2020-07-23T12:56:58Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "5932d186e595e403941b4b13c310dc2ab851d7b5", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/5932d186e595e403941b4b13c310dc2ab851d7b5", "committedDate": "2020-07-23T19:28:17Z", "message": "Docs: update extension guide"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU0NjY2MzMz", "url": "https://github.com/quarkusio/quarkus/pull/10626#pullrequestreview-454666333", "createdAt": "2020-07-24T06:52:31Z", "commit": {"oid": "5932d186e595e403941b4b13c310dc2ab851d7b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjo1MjozMVrOG2k3TA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQwNjo1MjozMVrOG2k3TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTg4MDI2OA==", "bodyText": "Why is this inside the method registerMetricsFromProducers? Metrics from producers will go away in MP Metrics 3.0 and so will this method. Perhaps this can be moved to a new method with a RUNTIME_INIT recorder?", "url": "https://github.com/quarkusio/quarkus/pull/10626#discussion_r459880268", "createdAt": "2020-07-24T06:52:31Z", "author": {"login": "jmartisk"}, "path": "extensions/smallrye-metrics/deployment/src/main/java/io/quarkus/smallrye/metrics/deployment/SmallRyeMetricsProcessor.java", "diffHunk": "@@ -495,6 +507,12 @@ void registerMetricsFromProducers(\n                 }\n             }\n         }\n+\n+        for (MetricsFactoryConsumerBuildItem item : metricsFactoryConsumerBuildItems) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5932d186e595e403941b4b13c310dc2ab851d7b5"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5932d186e595e403941b4b13c310dc2ab851d7b5", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/5932d186e595e403941b4b13c310dc2ab851d7b5", "committedDate": "2020-07-23T19:28:17Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "13923620cb0affd397ca6b681bd9bae640da4dbf", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/13923620cb0affd397ca6b681bd9bae640da4dbf", "committedDate": "2020-07-24T13:53:37Z", "message": "Docs: update extension guide"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "13923620cb0affd397ca6b681bd9bae640da4dbf", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/13923620cb0affd397ca6b681bd9bae640da4dbf", "committedDate": "2020-07-24T13:53:37Z", "message": "Docs: update extension guide"}, "afterCommit": {"oid": "e5a0e585e7f85568f3318adde9775df5f1c3f00e", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/e5a0e585e7f85568f3318adde9775df5f1c3f00e", "committedDate": "2020-07-24T15:11:22Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5a0e585e7f85568f3318adde9775df5f1c3f00e", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/e5a0e585e7f85568f3318adde9775df5f1c3f00e", "committedDate": "2020-07-24T15:11:22Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}, "afterCommit": {"oid": "cb005abaf42c6eb294e070630c5b5c15cf6912b7", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/cb005abaf42c6eb294e070630c5b5c15cf6912b7", "committedDate": "2020-07-24T22:43:33Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb005abaf42c6eb294e070630c5b5c15cf6912b7", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/cb005abaf42c6eb294e070630c5b5c15cf6912b7", "committedDate": "2020-07-24T22:43:33Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}, "afterCommit": {"oid": "51595cf9ba5ecebd1df978d7312c9b4c51c0d471", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/51595cf9ba5ecebd1df978d7312c9b4c51c0d471", "committedDate": "2020-07-27T13:16:18Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51595cf9ba5ecebd1df978d7312c9b4c51c0d471", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/51595cf9ba5ecebd1df978d7312c9b4c51c0d471", "committedDate": "2020-07-27T13:16:18Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}, "afterCommit": {"oid": "b31ded643a6339a75565eb9c07fa12adb1dc2448", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/b31ded643a6339a75565eb9c07fa12adb1dc2448", "committedDate": "2020-07-27T19:25:02Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b31ded643a6339a75565eb9c07fa12adb1dc2448", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/b31ded643a6339a75565eb9c07fa12adb1dc2448", "committedDate": "2020-07-27T19:25:02Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}, "afterCommit": {"oid": "64f63040c7068bd71276d8eafc8c6b0df3efe9ba", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/64f63040c7068bd71276d8eafc8c6b0df3efe9ba", "committedDate": "2020-07-28T13:13:21Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64f63040c7068bd71276d8eafc8c6b0df3efe9ba", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/64f63040c7068bd71276d8eafc8c6b0df3efe9ba", "committedDate": "2020-07-28T13:13:21Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}, "afterCommit": {"oid": "e8d5c03f92e9d857af1aa79b9a366b1b19b7e7dd", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/e8d5c03f92e9d857af1aa79b9a366b1b19b7e7dd", "committedDate": "2020-07-28T13:22:57Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d90e022f19aa3a2e90d4f7e0f21cd9b07267026a", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/d90e022f19aa3a2e90d4f7e0f21cd9b07267026a", "committedDate": "2020-07-28T14:36:32Z", "message": "core: MetricsFactory, Metrics*BuildItem\n\nMetricsFactoryConsumerBuildItem, MetricsCapabilityBuildItem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4469af5e0a263e20a719e4a169180568717a405", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/d4469af5e0a263e20a719e4a169180568717a405", "committedDate": "2020-07-28T14:36:32Z", "message": "hibernate-orm with MetricsFactoryConsumerBuildItem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07948c145529be784bd2d9843b5a9c48a435a161", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/07948c145529be784bd2d9843b5a9c48a435a161", "committedDate": "2020-07-28T14:36:32Z", "message": "agroal with MetricsFactoryConsumerBuildItem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1b5af71a6c365c16d79d4a9ea337d38ef0340dc", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/e1b5af71a6c365c16d79d4a9ea337d38ef0340dc", "committedDate": "2020-07-28T14:36:32Z", "message": "jaeger with MetricsCapabilityBuildItem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "885bcac40340a623033d5368c7e574a4625b46a2", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/885bcac40340a623033d5368c7e574a4625b46a2", "committedDate": "2020-07-28T14:36:32Z", "message": "MongoDB with MetricsCapabilityBuildItem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31947efbb67be4ea29d08ddafae3999027c6f5a4", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/31947efbb67be4ea29d08ddafae3999027c6f5a4", "committedDate": "2020-07-28T14:36:32Z", "message": "Docs: update extension guide"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19d65388b55f01ddd9ec33cb59b731410a3b5a63", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/19d65388b55f01ddd9ec33cb59b731410a3b5a63", "committedDate": "2020-07-28T14:36:32Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e8d5c03f92e9d857af1aa79b9a366b1b19b7e7dd", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/e8d5c03f92e9d857af1aa79b9a366b1b19b7e7dd", "committedDate": "2020-07-28T13:22:57Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}, "afterCommit": {"oid": "19d65388b55f01ddd9ec33cb59b731410a3b5a63", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/19d65388b55f01ddd9ec33cb59b731410a3b5a63", "committedDate": "2020-07-28T14:36:32Z", "message": "K8s: Path from MetricsCapabilityBuildItem"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MjIxMjYy", "url": "https://github.com/quarkusio/quarkus/pull/10626#pullrequestreview-457221262", "createdAt": "2020-07-29T06:13:22Z", "commit": {"oid": "19d65388b55f01ddd9ec33cb59b731410a3b5a63"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3483, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}