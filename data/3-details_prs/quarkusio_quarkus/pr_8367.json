{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3ODAxMTA3", "number": 8367, "title": "Add support for async functions in funqy-knative", "bodyText": "", "createdAt": "2020-04-02T20:43:31Z", "url": "https://github.com/quarkusio/quarkus/pull/8367", "merged": true, "mergeCommit": {"oid": "eefaa2681bfe7ecf3ec77ace2cc8f69a4949db6c"}, "closed": true, "closedAt": "2020-04-08T22:07:00Z", "author": {"login": "matejvasek"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVIACBAFqTM4NjgwNjI5NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVvU7EgFqTM4OTQxNzMxNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODA2Mjk0", "url": "https://github.com/quarkusio/quarkus/pull/8367#pullrequestreview-386806294", "createdAt": "2020-04-02T21:57:31Z", "commit": {"oid": "9d56ec791cf7eacee8aaef0a59fcc33e1d513be8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMTo1NzozMVrOF_98lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwMDoxMjoxOFrOGBubhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYxOTU0Mw==", "bodyText": "Create a separate test for CompletionStage please, don't replace the old one.", "url": "https://github.com/quarkusio/quarkus/pull/8367#discussion_r402619543", "createdAt": "2020-04-02T21:57:31Z", "author": {"login": "patriot1burke"}, "path": "extensions/funqy/funqy-knative/deployment/src/test/java/io/quarkus/funqy/test/GreetingFunctions.java", "diffHunk": "@@ -9,12 +12,12 @@\n     GreetingService service;\n \n     @Funq\n-    public Greeting greet(Identity name) {\n+    public CompletionStage greet(Identity name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d56ec791cf7eacee8aaef0a59fcc33e1d513be8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjYyMjc3NQ==", "bodyText": "I think we need to require that the CompletionStage generic type be filled in.  Jackson Readers and Writers are initialized at static initialization time to speed up boot time for native.  I don't want to support dynamic marshalling of types.\nThe deployment code (@buildstep) should check that if it is a CompletionStage that the generic type is filled in.  Otherwise it should warn and abort the build.", "url": "https://github.com/quarkusio/quarkus/pull/8367#discussion_r402622775", "createdAt": "2020-04-02T22:04:53Z", "author": {"login": "patriot1burke"}, "path": "extensions/funqy/funqy-server-common/runtime/src/main/java/io/quarkus/funqy/runtime/FunctionInvoker.java", "diffHunk": "@@ -36,8 +37,19 @@ public FunctionInvoker(String name, Class targetClass, Method method) {\n             }\n         }\n         constructor = new FunctionConstructor(targetClass);\n-        if (method.getReturnType() != null) {\n-            outputType = method.getReturnType();\n+        Class rt = method.getReturnType();\n+        if (rt != null) {\n+            if (CompletionStage.class.isAssignableFrom(rt)) {\n+                try {\n+                    Type type = ((ParameterizedType) method.getGenericReturnType()).getActualTypeArguments()[0];\n+                    outputType = (Class) type;\n+                } catch (Exception ex) {\n+                    outputType = Object.class;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d56ec791cf7eacee8aaef0a59fcc33e1d513be8"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDQ2MjQ2OA==", "bodyText": "Do not delete the old synchronous function.  Write a new test for CompletionStage<> return value.  Also, please duplicate the separate CompletionStage test in Lambda and HTTP.", "url": "https://github.com/quarkusio/quarkus/pull/8367#discussion_r404462468", "createdAt": "2020-04-07T00:12:18Z", "author": {"login": "patriot1burke"}, "path": "extensions/funqy/funqy-knative/deployment/src/test/java/io/quarkus/funqy/test/GreetingFunctions.java", "diffHunk": "@@ -9,12 +15,25 @@\n     GreetingService service;\n \n     @Funq\n-    public Greeting greet(Identity name) {\n-        String message = service.hello(name.getName());\n-        Greeting greeting = new Greeting();\n-        greeting.setMessage(message);\n-        greeting.setName(name.getName());\n-        return greeting;\n+    public CompletionStage<Greeting> greet(Identity name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "719221dfab7e149f04fe3850389ca000ae1642f9"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3b5bd98e440f5140cef67b7a4ff2e05b159cf93b", "author": {"user": {"login": "matejvasek", "name": "Matej Vasek"}}, "url": "https://github.com/quarkusio/quarkus/commit/3b5bd98e440f5140cef67b7a4ff2e05b159cf93b", "committedDate": "2020-04-07T15:07:41Z", "message": "tests for funqy-http async functions"}, "afterCommit": {"oid": "3f8ac3617652bfe80d877194ea61853dedf35e07", "author": {"user": {"login": "matejvasek", "name": "Matej Vasek"}}, "url": "https://github.com/quarkusio/quarkus/commit/3f8ac3617652bfe80d877194ea61853dedf35e07", "committedDate": "2020-04-08T00:42:29Z", "message": "fixing build"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68606165b35a859a3f7e3a70be0ff2c3281e7b21", "author": {"user": {"login": "matejvasek", "name": "Matej Vasek"}}, "url": "https://github.com/quarkusio/quarkus/commit/68606165b35a859a3f7e3a70be0ff2c3281e7b21", "committedDate": "2020-04-08T15:48:28Z", "message": "added support for async functions in funqy\n\nuser functions now may return CompletionStage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f48937e3539b89ce37cd935838f49c3d14918353", "author": {"user": {"login": "matejvasek", "name": "Matej Vasek"}}, "url": "https://github.com/quarkusio/quarkus/commit/f48937e3539b89ce37cd935838f49c3d14918353", "committedDate": "2020-04-08T14:45:21Z", "message": "improved shutdown for amazon lambda polling thread"}, "afterCommit": {"oid": "68606165b35a859a3f7e3a70be0ff2c3281e7b21", "author": {"user": {"login": "matejvasek", "name": "Matej Vasek"}}, "url": "https://github.com/quarkusio/quarkus/commit/68606165b35a859a3f7e3a70be0ff2c3281e7b21", "committedDate": "2020-04-08T15:48:28Z", "message": "added support for async functions in funqy\n\nuser functions now may return CompletionStage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df9a9e8599f5462d73d0c7db23b4bd9f40fc3d99", "author": {"user": {"login": "matejvasek", "name": "Matej Vasek"}}, "url": "https://github.com/quarkusio/quarkus/commit/df9a9e8599f5462d73d0c7db23b4bd9f40fc3d99", "committedDate": "2020-04-08T18:56:17Z", "message": "forking for funqy amazon lambda integration tests\n\nneeded due static initialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NDE3MzE2", "url": "https://github.com/quarkusio/quarkus/pull/8367#pullrequestreview-389417316", "createdAt": "2020-04-07T19:17:48Z", "commit": {"oid": "3b5bd98e440f5140cef67b7a4ff2e05b159cf93b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOToxNzo0OVrOGCSc6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxOToxNzo0OVrOGCSc6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTA1MjY1MQ==", "bodyText": "This error check should be done in a deployment @buildstep so it pops up at build time.", "url": "https://github.com/quarkusio/quarkus/pull/8367#discussion_r405052651", "createdAt": "2020-04-07T19:17:49Z", "author": {"login": "patriot1burke"}, "path": "extensions/funqy/funqy-server-common/runtime/src/main/java/io/quarkus/funqy/runtime/FunctionInvoker.java", "diffHunk": "@@ -41,16 +41,19 @@ public FunctionInvoker(String name, Class<?> targetClass, Method method) {\n         Class<?> returnType = method.getReturnType();\n         if (returnType != null) {\n             if (CompletionStage.class.isAssignableFrom(returnType)) {\n-                outputType = Object.class;\n+                outputType = null;\n                 isAsync = true;\n-\n                 Type genericReturnType = method.getGenericReturnType();\n                 if (genericReturnType instanceof ParameterizedType) {\n                     Type[] actualParams = ((ParameterizedType) genericReturnType).getActualTypeArguments();\n                     if (actualParams.length == 1 && actualParams[0] instanceof Class<?>) {\n                         outputType = (Class<?>) actualParams[0];\n                     }\n                 }\n+                if (outputType == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b5bd98e440f5140cef67b7a4ff2e05b159cf93b"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4715, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}