{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgzMDIyOTcz", "number": 12014, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDozMzoxMFrOEiSCcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDozNDowNFrOEiSDcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzgyNTc4OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/hibernate-orm.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDozMzoxMFrOHQEuVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDozMzoxMFrOHQEuVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxNjY2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you also use link:security-openid-connect-multitenancy[OIDC MultiTenancy] and both OIDC and Hibernate tenant IDs are the same and must be extracted from the Vertx `RoutingContext` then you can pass the tenant id from the OIDC Tenant Resolver to the Hibernate Tenant Resolver as a `RoutingContext` attribute, for example:\n          \n          \n            \n            If you also use link:security-openid-connect-multitenancy[OIDC multitenancy] and both OIDC and Hibernate ORM tenant IDs are the same and must be extracted from the Vert.x `RoutingContext` then you can pass the tenant id from the OIDC Tenant Resolver to the Hibernate ORM Tenant Resolver as a `RoutingContext` attribute, for example:", "url": "https://github.com/quarkusio/quarkus/pull/12014#discussion_r486616663", "createdAt": "2020-09-10T20:33:10Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/hibernate-orm.adoc", "diffHunk": "@@ -846,6 +847,30 @@ public class CustomTenantResolver implements TenantResolver {\n <1> Make sure to use the `@io.quarkus.hibernate.orm.PersistenceUnit` annotation, not the JPA one.\n ====\n \n+[NOTE]\n+====\n+If you also use link:security-openid-connect-multitenancy[OIDC MultiTenancy] and both OIDC and Hibernate tenant IDs are the same and must be extracted from the Vertx `RoutingContext` then you can pass the tenant id from the OIDC Tenant Resolver to the Hibernate Tenant Resolver as a `RoutingContext` attribute, for example:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b76a1d8930bae67d14a05739c38976006957d8a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzgyODMzOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/security-openid-connect-multitenancy.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDozNDowNFrOHQEwBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQyMDozNDowNFrOHQEwBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjYxNzA5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you also use link:hibernate-orm#multitenancy[Hibernate MultiTenancy] and both OIDC and Hibernate tenant IDs are the same and must be extracted from the Vertx `RoutingContext` then you can pass the tenant id from the OIDC Tenant Resolver to the Hibernate Tenant Resolver as a `RoutingContext` attribute, for example:\n          \n          \n            \n            If you also use link:hibernate-orm#multitenancy[Hibernate ORM multitenancy] and both OIDC and Hibernate ORM tenant IDs are the same and must be extracted from the Vert.x `RoutingContext` then you can pass the tenant id from the OIDC Tenant Resolver to the Hibernate ORM Tenant Resolver as a `RoutingContext` attribute, for example:", "url": "https://github.com/quarkusio/quarkus/pull/12014#discussion_r486617094", "createdAt": "2020-09-10T20:34:04Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/security-openid-connect-multitenancy.adoc", "diffHunk": "@@ -151,6 +151,24 @@ public class CustomTenantResolver implements TenantResolver {\n \n From the implementation above, tenants are resolved from the request path so that in case no tenant could be inferred, `null` is returned to indicate that the default tenant configuration should be used.\n \n+[NOTE]\n+===\n+If you also use link:hibernate-orm#multitenancy[Hibernate MultiTenancy] and both OIDC and Hibernate tenant IDs are the same and must be extracted from the Vertx `RoutingContext` then you can pass the tenant id from the OIDC Tenant Resolver to the Hibernate Tenant Resolver as a `RoutingContext` attribute, for example:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b76a1d8930bae67d14a05739c38976006957d8a"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 406, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}