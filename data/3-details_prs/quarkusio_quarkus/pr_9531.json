{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxODI2MTMw", "number": 9531, "title": "Speed up Flyway by preventing it from doing classpath scanning", "bodyText": "This PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nflyway/flyway#2822 is done)\nRelates to: #9428", "createdAt": "2020-05-22T09:51:11Z", "url": "https://github.com/quarkusio/quarkus/pull/9531", "merged": true, "mergeCommit": {"oid": "1b8200a19ddb571a8d6a1f03c508ffd673b064ca"}, "closed": true, "closedAt": "2020-05-25T04:19:05Z", "author": {"login": "geoand"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjvNtwgBqjMzNjQwNTYzMTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABckk1CQAFqTQxNzQwNjUyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee7ade3af511b62d4b633f17220c3d3a5a3723ab", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/ee7ade3af511b62d4b633f17220c3d3a5a3723ab", "committedDate": "2020-05-22T09:50:03Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns in into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't awesome from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}, "afterCommit": {"oid": "88b49530f67051b02c1696ebb71ba1ad3568534d", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/88b49530f67051b02c1696ebb71ba1ad3568534d", "committedDate": "2020-05-22T09:53:50Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't great from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "88b49530f67051b02c1696ebb71ba1ad3568534d", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/88b49530f67051b02c1696ebb71ba1ad3568534d", "committedDate": "2020-05-22T09:53:50Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't great from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}, "afterCommit": {"oid": "937cb4dc7ced008bbfe51c2ebf1cee1766d41f92", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/937cb4dc7ced008bbfe51c2ebf1cee1766d41f92", "committedDate": "2020-05-22T11:58:32Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "937cb4dc7ced008bbfe51c2ebf1cee1766d41f92", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/937cb4dc7ced008bbfe51c2ebf1cee1766d41f92", "committedDate": "2020-05-22T11:58:32Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}, "afterCommit": {"oid": "ba96126798d0b12c887518551b730b5c023fa476", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/ba96126798d0b12c887518551b730b5c023fa476", "committedDate": "2020-05-22T12:20:10Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba96126798d0b12c887518551b730b5c023fa476", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/ba96126798d0b12c887518551b730b5c023fa476", "committedDate": "2020-05-22T12:20:10Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}, "afterCommit": {"oid": "a5e9bdc7f58a92789b3f8d3f005ae2b67d17e1a0", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/a5e9bdc7f58a92789b3f8d3f005ae2b67d17e1a0", "committedDate": "2020-05-22T12:25:21Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a5e9bdc7f58a92789b3f8d3f005ae2b67d17e1a0", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/a5e9bdc7f58a92789b3f8d3f005ae2b67d17e1a0", "committedDate": "2020-05-22T12:25:21Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}, "afterCommit": {"oid": "9b359404ffb7f57320148a2800c080e243edde90", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/9b359404ffb7f57320148a2800c080e243edde90", "committedDate": "2020-05-22T12:28:58Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b359404ffb7f57320148a2800c080e243edde90", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/9b359404ffb7f57320148a2800c080e243edde90", "committedDate": "2020-05-22T12:28:58Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}, "afterCommit": {"oid": "e08dd3ea6439f7e1ecf9bafa018a585e5f78c0c1", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/e08dd3ea6439f7e1ecf9bafa018a585e5f78c0c1", "committedDate": "2020-05-22T12:40:58Z", "message": "Temporarily remove other tests to get faster CI feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e08dd3ea6439f7e1ecf9bafa018a585e5f78c0c1", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/e08dd3ea6439f7e1ecf9bafa018a585e5f78c0c1", "committedDate": "2020-05-22T12:40:58Z", "message": "Temporarily remove other tests to get faster CI feedback"}, "afterCommit": {"oid": "5b4eaf9e93432fb70ab9e24bd0fe56a865dfd7da", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/5b4eaf9e93432fb70ab9e24bd0fe56a865dfd7da", "committedDate": "2020-05-22T12:52:41Z", "message": "Temporarily remove other tests to get faster CI feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b4eaf9e93432fb70ab9e24bd0fe56a865dfd7da", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/5b4eaf9e93432fb70ab9e24bd0fe56a865dfd7da", "committedDate": "2020-05-22T12:52:41Z", "message": "Temporarily remove other tests to get faster CI feedback"}, "afterCommit": {"oid": "4742e3982cf1ec4ea766e4e7a63a54f14b116dc1", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/4742e3982cf1ec4ea766e4e7a63a54f14b116dc1", "committedDate": "2020-05-22T12:53:30Z", "message": "Temporarily remove other tests to get faster CI feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4742e3982cf1ec4ea766e4e7a63a54f14b116dc1", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/4742e3982cf1ec4ea766e4e7a63a54f14b116dc1", "committedDate": "2020-05-22T12:53:30Z", "message": "Temporarily remove other tests to get faster CI feedback"}, "afterCommit": {"oid": "b2416d33197b99d5902de09e643087d9bc29ad7e", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/b2416d33197b99d5902de09e643087d9bc29ad7e", "committedDate": "2020-05-22T13:30:27Z", "message": "Temporarily remove other tests to get faster CI feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2416d33197b99d5902de09e643087d9bc29ad7e", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/b2416d33197b99d5902de09e643087d9bc29ad7e", "committedDate": "2020-05-22T13:30:27Z", "message": "Temporarily remove other tests to get faster CI feedback"}, "afterCommit": {"oid": "5a1c57aa50a4390a0b86f7d242e10d11711ef91a", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/5a1c57aa50a4390a0b86f7d242e10d11711ef91a", "committedDate": "2020-05-22T13:58:04Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MDc3OTEy", "url": "https://github.com/quarkusio/quarkus/pull/9531#pullrequestreview-417077912", "createdAt": "2020-05-22T17:33:00Z", "commit": {"oid": "5a1c57aa50a4390a0b86f7d242e10d11711ef91a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzozMzowMVrOGZeyQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzozMzowMVrOGZeyQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3MTk3MQ==", "bodyText": "Can we add a link to the issue we created in Flyway with just a note explaining why need this class. This way we can easily track the issue once it is merged, we can get rid of this class. WDYT?", "url": "https://github.com/quarkusio/quarkus/pull/9531#discussion_r429371971", "createdAt": "2020-05-22T17:33:01Z", "author": {"login": "machi1990"}, "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/ScannerTransformer.java", "diffHunk": "@@ -0,0 +1,116 @@\n+package io.quarkus.flyway;\n+\n+import static org.objectweb.asm.Opcodes.ALOAD;\n+import static org.objectweb.asm.Opcodes.ASTORE;\n+import static org.objectweb.asm.Opcodes.DUP;\n+import static org.objectweb.asm.Opcodes.GETFIELD;\n+import static org.objectweb.asm.Opcodes.INVOKEINTERFACE;\n+import static org.objectweb.asm.Opcodes.INVOKESPECIAL;\n+import static org.objectweb.asm.Opcodes.NEW;\n+import static org.objectweb.asm.Opcodes.POP;\n+import static org.objectweb.asm.Opcodes.PUTFIELD;\n+import static org.objectweb.asm.Opcodes.RETURN;\n+\n+import java.util.function.BiFunction;\n+\n+import org.flywaydb.core.internal.scanner.Scanner;\n+import org.flywaydb.core.internal.scanner.classpath.ResourceAndClassScanner;\n+import org.objectweb.asm.ClassVisitor;\n+import org.objectweb.asm.MethodVisitor;\n+\n+import io.quarkus.flyway.runtime.QuarkusPathLocationScanner;\n+import io.quarkus.gizmo.Gizmo;\n+\n+class ScannerTransformer implements BiFunction<String, ClassVisitor, ClassVisitor> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1c57aa50a4390a0b86f7d242e10d11711ef91a"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MDg5NzA4", "url": "https://github.com/quarkusio/quarkus/pull/9531#pullrequestreview-417089708", "createdAt": "2020-05-22T17:53:00Z", "commit": {"oid": "5a1c57aa50a4390a0b86f7d242e10d11711ef91a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a1c57aa50a4390a0b86f7d242e10d11711ef91a", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/5a1c57aa50a4390a0b86f7d242e10d11711ef91a", "committedDate": "2020-05-22T13:58:04Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}, "afterCommit": {"oid": "b1a64d0ae4e2342de479149b36935b4346f5b3dd", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/b1a64d0ae4e2342de479149b36935b4346f5b3dd", "committedDate": "2020-05-22T17:54:03Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20f42f9d3abd49a591ab3a8045f77f7d21bb1d86", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/20f42f9d3abd49a591ab3a8045f77f7d21bb1d86", "committedDate": "2020-05-24T11:00:18Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1a64d0ae4e2342de479149b36935b4346f5b3dd", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/b1a64d0ae4e2342de479149b36935b4346f5b3dd", "committedDate": "2020-05-22T17:54:03Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}, "afterCommit": {"oid": "20f42f9d3abd49a591ab3a8045f77f7d21bb1d86", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/20f42f9d3abd49a591ab3a8045f77f7d21bb1d86", "committedDate": "2020-05-24T11:00:18Z", "message": "Speedup Flyway by preventing it from doing classpath scanning\n\nThis PR essentially takes the substitution we had for native mode\nand turns it into a class transformer.\nThis way even in JVM mode our Flyway integration take advantage of\nthe fact that the migration script locations are known at build time,\nthus no classpath scanning is needed.\n\nThis solution isn't ideal from a maintenance perspective, but the\ntransformation is relatively straightforward and our test suite for\nFlyway pretty extensive, so we should easily be able to adapt to future\nFlyway updates (ideally we would be able to remove this if /when\nhttps://github.com/flyway/flyway/issues/2822 is done)\n\nRelates to: #9428"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDA2NDgy", "url": "https://github.com/quarkusio/quarkus/pull/9531#pullrequestreview-417406482", "createdAt": "2020-05-25T00:21:26Z", "commit": {"oid": "20f42f9d3abd49a591ab3a8045f77f7d21bb1d86"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMDoyMToyNlrOGZyO0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwMDoyMToyNlrOGZyO0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTY5MDU3Ng==", "bodyText": "I really should look at a 'Gizmo for transformers'...", "url": "https://github.com/quarkusio/quarkus/pull/9531#discussion_r429690576", "createdAt": "2020-05-25T00:21:26Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/flyway/deployment/src/main/java/io/quarkus/flyway/ScannerTransformer.java", "diffHunk": "@@ -0,0 +1,121 @@\n+package io.quarkus.flyway;\n+\n+import static org.objectweb.asm.Opcodes.ALOAD;\n+import static org.objectweb.asm.Opcodes.ASTORE;\n+import static org.objectweb.asm.Opcodes.DUP;\n+import static org.objectweb.asm.Opcodes.GETFIELD;\n+import static org.objectweb.asm.Opcodes.INVOKEINTERFACE;\n+import static org.objectweb.asm.Opcodes.INVOKESPECIAL;\n+import static org.objectweb.asm.Opcodes.NEW;\n+import static org.objectweb.asm.Opcodes.POP;\n+import static org.objectweb.asm.Opcodes.PUTFIELD;\n+import static org.objectweb.asm.Opcodes.RETURN;\n+\n+import java.util.function.BiFunction;\n+\n+import org.flywaydb.core.internal.scanner.Scanner;\n+import org.flywaydb.core.internal.scanner.classpath.ResourceAndClassScanner;\n+import org.objectweb.asm.ClassVisitor;\n+import org.objectweb.asm.MethodVisitor;\n+\n+import io.quarkus.flyway.runtime.QuarkusPathLocationScanner;\n+import io.quarkus.gizmo.Gizmo;\n+\n+/**\n+ * Transforms {@link Scanner} in a way to take advantage of our build time knowledge\n+ * This should be removed completely if https://github.com/flyway/flyway/issues/2822\n+ * is implemented\n+ */\n+class ScannerTransformer implements BiFunction<String, ClassVisitor, ClassVisitor> {\n+\n+    static final String FLYWAY_SCANNER_CLASS_NAME = Scanner.class.getName();\n+    private static final String FLYWAY_SCANNER_INTERNAL_CLASS_NAME = FLYWAY_SCANNER_CLASS_NAME.replace('.', '/');\n+\n+    private static final String FLYWAY_RESOURCE_AND_CLASS_SCANNER_CLASS_NAME = ResourceAndClassScanner.class.getName();\n+    private static final String FLYWAY_RESOURCE_AND_CLASS_SCANNER_INTERNAL_CLASS_NAME = FLYWAY_RESOURCE_AND_CLASS_SCANNER_CLASS_NAME\n+            .replace('.', '/');\n+\n+    private static final String QUARKUS_RESOURCE_AND_CLASS_SCANNER_CLASS_NAME = QuarkusPathLocationScanner.class.getName();\n+    private static final String QUARKUS_RESOURCE_AND_CLASS_SCANNER_INTERNAL_CLASS_NAME = QUARKUS_RESOURCE_AND_CLASS_SCANNER_CLASS_NAME\n+            .replace('.', '/');\n+\n+    private static final String CTOR_METHOD_NAME = \"<init>\";\n+\n+    @Override\n+    public ClassVisitor apply(String s, ClassVisitor cv) {\n+        return new ScannerVisitor(cv);\n+    }\n+\n+    private static final class ScannerVisitor extends ClassVisitor {\n+\n+        public ScannerVisitor(ClassVisitor cv) {\n+            super(Gizmo.ASM_API_VERSION, cv);\n+        }\n+\n+        @Override\n+        public MethodVisitor visitMethod(int access, String name, String descriptor, String signature, String[] exceptions) {\n+            MethodVisitor mv = super.visitMethod(access, name, descriptor, signature, exceptions);\n+            if (name.equals(CTOR_METHOD_NAME)) {\n+                return new ConstructorTransformer(mv);\n+            }\n+            return mv;\n+        }\n+\n+        /**\n+         * Replaces the constructor of the {@link Scanner} with:\n+         *\n+         * <pre>\n+         * public ScannerSubstitutions(Class<?> implementedInterface, Collection<Location> locations, ClassLoader classLoader,\n+         *         Charset encoding, ResourceNameCache resourceNameCache, LocationScannerCache locationScannerCache) {\n+         *     ResourceAndClassScanner quarkusScanner = new QuarkusPathLocationScanner(locations);\n+         *     resources.addAll(quarkusScanner.scanForResources());\n+         *     classes.addAll(quarkusScanner.scanForClasses());\n+         * }\n+         * </pre>\n+         */\n+        private static class ConstructorTransformer extends MethodVisitor {\n+\n+            public ConstructorTransformer(MethodVisitor mv) {\n+                super(Gizmo.ASM_API_VERSION, mv);\n+            }\n+\n+            @Override\n+            public void visitCode() {\n+                super.visitVarInsn(ALOAD, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20f42f9d3abd49a591ab3a8045f77f7d21bb1d86"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDA2NTI3", "url": "https://github.com/quarkusio/quarkus/pull/9531#pullrequestreview-417406527", "createdAt": "2020-05-25T00:21:52Z", "commit": {"oid": "20f42f9d3abd49a591ab3a8045f77f7d21bb1d86"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3164, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}