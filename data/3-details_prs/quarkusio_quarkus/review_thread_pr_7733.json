{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MTQ3OTQ4", "number": 7733, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDozMzoxNVrOEEoSfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDo0NDoyMlrOEEoeSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjg5ODUyOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/qute.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDozMzoxNVrOGiXr_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1MDoyN1rOGkRoZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5Mjg2MQ==", "bodyText": "This should be probably return Templates.item(service.findItem(id));, or?", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r438692861", "createdAt": "2020-06-11T10:33:15Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/qute.adoc", "diffHunk": "@@ -99,9 +202,69 @@ public class Item {\n }\n ----\n \n-And we'd like to render a simple HTML page that contains the item name, price and also a discounted price.\n-The discounted price is sometimes called a \"computed property\".\n-We will implement a template extension method to render this property easily.\n+And we'd like to render a simple HTML page that contains the item name and price.\n+\n+Let's start again with the template:\n+\n+.ItemResource/item.html\n+[source,html]\n+----\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<meta charset=\"UTF-8\">\n+<title>{item.name}</title> <1>\n+</head>\n+<body>\n+    <h1>{item.name}</h1>\n+    <div>Price: {item.price}</div> <2> \n+</body>\n+</html>\n+----\n+<1> This expression is validated. Try to change the expression to `{item.nonSense}` and the build should fail.\n+<2> This is also validated.\n+\n+Finally, let's create a resource class with type-safe templates:\n+\n+.ItemResource.java\n+[source,java]\n+----\n+package org.acme.quarkus.sample;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+import io.quarkus.qute.TemplateInstance;\n+import io.quarkus.qute.Template;\n+import io.quarkus.qute.api.CheckedTemplate;\n+\n+@Path(\"item\")\n+public class ItemResource {\n+\n+    @CheckedTemplate\n+    class Templates {\n+        public static native TemplateInstance item(Item item); <1>\n+    }\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces(MediaType.TEXT_HTML)\n+    public TemplateInstance get(@PathParam(\"id\") Integer id) {\n+        return Templates.item(\"item\", service.findItem(id)); <2>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "originalPosition": 179}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5MDc4OA==", "bodyText": "Ouch.", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r440690788", "createdAt": "2020-06-16T08:50:27Z", "author": {"login": "FroMage"}, "path": "docs/src/main/asciidoc/qute.adoc", "diffHunk": "@@ -99,9 +202,69 @@ public class Item {\n }\n ----\n \n-And we'd like to render a simple HTML page that contains the item name, price and also a discounted price.\n-The discounted price is sometimes called a \"computed property\".\n-We will implement a template extension method to render this property easily.\n+And we'd like to render a simple HTML page that contains the item name and price.\n+\n+Let's start again with the template:\n+\n+.ItemResource/item.html\n+[source,html]\n+----\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<meta charset=\"UTF-8\">\n+<title>{item.name}</title> <1>\n+</head>\n+<body>\n+    <h1>{item.name}</h1>\n+    <div>Price: {item.price}</div> <2> \n+</body>\n+</html>\n+----\n+<1> This expression is validated. Try to change the expression to `{item.nonSense}` and the build should fail.\n+<2> This is also validated.\n+\n+Finally, let's create a resource class with type-safe templates:\n+\n+.ItemResource.java\n+[source,java]\n+----\n+package org.acme.quarkus.sample;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+import io.quarkus.qute.TemplateInstance;\n+import io.quarkus.qute.Template;\n+import io.quarkus.qute.api.CheckedTemplate;\n+\n+@Path(\"item\")\n+public class ItemResource {\n+\n+    @CheckedTemplate\n+    class Templates {\n+        public static native TemplateInstance item(Item item); <1>\n+    }\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces(MediaType.TEXT_HTML)\n+    public TemplateInstance get(@PathParam(\"id\") Integer id) {\n+        return Templates.item(\"item\", service.findItem(id)); <2>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5Mjg2MQ=="}, "originalCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "originalPosition": 179}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjg5OTgyOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/qute.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDozMzo0OFrOGiXs5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwODo1MToyNFrOGkRq1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5MzA5Mw==", "bodyText": "Alternately -> Alternatively", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r438693093", "createdAt": "2020-06-11T10:33:48Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/qute.adoc", "diffHunk": "@@ -99,9 +202,69 @@ public class Item {\n }\n ----\n \n-And we'd like to render a simple HTML page that contains the item name, price and also a discounted price.\n-The discounted price is sometimes called a \"computed property\".\n-We will implement a template extension method to render this property easily.\n+And we'd like to render a simple HTML page that contains the item name and price.\n+\n+Let's start again with the template:\n+\n+.ItemResource/item.html\n+[source,html]\n+----\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<meta charset=\"UTF-8\">\n+<title>{item.name}</title> <1>\n+</head>\n+<body>\n+    <h1>{item.name}</h1>\n+    <div>Price: {item.price}</div> <2> \n+</body>\n+</html>\n+----\n+<1> This expression is validated. Try to change the expression to `{item.nonSense}` and the build should fail.\n+<2> This is also validated.\n+\n+Finally, let's create a resource class with type-safe templates:\n+\n+.ItemResource.java\n+[source,java]\n+----\n+package org.acme.quarkus.sample;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+import io.quarkus.qute.TemplateInstance;\n+import io.quarkus.qute.Template;\n+import io.quarkus.qute.api.CheckedTemplate;\n+\n+@Path(\"item\")\n+public class ItemResource {\n+\n+    @CheckedTemplate\n+    class Templates {\n+        public static native TemplateInstance item(Item item); <1>\n+    }\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces(MediaType.TEXT_HTML)\n+    public TemplateInstance get(@PathParam(\"id\") Integer id) {\n+        return Templates.item(\"item\", service.findItem(id)); <2>\n+    }\n+}\n+----\n+<1> Declare a method that gives us a `TemplateInstance` for `templates/ItemResource/item.html` and declare its `Item item` parameter so we can validate the template.\n+<2> Make the `Item` object accessible in the template.\n+\n+=== Template parameter declaration inside the template itself\n+\n+Alternately, you can declare your template parameters in the template file itself.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "originalPosition": 188}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY5MTQxMg==", "bodyText": "It does exist, but seems to be an American word. Fixed.", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r440691412", "createdAt": "2020-06-16T08:51:24Z", "author": {"login": "FroMage"}, "path": "docs/src/main/asciidoc/qute.adoc", "diffHunk": "@@ -99,9 +202,69 @@ public class Item {\n }\n ----\n \n-And we'd like to render a simple HTML page that contains the item name, price and also a discounted price.\n-The discounted price is sometimes called a \"computed property\".\n-We will implement a template extension method to render this property easily.\n+And we'd like to render a simple HTML page that contains the item name and price.\n+\n+Let's start again with the template:\n+\n+.ItemResource/item.html\n+[source,html]\n+----\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<meta charset=\"UTF-8\">\n+<title>{item.name}</title> <1>\n+</head>\n+<body>\n+    <h1>{item.name}</h1>\n+    <div>Price: {item.price}</div> <2> \n+</body>\n+</html>\n+----\n+<1> This expression is validated. Try to change the expression to `{item.nonSense}` and the build should fail.\n+<2> This is also validated.\n+\n+Finally, let's create a resource class with type-safe templates:\n+\n+.ItemResource.java\n+[source,java]\n+----\n+package org.acme.quarkus.sample;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+import io.quarkus.qute.TemplateInstance;\n+import io.quarkus.qute.Template;\n+import io.quarkus.qute.api.CheckedTemplate;\n+\n+@Path(\"item\")\n+public class ItemResource {\n+\n+    @CheckedTemplate\n+    class Templates {\n+        public static native TemplateInstance item(Item item); <1>\n+    }\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces(MediaType.TEXT_HTML)\n+    public TemplateInstance get(@PathParam(\"id\") Integer id) {\n+        return Templates.item(\"item\", service.findItem(id)); <2>\n+    }\n+}\n+----\n+<1> Declare a method that gives us a `TemplateInstance` for `templates/ItemResource/item.html` and declare its `Item item` parameter so we can validate the template.\n+<2> Make the `Item` object accessible in the template.\n+\n+=== Template parameter declaration inside the template itself\n+\n+Alternately, you can declare your template parameters in the template file itself.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5MzA5Mw=="}, "originalCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "originalPosition": 188}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjkxMDU5OnYy", "diffSide": "RIGHT", "path": "extensions/qute/runtime/src/main/java/io/quarkus/qute/api/CheckedTemplate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDozNzozMVrOGiXzwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwOToxMDoyMVrOGkSZUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5NDg0OQ==", "bodyText": "We should add some javadoc here...", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r438694849", "createdAt": "2020-06-11T10:37:31Z", "author": {"login": "mkouba"}, "path": "extensions/qute/runtime/src/main/java/io/quarkus/qute/api/CheckedTemplate.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package io.quarkus.qute.api;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Documented\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE)\n+public @interface CheckedTemplate {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcwMzMxMw==", "bodyText": "Indeed.", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r440703313", "createdAt": "2020-06-16T09:10:21Z", "author": {"login": "FroMage"}, "path": "extensions/qute/runtime/src/main/java/io/quarkus/qute/api/CheckedTemplate.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package io.quarkus.qute.api;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Documented\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE)\n+public @interface CheckedTemplate {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5NDg0OQ=="}, "originalCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjkyODczOnYy", "diffSide": "RIGHT", "path": "extensions/resteasy-qute/runtime/src/main/java/io/quarkus/resteasy/qute/runtime/ResteasyTemplate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDo0NDoyMlrOGiX_2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwOTo0NToxNFrOGkTrtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5Nzk0Nw==", "bodyText": "I'm not sure about the name... maybe just RestTemplate? IDK maybe it's OK. But it should reside in the io.quarkus.resteasy.qute package as it's a public API. Plus it wouldn't hurt to make it final with a private constructor.", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r438697947", "createdAt": "2020-06-11T10:44:22Z", "author": {"login": "mkouba"}, "path": "extensions/resteasy-qute/runtime/src/main/java/io/quarkus/resteasy/qute/runtime/ResteasyTemplate.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.resteasy.qute.runtime;\n+\n+import javax.ws.rs.container.ResourceInfo;\n+\n+import org.jboss.resteasy.core.ResteasyContext;\n+\n+import io.quarkus.arc.Arc;\n+import io.quarkus.qute.Engine;\n+import io.quarkus.qute.Template;\n+import io.quarkus.qute.TemplateInstance;\n+\n+public class ResteasyTemplate {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDcyNDQwNA==", "bodyText": "OK changed.", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r440724404", "createdAt": "2020-06-16T09:45:14Z", "author": {"login": "FroMage"}, "path": "extensions/resteasy-qute/runtime/src/main/java/io/quarkus/resteasy/qute/runtime/ResteasyTemplate.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.resteasy.qute.runtime;\n+\n+import javax.ws.rs.container.ResourceInfo;\n+\n+import org.jboss.resteasy.core.ResteasyContext;\n+\n+import io.quarkus.arc.Arc;\n+import io.quarkus.qute.Engine;\n+import io.quarkus.qute.Template;\n+import io.quarkus.qute.TemplateInstance;\n+\n+public class ResteasyTemplate {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5Nzk0Nw=="}, "originalCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4792, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}