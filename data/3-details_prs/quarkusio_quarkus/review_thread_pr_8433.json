{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMDc4NDY0", "number": 8433, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMzo0MTo1MlrODvx-BA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzoxODowNlrODw4j4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDI4MzU2OnYy", "diffSide": "RIGHT", "path": "devtools/maven/src/main/java/io/quarkus/maven/DevMojo.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMzo0MTo1MlrOGCaAiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNjo1NzoxNFrOGChbpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3NjQ1OQ==", "bodyText": "This does not really deal with escaping, but I guess we can handle that later.", "url": "https://github.com/quarkusio/quarkus/pull/8433#discussion_r405176459", "createdAt": "2020-04-07T23:41:52Z", "author": {"login": "stuartwdouglas"}, "path": "devtools/maven/src/main/java/io/quarkus/maven/DevMojo.java", "diffHunk": "@@ -640,7 +643,8 @@ void prepare() throws Exception {\n             }\n             args.add(\"-jar\");\n             args.add(tempFile.getAbsolutePath());\n-\n+            if (argsString != null)\n+                args.addAll(Arrays.asList(argsString.split(\" \")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7bd18fffe9ce727c92012c1bdf838345f207a6d"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI5ODA4Nw==", "bodyText": "I have dug up the correct way to escape from the JavaExecMojo.\nShould be properly escaped now.", "url": "https://github.com/quarkusio/quarkus/pull/8433#discussion_r405298087", "createdAt": "2020-04-08T06:57:14Z", "author": {"login": "38leinaD"}, "path": "devtools/maven/src/main/java/io/quarkus/maven/DevMojo.java", "diffHunk": "@@ -640,7 +643,8 @@ void prepare() throws Exception {\n             }\n             args.add(\"-jar\");\n             args.add(tempFile.getAbsolutePath());\n-\n+            if (argsString != null)\n+                args.addAll(Arrays.asList(argsString.split(\" \")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE3NjQ1OQ=="}, "originalCommit": {"oid": "f7bd18fffe9ce727c92012c1bdf838345f207a6d"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNTg0OTI5OnYy", "diffSide": "RIGHT", "path": "core/runtime/src/main/java/io/quarkus/runtime/CommandLineRuntimeConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMzoxODowNlrOGEIFoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMVQwODoxMToxMlrOGELY2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4MDAwMQ==", "bodyText": "is this really the right thing to do ?\nmaybe we should rename it to something different at maven level so there is no collision ?\nhaving args as just a string seems counter to how we otherwise treat args in rest of quarkus (as a String[] or eventually a List). ?", "url": "https://github.com/quarkusio/quarkus/pull/8433#discussion_r406980001", "createdAt": "2020-04-10T23:18:06Z", "author": {"login": "maxandersen"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/CommandLineRuntimeConfig.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package io.quarkus.runtime;\n+\n+import java.util.Optional;\n+\n+import io.quarkus.runtime.annotations.ConfigItem;\n+import io.quarkus.runtime.annotations.ConfigPhase;\n+import io.quarkus.runtime.annotations.ConfigRoot;\n+\n+/**\n+ * This configuration class is here to avoid warnings when using {@code -Dquarkus.args=...}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a9495b95e290a285ca77ef1141ab480222362e0"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzAzNDA3NA==", "bodyText": "We do that a lot.\nAs for string vs list, see the comment, I can't be more explicit.\nAs for all the other knobs we introduced to avoid the warnings, they are not supposed to be used. That's what we decided a long time ago rather than having an ignore list (which we had at some point).\nWe could introduce a special converter to split the things in the same way Maven is doing things but I don't think it's worth it. And we would probably have to copy Maven code to be exactly on par.\nBTW, I think we need that PR for 1.4 so blocking the PR just for that seems counterproductive.", "url": "https://github.com/quarkusio/quarkus/pull/8433#discussion_r407034074", "createdAt": "2020-04-11T08:11:12Z", "author": {"login": "gsmet"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/CommandLineRuntimeConfig.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package io.quarkus.runtime;\n+\n+import java.util.Optional;\n+\n+import io.quarkus.runtime.annotations.ConfigItem;\n+import io.quarkus.runtime.annotations.ConfigPhase;\n+import io.quarkus.runtime.annotations.ConfigRoot;\n+\n+/**\n+ * This configuration class is here to avoid warnings when using {@code -Dquarkus.args=...}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk4MDAwMQ=="}, "originalCommit": {"oid": "4a9495b95e290a285ca77ef1141ab480222362e0"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3661, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}