{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMjQ2MTEx", "number": 7546, "title": "Make DiagnosticPrinter compatible with Windows", "bodyText": "This PR fixes the following error which was reported in #7269. It happens while running Quarkus with GraalVM 20.0.0 on Windows.\nError: com.oracle.graal.pointsto.constraints.UnsupportedFeatureException: type is not available in this platform: io.quarkus.runtime.graal.DiagnosticPrinter$Target_PosixJavaThreads\nTrace:\n        at parsing io.quarkus.runtime.graal.DiagnosticPrinter.printDiagnostics(DiagnosticPrinter.java:46)\nCall path from entry point to io.quarkus.runtime.graal.DiagnosticPrinter.printDiagnostics(PrintStream):\n        at io.quarkus.runtime.graal.DiagnosticPrinter.printDiagnostics(DiagnosticPrinter.java:29)\n        at io.quarkus.runtime.Application$2.handle(Application.java:209)\n        at sun.misc.Signal$InternalMiscHandler.handle(Signal.java:198)\n        at jdk.internal.misc.Signal$1.run(Signal.java:220)\n        at java.lang.Thread.run(Thread.java:834)\n        at com.oracle.svm.core.thread.JavaThreads.threadStartRoutine(JavaThreads.java:527)\n        at com.oracle.svm.core.windows.WindowsJavaThreads.osThreadStartRoutine(WindowsJavaThreads.java:138)\n        at com.oracle.svm.core.code.IsolateEnterStub.WindowsJavaThreads_osThreadStartRoutine_4bc03aa26f8cdfc97ebd54050e8ae4bce1023851(generated:0)\n\nIt is caused by the following Quarkus code:\n\n  \n    \n      quarkus/core/runtime/src/main/java/io/quarkus/runtime/graal/DiagnosticPrinter.java\n    \n    \n        Lines 46 to 50\n      in\n      3fbdbc3\n    \n    \n    \n    \n\n        \n          \n           if (Target_PosixJavaThreads.hasThreadIdentifier(thread)) { \n        \n\n        \n          \n               final long nativeId = Target_PosixJavaThreads.getPthreadIdentifier(thread).rawValue(); \n        \n\n        \n          \n               w.print(\"0x\"); \n        \n\n        \n          \n               w.println(Long.toHexString(nativeId)); \n        \n\n        \n          \n           } else { \n        \n    \n  \n\n\n@dmlloyd I'll need your opinion on this fix since that's the first time I'm doing that kind of change.\nIt was successfully tested locally with GraalVM 20.0.0 (JDK 11 edition) and Windows 10.", "createdAt": "2020-03-03T23:19:55Z", "url": "https://github.com/quarkusio/quarkus/pull/7546", "merged": true, "mergeCommit": {"oid": "c50706aac86f523ca0bf012be95fbcbf663a1b4e"}, "closed": true, "closedAt": "2020-03-05T08:10:24Z", "author": {"login": "gwenneg"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKK2GYAFqTM2ODM5OTExNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKm-owAFqTM2OTM2MjEzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4Mzk5MTE1", "url": "https://github.com/quarkusio/quarkus/pull/7546#pullrequestreview-368399115", "createdAt": "2020-03-03T23:23:27Z", "commit": {"oid": "c0d6e75e4b1012b3e74595fe6c4740812446916c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzoyMzoyN1rOFxaQzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMzoyMzoyN1rOFxaQzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzM1NDgyOA==", "bodyText": "I'm not satisfied with this, but I didn't find a way in WindowsJavaThreads (or anywhere in GraalVM) to retrieve the Windows native thread ID. Suggestions are welcome here.", "url": "https://github.com/quarkusio/quarkus/pull/7546#discussion_r387354828", "createdAt": "2020-03-03T23:23:27Z", "author": {"login": "gwenneg"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/graal/WindowsDiagnosticPrinter.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package io.quarkus.runtime.graal;\n+\n+import static org.graalvm.nativeimage.Platform.HOSTED_ONLY;\n+import static org.graalvm.nativeimage.Platform.WINDOWS;\n+\n+import java.io.PrintStream;\n+\n+import org.graalvm.nativeimage.ImageSingletons;\n+import org.graalvm.nativeimage.Platforms;\n+import org.graalvm.nativeimage.hosted.Feature;\n+\n+import com.oracle.svm.core.annotate.AutomaticFeature;\n+\n+/**\n+ * A signal handler that prints diagnostic thread info to standard output.\n+ */\n+@Platforms(WINDOWS.class)\n+public final class WindowsDiagnosticPrinter extends DiagnosticPrinter {\n+\n+    @Platforms(HOSTED_ONLY.class)\n+    WindowsDiagnosticPrinter() {\n+    }\n+\n+    @Override\n+    protected void printTid(PrintStream w, Thread thread) {\n+        w.println(\" tid=(unknown)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0d6e75e4b1012b3e74595fe6c4740812446916c"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4ODE5NzAx", "url": "https://github.com/quarkusio/quarkus/pull/7546#pullrequestreview-368819701", "createdAt": "2020-03-04T14:25:34Z", "commit": {"oid": "c0d6e75e4b1012b3e74595fe6c4740812446916c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDoyNTozNFrOFxvQeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNDoyNTozNFrOFxvQeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzY5ODgxMA==", "bodyText": "This solution is likely far more complex than necessary.  Before we go to this extreme, could you try wrapping the POSIX-specific code in a call to com.oracle.svm.core.os.IsDefined#isLinux/#isDarwin?  These values are constant folded and thus allow conditional compilation.", "url": "https://github.com/quarkusio/quarkus/pull/7546#discussion_r387698810", "createdAt": "2020-03-04T14:25:34Z", "author": {"login": "dmlloyd"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/graal/DiagnosticPrinter.java", "diffHunk": "@@ -70,4 +44,6 @@ public static void printDiagnostics(PrintStream w) {\n             }\n         }\n     }\n+\n+    protected abstract void printTid(PrintStream w, Thread thread);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0d6e75e4b1012b3e74595fe6c4740812446916c"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MTc2Nzg5", "url": "https://github.com/quarkusio/quarkus/pull/7546#pullrequestreview-369176789", "createdAt": "2020-03-04T22:38:47Z", "commit": {"oid": "02b51baf6439573f61f647c883be83b12c0c9a45"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7a7dd7516d857094244538f72b8c498a352254c", "author": {"user": {"login": "gwenneg", "name": "Gwenneg Lepage"}}, "url": "https://github.com/quarkusio/quarkus/commit/a7a7dd7516d857094244538f72b8c498a352254c", "committedDate": "2020-03-04T22:48:48Z", "message": "Make DiagnosticPrinter compatible with Windows"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02b51baf6439573f61f647c883be83b12c0c9a45", "author": {"user": {"login": "gwenneg", "name": "Gwenneg Lepage"}}, "url": "https://github.com/quarkusio/quarkus/commit/02b51baf6439573f61f647c883be83b12c0c9a45", "committedDate": "2020-03-04T22:15:41Z", "message": "Simplify this PR using IsDefined"}, "afterCommit": {"oid": "a7a7dd7516d857094244538f72b8c498a352254c", "author": {"user": {"login": "gwenneg", "name": "Gwenneg Lepage"}}, "url": "https://github.com/quarkusio/quarkus/commit/a7a7dd7516d857094244538f72b8c498a352254c", "committedDate": "2020-03-04T22:48:48Z", "message": "Make DiagnosticPrinter compatible with Windows"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MzYyMTM4", "url": "https://github.com/quarkusio/quarkus/pull/7546#pullrequestreview-369362138", "createdAt": "2020-03-05T08:10:08Z", "commit": {"oid": "a7a7dd7516d857094244538f72b8c498a352254c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4099, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}