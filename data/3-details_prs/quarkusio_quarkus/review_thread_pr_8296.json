{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MjE3Njc4", "number": 8296, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDo0Mzo0MlrODtSAyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDo0Mzo0MlrODtSAyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4ODA3NjI3OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/cdi-reference.adoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDo0Mzo0MlrOF-nfrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODozMDowMlrOF-2GSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwMzExNw==", "bodyText": "How does this work for producer methods? You talk about them in the paragraph above but this section only mentions classes.", "url": "https://github.com/quarkusio/quarkus/pull/8296#discussion_r401203117", "createdAt": "2020-03-31T20:43:42Z", "author": {"login": "stuartwdouglas"}, "path": "docs/src/main/asciidoc/cdi-reference.adoc", "diffHunk": "@@ -408,6 +426,33 @@ public class CustomTracerConfiguration {\n `@DefaultBean` allows extensions (or any other code for that matter) to provide defaults while backing off if beans of that type are supplied in any\n way Quarkus supports.\n \n+=== Declaring Selected Alternatives\n+\n+In CDI, an alternative bean may be selected either globally for an application by means of `@Priority`, or for a bean archive using a `beans.xml` descriptor.\n+Quarkus has a simplified bean discovery and the content of `beans.xml` is ignored.\n+\n+The disadvantage of `@Priority` is that it has `@Target({ TYPE, PARAMETER })` and so it cannot be used for producer methods and fields.\n+To address this problem and to simplify the code Quarkus provides the `io.quarkus.arc.AlternativePriority` annotation.\n+It's basically a shortcut for `@Alternative` plus `@Priority`.\n+Additionaly, it can be used for producers.\n+\n+However, it is also possible to select alternatives for an application using the unified configuration.\n+The `quarkus.arc.selected-alternatives` property accepts a list of string values.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ece8b927061560ad134b43f10d798c35600c4d4"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQzNjg5OA==", "bodyText": "You should state the declaring class for producers - it's the same as in beans.xml. I'll update the docs.", "url": "https://github.com/quarkusio/quarkus/pull/8296#discussion_r401436898", "createdAt": "2020-04-01T08:20:36Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/cdi-reference.adoc", "diffHunk": "@@ -408,6 +426,33 @@ public class CustomTracerConfiguration {\n `@DefaultBean` allows extensions (or any other code for that matter) to provide defaults while backing off if beans of that type are supplied in any\n way Quarkus supports.\n \n+=== Declaring Selected Alternatives\n+\n+In CDI, an alternative bean may be selected either globally for an application by means of `@Priority`, or for a bean archive using a `beans.xml` descriptor.\n+Quarkus has a simplified bean discovery and the content of `beans.xml` is ignored.\n+\n+The disadvantage of `@Priority` is that it has `@Target({ TYPE, PARAMETER })` and so it cannot be used for producer methods and fields.\n+To address this problem and to simplify the code Quarkus provides the `io.quarkus.arc.AlternativePriority` annotation.\n+It's basically a shortcut for `@Alternative` plus `@Priority`.\n+Additionaly, it can be used for producers.\n+\n+However, it is also possible to select alternatives for an application using the unified configuration.\n+The `quarkus.arc.selected-alternatives` property accepts a list of string values.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwMzExNw=="}, "originalCommit": {"oid": "1ece8b927061560ad134b43f10d798c35600c4d4"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ0MjM3Nw==", "bodyText": "Is it better now?", "url": "https://github.com/quarkusio/quarkus/pull/8296#discussion_r401442377", "createdAt": "2020-04-01T08:30:02Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/cdi-reference.adoc", "diffHunk": "@@ -408,6 +426,33 @@ public class CustomTracerConfiguration {\n `@DefaultBean` allows extensions (or any other code for that matter) to provide defaults while backing off if beans of that type are supplied in any\n way Quarkus supports.\n \n+=== Declaring Selected Alternatives\n+\n+In CDI, an alternative bean may be selected either globally for an application by means of `@Priority`, or for a bean archive using a `beans.xml` descriptor.\n+Quarkus has a simplified bean discovery and the content of `beans.xml` is ignored.\n+\n+The disadvantage of `@Priority` is that it has `@Target({ TYPE, PARAMETER })` and so it cannot be used for producer methods and fields.\n+To address this problem and to simplify the code Quarkus provides the `io.quarkus.arc.AlternativePriority` annotation.\n+It's basically a shortcut for `@Alternative` plus `@Priority`.\n+Additionaly, it can be used for producers.\n+\n+However, it is also possible to select alternatives for an application using the unified configuration.\n+The `quarkus.arc.selected-alternatives` property accepts a list of string values.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwMzExNw=="}, "originalCommit": {"oid": "1ece8b927061560ad134b43f10d798c35600c4d4"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3713, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}