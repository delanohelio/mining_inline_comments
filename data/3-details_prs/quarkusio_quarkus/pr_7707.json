{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NjkzNzM1", "number": 7707, "title": "Qute - support nested expressions/virtual methods as virtual methods \u2026", "bodyText": "\u2026parameters\n\nresolves #7592", "createdAt": "2020-03-09T16:38:48Z", "url": "https://github.com/quarkusio/quarkus/pull/7707", "merged": true, "mergeCommit": {"oid": "dd7935ee1b49306c0fab07fe8f16ef7d250da65c"}, "closed": true, "closedAt": "2020-03-10T15:59:36Z", "author": {"login": "mkouba"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMSVA2gFqTM3MTkzNDMxNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMUj5YgFqTM3MjA4MzcxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxOTM0MzE0", "url": "https://github.com/quarkusio/quarkus/pull/7707#pullrequestreview-371934314", "createdAt": "2020-03-10T13:10:22Z", "commit": {"oid": "63582775b56ed663148c18abae04058a88f7f485"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMzoxMDoyMlrOF0OCCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMzoxMjozM1rOF0OHZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMwMDE2OA==", "bodyText": "How different is a virtual method from a @TemplateExtension?", "url": "https://github.com/quarkusio/quarkus/pull/7707#discussion_r390300168", "createdAt": "2020-03-10T13:10:22Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/qute-reference.adoc", "diffHunk": "@@ -242,6 +242,47 @@ If you need to render the unescaped value:\n <1> `title` that resolves to `Expressions & Escapes` will be rendered as `Expressions &amp;amp; Escapes`\n <2> `paragraph` that resolves to `<p>My text!</p>` will be rendered as `<p>My text!</p>`\n \n+===== Virtual Methods\n+\n+A virtual method is a part of an expression that looks like a regular Java method invocation.\n+It's called \"virtual\" because it does not have to match the actual method of a Java class.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63582775b56ed663148c18abae04058a88f7f485"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDMwMTU0Mw==", "bodyText": "It would be nice to add a snippet for the buildName virtual method (much easier than explaining it) \ud83d\ude04", "url": "https://github.com/quarkusio/quarkus/pull/7707#discussion_r390301543", "createdAt": "2020-03-10T13:12:33Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/qute-reference.adoc", "diffHunk": "@@ -242,6 +242,47 @@ If you need to render the unescaped value:\n <1> `title` that resolves to `Expressions & Escapes` will be rendered as `Expressions &amp;amp; Escapes`\n <2> `paragraph` that resolves to `<p>My text!</p>` will be rendered as `<p>My text!</p>`\n \n+===== Virtual Methods\n+\n+A virtual method is a part of an expression that looks like a regular Java method invocation.\n+It's called \"virtual\" because it does not have to match the actual method of a Java class.\n+In fact, any virtual method is handled by a value resolver.\n+The only difference compared to regular parts of an expression is that for a virtual method a value resolver accepts parameters that are also expressions.\n+Parameters are always evaluated first.\n+\n+.Virtual Method Example\n+[source,html]\n+----\n+<html>\n+<h1>{item.buildName(item.name,5)}</h1> <1>\n+</html>\n+----\n+<1> `buildName(item.name,5)` represents a virtual method with name `buildName` and two parameters: `item.name` and `5` (integer literal). ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63582775b56ed663148c18abae04058a88f7f485"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84ec75662431342f80dd1f35de2f9961ed865476", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/84ec75662431342f80dd1f35de2f9961ed865476", "committedDate": "2020-03-10T14:33:44Z", "message": "Qute - support nested expressions/virtual methods as virtual methods parameters\n\n- resolves #7592"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63582775b56ed663148c18abae04058a88f7f485", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/63582775b56ed663148c18abae04058a88f7f485", "committedDate": "2020-03-09T16:33:53Z", "message": "Qute - support nested expressions/virtual methods as virtual methods parameters\n\n- resolves #7592"}, "afterCommit": {"oid": "84ec75662431342f80dd1f35de2f9961ed865476", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/84ec75662431342f80dd1f35de2f9961ed865476", "committedDate": "2020-03-10T14:33:44Z", "message": "Qute - support nested expressions/virtual methods as virtual methods parameters\n\n- resolves #7592"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMDgzNzE4", "url": "https://github.com/quarkusio/quarkus/pull/7707#pullrequestreview-372083718", "createdAt": "2020-03-10T15:50:29Z", "commit": {"oid": "84ec75662431342f80dd1f35de2f9961ed865476"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3987, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}