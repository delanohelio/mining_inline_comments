{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NjUxODAz", "number": 11342, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzowMDozMFrOEiNc2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzoxMjoxN1rOEiNt9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzA3NDE3OnYy", "diffSide": "RIGHT", "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzowMDozMFrOHP9atw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODowNDoxMFrOHQSpIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5Njk1MQ==", "bodyText": "Please add javadoc here explaining the purpose of this class", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486496951", "createdAt": "2020-09-10T17:00:30Z", "author": {"login": "marcinczeczko"}, "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.security.KeyStore;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.TrustManagerFactory;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import software.amazon.awssdk.http.TlsTrustManagersProvider;\n+\n+public class FileTlsTrustManagersProvider implements TlsTrustManagersProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfedb5529a59f6544d1142f9137e413d3c78e108"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg0NDcwNw==", "bodyText": "Will do it.", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486844707", "createdAt": "2020-09-11T08:04:10Z", "author": {"login": "antonwiens"}, "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.security.KeyStore;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.TrustManagerFactory;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import software.amazon.awssdk.http.TlsTrustManagersProvider;\n+\n+public class FileTlsTrustManagersProvider implements TlsTrustManagersProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQ5Njk1MQ=="}, "originalCommit": {"oid": "dfedb5529a59f6544d1142f9137e413d3c78e108"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzA5NTk3OnYy", "diffSide": "RIGHT", "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzowNjoyNFrOHP9oKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwODozMTowMlrOHQThag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMDM5NQ==", "bodyText": "Maybe it's safer to use platform default trustmanager algorithm via TrustManagerFactory.getDefaultAlgorithm() ?", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486500395", "createdAt": "2020-09-10T17:06:24Z", "author": {"login": "marcinczeczko"}, "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.security.KeyStore;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.TrustManagerFactory;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import software.amazon.awssdk.http.TlsTrustManagersProvider;\n+\n+public class FileTlsTrustManagersProvider implements TlsTrustManagersProvider {\n+\n+    private final Path path;\n+    private final String type;\n+    private final char[] password;\n+\n+    public FileTlsTrustManagersProvider(FileStoreTlsManagersProviderConfig fileStore) {\n+        path = fileStore.path.get();\n+        type = fileStore.type.get();\n+        password = fileStore.password.map(String::toCharArray).orElse(null);\n+    }\n+\n+    @Override\n+    public TrustManager[] trustManagers() {\n+        try (InputStream storeInputStream = Files.newInputStream(path)) {\n+            KeyStore keyStore = KeyStore.getInstance(type);\n+            keyStore.load(storeInputStream, password);\n+            TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfedb5529a59f6544d1142f9137e413d3c78e108"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg1OTExNA==", "bodyText": "Will do that.", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486859114", "createdAt": "2020-09-11T08:31:02Z", "author": {"login": "antonwiens"}, "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/FileTlsTrustManagersProvider.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.security.KeyStore;\n+import java.security.KeyStoreException;\n+import java.security.NoSuchAlgorithmException;\n+import java.security.cert.CertificateException;\n+\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.TrustManagerFactory;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import software.amazon.awssdk.http.TlsTrustManagersProvider;\n+\n+public class FileTlsTrustManagersProvider implements TlsTrustManagersProvider {\n+\n+    private final Path path;\n+    private final String type;\n+    private final char[] password;\n+\n+    public FileTlsTrustManagersProvider(FileStoreTlsManagersProviderConfig fileStore) {\n+        path = fileStore.path.get();\n+        type = fileStore.type.get();\n+        password = fileStore.password.map(String::toCharArray).orElse(null);\n+    }\n+\n+    @Override\n+    public TrustManager[] trustManagers() {\n+        try (InputStream storeInputStream = Files.newInputStream(path)) {\n+            KeyStore keyStore = KeyStore.getInstance(type);\n+            keyStore.load(storeInputStream, password);\n+            TrustManagerFactory tmf = TrustManagerFactory.getInstance(\"SunX509\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMDM5NQ=="}, "originalCommit": {"oid": "dfedb5529a59f6544d1142f9137e413d3c78e108"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzEwNTE4OnYy", "diffSide": "RIGHT", "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/NoneTlsTrustManagersProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzowOTowN1rOHP9t-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzowOTowN1rOHP9t-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMTg4MA==", "bodyText": "Same here, please add some javadoc here", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486501880", "createdAt": "2020-09-10T17:09:07Z", "author": {"login": "marcinczeczko"}, "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/NoneTlsTrustManagersProvider.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import java.security.cert.X509Certificate;\n+\n+import javax.net.ssl.TrustManager;\n+import javax.net.ssl.X509TrustManager;\n+\n+import software.amazon.awssdk.http.TlsTrustManagersProvider;\n+\n+public class NoneTlsTrustManagersProvider implements TlsTrustManagersProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfedb5529a59f6544d1142f9137e413d3c78e108"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzExMTgyOnYy", "diffSide": "RIGHT", "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/SystemPropertyTlsTrustManagersProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzoxMDo1MlrOHP9yCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzoxMDo1MlrOHP9yCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMjkyMw==", "bodyText": "couple words explanations  (javadoc) would be usefull", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486502923", "createdAt": "2020-09-10T17:10:52Z", "author": {"login": "marcinczeczko"}, "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/SystemPropertyTlsTrustManagersProvider.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import javax.net.ssl.TrustManager;\n+\n+import software.amazon.awssdk.http.TlsTrustManagersProvider;\n+\n+public class SystemPropertyTlsTrustManagersProvider implements TlsTrustManagersProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfedb5529a59f6544d1142f9137e413d3c78e108"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MzExNzk3OnYy", "diffSide": "RIGHT", "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/TlsTrustManagersProviderConfig.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzoxMjoxN1rOHP91qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMDo0ODoxOFrOHdte8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMzg0OA==", "bodyText": "maybe trust-all would be a better name, wdyt ?", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486503848", "createdAt": "2020-09-10T17:12:17Z", "author": {"login": "marcinczeczko"}, "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/TlsTrustManagersProviderConfig.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import io.quarkus.runtime.annotations.ConfigGroup;\n+import io.quarkus.runtime.annotations.ConfigItem;\n+\n+@ConfigGroup\n+public class TlsTrustManagersProviderConfig {\n+\n+    // @formatter:off\n+    /**\n+     * TLS trust managers provider type.\n+     *\n+     * Available providers:\n+     *\n+     * * `insecure` - Use this provider if you don't want to validate the servers certificates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfedb5529a59f6544d1142f9137e413d3c78e108"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njg1ODM5OQ==", "bodyText": "Trusting all certificates is generally a bad thing to do, thats why i choose a \"negative\" name. But i can change it to \"trust-all\" if you prefer it.", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r486858399", "createdAt": "2020-09-11T08:29:44Z", "author": {"login": "antonwiens"}, "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/TlsTrustManagersProviderConfig.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import io.quarkus.runtime.annotations.ConfigGroup;\n+import io.quarkus.runtime.annotations.ConfigItem;\n+\n+@ConfigGroup\n+public class TlsTrustManagersProviderConfig {\n+\n+    // @formatter:off\n+    /**\n+     * TLS trust managers provider type.\n+     *\n+     * Available providers:\n+     *\n+     * * `insecure` - Use this provider if you don't want to validate the servers certificates.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMzg0OA=="}, "originalCommit": {"oid": "dfedb5529a59f6544d1142f9137e413d3c78e108"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkxNTk1NQ==", "bodyText": "I'm a bit late to the party but let's go with trust-all. It's more consistent with the other parts of the code.", "url": "https://github.com/quarkusio/quarkus/pull/11342#discussion_r500915955", "createdAt": "2020-10-07T10:48:18Z", "author": {"login": "gsmet"}, "path": "extensions/amazon-services/common/runtime/src/main/java/io/quarkus/amazon/common/runtime/TlsTrustManagersProviderConfig.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.quarkus.amazon.common.runtime;\n+\n+import io.quarkus.runtime.annotations.ConfigGroup;\n+import io.quarkus.runtime.annotations.ConfigItem;\n+\n+@ConfigGroup\n+public class TlsTrustManagersProviderConfig {\n+\n+    // @formatter:off\n+    /**\n+     * TLS trust managers provider type.\n+     *\n+     * Available providers:\n+     *\n+     * * `insecure` - Use this provider if you don't want to validate the servers certificates.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMzg0OA=="}, "originalCommit": {"oid": "dfedb5529a59f6544d1142f9137e413d3c78e108"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 728, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}