{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MDk5NDky", "number": 12142, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOToyNjo1NlrOEkcsmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDo1NDo1OVrOEk6ygw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjU0MzYxOnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOToyNjo1NlrOHTZeZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOToyNjo1NlrOHTZeZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwMjM3NQ==", "bodyText": "We avoid star imports.", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r490102375", "createdAt": "2020-09-17T09:26:56Z", "author": {"login": "gsmet"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSFilter.java", "diffHunk": "@@ -1,11 +1,8 @@\n package io.quarkus.vertx.http.runtime.cors;\n \n-import java.util.ArrayList;\n-import java.util.Collections;\n-import java.util.List;\n-import java.util.Objects;\n-import java.util.Optional;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b219362c745a049ea2a17943004be4273d9431c"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjU0Nzk2OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOToyODowMFrOHTZhGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjowMTozMFrOHTetlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwMzA2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return list.isEmpty() || list.size() == 1 && \"*\".equals(list.get(0));\n          \n          \n            \n                    return list.isEmpty() || (list.size() == 1 && \"*\".equals(list.get(0)));\n          \n      \n    \n    \n  \n\nalways better to be explicit.", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r490103067", "createdAt": "2020-09-17T09:28:00Z", "author": {"login": "gsmet"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSFilter.java", "diffHunk": "@@ -121,4 +119,13 @@ public void handle(RoutingContext event) {\n             }\n         }\n     }\n-}\n+\n+    private boolean containsOnlyWildcard(Optional<List<String>> optionalList) {\n+        if (!optionalList.isPresent()) {\n+            return true;\n+        }\n+\n+        List<String> list = optionalList.get();\n+        return list.isEmpty() || list.size() == 1 && \"*\".equals(list.get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b219362c745a049ea2a17943004be4273d9431c"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE4ODE4MQ==", "bodyText": "Yeah I think this is important too", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r490188181", "createdAt": "2020-09-17T12:01:30Z", "author": {"login": "ia3andy"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSFilter.java", "diffHunk": "@@ -121,4 +119,13 @@ public void handle(RoutingContext event) {\n             }\n         }\n     }\n-}\n+\n+    private boolean containsOnlyWildcard(Optional<List<String>> optionalList) {\n+        if (!optionalList.isPresent()) {\n+            return true;\n+        }\n+\n+        List<String> list = optionalList.get();\n+        return list.isEmpty() || list.size() == 1 && \"*\".equals(list.get(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwMzA2Nw=="}, "originalCommit": {"oid": "2b219362c745a049ea2a17943004be4273d9431c"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjU1MTE2OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSConfig.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOToyODo1M1rOHTZjJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTozODo1M1rOHUcmeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwMzU4OQ==", "bodyText": "Why this change, it doesn't look related to dealing with *?", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r490103589", "createdAt": "2020-09-17T09:28:53Z", "author": {"login": "gsmet"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSConfig.java", "diffHunk": "@@ -31,7 +30,7 @@\n      * default: returns any requested method as valid\n      */\n     @ConfigItem\n-    public Optional<List<HttpMethod>> methods;\n+    public Optional<List<String>> methods;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b219362c745a049ea2a17943004be4273d9431c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEyODg0NQ==", "bodyText": "@gsmet it change was same added possibility  use * for cors methods. Can you promt me how best to do it?", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r490128845", "createdAt": "2020-09-17T10:10:39Z", "author": {"login": "xumk"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSConfig.java", "diffHunk": "@@ -31,7 +30,7 @@\n      * default: returns any requested method as valid\n      */\n     @ConfigItem\n-    public Optional<List<HttpMethod>> methods;\n+    public Optional<List<String>> methods;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwMzU4OQ=="}, "originalCommit": {"oid": "2b219362c745a049ea2a17943004be4273d9431c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE4NzYyNQ==", "bodyText": "I think it's because * is not in the HttpMethod Enum", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r490187625", "createdAt": "2020-09-17T12:00:23Z", "author": {"login": "ia3andy"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSConfig.java", "diffHunk": "@@ -31,7 +30,7 @@\n      * default: returns any requested method as valid\n      */\n     @ConfigItem\n-    public Optional<List<HttpMethod>> methods;\n+    public Optional<List<String>> methods;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwMzU4OQ=="}, "originalCommit": {"oid": "2b219362c745a049ea2a17943004be4273d9431c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTIwMjE2OA==", "bodyText": "Ah OK, totally missed it, sorry.", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r491202168", "createdAt": "2020-09-18T21:38:53Z", "author": {"login": "gsmet"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSConfig.java", "diffHunk": "@@ -31,7 +30,7 @@\n      * default: returns any requested method as valid\n      */\n     @ConfigItem\n-    public Optional<List<HttpMethod>> methods;\n+    public Optional<List<String>> methods;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwMzU4OQ=="}, "originalCommit": {"oid": "2b219362c745a049ea2a17943004be4273d9431c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzExMjYyOnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjowNDowMVrOHTezAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjowNDowMVrOHTezAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE4OTU3MQ==", "bodyText": "Maybe you can still convert them to HttpMethod Enum to avoid having invalid inputs?", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r490189571", "createdAt": "2020-09-17T12:04:01Z", "author": {"login": "ia3andy"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSFilter.java", "diffHunk": "@@ -58,9 +55,10 @@ private void processMethods(HttpServerResponse response, String allowMethodsValu\n             }\n \n             List<String> validRequestedMethods = new ArrayList<>();\n-            for (HttpMethod configMethod : corsConfig.methods.get()) {\n-                if (requestedMethods.contains(configMethod.name().toLowerCase())) {\n-                    validRequestedMethods.add(configMethod.name());\n+            List<String> methods = corsConfig.methods.get().stream().map(String::trim).collect(Collectors.toList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b219362c745a049ea2a17943004be4273d9431c"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzEyMzEzOnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSFilter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjowNjo1N1rOHTe5bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMjo0OTo0OFrOHTgc_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE5MTIxNA==", "bodyText": "do you have a better label than containsOnlyWildcard for this method?\nmaybe something like isConfiguredWithWildcard", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r490191214", "createdAt": "2020-09-17T12:06:57Z", "author": {"login": "ia3andy"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSFilter.java", "diffHunk": "@@ -121,4 +119,13 @@ public void handle(RoutingContext event) {\n             }\n         }\n     }\n-}\n+\n+    private boolean containsOnlyWildcard(Optional<List<String>> optionalList) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b219362c745a049ea2a17943004be4273d9431c"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE5MjM4MA==", "bodyText": "Maybe you could make this static and add a small test making sure it responds correctly?", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r490192380", "createdAt": "2020-09-17T12:09:01Z", "author": {"login": "ia3andy"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSFilter.java", "diffHunk": "@@ -121,4 +119,13 @@ public void handle(RoutingContext event) {\n             }\n         }\n     }\n-}\n+\n+    private boolean containsOnlyWildcard(Optional<List<String>> optionalList) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE5MTIxNA=="}, "originalCommit": {"oid": "2b219362c745a049ea2a17943004be4273d9431c"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDIxNjcwMg==", "bodyText": "Maybe you could make this static and add a small test making sure it responds correctly?\n\nActually, it is a good one. This should have been tested indirectly in this CORSWildcardSecurityTestCase but now that I've seen this suggestion I've realized CORSWildcardSecurityTestCase needs its application properties updated.\n@xumk please update it to check both wildcard origins and headers", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r490216702", "createdAt": "2020-09-17T12:49:48Z", "author": {"login": "sberyozkin"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/cors/CORSFilter.java", "diffHunk": "@@ -121,4 +119,13 @@ public void handle(RoutingContext event) {\n             }\n         }\n     }\n-}\n+\n+    private boolean containsOnlyWildcard(Optional<List<String>> optionalList) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE5MTIxNA=="}, "originalCommit": {"oid": "2b219362c745a049ea2a17943004be4273d9431c"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MTQ3Mzk1OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/cors/CORSWildcardStarSecurityTestCase.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDo1NDo1OVrOHUIGxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMToxNTozNlrOHUIv3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg2NjM3NQ==", "bodyText": "@xumk I guess you could extend CORSWildcardSecurityTestCase.java and just overrides the config?", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r490866375", "createdAt": "2020-09-18T10:54:59Z", "author": {"login": "ia3andy"}, "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/cors/CORSWildcardStarSecurityTestCase.java", "diffHunk": "@@ -0,0 +1,153 @@\n+package io.quarkus.vertx.http.cors;\n+\n+import static io.restassured.RestAssured.given;\n+\n+import java.util.function.Supplier;\n+\n+import org.hamcrest.Matchers;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.security.test.utils.TestIdentityController;\n+import io.quarkus.security.test.utils.TestIdentityProvider;\n+import io.quarkus.test.QuarkusUnitTest;\n+import io.quarkus.vertx.http.security.PathHandler;\n+\n+public class CORSWildcardStarSecurityTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "beaa1ac5da0b7e9f22ec7fb1c0105c99a62a07c3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg3MDQ4OA==", "bodyText": "@ia3andy I thought which will be better it have two test for two configuration. First test configuration is not include this properties (work CORS like before) and second test configuration is include this properties with * values", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r490870488", "createdAt": "2020-09-18T11:02:36Z", "author": {"login": "xumk"}, "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/cors/CORSWildcardStarSecurityTestCase.java", "diffHunk": "@@ -0,0 +1,153 @@\n+package io.quarkus.vertx.http.cors;\n+\n+import static io.restassured.RestAssured.given;\n+\n+import java.util.function.Supplier;\n+\n+import org.hamcrest.Matchers;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.security.test.utils.TestIdentityController;\n+import io.quarkus.security.test.utils.TestIdentityProvider;\n+import io.quarkus.test.QuarkusUnitTest;\n+import io.quarkus.vertx.http.security.PathHandler;\n+\n+public class CORSWildcardStarSecurityTestCase {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg2NjM3NQ=="}, "originalCommit": {"oid": "beaa1ac5da0b7e9f22ec7fb1c0105c99a62a07c3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg3Njg5Mg==", "bodyText": "ah ok, I misread it ;-)", "url": "https://github.com/quarkusio/quarkus/pull/12142#discussion_r490876892", "createdAt": "2020-09-18T11:15:36Z", "author": {"login": "ia3andy"}, "path": "extensions/vertx-http/deployment/src/test/java/io/quarkus/vertx/http/cors/CORSWildcardStarSecurityTestCase.java", "diffHunk": "@@ -0,0 +1,153 @@\n+package io.quarkus.vertx.http.cors;\n+\n+import static io.restassured.RestAssured.given;\n+\n+import java.util.function.Supplier;\n+\n+import org.hamcrest.Matchers;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.security.test.utils.TestIdentityController;\n+import io.quarkus.security.test.utils.TestIdentityProvider;\n+import io.quarkus.test.QuarkusUnitTest;\n+import io.quarkus.vertx.http.security.PathHandler;\n+\n+public class CORSWildcardStarSecurityTestCase {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg2NjM3NQ=="}, "originalCommit": {"oid": "beaa1ac5da0b7e9f22ec7fb1c0105c99a62a07c3"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 292, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}