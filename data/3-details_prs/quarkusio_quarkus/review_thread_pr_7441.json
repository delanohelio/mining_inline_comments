{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMzA4MTg4", "number": 7441, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNToyOTozMVrODj2jaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNTo0OTo0MFrODj3C6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4OTIwNTU1OnYy", "diffSide": "RIGHT", "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/BasicMultiModuleTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNToyOTozMVrOFv44QQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNToyOTozMVrOFv44QQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc1OTI5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(Files.exists(commonLibs)).isEqualTo(true);\n          \n          \n            \n                    assertThat(commonLibs).exists();", "url": "https://github.com/quarkusio/quarkus/pull/7441#discussion_r385759297", "createdAt": "2020-02-28T15:29:31Z", "author": {"login": "gastaldi"}, "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/BasicMultiModuleTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package io.quarkus.gradle;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Properties;\n+\n+import org.gradle.testkit.runner.BuildResult;\n+import org.gradle.testkit.runner.GradleRunner;\n+import org.gradle.testkit.runner.TaskOutcome;\n+\n+import org.junit.jupiter.api.Test;\n+\n+\n+public class BasicMultiModuleTest extends QuarkusGradleTestBase {\n+\n+    @Test\n+    public void testBasicMultiModuleBuild() throws Exception {\n+\n+        final File projectDir = getProjectDir(\"basic-multi-module-project\");\n+        \n+        BuildResult build = GradleRunner.create()\n+                .forwardOutput()\n+                .withPluginClasspath()\n+                .withArguments(arguments(\":application:quarkusBuild\"))\n+                .withProjectDir(projectDir)\n+                .build();\n+        \n+        final Path commonLibs = projectDir.toPath().resolve(\"common\").resolve(\"build\").resolve(\"libs\");\n+        assertThat(Files.exists(commonLibs)).isEqualTo(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff351a1551a0c230ebcc287d764140732aff9af2"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4OTI4NjE3OnYy", "diffSide": "RIGHT", "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/BasicMultiModuleTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNTo0OTo0MFrOFv5ouw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNTo0OTo0MFrOFv5ouw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc3MTcwNw==", "bodyText": "Same as above", "url": "https://github.com/quarkusio/quarkus/pull/7441#discussion_r385771707", "createdAt": "2020-02-28T15:49:40Z", "author": {"login": "gastaldi"}, "path": "devtools/gradle/src/functionalTest/java/io/quarkus/gradle/BasicMultiModuleTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package io.quarkus.gradle;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.io.FileOutputStream;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.io.OutputStream;\n+import java.net.URISyntaxException;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.Properties;\n+\n+import org.gradle.testkit.runner.BuildResult;\n+import org.gradle.testkit.runner.GradleRunner;\n+import org.gradle.testkit.runner.TaskOutcome;\n+\n+import org.junit.jupiter.api.Test;\n+\n+\n+public class BasicMultiModuleTest extends QuarkusGradleTestBase {\n+\n+    @Test\n+    public void testBasicMultiModuleBuild() throws Exception {\n+\n+        final File projectDir = getProjectDir(\"basic-multi-module-project\");\n+        \n+        BuildResult build = GradleRunner.create()\n+                .forwardOutput()\n+                .withPluginClasspath()\n+                .withArguments(arguments(\":application:quarkusBuild\"))\n+                .withProjectDir(projectDir)\n+                .build();\n+        \n+        final Path commonLibs = projectDir.toPath().resolve(\"common\").resolve(\"build\").resolve(\"libs\");\n+        assertThat(commonLibs).exists();\n+        assertThat(Files.exists(commonLibs.resolve(\"common.jar\"))).isEqualTo(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fa012fb4c55c0eb0dd1ee715732c1bc1a9c2587"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4989, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}