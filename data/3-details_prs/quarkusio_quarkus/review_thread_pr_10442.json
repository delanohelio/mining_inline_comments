{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzODEyNzQ1", "number": 10442, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjoxMDozNFrOELGguA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjoxMDozNFrOELGguA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDc2NDcyOnYy", "diffSide": "RIGHT", "path": "extensions/qute/deployment/src/main/java/io/quarkus/qute/deployment/MessageBundleProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjoxMDozNFrOGshrQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjoyMTo0NFrOGsh0hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MjI3Mw==", "bodyText": "I would just throw the CNFE, I don't think wrapping it adds anything", "url": "https://github.com/quarkusio/quarkus/pull/10442#discussion_r449342273", "createdAt": "2020-07-03T02:10:34Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/qute/deployment/src/main/java/io/quarkus/qute/deployment/MessageBundleProcessor.java", "diffHunk": "@@ -236,11 +237,17 @@ AdditionalBeanBuildItem beans() {\n     void initBundleContext(RecorderContext context, MessageBundleRecorder recorder,\n             List<MessageBundleMethodBuildItem> messageBundleMethods,\n             List<MessageBundleBuildItem> bundles,\n-            BuildProducer<SyntheticBeanBuildItem> syntheticBeans) {\n+            BuildProducer<SyntheticBeanBuildItem> syntheticBeans) throws BuildException {\n \n         Map<String, Map<String, Class<?>>> bundleInterfaces = new HashMap<>();\n         for (MessageBundleBuildItem bundle : bundles) {\n-            Class<?> bundleClass = context.classProxy(bundle.getDefaultBundleInterface().toString());\n+            final Class<?> bundleClass;\n+            try {\n+                bundleClass = Class.forName(bundle.getDefaultBundleInterface().toString(), true,\n+                        Thread.currentThread().getContextClassLoader());\n+            } catch (ClassNotFoundException e) {\n+                throw new BuildException(e, Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6921e6693faea92d939dcabb09539f589382379"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MjkyNg==", "bodyText": "Sounds fine. I'll update it accordingly.", "url": "https://github.com/quarkusio/quarkus/pull/10442#discussion_r449342926", "createdAt": "2020-07-03T02:13:44Z", "author": {"login": "jaikiran"}, "path": "extensions/qute/deployment/src/main/java/io/quarkus/qute/deployment/MessageBundleProcessor.java", "diffHunk": "@@ -236,11 +237,17 @@ AdditionalBeanBuildItem beans() {\n     void initBundleContext(RecorderContext context, MessageBundleRecorder recorder,\n             List<MessageBundleMethodBuildItem> messageBundleMethods,\n             List<MessageBundleBuildItem> bundles,\n-            BuildProducer<SyntheticBeanBuildItem> syntheticBeans) {\n+            BuildProducer<SyntheticBeanBuildItem> syntheticBeans) throws BuildException {\n \n         Map<String, Map<String, Class<?>>> bundleInterfaces = new HashMap<>();\n         for (MessageBundleBuildItem bundle : bundles) {\n-            Class<?> bundleClass = context.classProxy(bundle.getDefaultBundleInterface().toString());\n+            final Class<?> bundleClass;\n+            try {\n+                bundleClass = Class.forName(bundle.getDefaultBundleInterface().toString(), true,\n+                        Thread.currentThread().getContextClassLoader());\n+            } catch (ClassNotFoundException e) {\n+                throw new BuildException(e, Collections.emptyList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MjI3Mw=="}, "originalCommit": {"oid": "b6921e6693faea92d939dcabb09539f589382379"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0NDY0Nw==", "bodyText": "Done. PR updated.", "url": "https://github.com/quarkusio/quarkus/pull/10442#discussion_r449344647", "createdAt": "2020-07-03T02:21:44Z", "author": {"login": "jaikiran"}, "path": "extensions/qute/deployment/src/main/java/io/quarkus/qute/deployment/MessageBundleProcessor.java", "diffHunk": "@@ -236,11 +237,17 @@ AdditionalBeanBuildItem beans() {\n     void initBundleContext(RecorderContext context, MessageBundleRecorder recorder,\n             List<MessageBundleMethodBuildItem> messageBundleMethods,\n             List<MessageBundleBuildItem> bundles,\n-            BuildProducer<SyntheticBeanBuildItem> syntheticBeans) {\n+            BuildProducer<SyntheticBeanBuildItem> syntheticBeans) throws BuildException {\n \n         Map<String, Map<String, Class<?>>> bundleInterfaces = new HashMap<>();\n         for (MessageBundleBuildItem bundle : bundles) {\n-            Class<?> bundleClass = context.classProxy(bundle.getDefaultBundleInterface().toString());\n+            final Class<?> bundleClass;\n+            try {\n+                bundleClass = Class.forName(bundle.getDefaultBundleInterface().toString(), true,\n+                        Thread.currentThread().getContextClassLoader());\n+            } catch (ClassNotFoundException e) {\n+                throw new BuildException(e, Collections.emptyList());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0MjI3Mw=="}, "originalCommit": {"oid": "b6921e6693faea92d939dcabb09539f589382379"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2548, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}