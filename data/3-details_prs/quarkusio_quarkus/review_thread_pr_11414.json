{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4NzcxMzgz", "number": 11414, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzoxNDoxMFrOEZCj5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzoxNDoxMFrOEZCj5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NjkxODE1OnYy", "diffSide": "RIGHT", "path": "devtools/gradle/src/main/java/io/quarkus/gradle/builder/QuarkusModelBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzoxNDoxMFrOHBoNGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMzoxODoxN1rOHBoW_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2OTMzOA==", "bodyText": "LinkedHashSet would be better, no?", "url": "https://github.com/quarkusio/quarkus/pull/11414#discussion_r471469338", "createdAt": "2020-08-17T13:14:10Z", "author": {"login": "gastaldi"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/builder/QuarkusModelBuilder.java", "diffHunk": "@@ -81,24 +83,24 @@ public Object buildAll(String modelName, Project project) {\n \n     @Override\n     public Object buildAll(String modelName, ModelParameter parameter, Project project) {\n-        LaunchMode mode = LaunchMode.valueOf(((ModelParameter) parameter).getMode());\n+        LaunchMode mode = LaunchMode.valueOf(parameter.getMode());\n \n         final Set<org.gradle.api.artifacts.Dependency> deploymentDeps = getEnforcedPlatforms(project);\n-        final Map<ArtifactCoords, Dependency> appDependencies = new HashMap<>();\n+        final Map<ArtifactCoords, Dependency> appDependencies = new LinkedHashMap<>();\n         final Set<ArtifactCoords> visitedDeps = new HashSet<>();\n \n         final ResolvedConfiguration configuration = classpathConfig(project, mode).getResolvedConfiguration();\n         collectDependencies(configuration, mode, project, appDependencies);\n         collectFirstMetDeploymentDeps(configuration.getFirstLevelModuleDependencies(), appDependencies,\n                 deploymentDeps, visitedDeps);\n \n-        final Set<Dependency> extensionDependencies = collectExtensionDependencies(project, deploymentDeps);\n+        final List<Dependency> extensionDependencies = collectExtensionDependencies(project, deploymentDeps);\n \n         ArtifactCoords appArtifactCoords = new ArtifactCoordsImpl(project.getGroup().toString(), project.getName(),\n                 project.getVersion().toString());\n \n         return new QuarkusModelImpl(new WorkspaceImpl(appArtifactCoords, getWorkspace(project.getRootProject(), mode)),\n-                new HashSet<>(appDependencies.values()),\n+                new LinkedList<>(appDependencies.values()),\n                 extensionDependencies);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e70a1bf40dfc4deed11e50f59f82b9d84fb6fc56"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ3MTg2OQ==", "bodyText": "right, this way we keep an ordered set.", "url": "https://github.com/quarkusio/quarkus/pull/11414#discussion_r471471869", "createdAt": "2020-08-17T13:18:17Z", "author": {"login": "glefloch"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/builder/QuarkusModelBuilder.java", "diffHunk": "@@ -81,24 +83,24 @@ public Object buildAll(String modelName, Project project) {\n \n     @Override\n     public Object buildAll(String modelName, ModelParameter parameter, Project project) {\n-        LaunchMode mode = LaunchMode.valueOf(((ModelParameter) parameter).getMode());\n+        LaunchMode mode = LaunchMode.valueOf(parameter.getMode());\n \n         final Set<org.gradle.api.artifacts.Dependency> deploymentDeps = getEnforcedPlatforms(project);\n-        final Map<ArtifactCoords, Dependency> appDependencies = new HashMap<>();\n+        final Map<ArtifactCoords, Dependency> appDependencies = new LinkedHashMap<>();\n         final Set<ArtifactCoords> visitedDeps = new HashSet<>();\n \n         final ResolvedConfiguration configuration = classpathConfig(project, mode).getResolvedConfiguration();\n         collectDependencies(configuration, mode, project, appDependencies);\n         collectFirstMetDeploymentDeps(configuration.getFirstLevelModuleDependencies(), appDependencies,\n                 deploymentDeps, visitedDeps);\n \n-        final Set<Dependency> extensionDependencies = collectExtensionDependencies(project, deploymentDeps);\n+        final List<Dependency> extensionDependencies = collectExtensionDependencies(project, deploymentDeps);\n \n         ArtifactCoords appArtifactCoords = new ArtifactCoordsImpl(project.getGroup().toString(), project.getName(),\n                 project.getVersion().toString());\n \n         return new QuarkusModelImpl(new WorkspaceImpl(appArtifactCoords, getWorkspace(project.getRootProject(), mode)),\n-                new HashSet<>(appDependencies.values()),\n+                new LinkedList<>(appDependencies.values()),\n                 extensionDependencies);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ2OTMzOA=="}, "originalCommit": {"oid": "e70a1bf40dfc4deed11e50f59f82b9d84fb6fc56"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 579, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}