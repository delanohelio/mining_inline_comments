{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMDc5MTE5", "number": 7987, "title": "fix OpenTracing trace context propagation with Fault Tolerance @Asynchronous methods", "bodyText": "There used to be a test for that, but didn't involve @Asynchronous\nmethods, so was in fact useless. This commit changes the test to\nactually call an @Asynchronous method, which revealed an issue.\nThe smallrye-fault-tolerance-tracing-propagation dependency was\nmissing, so trace context propagation didn't actually work.\nThen, the test also uncovered an issue in SmallRye Fault Tolerance\n(see smallrye/smallrye-fault-tolerance#208),\nwhich is why this commit also brings a new version of it.\nIn addition to that, this commit also fixes a devmode issue where\non hot reload, the Jaeger extension tried to register a gauge\nthat was already present. That ended up with an exception.\nAnd finally, this commit also adds a test for tracing JDBC.\nResolves #7981.\nResolves #7982.\nResolves #7984.", "createdAt": "2020-03-19T15:41:48Z", "url": "https://github.com/quarkusio/quarkus/pull/7987", "merged": true, "mergeCommit": {"oid": "8ca1d0d385335499e6847915d64c6f5b69abb87f"}, "closed": true, "closedAt": "2020-04-14T17:53:41Z", "author": {"login": "Ladicek"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPN2OAAFqTM3Nzg0NjAxNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXnTHXgFqTM5MzE2MjYwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3ODQ2MDE1", "url": "https://github.com/quarkusio/quarkus/pull/7987#pullrequestreview-377846015", "createdAt": "2020-03-19T15:42:56Z", "commit": {"oid": "c599c08e48692926f88d072bce86241035df48cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNTo0Mjo1NlrOF40fqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNTo0Mjo1NlrOF40fqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTEyNDY0OA==", "bodyText": "So this is what I'd like to ask about. I'm not exactly sure where to add this dependency so that it also works in user applications (it obviously works in the unit test, which is in the same module :-) ).\nThe intent is that this module is available when both quarkus-smallrye-fault-tolerance and quarkus-smallrye-opentracing are present.", "url": "https://github.com/quarkusio/quarkus/pull/7987#discussion_r395124648", "createdAt": "2020-03-19T15:42:56Z", "author": {"login": "Ladicek"}, "path": "extensions/smallrye-opentracing/deployment/pom.xml", "diffHunk": "@@ -30,6 +30,20 @@\n             <groupId>io.quarkus</groupId>\n             <artifactId>quarkus-smallrye-opentracing</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>io.smallrye</groupId>\n+            <artifactId>smallrye-fault-tolerance-tracing-propagation</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c599c08e48692926f88d072bce86241035df48cd"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c599c08e48692926f88d072bce86241035df48cd", "author": {"user": {"login": "Ladicek", "name": "Ladislav Thon"}}, "url": "https://github.com/quarkusio/quarkus/commit/c599c08e48692926f88d072bce86241035df48cd", "committedDate": "2020-03-19T15:41:25Z", "message": "fix OpenTracing trace context propagation with Fault Tolerance @Asynchronous methods\n\nThere used to be a test for that, but didn't involve `@Asynchronous`\nmethods, so was in fact useless. This commit changes the test to\nactually call an `@Asynchronous` method, which revealed an issue.\nThe `smallrye-fault-tolerance-tracing-propagation` dependency was\nmissing, so trace context propagation didn't actually work.\n\nIn addition to that, this commit also adds a test for tracing JDBC."}, "afterCommit": {"oid": "568e4116bef9a163c0c05ac3c175cd96d399e38b", "author": {"user": {"login": "Ladicek", "name": "Ladislav Thon"}}, "url": "https://github.com/quarkusio/quarkus/commit/568e4116bef9a163c0c05ac3c175cd96d399e38b", "committedDate": "2020-03-25T13:53:01Z", "message": "fix OpenTracing trace context propagation with Fault Tolerance @Asynchronous methods\n\nThere used to be a test for that, but didn't involve `@Asynchronous`\nmethods, so was in fact useless. This commit changes the test to\nactually call an `@Asynchronous` method, which revealed an issue.\nThe `smallrye-fault-tolerance-tracing-propagation` dependency was\nmissing, so trace context propagation didn't actually work.\n\nIn addition to that, this commit also fixes a devmode issue where\non hot reload, the Jaeger extension tried to register a gauge\nthat was already present. That ended up with an exception.\n\nAnd finally, this commit also adds a test for tracing JDBC."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "568e4116bef9a163c0c05ac3c175cd96d399e38b", "author": {"user": {"login": "Ladicek", "name": "Ladislav Thon"}}, "url": "https://github.com/quarkusio/quarkus/commit/568e4116bef9a163c0c05ac3c175cd96d399e38b", "committedDate": "2020-03-25T13:53:01Z", "message": "fix OpenTracing trace context propagation with Fault Tolerance @Asynchronous methods\n\nThere used to be a test for that, but didn't involve `@Asynchronous`\nmethods, so was in fact useless. This commit changes the test to\nactually call an `@Asynchronous` method, which revealed an issue.\nThe `smallrye-fault-tolerance-tracing-propagation` dependency was\nmissing, so trace context propagation didn't actually work.\n\nIn addition to that, this commit also fixes a devmode issue where\non hot reload, the Jaeger extension tried to register a gauge\nthat was already present. That ended up with an exception.\n\nAnd finally, this commit also adds a test for tracing JDBC."}, "afterCommit": {"oid": "72358326329c6b77a7f344bc65bd8ff3defda7f3", "author": {"user": {"login": "Ladicek", "name": "Ladislav Thon"}}, "url": "https://github.com/quarkusio/quarkus/commit/72358326329c6b77a7f344bc65bd8ff3defda7f3", "committedDate": "2020-04-01T14:15:17Z", "message": "fix OpenTracing trace context propagation with Fault Tolerance @Asynchronous methods\n\nThere used to be a test for that, but didn't involve `@Asynchronous`\nmethods, so was in fact useless. This commit changes the test to\nactually call an `@Asynchronous` method, which revealed an issue.\nThe `smallrye-fault-tolerance-tracing-propagation` dependency was\nmissing, so trace context propagation didn't actually work.\n\nThen, the test also uncovered an issue in SmallRye Fault Tolerance\n(see https://github.com/smallrye/smallrye-fault-tolerance/pull/208),\nwhich is why this commit also brings a new version of it.\n\nIn addition to that, this commit also fixes a devmode issue where\non hot reload, the Jaeger extension tried to register a gauge\nthat was already present. That ended up with an exception.\n\nAnd finally, this commit also adds a test for tracing JDBC."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2OTYyMjcz", "url": "https://github.com/quarkusio/quarkus/pull/7987#pullrequestreview-386962273", "createdAt": "2020-04-03T06:21:09Z", "commit": {"oid": "72358326329c6b77a7f344bc65bd8ff3defda7f3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNjoyMToxMFrOGAGevg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNjoyMToxMFrOGAGevg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjc1OTM1OA==", "bodyText": "After #7018 we automatically drop and re-create all metric registries during shutdown before a hot reload, so it should not happen anymore that the gauge is still registered. Are you sure we still need this? That would mean the registry dropping is wrong?!", "url": "https://github.com/quarkusio/quarkus/pull/7987#discussion_r402759358", "createdAt": "2020-04-03T06:21:10Z", "author": {"login": "jmartisk"}, "path": "extensions/jaeger/runtime/src/main/java/io/quarkus/jaeger/runtime/QuarkusJaegerMetricsFactory.java", "diffHunk": "@@ -45,12 +46,17 @@ public void durationMicros(long time) {\n \n     @Override\n     public Gauge createGauge(final String name, final Map<String, String> tags) {\n-        JaegerGauge gauge = registry.register(meta(name, MetricType.GAUGE), new JaegerGauge(), toTagArray(tags));\n+        Tag[] tagArray = toTagArray(tags);\n+        JaegerGauge gauge = (JaegerGauge) registry.getGauges().get(new MetricID(name, tagArray));\n+        if (gauge == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72358326329c6b77a7f344bc65bd8ff3defda7f3"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "362a73dc467ea5e0beb69018c7606e85c5d313b7", "author": {"user": {"login": "Ladicek", "name": "Ladislav Thon"}}, "url": "https://github.com/quarkusio/quarkus/commit/362a73dc467ea5e0beb69018c7606e85c5d313b7", "committedDate": "2020-04-09T11:13:10Z", "message": "fix OpenTracing trace context propagation with Fault Tolerance @Asynchronous methods\n\nThere used to be a test for that, but didn't involve `@Asynchronous`\nmethods, so was in fact useless. This commit changes the test to\nactually call an `@Asynchronous` method, which revealed an issue.\nThe `smallrye-fault-tolerance-tracing-propagation` dependency was\nmissing, so trace context propagation didn't actually work.\n\nThen, the test also uncovered an issue in SmallRye Fault Tolerance\n(see https://github.com/smallrye/smallrye-fault-tolerance/pull/208),\nwhich is why this commit also brings a new version of it.\n\nIn addition to that, this commit also adds a test for tracing JDBC."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b676f39b236dca7b88db9bf79fac496f512d171", "author": {"user": {"login": "Ladicek", "name": "Ladislav Thon"}}, "url": "https://github.com/quarkusio/quarkus/commit/1b676f39b236dca7b88db9bf79fac496f512d171", "committedDate": "2020-04-09T11:13:10Z", "message": "fix Jaeger metrics collection when SmallRye Metrics is absent\n\nThe Jaeger extension used to collect metrics unconditionally,\neven when the SmallRye Metrics extension wasn't present.\nWith this commit, the Jaeger extension uses `NoopMetricsFactory`\nif SmallRye Metrics are missing, and only uses the real\nmetrics factory if SmallRye Metrics are present.\n\nThis is not totally consistent with how metrics are enabled/disabled\nin all other extensions. Fixing that is left for future."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "72358326329c6b77a7f344bc65bd8ff3defda7f3", "author": {"user": {"login": "Ladicek", "name": "Ladislav Thon"}}, "url": "https://github.com/quarkusio/quarkus/commit/72358326329c6b77a7f344bc65bd8ff3defda7f3", "committedDate": "2020-04-01T14:15:17Z", "message": "fix OpenTracing trace context propagation with Fault Tolerance @Asynchronous methods\n\nThere used to be a test for that, but didn't involve `@Asynchronous`\nmethods, so was in fact useless. This commit changes the test to\nactually call an `@Asynchronous` method, which revealed an issue.\nThe `smallrye-fault-tolerance-tracing-propagation` dependency was\nmissing, so trace context propagation didn't actually work.\n\nThen, the test also uncovered an issue in SmallRye Fault Tolerance\n(see https://github.com/smallrye/smallrye-fault-tolerance/pull/208),\nwhich is why this commit also brings a new version of it.\n\nIn addition to that, this commit also fixes a devmode issue where\non hot reload, the Jaeger extension tried to register a gauge\nthat was already present. That ended up with an exception.\n\nAnd finally, this commit also adds a test for tracing JDBC."}, "afterCommit": {"oid": "1b676f39b236dca7b88db9bf79fac496f512d171", "author": {"user": {"login": "Ladicek", "name": "Ladislav Thon"}}, "url": "https://github.com/quarkusio/quarkus/commit/1b676f39b236dca7b88db9bf79fac496f512d171", "committedDate": "2020-04-09T11:13:10Z", "message": "fix Jaeger metrics collection when SmallRye Metrics is absent\n\nThe Jaeger extension used to collect metrics unconditionally,\neven when the SmallRye Metrics extension wasn't present.\nWith this commit, the Jaeger extension uses `NoopMetricsFactory`\nif SmallRye Metrics are missing, and only uses the real\nmetrics factory if SmallRye Metrics are present.\n\nThis is not totally consistent with how metrics are enabled/disabled\nin all other extensions. Fixing that is left for future."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNzA3MzY4", "url": "https://github.com/quarkusio/quarkus/pull/7987#pullrequestreview-390707368", "createdAt": "2020-04-09T11:25:03Z", "commit": {"oid": "1b676f39b236dca7b88db9bf79fac496f512d171"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMTYyNjAz", "url": "https://github.com/quarkusio/quarkus/pull/7987#pullrequestreview-393162603", "createdAt": "2020-04-14T17:53:31Z", "commit": {"oid": "1b676f39b236dca7b88db9bf79fac496f512d171"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3744, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}