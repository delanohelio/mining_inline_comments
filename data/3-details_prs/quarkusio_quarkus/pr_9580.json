{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyNzQ1NjE2", "number": 9580, "title": "Reactive routes - use end handler to terminate the CDI request context", "bodyText": "i.e. fix context propagation\nresolves #9141", "createdAt": "2020-05-25T13:13:51Z", "url": "https://github.com/quarkusio/quarkus/pull/9580", "merged": true, "mergeCommit": {"oid": "1094d21e7906fdd53ecc8571c8f65749e38eba40"}, "closed": true, "closedAt": "2020-05-26T12:49:42Z", "author": {"login": "mkouba"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckwDLMAFqTQxNzcwOTc1Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABck_D6fgFqTQxODAxNTg3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NzA5NzUz", "url": "https://github.com/quarkusio/quarkus/pull/9580#pullrequestreview-417709753", "createdAt": "2020-05-25T13:26:10Z", "commit": {"oid": "41e3f69b1d938f93a0546eb26810770dda088d30"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoyNjoxMVrOGaBFaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxMzoyNjoxMVrOGaBFaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTkzMzkyOQ==", "bodyText": "Did you actually run this test without your fix? Did it fail?\nI'm asking because this looks like a synchronous call: there's nothing that would make it switch thread or delay execution.\nIf it does already pass without your fix (as I think it should), try switching your code to:\nUni.createFrom().item(ctx.request().getParam(\"val\")).onItem().delayIt().by(Duration.ofMillis(200)).subscribe().with(...)", "url": "https://github.com/quarkusio/quarkus/pull/9580#discussion_r429933929", "createdAt": "2020-05-25T13:26:11Z", "author": {"login": "FroMage"}, "path": "extensions/vertx-web/deployment/src/test/java/io/quarkus/vertx/web/reactive/RequestContextPropagationTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package io.quarkus.vertx.web.reactive;\n+\n+import static io.restassured.RestAssured.get;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import javax.annotation.PreDestroy;\n+import javax.enterprise.context.RequestScoped;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.test.QuarkusUnitTest;\n+import io.quarkus.vertx.web.Route;\n+import io.smallrye.mutiny.Uni;\n+import io.vertx.ext.web.RoutingContext;\n+\n+public class RequestContextPropagationTest {\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest config = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(MyRoutes.class, Ping.class));\n+\n+    @Test\n+    public void test() {\n+        get(\"/ping?val=bar\").then().statusCode(200).body(is(\"foo_bar\"));\n+        assertTrue(Ping.DESTROYED.get());\n+    }\n+\n+    @Singleton\n+    static class MyRoutes {\n+\n+        @Inject\n+        Ping ping;\n+\n+        @Route(path = \"ping\")\n+        void ping(RoutingContext ctx) {\n+            // Init the Ping bean\n+            ping.init(\"foo_\");\n+            Uni.createFrom().item(ctx.request().getParam(\"val\")).subscribe().with(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41e3f69b1d938f93a0546eb26810770dda088d30"}, "originalPosition": 47}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "41e3f69b1d938f93a0546eb26810770dda088d30", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/41e3f69b1d938f93a0546eb26810770dda088d30", "committedDate": "2020-05-25T13:11:38Z", "message": "Reactive routes - use end handler to erminate the CDI request context\n\n- i.e. fix context propagation\n- resolves #9141"}, "afterCommit": {"oid": "c2cadaccfde325e3d286bf68e238132a1fd6f901", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/c2cadaccfde325e3d286bf68e238132a1fd6f901", "committedDate": "2020-05-25T15:09:22Z", "message": "Reactive routes - use end handler to erminate the CDI request context\n\n- i.e. fix context propagation\n- resolves #9141"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NzcxNjcw", "url": "https://github.com/quarkusio/quarkus/pull/9580#pullrequestreview-417771670", "createdAt": "2020-05-25T15:13:49Z", "commit": {"oid": "c2cadaccfde325e3d286bf68e238132a1fd6f901"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3ODk4NzEw", "url": "https://github.com/quarkusio/quarkus/pull/9580#pullrequestreview-417898710", "createdAt": "2020-05-25T23:21:59Z", "commit": {"oid": "c2cadaccfde325e3d286bf68e238132a1fd6f901"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMzoyMjowMFrOGaK8Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMzoyMjowMFrOGaK8Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA5NTM4Nw==", "bodyText": "Wouldn't it be more performant to have a terminate(state) method in arc, so you don't have to touch the thread locals?", "url": "https://github.com/quarkusio/quarkus/pull/9580#discussion_r430095387", "createdAt": "2020-05-25T23:22:00Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/vertx-web/runtime/src/main/java/io/quarkus/vertx/web/runtime/RouteHandler.java", "diffHunk": "@@ -33,13 +34,23 @@ default void handle(RoutingContext context) {\n             invoke(context);\n         } else {\n             try {\n+                // Activate the context, i.e. set the thread locals\n                 requestContext.activate();\n                 if (user != null) {\n                     RouteHandlers.fireSecurityIdentity(user.getSecurityIdentity());\n                 }\n+                // Reactive routes can use async processing (e.g. mutiny Uni/Multi) and context propagation\n+                // 1. Store the state (which is basically a shared Map instance)\n+                // 2. Terminate the context correcly when the response is disposed or an exception is thrown \n+                InjectableContext.ContextState state = requestContext.getState();\n+                context.addEndHandler(v -> {\n+                    requestContext.activate(state);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2cadaccfde325e3d286bf68e238132a1fd6f901"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3ODk5NDY0", "url": "https://github.com/quarkusio/quarkus/pull/9580#pullrequestreview-417899464", "createdAt": "2020-05-25T23:26:52Z", "commit": {"oid": "c2cadaccfde325e3d286bf68e238132a1fd6f901"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMzoyNjo1MlrOGaK-3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQyMzoyNjo1MlrOGaK-3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDA5NjA5NQ==", "bodyText": "This is racey.\nAs far as the client is concerned the request is complete when the last bit of data is received from the wire. This happens in the vert.x end() call, and at that point the bean has not been destroyed, as the destruction happens after the data is sent. Usually the test will pass because destroying the bean happens straight after the data is sent, and sending the data is relatively slow, but occasionally it will fail. This is a very common cause of intermittent CI failures.\nIf you change the AtomicBoolean to a CompletableFuture and wait a few seconds for the value this will fix it.", "url": "https://github.com/quarkusio/quarkus/pull/9580#discussion_r430096095", "createdAt": "2020-05-25T23:26:52Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/vertx-web/deployment/src/test/java/io/quarkus/vertx/web/reactive/RequestContextPropagationTest.java", "diffHunk": "@@ -0,0 +1,78 @@\n+package io.quarkus.vertx.web.reactive;\n+\n+import static io.restassured.RestAssured.get;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.time.Duration;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import javax.annotation.PreDestroy;\n+import javax.enterprise.context.RequestScoped;\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.test.QuarkusUnitTest;\n+import io.quarkus.vertx.web.Route;\n+import io.smallrye.mutiny.Uni;\n+import io.vertx.ext.web.RoutingContext;\n+\n+public class RequestContextPropagationTest {\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest config = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(MyRoutes.class, Ping.class));\n+\n+    @Test\n+    public void test() {\n+        get(\"/ping?val=bar\").then().statusCode(200).body(is(\"foo_bar\"));\n+        assertTrue(Ping.DESTROYED.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2cadaccfde325e3d286bf68e238132a1fd6f901"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2ca006437db23fba08cb62b7bef82ccc2a45caf", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/c2ca006437db23fba08cb62b7bef82ccc2a45caf", "committedDate": "2020-05-26T06:53:27Z", "message": "Reactive routes - use end handler to erminate the CDI request context\n\n- i.e. fix context propagation\n- resolves #9141"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2cadaccfde325e3d286bf68e238132a1fd6f901", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/c2cadaccfde325e3d286bf68e238132a1fd6f901", "committedDate": "2020-05-25T15:09:22Z", "message": "Reactive routes - use end handler to erminate the CDI request context\n\n- i.e. fix context propagation\n- resolves #9141"}, "afterCommit": {"oid": "c2ca006437db23fba08cb62b7bef82ccc2a45caf", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/c2ca006437db23fba08cb62b7bef82ccc2a45caf", "committedDate": "2020-05-26T06:53:27Z", "message": "Reactive routes - use end handler to erminate the CDI request context\n\n- i.e. fix context propagation\n- resolves #9141"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MDE1ODcz", "url": "https://github.com/quarkusio/quarkus/pull/9580#pullrequestreview-418015873", "createdAt": "2020-05-26T06:55:39Z", "commit": {"oid": "c2ca006437db23fba08cb62b7bef82ccc2a45caf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3200, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}