{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0ODIwMzI2", "number": 11678, "title": "Upgrade to Hibernate ORM 5.4.21.Final", "bodyText": "Fixes #11231 - Upgrade to Hibernate ORM 5.4.21\nFixes #11325 - Hibernate no active session in hashcode() of lazy loaded collections\nFixes #11589 - Lazy loading fails if an entity appears twice in the object graph\nFixes #7591   - SQL import - commented out lines not ignored\nI couldn't test all databases locally, as I have some issues with docker. Not expecting any problem, so let's have CI run those.", "createdAt": "2020-08-27T16:37:53Z", "url": "https://github.com/quarkusio/quarkus/pull/11678", "merged": true, "mergeCommit": {"oid": "4ed159057f595279be126f7051993771f2051655"}, "closed": true, "closedAt": "2020-08-31T20:00:44Z", "author": {"login": "Sanne"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDXYBoABqjM3MDQ2MjA1MzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdESEV7AFqTQ3ODU3NTEyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5001d998c6e37fdec2ec613ab7373f8436670bd5", "author": {"user": {"login": "Sanne", "name": "Sanne Grinovero"}}, "url": "https://github.com/quarkusio/quarkus/commit/5001d998c6e37fdec2ec613ab7373f8436670bd5", "committedDate": "2020-08-27T16:34:27Z", "message": "Upgrade to Hibernate ORM 5.4.21.Final"}, "afterCommit": {"oid": "6fd4b542a83949a72e8bdcb6240d50620e11f33a", "author": {"user": {"login": "Sanne", "name": "Sanne Grinovero"}}, "url": "https://github.com/quarkusio/quarkus/commit/6fd4b542a83949a72e8bdcb6240d50620e11f33a", "committedDate": "2020-08-28T16:10:09Z", "message": "Upgrade to latest Hibernate Reactive 1.0.0.Alpha9"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e90635b14cbda92bcff017610789c1d8e843f4f", "author": {"user": {"login": "Sanne", "name": "Sanne Grinovero"}}, "url": "https://github.com/quarkusio/quarkus/commit/0e90635b14cbda92bcff017610789c1d8e843f4f", "committedDate": "2020-08-28T16:15:02Z", "message": "Upgrade to Hibernate ORM 5.4.21.Final"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c06a6f624075fd890a9bdc3dcedcc28a326015e", "author": {"user": {"login": "Sanne", "name": "Sanne Grinovero"}}, "url": "https://github.com/quarkusio/quarkus/commit/9c06a6f624075fd890a9bdc3dcedcc28a326015e", "committedDate": "2020-08-28T16:15:02Z", "message": "Upgrade to latest Hibernate Reactive 1.0.0.Alpha9"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6fd4b542a83949a72e8bdcb6240d50620e11f33a", "author": {"user": {"login": "Sanne", "name": "Sanne Grinovero"}}, "url": "https://github.com/quarkusio/quarkus/commit/6fd4b542a83949a72e8bdcb6240d50620e11f33a", "committedDate": "2020-08-28T16:10:09Z", "message": "Upgrade to latest Hibernate Reactive 1.0.0.Alpha9"}, "afterCommit": {"oid": "9c06a6f624075fd890a9bdc3dcedcc28a326015e", "author": {"user": {"login": "Sanne", "name": "Sanne Grinovero"}}, "url": "https://github.com/quarkusio/quarkus/commit/9c06a6f624075fd890a9bdc3dcedcc28a326015e", "committedDate": "2020-08-28T16:15:02Z", "message": "Upgrade to latest Hibernate Reactive 1.0.0.Alpha9"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3ODc0MzA3", "url": "https://github.com/quarkusio/quarkus/pull/11678#pullrequestreview-477874307", "createdAt": "2020-08-28T16:38:36Z", "commit": {"oid": "9c06a6f624075fd890a9bdc3dcedcc28a326015e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjozODozN1rOHJNQdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNjozODozN1rOHJNQdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQxNjQzOQ==", "bodyText": "@cescoffier , @gavinking this line threw me off a bit; is there a better / shorter way of expressing this?\nAll I want is to ensure both tables are empty; I could have used a simple \"then\", but wanted to be fancy and take advantge of the fact that order of execution of these is not important.\nI noticed the \"and()\" operator is deprecated, couldn't find a better way than this.", "url": "https://github.com/quarkusio/quarkus/pull/11678#discussion_r479416439", "createdAt": "2020-08-28T16:38:37Z", "author": {"login": "Sanne"}, "path": "integration-tests/hibernate-reactive-postgresql/src/main/java/io/quarkus/it/hibernate/reactive/postgresql/HibernateReactiveTestEndpoint.java", "diffHunk": "@@ -129,25 +116,23 @@\n     @Produces(MediaType.APPLICATION_JSON)\n     public Uni<String> reactiveUpdate() {\n         final String NEW_NAME = \"Tina\";\n-        return mutinySession\n-                .flatMap(mutinySession -> {\n-                    return populateDB()\n-                            .flatMap(junk -> mutinySession.find(GuineaPig.class, 5))\n-                            .map(pig -> {\n-                                if (NEW_NAME.equals(pig.getName()))\n-                                    throw new AssertionError(\"Pig already had name \" + NEW_NAME);\n-                                pig.setName(NEW_NAME);\n-                                return pig;\n-                            })\n-                            .flatMap(junk -> mutinySession.flush())\n-                            .flatMap(junk -> selectNameFromId(5));\n-                });\n+        return populateDB()\n+                .then(() -> mutinySession.find(GuineaPig.class, 5))\n+                .invoke(pig -> {\n+                    if (NEW_NAME.equals(pig.getName()))\n+                        throw new AssertionError(\"Pig already had name \" + NEW_NAME);\n+                    pig.setName(NEW_NAME);\n+                })\n+                .then(() -> mutinySession.flush())\n+                .then(() -> selectNameFromId(5));\n     }\n \n     private Uni<RowSet<Row>> populateDB() {\n-        return pgPool.query(\"DELETE FROM Pig\").execute()\n-                .and(pgPool.query(\"DELETE FROM Cow\").execute())\n-                .flatMap(junk -> pgPool.preparedQuery(\"INSERT INTO Pig (id, name) VALUES (5, 'Aloi')\").execute());\n+        return Uni.combine().all().unis(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c06a6f624075fd890a9bdc3dcedcc28a326015e"}, "originalPosition": 168}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4NTc1MTIz", "url": "https://github.com/quarkusio/quarkus/pull/11678#pullrequestreview-478575123", "createdAt": "2020-08-31T12:35:58Z", "commit": {"oid": "9c06a6f624075fd890a9bdc3dcedcc28a326015e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 765, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}