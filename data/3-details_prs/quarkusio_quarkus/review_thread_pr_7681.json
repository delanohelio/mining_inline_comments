{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1Mzg4Njgz", "number": 7681, "reviewThreads": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwNjowMzoyNFrODmK0iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1ODo0NlrODsxDkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzQ5NzY4OnYy", "diffSide": "RIGHT", "path": "bom/runtime/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwNjowMzoyNFrOFzbseg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwNjowNjoxNVrOFzbu6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ3NTQ1MA==", "bodyText": "why add it twice?", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r389475450", "createdAt": "2020-03-09T06:03:24Z", "author": {"login": "gastaldi"}, "path": "bom/runtime/pom.xml", "diffHunk": "@@ -280,6 +280,23 @@\n                 <artifactId>quarkus-development-mode-spi</artifactId>\n                 <version>${project.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-ide-launcher</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d98d3de93b33c9ffa4ce7151b54f81b4c4285f4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ3NjA3NQ==", "bodyText": "oops", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r389476075", "createdAt": "2020-03-09T06:06:15Z", "author": {"login": "stuartwdouglas"}, "path": "bom/runtime/pom.xml", "diffHunk": "@@ -280,6 +280,23 @@\n                 <artifactId>quarkus-development-mode-spi</artifactId>\n                 <version>${project.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-ide-launcher</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQ3NTQ1MA=="}, "originalCommit": {"oid": "5d98d3de93b33c9ffa4ce7151b54f81b4c4285f4"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNTIwOTAxOnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/LauncherMain.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQwOTowMDozMVrOF2quqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMDowNToyOFrOF7_hJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NzQ5OA==", "bodyText": "good enough to start, but I reckon just doing a recursive search for nearest pom.xml/build.gradle and resolve source paths from there (still just via filesystem not parsing the build files) could make this a bit less hacky.", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r392867498", "createdAt": "2020-03-16T09:00:31Z", "author": {"login": "maxandersen"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/LauncherMain.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package io.quarkus.deployment.dev;\n+\n+import java.io.File;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+\n+import io.smallrye.config.SmallRyeConfigProviderResolver;\n+\n+/**\n+ * The entry point when launched from an IDE\n+ */\n+public class LauncherMain {\n+\n+    public static void main(Path appClasses, Path wiring, URL[] classPath, String... args) throws Exception {\n+        DevModeContext context = new DevModeContext();\n+        context.setAbortOnFailedStart(true);\n+        context.setTest(false);\n+        context.setCacheDir(Files.createTempDirectory(\"quarkus-cache\").toFile());\n+        context.setSourceEncoding(\"UTF-8\");\n+        File appClassesFile = appClasses.toFile();\n+        context.getClassesRoots().add(appClassesFile);\n+\n+        //TODO: huge hacks\n+        File src = new File(appClassesFile, \"../../src/main/java\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb6a77ee3ac880baaf5d78abc9031026dc2963f1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQxMjgyMw==", "bodyText": "Also this would fail on windows because of the delimiters, or?", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r398412823", "createdAt": "2020-03-26T09:05:31Z", "author": {"login": "mkouba"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/LauncherMain.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package io.quarkus.deployment.dev;\n+\n+import java.io.File;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+\n+import io.smallrye.config.SmallRyeConfigProviderResolver;\n+\n+/**\n+ * The entry point when launched from an IDE\n+ */\n+public class LauncherMain {\n+\n+    public static void main(Path appClasses, Path wiring, URL[] classPath, String... args) throws Exception {\n+        DevModeContext context = new DevModeContext();\n+        context.setAbortOnFailedStart(true);\n+        context.setTest(false);\n+        context.setCacheDir(Files.createTempDirectory(\"quarkus-cache\").toFile());\n+        context.setSourceEncoding(\"UTF-8\");\n+        File appClassesFile = appClasses.toFile();\n+        context.getClassesRoots().add(appClassesFile);\n+\n+        //TODO: huge hacks\n+        File src = new File(appClassesFile, \"../../src/main/java\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NzQ5OA=="}, "originalCommit": {"oid": "cb6a77ee3ac880baaf5d78abc9031026dc2963f1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ0NjAxNA==", "bodyText": "Forward slash is also a delimiter on windows.", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r398446014", "createdAt": "2020-03-26T09:57:44Z", "author": {"login": "stuartwdouglas"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/LauncherMain.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package io.quarkus.deployment.dev;\n+\n+import java.io.File;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+\n+import io.smallrye.config.SmallRyeConfigProviderResolver;\n+\n+/**\n+ * The entry point when launched from an IDE\n+ */\n+public class LauncherMain {\n+\n+    public static void main(Path appClasses, Path wiring, URL[] classPath, String... args) throws Exception {\n+        DevModeContext context = new DevModeContext();\n+        context.setAbortOnFailedStart(true);\n+        context.setTest(false);\n+        context.setCacheDir(Files.createTempDirectory(\"quarkus-cache\").toFile());\n+        context.setSourceEncoding(\"UTF-8\");\n+        File appClassesFile = appClasses.toFile();\n+        context.getClassesRoots().add(appClassesFile);\n+\n+        //TODO: huge hacks\n+        File src = new File(appClassesFile, \"../../src/main/java\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NzQ5OA=="}, "originalCommit": {"oid": "cb6a77ee3ac880baaf5d78abc9031026dc2963f1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ1MDk4MQ==", "bodyText": "That's good to know, I always thought it's only \\ on windows... ;-)", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r398450981", "createdAt": "2020-03-26T10:05:28Z", "author": {"login": "mkouba"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/LauncherMain.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package io.quarkus.deployment.dev;\n+\n+import java.io.File;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+\n+import io.smallrye.config.SmallRyeConfigProviderResolver;\n+\n+/**\n+ * The entry point when launched from an IDE\n+ */\n+public class LauncherMain {\n+\n+    public static void main(Path appClasses, Path wiring, URL[] classPath, String... args) throws Exception {\n+        DevModeContext context = new DevModeContext();\n+        context.setAbortOnFailedStart(true);\n+        context.setTest(false);\n+        context.setCacheDir(Files.createTempDirectory(\"quarkus-cache\").toFile());\n+        context.setSourceEncoding(\"UTF-8\");\n+        File appClassesFile = appClasses.toFile();\n+        context.getClassesRoots().add(appClassesFile);\n+\n+        //TODO: huge hacks\n+        File src = new File(appClassesFile, \"../../src/main/java\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mjg2NzQ5OA=="}, "originalCommit": {"oid": "cb6a77ee3ac880baaf5d78abc9031026dc2963f1"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3ODUyNDc3OnYy", "diffSide": "RIGHT", "path": "core/runtime/src/main/java/io/quarkus/runtime/annotations/QuarkusMain.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwMjowNzowNlrOF9NzJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwMjowNzowNlrOF9NzJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTczMzU0MA==", "bodyText": "Looks like this is no longer true?", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r399733540", "createdAt": "2020-03-29T02:07:06Z", "author": {"login": "gastaldi"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/annotations/QuarkusMain.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package io.quarkus.runtime.annotations;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * The default main class of a Quarkus application. This annotation can appear\n+ * at most once in a Quarkus application.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95182a76ae0712ecde6fa0a371ead5291485b52f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjU2MDU4OnYy", "diffSide": "RIGHT", "path": "bom/runtime/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjozMTowNVrOF9yLLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDo1Mjo1MFrOF-BdTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyOTUxNg==", "bodyText": "Have you checked it works properly? We had a couple of bad surprises with wildcard exclusions.", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400329516", "createdAt": "2020-03-30T16:31:05Z", "author": {"login": "gsmet"}, "path": "bom/runtime/pom.xml", "diffHunk": "@@ -273,6 +273,18 @@\n                 <artifactId>quarkus-development-mode-spi</artifactId>\n                 <version>${project.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-ide-launcher</artifactId>\n+                <version>${project.version}</version>\n+                <exclusions>\n+                    <exclusion>\n+                        <!-- This has shaded dependencies -->\n+                        <groupId>*</groupId>\n+                        <artifactId>*</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3OTkxOA==", "bodyText": "It appears to, none of the bootstrap deps ended up in the final application.", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400579918", "createdAt": "2020-03-31T00:52:50Z", "author": {"login": "stuartwdouglas"}, "path": "bom/runtime/pom.xml", "diffHunk": "@@ -273,6 +273,18 @@\n                 <artifactId>quarkus-development-mode-spi</artifactId>\n                 <version>${project.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-ide-launcher</artifactId>\n+                <version>${project.version}</version>\n+                <exclusions>\n+                    <exclusion>\n+                        <!-- This has shaded dependencies -->\n+                        <groupId>*</groupId>\n+                        <artifactId>*</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMyOTUxNg=="}, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjU2NjEwOnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/RawCommandLineArgumentsBuildItem.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjozMjozMFrOF9yOvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjozMjozMFrOF9yOvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzMDQzMA==", "bodyText": "Maybe you could add a comment about this proxy magic? It's not the typical build item.", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400330430", "createdAt": "2020-03-30T16:32:30Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/RawCommandLineArgumentsBuildItem.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package io.quarkus.deployment.builditem;\n+\n+import java.util.function.Supplier;\n+\n+import io.quarkus.builder.item.SimpleBuildItem;\n+import io.quarkus.deployment.recording.BytecodeRecorderImpl;\n+import io.quarkus.runtime.StartupContext;\n+\n+/**\n+ * A build item that represents the raw command line arguments as they were passed to the application.\n+ *\n+ * No filtering is done on these parameters.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjU3NDQ4OnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/IsolatedDevModeMain.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjozNDoyNVrOF9yT3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjozNDoyNVrOF9yT3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzMTc0MA==", "bodyText": "Shouldn't we have a proper logger? Or it's too low level?", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400331740", "createdAt": "2020-03-30T16:34:25Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/IsolatedDevModeMain.java", "diffHunk": "@@ -57,7 +60,31 @@ private synchronized void firstStart() {\n             //ok, we have resolved all the deps\n             try {\n                 StartupAction start = augmentAction.createInitialRuntimeApplication();\n-                runner = start.run();\n+                //this is a bit yuck, but we need replace the default\n+                //exit handler in the runtime class loader\n+                //TODO: look at implementing a common core classloader, that removes the need for this sort of crappy hack\n+                curatedApplication.getBaseRuntimeClassLoader().loadClass(ApplicationLifecycleManager.class.getName())\n+                        .getMethod(\"setDefaultExitCodeHandler\", Consumer.class)\n+                        .invoke(null, new Consumer<Integer>() {\n+                            @Override\n+                            public void accept(Integer integer) {\n+                                if (restarting || ApplicationLifecycleManager.isVmShuttingDown()\n+                                        || context.isAbortOnFailedStart()) {\n+                                    return;\n+                                }\n+                                System.out.println(\"Quarkus application exited with code \" + integer);\n+                                System.out.println(\"Press Enter to restart\");\n+                                try {\n+                                    while (System.in.read() != '\\n') {\n+                                    }\n+                                    runtimeUpdatesProcessor.checkForChangedClasses();\n+                                    restartApp(runtimeUpdatesProcessor.checkForFileChange());\n+                                } catch (Exception e) {\n+                                    e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjU3Nzg0OnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/IsolatedDevModeMain.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjozNToxMlrOF9yV2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMTowMToyOFrOF-BmsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzMjI1MA==", "bodyText": "Shouldn't this be done only in command mode? Or this class is only used for command mode?", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400332250", "createdAt": "2020-03-30T16:35:12Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/IsolatedDevModeMain.java", "diffHunk": "@@ -57,7 +60,31 @@ private synchronized void firstStart() {\n             //ok, we have resolved all the deps\n             try {\n                 StartupAction start = augmentAction.createInitialRuntimeApplication();\n-                runner = start.run();\n+                //this is a bit yuck, but we need replace the default\n+                //exit handler in the runtime class loader\n+                //TODO: look at implementing a common core classloader, that removes the need for this sort of crappy hack\n+                curatedApplication.getBaseRuntimeClassLoader().loadClass(ApplicationLifecycleManager.class.getName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU4MjMyMA==", "bodyText": "This is installed every time. For a normal hot reload the 'restarting' flag will be true, so nothing will happen.\nIf on the other hand something has called asyncExit or it is a command mode app and main has returned you get the option to press enter to re-run.", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400582320", "createdAt": "2020-03-31T01:01:28Z", "author": {"login": "stuartwdouglas"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/IsolatedDevModeMain.java", "diffHunk": "@@ -57,7 +60,31 @@ private synchronized void firstStart() {\n             //ok, we have resolved all the deps\n             try {\n                 StartupAction start = augmentAction.createInitialRuntimeApplication();\n-                runner = start.run();\n+                //this is a bit yuck, but we need replace the default\n+                //exit handler in the runtime class loader\n+                //TODO: look at implementing a common core classloader, that removes the need for this sort of crappy hack\n+                curatedApplication.getBaseRuntimeClassLoader().loadClass(ApplicationLifecycleManager.class.getName())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzMjI1MA=="}, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjU4MjkzOnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/LauncherMain.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjozNjozMFrOF9yZIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjozNjozMFrOF9yZIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzMzA5MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //the loading of this is super wierd, and does its own class loader delegation for some reason\n          \n          \n            \n                    //the loading of this is super weird, and does its own class loader delegation for some reason", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400333091", "createdAt": "2020-03-30T16:36:30Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/dev/LauncherMain.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package io.quarkus.deployment.dev;\n+\n+import java.io.File;\n+import java.net.URL;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.util.Collections;\n+\n+import org.eclipse.microprofile.config.spi.ConfigProviderResolver;\n+\n+import io.smallrye.config.SmallRyeConfigProviderResolver;\n+\n+/**\n+ * The entry point when launched from an IDE\n+ */\n+public class LauncherMain {\n+\n+    public static void main(Path appClasses, Path wiring, URL[] classPath, String... args) throws Exception {\n+        DevModeContext context = new DevModeContext();\n+        context.setAbortOnFailedStart(true);\n+        context.setTest(false);\n+        context.setCacheDir(Files.createTempDirectory(\"quarkus-cache\").toFile());\n+        context.setSourceEncoding(\"UTF-8\");\n+        File appClassesFile = appClasses.toFile();\n+        context.getClassesRoots().add(appClassesFile);\n+\n+        //TODO: huge hacks\n+        File src = new File(appClassesFile, \"../../src/main/java\");\n+        File res = new File(appClassesFile, \"../../src/main/resources\");\n+\n+        context.getModules().add(new DevModeContext.ModuleInfo(\"main\", new File(\"\").getAbsolutePath(),\n+                Collections.singleton(src.getAbsolutePath()), appClassesFile.getAbsolutePath(), res.getAbsolutePath()));\n+        //the loading of this is super wierd, and does its own class loader delegation for some reason", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjYwMTY0OnYy", "diffSide": "RIGHT", "path": "core/devmode-spi/src/main/java/io/quarkus/dev/appstate/ApplicationStateNotification.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0MDo1MVrOF9yk-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0MDo1MVrOF9yk-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzNjEyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This class makes not attempt to verify that an application is starting/stopping when the\n          \n          \n            \n             * This class makes no attempt to verify that an application is starting/stopping when the", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400336121", "createdAt": "2020-03-30T16:40:51Z", "author": {"login": "gsmet"}, "path": "core/devmode-spi/src/main/java/io/quarkus/dev/appstate/ApplicationStateNotification.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package io.quarkus.dev.appstate;\n+\n+/**\n+ * A class that allows for access to the application state, even from outside the runtime class loader.\n+ *\n+ * This should generally only be used by dev mode internals that need information about the current\n+ * application state.\n+ *\n+ * This class makes not attempt to verify that an application is starting/stopping when the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjYwNTQ0OnYy", "diffSide": "RIGHT", "path": "core/devmode-spi/src/main/java/io/quarkus/dev/appstate/ApplicationStateNotification.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0MTo0OVrOF9ynUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0MTo0OVrOF9ynUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzNjcyMw==", "bodyText": "Shouldn't it be sp here?", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400336723", "createdAt": "2020-03-30T16:41:49Z", "author": {"login": "gsmet"}, "path": "core/devmode-spi/src/main/java/io/quarkus/dev/appstate/ApplicationStateNotification.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package io.quarkus.dev.appstate;\n+\n+/**\n+ * A class that allows for access to the application state, even from outside the runtime class loader.\n+ *\n+ * This should generally only be used by dev mode internals that need information about the current\n+ * application state.\n+ *\n+ * This class makes not attempt to verify that an application is starting/stopping when the\n+ * wait methods are called, this should only be called by a client that is controlling the Quarkus\n+ * lifecycle, and so knows what the current lifecycle state is.\n+ */\n+public class ApplicationStateNotification {\n+\n+    private static boolean started = false;\n+    private static Throwable startupProblem;\n+\n+    public static synchronized void notifyStartupComplete(Throwable sp) {\n+        started = startupProblem == null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjYwOTU2OnYy", "diffSide": "RIGHT", "path": "core/launcher/src/main/java/io/quarkus/launcher/QuarkusLauncher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0Mjo0NlrOF9yp9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0Mjo0NlrOF9yp9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzNzM5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * The launcher module has all it's dependencies shaded, so it is effectively self contained. This allows deployment time\n          \n          \n            \n             * The launcher module has all its dependencies shaded, so it is effectively self contained. This allows deployment time", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400337397", "createdAt": "2020-03-30T16:42:46Z", "author": {"login": "gsmet"}, "path": "core/launcher/src/main/java/io/quarkus/launcher/QuarkusLauncher.java", "diffHunk": "@@ -0,0 +1,50 @@\n+package io.quarkus.launcher;\n+\n+import java.net.URL;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.util.function.Consumer;\n+\n+import io.quarkus.bootstrap.app.CuratedApplication;\n+import io.quarkus.bootstrap.app.QuarkusBootstrap;\n+\n+/**\n+ * IDE entry point.\n+ * <p>\n+ * This has a number of hacks to make it work, and is always going to be a bit fragile, as it is hard to make something\n+ * that will work 100% of the time as we just don't have enough information.\n+ * <p>\n+ * The launcher module has all it's dependencies shaded, so it is effectively self contained. This allows deployment time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjYxMTk4OnYy", "diffSide": "RIGHT", "path": "core/runtime/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0MzoyM1rOF9yrlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0MzoyM1rOF9yrlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzNzgxMw==", "bodyText": "Looks like we shouldn't merge the PR then?", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400337813", "createdAt": "2020-03-30T16:43:23Z", "author": {"login": "gsmet"}, "path": "core/runtime/pom.xml", "diffHunk": "@@ -15,6 +15,12 @@\n     <name>Quarkus - Core - Runtime</name>\n \n     <dependencies>\n+        <dependency>\n+            <!-- TMP workaround for IDE problem, DO NOT MERGE-->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjYxNTA4OnYy", "diffSide": "RIGHT", "path": "core/runtime/src/main/java/io/quarkus/runtime/ApplicationLifecycleManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0NDowMlrOF9ytbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0NDowMlrOF9ytbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzODI4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * but nothing else. This class can be used to run both persistent application that will run\n          \n          \n            \n             * but nothing else. This class can be used to run both persistent applications that will run", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400338287", "createdAt": "2020-03-30T16:44:02Z", "author": {"login": "gsmet"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/ApplicationLifecycleManager.java", "diffHunk": "@@ -0,0 +1,308 @@\n+package io.quarkus.runtime;\n+\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.concurrent.locks.Condition;\n+import java.util.concurrent.locks.Lock;\n+import java.util.function.Consumer;\n+\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.enterprise.inject.Any;\n+import javax.enterprise.inject.spi.Bean;\n+import javax.enterprise.inject.spi.CDI;\n+\n+import org.graalvm.nativeimage.ImageInfo;\n+import org.jboss.logging.Logger;\n+import org.wildfly.common.lock.Locks;\n+\n+import com.oracle.svm.core.OS;\n+\n+import io.quarkus.runtime.graal.DiagnosticPrinter;\n+import sun.misc.Signal;\n+import sun.misc.SignalHandler;\n+\n+/**\n+ * Manages the lifecycle of a Quarkus application.\n+ *\n+ * The {@link Application} class is responsible for starting and stopping the application,\n+ * but nothing else. This class can be used to run both persistent application that will run", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjYxNjM4OnYy", "diffSide": "RIGHT", "path": "core/runtime/src/main/java/io/quarkus/runtime/ApplicationLifecycleManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0NDoyMFrOF9yuPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0NDoyMFrOF9yuPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzODQ5Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * returns. This class registers a shutdown hook to properly shut down the application, and handled\n          \n          \n            \n             * returns. This class registers a shutdown hook to properly shut down the application, and handle", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400338493", "createdAt": "2020-03-30T16:44:20Z", "author": {"login": "gsmet"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/ApplicationLifecycleManager.java", "diffHunk": "@@ -0,0 +1,308 @@\n+package io.quarkus.runtime;\n+\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.concurrent.locks.Condition;\n+import java.util.concurrent.locks.Lock;\n+import java.util.function.Consumer;\n+\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.enterprise.inject.Any;\n+import javax.enterprise.inject.spi.Bean;\n+import javax.enterprise.inject.spi.CDI;\n+\n+import org.graalvm.nativeimage.ImageInfo;\n+import org.jboss.logging.Logger;\n+import org.wildfly.common.lock.Locks;\n+\n+import com.oracle.svm.core.OS;\n+\n+import io.quarkus.runtime.graal.DiagnosticPrinter;\n+import sun.misc.Signal;\n+import sun.misc.SignalHandler;\n+\n+/**\n+ * Manages the lifecycle of a Quarkus application.\n+ *\n+ * The {@link Application} class is responsible for starting and stopping the application,\n+ * but nothing else. This class can be used to run both persistent application that will run\n+ * till they receive a signal, and command mode applications that will run until the main method\n+ * returns. This class registers a shutdown hook to properly shut down the application, and handled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjYxNzQ2OnYy", "diffSide": "RIGHT", "path": "core/runtime/src/main/java/io/quarkus/runtime/ApplicationLifecycleManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0NDozN1rOF9yu4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0NDozN1rOF9yu4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzODY1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This class is static, there can only every be a single application instance running at any time.\n          \n          \n            \n             * This class is static, there can only ever be a single application instance running at any time.", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400338656", "createdAt": "2020-03-30T16:44:37Z", "author": {"login": "gsmet"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/ApplicationLifecycleManager.java", "diffHunk": "@@ -0,0 +1,308 @@\n+package io.quarkus.runtime;\n+\n+import java.util.Objects;\n+import java.util.Set;\n+import java.util.concurrent.locks.Condition;\n+import java.util.concurrent.locks.Lock;\n+import java.util.function.Consumer;\n+\n+import javax.enterprise.context.spi.CreationalContext;\n+import javax.enterprise.inject.Any;\n+import javax.enterprise.inject.spi.Bean;\n+import javax.enterprise.inject.spi.CDI;\n+\n+import org.graalvm.nativeimage.ImageInfo;\n+import org.jboss.logging.Logger;\n+import org.wildfly.common.lock.Locks;\n+\n+import com.oracle.svm.core.OS;\n+\n+import io.quarkus.runtime.graal.DiagnosticPrinter;\n+import sun.misc.Signal;\n+import sun.misc.SignalHandler;\n+\n+/**\n+ * Manages the lifecycle of a Quarkus application.\n+ *\n+ * The {@link Application} class is responsible for starting and stopping the application,\n+ * but nothing else. This class can be used to run both persistent application that will run\n+ * till they receive a signal, and command mode applications that will run until the main method\n+ * returns. This class registers a shutdown hook to properly shut down the application, and handled\n+ * exiting with the supplied exit code.\n+ *\n+ * This class should be used to run production and dev mode applications, while test use cases will\n+ * likely want to just use {@link Application} directly.\n+ *\n+ * This class is static, there can only every be a single application instance running at any time.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjYyMjYxOnYy", "diffSide": "RIGHT", "path": "core/runtime/src/main/java/io/quarkus/runtime/Quarkus.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0NTo0OFrOF9yyBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0NTo0OFrOF9yyBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDMzOTQ2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * If an application does not want to immediatly shut down then {@link #waitForExit()} should be called, which\n          \n          \n            \n             * If an application does not want to immediately shut down then {@link #waitForExit()} should be called, which", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400339463", "createdAt": "2020-03-30T16:45:48Z", "author": {"login": "gsmet"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/Quarkus.java", "diffHunk": "@@ -0,0 +1,170 @@\n+package io.quarkus.runtime;\n+\n+import java.util.function.Consumer;\n+\n+import org.jboss.logging.Logger;\n+import org.jboss.logmanager.LogManager;\n+\n+import io.quarkus.launcher.QuarkusLauncher;\n+\n+/**\n+ * The entry point for applications that use a main method. Quarkus will shut down when the main method returns.\n+ * \n+ * If this application has already been generated then it will be run directly, otherwise it will be launched\n+ * in dev mode and augmentation will be done automatically.\n+ *\n+ * If an application does not want to immediatly shut down then {@link #waitForExit()} should be called, which", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjYyODcyOnYy", "diffSide": "RIGHT", "path": "core/runtime/src/main/java/io/quarkus/runtime/annotations/QuarkusMain.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0NzoxOVrOF9y13A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0NzoxOVrOF9y13A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0MDQ0NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * the application. Note that Quarkus will not be started when this is method is called,\n          \n          \n            \n             * the application. Note that Quarkus will not be started when this method is called,", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400340444", "createdAt": "2020-03-30T16:47:19Z", "author": {"login": "gsmet"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/annotations/QuarkusMain.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.quarkus.runtime.annotations;\n+\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+/**\n+ * The default main class of a Quarkus application.\n+ * \n+ * There are two different ways this annotation can be used. The first is to place it\n+ * on a class with a Java main method. This main method will be the default entry point of\n+ * the application. Note that Quarkus will not be started when this is method is called,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjYzNDg1OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0ODo0MVrOF9y5rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0ODo0MVrOF9y5rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0MTQyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This reference covers how to write application that run and then exit.\n          \n          \n            \n            This reference covers how to write applications that run and then exit.", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400341421", "createdAt": "2020-03-30T16:48:41Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "diffHunk": "@@ -0,0 +1,95 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Command Mode Applications\n+\n+include::./attributes.adoc[]\n+\n+This reference covers how to write application that run and then exit.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjYzODkzOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0OTozNVrOF9y8GQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo0OTozNVrOF9y8GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0MjA0MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <1> The `@QuarkusMain` annotation to tells Quarkus that this is the main entry point.\n          \n          \n            \n            <1> The `@QuarkusMain` annotation tells Quarkus that this is the main entry point.", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400342041", "createdAt": "2020-03-30T16:49:35Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "diffHunk": "@@ -0,0 +1,95 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Command Mode Applications\n+\n+include::./attributes.adoc[]\n+\n+This reference covers how to write application that run and then exit.\n+\n+== Writing Command Mode Applications\n+\n+There are two different approaches that can be used to implement applications\n+that exit.\n+\n+. Implement `QuarkusApplication` and have Quarkus run this method automatically\n+. Implement `QuarkusApplication` and a Java main method, and use the Java main method to launch Quarkus\n+\n+In this document the `QuarkusApplication` instance is referred to as the application main,\n+and a class with a Java main method is the Java main.\n+\n+The simplest possible command mode application might appear as follows:\n+\n+[source,java]\n+----\n+import io.quarkus.runtime.QuarkusApplication;\n+import io.quarkus.runtime.annotations.DefaultMain;\n+\n+@QuarkusMain    // <1>\n+public class HelloWorldMain implements QuarkusApplication {\n+  @Override\n+  public int run(String... args) throws Exception {   // <2>\n+    System.out.println(\"Hello World\");\n+    return 10;\n+ }\n+}\n+----\n+<1> The `@QuarkusMain` annotation to tells Quarkus that this is the main entry point.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjY0NTYyOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1MToxMVrOF9zASA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1MToxMVrOF9zASA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0MzExMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            . Shutdown Quarkus and exit the JVM after the main method returns\n          \n          \n            \n            . Shut down Quarkus and exit the JVM after the main method returns", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400343112", "createdAt": "2020-03-30T16:51:11Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "diffHunk": "@@ -0,0 +1,95 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Command Mode Applications\n+\n+include::./attributes.adoc[]\n+\n+This reference covers how to write application that run and then exit.\n+\n+== Writing Command Mode Applications\n+\n+There are two different approaches that can be used to implement applications\n+that exit.\n+\n+. Implement `QuarkusApplication` and have Quarkus run this method automatically\n+. Implement `QuarkusApplication` and a Java main method, and use the Java main method to launch Quarkus\n+\n+In this document the `QuarkusApplication` instance is referred to as the application main,\n+and a class with a Java main method is the Java main.\n+\n+The simplest possible command mode application might appear as follows:\n+\n+[source,java]\n+----\n+import io.quarkus.runtime.QuarkusApplication;\n+import io.quarkus.runtime.annotations.DefaultMain;\n+\n+@QuarkusMain    // <1>\n+public class HelloWorldMain implements QuarkusApplication {\n+  @Override\n+  public int run(String... args) throws Exception {   // <2>\n+    System.out.println(\"Hello World\");\n+    return 10;\n+ }\n+}\n+----\n+<1> The `@QuarkusMain` annotation to tells Quarkus that this is the main entry point.\n+<2> The `run` method is invoked once Quarkus starts, and the application stops when it finishes.\n+\n+If we want to use a Java main to run the application main it would look like:\n+\n+[source,java]\n+----\n+import io.quarkus.runtime.Quarkus;\n+import io.quarkus.runtime.annotations.DefaultMain;\n+\n+@QuarkusMain\n+public class JavaMain {\n+\n+    public static void main(String... args) {\n+        Quarkus.run(HelloWorldMain.class, args);\n+    }\n+}\n+----\n+\n+This is effectively the same as running the `HelloWorldMain` application main directly, but has the advantage it can\n+be run from the IDE.\n+\n+WARNING: It is recommended that a Java main perform very little logic, and just\n+launch the application main. In development mode the Java main will run in a\n+different ClassLoader to the main application, so may not behave as you would\n+expect.\n+\n+=== Multiple Main Methods\n+\n+It is possible to have multiple main methods in an application, and select between them at build time.\n+The `@QuarkusMain` annotation takes an optional 'name' parameter, and this can be used to select the\n+main to run using the `quarkus.package.main-class` build time configuration option. If you don't want\n+to use annotations this can also be used to specify the fully qualified name of a main class.\n+\n+By default the `@QuarkusMain` with no name (i.e. the empty string) will be used, and if it is not present\n+and `quarkus.package.main-class` is not specified then Quarkus will automatically generate a main class\n+that just runs the application.\n+\n+NOTE: The `name` of `@QuarkusMain` must be unique (including the default of the empty string). If you\n+have multiple `@QuarkusMain` annotations in your application the build will fail if the names are not\n+unique.\n+\n+\n+=== The command mode lifecycle\n+\n+When running a command mode application the basic lifecycle is as follows:\n+\n+. Start Quarkus\n+. Run the `QuarkusApplication` main method\n+. Shutdown Quarkus and exit the JVM after the main method returns", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjY1MzkyOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1MzoxMVrOF9zFZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1MzoxMVrOF9zFZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0NDQyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import io.quarkus.runtime.annotations.DefaultMain;\n          \n          \n            \n            import io.quarkus.runtime.annotations.QuarkusMain;", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400344423", "createdAt": "2020-03-30T16:53:11Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "diffHunk": "@@ -0,0 +1,95 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Command Mode Applications\n+\n+include::./attributes.adoc[]\n+\n+This reference covers how to write application that run and then exit.\n+\n+== Writing Command Mode Applications\n+\n+There are two different approaches that can be used to implement applications\n+that exit.\n+\n+. Implement `QuarkusApplication` and have Quarkus run this method automatically\n+. Implement `QuarkusApplication` and a Java main method, and use the Java main method to launch Quarkus\n+\n+In this document the `QuarkusApplication` instance is referred to as the application main,\n+and a class with a Java main method is the Java main.\n+\n+The simplest possible command mode application might appear as follows:\n+\n+[source,java]\n+----\n+import io.quarkus.runtime.QuarkusApplication;\n+import io.quarkus.runtime.annotations.DefaultMain;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjY1NTMxOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1MzozMVrOF9zGSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1MzozMVrOF9zGSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0NDY0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import io.quarkus.runtime.annotations.DefaultMain;\n          \n          \n            \n            import io.quarkus.runtime.annotations.QuarkusMain;", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400344648", "createdAt": "2020-03-30T16:53:31Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/command-mode-reference.adoc", "diffHunk": "@@ -0,0 +1,95 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Command Mode Applications\n+\n+include::./attributes.adoc[]\n+\n+This reference covers how to write application that run and then exit.\n+\n+== Writing Command Mode Applications\n+\n+There are two different approaches that can be used to implement applications\n+that exit.\n+\n+. Implement `QuarkusApplication` and have Quarkus run this method automatically\n+. Implement `QuarkusApplication` and a Java main method, and use the Java main method to launch Quarkus\n+\n+In this document the `QuarkusApplication` instance is referred to as the application main,\n+and a class with a Java main method is the Java main.\n+\n+The simplest possible command mode application might appear as follows:\n+\n+[source,java]\n+----\n+import io.quarkus.runtime.QuarkusApplication;\n+import io.quarkus.runtime.annotations.DefaultMain;\n+\n+@QuarkusMain    // <1>\n+public class HelloWorldMain implements QuarkusApplication {\n+  @Override\n+  public int run(String... args) throws Exception {   // <2>\n+    System.out.println(\"Hello World\");\n+    return 10;\n+ }\n+}\n+----\n+<1> The `@QuarkusMain` annotation to tells Quarkus that this is the main entry point.\n+<2> The `run` method is invoked once Quarkus starts, and the application stops when it finishes.\n+\n+If we want to use a Java main to run the application main it would look like:\n+\n+[source,java]\n+----\n+import io.quarkus.runtime.Quarkus;\n+import io.quarkus.runtime.annotations.DefaultMain;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjY1NjQwOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/lifecycle.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1Mzo0NFrOF9zG6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1Mzo0NFrOF9zG6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0NDgxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import io.quarkus.runtime.annotations.DefaultMain;\n          \n          \n            \n            import io.quarkus.runtime.annotations.QuarkusMain;", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400344811", "createdAt": "2020-03-30T16:53:44Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/lifecycle.adoc", "diffHunk": "@@ -56,6 +56,84 @@ It generates:\n * an `org.acme.lifecycle.GreetingResource` resource\n * an associated test\n \n+== The main method\n+\n+By default Quarkus will automatically generate a main method, that will boostrap Quarkus and then just wait for\n+shutdown to be initiated. Let's provide our own main method:\n+[source,java]\n+----\n+package om.acme;\n+\n+import io.quarkus.runtime.annotations.DefaultMain;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjY1Njg5OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/lifecycle.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1Mzo1MlrOF9zHOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1Mzo1MlrOF9zHOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0NDg4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @DefaultMain  <1>\n          \n          \n            \n            @QuarkusMain  <1>", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400344888", "createdAt": "2020-03-30T16:53:52Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/lifecycle.adoc", "diffHunk": "@@ -56,6 +56,84 @@ It generates:\n * an `org.acme.lifecycle.GreetingResource` resource\n * an associated test\n \n+== The main method\n+\n+By default Quarkus will automatically generate a main method, that will boostrap Quarkus and then just wait for\n+shutdown to be initiated. Let's provide our own main method:\n+[source,java]\n+----\n+package om.acme;\n+\n+import io.quarkus.runtime.annotations.DefaultMain;\n+import io.quarkus.runtime.Quarkus;\n+\n+@DefaultMain  <1>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjY1OTM5OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/lifecycle.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1NDoyNFrOF9zIyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1NDoyNFrOF9zIyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0NTI4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            WARNING: It is not recommenced to do any business logic in this main method, as Quarkus has not been setup yet,\n          \n          \n            \n            WARNING: It is not recommenced to do any business logic in this main method, as Quarkus has not been set up yet,", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400345288", "createdAt": "2020-03-30T16:54:24Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/lifecycle.adoc", "diffHunk": "@@ -56,6 +56,84 @@ It generates:\n * an `org.acme.lifecycle.GreetingResource` resource\n * an associated test\n \n+== The main method\n+\n+By default Quarkus will automatically generate a main method, that will boostrap Quarkus and then just wait for\n+shutdown to be initiated. Let's provide our own main method:\n+[source,java]\n+----\n+package om.acme;\n+\n+import io.quarkus.runtime.annotations.DefaultMain;\n+import io.quarkus.runtime.Quarkus;\n+\n+@DefaultMain  <1>\n+public class Main {\n+\n+    public static void main(String ... args) {\n+        System.out.println(\"Running main method\");\n+        Quarkus.run(args); <2>\n+    }\n+}\n+----\n+<1> This annotation tells Quarkus to use this as the main method, unless it is overridden in the config\n+<2> This launches Quarkus\n+\n+This main class will bootstrap Quarkus and run it until it stops. This is no different to the automatically\n+generated main class, but has the advantage that you can just launch it directly from the IDE without needing\n+to run a Maven or Gradle command.\n+\n+WARNING: It is not recommenced to do any business logic in this main method, as Quarkus has not been setup yet,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjY2MjcwOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/lifecycle.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1NToxNFrOF9zK7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1NToxNFrOF9zK7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0NTgzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            @DefaultMain\n          \n          \n            \n            @QuarkusMain", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400345837", "createdAt": "2020-03-30T16:55:14Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/lifecycle.adoc", "diffHunk": "@@ -56,6 +56,84 @@ It generates:\n * an `org.acme.lifecycle.GreetingResource` resource\n * an associated test\n \n+== The main method\n+\n+By default Quarkus will automatically generate a main method, that will boostrap Quarkus and then just wait for\n+shutdown to be initiated. Let's provide our own main method:\n+[source,java]\n+----\n+package om.acme;\n+\n+import io.quarkus.runtime.annotations.DefaultMain;\n+import io.quarkus.runtime.Quarkus;\n+\n+@DefaultMain  <1>\n+public class Main {\n+\n+    public static void main(String ... args) {\n+        System.out.println(\"Running main method\");\n+        Quarkus.run(args); <2>\n+    }\n+}\n+----\n+<1> This annotation tells Quarkus to use this as the main method, unless it is overridden in the config\n+<2> This launches Quarkus\n+\n+This main class will bootstrap Quarkus and run it until it stops. This is no different to the automatically\n+generated main class, but has the advantage that you can just launch it directly from the IDE without needing\n+to run a Maven or Gradle command.\n+\n+WARNING: It is not recommenced to do any business logic in this main method, as Quarkus has not been setup yet,\n+and Quarkus may run in a different ClassLoader. If you want to perform logic on startup use an `io.quarkus.runtime.QuarkusApplication`\n+as described below.\n+\n+If we want to actually perform business logic on startup (or write applications that complete a task and then exit)\n+we need to supply a `io.quarkus.runtime.QuarkusApplication` class to the run method. After Quarkus has been started\n+the `run` method of the application will be invoked. When this method returns the Quarkus application will exit.\n+\n+If you want to perform logic on startup you should call `Quarkus.waitForExit()`, this method will wait until a shutdown\n+is requested (either from an external signal like when you press `Ctrl+C` or because a thread has called `Quarkus.asyncExit()`).\n+\n+An example of what this looks like is below:\n+\n+[source,java]\n+----\n+package com.acme;\n+\n+import io.quarkus.runtime.Quarkus;\n+import io.quarkus.runtime.QuarkusApplication;\n+import io.quarkus.runtime.annotations.DefaultMain;\n+\n+@DefaultMain", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjY2MzA3OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/lifecycle.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1NToxOVrOF9zLJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1NToxOVrOF9zLJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0NTg5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import io.quarkus.runtime.annotations.DefaultMain;\n          \n          \n            \n            import io.quarkus.runtime.annotations.QuarkusMain;", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400345892", "createdAt": "2020-03-30T16:55:19Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/lifecycle.adoc", "diffHunk": "@@ -56,6 +56,84 @@ It generates:\n * an `org.acme.lifecycle.GreetingResource` resource\n * an associated test\n \n+== The main method\n+\n+By default Quarkus will automatically generate a main method, that will boostrap Quarkus and then just wait for\n+shutdown to be initiated. Let's provide our own main method:\n+[source,java]\n+----\n+package om.acme;\n+\n+import io.quarkus.runtime.annotations.DefaultMain;\n+import io.quarkus.runtime.Quarkus;\n+\n+@DefaultMain  <1>\n+public class Main {\n+\n+    public static void main(String ... args) {\n+        System.out.println(\"Running main method\");\n+        Quarkus.run(args); <2>\n+    }\n+}\n+----\n+<1> This annotation tells Quarkus to use this as the main method, unless it is overridden in the config\n+<2> This launches Quarkus\n+\n+This main class will bootstrap Quarkus and run it until it stops. This is no different to the automatically\n+generated main class, but has the advantage that you can just launch it directly from the IDE without needing\n+to run a Maven or Gradle command.\n+\n+WARNING: It is not recommenced to do any business logic in this main method, as Quarkus has not been setup yet,\n+and Quarkus may run in a different ClassLoader. If you want to perform logic on startup use an `io.quarkus.runtime.QuarkusApplication`\n+as described below.\n+\n+If we want to actually perform business logic on startup (or write applications that complete a task and then exit)\n+we need to supply a `io.quarkus.runtime.QuarkusApplication` class to the run method. After Quarkus has been started\n+the `run` method of the application will be invoked. When this method returns the Quarkus application will exit.\n+\n+If you want to perform logic on startup you should call `Quarkus.waitForExit()`, this method will wait until a shutdown\n+is requested (either from an external signal like when you press `Ctrl+C` or because a thread has called `Quarkus.asyncExit()`).\n+\n+An example of what this looks like is below:\n+\n+[source,java]\n+----\n+package com.acme;\n+\n+import io.quarkus.runtime.Quarkus;\n+import io.quarkus.runtime.QuarkusApplication;\n+import io.quarkus.runtime.annotations.DefaultMain;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjY2ODI1OnYy", "diffSide": "RIGHT", "path": "test-framework/junit5-internal/src/main/java/io/quarkus/test/QuarkusProdModeTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1Njo0NFrOF9zOew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1Njo0NFrOF9zOew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0Njc0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * If this is true then the quarkus application is expected to exit immediately (i.e. is a command mode app)\n          \n          \n            \n                 * If this is true then the Quarkus application is expected to exit immediately (i.e. is a command mode app)", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400346747", "createdAt": "2020-03-30T16:56:44Z", "author": {"login": "gsmet"}, "path": "test-framework/junit5-internal/src/main/java/io/quarkus/test/QuarkusProdModeTest.java", "diffHunk": "@@ -173,6 +176,29 @@ public QuarkusProdModeTest setForcedDependencies(List<AppArtifact> forcedDepende\n         return this;\n     }\n \n+    /**\n+     * If this is true then the quarkus application is expected to exit immediately (i.e. is a command mode app)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MjY3NjY2OnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/MainClassBuildStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1ODo0NlrOF9zT4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNjo1ODo0NlrOF9zT4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM0ODEyOA==", "bodyText": "This should probably be renamed given you renamed the annotation.", "url": "https://github.com/quarkusio/quarkus/pull/7681#discussion_r400348128", "createdAt": "2020-03-30T16:58:46Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/MainClassBuildStep.java", "diffHunk": "@@ -216,31 +234,86 @@ MainClassBuildItem build(List<StaticBytecodeRecorderBuildItem> staticInitTasks,\n         mv.invokeVirtualMethod(ofMethod(StartupContext.class, \"close\", void.class), startupContext);\n         mv.returnValue(null);\n \n+        // getName method\n+        mv = file.getMethodCreator(\"getName\", String.class);\n+        mv.returnValue(mv.load(applicationInfo.getName()));\n+\n         // Finish application class\n         file.close();\n+    }\n \n-        // Main class\n-\n-        file = new ClassCreator(gizmoOutput, MAIN_CLASS, null,\n-                Object.class.getName());\n-\n-        mv = file.getMethodCreator(\"main\", void.class, String[].class);\n-        mv.setModifiers(Modifier.PUBLIC | Modifier.STATIC);\n-\n-        final ResultHandle appClassInstance = mv.newInstance(ofConstructor(APP_CLASS));\n-\n-        // Set the application name\n-        mv.invokeVirtualMethod(ofMethod(Application.class, \"setName\", void.class, String.class), appClassInstance,\n-                mv.load(applicationInfo.getName()));\n-\n-        // run the app\n-        mv.invokeVirtualMethod(ofMethod(Application.class, \"run\", void.class, String[].class), appClassInstance,\n-                mv.getMethodParam(0));\n+    @BuildStep\n+    public MainClassBuildItem mainClassBuildStep(BuildProducer<GeneratedClassBuildItem> generatedClass,\n+            ApplicationArchivesBuildItem applicationArchivesBuildItem,\n+            CombinedIndexBuildItem combinedIndexBuildItem,\n+            PackageConfig packageConfig) {\n+        String mainClassName = MAIN_CLASS;\n+        Map<String, String> quarkusMainAnnotations = new HashMap<>();\n+        Collection<AnnotationInstance> defaultMains = combinedIndexBuildItem.getIndex()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06e710c606cb608f8ba0fd7de34dffaf21857a1b"}, "originalPosition": 138}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4950, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}