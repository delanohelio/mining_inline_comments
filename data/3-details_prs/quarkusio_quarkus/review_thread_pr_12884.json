{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MzU4MjI4", "number": 12884, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTowNDoyMFrOEwz9OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjozMTo0MlrOExL4sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NjE4MzYwOnYy", "diffSide": "RIGHT", "path": "integration-tests/kubernetes/quarkus-standard-way/src/test/java/io/quarkus/it/kubernetes/OpenshiftV3Test.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTowNDoyMFrOHmmYaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNToxOToxMVrOHmnDdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIzNjc3Nw==", "bodyText": "Can we have a corresponding v4 test?", "url": "https://github.com/quarkusio/quarkus/pull/12884#discussion_r510236777", "createdAt": "2020-10-22T15:04:20Z", "author": {"login": "geoand"}, "path": "integration-tests/kubernetes/quarkus-standard-way/src/test/java/io/quarkus/it/kubernetes/OpenshiftV3Test.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package io.quarkus.it.kubernetes;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.entry;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.assertj.core.api.AbstractObjectAssert;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.fabric8.kubernetes.api.model.HasMetadata;\n+import io.fabric8.kubernetes.api.model.Service;\n+import io.quarkus.test.ProdBuildResults;\n+import io.quarkus.test.ProdModeTestResults;\n+import io.quarkus.test.QuarkusProdModeTest;\n+\n+public class OpenshiftV3Test {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60afd069f24216b88e44e141a87d9b7db612eb40"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI0NjQxMw==", "bodyText": "V4 is the default, it has not special configuration", "url": "https://github.com/quarkusio/quarkus/pull/12884#discussion_r510246413", "createdAt": "2020-10-22T15:17:16Z", "author": {"login": "iocanel"}, "path": "integration-tests/kubernetes/quarkus-standard-way/src/test/java/io/quarkus/it/kubernetes/OpenshiftV3Test.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package io.quarkus.it.kubernetes;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.entry;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.assertj.core.api.AbstractObjectAssert;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.fabric8.kubernetes.api.model.HasMetadata;\n+import io.fabric8.kubernetes.api.model.Service;\n+import io.quarkus.test.ProdBuildResults;\n+import io.quarkus.test.ProdModeTestResults;\n+import io.quarkus.test.QuarkusProdModeTest;\n+\n+public class OpenshiftV3Test {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIzNjc3Nw=="}, "originalCommit": {"oid": "60afd069f24216b88e44e141a87d9b7db612eb40"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI0Nzc5OA==", "bodyText": "Yeah I know. But do we have a test that asserts the same thing as this test but checks for the v4 conditions?", "url": "https://github.com/quarkusio/quarkus/pull/12884#discussion_r510247798", "createdAt": "2020-10-22T15:19:11Z", "author": {"login": "geoand"}, "path": "integration-tests/kubernetes/quarkus-standard-way/src/test/java/io/quarkus/it/kubernetes/OpenshiftV3Test.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package io.quarkus.it.kubernetes;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.entry;\n+\n+import java.io.IOException;\n+import java.nio.file.Path;\n+import java.util.Collection;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.assertj.core.api.AbstractObjectAssert;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.fabric8.kubernetes.api.model.HasMetadata;\n+import io.fabric8.kubernetes.api.model.Service;\n+import io.quarkus.test.ProdBuildResults;\n+import io.quarkus.test.ProdModeTestResults;\n+import io.quarkus.test.QuarkusProdModeTest;\n+\n+public class OpenshiftV3Test {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDIzNjc3Nw=="}, "originalCommit": {"oid": "60afd069f24216b88e44e141a87d9b7db612eb40"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwMDEwNDE3OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjozMTo0MlrOHnL07Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMjozMTo0MlrOHnL07Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDg1MDI4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * The openshift flavor / version to use.\n          \n          \n            \n                 * Older versions of Openshift have minor diferrences in the labels and fields they support.\n          \n          \n            \n                 * This option allows users to have their manifests automatically aligned to they openshift 'flavor' they use.\n          \n          \n            \n                 * The OpenShift flavor / version to use.\n          \n          \n            \n                 * Older versions of OpenShift have minor differences in the labels and fields they support.\n          \n          \n            \n                 * This option allows users to have their manifests automatically aligned to the OpenShift 'flavor' they use.", "url": "https://github.com/quarkusio/quarkus/pull/12884#discussion_r510850285", "createdAt": "2020-10-23T12:31:42Z", "author": {"login": "gsmet"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/OpenshiftConfig.java", "diffHunk": "@@ -14,6 +14,19 @@\n @ConfigRoot\n public class OpenshiftConfig implements PlatformConfiguration {\n \n+    public static enum OpenshiftFlavor {\n+        v3,\n+        v4;\n+    }\n+\n+    /**\n+     * The openshift flavor / version to use.\n+     * Older versions of Openshift have minor diferrences in the labels and fields they support.\n+     * This option allows users to have their manifests automatically aligned to they openshift 'flavor' they use.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8662de0c79d1c33491f895b352aa220cca94282f"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4228, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}