{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MTk2OTI2", "number": 9218, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjoxNjowNlrOD7Twxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTo0MTo0N1rOD8H_ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTE2MzU5OnYy", "diffSide": "RIGHT", "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjoxNjowNlrOGTjbkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzozMzowNVrOGUGx8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE1NjYyNA==", "bodyText": "Maybe throw a PanacheQueryException instead ?", "url": "https://github.com/quarkusio/quarkus/pull/9218#discussion_r423156624", "createdAt": "2020-05-11T16:16:06Z", "author": {"login": "loicmathieu"}, "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java", "diffHunk": "@@ -198,9 +204,24 @@ private String countQuery() {\n         Matcher selectMatcher = SELECT_PATTERN.matcher(query);\n         String countQuery;\n         if (selectMatcher.matches()) {\n-            countQuery = \"SELECT COUNT(\" + selectMatcher.group(1) + \") \" + selectMatcher.group(2);\n-        } else {\n+            // this one cannot be null\n+            String firstSelection = selectMatcher.group(1).trim();\n+            if (firstSelection.toLowerCase().startsWith(\"distinct \")) {\n+                // this one can be null\n+                String secondSelection = selectMatcher.group(2);\n+                // we can only count distinct single columns\n+                if (secondSelection != null && !secondSelection.trim().isEmpty()) {\n+                    throw new IllegalArgumentException(\"Count query not supported for select query: \" + query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b1b9ebc3aa205db2c6174625d672cabac255c52"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzczNTc5NA==", "bodyText": "Fine, done.", "url": "https://github.com/quarkusio/quarkus/pull/9218#discussion_r423735794", "createdAt": "2020-05-12T13:33:05Z", "author": {"login": "FroMage"}, "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java", "diffHunk": "@@ -198,9 +204,24 @@ private String countQuery() {\n         Matcher selectMatcher = SELECT_PATTERN.matcher(query);\n         String countQuery;\n         if (selectMatcher.matches()) {\n-            countQuery = \"SELECT COUNT(\" + selectMatcher.group(1) + \") \" + selectMatcher.group(2);\n-        } else {\n+            // this one cannot be null\n+            String firstSelection = selectMatcher.group(1).trim();\n+            if (firstSelection.toLowerCase().startsWith(\"distinct \")) {\n+                // this one can be null\n+                String secondSelection = selectMatcher.group(2);\n+                // we can only count distinct single columns\n+                if (secondSelection != null && !secondSelection.trim().isEmpty()) {\n+                    throw new IllegalArgumentException(\"Count query not supported for select query: \" + query);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE1NjYyNA=="}, "originalCommit": {"oid": "9b1b9ebc3aa205db2c6174625d672cabac255c52"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNTE2NjIzOnYy", "diffSide": "RIGHT", "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNjoxNjo1MFrOGTjdLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzozMjo1N1rOGUGxjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE1NzAzOQ==", "bodyText": "Maybe throw a PanacheQueryException instead ?", "url": "https://github.com/quarkusio/quarkus/pull/9218#discussion_r423157039", "createdAt": "2020-05-11T16:16:50Z", "author": {"login": "loicmathieu"}, "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java", "diffHunk": "@@ -198,9 +204,24 @@ private String countQuery() {\n         Matcher selectMatcher = SELECT_PATTERN.matcher(query);\n         String countQuery;\n         if (selectMatcher.matches()) {\n-            countQuery = \"SELECT COUNT(\" + selectMatcher.group(1) + \") \" + selectMatcher.group(2);\n-        } else {\n+            // this one cannot be null\n+            String firstSelection = selectMatcher.group(1).trim();\n+            if (firstSelection.toLowerCase().startsWith(\"distinct \")) {\n+                // this one can be null\n+                String secondSelection = selectMatcher.group(2);\n+                // we can only count distinct single columns\n+                if (secondSelection != null && !secondSelection.trim().isEmpty()) {\n+                    throw new IllegalArgumentException(\"Count query not supported for select query: \" + query);\n+                }\n+                countQuery = \"SELECT COUNT(\" + firstSelection + \") \" + selectMatcher.group(3);\n+            } else {\n+                // it's not distinct, forget the column list\n+                countQuery = \"SELECT COUNT(*) \" + selectMatcher.group(3);\n+            }\n+        } else if (FROM_PATTERN.matcher(query).matches()) {\n             countQuery = \"SELECT COUNT(*) \" + query;\n+        } else {\n+            throw new IllegalArgumentException(\"Count query not supported for select query: \" + query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b1b9ebc3aa205db2c6174625d672cabac255c52"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzczNTY5NQ==", "bodyText": "Fine, done.", "url": "https://github.com/quarkusio/quarkus/pull/9218#discussion_r423735695", "createdAt": "2020-05-12T13:32:57Z", "author": {"login": "FroMage"}, "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java", "diffHunk": "@@ -198,9 +204,24 @@ private String countQuery() {\n         Matcher selectMatcher = SELECT_PATTERN.matcher(query);\n         String countQuery;\n         if (selectMatcher.matches()) {\n-            countQuery = \"SELECT COUNT(\" + selectMatcher.group(1) + \") \" + selectMatcher.group(2);\n-        } else {\n+            // this one cannot be null\n+            String firstSelection = selectMatcher.group(1).trim();\n+            if (firstSelection.toLowerCase().startsWith(\"distinct \")) {\n+                // this one can be null\n+                String secondSelection = selectMatcher.group(2);\n+                // we can only count distinct single columns\n+                if (secondSelection != null && !secondSelection.trim().isEmpty()) {\n+                    throw new IllegalArgumentException(\"Count query not supported for select query: \" + query);\n+                }\n+                countQuery = \"SELECT COUNT(\" + firstSelection + \") \" + selectMatcher.group(3);\n+            } else {\n+                // it's not distinct, forget the column list\n+                countQuery = \"SELECT COUNT(*) \" + selectMatcher.group(3);\n+            }\n+        } else if (FROM_PATTERN.matcher(query).matches()) {\n             countQuery = \"SELECT COUNT(*) \" + query;\n+        } else {\n+            throw new IllegalArgumentException(\"Count query not supported for select query: \" + query);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE1NzAzOQ=="}, "originalCommit": {"oid": "9b1b9ebc3aa205db2c6174625d672cabac255c52"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzcyMTA2OnYy", "diffSide": "RIGHT", "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTo0MTo0N1rOGU3z_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTo0MTo0N1rOGU3z_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzOTEzMg==", "bodyText": "I generally think it's a good idea to enclose this type of output in quotes, but I'll leave it up to you :)", "url": "https://github.com/quarkusio/quarkus/pull/9218#discussion_r424539132", "createdAt": "2020-05-13T15:41:47Z", "author": {"login": "geoand"}, "path": "extensions/panache/hibernate-orm-panache-common/runtime/src/main/java/io/quarkus/hibernate/orm/panache/common/runtime/CommonPanacheQueryImpl.java", "diffHunk": "@@ -198,9 +204,24 @@ private String countQuery() {\n         Matcher selectMatcher = SELECT_PATTERN.matcher(query);\n         String countQuery;\n         if (selectMatcher.matches()) {\n-            countQuery = \"SELECT COUNT(\" + selectMatcher.group(1) + \") \" + selectMatcher.group(2);\n-        } else {\n+            // this one cannot be null\n+            String firstSelection = selectMatcher.group(1).trim();\n+            if (firstSelection.toLowerCase().startsWith(\"distinct \")) {\n+                // this one can be null\n+                String secondSelection = selectMatcher.group(2);\n+                // we can only count distinct single columns\n+                if (secondSelection != null && !secondSelection.trim().isEmpty()) {\n+                    throw new PanacheQueryException(\"Count query not supported for select query: \" + query);\n+                }\n+                countQuery = \"SELECT COUNT(\" + firstSelection + \") \" + selectMatcher.group(3);\n+            } else {\n+                // it's not distinct, forget the column list\n+                countQuery = \"SELECT COUNT(*) \" + selectMatcher.group(3);\n+            }\n+        } else if (FROM_PATTERN.matcher(query).matches()) {\n             countQuery = \"SELECT COUNT(*) \" + query;\n+        } else {\n+            throw new PanacheQueryException(\"Count query not supported for select query: \" + query);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "775d967690ee00ffadf889bb2138d74565bf5296"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3181, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}