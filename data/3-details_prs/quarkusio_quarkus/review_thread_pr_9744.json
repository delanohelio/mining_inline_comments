{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MTcxOTk4", "number": 9744, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDo1NTo1MVrOECgjNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMTowMjowOFrOECgrXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDY1OTExOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/blaze-persistence.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDo1NTo1MVrOGfAefQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDo1NTo1MVrOGfAefQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE2Njg0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            box given a working Hibernate configuration. For customization, overriding of the default producers is possible via the\n          \n          \n            \n            box given a working Hibernate ORM configuration. For customization, overriding of the default producers is possible via the\n          \n      \n    \n    \n  \n\nWe try to get people aware there are other projects under the Hibernate umbrella :)", "url": "https://github.com/quarkusio/quarkus/pull/9744#discussion_r435166845", "createdAt": "2020-06-04T10:55:51Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/blaze-persistence.adoc", "diffHunk": "@@ -0,0 +1,199 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Using Blaze-Persistence\n+\n+include::./attributes.adoc[]\n+:config-file: application.properties\n+\n+Blaze-Persistence is a query builder on top of JPA that provides support for advanced SQL features and Entity-Views for efficient DTOs.\n+\n+== Setting up and configuring Hibernate ORM\n+\n+The extension comes with default producers for `CriteriaBuilderFactory` and `EntityViewManager` that work out of the\n+box given a working Hibernate configuration. For customization, overriding of the default producers is possible via the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f752faa743897acf044a4fc3c3a896341c2063c"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDY2NDkxOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/blaze-persistence.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDo1NzoyOFrOGfAh7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDo1NzoyOFrOGfAh7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE2NzcyNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            <1> Inject the entity manager\n          \n          \n            \n            <1> Inject the `EntityManager`", "url": "https://github.com/quarkusio/quarkus/pull/9744#discussion_r435167725", "createdAt": "2020-06-04T10:57:28Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/blaze-persistence.adoc", "diffHunk": "@@ -0,0 +1,199 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Using Blaze-Persistence\n+\n+include::./attributes.adoc[]\n+:config-file: application.properties\n+\n+Blaze-Persistence is a query builder on top of JPA that provides support for advanced SQL features and Entity-Views for efficient DTOs.\n+\n+== Setting up and configuring Hibernate ORM\n+\n+The extension comes with default producers for `CriteriaBuilderFactory` and `EntityViewManager` that work out of the\n+box given a working Hibernate configuration. For customization, overriding of the default producers is possible via the\n+standard mechanism as documented in the link:{quarkus-home-url}/guides/cdi-reference#default_beans[Quarkus CDI reference].\n+This is needed if you need to set custom link:https://persistence.blazebit.com/documentation/entity-view/manual/en_US/index.html#anchor-configuration-properties[Blaze-Persistence properties].\n+\n+In Quarkus, you just need to:\n+\n+* `@Inject` `CriteriaBuilderFactory` or `EntityViewManager` and use it\n+* annotate your entity views with `@EntityView` and any other mapping annotation as usual\n+\n+Add the following dependencies to your project:\n+\n+* the Blaze-Persistence extension: `com.blazebit:blaze-persistence-integration-quarkus`\n+* further Blaze-Persistence integrations as needed:\n+  - `blaze-persistence-integration-jackson` for link:https://persistence.blazebit.com/documentation/entity-view/manual/en_US/index.html#Jackson%20integration[Jackson]\n+  - `blaze-persistence-integration-jaxrs` for link:https://persistence.blazebit.com/documentation/entity-view/manual/en_US/index.html#jaxrs-integration[JAX-RS]\n+\n+\n+[source,xml]\n+.Example dependencies using Maven\n+--\n+<dependencies>\n+    <!-- Blaze-Persistence specific dependencies -->\n+    <dependency>\n+        <groupId>com.blazebit</groupId>\n+        <artifactId>blaze-persistence-integration-quarkus</artifactId>\n+    </dependency>\n+</dependencies>\n+--\n+\n+A `CriteriaBuilderFactory` and an `EntityViewManager` will be created based on the configured `EntityManagerFactory` as provided by the link:{quarkus-home-url}/guides/hibernate-orm[Hibernate-ORM extension].\n+\n+You can then access these beans via injection:\n+\n+[source,java]\n+.Example application bean using Hibernate\n+--\n+@ApplicationScoped\n+public class SantaClausService {\n+    @Inject\n+    EntityManager em; <1>\n+    @Inject\n+    CriteriaBuilderFactory cbf; <2>\n+    @Inject\n+    EntityViewManager evm; <3>\n+\n+    @Transactional <4>\n+    public List<GiftView> findAllGifts() {\n+        CriteriaBuilder<Gift> cb = cbf.create(em, Gift.class);\n+        return emv.applySetting(EntityViewSetting.create(GiftView.class), cb).getResultList();\n+    }\n+}\n+--\n+\n+<1> Inject the entity manager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f752faa743897acf044a4fc3c3a896341c2063c"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDY2ODk1OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/blaze-persistence.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDo1ODo0MVrOGfAkVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMDo1ODo0MVrOGfAkVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE2ODM0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            There are no required properties, as long as the Hibernate-ORM extension is configured properly.\n          \n          \n            \n            There are no required properties, as long as the Hibernate ORM extension is configured properly.", "url": "https://github.com/quarkusio/quarkus/pull/9744#discussion_r435168340", "createdAt": "2020-06-04T10:58:41Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/blaze-persistence.adoc", "diffHunk": "@@ -0,0 +1,199 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Using Blaze-Persistence\n+\n+include::./attributes.adoc[]\n+:config-file: application.properties\n+\n+Blaze-Persistence is a query builder on top of JPA that provides support for advanced SQL features and Entity-Views for efficient DTOs.\n+\n+== Setting up and configuring Hibernate ORM\n+\n+The extension comes with default producers for `CriteriaBuilderFactory` and `EntityViewManager` that work out of the\n+box given a working Hibernate configuration. For customization, overriding of the default producers is possible via the\n+standard mechanism as documented in the link:{quarkus-home-url}/guides/cdi-reference#default_beans[Quarkus CDI reference].\n+This is needed if you need to set custom link:https://persistence.blazebit.com/documentation/entity-view/manual/en_US/index.html#anchor-configuration-properties[Blaze-Persistence properties].\n+\n+In Quarkus, you just need to:\n+\n+* `@Inject` `CriteriaBuilderFactory` or `EntityViewManager` and use it\n+* annotate your entity views with `@EntityView` and any other mapping annotation as usual\n+\n+Add the following dependencies to your project:\n+\n+* the Blaze-Persistence extension: `com.blazebit:blaze-persistence-integration-quarkus`\n+* further Blaze-Persistence integrations as needed:\n+  - `blaze-persistence-integration-jackson` for link:https://persistence.blazebit.com/documentation/entity-view/manual/en_US/index.html#Jackson%20integration[Jackson]\n+  - `blaze-persistence-integration-jaxrs` for link:https://persistence.blazebit.com/documentation/entity-view/manual/en_US/index.html#jaxrs-integration[JAX-RS]\n+\n+\n+[source,xml]\n+.Example dependencies using Maven\n+--\n+<dependencies>\n+    <!-- Blaze-Persistence specific dependencies -->\n+    <dependency>\n+        <groupId>com.blazebit</groupId>\n+        <artifactId>blaze-persistence-integration-quarkus</artifactId>\n+    </dependency>\n+</dependencies>\n+--\n+\n+A `CriteriaBuilderFactory` and an `EntityViewManager` will be created based on the configured `EntityManagerFactory` as provided by the link:{quarkus-home-url}/guides/hibernate-orm[Hibernate-ORM extension].\n+\n+You can then access these beans via injection:\n+\n+[source,java]\n+.Example application bean using Hibernate\n+--\n+@ApplicationScoped\n+public class SantaClausService {\n+    @Inject\n+    EntityManager em; <1>\n+    @Inject\n+    CriteriaBuilderFactory cbf; <2>\n+    @Inject\n+    EntityViewManager evm; <3>\n+\n+    @Transactional <4>\n+    public List<GiftView> findAllGifts() {\n+        CriteriaBuilder<Gift> cb = cbf.create(em, Gift.class);\n+        return emv.applySetting(EntityViewSetting.create(GiftView.class), cb).getResultList();\n+    }\n+}\n+--\n+\n+<1> Inject the entity manager\n+<2> Inject the `CriteriaBuilderFactory`\n+<3> Inject the `EntityViewManager`\n+<4> Mark your CDI bean method as `@Transactional` so that a transaction is started or joined.\n+\n+[source,java]\n+.Example Entity\n+--\n+@Entity\n+public class Gift {\n+    private Long id;\n+    private String name;\n+    private String description;\n+\n+    @Id @GeneratedValue(strategy = GenerationType.SEQUENCE, generator=\"giftSeq\")\n+    public Long getId() {\n+        return id;\n+    }\n+\n+    public void setId(Long id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+\n+    public String getDescription() {\n+        return description;\n+    }\n+\n+    public void setDescription(String description) {\n+        this.description = description;\n+    }\n+}\n+--\n+\n+[source,java]\n+.Example Entity-View\n+--\n+@EntityView(Gift.class)\n+public interface GiftView {\n+\n+    @IdMapping\n+    Long getId();\n+\n+    String getName();\n+}\n+--\n+\n+[source,java]\n+.Example updatable Entity-View\n+--\n+@UpdatableEntityView\n+@CreatableEntityView\n+@EntityView(Gift.class)\n+public interface GiftUpdateView extends GiftView {\n+\n+    void setName(String name);\n+}\n+--\n+\n+[source,java]\n+.Example JAX-RS Resource\n+--\n+@Path(\"/gifts\")\n+public class GiftResource {\n+    @Inject\n+    EntityManager entityManager;\n+    @Inject\n+    EntityViewManager entityViewManager;\n+    @Inject\n+    SantaClausService santaClausService;\n+\n+    @POST\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Transactional\n+    public Response createGift(GiftUpdateView view) {\n+        entityViewManager.save(entityManager, view);\n+        return Response.created(URI.create(\"/gifts/\" + view.getId())).build();\n+    }\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public List<GiftView> getGifts() {\n+        return santaClausService.findAllGifts();\n+    }\n+\n+    @PUT\n+    @Path(\"{id}\")\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Produces(MediaType.APPLICATION_JSON)\n+    @Transactional\n+    public GiftView updateGift(@EntityViewId(\"id\") GiftUpdateView view) {\n+        evm.save(em, view);\n+        return evm.find(em, GiftView.class, view.getId());\n+    }\n+\n+    @Path(\"{id\"})\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public GiftView getGift(@PathParam(\"id\") Long id) {\n+        return return entityViewManager.find(entityManager, GiftView.class, view.getId());\n+    }\n+}\n+--\n+\n+[[blaze-persistence-configuration-properties]]\n+=== Blaze-Persistence configuration properties\n+\n+There are various optional properties useful to refine your `EntityViewManager` and `CriteriaBuilderFactory` or guide guesses of Quarkus.\n+\n+There are no required properties, as long as the Hibernate-ORM extension is configured properly.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f752faa743897acf044a4fc3c3a896341c2063c"}, "originalPosition": 187}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDY3OTk2OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/blaze-persistence.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMTowMjowOFrOGfArZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMTowMjowOFrOGfArZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE3MDE0OA==", "bodyText": "I think it would be a good idea to have a longer introduction explaining what it brings to the plate and the problems it's supposed to solve.", "url": "https://github.com/quarkusio/quarkus/pull/9744#discussion_r435170148", "createdAt": "2020-06-04T11:02:08Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/blaze-persistence.adoc", "diffHunk": "@@ -0,0 +1,199 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Using Blaze-Persistence\n+\n+include::./attributes.adoc[]\n+:config-file: application.properties\n+\n+Blaze-Persistence is a query builder on top of JPA that provides support for advanced SQL features and Entity-Views for efficient DTOs.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f752faa743897acf044a4fc3c3a896341c2063c"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2910, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}