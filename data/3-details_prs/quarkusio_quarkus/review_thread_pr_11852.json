{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NTU2OTI1", "number": 11852, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyNToxOFrOEf8jfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyNToxOFrOEf8jfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTMzNDM3OnYy", "diffSide": "RIGHT", "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheHibernateResourceProcessor.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyNToxOFrOHMiLiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMzoxNjo0M1rOHMmF7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNDk2OA==", "bodyText": "Hmmm. Do we support using both approaches correctly?\nI haven't checked thoroughly but my bet would be it won't work.", "url": "https://github.com/quarkusio/quarkus/pull/11852#discussion_r482904968", "createdAt": "2020-09-03T11:25:18Z", "author": {"login": "gsmet"}, "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheHibernateResourceProcessor.java", "diffHunk": "@@ -186,6 +197,10 @@ void build(CombinedIndexBuildItem index,\n                 }\n             }\n         }\n+\n+        panacheEntities.addAll(modelClasses);\n+\n+        recordPanacheEntityPersistenceUnits(recorder, jpaModelPersistenceUnitMapping, panacheEntities);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "648469149679830bf7ed99a68b82fc2b22beeed9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwOTUxMg==", "bodyText": "I'm not sure I was clear but I meant: mixing Panache entities and Panache repositories approaches.", "url": "https://github.com/quarkusio/quarkus/pull/11852#discussion_r482909512", "createdAt": "2020-09-03T11:34:12Z", "author": {"login": "gsmet"}, "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheHibernateResourceProcessor.java", "diffHunk": "@@ -186,6 +197,10 @@ void build(CombinedIndexBuildItem index,\n                 }\n             }\n         }\n+\n+        panacheEntities.addAll(modelClasses);\n+\n+        recordPanacheEntityPersistenceUnits(recorder, jpaModelPersistenceUnitMapping, panacheEntities);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNDk2OA=="}, "originalCommit": {"oid": "648469149679830bf7ed99a68b82fc2b22beeed9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkyMjUyOA==", "bodyText": "I am not sure it is clear enough. You mean a PanacheEntity cannot have the corresponding Panache repository?\nIf so, I think it is very possible. I once used that pattern here:\n\nTodoRepository.java\nTodo.java", "url": "https://github.com/quarkusio/quarkus/pull/11852#discussion_r482922528", "createdAt": "2020-09-03T11:58:35Z", "author": {"login": "machi1990"}, "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheHibernateResourceProcessor.java", "diffHunk": "@@ -186,6 +197,10 @@ void build(CombinedIndexBuildItem index,\n                 }\n             }\n         }\n+\n+        panacheEntities.addAll(modelClasses);\n+\n+        recordPanacheEntityPersistenceUnits(recorder, jpaModelPersistenceUnitMapping, panacheEntities);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNDk2OA=="}, "originalCommit": {"oid": "648469149679830bf7ed99a68b82fc2b22beeed9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk0MjE0NQ==", "bodyText": "No I mean: what happens if you have:\n\nEntity1 which is an entity using the Active Record pattern and inheriting from PanacheEntity\nEntity2 which uses the Panache repository pattern\nall in the same project.", "url": "https://github.com/quarkusio/quarkus/pull/11852#discussion_r482942145", "createdAt": "2020-09-03T12:33:33Z", "author": {"login": "gsmet"}, "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheHibernateResourceProcessor.java", "diffHunk": "@@ -186,6 +197,10 @@ void build(CombinedIndexBuildItem index,\n                 }\n             }\n         }\n+\n+        panacheEntities.addAll(modelClasses);\n+\n+        recordPanacheEntityPersistenceUnits(recorder, jpaModelPersistenceUnitMapping, panacheEntities);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNDk2OA=="}, "originalCommit": {"oid": "648469149679830bf7ed99a68b82fc2b22beeed9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk0NDk4NQ==", "bodyText": "This should work too.\nIt's what I've in my test case I just did not extend it enough: let me add it so that we can confirm that it works.", "url": "https://github.com/quarkusio/quarkus/pull/11852#discussion_r482944985", "createdAt": "2020-09-03T12:38:26Z", "author": {"login": "machi1990"}, "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheHibernateResourceProcessor.java", "diffHunk": "@@ -186,6 +197,10 @@ void build(CombinedIndexBuildItem index,\n                 }\n             }\n         }\n+\n+        panacheEntities.addAll(modelClasses);\n+\n+        recordPanacheEntityPersistenceUnits(recorder, jpaModelPersistenceUnitMapping, panacheEntities);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNDk2OA=="}, "originalCommit": {"oid": "648469149679830bf7ed99a68b82fc2b22beeed9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk0OTY4MA==", "bodyText": "@gsmet I've added this test case in a separate commit 789e6ed", "url": "https://github.com/quarkusio/quarkus/pull/11852#discussion_r482949680", "createdAt": "2020-09-03T12:46:16Z", "author": {"login": "machi1990"}, "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheHibernateResourceProcessor.java", "diffHunk": "@@ -186,6 +197,10 @@ void build(CombinedIndexBuildItem index,\n                 }\n             }\n         }\n+\n+        panacheEntities.addAll(modelClasses);\n+\n+        recordPanacheEntityPersistenceUnits(recorder, jpaModelPersistenceUnitMapping, panacheEntities);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNDk2OA=="}, "originalCommit": {"oid": "648469149679830bf7ed99a68b82fc2b22beeed9"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk2OTA2OA==", "bodyText": "OK, perfect if we have a test!", "url": "https://github.com/quarkusio/quarkus/pull/11852#discussion_r482969068", "createdAt": "2020-09-03T13:16:43Z", "author": {"login": "gsmet"}, "path": "extensions/panache/hibernate-orm-panache/deployment/src/main/java/io/quarkus/hibernate/orm/panache/deployment/PanacheHibernateResourceProcessor.java", "diffHunk": "@@ -186,6 +197,10 @@ void build(CombinedIndexBuildItem index,\n                 }\n             }\n         }\n+\n+        panacheEntities.addAll(modelClasses);\n+\n+        recordPanacheEntityPersistenceUnits(recorder, jpaModelPersistenceUnitMapping, panacheEntities);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNDk2OA=="}, "originalCommit": {"oid": "648469149679830bf7ed99a68b82fc2b22beeed9"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 488, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}