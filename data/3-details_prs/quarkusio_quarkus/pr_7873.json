{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MDMwOTMz", "number": 7873, "title": "Add support for Vault TOTP secrets", "bodyText": "PR for adding support for Vault TOTP: https://www.vaultproject.io/api/secret/totp/index.html\nWhen the PR is merged I'll send another PR with a new document explaining how to use it.\nFixes #7865", "createdAt": "2020-03-16T07:02:29Z", "url": "https://github.com/quarkusio/quarkus/pull/7873", "merged": true, "mergeCommit": {"oid": "49b873ef1ed0777419ccb7c6df919d89e311f677"}, "closed": true, "closedAt": "2020-03-19T18:13:41Z", "author": {"login": "lordofthejars"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcORfgIgFqTM3NTQzMDcxOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPQAGOAFqTM3Nzk3NjMwOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NDMwNzE5", "url": "https://github.com/quarkusio/quarkus/pull/7873#pullrequestreview-375430719", "createdAt": "2020-03-16T17:23:49Z", "commit": {"oid": "be73cb73ffd2e1077d3396f910e3b1d0b5248cca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzoyMzo0OVrOF2-dOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzoyMzo0OVrOF2-dOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE5MDcxMw==", "bodyText": "Can the dynamic key operations be of the practical interest to the application code ? I suppose one can indeed create them dynamically, just checking :-)", "url": "https://github.com/quarkusio/quarkus/pull/7873#discussion_r393190713", "createdAt": "2020-03-16T17:23:49Z", "author": {"login": "sberyozkin"}, "path": "extensions/vault/runtime/src/main/java/io/quarkus/vault/VaultTOTPSecretEngine.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package io.quarkus.vault;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import io.quarkus.vault.runtime.config.VaultRuntimeConfig;\n+import io.quarkus.vault.secrets.totp.CreateKeyParameters;\n+import io.quarkus.vault.secrets.totp.KeyConfiguration;\n+import io.quarkus.vault.secrets.totp.KeyDefinition;\n+\n+/**\n+ * This service provides access to the TOTP secret engine.\n+ *\n+ * @see VaultRuntimeConfig\n+ */\n+public interface VaultTOTPSecretEngine {\n+\n+    /**\n+     * Creates or updates a key definition.\n+     * \n+     * @param name of the key.\n+     * @param createKeyParameters required to create or update a key.\n+     * @return Barcode and/or URL of the created OTP key.\n+     */\n+    Optional<KeyDefinition> createKey(String name, CreateKeyParameters createKeyParameters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be73cb73ffd2e1077d3396f910e3b1d0b5248cca"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1ODA1MDc5", "url": "https://github.com/quarkusio/quarkus/pull/7873#pullrequestreview-375805079", "createdAt": "2020-03-17T07:56:50Z", "commit": {"oid": "be73cb73ffd2e1077d3396f910e3b1d0b5248cca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNzo1Njo1MFrOF3RKEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwNzo1Njo1MFrOF3RKEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ5NzEwNA==", "bodyText": "I have used body for local variables and parameters throughout this class for conciseness. same for result in VaultTOTPManager", "url": "https://github.com/quarkusio/quarkus/pull/7873#discussion_r393497104", "createdAt": "2020-03-17T07:56:50Z", "author": {"login": "vsevel"}, "path": "extensions/vault/runtime/src/main/java/io/quarkus/vault/runtime/client/OkHttpVaultClient.java", "diffHunk": "@@ -167,11 +174,61 @@ public VaultTransitEncrypt rewrap(String token, String keyName, VaultTransitRewr\n         return post(\"transit/rewrap/\" + keyName, token, body, VaultTransitEncrypt.class);\n     }\n \n+    @Override\n+    public VaultTOTPCreateKeyResult createTOTPKey(String token, String keyName,\n+            VaultTOTPCreateKeyBody body) {\n+        String path = \"totp/keys/\" + keyName;\n+\n+        // Depending on parameters it might produce an output or not\n+        if (body.isProducingOutput()) {\n+            return post(path, token, body, VaultTOTPCreateKeyResult.class, 200);\n+        } else {\n+            post(path, token, body, 204);\n+            return null;\n+        }\n+    }\n+\n+    @Override\n+    public VaultTOTPReadKeyResult readTOTPKey(String token, String keyName) {\n+        String path = \"totp/keys/\" + keyName;\n+        return get(path, token, VaultTOTPReadKeyResult.class);\n+    }\n+\n+    @Override\n+    public VaultTOTPListKeysResult listTOTPKeys(String token) {\n+        return list(\"totp/keys\", token, VaultTOTPListKeysResult.class);\n+    }\n+\n+    @Override\n+    public void deleteTOTPKey(String token, String keyName) {\n+        String path = \"totp/keys/\" + keyName;\n+        delete(path, token, 204);\n+    }\n+\n+    @Override\n+    public VaultTOTPGenerateCodeResult generateTOTPCode(String token, String keyName) {\n+        String path = \"totp/code/\" + keyName;\n+        return get(path, token, VaultTOTPGenerateCodeResult.class);\n+    }\n+\n+    @Override\n+    public VaultTOTPValidateCodeResult validateTOTPCode(String token, String keyName,\n+            String code) {\n+        String path = \"totp/code/\" + keyName;\n+        VaultTOTPValidateCodeBody vaultTOTPValidateCodeBody = new VaultTOTPValidateCodeBody(code);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be73cb73ffd2e1077d3396f910e3b1d0b5248cca"}, "originalPosition": 74}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1ODA2ODkw", "url": "https://github.com/quarkusio/quarkus/pull/7873#pullrequestreview-375806890", "createdAt": "2020-03-17T08:00:05Z", "commit": {"oid": "be73cb73ffd2e1077d3396f910e3b1d0b5248cca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODowMDowNVrOF3RPqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODowMDowNVrOF3RPqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQ5ODUzOQ==", "bodyText": "It is funny I have never spotted that I was sending null to vault in the other use cases.\nI would suggest making it a global default for the extension with mapper.setSerializationInclusion(Include.NON_NULL); rather than having to specify it on each field.", "url": "https://github.com/quarkusio/quarkus/pull/7873#discussion_r393498539", "createdAt": "2020-03-17T08:00:05Z", "author": {"login": "vsevel"}, "path": "extensions/vault/runtime/src/main/java/io/quarkus/vault/runtime/client/dto/totp/VaultTOTPCreateKeyBody.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.quarkus.vault.runtime.client.dto.totp;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import io.quarkus.vault.runtime.client.dto.VaultModel;\n+\n+public class VaultTOTPCreateKeyBody implements VaultModel {\n+\n+    @JsonInclude(JsonInclude.Include.NON_NULL)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be73cb73ffd2e1077d3396f910e3b1d0b5248cca"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1ODI2MzQ3", "url": "https://github.com/quarkusio/quarkus/pull/7873#pullrequestreview-375826347", "createdAt": "2020-03-17T08:33:06Z", "commit": {"oid": "be73cb73ffd2e1077d3396f910e3b1d0b5248cca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODozMzowNlrOF3SMTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODozMzowNlrOF3SMTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUxNDA2MA==", "bodyText": "(exported == null || exported) && (generate != null && generate)\nit is simpler, and the logic is not broken when the user passes new Boolean(true) instead of Boolean.TRUE\nor (a bit longer but a bit clearer):\n    public boolean isProducingOutput() {\n        return is(exported, true) && is(generate, false);\n    }\n\n    private boolean is(Boolean v, boolean defaultValue) {\n        return v == null ? defaultValue : v;\n    }", "url": "https://github.com/quarkusio/quarkus/pull/7873#discussion_r393514060", "createdAt": "2020-03-17T08:33:06Z", "author": {"login": "vsevel"}, "path": "extensions/vault/runtime/src/main/java/io/quarkus/vault/runtime/client/dto/totp/VaultTOTPCreateKeyBody.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package io.quarkus.vault.runtime.client.dto.totp;\n+\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+\n+import io.quarkus.vault.runtime.client.dto.VaultModel;\n+\n+public class VaultTOTPCreateKeyBody implements VaultModel {\n+\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public Boolean generate;\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public Boolean exported;\n+\n+    @JsonProperty(\"key_size\")\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public Integer keySize;\n+\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public String url;\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public String key;\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public String issuer;\n+\n+    @JsonProperty(\"account_name\")\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public String accountName;\n+\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public String period;\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public String algorithm;\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public Integer digits;\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public Integer skew;\n+\n+    @JsonProperty(\"qr_size\")\n+    @JsonInclude(JsonInclude.Include.NON_NULL)\n+    public Integer qrSize;\n+\n+    public boolean isProducingOutput() {\n+        // When exported is not set, by default is true\n+        return (exported == null || exported == Boolean.TRUE) && (generate != null && generate == Boolean.TRUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be73cb73ffd2e1077d3396f910e3b1d0b5248cca"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1ODQzNTI5", "url": "https://github.com/quarkusio/quarkus/pull/7873#pullrequestreview-375843529", "createdAt": "2020-03-17T08:58:30Z", "commit": {"oid": "be73cb73ffd2e1077d3396f910e3b1d0b5248cca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODo1ODozMVrOF3TBkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwODo1ODozMVrOF3TBkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUyNzY5Ng==", "bodyText": "create a constant?", "url": "https://github.com/quarkusio/quarkus/pull/7873#discussion_r393527696", "createdAt": "2020-03-17T08:58:31Z", "author": {"login": "vsevel"}, "path": "integration-tests/vault/src/test/java/io/quarkus/vault/VaultTOTPITCase.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package io.quarkus.vault;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import javax.inject.Inject;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.condition.DisabledOnOs;\n+import org.junit.jupiter.api.condition.OS;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.test.QuarkusUnitTest;\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.vault.secrets.totp.CreateKeyParameters;\n+import io.quarkus.vault.secrets.totp.KeyConfiguration;\n+import io.quarkus.vault.secrets.totp.KeyDefinition;\n+import io.quarkus.vault.test.VaultTestLifecycleManager;\n+\n+@DisabledOnOs(OS.WINDOWS) // https://github.com/quarkusio/quarkus/issues/3796\n+@QuarkusTestResource(VaultTestLifecycleManager.class)\n+public class VaultTOTPITCase {\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest config = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addAsResource(\"application-vault-totp.properties\", \"application.properties\"));\n+\n+    @Inject\n+    VaultTOTPSecretEngine vaultTOTPSecretEngine;\n+\n+    @Test\n+    public void createKey() {\n+        CreateKeyParameters createKeyParameters = new CreateKeyParameters(\n+                \"otpauth://totp/Vault:test@test.com?secret=Y64VEVMBTSXCYIWRSHRNDZW62MPGVU2G&issuer=Vault\");\n+        final Optional<KeyDefinition> myKey = vaultTOTPSecretEngine.createKey(\"my_key\", createKeyParameters);\n+\n+        assertThat(myKey).isNotPresent();\n+    }\n+\n+    @Test\n+    public void createGenerateKey() {\n+        CreateKeyParameters createKeyParameters = new CreateKeyParameters(\"Google\", \"test@gmail.com\");\n+        final Optional<KeyDefinition> myKey = vaultTOTPSecretEngine.createKey(\"my_key_2\", createKeyParameters);\n+\n+        assertThat(myKey)\n+                .isPresent()\n+                .get().hasNoNullFieldsOrProperties();\n+    }\n+\n+    @Test\n+    public void readKey() {\n+        CreateKeyParameters createKeyParameters = new CreateKeyParameters(\n+                \"otpauth://totp/Vault:test@google.com?secret=Y64VEVMBTSXCYIWRSHRNDZW62MPGVU2G&issuer=Vault\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be73cb73ffd2e1077d3396f910e3b1d0b5248cca"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1OTM5NDQw", "url": "https://github.com/quarkusio/quarkus/pull/7873#pullrequestreview-375939440", "createdAt": "2020-03-17T11:14:02Z", "commit": {"oid": "e4cdd42abc484299974dc5aa9eaf31a9fc336920"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMToxNDowMlrOF3XqoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMToxNDowMlrOF3XqoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYwMzc0NQ==", "bodyText": "actually I do not think you have any config properties.\nthis might be nice to include a link to the official vault doc, such as in: https://github.com/lordofthejars/quarkus/blob/issue-7865/extensions/vault/runtime/src/main/java/io/quarkus/vault/VaultTransitSecretEngine.java#L23", "url": "https://github.com/quarkusio/quarkus/pull/7873#discussion_r393603745", "createdAt": "2020-03-17T11:14:02Z", "author": {"login": "vsevel"}, "path": "extensions/vault/runtime/src/main/java/io/quarkus/vault/VaultTOTPSecretEngine.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package io.quarkus.vault;\n+\n+import java.util.List;\n+import java.util.Optional;\n+\n+import io.quarkus.vault.runtime.config.VaultRuntimeConfig;\n+import io.quarkus.vault.secrets.totp.CreateKeyParameters;\n+import io.quarkus.vault.secrets.totp.KeyConfiguration;\n+import io.quarkus.vault.secrets.totp.KeyDefinition;\n+\n+/**\n+ * This service provides access to the TOTP secret engine.\n+ *\n+ * @see VaultRuntimeConfig", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cdd42abc484299974dc5aa9eaf31a9fc336920"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1OTQxNjY0", "url": "https://github.com/quarkusio/quarkus/pull/7873#pullrequestreview-375941664", "createdAt": "2020-03-17T11:17:26Z", "commit": {"oid": "e4cdd42abc484299974dc5aa9eaf31a9fc336920"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMToxNzoyN1rOF3XxOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMToxNzoyN1rOF3XxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzYwNTQzMw==", "bodyText": "I would rename vaultTOTPCreateKeyBody into body as well here.", "url": "https://github.com/quarkusio/quarkus/pull/7873#discussion_r393605433", "createdAt": "2020-03-17T11:17:27Z", "author": {"login": "vsevel"}, "path": "extensions/vault/runtime/src/main/java/io/quarkus/vault/runtime/VaultTOTPManager.java", "diffHunk": "@@ -0,0 +1,91 @@\n+package io.quarkus.vault.runtime;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Optional;\n+\n+import io.quarkus.vault.VaultTOTPSecretEngine;\n+import io.quarkus.vault.runtime.client.VaultClient;\n+import io.quarkus.vault.runtime.client.VaultClientException;\n+import io.quarkus.vault.runtime.client.dto.totp.VaultTOTPCreateKeyBody;\n+import io.quarkus.vault.runtime.client.dto.totp.VaultTOTPCreateKeyResult;\n+import io.quarkus.vault.runtime.client.dto.totp.VaultTOTPReadKeyResult;\n+import io.quarkus.vault.runtime.config.VaultRuntimeConfig;\n+import io.quarkus.vault.secrets.totp.CreateKeyParameters;\n+import io.quarkus.vault.secrets.totp.KeyConfiguration;\n+import io.quarkus.vault.secrets.totp.KeyDefinition;\n+\n+public class VaultTOTPManager implements VaultTOTPSecretEngine {\n+\n+    private VaultAuthManager vaultAuthManager;\n+    private VaultClient vaultClient;\n+    private VaultRuntimeConfig serverConfig;\n+\n+    public VaultTOTPManager(VaultAuthManager vaultAuthManager, VaultClient vaultClient, VaultRuntimeConfig serverConfig) {\n+        this.vaultAuthManager = vaultAuthManager;\n+        this.vaultClient = vaultClient;\n+        this.serverConfig = serverConfig;\n+    }\n+\n+    @Override\n+    public Optional<KeyDefinition> createKey(String name, CreateKeyParameters createKeyParameters) {\n+        VaultTOTPCreateKeyBody vaultTOTPCreateKeyBody = new VaultTOTPCreateKeyBody();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4cdd42abc484299974dc5aa9eaf31a9fc336920"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NjQwNTMz", "url": "https://github.com/quarkusio/quarkus/pull/7873#pullrequestreview-376640533", "createdAt": "2020-03-18T08:14:10Z", "commit": {"oid": "1d40a9d40e7f18f515dbca1f569a51afec3d11c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2OTExNzgw", "url": "https://github.com/quarkusio/quarkus/pull/7873#pullrequestreview-376911780", "createdAt": "2020-03-18T14:23:14Z", "commit": {"oid": "1d40a9d40e7f18f515dbca1f569a51afec3d11c1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e80ce542f2c02253a3d05308f32968a30adb4ef", "author": {"user": {"login": "lordofthejars", "name": "Alex Soto"}}, "url": "https://github.com/quarkusio/quarkus/commit/6e80ce542f2c02253a3d05308f32968a30adb4ef", "committedDate": "2020-03-18T16:08:17Z", "message": "fix(#7865): Adds support for Vault TOTP secrets"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MTI5MjA5", "url": "https://github.com/quarkusio/quarkus/pull/7873#pullrequestreview-377129209", "createdAt": "2020-03-18T18:26:46Z", "commit": {"oid": "6e80ce542f2c02253a3d05308f32968a30adb4ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3OTc2MzA4", "url": "https://github.com/quarkusio/quarkus/pull/7873#pullrequestreview-377976308", "createdAt": "2020-03-19T18:13:32Z", "commit": {"oid": "6e80ce542f2c02253a3d05308f32968a30adb4ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3661, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}