{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMzMzODY0", "number": 13647, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo0Nzo1N1rOFABaQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOTozMzo0N1rOFAHTew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NTY3NDI0OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/singleton-examples/picocli-example/base/README.tpl.qute.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo0Nzo1N1rOH-D9FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo0Nzo1N1rOH-D9FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgzODU0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            # {title}\n          \n          \n            \n            \n          \n          \n            \n            {description}\n          \n          \n            \n            \n          \n          \n            \n            Guide: {guide}\n          \n          \n            \n            Picocli example\n          \n          \n            \n            \n          \n          \n            \n            Hello and goodbye are civilization fundamentals. Let's not forget it with this picocli application by changing the `command` and `parameters`.\n          \n          \n            \n            \n          \n          \n            \n            Also for picocli applications the dev mode is supported. When running dev mode, the picocli application is executed and on press of the Enter key, is restarted.\n          \n          \n            \n            \n          \n          \n            \n            As command mode applications will often require arguments to be passed on the commandline, this is also possible in dev mode via:\n          \n          \n            \n            ```shell script\n          \n          \n            \n            {buildtool.cli} {buildtool.cmd.dev} {#if buildtool.cli == 'gradle'}--quarkus-args{#else}-Dquarkus.args={/if}='help'\n          \n          \n            \n            ```\n          \n          \n            \n            \n          \n          \n            \n            Guide: https://quarkus.io/guides/picocli", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534838549", "createdAt": "2020-12-03T07:47:57Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/singleton-examples/picocli-example/base/README.tpl.qute.md", "diffHunk": "@@ -0,0 +1,5 @@\n+# {title}\n+\n+{description}\n+\n+Guide: {guide}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5913908ad4eeb0102902833c453e0abb5ab00a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NTY4MDIyOnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/singleton-examples/picocli-example/codestart.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo0ODozNFrOH-EBfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo0ODozNFrOH-EBfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgzOTY3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            tags:\n          \n          \n            \n              - example\n          \n          \n            \n              - singleton-example\n          \n          \n            \n            tags: example", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534839678", "createdAt": "2020-12-03T07:48:34Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/singleton-examples/picocli-example/codestart.yml", "diffHunk": "@@ -0,0 +1,28 @@\n+name: picocli-example\n+ref: picocli\n+type: code\n+tags:\n+  - example\n+  - singleton-example", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5913908ad4eeb0102902833c453e0abb5ab00a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NTY4OTk2OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/singleton-examples/picocli-example/codestart.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo0OToyOVrOH-EILQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODowMzowMFrOH-Fj5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg0MTM4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                data:\n          \n          \n            \n                  title: Picocli example\n          \n          \n            \n                  description: |\n          \n          \n            \n                    <p>Hello and goobye are civilization fundamentals. Lets not forget it with this picocli application by changing the <code>command</code> and <code>parameters</code>.</p>\n          \n          \n            \n                    <p><b>Go Subatomic!</b></p>\n          \n          \n            \n                    ## Dev mode\n          \n          \n            \n                    Also for picocli applications the dev mode is supported. When running mvn compile quarkus:dev, the picocli application is executed and on press of the Enter key, is restarted.\n          \n          \n            \n            \n          \n          \n            \n                    As command mode applications will often require arguments to be passed on the commandline, this is also possible in dev mode via:\n          \n          \n            \n            \n          \n          \n            \n                    `mvn compile quarkus:dev -Dquarkus.args='--help'`\n          \n          \n            \n            \n          \n          \n            \n                    The same can be achieved with Gradle:\n          \n          \n            \n            \n          \n          \n            \n                    `./gradlew quarkusDev --quarkus-args='--help'`\n          \n          \n            \n            \n          \n          \n            \n                  guide: https://quarkus.io/guides/picocli\n          \n      \n    \n    \n  \n\nYou can remove that part, it was used because the title and description is also used in the html for the cloud codestarts.", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534841389", "createdAt": "2020-12-03T07:49:29Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/singleton-examples/picocli-example/codestart.yml", "diffHunk": "@@ -0,0 +1,28 @@\n+name: picocli-example\n+ref: picocli\n+type: code\n+tags:\n+  - example\n+  - singleton-example\n+language:\n+  base:\n+    data:\n+      title: Picocli example\n+      description: |\n+        <p>Hello and goobye are civilization fundamentals. Lets not forget it with this picocli application by changing the <code>command</code> and <code>parameters</code>.</p>\n+        <p><b>Go Subatomic!</b></p>\n+        ## Dev mode\n+        Also for picocli applications the dev mode is supported. When running mvn compile quarkus:dev, the picocli application is executed and on press of the Enter key, is restarted.\n+\n+        As command mode applications will often require arguments to be passed on the commandline, this is also possible in dev mode via:\n+\n+        `mvn compile quarkus:dev -Dquarkus.args='--help'`\n+\n+        The same can be achieved with Gradle:\n+\n+        `./gradlew quarkusDev --quarkus-args='--help'`\n+\n+      guide: https://quarkus.io/guides/picocli", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5913908ad4eeb0102902833c453e0abb5ab00a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg2MDg2OQ==", "bodyText": "Which is not the case anymore ?", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534860869", "createdAt": "2020-12-03T08:00:38Z", "author": {"login": "jtama"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/singleton-examples/picocli-example/codestart.yml", "diffHunk": "@@ -0,0 +1,28 @@\n+name: picocli-example\n+ref: picocli\n+type: code\n+tags:\n+  - example\n+  - singleton-example\n+language:\n+  base:\n+    data:\n+      title: Picocli example\n+      description: |\n+        <p>Hello and goobye are civilization fundamentals. Lets not forget it with this picocli application by changing the <code>command</code> and <code>parameters</code>.</p>\n+        <p><b>Go Subatomic!</b></p>\n+        ## Dev mode\n+        Also for picocli applications the dev mode is supported. When running mvn compile quarkus:dev, the picocli application is executed and on press of the Enter key, is restarted.\n+\n+        As command mode applications will often require arguments to be passed on the commandline, this is also possible in dev mode via:\n+\n+        `mvn compile quarkus:dev -Dquarkus.args='--help'`\n+\n+        The same can be achieved with Gradle:\n+\n+        `./gradlew quarkusDev --quarkus-args='--help'`\n+\n+      guide: https://quarkus.io/guides/picocli", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg0MTM4OQ=="}, "originalCommit": {"oid": "bb5913908ad4eeb0102902833c453e0abb5ab00a"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg2NDg3MA==", "bodyText": "It is, but not for this example which doesn't include any web feature.", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534864870", "createdAt": "2020-12-03T08:03:00Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/singleton-examples/picocli-example/codestart.yml", "diffHunk": "@@ -0,0 +1,28 @@\n+name: picocli-example\n+ref: picocli\n+type: code\n+tags:\n+  - example\n+  - singleton-example\n+language:\n+  base:\n+    data:\n+      title: Picocli example\n+      description: |\n+        <p>Hello and goobye are civilization fundamentals. Lets not forget it with this picocli application by changing the <code>command</code> and <code>parameters</code>.</p>\n+        <p><b>Go Subatomic!</b></p>\n+        ## Dev mode\n+        Also for picocli applications the dev mode is supported. When running mvn compile quarkus:dev, the picocli application is executed and on press of the Enter key, is restarted.\n+\n+        As command mode applications will often require arguments to be passed on the commandline, this is also possible in dev mode via:\n+\n+        `mvn compile quarkus:dev -Dquarkus.args='--help'`\n+\n+        The same can be achieved with Gradle:\n+\n+        `./gradlew quarkusDev --quarkus-args='--help'`\n+\n+      guide: https://quarkus.io/guides/picocli", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg0MTM4OQ=="}, "originalCommit": {"oid": "bb5913908ad4eeb0102902833c453e0abb5ab00a"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NTY5ODU4OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/singleton-examples/picocli-example/java/src/main/java/org/acme/picocli/GoodbyeCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1MDoxOVrOH-EOQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1MDoxOVrOH-EOQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg0Mjk0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Option(names = {\"--times\", \"-t\"}, defaultValue = \"1\", description = \"Who many time should we say goodbye\")\n          \n          \n            \n                @Option(names = {\"--times\", \"-t\"}, defaultValue = \"1\", description = \"How many time should we say goodbye\")", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534842946", "createdAt": "2020-12-03T07:50:19Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/singleton-examples/picocli-example/java/src/main/java/org/acme/picocli/GoodbyeCommand.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package org.acme.picocli;\n+\n+import picocli.CommandLine.Command;\n+import picocli.CommandLine.Option;\n+\n+@Command(name = \"goodbye\")\n+public class GoodbyeCommand implements Runnable {\n+\n+    @Option(names = {\"--name\"}, description = \"Guest name\")\n+    String name;\n+\n+    @Option(names = {\"--times\", \"-t\"}, defaultValue = \"1\", description = \"Who many time should we say goodbye\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5913908ad4eeb0102902833c453e0abb5ab00a"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NTcwNTM0OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/singleton-examples/picocli-example/kotlin/src/main/java/org/acme/picocli/GoodbyeCommand.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1MDo1OVrOH-ES5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1MDo1OVrOH-ES5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg0NDEzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @CommandLine.Option(names = [\"--times\", \"-t\"], defaultValue = \"1\", description = [\"Who many time should we say goodbye\"])\n          \n          \n            \n                @CommandLine.Option(names = [\"--times\", \"-t\"], defaultValue = \"1\", description = [\"How many time should we say goodbye\"])", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534844133", "createdAt": "2020-12-03T07:50:59Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/singleton-examples/picocli-example/kotlin/src/main/java/org/acme/picocli/GoodbyeCommand.kt", "diffHunk": "@@ -0,0 +1,17 @@\n+package org.acme.picocli\n+\n+import picocli.CommandLine\n+\n+@CommandLine.Command(name = \"goodbye\")\n+class GoodbyeCommand : Runnable {\n+    @CommandLine.Option(names = [\"--name\"], description = [\"Guest name\"])\n+    var name: String? = null\n+\n+    @CommandLine.Option(names = [\"--times\", \"-t\"], defaultValue = \"1\", description = [\"Who many time should we say goodbye\"])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb5913908ad4eeb0102902833c453e0abb5ab00a"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NjA5MTgxOnYy", "diffSide": "RIGHT", "path": "integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/quarkus/QuarkusCodestartGenerationTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODoyOTo0NFrOH-Ieyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODozODozOFrOH-JWew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkxMjcxNA==", "bodyText": "You don't need to add the codestart, it will be autoselected with the extension, but first you need to add it to the extension metadata in this file:\nhttps://github.com/quarkusio/quarkus/blob/master/extensions/picocli/runtime/src/main/resources/META-INF/quarkus-extension.yaml#L10\n---\nname: \"Picocli\"\nmetadata:\n  keywords:\n  - \"picocli\"\n  - \"command-line\"\n  guide: \"https://quarkus.io/guides/picocli\"\n  categories:\n  - \"miscellaneous\"\n  status: \"experimental\"\n  codestart: picocli", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534912714", "createdAt": "2020-12-03T08:29:44Z", "author": {"login": "ia3andy"}, "path": "integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/quarkus/QuarkusCodestartGenerationTest.java", "diffHunk": "@@ -311,6 +311,49 @@ void generateMavenResteasyJava() throws IOException {\n         assertThat(projectDir.resolve(\"src/test/java/org/acme/NativeGreetingResourceIT.java\")).exists();\n     }\n \n+    @Test\n+    void generateMavenPicocliJava() throws IOException {\n+        final QuarkusCodestartProjectInput input = QuarkusCodestartProjectInput.builder()\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-picocli\"))\n+                .addCodestart(\"picocli\")\n+                .addData(getTestInputData())\n+                .build();\n+        final Path projectDir = testDirPath.resolve(\"maven-picocli-java\");\n+        getCatalog().createProject(input).generate(projectDir);\n+\n+        checkMaven(projectDir);\n+        checkReadme(projectDir);\n+        checkDockerfiles(projectDir, BuildTool.MAVEN);\n+        checkConfigProperties(projectDir);\n+\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/EntryCommand.java\")).exists();\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/GoodbyeCommand.java\")).exists();\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/HelloCommand.java\")).exists();\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/GreetingService.java\")).exists();\n+    }\n+\n+    @Test\n+    void generateMavenPicocliKotlin() throws IOException {\n+        final QuarkusCodestartProjectInput input = QuarkusCodestartProjectInput.builder()\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-picocli\"))\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-kotlin\"))\n+                .addCodestart(\"picocli\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86b0de8acc958674916886232638a6409e7173e7"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyMDA3OA==", "bodyText": "Ok, this one is missing from guide I think.", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534920078", "createdAt": "2020-12-03T08:34:03Z", "author": {"login": "jtama"}, "path": "integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/quarkus/QuarkusCodestartGenerationTest.java", "diffHunk": "@@ -311,6 +311,49 @@ void generateMavenResteasyJava() throws IOException {\n         assertThat(projectDir.resolve(\"src/test/java/org/acme/NativeGreetingResourceIT.java\")).exists();\n     }\n \n+    @Test\n+    void generateMavenPicocliJava() throws IOException {\n+        final QuarkusCodestartProjectInput input = QuarkusCodestartProjectInput.builder()\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-picocli\"))\n+                .addCodestart(\"picocli\")\n+                .addData(getTestInputData())\n+                .build();\n+        final Path projectDir = testDirPath.resolve(\"maven-picocli-java\");\n+        getCatalog().createProject(input).generate(projectDir);\n+\n+        checkMaven(projectDir);\n+        checkReadme(projectDir);\n+        checkDockerfiles(projectDir, BuildTool.MAVEN);\n+        checkConfigProperties(projectDir);\n+\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/EntryCommand.java\")).exists();\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/GoodbyeCommand.java\")).exists();\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/HelloCommand.java\")).exists();\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/GreetingService.java\")).exists();\n+    }\n+\n+    @Test\n+    void generateMavenPicocliKotlin() throws IOException {\n+        final QuarkusCodestartProjectInput input = QuarkusCodestartProjectInput.builder()\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-picocli\"))\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-kotlin\"))\n+                .addCodestart(\"picocli\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkxMjcxNA=="}, "originalCommit": {"oid": "86b0de8acc958674916886232638a6409e7173e7"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyNjk3MQ==", "bodyText": "@jtama-op https://github.com/ia3andy/quarkus/blob/cs-doc/independent-projects/tools/codestarts/README.adoc#writing-a-codestart-with-example-code-for-an-extension\nLook at the When done part :)", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534926971", "createdAt": "2020-12-03T08:38:38Z", "author": {"login": "ia3andy"}, "path": "integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/quarkus/QuarkusCodestartGenerationTest.java", "diffHunk": "@@ -311,6 +311,49 @@ void generateMavenResteasyJava() throws IOException {\n         assertThat(projectDir.resolve(\"src/test/java/org/acme/NativeGreetingResourceIT.java\")).exists();\n     }\n \n+    @Test\n+    void generateMavenPicocliJava() throws IOException {\n+        final QuarkusCodestartProjectInput input = QuarkusCodestartProjectInput.builder()\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-picocli\"))\n+                .addCodestart(\"picocli\")\n+                .addData(getTestInputData())\n+                .build();\n+        final Path projectDir = testDirPath.resolve(\"maven-picocli-java\");\n+        getCatalog().createProject(input).generate(projectDir);\n+\n+        checkMaven(projectDir);\n+        checkReadme(projectDir);\n+        checkDockerfiles(projectDir, BuildTool.MAVEN);\n+        checkConfigProperties(projectDir);\n+\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/EntryCommand.java\")).exists();\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/GoodbyeCommand.java\")).exists();\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/HelloCommand.java\")).exists();\n+        assertThat(projectDir.resolve(\"src/main/java/org/acme/picocli/GreetingService.java\")).exists();\n+    }\n+\n+    @Test\n+    void generateMavenPicocliKotlin() throws IOException {\n+        final QuarkusCodestartProjectInput input = QuarkusCodestartProjectInput.builder()\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-picocli\"))\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-kotlin\"))\n+                .addCodestart(\"picocli\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkxMjcxNA=="}, "originalCommit": {"oid": "86b0de8acc958674916886232638a6409e7173e7"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NjA5NTMwOnYy", "diffSide": "RIGHT", "path": "integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/quarkus/QuarkusCodestartGenerationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODozMDowNVrOH-IhNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODozMDowNVrOH-IhNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkxMzMzMw==", "bodyText": "Same here", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r534913333", "createdAt": "2020-12-03T08:30:05Z", "author": {"login": "ia3andy"}, "path": "integration-tests/devtools/src/test/java/io/quarkus/devtools/codestarts/quarkus/QuarkusCodestartGenerationTest.java", "diffHunk": "@@ -311,6 +311,49 @@ void generateMavenResteasyJava() throws IOException {\n         assertThat(projectDir.resolve(\"src/test/java/org/acme/NativeGreetingResourceIT.java\")).exists();\n     }\n \n+    @Test\n+    void generateMavenPicocliJava() throws IOException {\n+        final QuarkusCodestartProjectInput input = QuarkusCodestartProjectInput.builder()\n+                .addExtension(AppArtifactKey.fromString(\"io.quarkus:quarkus-picocli\"))\n+                .addCodestart(\"picocli\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86b0de8acc958674916886232638a6409e7173e7"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NjYzOTk1OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/picocli-example/java/src/main/java/org/acme/picocli/HelloCommand.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOTozMzo0N1rOH-ORgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOTo0Mjo0N1rOH-O33w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAwNzYxOA==", "bodyText": "this felt a bit weird to have them exclusive, maybe --firt-name and --nick-name? would make more sense?", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r535007618", "createdAt": "2020-12-03T09:33:47Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/picocli-example/java/src/main/java/org/acme/picocli/HelloCommand.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.acme.picocli;\n+\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+\n+import java.io.File;\n+import java.net.URL;\n+\n+@Command(name = \"hello\")\n+public class HelloCommand implements Runnable{\n+\n+    @CommandLine.ArgGroup(exclusive = true, multiplicity = \"1\")\n+    Name name;\n+    static class Name {\n+\n+\n+        @CommandLine.Option(names = {\"--first-name\"}, description = \"The guest first name\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78b1089ef7ec3f8c5ca4d6578a0174e1a5a0940e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAxNzQzOQ==", "bodyText": "Ok yes of course! I only intended to show the exclusive feature, I will make the change.", "url": "https://github.com/quarkusio/quarkus/pull/13647#discussion_r535017439", "createdAt": "2020-12-03T09:42:47Z", "author": {"login": "jtama"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/picocli-example/java/src/main/java/org/acme/picocli/HelloCommand.java", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.acme.picocli;\n+\n+import picocli.CommandLine;\n+import picocli.CommandLine.Command;\n+\n+import java.io.File;\n+import java.net.URL;\n+\n+@Command(name = \"hello\")\n+public class HelloCommand implements Runnable{\n+\n+    @CommandLine.ArgGroup(exclusive = true, multiplicity = \"1\")\n+    Name name;\n+    static class Name {\n+\n+\n+        @CommandLine.Option(names = {\"--first-name\"}, description = \"The guest first name\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTAwNzYxOA=="}, "originalCommit": {"oid": "78b1089ef7ec3f8c5ca4d6578a0174e1a5a0940e"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3757, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}