{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MzQ4NDIw", "number": 7752, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMDozNzo1N1rODm2MKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMToxODo1N1rODm3CXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDYwMzI4OnYy", "diffSide": "RIGHT", "path": "core/runtime/src/main/java/io/quarkus/runtime/logging/BannerFormatter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMDozNzo1OFrOF0gFXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMDowNjo1N1rOF0wYpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU5NTkzMg==", "bodyText": "should we put a \"(banner can not be encoded on \" + charset + \")\" or at least a debug log ?", "url": "https://github.com/quarkusio/quarkus/pull/7752#discussion_r390595932", "createdAt": "2020-03-10T20:37:58Z", "author": {"login": "maxandersen"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/logging/BannerFormatter.java", "diffHunk": "@@ -58,6 +59,13 @@ public String format(ExtLogRecord extLogRecord) {\n \n     @Override\n     public String getHead(Handler h) {\n-        return bannerSupplier.get();\n+        final String banner = bannerSupplier.get();\n+        final Charset charset;\n+        try {\n+            charset = Charset.forName(h.getEncoding());\n+            return charset.newEncoder().canEncode(banner) ? banner : \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b56e21d51add169ab39330669a73f21875707a57"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg2MzAxNA==", "bodyText": "The challenge is that you can't really log from here. I think we could enhance the log manager to do that though at some point.", "url": "https://github.com/quarkusio/quarkus/pull/7752#discussion_r390863014", "createdAt": "2020-03-11T10:06:57Z", "author": {"login": "dmlloyd"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/logging/BannerFormatter.java", "diffHunk": "@@ -58,6 +59,13 @@ public String format(ExtLogRecord extLogRecord) {\n \n     @Override\n     public String getHead(Handler h) {\n-        return bannerSupplier.get();\n+        final String banner = bannerSupplier.get();\n+        final Charset charset;\n+        try {\n+            charset = Charset.forName(h.getEncoding());\n+            return charset.newEncoder().canEncode(banner) ? banner : \"\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDU5NTkzMg=="}, "originalCommit": {"oid": "b56e21d51add169ab39330669a73f21875707a57"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDc0MjA0OnYy", "diffSide": "RIGHT", "path": "core/runtime/src/main/java/io/quarkus/runtime/logging/BannerFormatter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMToxODo1N1rOF0hbEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMToxODo1N1rOF0hbEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYxNzg3NA==", "bodyText": "I was pulling my hair why this was resulting nothing printed...I added a ignored.printStacktrace() and getting this:\njava.lang.IllegalArgumentException: Null charset name\n\tat java.base/java.nio.charset.Charset.lookup(Charset.java:455)\n\tat java.base/java.nio.charset.Charset.forName(Charset.java:526)\n\tat io.quarkus.runtime.logging.BannerFormatter.getHead(BannerFormatter.java:65)\n\tat org.jboss.logmanager.handlers.WriterHandler.writeHead(WriterHandler.java:114)\n\tat org.jboss.logmanager.handlers.WriterHandler.setWriter(WriterHandler.java:99)\n\tat org.jboss.logmanager.handlers.OutputStreamHandler.setWriter(OutputStreamHandler.java:99)\n\tat org.jboss.logmanager.handlers.ConsoleHandler.<init>(ConsoleHandler.java:123)\n\tat org.jboss.logmanager.handlers.ConsoleHandler.<init>(ConsoleHandler.java:100)\n\tat io.quarkus.runtime.logging.LoggingSetupRecorder.configureConsoleHandler(LoggingSetupRecorder.java:255)\n\tat io.quarkus.runtime.logging.LoggingSetupRecorder.initializeLogging(LoggingSetupRecorder.java:100)\n\tat io.quarkus.deployment.steps.LoggingResourceProcessor$setupLoggingRuntimeInit17.deploy_0(LoggingResourceProcessor$setupLoggingRuntimeInit17.zig:129)\n\tat io.quarkus.deployment.steps.LoggingResourceProcessor$setupLoggingRuntimeInit17.deploy(LoggingResourceProcessor$setupLoggingRuntimeInit17.zig:36)\n\tat io.quarkus.runner.ApplicationImpl.doStart(ApplicationImpl.zig:130)\n\tat io.quarkus.runtime.Application.start(Application.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat io.quarkus.runner.bootstrap.StartupActionImpl.run(StartupActionImpl.java:96)\n\tat io.quarkus.dev.IsolatedDevModeMain.firstStart(IsolatedDevModeMain.java:60)\n\tat io.quarkus.dev.IsolatedDevModeMain.accept(IsolatedDevModeMain.java:236)\n\tat io.quarkus.dev.IsolatedDevModeMain.accept(IsolatedDevModeMain.java:39)\n\tat io.quarkus.bootstrap.app.CuratedApplication.runInCl(CuratedApplication.java:131)\n\tat io.quarkus.bootstrap.app.CuratedApplication.runInAugmentClassLoader(CuratedApplication.java:84)\n\tat io.quarkus.dev.DevModeMain.start(DevModeMain.java:104)\n\tat io.quarkus.dev.DevModeMain.main(DevModeMain.java:46)", "url": "https://github.com/quarkusio/quarkus/pull/7752#discussion_r390617874", "createdAt": "2020-03-10T21:18:57Z", "author": {"login": "maxandersen"}, "path": "core/runtime/src/main/java/io/quarkus/runtime/logging/BannerFormatter.java", "diffHunk": "@@ -58,6 +59,13 @@ public String format(ExtLogRecord extLogRecord) {\n \n     @Override\n     public String getHead(Handler h) {\n-        return bannerSupplier.get();\n+        final String banner = bannerSupplier.get();\n+        final Charset charset;\n+        try {\n+            charset = Charset.forName(h.getEncoding());\n+            return charset.newEncoder().canEncode(banner) ? banner : \"\";\n+        } catch (IllegalArgumentException ignored) {\n+            return \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b56e21d51add169ab39330669a73f21875707a57"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4807, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}