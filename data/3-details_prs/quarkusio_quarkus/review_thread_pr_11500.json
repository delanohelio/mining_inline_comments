{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwOTkxMTU5", "number": 11500, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNTo0OTozNFrOEamMjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNTo1MjowNVrOEamRAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MzI0MjM5OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/AbstractKubernetesConfigSourceUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNTo0OTozNFrOHEID8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNTo0OTozNFrOHEID8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA4ODQzNQ==", "bodyText": "The TODO is no longer valid, we should remove it, or replace with an up-to-date text.", "url": "https://github.com/quarkusio/quarkus/pull/11500#discussion_r474088435", "createdAt": "2020-08-20T15:49:34Z", "author": {"login": "Ladicek"}, "path": "extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/AbstractKubernetesConfigSourceUtil.java", "diffHunk": "@@ -72,6 +72,7 @@ abstract ConfigSource createPropertiesConfigSource(String kubernetesConfigSource\n             } else {\n                 // TODO all keys named `*.{properties,yml,yaml}` are categorized as file sources,\n                 //  but here, we only look for `application.{properties,yml,yaml}`\n+                // Also see qualifier in categorize function below", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7626f01be3f73ab5fd90e357984082791a88b431"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MzI0MzQxOnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/AbstractKubernetesConfigSourceUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNTo0OTo1MFrOHEIEoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNTo0OTo1MFrOHEIEoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA4ODYwOQ==", "bodyText": "I'd say startsWith, to be safe.", "url": "https://github.com/quarkusio/quarkus/pull/11500#discussion_r474088609", "createdAt": "2020-08-20T15:49:50Z", "author": {"login": "Ladicek"}, "path": "extensions/kubernetes-config/runtime/src/main/java/io/quarkus/kubernetes/client/runtime/AbstractKubernetesConfigSourceUtil.java", "diffHunk": "@@ -91,7 +92,8 @@ private static CategorizedConfigSourceData categorize(Map<String, String> data)\n         List<Map.Entry<String, String>> fileData = new ArrayList<>();\n         for (Map.Entry<String, String> entry : data.entrySet()) {\n             String key = entry.getKey();\n-            if (key.endsWith(\".yml\") || key.endsWith(\".yaml\") || key.endsWith(\".properties\")) {\n+            if ((key.contains(\"application\")) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7626f01be3f73ab5fd90e357984082791a88b431"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MzI1Mzc2OnYy", "diffSide": "LEFT", "path": "extensions/kubernetes-config/runtime/src/test/java/io/quarkus/kubernetes/client/runtime/SecretConfigSourceUtilTest.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNTo1MjowNVrOHEIK_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMTo0NToyMVrOHEqGHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA5MDIzOA==", "bodyText": "Why not keep the existing tests? They should still pass, no? At least the one that verifies content of application.properties.", "url": "https://github.com/quarkusio/quarkus/pull/11500#discussion_r474090238", "createdAt": "2020-08-20T15:52:05Z", "author": {"login": "Ladicek"}, "path": "extensions/kubernetes-config/runtime/src/test/java/io/quarkus/kubernetes/client/runtime/SecretConfigSourceUtilTest.java", "diffHunk": "@@ -102,14 +102,18 @@ void testWithAllKindsOfData() {\n         List<ConfigSource> configSources = sut.toConfigSources(secret.getMetadata().getName(), secret.getData());\n \n         assertThat(configSources).hasSize(4);\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"literal\"))\n-                .hasOnlyOneElementSatisfying(c -> {\n-                    assertThat(c.getProperties()).containsOnly(entry(\"some.key\", \"someValue\"));\n-                });\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"application.properties\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7626f01be3f73ab5fd90e357984082791a88b431"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA5ODM0NA==", "bodyText": "For some reason the existing code was adding a \"-literal\" to the secret key. No idea why, I searched the code and it wasn't removed so I removed it. It was on line 53", "url": "https://github.com/quarkusio/quarkus/pull/11500#discussion_r474098344", "createdAt": "2020-08-20T16:04:30Z", "author": {"login": "noelo"}, "path": "extensions/kubernetes-config/runtime/src/test/java/io/quarkus/kubernetes/client/runtime/SecretConfigSourceUtilTest.java", "diffHunk": "@@ -102,14 +102,18 @@ void testWithAllKindsOfData() {\n         List<ConfigSource> configSources = sut.toConfigSources(secret.getMetadata().getName(), secret.getData());\n \n         assertThat(configSources).hasSize(4);\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"literal\"))\n-                .hasOnlyOneElementSatisfying(c -> {\n-                    assertThat(c.getProperties()).containsOnly(entry(\"some.key\", \"someValue\"));\n-                });\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"application.properties\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA5MDIzOA=="}, "originalCommit": {"oid": "7626f01be3f73ab5fd90e357984082791a88b431"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU4NDQyMg==", "bodyText": "OK, but that's not a reason to delete the test, right? The secret has application.properties, application.yaml and application.yml keys, and we still want to test those.", "url": "https://github.com/quarkusio/quarkus/pull/11500#discussion_r474584422", "createdAt": "2020-08-21T09:39:31Z", "author": {"login": "Ladicek"}, "path": "extensions/kubernetes-config/runtime/src/test/java/io/quarkus/kubernetes/client/runtime/SecretConfigSourceUtilTest.java", "diffHunk": "@@ -102,14 +102,18 @@ void testWithAllKindsOfData() {\n         List<ConfigSource> configSources = sut.toConfigSources(secret.getMetadata().getName(), secret.getData());\n \n         assertThat(configSources).hasSize(4);\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"literal\"))\n-                .hasOnlyOneElementSatisfying(c -> {\n-                    assertThat(c.getProperties()).containsOnly(entry(\"some.key\", \"someValue\"));\n-                });\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"application.properties\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA5MDIzOA=="}, "originalCommit": {"oid": "7626f01be3f73ab5fd90e357984082791a88b431"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDU5OTE5Mg==", "bodyText": "the test was incomplete, the literal returned only the \"some.key\" element where it should have had everything except the \"application.properties, application.yml and application.yaml\"....the next line ensures that all k/v other than these are returned.", "url": "https://github.com/quarkusio/quarkus/pull/11500#discussion_r474599192", "createdAt": "2020-08-21T09:57:44Z", "author": {"login": "noelo"}, "path": "extensions/kubernetes-config/runtime/src/test/java/io/quarkus/kubernetes/client/runtime/SecretConfigSourceUtilTest.java", "diffHunk": "@@ -102,14 +102,18 @@ void testWithAllKindsOfData() {\n         List<ConfigSource> configSources = sut.toConfigSources(secret.getMetadata().getName(), secret.getData());\n \n         assertThat(configSources).hasSize(4);\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"literal\"))\n-                .hasOnlyOneElementSatisfying(c -> {\n-                    assertThat(c.getProperties()).containsOnly(entry(\"some.key\", \"someValue\"));\n-                });\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"application.properties\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA5MDIzOA=="}, "originalCommit": {"oid": "7626f01be3f73ab5fd90e357984082791a88b431"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYwOTEyOQ==", "bodyText": "Sorry, I still don't understand why we can't have tests for the application.* keys. If the previous test was wrong, can't we fix it?", "url": "https://github.com/quarkusio/quarkus/pull/11500#discussion_r474609129", "createdAt": "2020-08-21T10:19:12Z", "author": {"login": "Ladicek"}, "path": "extensions/kubernetes-config/runtime/src/test/java/io/quarkus/kubernetes/client/runtime/SecretConfigSourceUtilTest.java", "diffHunk": "@@ -102,14 +102,18 @@ void testWithAllKindsOfData() {\n         List<ConfigSource> configSources = sut.toConfigSources(secret.getMetadata().getName(), secret.getData());\n \n         assertThat(configSources).hasSize(4);\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"literal\"))\n-                .hasOnlyOneElementSatisfying(c -> {\n-                    assertThat(c.getProperties()).containsOnly(entry(\"some.key\", \"someValue\"));\n-                });\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"application.properties\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA5MDIzOA=="}, "originalCommit": {"oid": "7626f01be3f73ab5fd90e357984082791a88b431"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYxMzQ2MQ==", "bodyText": "ahh right I was looking at the wrong thing, I see what you mean. I'll add that back in.", "url": "https://github.com/quarkusio/quarkus/pull/11500#discussion_r474613461", "createdAt": "2020-08-21T10:27:27Z", "author": {"login": "noelo"}, "path": "extensions/kubernetes-config/runtime/src/test/java/io/quarkus/kubernetes/client/runtime/SecretConfigSourceUtilTest.java", "diffHunk": "@@ -102,14 +102,18 @@ void testWithAllKindsOfData() {\n         List<ConfigSource> configSources = sut.toConfigSources(secret.getMetadata().getName(), secret.getData());\n \n         assertThat(configSources).hasSize(4);\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"literal\"))\n-                .hasOnlyOneElementSatisfying(c -> {\n-                    assertThat(c.getProperties()).containsOnly(entry(\"some.key\", \"someValue\"));\n-                });\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"application.properties\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA5MDIzOA=="}, "originalCommit": {"oid": "7626f01be3f73ab5fd90e357984082791a88b431"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY0NjA0NA==", "bodyText": "Ha, I just realized that there were tests for application.{yml,yaml} below that I didn't notice. That's probably why my comments didn't make much sense :-)", "url": "https://github.com/quarkusio/quarkus/pull/11500#discussion_r474646044", "createdAt": "2020-08-21T11:45:21Z", "author": {"login": "Ladicek"}, "path": "extensions/kubernetes-config/runtime/src/test/java/io/quarkus/kubernetes/client/runtime/SecretConfigSourceUtilTest.java", "diffHunk": "@@ -102,14 +102,18 @@ void testWithAllKindsOfData() {\n         List<ConfigSource> configSources = sut.toConfigSources(secret.getMetadata().getName(), secret.getData());\n \n         assertThat(configSources).hasSize(4);\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"literal\"))\n-                .hasOnlyOneElementSatisfying(c -> {\n-                    assertThat(c.getProperties()).containsOnly(entry(\"some.key\", \"someValue\"));\n-                });\n-        assertThat(configSources).filteredOn(c -> c.getName().toLowerCase().contains(\"application.properties\"))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA5MDIzOA=="}, "originalCommit": {"oid": "7626f01be3f73ab5fd90e357984082791a88b431"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 622, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}