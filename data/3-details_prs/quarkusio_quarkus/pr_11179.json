{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMzg5MjY4", "number": 11179, "title": "handle testFixtures sourceset", "bodyText": "This branch partially fix #11144 by handling the test-fixtures source set.\nbut the classloader issue is still present and I don't know how to fix it. Here is the error:\njava.lang.LinkageError: loader constraint violation: loader io.quarkus.bootstrap.classloading.QuarkusClassLoader @27d4a09 wants to load interface org.my.group.MyService. A different interface with the same name was previously loaded by 'app'. (org.my.group.MyService is in unnamed module of loader 'app')\n\nat java.base/java.lang.ClassLoader.defineClass1(Native Method)\n\tat java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1016)\n\tat io.quarkus.bootstrap.classloading.QuarkusClassLoader.loadClass(QuarkusClassLoader.java:420)\n\tat io.quarkus.bootstrap.classloading.QuarkusClassLoader.loadClass(QuarkusClassLoader.java:363)\n\tat org.my.group.MyResourceTest.testTestFixtures(MyResourceTest.java:18)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat io.quarkus.test.junit.QuarkusTestExtension.runExtensionMethod(QuarkusTestExtension.java:699)\n\tat io.quarkus.test.junit.QuarkusTestExtension.interceptTestMethod(QuarkusTestExtension.java:606)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)\n\tat org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)\n\tat org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)\n\tat org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:212)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:208)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:137)\n\tat org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:71)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:135)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)\n\tat org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)\n\tat org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)\n\tat org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)\n\n@aloubyansky have you an idea?", "createdAt": "2020-08-03T20:46:59Z", "url": "https://github.com/quarkusio/quarkus/pull/11179", "merged": true, "mergeCommit": {"oid": "f59221bdb1341f698727da9ed6b88f8fffca0bcf"}, "closed": true, "closedAt": "2020-08-06T18:37:36Z", "author": {"login": "glefloch"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7tG9ygFqTQ2MTE3MTUyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8UQG5AFqTQ2Mjc3OTc0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTcxNTI0", "url": "https://github.com/quarkusio/quarkus/pull/11179#pullrequestreview-461171524", "createdAt": "2020-08-04T21:00:57Z", "commit": {"oid": "22b774f9b40875029e06bd5c75aa4ed7eba75ec2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTowMDo1N1rOG7xWeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTowMDo1N1rOG7xWeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMyNzczNg==", "bodyText": "These will need to go.", "url": "https://github.com/quarkusio/quarkus/pull/11179#discussion_r465327736", "createdAt": "2020-08-04T21:00:57Z", "author": {"login": "aloubyansky"}, "path": "integration-tests/gradle/src/test/resources/test-fixtures-module/build.gradle", "diffHunk": "@@ -0,0 +1,40 @@\n+plugins {\n+    id 'java'\n+    id 'java-test-fixtures'\n+    id 'io.quarkus'\n+}\n+\n+repositories {\n+     mavenLocal()\n+     mavenCentral()\n+}\n+\n+dependencies {\n+    implementation 'io.quarkus:quarkus-resteasy-jsonb'\n+    implementation enforcedPlatform(\"${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}\")\n+    implementation 'io.quarkus:quarkus-resteasy'\n+\n+    testImplementation 'io.quarkus:quarkus-junit5'\n+    testImplementation 'io.rest-assured:rest-assured'\n+}\n+\n+group 'my-groupId'\n+version 'my-version'\n+\n+compileJava {\n+    options.encoding = 'UTF-8'\n+    options.compilerArgs << '-parameters'\n+}\n+\n+compileTestJava {\n+    options.encoding = 'UTF-8'\n+}\n+\n+java {\n+    sourceCompatibility = JavaVersion.VERSION_1_8\n+    targetCompatibility = JavaVersion.VERSION_1_8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b774f9b40875029e06bd5c75aa4ed7eba75ec2"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTc2ODkw", "url": "https://github.com/quarkusio/quarkus/pull/11179#pullrequestreview-461176890", "createdAt": "2020-08-04T21:09:46Z", "commit": {"oid": "22b774f9b40875029e06bd5c75aa4ed7eba75ec2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTowOTo0NlrOG7xnGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTowOTo0NlrOG7xnGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMzMTk5Mg==", "bodyText": "Given that this is an actual test class, it shouldn't have Base suffix.", "url": "https://github.com/quarkusio/quarkus/pull/11179#discussion_r465331992", "createdAt": "2020-08-04T21:09:46Z", "author": {"login": "aloubyansky"}, "path": "integration-tests/gradle/src/test/java/io/quarkus/gradle/TestFixtureModuleTestBase.java", "diffHunk": "@@ -0,0 +1,21 @@\n+package io.quarkus.gradle;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+import java.io.File;\n+import java.io.IOException;\n+import java.net.URISyntaxException;\n+\n+import org.junit.jupiter.api.Test;\n+\n+public class TestFixtureModuleTestBase extends QuarkusGradleWrapperTestBase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b774f9b40875029e06bd5c75aa4ed7eba75ec2"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22b774f9b40875029e06bd5c75aa4ed7eba75ec2", "author": {"user": {"login": "glefloch", "name": "Guillaume Le Floch"}}, "url": "https://github.com/quarkusio/quarkus/commit/22b774f9b40875029e06bd5c75aa4ed7eba75ec2", "committedDate": "2020-08-04T20:17:20Z", "message": "add integration test"}, "afterCommit": {"oid": "70959efb530179ac4c4cb48f0f052b9f99dcbbb6", "author": {"user": {"login": "glefloch", "name": "Guillaume Le Floch"}}, "url": "https://github.com/quarkusio/quarkus/commit/70959efb530179ac4c4cb48f0f052b9f99dcbbb6", "committedDate": "2020-08-05T05:08:15Z", "message": "handle testFixtures sourceset"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc1ad88e4237aa572f6f223b4c94189b28219094", "author": {"user": {"login": "glefloch", "name": "Guillaume Le Floch"}}, "url": "https://github.com/quarkusio/quarkus/commit/bc1ad88e4237aa572f6f223b4c94189b28219094", "committedDate": "2020-08-06T13:23:14Z", "message": "handle testFixtures sourceset"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70959efb530179ac4c4cb48f0f052b9f99dcbbb6", "author": {"user": {"login": "glefloch", "name": "Guillaume Le Floch"}}, "url": "https://github.com/quarkusio/quarkus/commit/70959efb530179ac4c4cb48f0f052b9f99dcbbb6", "committedDate": "2020-08-05T05:08:15Z", "message": "handle testFixtures sourceset"}, "afterCommit": {"oid": "bc1ad88e4237aa572f6f223b4c94189b28219094", "author": {"user": {"login": "glefloch", "name": "Guillaume Le Floch"}}, "url": "https://github.com/quarkusio/quarkus/commit/bc1ad88e4237aa572f6f223b4c94189b28219094", "committedDate": "2020-08-06T13:23:14Z", "message": "handle testFixtures sourceset"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNjE1NjUx", "url": "https://github.com/quarkusio/quarkus/pull/11179#pullrequestreview-462615651", "createdAt": "2020-08-06T15:12:27Z", "commit": {"oid": "bc1ad88e4237aa572f6f223b4c94189b28219094"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNToxMjoyOFrOG83_8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNToxMjoyOFrOG83_8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ4NTIzMg==", "bodyText": "@glefloch was your testcase failing w/o this change? I did try the reproducer attached by the user to verify. But I wasn't sure whether your testcase was also failing.", "url": "https://github.com/quarkusio/quarkus/pull/11179#discussion_r466485232", "createdAt": "2020-08-06T15:12:28Z", "author": {"login": "aloubyansky"}, "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java", "diffHunk": "@@ -130,6 +131,10 @@ private ExtensionState doJavaStart(ExtensionContext context, Class<? extends Qua\n                     rootBuilder.add(testResourcesLocation);\n                 }\n             }\n+            if (Files.exists(testClassLocation.getParent().resolve(\"testFixtures\"))) {\n+                rootBuilder.add(testClassLocation.getParent().resolve(\"testFixtures\"));\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc1ad88e4237aa572f6f223b4c94189b28219094"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNzc5NzQx", "url": "https://github.com/quarkusio/quarkus/pull/11179#pullrequestreview-462779741", "createdAt": "2020-08-06T18:37:14Z", "commit": {"oid": "bc1ad88e4237aa572f6f223b4c94189b28219094"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 885, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}