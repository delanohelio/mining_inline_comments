{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxODIxOTMy", "number": 10360, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODozNzo1M1rOEJ_piw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo0MjoyMVrOEJ_xJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTE1NDY3OnYy", "diffSide": "RIGHT", "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/FlywayCreator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODozNzo1M1rOGqx-eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODozNzo1M1rOGqx-eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxMjE4NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * Ensure that no classpath scanning takes pace by setting the ClassProvider and the ResourceProvider\n          \n          \n            \n                     * Ensure that no classpath scanning takes place by setting the ClassProvider and the ResourceProvider", "url": "https://github.com/quarkusio/quarkus/pull/10360#discussion_r447512184", "createdAt": "2020-06-30T08:37:53Z", "author": {"login": "gsmet"}, "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/FlywayCreator.java", "diffHunk": "@@ -47,6 +49,18 @@ public Flyway createFlyway(DataSource dataSource) {\n             configure.baselineDescription(flywayRuntimeConfig.baselineDescription.get());\n         }\n         configure.placeholders(flywayRuntimeConfig.placeholders);\n+\n+        /*\n+         * Ensure that no classpath scanning takes pace by setting the ClassProvider and the ResourceProvider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893a4750fd8ac0530125113138505c1144ee655f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTE2MTU3OnYy", "diffSide": "RIGHT", "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/QuarkusResourceProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODozOTozNVrOGqyC3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo1NzowMFrOGqywDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxMzMxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This implementations of this class are very similar to those of {@link org.flywaydb.core.internal.scanner.Scanner}\n          \n          \n            \n             * This implementations of this class are very similar to those of {@link org.flywaydb.core.internal.scanner.Scanner}\n          \n      \n    \n    \n  \n\nThere is something weird here with This being singular and the rest being plural.", "url": "https://github.com/quarkusio/quarkus/pull/10360#discussion_r447513311", "createdAt": "2020-06-30T08:39:35Z", "author": {"login": "gsmet"}, "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/QuarkusResourceProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package io.quarkus.flyway.runtime;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.flywaydb.core.api.ResourceProvider;\n+import org.flywaydb.core.internal.resource.LoadableResource;\n+import org.flywaydb.core.internal.util.StringUtils;\n+import org.jboss.logging.Logger;\n+\n+/**\n+ * This implementations of this class are very similar to those of {@link org.flywaydb.core.internal.scanner.Scanner}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893a4750fd8ac0530125113138505c1144ee655f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUyNDg3Ng==", "bodyText": "Indeed, it should be better now", "url": "https://github.com/quarkusio/quarkus/pull/10360#discussion_r447524876", "createdAt": "2020-06-30T08:57:00Z", "author": {"login": "geoand"}, "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/QuarkusResourceProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package io.quarkus.flyway.runtime;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.flywaydb.core.api.ResourceProvider;\n+import org.flywaydb.core.internal.resource.LoadableResource;\n+import org.flywaydb.core.internal.util.StringUtils;\n+import org.jboss.logging.Logger;\n+\n+/**\n+ * This implementations of this class are very similar to those of {@link org.flywaydb.core.internal.scanner.Scanner}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxMzMxMQ=="}, "originalCommit": {"oid": "893a4750fd8ac0530125113138505c1144ee655f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTE3MTAzOnYy", "diffSide": "RIGHT", "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/QuarkusClassProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo0MTozOVrOGqyIlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo1NjozMFrOGqyu2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxNDc3NA==", "bodyText": "It's minor but I would move that to the constructor to avoid creating a new collection every time it's called.", "url": "https://github.com/quarkusio/quarkus/pull/10360#discussion_r447514774", "createdAt": "2020-06-30T08:41:39Z", "author": {"login": "gsmet"}, "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/QuarkusClassProvider.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package io.quarkus.flyway.runtime;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+import org.flywaydb.core.api.ClassProvider;\n+\n+public class QuarkusClassProvider<I> implements ClassProvider<I> {\n+\n+    private final Collection<Class<? extends I>> classes;\n+\n+    public QuarkusClassProvider(Collection<Class<? extends I>> classes) {\n+        this.classes = classes;\n+    }\n+\n+    @Override\n+    public Collection<Class<? extends I>> getClasses() {\n+        return Collections.unmodifiableCollection(classes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893a4750fd8ac0530125113138505c1144ee655f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUyNDU2OQ==", "bodyText": "Great idea", "url": "https://github.com/quarkusio/quarkus/pull/10360#discussion_r447524569", "createdAt": "2020-06-30T08:56:30Z", "author": {"login": "geoand"}, "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/QuarkusClassProvider.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package io.quarkus.flyway.runtime;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+import org.flywaydb.core.api.ClassProvider;\n+\n+public class QuarkusClassProvider<I> implements ClassProvider<I> {\n+\n+    private final Collection<Class<? extends I>> classes;\n+\n+    public QuarkusClassProvider(Collection<Class<? extends I>> classes) {\n+        this.classes = classes;\n+    }\n+\n+    @Override\n+    public Collection<Class<? extends I>> getClasses() {\n+        return Collections.unmodifiableCollection(classes);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxNDc3NA=="}, "originalCommit": {"oid": "893a4750fd8ac0530125113138505c1144ee655f"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4OTE3NDE1OnYy", "diffSide": "RIGHT", "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/QuarkusResourceProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo0MjoyMVrOGqyKkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo1NjoyNlrOGqyurg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxNTI4Mw==", "bodyText": "I wonder if I would call the classes QuarkusFlyway(Resource|Class)Provider to be extra clear.", "url": "https://github.com/quarkusio/quarkus/pull/10360#discussion_r447515283", "createdAt": "2020-06-30T08:42:21Z", "author": {"login": "gsmet"}, "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/QuarkusResourceProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package io.quarkus.flyway.runtime;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.flywaydb.core.api.ResourceProvider;\n+import org.flywaydb.core.internal.resource.LoadableResource;\n+import org.flywaydb.core.internal.util.StringUtils;\n+import org.jboss.logging.Logger;\n+\n+/**\n+ * This implementations of this class are very similar to those of {@link org.flywaydb.core.internal.scanner.Scanner}\n+ * TODO: refactor upstream to move methods to utility class\n+ */\n+public class QuarkusResourceProvider implements ResourceProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893a4750fd8ac0530125113138505c1144ee655f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUyNDUyNg==", "bodyText": "Sure thing", "url": "https://github.com/quarkusio/quarkus/pull/10360#discussion_r447524526", "createdAt": "2020-06-30T08:56:26Z", "author": {"login": "geoand"}, "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/QuarkusResourceProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package io.quarkus.flyway.runtime;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.flywaydb.core.api.ResourceProvider;\n+import org.flywaydb.core.internal.resource.LoadableResource;\n+import org.flywaydb.core.internal.util.StringUtils;\n+import org.jboss.logging.Logger;\n+\n+/**\n+ * This implementations of this class are very similar to those of {@link org.flywaydb.core.internal.scanner.Scanner}\n+ * TODO: refactor upstream to move methods to utility class\n+ */\n+public class QuarkusResourceProvider implements ResourceProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxNTI4Mw=="}, "originalCommit": {"oid": "893a4750fd8ac0530125113138505c1144ee655f"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2721, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}