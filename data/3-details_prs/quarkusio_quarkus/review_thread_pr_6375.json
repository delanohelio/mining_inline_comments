{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NjEwNDA0", "number": 6375, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwODowMToxNlrODV6G1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzoxMDo0OFrODWiVHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Mjk4NzA5OnYy", "diffSide": "RIGHT", "path": "extensions/mongodb-client/runtime/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwODowMToxNlrOFaXXww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwOTozMjo0NlrOFaZADw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE5MDIxMQ==", "bodyText": "It should be declared in the bom.", "url": "https://github.com/quarkusio/quarkus/pull/6375#discussion_r363190211", "createdAt": "2020-01-06T08:01:16Z", "author": {"login": "cescoffier"}, "path": "extensions/mongodb-client/runtime/pom.xml", "diffHunk": "@@ -13,6 +13,17 @@\n     <artifactId>quarkus-mongodb-client</artifactId>\n     <name>Quarkus - MongoDB Client - Runtime</name>\n     <description>An imperative and reactive client for MongoDB</description>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.mongodb</groupId>\n+                <artifactId>mongodb-driver-async</artifactId>\n+                <version>3.10.2</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81fe2a64f089d7323517ea119db65326b14bc93f"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIxNjkxMQ==", "bodyText": "It was a leftover: removed", "url": "https://github.com/quarkusio/quarkus/pull/6375#discussion_r363216911", "createdAt": "2020-01-06T09:32:46Z", "author": {"login": "loicmathieu"}, "path": "extensions/mongodb-client/runtime/pom.xml", "diffHunk": "@@ -13,6 +13,17 @@\n     <artifactId>quarkus-mongodb-client</artifactId>\n     <name>Quarkus - MongoDB Client - Runtime</name>\n     <description>An imperative and reactive client for MongoDB</description>\n+\n+    <dependencyManagement>\n+        <dependencies>\n+            <dependency>\n+                <groupId>org.mongodb</groupId>\n+                <artifactId>mongodb-driver-async</artifactId>\n+                <version>3.10.2</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE5MDIxMQ=="}, "originalCommit": {"oid": "81fe2a64f089d7323517ea119db65326b14bc93f"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Mjk4ODY1OnYy", "diffSide": "RIGHT", "path": "integration-tests/mongodb-client/src/main/java/io/quarkus/it/mongodb/BookCodec.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwODowMjoxMlrOFaXYpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwOTozNTowMFrOFaZDOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE5MDQzOA==", "bodyText": "This might be considered as a breaking change as the application code need to be updated.", "url": "https://github.com/quarkusio/quarkus/pull/6375#discussion_r363190438", "createdAt": "2020-01-06T08:02:12Z", "author": {"login": "cescoffier"}, "path": "integration-tests/mongodb-client/src/main/java/io/quarkus/it/mongodb/BookCodec.java", "diffHunk": "@@ -9,14 +9,14 @@\n import org.bson.codecs.DecoderContext;\n import org.bson.codecs.EncoderContext;\n \n-import com.mongodb.MongoClient;\n+import com.mongodb.MongoClientSettings;\n \n public class BookCodec implements CollectibleCodec<Book> {\n \n     private final Codec<Document> documentCodec;\n \n     public BookCodec() {\n-        this.documentCodec = MongoClient.getDefaultCodecRegistry().get(Document.class);\n+        this.documentCodec = MongoClientSettings.getDefaultCodecRegistry().get(Document.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81fe2a64f089d7323517ea119db65326b14bc93f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzIxNzcyMQ==", "bodyText": "Yes, it is described in the PR and I added the breaking change label.\nThe extension is still in preview so I think we can have this kind of small breaking change but if youre against it I'm OK.\nIn fact, it's not really a breaking change as the user can include the legacy driver that still contains this class.", "url": "https://github.com/quarkusio/quarkus/pull/6375#discussion_r363217721", "createdAt": "2020-01-06T09:35:00Z", "author": {"login": "loicmathieu"}, "path": "integration-tests/mongodb-client/src/main/java/io/quarkus/it/mongodb/BookCodec.java", "diffHunk": "@@ -9,14 +9,14 @@\n import org.bson.codecs.DecoderContext;\n import org.bson.codecs.EncoderContext;\n \n-import com.mongodb.MongoClient;\n+import com.mongodb.MongoClientSettings;\n \n public class BookCodec implements CollectibleCodec<Book> {\n \n     private final Codec<Document> documentCodec;\n \n     public BookCodec() {\n-        this.documentCodec = MongoClient.getDefaultCodecRegistry().get(Document.class);\n+        this.documentCodec = MongoClientSettings.getDefaultCodecRegistry().get(Document.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE5MDQzOA=="}, "originalCommit": {"oid": "81fe2a64f089d7323517ea119db65326b14bc93f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0Mzg4NjQyOnYy", "diffSide": "RIGHT", "path": "extensions/mongodb-client/runtime/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNDo1NTo1OFrOFafu_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNTo0NToxMlrOFahG6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMyNzIyOA==", "bodyText": "If you declare the mongo-driver-async in the BOM I think you can remove this exclusion", "url": "https://github.com/quarkusio/quarkus/pull/6375#discussion_r363327228", "createdAt": "2020-01-06T14:55:58Z", "author": {"login": "gastaldi"}, "path": "extensions/mongodb-client/runtime/pom.xml", "diffHunk": "@@ -29,11 +30,25 @@\n         </dependency>\n         <dependency>\n             <groupId>org.mongodb</groupId>\n-            <artifactId>mongo-java-driver</artifactId>\n+            <artifactId>mongodb-driver-sync</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.mongodb</groupId>\n+            <artifactId>mongodb-driver-async</artifactId>\n         </dependency>\n         <dependency>\n             <groupId>org.mongodb</groupId>\n             <artifactId>mongodb-driver-reactivestreams</artifactId>\n+            <exclusions>\n+                <!--\n+                    Exclude mongodb-driver-async as it shares dependencies with mongodb-driver-sync so we need\n+                    to have both versions aligned which is not the case if it is a transitive dependency of mongodb-driver-reactivestreams.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43ab9c5193d93615155fb2899be08a73a00b8630"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM0OTczOA==", "bodyText": "Yes, this was again a leftover of my attemp to fix the dependencies issue", "url": "https://github.com/quarkusio/quarkus/pull/6375#discussion_r363349738", "createdAt": "2020-01-06T15:45:12Z", "author": {"login": "loicmathieu"}, "path": "extensions/mongodb-client/runtime/pom.xml", "diffHunk": "@@ -29,11 +30,25 @@\n         </dependency>\n         <dependency>\n             <groupId>org.mongodb</groupId>\n-            <artifactId>mongo-java-driver</artifactId>\n+            <artifactId>mongodb-driver-sync</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>org.mongodb</groupId>\n+            <artifactId>mongodb-driver-async</artifactId>\n         </dependency>\n         <dependency>\n             <groupId>org.mongodb</groupId>\n             <artifactId>mongodb-driver-reactivestreams</artifactId>\n+            <exclusions>\n+                <!--\n+                    Exclude mongodb-driver-async as it shares dependencies with mongodb-driver-sync so we need\n+                    to have both versions aligned which is not the case if it is a transitive dependency of mongodb-driver-reactivestreams.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzMyNzIyOA=="}, "originalCommit": {"oid": "43ab9c5193d93615155fb2899be08a73a00b8630"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTU3MzMxOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/mongodb.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzowOToxM1rOFbWUsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzowOToxM1rOFbWUsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIyMTYxNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            We didn't include the legacy MongoDB client per default. It contains the old MongoDB Java API (DB, DBCollection,... )\n          \n          \n            \n            We don't include the legacy MongoDB client by default. It contains the now retired MongoDB Java API (DB, DBCollection,... )", "url": "https://github.com/quarkusio/quarkus/pull/6375#discussion_r364221616", "createdAt": "2020-01-08T13:09:13Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/mongodb.adoc", "diffHunk": "@@ -479,6 +479,21 @@ So when you access the `/health/ready` endpoint of your application you will hav\n \n This behavior can be disabled by setting the `quarkus.mongodb.health.enabled` property to `false` in your `application.properties`.\n \n+== The legacy client\n+\n+We didn't include the legacy MongoDB client per default. It contains the old MongoDB Java API (DB, DBCollection,... )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14ff54ff407df834c0506c042293dfe0c43e5a95"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTU3NDg3OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/mongodb.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzowOTo0NFrOFbWVig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzowOTo0NFrOFbWVig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIyMTgzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you want to use the legacy API, you need to include the following dependency inside your `pom.xml`.\n          \n          \n            \n            If you want to use the legacy API, you need to add the following dependency to your `pom.xml`:", "url": "https://github.com/quarkusio/quarkus/pull/6375#discussion_r364221834", "createdAt": "2020-01-08T13:09:44Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/mongodb.adoc", "diffHunk": "@@ -479,6 +479,21 @@ So when you access the `/health/ready` endpoint of your application you will hav\n \n This behavior can be disabled by setting the `quarkus.mongodb.health.enabled` property to `false` in your `application.properties`.\n \n+== The legacy client\n+\n+We didn't include the legacy MongoDB client per default. It contains the old MongoDB Java API (DB, DBCollection,... )\n+and the `com.mongodb.MongoClient` that is now superseded by `com.mongodb.client.MongoClient`.\n+\n+If you want to use the legacy API, you need to include the following dependency inside your `pom.xml`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14ff54ff407df834c0506c042293dfe0c43e5a95"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0OTU3NzI1OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/mongodb.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxMzoxMDo0OFrOFbWW-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwODo1OTozM1rOFbuvhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIyMjIwMw==", "bodyText": "Do we need a PR for the quickstart too (if there is one)?", "url": "https://github.com/quarkusio/quarkus/pull/6375#discussion_r364222203", "createdAt": "2020-01-08T13:10:48Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/mongodb.adoc", "diffHunk": "@@ -346,7 +346,7 @@ public class FruitCodec implements CollectibleCodec<Fruit> {\n     private final Codec<Document> documentCodec;\n \n     public FruitCodec() {\n-        this.documentCodec = MongoClient.getDefaultCodecRegistry().get(Document.class);\n+        this.documentCodec = MongoClientSettings.getDefaultCodecRegistry().get(Document.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14ff54ff407df834c0506c042293dfe0c43e5a95"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDYyMTcwMg==", "bodyText": "Yes, I'll send it today or tomorrow.\nAs we add some stuff to Hibernate with Panache and MongoDB with Panache lately I will check these two quickstart also to align them with the guides.", "url": "https://github.com/quarkusio/quarkus/pull/6375#discussion_r364621702", "createdAt": "2020-01-09T08:59:33Z", "author": {"login": "loicmathieu"}, "path": "docs/src/main/asciidoc/mongodb.adoc", "diffHunk": "@@ -346,7 +346,7 @@ public class FruitCodec implements CollectibleCodec<Fruit> {\n     private final Codec<Document> documentCodec;\n \n     public FruitCodec() {\n-        this.documentCodec = MongoClient.getDefaultCodecRegistry().get(Document.class);\n+        this.documentCodec = MongoClientSettings.getDefaultCodecRegistry().get(Document.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDIyMjIwMw=="}, "originalCommit": {"oid": "14ff54ff407df834c0506c042293dfe0c43e5a95"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1267, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}