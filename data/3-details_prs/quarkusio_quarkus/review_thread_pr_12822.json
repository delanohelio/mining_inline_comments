{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2Njg2NDQ1", "number": 12822, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjo0OTo1M1rOEvwlfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjo0OTo1M1rOEvwlfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NTE0NTU4OnYy", "diffSide": "RIGHT", "path": "integration-tests/oidc-wiremock/src/test/java/io/quarkus/it/keycloak/KeycloakTestResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjo0OTo1M1rOHk6r2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMzozNTo1NlrOHk83SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MjI4MA==", "bodyText": "Another option would be to use server.getOptions().portNumber()", "url": "https://github.com/quarkusio/quarkus/pull/12822#discussion_r508472280", "createdAt": "2020-10-20T12:49:53Z", "author": {"login": "gastaldi"}, "path": "integration-tests/oidc-wiremock/src/test/java/io/quarkus/it/keycloak/KeycloakTestResource.java", "diffHunk": "@@ -22,24 +21,23 @@\n     @Override\n     public Map<String, String> start() {\n \n-        server = new WireMockServer(options().port(8180));\n+        server = new WireMockServer();\n         server.start();\n \n-        WireMock.configureFor(8180);\n         WireMock.stubFor(\n                 get(urlEqualTo(\"/auth/realms/quarkus/.well-known/openid-configuration\"))\n                         .willReturn(aResponse()\n                                 .withHeader(\"Content-Type\", MediaType.APPLICATION_JSON)\n                                 .withBody(\"{\\n\" +\n-                                        \"    \\\"authorization_endpoint\\\": \\\"http://localhost:8180/authenticate\\\",\\n\" +\n-                                        \"    \\\"end_session_endpoint\\\": \\\"http://localhost:8180/logout\\\",\\n\" +\n+                                        \"    \\\"authorization_endpoint\\\": \\\"http://localhost:8080/authenticate\\\",\\n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12970062f8898634ce19e569ba7cb4943c9963a4"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODUwNzk3Ng==", "bodyText": "@gastaldi @machi1990 it also has server.baseUrl() so I've used it and also removed the redundant discovery values which are not needed for the mock testing; it should be very easy for the users to mock the bearer token authentication; code flow would have something more similar to the original, CC @cemnura", "url": "https://github.com/quarkusio/quarkus/pull/12822#discussion_r508507976", "createdAt": "2020-10-20T13:35:56Z", "author": {"login": "sberyozkin"}, "path": "integration-tests/oidc-wiremock/src/test/java/io/quarkus/it/keycloak/KeycloakTestResource.java", "diffHunk": "@@ -22,24 +21,23 @@\n     @Override\n     public Map<String, String> start() {\n \n-        server = new WireMockServer(options().port(8180));\n+        server = new WireMockServer();\n         server.start();\n \n-        WireMock.configureFor(8180);\n         WireMock.stubFor(\n                 get(urlEqualTo(\"/auth/realms/quarkus/.well-known/openid-configuration\"))\n                         .willReturn(aResponse()\n                                 .withHeader(\"Content-Type\", MediaType.APPLICATION_JSON)\n                                 .withBody(\"{\\n\" +\n-                                        \"    \\\"authorization_endpoint\\\": \\\"http://localhost:8180/authenticate\\\",\\n\" +\n-                                        \"    \\\"end_session_endpoint\\\": \\\"http://localhost:8180/logout\\\",\\n\" +\n+                                        \"    \\\"authorization_endpoint\\\": \\\"http://localhost:8080/authenticate\\\",\\n\" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MjI4MA=="}, "originalCommit": {"oid": "12970062f8898634ce19e569ba7cb4943c9963a4"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4186, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}