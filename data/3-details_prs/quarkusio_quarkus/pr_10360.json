{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxODIxOTMy", "number": 10360, "title": "Remove Flyway transformer by providing tighter integration", "bodyText": "Follow up of #10355", "createdAt": "2020-06-30T06:53:03Z", "url": "https://github.com/quarkusio/quarkus/pull/10360", "merged": true, "mergeCommit": {"oid": "06f6f93408a9edca93af3a6b8e96162a40ebec85"}, "closed": true, "closedAt": "2020-06-30T11:59:53Z", "author": {"login": "geoand"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcwRk8RgFqTQzOTc5NDg3NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwTTfeAFqTQzOTg5MzcxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5Nzk0ODc0", "url": "https://github.com/quarkusio/quarkus/pull/10360#pullrequestreview-439794874", "createdAt": "2020-06-30T08:37:53Z", "commit": {"oid": "893a4750fd8ac0530125113138505c1144ee655f"}, "state": "DISMISSED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODozNzo1M1rOGqx-eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODo0MjoyMVrOGqyKkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxMjE4NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                     * Ensure that no classpath scanning takes pace by setting the ClassProvider and the ResourceProvider\n          \n          \n            \n                     * Ensure that no classpath scanning takes place by setting the ClassProvider and the ResourceProvider", "url": "https://github.com/quarkusio/quarkus/pull/10360#discussion_r447512184", "createdAt": "2020-06-30T08:37:53Z", "author": {"login": "gsmet"}, "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/FlywayCreator.java", "diffHunk": "@@ -47,6 +49,18 @@ public Flyway createFlyway(DataSource dataSource) {\n             configure.baselineDescription(flywayRuntimeConfig.baselineDescription.get());\n         }\n         configure.placeholders(flywayRuntimeConfig.placeholders);\n+\n+        /*\n+         * Ensure that no classpath scanning takes pace by setting the ClassProvider and the ResourceProvider", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893a4750fd8ac0530125113138505c1144ee655f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxMzMxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * This implementations of this class are very similar to those of {@link org.flywaydb.core.internal.scanner.Scanner}\n          \n          \n            \n             * This implementations of this class are very similar to those of {@link org.flywaydb.core.internal.scanner.Scanner}\n          \n      \n    \n    \n  \n\nThere is something weird here with This being singular and the rest being plural.", "url": "https://github.com/quarkusio/quarkus/pull/10360#discussion_r447513311", "createdAt": "2020-06-30T08:39:35Z", "author": {"login": "gsmet"}, "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/QuarkusResourceProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package io.quarkus.flyway.runtime;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.flywaydb.core.api.ResourceProvider;\n+import org.flywaydb.core.internal.resource.LoadableResource;\n+import org.flywaydb.core.internal.util.StringUtils;\n+import org.jboss.logging.Logger;\n+\n+/**\n+ * This implementations of this class are very similar to those of {@link org.flywaydb.core.internal.scanner.Scanner}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893a4750fd8ac0530125113138505c1144ee655f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxNDc3NA==", "bodyText": "It's minor but I would move that to the constructor to avoid creating a new collection every time it's called.", "url": "https://github.com/quarkusio/quarkus/pull/10360#discussion_r447514774", "createdAt": "2020-06-30T08:41:39Z", "author": {"login": "gsmet"}, "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/QuarkusClassProvider.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package io.quarkus.flyway.runtime;\n+\n+import java.util.Collection;\n+import java.util.Collections;\n+\n+import org.flywaydb.core.api.ClassProvider;\n+\n+public class QuarkusClassProvider<I> implements ClassProvider<I> {\n+\n+    private final Collection<Class<? extends I>> classes;\n+\n+    public QuarkusClassProvider(Collection<Class<? extends I>> classes) {\n+        this.classes = classes;\n+    }\n+\n+    @Override\n+    public Collection<Class<? extends I>> getClasses() {\n+        return Collections.unmodifiableCollection(classes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893a4750fd8ac0530125113138505c1144ee655f"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzUxNTI4Mw==", "bodyText": "I wonder if I would call the classes QuarkusFlyway(Resource|Class)Provider to be extra clear.", "url": "https://github.com/quarkusio/quarkus/pull/10360#discussion_r447515283", "createdAt": "2020-06-30T08:42:21Z", "author": {"login": "gsmet"}, "path": "extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/QuarkusResourceProvider.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package io.quarkus.flyway.runtime;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.List;\n+\n+import org.flywaydb.core.api.ResourceProvider;\n+import org.flywaydb.core.internal.resource.LoadableResource;\n+import org.flywaydb.core.internal.util.StringUtils;\n+import org.jboss.logging.Logger;\n+\n+/**\n+ * This implementations of this class are very similar to those of {@link org.flywaydb.core.internal.scanner.Scanner}\n+ * TODO: refactor upstream to move methods to utility class\n+ */\n+public class QuarkusResourceProvider implements ResourceProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "893a4750fd8ac0530125113138505c1144ee655f"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d03ba77b9013a9f09f117f810403e11ab9b9a46", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/5d03ba77b9013a9f09f117f810403e11ab9b9a46", "committedDate": "2020-06-30T08:49:25Z", "message": "Remove Flyway transformer by providing tighter integration\n\nFollow up of #10355\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9307594f2233534e9569af8068572d3bb34fe03", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/d9307594f2233534e9569af8068572d3bb34fe03", "committedDate": "2020-06-30T08:46:02Z", "message": "Update extensions/flyway/runtime/src/main/java/io/quarkus/flyway/runtime/FlywayCreator.java\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>"}, "afterCommit": {"oid": "5d03ba77b9013a9f09f117f810403e11ab9b9a46", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/5d03ba77b9013a9f09f117f810403e11ab9b9a46", "committedDate": "2020-06-30T08:49:25Z", "message": "Remove Flyway transformer by providing tighter integration\n\nFollow up of #10355\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5ODkzNzEw", "url": "https://github.com/quarkusio/quarkus/pull/10360#pullrequestreview-439893710", "createdAt": "2020-06-30T10:43:56Z", "commit": {"oid": "5d03ba77b9013a9f09f117f810403e11ab9b9a46"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4201, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}