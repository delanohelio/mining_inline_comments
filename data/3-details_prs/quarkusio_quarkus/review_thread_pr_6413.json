{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5NDc0ODcx", "number": 6413, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjoyMToxM1rODWBH8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjoyMToxM1rODWBH8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0NDEzNjgyOnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/VertxHttpProcessor.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjoyMToxM1rOFaiJaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQxNjo0Mjo1N1rOFaixnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM2Njc2MA==", "bodyText": "This is really wrong; it's a run time configuration property.  I think we need to revisit this.", "url": "https://github.com/quarkusio/quarkus/pull/6413#discussion_r363366760", "createdAt": "2020-01-06T16:21:13Z", "author": {"login": "dmlloyd"}, "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/VertxHttpProcessor.java", "diffHunk": "@@ -76,11 +75,9 @@ void filterMultipleVertxInstancesWarning(LaunchModeBuildItem launchModeBuildItem\n     }\n \n     @BuildStep(onlyIf = IsNormal.class)\n-    @Record(value = ExecutionTime.RUNTIME_INIT, optional = true)\n-    public KubernetesPortBuildItem kubernetes(HttpConfiguration config, VertxHttpRecorder recorder) {\n-        int port = ConfigProvider.getConfig().getValue(\"quarkus.http.port\", OptionalInt.class).orElse(8080);\n-        recorder.warnIfPortChanged(config, port);\n-        return new KubernetesPortBuildItem(config.port, \"http\");\n+    public KubernetesPortBuildItem kubernetes() {\n+        int port = ConfigProvider.getConfig().getOptionalValue(\"quarkus.http.port\", Integer.class).orElse(8080);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac2c3f689a76040bf3d9679a85911dcbc75fd51c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM3MjM0NA==", "bodyText": "I'll think of a better solution for 1.2. Unfortunately without this change, Kubernetes manifest generation for 1.1 was sort of broken", "url": "https://github.com/quarkusio/quarkus/pull/6413#discussion_r363372344", "createdAt": "2020-01-06T16:32:36Z", "author": {"login": "geoand"}, "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/VertxHttpProcessor.java", "diffHunk": "@@ -76,11 +75,9 @@ void filterMultipleVertxInstancesWarning(LaunchModeBuildItem launchModeBuildItem\n     }\n \n     @BuildStep(onlyIf = IsNormal.class)\n-    @Record(value = ExecutionTime.RUNTIME_INIT, optional = true)\n-    public KubernetesPortBuildItem kubernetes(HttpConfiguration config, VertxHttpRecorder recorder) {\n-        int port = ConfigProvider.getConfig().getValue(\"quarkus.http.port\", OptionalInt.class).orElse(8080);\n-        recorder.warnIfPortChanged(config, port);\n-        return new KubernetesPortBuildItem(config.port, \"http\");\n+    public KubernetesPortBuildItem kubernetes() {\n+        int port = ConfigProvider.getConfig().getOptionalValue(\"quarkus.http.port\", Integer.class).orElse(8080);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM2Njc2MA=="}, "originalCommit": {"oid": "ac2c3f689a76040bf3d9679a85911dcbc75fd51c"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM3NzA1NQ==", "bodyText": "@dmlloyd yeah, we agreed with @geoand that there was something fishy. This is just a quick fix for 1.1.1. We need to discuss how we can solve this properly.", "url": "https://github.com/quarkusio/quarkus/pull/6413#discussion_r363377055", "createdAt": "2020-01-06T16:42:57Z", "author": {"login": "gsmet"}, "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/VertxHttpProcessor.java", "diffHunk": "@@ -76,11 +75,9 @@ void filterMultipleVertxInstancesWarning(LaunchModeBuildItem launchModeBuildItem\n     }\n \n     @BuildStep(onlyIf = IsNormal.class)\n-    @Record(value = ExecutionTime.RUNTIME_INIT, optional = true)\n-    public KubernetesPortBuildItem kubernetes(HttpConfiguration config, VertxHttpRecorder recorder) {\n-        int port = ConfigProvider.getConfig().getValue(\"quarkus.http.port\", OptionalInt.class).orElse(8080);\n-        recorder.warnIfPortChanged(config, port);\n-        return new KubernetesPortBuildItem(config.port, \"http\");\n+    public KubernetesPortBuildItem kubernetes() {\n+        int port = ConfigProvider.getConfig().getOptionalValue(\"quarkus.http.port\", Integer.class).orElse(8080);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzM2Njc2MA=="}, "originalCommit": {"oid": "ac2c3f689a76040bf3d9679a85911dcbc75fd51c"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1300, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}