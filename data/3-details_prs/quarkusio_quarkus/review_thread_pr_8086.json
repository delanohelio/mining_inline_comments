{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNDU4NTYy", "number": 8086, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNTozNDoyNFrODqblGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNTozNDoyNFrODqblGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1ODE4NjQ5OnYy", "diffSide": "RIGHT", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanGenerator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNTozNDoyNFrOF6LBxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjoxNzo0OVrOF6aKxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU0MjQwNQ==", "bodyText": "This only logs private members in the code. Do we want some logging for the pack-private plus package split case too? Because effectively both scenarios force us into reflection which is something we want to avoid, right?", "url": "https://github.com/quarkusio/quarkus/pull/8086#discussion_r396542405", "createdAt": "2020-03-23T15:34:24Z", "author": {"login": "manovotn"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanGenerator.java", "diffHunk": "@@ -1431,10 +1431,12 @@ void implementCreateForClassBean(ClassOutput classOutput, ClassCreator beanCreat\n                     DotNames.POST_CONSTRUCT,\n                     bean.getDeployment().getIndex());\n             for (MethodInfo callback : postConstructCallbacks) {\n-                if (Modifier.isPrivate(callback.flags())) {\n-                    privateMembers.add(isApplicationClass,\n-                            String.format(\"@PostConstruct callback %s#%s()\", callback.declaringClass().name(),\n-                                    callback.name()));\n+                if (isReflectionFallbackNeeded(callback, targetPackage)) {\n+                    if (Modifier.isPrivate(callback.flags())) {\n+                        privateMembers.add(isApplicationClass,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5cd3b615d819ffc9abc3c496d5e61a12f620d6e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU2MDc0Ng==", "bodyText": "I'm not sure. We could log something but the message would have to be quite \"elaborate\".", "url": "https://github.com/quarkusio/quarkus/pull/8086#discussion_r396560746", "createdAt": "2020-03-23T15:57:34Z", "author": {"login": "mkouba"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanGenerator.java", "diffHunk": "@@ -1431,10 +1431,12 @@ void implementCreateForClassBean(ClassOutput classOutput, ClassCreator beanCreat\n                     DotNames.POST_CONSTRUCT,\n                     bean.getDeployment().getIndex());\n             for (MethodInfo callback : postConstructCallbacks) {\n-                if (Modifier.isPrivate(callback.flags())) {\n-                    privateMembers.add(isApplicationClass,\n-                            String.format(\"@PostConstruct callback %s#%s()\", callback.declaringClass().name(),\n-                                    callback.name()));\n+                if (isReflectionFallbackNeeded(callback, targetPackage)) {\n+                    if (Modifier.isPrivate(callback.flags())) {\n+                        privateMembers.add(isApplicationClass,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU0MjQwNQ=="}, "originalCommit": {"oid": "e5cd3b615d819ffc9abc3c496d5e61a12f620d6e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc5MDQ3MQ==", "bodyText": "Yeah and the detection too (since this can happen on multiple places), not sure it's worth it.", "url": "https://github.com/quarkusio/quarkus/pull/8086#discussion_r396790471", "createdAt": "2020-03-23T22:17:49Z", "author": {"login": "manovotn"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanGenerator.java", "diffHunk": "@@ -1431,10 +1431,12 @@ void implementCreateForClassBean(ClassOutput classOutput, ClassCreator beanCreat\n                     DotNames.POST_CONSTRUCT,\n                     bean.getDeployment().getIndex());\n             for (MethodInfo callback : postConstructCallbacks) {\n-                if (Modifier.isPrivate(callback.flags())) {\n-                    privateMembers.add(isApplicationClass,\n-                            String.format(\"@PostConstruct callback %s#%s()\", callback.declaringClass().name(),\n-                                    callback.name()));\n+                if (isReflectionFallbackNeeded(callback, targetPackage)) {\n+                    if (Modifier.isPrivate(callback.flags())) {\n+                        privateMembers.add(isApplicationClass,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjU0MjQwNQ=="}, "originalCommit": {"oid": "e5cd3b615d819ffc9abc3c496d5e61a12f620d6e"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4585, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}