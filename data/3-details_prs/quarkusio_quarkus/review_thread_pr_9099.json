{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNzkxNTc2", "number": 9099, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTo0MzoxNlrOD5veMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTo0MzoxNlrOD5veMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODczMjAzOnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/index/ApplicationArchiveBuildStep.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwOTo0MzoxNlrOGRLbKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwOToyNzo0NlrOGSfdyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY2NjE1Mg==", "bodyText": "This may need adjustment. Previously it used to look for the markers in the deployment classloader, which includes more resources than the list of the deployment deps the resolver returns.", "url": "https://github.com/quarkusio/quarkus/pull/9099#discussion_r420666152", "createdAt": "2020-05-06T09:43:16Z", "author": {"login": "aloubyansky"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/index/ApplicationArchiveBuildStep.java", "diffHunk": "@@ -171,47 +169,41 @@ ApplicationArchivesBuildItem build(\n         return ret;\n     }\n \n-    private static Collection<? extends Path> getMarkerFilePaths(ClassLoader classLoader, Set<String> applicationArchiveFiles,\n-            ArchiveRootBuildItem root)\n+    private static void addMarkerFilePaths(Set<String> applicationArchiveFiles,\n+            ArchiveRootBuildItem root, CurateOutcomeBuildItem curateOutcomeBuildItem, Set<Path> depsToIndex)\n             throws IOException {\n-        List<Path> ret = new ArrayList<>();\n-        for (String file : applicationArchiveFiles) {\n-            Enumeration<URL> e = classLoader.getResources(file);\n-            while (e.hasMoreElements()) {\n-                final URL url = e.nextElement();\n-                final Path path = urlToPath(url, file);\n-                if (!root.isExcludedFromIndexing(path)) {\n-                    ret.add(path);\n+        for (AppDependency dep : curateOutcomeBuildItem.getEffectiveModel().getFullDeploymentDeps()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47e4959f3ae48a5c374260b84635d8d2ddbe3faa"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjAxMzgyMg==", "bodyText": "Yea, this needs to be user deps, not deployment deps.", "url": "https://github.com/quarkusio/quarkus/pull/9099#discussion_r422013822", "createdAt": "2020-05-08T08:22:25Z", "author": {"login": "stuartwdouglas"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/index/ApplicationArchiveBuildStep.java", "diffHunk": "@@ -171,47 +169,41 @@ ApplicationArchivesBuildItem build(\n         return ret;\n     }\n \n-    private static Collection<? extends Path> getMarkerFilePaths(ClassLoader classLoader, Set<String> applicationArchiveFiles,\n-            ArchiveRootBuildItem root)\n+    private static void addMarkerFilePaths(Set<String> applicationArchiveFiles,\n+            ArchiveRootBuildItem root, CurateOutcomeBuildItem curateOutcomeBuildItem, Set<Path> depsToIndex)\n             throws IOException {\n-        List<Path> ret = new ArrayList<>();\n-        for (String file : applicationArchiveFiles) {\n-            Enumeration<URL> e = classLoader.getResources(file);\n-            while (e.hasMoreElements()) {\n-                final URL url = e.nextElement();\n-                final Path path = urlToPath(url, file);\n-                if (!root.isExcludedFromIndexing(path)) {\n-                    ret.add(path);\n+        for (AppDependency dep : curateOutcomeBuildItem.getEffectiveModel().getFullDeploymentDeps()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY2NjE1Mg=="}, "originalCommit": {"oid": "47e4959f3ae48a5c374260b84635d8d2ddbe3faa"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjA0MzA4MQ==", "bodyText": "Done.", "url": "https://github.com/quarkusio/quarkus/pull/9099#discussion_r422043081", "createdAt": "2020-05-08T09:27:46Z", "author": {"login": "aloubyansky"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/index/ApplicationArchiveBuildStep.java", "diffHunk": "@@ -171,47 +169,41 @@ ApplicationArchivesBuildItem build(\n         return ret;\n     }\n \n-    private static Collection<? extends Path> getMarkerFilePaths(ClassLoader classLoader, Set<String> applicationArchiveFiles,\n-            ArchiveRootBuildItem root)\n+    private static void addMarkerFilePaths(Set<String> applicationArchiveFiles,\n+            ArchiveRootBuildItem root, CurateOutcomeBuildItem curateOutcomeBuildItem, Set<Path> depsToIndex)\n             throws IOException {\n-        List<Path> ret = new ArrayList<>();\n-        for (String file : applicationArchiveFiles) {\n-            Enumeration<URL> e = classLoader.getResources(file);\n-            while (e.hasMoreElements()) {\n-                final URL url = e.nextElement();\n-                final Path path = urlToPath(url, file);\n-                if (!root.isExcludedFromIndexing(path)) {\n-                    ret.add(path);\n+        for (AppDependency dep : curateOutcomeBuildItem.getEffectiveModel().getFullDeploymentDeps()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDY2NjE1Mg=="}, "originalCommit": {"oid": "47e4959f3ae48a5c374260b84635d8d2ddbe3faa"}, "originalPosition": 121}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3255, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}