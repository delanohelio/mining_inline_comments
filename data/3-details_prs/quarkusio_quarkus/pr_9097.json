{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzNzE0NTUw", "number": 9097, "title": "Simplify data source configuration", "bodyText": "Done by removing all traces of manually generated bytecode\nand instead relying on synthetic beans.\nThis was done after discussion with @gsmet", "createdAt": "2020-05-05T19:40:32Z", "url": "https://github.com/quarkusio/quarkus/pull/9097", "merged": true, "mergeCommit": {"oid": "4f88e33aec9623440e6e187dd5ab3fe49bf6dfa5"}, "closed": true, "closedAt": "2020-05-06T16:48:10Z", "author": {"login": "geoand"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceiSETgBqjMzMDY5OTg0OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceqJOdABqjMzMDg5NTc5MTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1d477441d84bf273ac760178ef9d7897f51c50fc", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/1d477441d84bf273ac760178ef9d7897f51c50fc", "committedDate": "2020-05-05T19:38:41Z", "message": "Simplify data source configuration\n\nDone by removing all traces of manually generated bytecode\nand instead relying on synthetic beans"}, "afterCommit": {"oid": "b9f513b9eee82ecc459273b58cf02fd88b9df3a1", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/b9f513b9eee82ecc459273b58cf02fd88b9df3a1", "committedDate": "2020-05-06T06:00:11Z", "message": "Simplify data source configuration\n\nDone by removing all traces of manually generated bytecode\nand instead relying on synthetic beans"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9f513b9eee82ecc459273b58cf02fd88b9df3a1", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/b9f513b9eee82ecc459273b58cf02fd88b9df3a1", "committedDate": "2020-05-06T06:00:11Z", "message": "Simplify data source configuration\n\nDone by removing all traces of manually generated bytecode\nand instead relying on synthetic beans"}, "afterCommit": {"oid": "b533e7aa874798e56efbb436d0643af7640a78b8", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/b533e7aa874798e56efbb436d0643af7640a78b8", "committedDate": "2020-05-06T08:17:02Z", "message": "Simplify data source configuration\n\nDone by removing all traces of manually generated bytecode\nand instead relying on synthetic beans"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b533e7aa874798e56efbb436d0643af7640a78b8", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/b533e7aa874798e56efbb436d0643af7640a78b8", "committedDate": "2020-05-06T08:17:02Z", "message": "Simplify data source configuration\n\nDone by removing all traces of manually generated bytecode\nand instead relying on synthetic beans"}, "afterCommit": {"oid": "179065544b4a9bc8ca3d6c29e13132de9273413c", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/179065544b4a9bc8ca3d6c29e13132de9273413c", "committedDate": "2020-05-06T08:24:01Z", "message": "Simplify data source configuration\n\nDone by removing all traces of manually generated bytecode\nand instead relying on synthetic beans"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "179065544b4a9bc8ca3d6c29e13132de9273413c", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/179065544b4a9bc8ca3d6c29e13132de9273413c", "committedDate": "2020-05-06T08:24:01Z", "message": "Simplify data source configuration\n\nDone by removing all traces of manually generated bytecode\nand instead relying on synthetic beans"}, "afterCommit": {"oid": "3f07970ccb2f407f59f61964f4d3859181aacebd", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/3f07970ccb2f407f59f61964f4d3859181aacebd", "committedDate": "2020-05-06T09:50:44Z", "message": "Simplify data source configuration\n\nDone by removing all traces of manually generated bytecode\nand instead relying on synthetic beans"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3f07970ccb2f407f59f61964f4d3859181aacebd", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/3f07970ccb2f407f59f61964f4d3859181aacebd", "committedDate": "2020-05-06T09:50:44Z", "message": "Simplify data source configuration\n\nDone by removing all traces of manually generated bytecode\nand instead relying on synthetic beans"}, "afterCommit": {"oid": "c30a471b64f97690d5782c2105fd4979091c4496", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/c30a471b64f97690d5782c2105fd4979091c4496", "committedDate": "2020-05-06T11:13:21Z", "message": "Simplify data source configuration\n\nDone by removing all traces of manually generated bytecode\nand instead relying on synthetic beans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2NjQzNzU0", "url": "https://github.com/quarkusio/quarkus/pull/9097#pullrequestreview-406643754", "createdAt": "2020-05-06T14:02:01Z", "commit": {"oid": "c30a471b64f97690d5782c2105fd4979091c4496"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNDowMjowMVrOGRUkSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNDoyMToxMFrOGRVcxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgxNTk0NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // add the @DataSource class otherwise it won't registered as a qualifier\n          \n          \n            \n                    // add the @DataSource class otherwise it won't be registered as a qualifier", "url": "https://github.com/quarkusio/quarkus/pull/9097#discussion_r420815944", "createdAt": "2020-05-06T14:02:01Z", "author": {"login": "gsmet"}, "path": "extensions/agroal/deployment/src/main/java/io/quarkus/agroal/deployment/AgroalProcessor.java", "diffHunk": "@@ -197,28 +163,111 @@ private static void validateBuildTimeConfig(AggregatedDataSourceBuildTimeConfigB\n         }\n     }\n \n-    @Record(ExecutionTime.RUNTIME_INIT)\n+    private DataSourceSupport getDataSourceSupport(\n+            List<AggregatedDataSourceBuildTimeConfigBuildItem> aggregatedBuildTimeConfigBuildItems,\n+            SslNativeConfigBuildItem sslNativeConfig, Capabilities capabilities) {\n+        Map<String, DataSourceSupport.Entry> dataSourceSupportEntries = new HashMap<>();\n+        for (AggregatedDataSourceBuildTimeConfigBuildItem aggregatedDataSourceBuildTimeConfig : aggregatedBuildTimeConfigBuildItems) {\n+            String dataSourceName = aggregatedDataSourceBuildTimeConfig.getName();\n+            dataSourceSupportEntries.put(dataSourceName,\n+                    new DataSourceSupport.Entry(dataSourceName, aggregatedDataSourceBuildTimeConfig.getResolvedDbKind(),\n+                            aggregatedDataSourceBuildTimeConfig.getResolvedDriverClass(),\n+                            aggregatedDataSourceBuildTimeConfig.isLegacy(), aggregatedDataSourceBuildTimeConfig.isDefault()));\n+        }\n+\n+        return new DataSourceSupport(sslNativeConfig.isExplicitlyDisabled(),\n+                capabilities.isCapabilityPresent(Capabilities.METRICS), dataSourceSupportEntries);\n+    }\n+\n+    @Record(ExecutionTime.STATIC_INIT)\n     @BuildStep\n-    void configureDataSources(AgroalRecorder recorder,\n-            BuildProducer<JdbcDataSourceBuildItem> jdbcDataSource,\n+    void generateDataSourceSupportBean(AgroalRecorder recorder,\n             List<AggregatedDataSourceBuildTimeConfigBuildItem> aggregatedBuildTimeConfigBuildItems,\n-            DataSourcesBuildTimeConfig dataSourcesBuildTimeConfig,\n-            DataSourcesJdbcBuildTimeConfig dataSourcesJdbcBuildTimeConfig,\n+            SslNativeConfigBuildItem sslNativeConfig,\n+            Capabilities capabilities,\n+            BuildProducer<AdditionalBeanBuildItem> additionalBeans,\n+            BuildProducer<SyntheticBeanBuildItem> syntheticBeanBuildItemBuildProducer) {\n+        if (aggregatedBuildTimeConfigBuildItems.isEmpty()) {\n+            // No datasource has been configured so bail out\n+            return;\n+        }\n+\n+        // make a DataSourceProducer bean\n+        additionalBeans.produce(AdditionalBeanBuildItem.builder().addBeanClasses(DataSourceProducer.class).setUnremovable()\n+                .setDefaultScope(DotNames.SINGLETON).build());\n+        // add the @DataSource class otherwise it won't registered as a qualifier", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30a471b64f97690d5782c2105fd4979091c4496"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgxNjI0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // create the DataSourceSupport bean that DataSourceProducer uses a dependency\n          \n          \n            \n                    // create the DataSourceSupport bean that DataSourceProducer uses as a dependency", "url": "https://github.com/quarkusio/quarkus/pull/9097#discussion_r420816242", "createdAt": "2020-05-06T14:02:25Z", "author": {"login": "gsmet"}, "path": "extensions/agroal/deployment/src/main/java/io/quarkus/agroal/deployment/AgroalProcessor.java", "diffHunk": "@@ -197,28 +163,111 @@ private static void validateBuildTimeConfig(AggregatedDataSourceBuildTimeConfigB\n         }\n     }\n \n-    @Record(ExecutionTime.RUNTIME_INIT)\n+    private DataSourceSupport getDataSourceSupport(\n+            List<AggregatedDataSourceBuildTimeConfigBuildItem> aggregatedBuildTimeConfigBuildItems,\n+            SslNativeConfigBuildItem sslNativeConfig, Capabilities capabilities) {\n+        Map<String, DataSourceSupport.Entry> dataSourceSupportEntries = new HashMap<>();\n+        for (AggregatedDataSourceBuildTimeConfigBuildItem aggregatedDataSourceBuildTimeConfig : aggregatedBuildTimeConfigBuildItems) {\n+            String dataSourceName = aggregatedDataSourceBuildTimeConfig.getName();\n+            dataSourceSupportEntries.put(dataSourceName,\n+                    new DataSourceSupport.Entry(dataSourceName, aggregatedDataSourceBuildTimeConfig.getResolvedDbKind(),\n+                            aggregatedDataSourceBuildTimeConfig.getResolvedDriverClass(),\n+                            aggregatedDataSourceBuildTimeConfig.isLegacy(), aggregatedDataSourceBuildTimeConfig.isDefault()));\n+        }\n+\n+        return new DataSourceSupport(sslNativeConfig.isExplicitlyDisabled(),\n+                capabilities.isCapabilityPresent(Capabilities.METRICS), dataSourceSupportEntries);\n+    }\n+\n+    @Record(ExecutionTime.STATIC_INIT)\n     @BuildStep\n-    void configureDataSources(AgroalRecorder recorder,\n-            BuildProducer<JdbcDataSourceBuildItem> jdbcDataSource,\n+    void generateDataSourceSupportBean(AgroalRecorder recorder,\n             List<AggregatedDataSourceBuildTimeConfigBuildItem> aggregatedBuildTimeConfigBuildItems,\n-            DataSourcesBuildTimeConfig dataSourcesBuildTimeConfig,\n-            DataSourcesJdbcBuildTimeConfig dataSourcesJdbcBuildTimeConfig,\n+            SslNativeConfigBuildItem sslNativeConfig,\n+            Capabilities capabilities,\n+            BuildProducer<AdditionalBeanBuildItem> additionalBeans,\n+            BuildProducer<SyntheticBeanBuildItem> syntheticBeanBuildItemBuildProducer) {\n+        if (aggregatedBuildTimeConfigBuildItems.isEmpty()) {\n+            // No datasource has been configured so bail out\n+            return;\n+        }\n+\n+        // make a DataSourceProducer bean\n+        additionalBeans.produce(AdditionalBeanBuildItem.builder().addBeanClasses(DataSourceProducer.class).setUnremovable()\n+                .setDefaultScope(DotNames.SINGLETON).build());\n+        // add the @DataSource class otherwise it won't registered as a qualifier\n+        additionalBeans.produce(AdditionalBeanBuildItem.builder().addBeanClass(DataSource.class).build());\n+\n+        // create the DataSourceSupport bean that DataSourceProducer uses a dependency", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30a471b64f97690d5782c2105fd4979091c4496"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgxOTI4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * and it's {@code  createDataSource} method is called at runtime in order to produce\n          \n          \n            \n             * and its {@code  createDataSource} method is called at runtime in order to produce", "url": "https://github.com/quarkusio/quarkus/pull/9097#discussion_r420819287", "createdAt": "2020-05-06T14:06:33Z", "author": {"login": "gsmet"}, "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/DataSourceProducer.java", "diffHunk": "@@ -41,64 +40,72 @@\n import io.quarkus.runtime.configuration.ConfigurationException;\n import io.quarkus.vault.CredentialsProvider;\n \n+/**\n+ * This class is sort of a producer for {@link AgroalDataSource}.\n+ *\n+ * It isn't a CDI producer in the literal sense, but it is marked as a bean\n+ * and it's {@code  createDataSource} method is called at runtime in order to produce", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30a471b64f97690d5782c2105fd4979091c4496"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgyMTA5OA==", "bodyText": "Should we fix it?", "url": "https://github.com/quarkusio/quarkus/pull/9097#discussion_r420821098", "createdAt": "2020-05-06T14:08:59Z", "author": {"login": "gsmet"}, "path": "extensions/elytron-security-jdbc/runtime/src/main/java/io/quarkus/elytron/security/jdbc/JdbcRecorder.java", "diffHunk": "@@ -64,6 +64,7 @@ private void registerPrincipalQuery(PrincipalQueryConfig principalQuery, JdbcSec\n \n     private DataSource getDataSource(PrincipalQueryConfig principalQuery) {\n         return (DataSource) principalQuery.datasource\n+                // this is not correct, it should be something like 'Arc.container().instance(javax.sql.DataSource.class, new DataSource.DataSourceLiteral(name))'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30a471b64f97690d5782c2105fd4979091c4496"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgzMDQwNg==", "bodyText": "Can't we inject all that now if this is a CDI bean? I thought we could and tbh that was one of the reasons I pushed for this change :).", "url": "https://github.com/quarkusio/quarkus/pull/9097#discussion_r420830406", "createdAt": "2020-05-06T14:21:10Z", "author": {"login": "gsmet"}, "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/DataSourceProducer.java", "diffHunk": "@@ -41,64 +40,72 @@\n import io.quarkus.runtime.configuration.ConfigurationException;\n import io.quarkus.vault.CredentialsProvider;\n \n+/**\n+ * This class is sort of a producer for {@link AgroalDataSource}.\n+ *\n+ * It isn't a CDI producer in the literal sense, but it is marked as a bean\n+ * and it's {@code  createDataSource} method is called at runtime in order to produce\n+ * the actual {@code AgroalDataSource} objects.\n+ *\n+ * CDI scopes and qualifiers are setup at build-time, which is why this class is devoid of\n+ * any CDI annotations\n+ *\n+ */\n @SuppressWarnings(\"deprecation\")\n-public abstract class AbstractDataSourceProducer {\n+public class DataSourceProducer {\n \n-    private static final Logger log = Logger.getLogger(AbstractDataSourceProducer.class.getName());\n+    private static final Logger log = Logger.getLogger(DataSourceProducer.class.getName());\n \n-    private DataSourcesBuildTimeConfig dataSourcesBuildTimeConfig;\n-    private DataSourcesRuntimeConfig dataSourcesRuntimeConfig;\n-    private DataSourcesJdbcBuildTimeConfig dataSourcesJdbcBuildTimeConfig;\n-    private DataSourcesJdbcRuntimeConfig dataSourcesJdbcRuntimeConfig;\n+    private final DataSourcesBuildTimeConfig dataSourcesBuildTimeConfig;\n+    private final DataSourcesRuntimeConfig dataSourcesRuntimeConfig;\n+    private final DataSourcesJdbcBuildTimeConfig dataSourcesJdbcBuildTimeConfig;\n+    private final DataSourcesJdbcRuntimeConfig dataSourcesJdbcRuntimeConfig;\n+    private final LegacyDataSourcesJdbcBuildTimeConfig legacyDataSourcesJdbcBuildTimeConfig;\n+    private final LegacyDataSourcesRuntimeConfig legacyDataSourcesRuntimeConfig;\n+    private final LegacyDataSourcesJdbcRuntimeConfig legacyDataSourcesJdbcRuntimeConfig;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c30a471b64f97690d5782c2105fd4979091c4496"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7615b54fc36a9bebfb0bea8fac9d4838831c4d4c", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/7615b54fc36a9bebfb0bea8fac9d4838831c4d4c", "committedDate": "2020-05-06T14:32:53Z", "message": "Update extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/DataSourceProducer.java\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>"}, "afterCommit": {"oid": "c956c89b5d3eb82a7ecf59f840819da3c752fee4", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/c956c89b5d3eb82a7ecf59f840819da3c752fee4", "committedDate": "2020-05-06T14:38:15Z", "message": "Use better style CDI when obtaining the DataSource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c956c89b5d3eb82a7ecf59f840819da3c752fee4", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/c956c89b5d3eb82a7ecf59f840819da3c752fee4", "committedDate": "2020-05-06T14:38:15Z", "message": "Use better style CDI when obtaining the DataSource"}, "afterCommit": {"oid": "4e25e6a33f6655c2bb4e644f294eb1f9d2cc8c7a", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/4e25e6a33f6655c2bb4e644f294eb1f9d2cc8c7a", "committedDate": "2020-05-06T14:42:28Z", "message": "Use better style CDI when obtaining the DataSource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2Njg2NDMw", "url": "https://github.com/quarkusio/quarkus/pull/9097#pullrequestreview-406686430", "createdAt": "2020-05-06T14:45:13Z", "commit": {"oid": "4e25e6a33f6655c2bb4e644f294eb1f9d2cc8c7a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNDo0NToxM1rOGRWmtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNDo0NToxM1rOGRWmtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg0OTMzNQ==", "bodyText": "Sorry a bit late for that comment but I'm wondering if we should get rid of this lambda while we're at it. It really doesn't bring anything useful. I can do it later on if you're tired of my nitpicking :).", "url": "https://github.com/quarkusio/quarkus/pull/9097#discussion_r420849335", "createdAt": "2020-05-06T14:45:13Z", "author": {"login": "gsmet"}, "path": "extensions/elytron-security-jdbc/runtime/src/main/java/io/quarkus/elytron/security/jdbc/JdbcRecorder.java", "diffHunk": "@@ -63,8 +61,9 @@ private void registerPrincipalQuery(PrincipalQueryConfig principalQuery, JdbcSec\n     }\n \n     private DataSource getDataSource(PrincipalQueryConfig principalQuery) {\n-        return (DataSource) principalQuery.datasource\n-                .map(name -> Arc.container().instance(name).get())\n+        return principalQuery.datasource\n+                .map(name -> Arc.container()\n+                        .instance(DataSource.class, new io.quarkus.agroal.DataSource.DataSourceLiteral(name)).get())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e25e6a33f6655c2bb4e644f294eb1f9d2cc8c7a"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2Njg2OTEy", "url": "https://github.com/quarkusio/quarkus/pull/9097#pullrequestreview-406686912", "createdAt": "2020-05-06T14:45:42Z", "commit": {"oid": "4e25e6a33f6655c2bb4e644f294eb1f9d2cc8c7a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4e25e6a33f6655c2bb4e644f294eb1f9d2cc8c7a", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/4e25e6a33f6655c2bb4e644f294eb1f9d2cc8c7a", "committedDate": "2020-05-06T14:42:28Z", "message": "Use better style CDI when obtaining the DataSource"}, "afterCommit": {"oid": "2b45df4df3196ef01810daa4ba16b7d6102c0b98", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/2b45df4df3196ef01810daa4ba16b7d6102c0b98", "committedDate": "2020-05-06T14:49:05Z", "message": "Use better style CDI when obtaining the DataSource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d03fbbfc7c91d9f1741c83b3227394c360a9660f", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/d03fbbfc7c91d9f1741c83b3227394c360a9660f", "committedDate": "2020-05-06T15:03:31Z", "message": "Simplify data source configuration\n\nDone by removing all traces of manually generated bytecode\nand instead relying on synthetic beans\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b45df4df3196ef01810daa4ba16b7d6102c0b98", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/2b45df4df3196ef01810daa4ba16b7d6102c0b98", "committedDate": "2020-05-06T14:49:05Z", "message": "Use better style CDI when obtaining the DataSource"}, "afterCommit": {"oid": "5af1577ffb741a22c8df705b7e70ab925881d9cc", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/5af1577ffb741a22c8df705b7e70ab925881d9cc", "committedDate": "2020-05-06T15:03:59Z", "message": "Use better style CDI when obtaining the DataSource"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19001dfc340cf6c31ad01b98b7732f73877c4e05", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/19001dfc340cf6c31ad01b98b7732f73877c4e05", "committedDate": "2020-05-06T15:09:46Z", "message": "Use better style CDI when obtaining the DataSource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5af1577ffb741a22c8df705b7e70ab925881d9cc", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/5af1577ffb741a22c8df705b7e70ab925881d9cc", "committedDate": "2020-05-06T15:03:59Z", "message": "Use better style CDI when obtaining the DataSource"}, "afterCommit": {"oid": "19001dfc340cf6c31ad01b98b7732f73877c4e05", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/19001dfc340cf6c31ad01b98b7732f73877c4e05", "committedDate": "2020-05-06T15:09:46Z", "message": "Use better style CDI when obtaining the DataSource"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3511, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}