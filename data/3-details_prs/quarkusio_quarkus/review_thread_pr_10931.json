{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1NjM3MDg0", "number": 10931, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoxOTowN1rOERbF1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyMjoyN1rOERbKgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzA1MTA5OnYy", "diffSide": "RIGHT", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoxOTowN1rOG2H6-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyMjoyOVrOG2IB7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNjA3Mg==", "bodyText": "Lets replace null with result.opaqueRefreshToken()", "url": "https://github.com/quarkusio/quarkus/pull/10931#discussion_r459406072", "createdAt": "2020-07-23T12:19:07Z", "author": {"login": "sberyozkin"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -303,7 +303,7 @@ public void accept(SecurityIdentity identity) {\n                                             LOG.debug(\"ID Token is required to contain 'exp' and 'iat' claims\");\n                                             uniEmitter.fail(new AuthenticationCompletionException());\n                                         }\n-                                        processSuccessfulAuthentication(context, configContext, result, identity);\n+                                        processSuccessfulAuthentication(context, configContext, result, null, identity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b6b0c748f68a535d6d6f33cea6108f4feaa259"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNzg1NQ==", "bodyText": "LGTM", "url": "https://github.com/quarkusio/quarkus/pull/10931#discussion_r459407855", "createdAt": "2020-07-23T12:22:29Z", "author": {"login": "sdaschner"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -303,7 +303,7 @@ public void accept(SecurityIdentity identity) {\n                                             LOG.debug(\"ID Token is required to contain 'exp' and 'iat' claims\");\n                                             uniEmitter.fail(new AuthenticationCompletionException());\n                                         }\n-                                        processSuccessfulAuthentication(context, configContext, result, identity);\n+                                        processSuccessfulAuthentication(context, configContext, result, null, identity);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNjA3Mg=="}, "originalCommit": {"oid": "97b6b0c748f68a535d6d6f33cea6108f4feaa259"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzA1NTkxOnYy", "diffSide": "RIGHT", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyMDoyNlrOG2H9tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyMjozOFrOG2ICOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNjc3Mw==", "bodyText": "Lets replace refreshToken with result.opaqueRefreshToken() != null ? result.opaqueRefreshToken() : refreshToken because this check only makes sense in context of the refresh token grant processing", "url": "https://github.com/quarkusio/quarkus/pull/10931#discussion_r459406773", "createdAt": "2020-07-23T12:20:26Z", "author": {"login": "sberyozkin"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -471,7 +470,7 @@ public void handle(AsyncResult<Void> result) {\n                                                 @Override\n                                                 public void accept(SecurityIdentity identity) {\n                                                     // after a successful refresh, rebuild the identity and update the cookie \n-                                                    processSuccessfulAuthentication(context, configContext, token,\n+                                                    processSuccessfulAuthentication(context, configContext, token, refreshToken,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b6b0c748f68a535d6d6f33cea6108f4feaa259"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNzkyOQ==", "bodyText": "LGTM", "url": "https://github.com/quarkusio/quarkus/pull/10931#discussion_r459407929", "createdAt": "2020-07-23T12:22:38Z", "author": {"login": "sdaschner"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -471,7 +470,7 @@ public void handle(AsyncResult<Void> result) {\n                                                 @Override\n                                                 public void accept(SecurityIdentity identity) {\n                                                     // after a successful refresh, rebuild the identity and update the cookie \n-                                                    processSuccessfulAuthentication(context, configContext, token,\n+                                                    processSuccessfulAuthentication(context, configContext, token, refreshToken,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNjc3Mw=="}, "originalCommit": {"oid": "97b6b0c748f68a535d6d6f33cea6108f4feaa259"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NzA2MzA2OnYy", "diffSide": "RIGHT", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjoyMjoyN1rOG2IB2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxMjozMDozM1rOG2IStw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNzgzNQ==", "bodyText": "This line can be removed once the proposed changes have been implemented", "url": "https://github.com/quarkusio/quarkus/pull/10931#discussion_r459407835", "createdAt": "2020-07-23T12:22:27Z", "author": {"login": "sberyozkin"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -348,15 +348,14 @@ private String signJwtWithClientSecret(OidcTenantConfig cfg) {\n     }\n \n     private void processSuccessfulAuthentication(RoutingContext context, TenantConfigContext configContext,\n-            AccessToken result, SecurityIdentity securityIdentity) {\n-\n+            AccessToken result, String refreshToken, SecurityIdentity securityIdentity) {\n         removeCookie(context, configContext, getSessionCookieName(configContext));\n \n-        String cookieValue = new StringBuilder(result.opaqueIdToken())\n-                .append(COOKIE_DELIM)\n-                .append(result.opaqueAccessToken())\n-                .append(COOKIE_DELIM)\n-                .append(result.opaqueRefreshToken()).toString();\n+        String refresh = result.opaqueRefreshToken() != null ? result.opaqueRefreshToken() : refreshToken;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97b6b0c748f68a535d6d6f33cea6108f4feaa259"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwODQ5Mw==", "bodyText": "You mean, rather result.opaqueRefreshToken() being replaced with refreshToken (if that's always set from either two at the method invocation already, as you proposed, right?", "url": "https://github.com/quarkusio/quarkus/pull/10931#discussion_r459408493", "createdAt": "2020-07-23T12:23:47Z", "author": {"login": "sdaschner"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -348,15 +348,14 @@ private String signJwtWithClientSecret(OidcTenantConfig cfg) {\n     }\n \n     private void processSuccessfulAuthentication(RoutingContext context, TenantConfigContext configContext,\n-            AccessToken result, SecurityIdentity securityIdentity) {\n-\n+            AccessToken result, String refreshToken, SecurityIdentity securityIdentity) {\n         removeCookie(context, configContext, getSessionCookieName(configContext));\n \n-        String cookieValue = new StringBuilder(result.opaqueIdToken())\n-                .append(COOKIE_DELIM)\n-                .append(result.opaqueAccessToken())\n-                .append(COOKIE_DELIM)\n-                .append(result.opaqueRefreshToken()).toString();\n+        String refresh = result.opaqueRefreshToken() != null ? result.opaqueRefreshToken() : refreshToken;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNzgzNQ=="}, "originalCommit": {"oid": "97b6b0c748f68a535d6d6f33cea6108f4feaa259"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQxMDk4MQ==", "bodyText": "@sdaschner, this method is called from 2 places, when we complete the code grant exchange and refresh the token, in the former case RT is expected to be avail, in the latter - may not be, so I thought that in this function we should use refreshToken parameter only", "url": "https://github.com/quarkusio/quarkus/pull/10931#discussion_r459410981", "createdAt": "2020-07-23T12:28:27Z", "author": {"login": "sberyozkin"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -348,15 +348,14 @@ private String signJwtWithClientSecret(OidcTenantConfig cfg) {\n     }\n \n     private void processSuccessfulAuthentication(RoutingContext context, TenantConfigContext configContext,\n-            AccessToken result, SecurityIdentity securityIdentity) {\n-\n+            AccessToken result, String refreshToken, SecurityIdentity securityIdentity) {\n         removeCookie(context, configContext, getSessionCookieName(configContext));\n \n-        String cookieValue = new StringBuilder(result.opaqueIdToken())\n-                .append(COOKIE_DELIM)\n-                .append(result.opaqueAccessToken())\n-                .append(COOKIE_DELIM)\n-                .append(result.opaqueRefreshToken()).toString();\n+        String refresh = result.opaqueRefreshToken() != null ? result.opaqueRefreshToken() : refreshToken;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNzgzNQ=="}, "originalCommit": {"oid": "97b6b0c748f68a535d6d6f33cea6108f4feaa259"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQxMjE1MQ==", "bodyText": "Yes, exactly +1", "url": "https://github.com/quarkusio/quarkus/pull/10931#discussion_r459412151", "createdAt": "2020-07-23T12:30:33Z", "author": {"login": "sdaschner"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -348,15 +348,14 @@ private String signJwtWithClientSecret(OidcTenantConfig cfg) {\n     }\n \n     private void processSuccessfulAuthentication(RoutingContext context, TenantConfigContext configContext,\n-            AccessToken result, SecurityIdentity securityIdentity) {\n-\n+            AccessToken result, String refreshToken, SecurityIdentity securityIdentity) {\n         removeCookie(context, configContext, getSessionCookieName(configContext));\n \n-        String cookieValue = new StringBuilder(result.opaqueIdToken())\n-                .append(COOKIE_DELIM)\n-                .append(result.opaqueAccessToken())\n-                .append(COOKIE_DELIM)\n-                .append(result.opaqueRefreshToken()).toString();\n+        String refresh = result.opaqueRefreshToken() != null ? result.opaqueRefreshToken() : refreshToken;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTQwNzgzNQ=="}, "originalCommit": {"oid": "97b6b0c748f68a535d6d6f33cea6108f4feaa259"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 857, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}