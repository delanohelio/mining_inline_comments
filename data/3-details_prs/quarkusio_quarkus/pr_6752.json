{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NTAyNjkx", "number": 6752, "title": "Generate Tika XML configuration during build time", "bodyText": "test: TikaProcessorTest should use Quarkus test framework\nFixes #6746\nFixes #5700", "createdAt": "2020-01-23T18:29:15Z", "url": "https://github.com/quarkusio/quarkus/pull/6752", "merged": true, "mergeCommit": {"oid": "f0426bde3c0882ca56e36072fc83933d2df4a1cf"}, "closed": true, "closedAt": "2020-01-31T11:12:34Z", "author": {"login": "machi1990"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9OsPPAH2gAyMzY2NTAyNjkxOjhlMGEyMWZhNDk4NTJmMWQ3Njk3MWMwOTk0MzdkMTAyOGZhZWNlZDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_tNRdgFqTM1MTQzODAwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8e0a21fa49852f1d76971c099437d1028faeced0", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/8e0a21fa49852f1d76971c099437d1028faeced0", "committedDate": "2020-01-23T18:31:18Z", "message": "feat(tika): generate tika xml configuration during build time\n\ntest: TikaProcessorTest should use Quarkus test framework\n\nFixes https://github.com/quarkusio/quarkus/issues/6746\nFixes https://github.com/quarkusio/quarkus/issues/5700"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98fff7915f8964e799039b9221db328e91b8f339", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/98fff7915f8964e799039b9221db328e91b8f339", "committedDate": "2020-01-23T18:05:33Z", "message": "feat(tika): generate tika xml configuration during build time\n\ntest: TikaProcessorTest should use Quarkus test framework\n\nFixes https://github.com/quarkusio/quarkus/issues/6746\nFixes https://github.com/quarkusio/quarkus/issues/5700"}, "afterCommit": {"oid": "8e0a21fa49852f1d76971c099437d1028faeced0", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/8e0a21fa49852f1d76971c099437d1028faeced0", "committedDate": "2020-01-23T18:31:18Z", "message": "feat(tika): generate tika xml configuration during build time\n\ntest: TikaProcessorTest should use Quarkus test framework\n\nFixes https://github.com/quarkusio/quarkus/issues/6746\nFixes https://github.com/quarkusio/quarkus/issues/5700"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NTIzNzI3", "url": "https://github.com/quarkusio/quarkus/pull/6752#pullrequestreview-347523727", "createdAt": "2020-01-23T18:43:39Z", "commit": {"oid": "8e0a21fa49852f1d76971c099437d1028faeced0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxODo0Mzo0MFrOFhIuDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxODo0Mzo0MFrOFhIuDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI5MDE5MA==", "bodyText": "@machi1990 first of all, thanks for this effort :-)\nI'm not sure about removing a build item containing this Map. My plan, with the current master, has been to make this Map visible to various steps dealing with the individual parsers. For example, I suggested to @tpenakov in the issue where he works on OOXML support to group all PDF related build steps into a single method like preparePdfParser and check this map if PDF parser key is available and only then do all those PDF specific native registrations, the same for OOXML.\nFor example, this method, this one and this one are specific to PDF and the plan has been to make a single method preparePDFParser out of 3 of them and make all of that optional depending on whether org.apache.tika.parser.pdf.PDFParser key is in the map or not.\nSo I think that build item still has to be retained. Let me know please if it makes sense. CC @gsmet", "url": "https://github.com/quarkusio/quarkus/pull/6752#discussion_r370290190", "createdAt": "2020-01-23T18:43:40Z", "author": {"login": "sberyozkin"}, "path": "extensions/tika/deployment/src/main/java/io/quarkus/tika/deployment/TikaProcessor.java", "diffHunk": "@@ -91,42 +79,48 @@ public void registerRuntimeInitializedClasses(BuildProducer<RuntimeInitializedCl\n     }\n \n     @BuildStep\n-    public void registerTikaCoreResources(BuildProducer<NativeImageResourceBuildItem> resource) throws Exception {\n+    public void registerTikaCoreResources(BuildProducer<NativeImageResourceBuildItem> resource) {\n         resource.produce(new NativeImageResourceBuildItem(\"org/apache/tika/mime/tika-mimetypes.xml\"));\n         resource.produce(new NativeImageResourceBuildItem(\"org/apache/tika/parser/external/tika-external-parsers.xml\"));\n     }\n \n     @BuildStep\n-    public void registerTikaParsersResources(BuildProducer<NativeImageResourceBuildItem> resource) throws Exception {\n+    public void registerTikaParsersResources(BuildProducer<NativeImageResourceBuildItem> resource) {\n         resource.produce(new NativeImageResourceBuildItem(\"org/apache/tika/parser/pdf/PDFParser.properties\"));\n     }\n \n     @BuildStep\n-    public void registerPdfBoxResources(BuildProducer<NativeImageResourceBuildItem> resource) throws Exception {\n+    public void registerPdfBoxResources(BuildProducer<NativeImageResourceBuildItem> resource) {\n         resource.produce(new NativeImageResourceBuildItem(\"org/apache/pdfbox/resources/glyphlist/additional.txt\"));\n         resource.produce(new NativeImageResourceBuildItem(\"org/apache/pdfbox/resources/glyphlist/glyphlist.txt\"));\n         resource.produce(new NativeImageResourceBuildItem(\"org/apache/pdfbox/resources/glyphlist/zapfdingbats.txt\"));\n     }\n \n     @BuildStep\n-    public void registerTikaProviders(BuildProducer<ServiceProviderBuildItem> serviceProvider,\n-            TikaParsersConfigBuildItem parserConfigItem) throws Exception {\n-        serviceProvider.produce(\n-                new ServiceProviderBuildItem(Parser.class.getName(),\n-                        new ArrayList<>(parserConfigItem.getConfiguration().keySet())));\n-        serviceProvider.produce(\n-                new ServiceProviderBuildItem(Detector.class.getName(), getProviderNames(Detector.class.getName())));\n-        serviceProvider.produce(\n-                new ServiceProviderBuildItem(EncodingDetector.class.getName(),\n-                        getProviderNames(EncodingDetector.class.getName())));\n-    }\n-\n-    static List<String> getProviderNames(String serviceProviderName) throws Exception {\n+    @Record(ExecutionTime.STATIC_INIT)\n+    void initializeTikaParser(BeanContainerBuildItem beanContainer, TikaRecorder recorder,\n+            BuildProducer<ServiceProviderBuildItem> serviceProvider, TikaConfiguration configuration)\n+            throws Exception {\n+        Map<String, List<TikaParserParameter>> parsers = getSupportedParserConfig(configuration.tikaConfigPath,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e0a21fa49852f1d76971c099437d1028faeced0"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MzMxNzk2", "url": "https://github.com/quarkusio/quarkus/pull/6752#pullrequestreview-349331796", "createdAt": "2020-01-28T12:20:52Z", "commit": {"oid": "8e0a21fa49852f1d76971c099437d1028faeced0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxNDM4MDA2", "url": "https://github.com/quarkusio/quarkus/pull/6752#pullrequestreview-351438006", "createdAt": "2020-01-31T11:12:23Z", "commit": {"oid": "8e0a21fa49852f1d76971c099437d1028faeced0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 133, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}