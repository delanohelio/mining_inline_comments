{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NTgzNTQ5", "number": 7254, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjoxODoyNFrODgrCKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzo0ODo1M1rODhE3cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NTg2MDkxOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/quartz.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjoxODoyNFrOFrANiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjoxODoyNFrOFrANiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzNjU1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      Arc.container().instance(TaskBean.class).get().perform(); <3>\n          \n          \n            \n                      Arc.container().instance(TaskBean.class).get(). performTask(); <3>", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r380636552", "createdAt": "2020-02-18T12:18:24Z", "author": {"login": "machi1990"}, "path": "docs/src/main/asciidoc/quartz.adoc", "diffHunk": "@@ -124,6 +124,58 @@ public class TaskBean {\n 3. Create a new `Task` with the current start time.\n 4. Persist the task in database using https://quarkus.io/guides/hibernate-orm-panache[Panache].\n \n+=== Scheduling Jobs Programatically\n+\n+It is also possible to leverage the Quartz API directly.\n+You can inject the underlying `org.quartz.Scheduler` in any bean:\n+\n+[source,java]\n+----\n+package org.acme.quartz;\n+\n+@ApplicationScoped\n+public class TaskBean {\n+\n+    @Inject\n+    org.quartz.Scheduler quartz; <1>\n+    \n+    void onStart(@Observes StartupEvent event) {\n+       JobDetail job = JobBuilder.newJob(MyJob.class)\n+                         .withIdentity(\"myJob\", \"myGroup\")\n+                         .build();\n+       Trigger trigger = TriggerBuilder.newTrigger()\n+                            .withIdentity(\"myTrigger\", \"myGroup\")\n+                            .startNow()\n+                            .withSchedule(\n+                               SimpleScheduleBuilder.simpleSchedule()\n+                                  .withIntervalInSeconds(10)\n+                                  .repeatForever())\n+                            .build();\n+       quartz.scheduleJob(job, trigger); <2>\n+    }\n+    \n+    @Transactional\n+    void performTask() {\n+        Task task = new Task();\n+        task.persist();\n+    }\n+    \n+    // A new instance of MyJob is created by Quartz for every job execution\n+    static class MyJob implements Job {\n+    \n+       public void execute(JobExecutionContext context) throws JobExecutionException {\n+          Arc.container().instance(TaskBean.class).get().perform(); <3>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NTg3NjMwOnYy", "diffSide": "RIGHT", "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzRuntimeConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjoyMzoyNFrOFrAWlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjo0OToyNVrOFrBFRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzODg3MA==", "bodyText": "defaultValue is not necessary. boolean config items defaults to false", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r380638870", "createdAt": "2020-02-18T12:23:24Z", "author": {"login": "machi1990"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzRuntimeConfig.java", "diffHunk": "@@ -19,4 +19,12 @@\n     @ConfigItem(defaultValue = \"5\")\n     public int threadPriority;\n \n+    /**\n+     * By default, the scheduler is not started unless a {@link io.quarkus.scheduler.Scheduled} business method is found.\n+     * If set to true the scheduler will be started even if no scheduled business methods are found. This is necessary for\n+     * \"pure\" programmatic scheduling.\n+     */\n+    @ConfigItem(defaultValue = \"false\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MDgyMA==", "bodyText": "I prefer explicit values so I'd like to keep it as it is.", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r380650820", "createdAt": "2020-02-18T12:49:25Z", "author": {"login": "mkouba"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzRuntimeConfig.java", "diffHunk": "@@ -19,4 +19,12 @@\n     @ConfigItem(defaultValue = \"5\")\n     public int threadPriority;\n \n+    /**\n+     * By default, the scheduler is not started unless a {@link io.quarkus.scheduler.Scheduled} business method is found.\n+     * If set to true the scheduler will be started even if no scheduled business methods are found. This is necessary for\n+     * \"pure\" programmatic scheduling.\n+     */\n+    @ConfigItem(defaultValue = \"false\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDYzODg3MA=="}, "originalCommit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NTg4OTg1OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/quartz.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjoyODowMVrOFrAeow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjo0ODo0OFrOFrBESQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0MDkzMQ==", "bodyText": "We should probably update Quartz QS  with this example", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r380640931", "createdAt": "2020-02-18T12:28:01Z", "author": {"login": "machi1990"}, "path": "docs/src/main/asciidoc/quartz.adoc", "diffHunk": "@@ -124,6 +124,58 @@ public class TaskBean {\n 3. Create a new `Task` with the current start time.\n 4. Persist the task in database using https://quarkus.io/guides/hibernate-orm-panache[Panache].\n \n+=== Scheduling Jobs Programatically\n+\n+It is also possible to leverage the Quartz API directly.\n+You can inject the underlying `org.quartz.Scheduler` in any bean:\n+\n+[source,java]\n+----\n+package org.acme.quartz;\n+\n+@ApplicationScoped\n+public class TaskBean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MDU2OQ==", "bodyText": "I don't think so. This is more like a corner case, ie. something we don't want to push...", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r380650569", "createdAt": "2020-02-18T12:48:48Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/quartz.adoc", "diffHunk": "@@ -124,6 +124,58 @@ public class TaskBean {\n 3. Create a new `Task` with the current start time.\n 4. Persist the task in database using https://quarkus.io/guides/hibernate-orm-panache[Panache].\n \n+=== Scheduling Jobs Programatically\n+\n+It is also possible to leverage the Quartz API directly.\n+You can inject the underlying `org.quartz.Scheduler` in any bean:\n+\n+[source,java]\n+----\n+package org.acme.quartz;\n+\n+@ApplicationScoped\n+public class TaskBean {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0MDkzMQ=="}, "originalCommit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NTg5MzY0OnYy", "diffSide": "RIGHT", "path": "extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/InjectQuartzSchedulerTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMjoyOTowOVrOFrAgyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxODoyNjozN1rOFrNfSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0MTQ4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                .addAsResource(new StringAsset(\"quarkus.quartz-runtime.force-start=true\"),\n          \n          \n            \n                                .addAsResource(new StringAsset(\"quarkus.quartz.force-start=true\"),", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r380641480", "createdAt": "2020-02-18T12:29:09Z", "author": {"login": "machi1990"}, "path": "extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/InjectQuartzSchedulerTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package io.quarkus.quartz.test;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.enterprise.event.Observes;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+import org.quartz.Job;\n+import org.quartz.JobBuilder;\n+import org.quartz.JobDetail;\n+import org.quartz.JobExecutionContext;\n+import org.quartz.JobExecutionException;\n+import org.quartz.Scheduler;\n+import org.quartz.SchedulerException;\n+import org.quartz.SimpleScheduleBuilder;\n+import org.quartz.Trigger;\n+import org.quartz.TriggerBuilder;\n+\n+import io.quarkus.runtime.StartupEvent;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class InjectQuartzSchedulerTest {\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest test = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(Starter.class)\n+                    .addAsResource(new StringAsset(\"quarkus.quartz-runtime.force-start=true\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY1MTI2NQ==", "bodyText": "Unfortunately, quarkus.quartz.force-start=true would not work. See https://quarkusio.zulipchat.com/#narrow/stream/187038-dev/topic/.60RuntimeConfig.60.20vs.20.60RunTimeConfig.60", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r380651265", "createdAt": "2020-02-18T12:50:26Z", "author": {"login": "mkouba"}, "path": "extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/InjectQuartzSchedulerTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package io.quarkus.quartz.test;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.enterprise.event.Observes;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+import org.quartz.Job;\n+import org.quartz.JobBuilder;\n+import org.quartz.JobDetail;\n+import org.quartz.JobExecutionContext;\n+import org.quartz.JobExecutionException;\n+import org.quartz.Scheduler;\n+import org.quartz.SchedulerException;\n+import org.quartz.SimpleScheduleBuilder;\n+import org.quartz.Trigger;\n+import org.quartz.TriggerBuilder;\n+\n+import io.quarkus.runtime.StartupEvent;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class InjectQuartzSchedulerTest {\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest test = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(Starter.class)\n+                    .addAsResource(new StringAsset(\"quarkus.quartz-runtime.force-start=true\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0MTQ4MA=="}, "originalCommit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDcwNzA2Nw==", "bodyText": "I'm going to send a PR to fix #7257 - afterwards, it should be possible to switch to quarkus.quartz.force-start=true.", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r380707067", "createdAt": "2020-02-18T14:31:11Z", "author": {"login": "mkouba"}, "path": "extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/InjectQuartzSchedulerTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package io.quarkus.quartz.test;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.enterprise.event.Observes;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+import org.quartz.Job;\n+import org.quartz.JobBuilder;\n+import org.quartz.JobDetail;\n+import org.quartz.JobExecutionContext;\n+import org.quartz.JobExecutionException;\n+import org.quartz.Scheduler;\n+import org.quartz.SchedulerException;\n+import org.quartz.SimpleScheduleBuilder;\n+import org.quartz.Trigger;\n+import org.quartz.TriggerBuilder;\n+\n+import io.quarkus.runtime.StartupEvent;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class InjectQuartzSchedulerTest {\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest test = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(Starter.class)\n+                    .addAsResource(new StringAsset(\"quarkus.quartz-runtime.force-start=true\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0MTQ4MA=="}, "originalCommit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg1NDA4OQ==", "bodyText": "Thanks @mkouba", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r380854089", "createdAt": "2020-02-18T18:26:37Z", "author": {"login": "machi1990"}, "path": "extensions/quartz/deployment/src/test/java/io/quarkus/quartz/test/InjectQuartzSchedulerTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package io.quarkus.quartz.test;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.enterprise.event.Observes;\n+\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.asset.StringAsset;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+import org.quartz.Job;\n+import org.quartz.JobBuilder;\n+import org.quartz.JobDetail;\n+import org.quartz.JobExecutionContext;\n+import org.quartz.JobExecutionException;\n+import org.quartz.Scheduler;\n+import org.quartz.SchedulerException;\n+import org.quartz.SimpleScheduleBuilder;\n+import org.quartz.Trigger;\n+import org.quartz.TriggerBuilder;\n+\n+import io.quarkus.runtime.StartupEvent;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class InjectQuartzSchedulerTest {\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest test = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(Starter.class)\n+                    .addAsResource(new StringAsset(\"quarkus.quartz-runtime.force-start=true\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY0MTQ4MA=="}, "originalCommit": {"oid": "0fed604c4f694d373c287c636f4d2c26c9b4a3f8"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDA5MzI5OnYy", "diffSide": "RIGHT", "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzo0ODo1M1rOFrot0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzo1OTo1OFrOFrpH7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMDE3Ng==", "bodyText": "Should we use @DefaultBean here?", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r381300176", "createdAt": "2020-02-19T13:48:53Z", "author": {"login": "gastaldi"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "diffHunk": "@@ -56,8 +59,15 @@\n     private final AtomicInteger triggerNameSequence;\n     private final Map<String, ScheduledInvoker> invokers;\n \n+    @Produces\n+    @Singleton", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e88272e3b71ed4925446245d26319651920a8769"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMjI0OQ==", "bodyText": "I don't think so. Why?", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r381302249", "createdAt": "2020-02-19T13:52:35Z", "author": {"login": "mkouba"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "diffHunk": "@@ -56,8 +59,15 @@\n     private final AtomicInteger triggerNameSequence;\n     private final Map<String, ScheduledInvoker> invokers;\n \n+    @Produces\n+    @Singleton", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMDE3Ng=="}, "originalCommit": {"oid": "e88272e3b71ed4925446245d26319651920a8769"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMjg3Mw==", "bodyText": "When the user code @Produces their own org.quartz.Scheduler?", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r381302873", "createdAt": "2020-02-19T13:53:38Z", "author": {"login": "gastaldi"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "diffHunk": "@@ -56,8 +59,15 @@\n     private final AtomicInteger triggerNameSequence;\n     private final Map<String, ScheduledInvoker> invokers;\n \n+    @Produces\n+    @Singleton", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMDE3Ng=="}, "originalCommit": {"oid": "e88272e3b71ed4925446245d26319651920a8769"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwNjg2Mw==", "bodyText": "But maybe we shouldn't allow that anyway :)", "url": "https://github.com/quarkusio/quarkus/pull/7254#discussion_r381306863", "createdAt": "2020-02-19T13:59:58Z", "author": {"login": "gastaldi"}, "path": "extensions/quartz/runtime/src/main/java/io/quarkus/quartz/runtime/QuartzScheduler.java", "diffHunk": "@@ -56,8 +59,15 @@\n     private final AtomicInteger triggerNameSequence;\n     private final Map<String, ScheduledInvoker> invokers;\n \n+    @Produces\n+    @Singleton", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMwMDE3Ng=="}, "originalCommit": {"oid": "e88272e3b71ed4925446245d26319651920a8769"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 79, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}