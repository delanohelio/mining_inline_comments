{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODEyNDQy", "number": 7714, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTozNTo0MlrODmeJ5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTozNTo0MlrODmeJ5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjY2NTMzOnYy", "diffSide": "RIGHT", "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTozNTo0MlrOFz6MtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTozODoyMlrOFz6RTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk3NTIyMA==", "bodyText": "I would wrap the exception with this, not log it, so it shows up in the test failures.", "url": "https://github.com/quarkusio/quarkus/pull/7714#discussion_r389975220", "createdAt": "2020-03-09T21:35:42Z", "author": {"login": "stuartwdouglas"}, "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java", "diffHunk": "@@ -231,9 +235,15 @@ public void interceptBeforeAllMethod(Invocation<Void> invocation, ReflectiveInvo\n         }\n         T result;\n         ClassLoader old = Thread.currentThread().getContextClassLoader();\n+        Class<?> requiredTestClass = extensionContext.getRequiredTestClass();\n         try {\n-            Thread.currentThread().setContextClassLoader(extensionContext.getRequiredTestClass().getClassLoader());\n+            Thread.currentThread().setContextClassLoader(requiredTestClass.getClassLoader());\n             result = invocation.proceed();\n+        } catch (NullPointerException e) {\n+            System.err.println(\n+                    \"When using constructor injection in a test, the only legal operation is to assign the constructor values to fields. Offending class is \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6d66f773aeb5a010048216068ca1afea79620bc"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk3NjM5Nw==", "bodyText": "Fixed. Thanks for the suggestion, it looks much much better in the logs!", "url": "https://github.com/quarkusio/quarkus/pull/7714#discussion_r389976397", "createdAt": "2020-03-09T21:38:22Z", "author": {"login": "geoand"}, "path": "test-framework/junit5/src/main/java/io/quarkus/test/junit/QuarkusTestExtension.java", "diffHunk": "@@ -231,9 +235,15 @@ public void interceptBeforeAllMethod(Invocation<Void> invocation, ReflectiveInvo\n         }\n         T result;\n         ClassLoader old = Thread.currentThread().getContextClassLoader();\n+        Class<?> requiredTestClass = extensionContext.getRequiredTestClass();\n         try {\n-            Thread.currentThread().setContextClassLoader(extensionContext.getRequiredTestClass().getClassLoader());\n+            Thread.currentThread().setContextClassLoader(requiredTestClass.getClassLoader());\n             result = invocation.proceed();\n+        } catch (NullPointerException e) {\n+            System.err.println(\n+                    \"When using constructor injection in a test, the only legal operation is to assign the constructor values to fields. Offending class is \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk3NTIyMA=="}, "originalCommit": {"oid": "e6d66f773aeb5a010048216068ca1afea79620bc"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4780, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}