{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1OTMyNzE4", "number": 6727, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjowMTo1MlrODZ4rLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjowMTo1MlrODZ4rLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NDY5NTUwOnYy", "diffSide": "RIGHT", "path": "extensions/elytron-security-oauth2/runtime/src/main/java/io/quarkus/elytron/security/oauth2/runtime/OAuth2Recorder.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjowMTo1MlrOFghm2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxNjoyNzo0N1rOFgij3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTM2OA==", "bodyText": "should it be a ConfigurationException instead?", "url": "https://github.com/quarkusio/quarkus/pull/6727#discussion_r369649368", "createdAt": "2020-01-22T16:01:52Z", "author": {"login": "machi1990"}, "path": "extensions/elytron-security-oauth2/runtime/src/main/java/io/quarkus/elytron/security/oauth2/runtime/OAuth2Recorder.java", "diffHunk": "@@ -29,13 +30,17 @@\n \n @Recorder\n public class OAuth2Recorder {\n+    private static final Logger LOG = Logger.getLogger(OAuth2Recorder.class);\n \n     public RuntimeValue<SecurityRealm> createRealm(OAuth2Config config)\n             throws IOException, NoSuchAlgorithmException, CertificateException, KeyStoreException, KeyManagementException {\n+        if (!config.clientId.isPresent() || !config.clientSecret.isPresent() || !config.introspectionUrl.isPresent()) {\n+            LOG.error(\"client-id, client-secret and introspection-url must be configured when the oauth2 extension is enabled\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8bd88290f0c57448bc5f9befb819dfb3d693cf7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1MDI4Mw==", "bodyText": "It will be a NoSuchElementException with the current impl.\nMaybe a ConfigurationException is better yes :)", "url": "https://github.com/quarkusio/quarkus/pull/6727#discussion_r369650283", "createdAt": "2020-01-22T16:03:23Z", "author": {"login": "loicmathieu"}, "path": "extensions/elytron-security-oauth2/runtime/src/main/java/io/quarkus/elytron/security/oauth2/runtime/OAuth2Recorder.java", "diffHunk": "@@ -29,13 +30,17 @@\n \n @Recorder\n public class OAuth2Recorder {\n+    private static final Logger LOG = Logger.getLogger(OAuth2Recorder.class);\n \n     public RuntimeValue<SecurityRealm> createRealm(OAuth2Config config)\n             throws IOException, NoSuchAlgorithmException, CertificateException, KeyStoreException, KeyManagementException {\n+        if (!config.clientId.isPresent() || !config.clientSecret.isPresent() || !config.introspectionUrl.isPresent()) {\n+            LOG.error(\"client-id, client-secret and introspection-url must be configured when the oauth2 extension is enabled\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTM2OA=="}, "originalCommit": {"oid": "e8bd88290f0c57448bc5f9befb819dfb3d693cf7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY1NTg3MQ==", "bodyText": "Yes we need it to be an exception. +1 for ConfigurationException.", "url": "https://github.com/quarkusio/quarkus/pull/6727#discussion_r369655871", "createdAt": "2020-01-22T16:12:43Z", "author": {"login": "gsmet"}, "path": "extensions/elytron-security-oauth2/runtime/src/main/java/io/quarkus/elytron/security/oauth2/runtime/OAuth2Recorder.java", "diffHunk": "@@ -29,13 +30,17 @@\n \n @Recorder\n public class OAuth2Recorder {\n+    private static final Logger LOG = Logger.getLogger(OAuth2Recorder.class);\n \n     public RuntimeValue<SecurityRealm> createRealm(OAuth2Config config)\n             throws IOException, NoSuchAlgorithmException, CertificateException, KeyStoreException, KeyManagementException {\n+        if (!config.clientId.isPresent() || !config.clientSecret.isPresent() || !config.introspectionUrl.isPresent()) {\n+            LOG.error(\"client-id, client-secret and introspection-url must be configured when the oauth2 extension is enabled\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTM2OA=="}, "originalCommit": {"oid": "e8bd88290f0c57448bc5f9befb819dfb3d693cf7"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY2NDk5MA==", "bodyText": "done", "url": "https://github.com/quarkusio/quarkus/pull/6727#discussion_r369664990", "createdAt": "2020-01-22T16:27:47Z", "author": {"login": "loicmathieu"}, "path": "extensions/elytron-security-oauth2/runtime/src/main/java/io/quarkus/elytron/security/oauth2/runtime/OAuth2Recorder.java", "diffHunk": "@@ -29,13 +30,17 @@\n \n @Recorder\n public class OAuth2Recorder {\n+    private static final Logger LOG = Logger.getLogger(OAuth2Recorder.class);\n \n     public RuntimeValue<SecurityRealm> createRealm(OAuth2Config config)\n             throws IOException, NoSuchAlgorithmException, CertificateException, KeyStoreException, KeyManagementException {\n+        if (!config.clientId.isPresent() || !config.clientSecret.isPresent() || !config.introspectionUrl.isPresent()) {\n+            LOG.error(\"client-id, client-secret and introspection-url must be configured when the oauth2 extension is enabled\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTY0OTM2OA=="}, "originalCommit": {"oid": "e8bd88290f0c57448bc5f9befb819dfb3d693cf7"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1131, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}