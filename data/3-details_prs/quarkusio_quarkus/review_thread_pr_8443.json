{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMTc2NzEz", "number": 8443, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDoyNDowOVrODvfyPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToxNzo1OVrODvg6ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTMwNDI4OnYy", "diffSide": "RIGHT", "path": "extensions/smallrye-fault-tolerance/deployment/src/main/java/io/quarkus/smallrye/faulttolerance/deployment/SmallRyeFaultToleranceProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDoyNDowOVrOGB9Bdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDo0MTowOVrOGB9l3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwMTU1OA==", "bodyText": "I think you should still test for a null return value here.", "url": "https://github.com/quarkusio/quarkus/pull/8443#discussion_r404701558", "createdAt": "2020-04-07T10:24:09Z", "author": {"login": "gsmet"}, "path": "extensions/smallrye-fault-tolerance/deployment/src/main/java/io/quarkus/smallrye/faulttolerance/deployment/SmallRyeFaultToleranceProcessor.java", "diffHunk": "@@ -225,11 +225,11 @@ private boolean hasFTAnnotations(IndexView index, AnnotationStore annotationStor\n \n         // then check on the parent\n         DotName parentClassName = info.superName();\n-        ClassInfo parentClassInfo = index.getClassByName(parentClassName);\n-        if (parentClassName.equals(DotNames.OBJECT) || parentClassInfo == null) {\n-            return false; //no more parents\n+        if (parentClassName == null || parentClassName.equals(DotNames.OBJECT)) {\n+            return false;\n         }\n \n+        ClassInfo parentClassInfo = index.getClassByName(parentClassName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c1d7eaf942af90b4d6e1eb59dbc1a1bd0c8a54b"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcxMDg3Ng==", "bodyText": "Ok, we're never safe enough", "url": "https://github.com/quarkusio/quarkus/pull/8443#discussion_r404710876", "createdAt": "2020-04-07T10:41:09Z", "author": {"login": "jmartisk"}, "path": "extensions/smallrye-fault-tolerance/deployment/src/main/java/io/quarkus/smallrye/faulttolerance/deployment/SmallRyeFaultToleranceProcessor.java", "diffHunk": "@@ -225,11 +225,11 @@ private boolean hasFTAnnotations(IndexView index, AnnotationStore annotationStor\n \n         // then check on the parent\n         DotName parentClassName = info.superName();\n-        ClassInfo parentClassInfo = index.getClassByName(parentClassName);\n-        if (parentClassName.equals(DotNames.OBJECT) || parentClassInfo == null) {\n-            return false; //no more parents\n+        if (parentClassName == null || parentClassName.equals(DotNames.OBJECT)) {\n+            return false;\n         }\n \n+        ClassInfo parentClassInfo = index.getClassByName(parentClassName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwMTU1OA=="}, "originalCommit": {"oid": "0c1d7eaf942af90b4d6e1eb59dbc1a1bd0c8a54b"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTQ4OTYzOnYy", "diffSide": "RIGHT", "path": "extensions/smallrye-fault-tolerance/deployment/src/test/java/io/quarkus/smallrye/faulttolerance/test/ObjectBeanTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMToxNzo1OVrOGB-zkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMjo1NDowNlrOGCCGSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMDc2OA==", "bodyText": "There's no FT in the test at all?", "url": "https://github.com/quarkusio/quarkus/pull/8443#discussion_r404730768", "createdAt": "2020-04-07T11:17:59Z", "author": {"login": "Ladicek"}, "path": "extensions/smallrye-fault-tolerance/deployment/src/test/java/io/quarkus/smallrye/faulttolerance/test/ObjectBeanTest.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.smallrye.faulttolerance.test;\n+\n+import javax.enterprise.inject.Produces;\n+import javax.inject.Named;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+/**\n+ * Verify that Fault Tolerance does not break if there is a CDI bean without a superclass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd4b0b302bca07efee2ade5957f916df2eaf8faf"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMTQ3NQ==", "bodyText": "I guess it's about the object being processed by the FTProcessor, right? Gotcha. It looks weird, but it's probably enough.", "url": "https://github.com/quarkusio/quarkus/pull/8443#discussion_r404731475", "createdAt": "2020-04-07T11:19:23Z", "author": {"login": "Ladicek"}, "path": "extensions/smallrye-fault-tolerance/deployment/src/test/java/io/quarkus/smallrye/faulttolerance/test/ObjectBeanTest.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.smallrye.faulttolerance.test;\n+\n+import javax.enterprise.inject.Produces;\n+import javax.inject.Named;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+/**\n+ * Verify that Fault Tolerance does not break if there is a CDI bean without a superclass", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMDc2OA=="}, "originalCommit": {"oid": "bd4b0b302bca07efee2ade5957f916df2eaf8faf"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc0MzM0MA==", "bodyText": "Yep, this is enough to reproduce the original issue if I deliberately remove the fix", "url": "https://github.com/quarkusio/quarkus/pull/8443#discussion_r404743340", "createdAt": "2020-04-07T11:41:41Z", "author": {"login": "jmartisk"}, "path": "extensions/smallrye-fault-tolerance/deployment/src/test/java/io/quarkus/smallrye/faulttolerance/test/ObjectBeanTest.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.smallrye.faulttolerance.test;\n+\n+import javax.enterprise.inject.Produces;\n+import javax.inject.Named;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+/**\n+ * Verify that Fault Tolerance does not break if there is a CDI bean without a superclass", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMDc2OA=="}, "originalCommit": {"oid": "bd4b0b302bca07efee2ade5957f916df2eaf8faf"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc4NDcxMg==", "bodyText": "Nice, thanks!", "url": "https://github.com/quarkusio/quarkus/pull/8443#discussion_r404784712", "createdAt": "2020-04-07T12:54:06Z", "author": {"login": "Ladicek"}, "path": "extensions/smallrye-fault-tolerance/deployment/src/test/java/io/quarkus/smallrye/faulttolerance/test/ObjectBeanTest.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.smallrye.faulttolerance.test;\n+\n+import javax.enterprise.inject.Produces;\n+import javax.inject.Named;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+/**\n+ * Verify that Fault Tolerance does not break if there is a CDI bean without a superclass", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDczMDc2OA=="}, "originalCommit": {"oid": "bd4b0b302bca07efee2ade5957f916df2eaf8faf"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3666, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}