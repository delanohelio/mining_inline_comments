{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NDI2NDgy", "number": 11716, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDozMDo0NFrOEdxfqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDozMDo0NFrOEdxfqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NjU1MDgxOnYy", "diffSide": "RIGHT", "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxNDozMDo0NFrOHJI0PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwMTo1MDo0OFrOHLO-Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MzY3Nw==", "bodyText": "Do we need to close the stream as well?", "url": "https://github.com/quarkusio/quarkus/pull/11716#discussion_r479343677", "createdAt": "2020-08-28T14:30:44Z", "author": {"login": "geoand"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -323,6 +323,17 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n             for (ClassPathElement i : elements) {\n                 ClassPathResource res = i.getResource(name);\n                 if (res != null) {\n+                    if (res.isDirectory()) {\n+                        try {\n+                            return res.getUrl().openStream();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d13527168764f661c69fe7e793979b3384f4e97e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0NDcwMw==", "bodyText": "No, given that this getResourceAsStream is meant to return a \"live\" stream, we return it live and expect the user/caller to close it whenever they are done using it (just like they would with regular non-directory based streams).", "url": "https://github.com/quarkusio/quarkus/pull/11716#discussion_r479344703", "createdAt": "2020-08-28T14:32:28Z", "author": {"login": "jaikiran"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -323,6 +323,17 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n             for (ClassPathElement i : elements) {\n                 ClassPathResource res = i.getResource(name);\n                 if (res != null) {\n+                    if (res.isDirectory()) {\n+                        try {\n+                            return res.getUrl().openStream();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MzY3Nw=="}, "originalCommit": {"oid": "d13527168764f661c69fe7e793979b3384f4e97e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0NTYwOA==", "bodyText": "Ah right... I didn't see which method this belonged to.", "url": "https://github.com/quarkusio/quarkus/pull/11716#discussion_r479345608", "createdAt": "2020-08-28T14:33:47Z", "author": {"login": "geoand"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -323,6 +323,17 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n             for (ClassPathElement i : elements) {\n                 ClassPathResource res = i.getResource(name);\n                 if (res != null) {\n+                    if (res.isDirectory()) {\n+                        try {\n+                            return res.getUrl().openStream();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MzY3Nw=="}, "originalCommit": {"oid": "d13527168764f661c69fe7e793979b3384f4e97e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM1Nzk2MQ==", "bodyText": "Maybe related, but it just occurred to me that this method below may be broken?\n\n  \n    \n      quarkus/independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/DirectoryClassPathElement.java\n    \n    \n        Lines 97 to 110\n      in\n      8b9c788\n    \n    \n    \n    \n\n        \n          \n           public byte[] getData() { \n        \n\n        \n          \n               try { \n        \n\n        \n          \n                   try { \n        \n\n        \n          \n                       return Files.readAllBytes(file); \n        \n\n        \n          \n                   } catch (InterruptedIOException e) { \n        \n\n        \n          \n                       //if we are interrupted reading data we finish the op, then just re-interrupt the thread state \n        \n\n        \n          \n                       byte[] bytes = Files.readAllBytes(file); \n        \n\n        \n          \n                       Thread.currentThread().interrupt(); \n        \n\n        \n          \n                       return bytes; \n        \n\n        \n          \n                   } \n        \n\n        \n          \n               } catch (IOException e) { \n        \n\n        \n          \n                   throw new RuntimeException(\"Unable to read \" + file, e); \n        \n\n        \n          \n               } \n        \n\n        \n          \n           }", "url": "https://github.com/quarkusio/quarkus/pull/11716#discussion_r479357961", "createdAt": "2020-08-28T14:53:52Z", "author": {"login": "gastaldi"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -323,6 +323,17 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n             for (ClassPathElement i : elements) {\n                 ClassPathResource res = i.getResource(name);\n                 if (res != null) {\n+                    if (res.isDirectory()) {\n+                        try {\n+                            return res.getUrl().openStream();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MzY3Nw=="}, "originalCommit": {"oid": "d13527168764f661c69fe7e793979b3384f4e97e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwNTkwMA==", "bodyText": "Hello @gastaldi, do you mean it's broken because it isn't doing a check to see if the file is a directory, or something else?", "url": "https://github.com/quarkusio/quarkus/pull/11716#discussion_r479605900", "createdAt": "2020-08-29T04:26:58Z", "author": {"login": "jaikiran"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -323,6 +323,17 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n             for (ClassPathElement i : elements) {\n                 ClassPathResource res = i.getResource(name);\n                 if (res != null) {\n+                    if (res.isDirectory()) {\n+                        try {\n+                            return res.getUrl().openStream();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MzY3Nw=="}, "originalCommit": {"oid": "d13527168764f661c69fe7e793979b3384f4e97e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwNjY3OA==", "bodyText": "@jaikiran exactly", "url": "https://github.com/quarkusio/quarkus/pull/11716#discussion_r479606678", "createdAt": "2020-08-29T04:38:20Z", "author": {"login": "gastaldi"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -323,6 +323,17 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n             for (ClassPathElement i : elements) {\n                 ClassPathResource res = i.getResource(name);\n                 if (res != null) {\n+                    if (res.isDirectory()) {\n+                        try {\n+                            return res.getUrl().openStream();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MzY3Nw=="}, "originalCommit": {"oid": "d13527168764f661c69fe7e793979b3384f4e97e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwNjg1OQ==", "bodyText": "The class name is misleading if it handles files too IMHO", "url": "https://github.com/quarkusio/quarkus/pull/11716#discussion_r479606859", "createdAt": "2020-08-29T04:40:19Z", "author": {"login": "gastaldi"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -323,6 +323,17 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n             for (ClassPathElement i : elements) {\n                 ClassPathResource res = i.getResource(name);\n                 if (res != null) {\n+                    if (res.isDirectory()) {\n+                        try {\n+                            return res.getUrl().openStream();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MzY3Nw=="}, "originalCommit": {"oid": "d13527168764f661c69fe7e793979b3384f4e97e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYwNzA0Mw==", "bodyText": "I think given that there's already an isDirectory() API on ClassPathResource, I think, it's the caller's responsibility to do that check before calling getData().\nThis getData() could of course do checks for isDirectory but if it does find that it's an directory, then it either has to error out or open a stream on the URL represented by the file and then read from that. All doable, but I don't have the complete background around these classes, so I'm not sure if it should be done here in this method. @stuartwdouglas what are you thoughts?", "url": "https://github.com/quarkusio/quarkus/pull/11716#discussion_r479607043", "createdAt": "2020-08-29T04:43:24Z", "author": {"login": "jaikiran"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -323,6 +323,17 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n             for (ClassPathElement i : elements) {\n                 ClassPathResource res = i.getResource(name);\n                 if (res != null) {\n+                    if (res.isDirectory()) {\n+                        try {\n+                            return res.getUrl().openStream();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MzY3Nw=="}, "originalCommit": {"oid": "d13527168764f661c69fe7e793979b3384f4e97e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTU0MTczNA==", "bodyText": "I think this is fine.", "url": "https://github.com/quarkusio/quarkus/pull/11716#discussion_r481541734", "createdAt": "2020-09-02T01:50:48Z", "author": {"login": "stuartwdouglas"}, "path": "independent-projects/bootstrap/core/src/main/java/io/quarkus/bootstrap/classloading/QuarkusClassLoader.java", "diffHunk": "@@ -323,6 +323,17 @@ public InputStream getResourceAsStream(String unsanitisedName) {\n             for (ClassPathElement i : elements) {\n                 ClassPathResource res = i.getResource(name);\n                 if (res != null) {\n+                    if (res.isDirectory()) {\n+                        try {\n+                            return res.getUrl().openStream();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTM0MzY3Nw=="}, "originalCommit": {"oid": "d13527168764f661c69fe7e793979b3384f4e97e"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 423, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}