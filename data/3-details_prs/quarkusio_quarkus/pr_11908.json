{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwMDk1Mzky", "number": 11908, "title": "Support multiple Redis clients", "bodyText": "This is into two separate commits as the first one only add some additional configuration options.\nThe second commit is the \"real\" subject of this PR.\nFixes #11558", "createdAt": "2020-09-04T20:57:36Z", "url": "https://github.com/quarkusio/quarkus/pull/11908", "merged": true, "mergeCommit": {"oid": "9e3b895823c557baf1208a68ede6f5704a52b88d"}, "closed": true, "closedAt": "2020-09-17T18:01:18Z", "author": {"login": "machi1990"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFrxBPgBqjM3MzE2MDM2MTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJv_5WgFqTQ5MDUzMTY1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bfa91ed773a3598198423a94a31d96860223614d", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/bfa91ed773a3598198423a94a31d96860223614d", "committedDate": "2020-09-04T20:54:05Z", "message": "feat(redis): support for multiple redis clients\n\nFixes https://github.com/quarkusio/quarkus/issues/11558"}, "afterCommit": {"oid": "6851f756c4e11866dd66220ebcc90ab46da78bb3", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/6851f756c4e11866dd66220ebcc90ab46da78bb3", "committedDate": "2020-09-04T21:06:10Z", "message": "feat(redis): support for multiple redis clients\n\nFixes https://github.com/quarkusio/quarkus/issues/11558"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgyOTg5MTMx", "url": "https://github.com/quarkusio/quarkus/pull/11908#pullrequestreview-482989131", "createdAt": "2020-09-04T22:07:48Z", "commit": {"oid": "6851f756c4e11866dd66220ebcc90ab46da78bb3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQyMjowNzo0OFrOHNcrDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQyMjowNzo0OFrOHNcrDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mzg2MzMwOA==", "bodyText": "The one two lines above is called Api not API. Could we be consistent?", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r483863308", "createdAt": "2020-09-04T22:07:48Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/deployment/src/main/java/io/quarkus/redis/client/deployment/RedisClientProcessor.java", "diffHunk": "@@ -39,4 +72,101 @@ HealthBuildItem addHealthCheck(RedisBuildTimeConfig buildTimeConfig) {\n     RuntimeInitializedClassBuildItem initializeBulkTypeDuringRuntime() {\n         return new RuntimeInitializedClassBuildItem(BulkType.class.getName());\n     }\n+\n+    @BuildStep\n+    @Record(ExecutionTime.RUNTIME_INIT)\n+    public void produceRedisClient(RedisClientRecorder recorder, ApplicationArchivesBuildItem applicationArchives,\n+            BuildProducer<SyntheticBeanBuildItem> syntheticBeans,\n+            VertxBuildItem vertxBuildItem) {\n+        Set<String> clientNames = new HashSet<>();\n+        clientNames.add(RedisClientUtil.DEFAULT_CLIENT);\n+\n+        IndexView indexView = applicationArchives.getRootArchive().getIndex();\n+        Collection<AnnotationInstance> clientAnnotations = indexView.getAnnotations(REDIS_CLIENT_ANNOTATION);\n+        for (AnnotationInstance annotation : clientAnnotations) {\n+            clientNames.add(annotation.value().asString());\n+        }\n+\n+        for (String clientName : clientNames) {\n+            syntheticBeans.produce(createBlockingSyntheticBean(recorder, clientName));\n+            syntheticBeans.produce(createReactiveSyntheticBean(recorder, clientName));\n+            syntheticBeans.produce(createMutinyRedisApiSyntheticBean(recorder, clientName));\n+            syntheticBeans.produce(createMutinyRedisClientSyntheticBean(recorder, clientName));\n+            syntheticBeans.produce(createVertxRedisAPISyntheticBean(recorder, clientName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6851f756c4e11866dd66220ebcc90ab46da78bb3"}, "originalPosition": 92}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6851f756c4e11866dd66220ebcc90ab46da78bb3", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/6851f756c4e11866dd66220ebcc90ab46da78bb3", "committedDate": "2020-09-04T21:06:10Z", "message": "feat(redis): support for multiple redis clients\n\nFixes https://github.com/quarkusio/quarkus/issues/11558"}, "afterCommit": {"oid": "12653ca4550a8bdb7051746eeeba333fb646ea0d", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/12653ca4550a8bdb7051746eeeba333fb646ea0d", "committedDate": "2020-09-04T23:23:20Z", "message": "feat(redis): support for multiple redis clients\n\nFixes https://github.com/quarkusio/quarkus/issues/11558"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "12653ca4550a8bdb7051746eeeba333fb646ea0d", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/12653ca4550a8bdb7051746eeeba333fb646ea0d", "committedDate": "2020-09-04T23:23:20Z", "message": "feat(redis): support for multiple redis clients\n\nFixes https://github.com/quarkusio/quarkus/issues/11558"}, "afterCommit": {"oid": "058c4f84ba9ae714aa85e44cbcb95db5ab2a98b8", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/058c4f84ba9ae714aa85e44cbcb95db5ab2a98b8", "committedDate": "2020-09-04T23:37:47Z", "message": "feat(redis): support for multiple redis clients\n\nFixes https://github.com/quarkusio/quarkus/issues/11558"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "058c4f84ba9ae714aa85e44cbcb95db5ab2a98b8", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/058c4f84ba9ae714aa85e44cbcb95db5ab2a98b8", "committedDate": "2020-09-04T23:37:47Z", "message": "feat(redis): support for multiple redis clients\n\nFixes https://github.com/quarkusio/quarkus/issues/11558"}, "afterCommit": {"oid": "4df8baca38c5875e30f65a738c7c3a8b77a6ef3b", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/4df8baca38c5875e30f65a738c7c3a8b77a6ef3b", "committedDate": "2020-09-08T07:00:10Z", "message": "feat(redis): support for multiple redis clients\n\nFixes https://github.com/quarkusio/quarkus/issues/11558"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4df8baca38c5875e30f65a738c7c3a8b77a6ef3b", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/4df8baca38c5875e30f65a738c7c3a8b77a6ef3b", "committedDate": "2020-09-08T07:00:10Z", "message": "feat(redis): support for multiple redis clients\n\nFixes https://github.com/quarkusio/quarkus/issues/11558"}, "afterCommit": {"oid": "0cc495f12e51722fd32b6cc3455460a1a56b247e", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/0cc495f12e51722fd32b6cc3455460a1a56b247e", "committedDate": "2020-09-08T19:16:13Z", "message": "feat(redis): make the RedisConfiguration matches the upstream `RedisOptions`\n\nThis will make it easier to tweak things like redis connection hosts to match the expected endpoint\nby the upstream library thus avoid manually reconstructing the connection string. See\nhttps://github.com/vert-x3/vertx-redis-client/blob/e9e3c0db349d662e676c04235841c68488d6f6d2/src/main/java/io/vertx/redis/client/RedisOptions.java\nfor more details about the available options. The global default password for cluster and sentinel\nmode will be added once we have the next release of vertx-redis. `NetClientOptions` can be added now\nbut I considered it to be of less importance and we can have separate PR to configure it once users\nasks for it.\n\nFixes https://github.com/quarkusio/quarkus/issues/11986"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0cc495f12e51722fd32b6cc3455460a1a56b247e", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/0cc495f12e51722fd32b6cc3455460a1a56b247e", "committedDate": "2020-09-08T19:16:13Z", "message": "feat(redis): make the RedisConfiguration matches the upstream `RedisOptions`\n\nThis will make it easier to tweak things like redis connection hosts to match the expected endpoint\nby the upstream library thus avoid manually reconstructing the connection string. See\nhttps://github.com/vert-x3/vertx-redis-client/blob/e9e3c0db349d662e676c04235841c68488d6f6d2/src/main/java/io/vertx/redis/client/RedisOptions.java\nfor more details about the available options. The global default password for cluster and sentinel\nmode will be added once we have the next release of vertx-redis. `NetClientOptions` can be added now\nbut I considered it to be of less importance and we can have separate PR to configure it once users\nasks for it.\n\nFixes https://github.com/quarkusio/quarkus/issues/11986"}, "afterCommit": {"oid": "f8796d055a6ee3dad1d12f06ad3213df4814b32e", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/f8796d055a6ee3dad1d12f06ad3213df4814b32e", "committedDate": "2020-09-08T19:30:02Z", "message": "feat(redis): make the RedisConfiguration matches the upstream `RedisOptions`\n\nThis will make it easier to tweak things like redis connection hosts to match the expected endpoint\nby the upstream library thus avoid manually reconstructing the connection string. See\nhttps://github.com/vert-x3/vertx-redis-client/blob/e9e3c0db349d662e676c04235841c68488d6f6d2/src/main/java/io/vertx/redis/client/RedisOptions.java\nfor more details about the available options. The global default password for cluster and sentinel\nmode will be added once we have the next release of vertx-redis. `NetClientOptions` can be added now\nbut I considered it to be of less importance and we can have separate PR to configure it once users\nasks for it.\n\nFixes https://github.com/quarkusio/quarkus/issues/11986"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f8796d055a6ee3dad1d12f06ad3213df4814b32e", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/f8796d055a6ee3dad1d12f06ad3213df4814b32e", "committedDate": "2020-09-08T19:30:02Z", "message": "feat(redis): make the RedisConfiguration matches the upstream `RedisOptions`\n\nThis will make it easier to tweak things like redis connection hosts to match the expected endpoint\nby the upstream library thus avoid manually reconstructing the connection string. See\nhttps://github.com/vert-x3/vertx-redis-client/blob/e9e3c0db349d662e676c04235841c68488d6f6d2/src/main/java/io/vertx/redis/client/RedisOptions.java\nfor more details about the available options. The global default password for cluster and sentinel\nmode will be added once we have the next release of vertx-redis. `NetClientOptions` can be added now\nbut I considered it to be of less importance and we can have separate PR to configure it once users\nasks for it.\n\nFixes https://github.com/quarkusio/quarkus/issues/11986"}, "afterCommit": {"oid": "8152dac3ba2bd37cc6974fcef1dd748f97c72e88", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/8152dac3ba2bd37cc6974fcef1dd748f97c72e88", "committedDate": "2020-09-08T19:35:39Z", "message": "feat(redis): make the RedisConfiguration matches the upstream `RedisOptions`\n\nThis will make it easier to tweak things like redis connection hosts to match the expected endpoint\nby the upstream library thus avoid manually reconstructing the connection string. See\nhttps://github.com/vert-x3/vertx-redis-client/blob/e9e3c0db349d662e676c04235841c68488d6f6d2/src/main/java/io/vertx/redis/client/RedisOptions.java\nfor more details about the available options. The global default password for cluster and sentinel\nmode will be added once we have the next release of vertx-redis. `NetClientOptions` can be added now\nbut I considered it to be of less importance and we can have separate PR to configure it once users\nasks for it.\n\nFixes https://github.com/quarkusio/quarkus/issues/11986"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4ODAwNzY3", "url": "https://github.com/quarkusio/quarkus/pull/11908#pullrequestreview-488800767", "createdAt": "2020-09-15T15:23:15Z", "commit": {"oid": "8152dac3ba2bd37cc6974fcef1dd748f97c72e88"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNToyMzoxNVrOHSHS9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQxNTo0NToxOFrOHSISsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1NTk1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Redis allows you to configure multiple clients.\n          \n          \n            \n            The Redis extension allows you to configure multiple clients.\n          \n      \n    \n    \n  \n\nmaybe?", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r488755957", "createdAt": "2020-09-15T15:23:15Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/redis.adoc", "diffHunk": "@@ -544,6 +544,40 @@ So when you access the `/health/ready` endpoint of your application you will hav\n \n This behavior can be disabled by setting the `quarkus.redis.health.enabled` property to `false` in your `application.properties`.\n \n+== Multiple Redis Clients\n+\n+Redis allows you to configure multiple clients.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8152dac3ba2bd37cc6974fcef1dd748f97c72e88"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc1NjY4Mw==", "bodyText": "There's something weird with this sentence, isn't it? The each RedisClient part sounds weird.", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r488756683", "createdAt": "2020-09-15T15:24:13Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/redis.adoc", "diffHunk": "@@ -544,6 +544,40 @@ So when you access the `/health/ready` endpoint of your application you will hav\n \n This behavior can be disabled by setting the `quarkus.redis.health.enabled` property to `false` in your `application.properties`.\n \n+== Multiple Redis Clients\n+\n+Redis allows you to configure multiple clients.\n+Using several clients works the same way as having a single client.\n+\n+[source,properties]\n+----\n+quarkus.redis.hosts = localhost:6379\n+quarkus.redis.second.hosts = localhost:6379\n+----\n+\n+Notice there's an extra bit in the key (the `second` segment).\n+The syntax is as follows: `quarkus.redis.[optional name.][redis configuration property]`.\n+If the name is omitted, it configures the default client.\n+\n+=== Named Redis client Injection\n+\n+When using multiple clients, each `RedisClient`, you can select the client to inject using the `io.quarkus.redis.client.RedisClientName` qualifier.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8152dac3ba2bd37cc6974fcef1dd748f97c72e88"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2ODcwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Marker annotation to select redis client\n          \n          \n            \n             * Marker annotation to select the Redis client.", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r488768701", "createdAt": "2020-09-15T15:40:34Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/RedisClientName.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package io.quarkus.redis.client;\n+\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+import javax.inject.Qualifier;\n+\n+/**\n+ * Marker annotation to select redis client", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8152dac3ba2bd37cc6974fcef1dd748f97c72e88"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2ODkxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * For example, if a redis connection is configured like so in {@code application.properties}:\n          \n          \n            \n             * For example, if a Redis connection is configured like so in {@code application.properties}:", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r488768915", "createdAt": "2020-09-15T15:40:51Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/RedisClientName.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package io.quarkus.redis.client;\n+\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+import javax.inject.Qualifier;\n+\n+/**\n+ * Marker annotation to select redis client\n+ * Use name parameter to select it\n+ *\n+ * For example, if a redis connection is configured like so in {@code application.properties}:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8152dac3ba2bd37cc6974fcef1dd748f97c72e88"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc2OTE4Ng==", "bodyText": "Let's just drop this sentence, it's just noise.", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r488769186", "createdAt": "2020-09-15T15:41:13Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/RedisClientName.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package io.quarkus.redis.client;\n+\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+import javax.inject.Qualifier;\n+\n+/**\n+ * Marker annotation to select redis client\n+ * Use name parameter to select it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8152dac3ba2bd37cc6974fcef1dd748f97c72e88"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc3MDUyOQ==", "bodyText": "In the other extensions, we call it <default>.", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r488770529", "createdAt": "2020-09-15T15:43:02Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisClientUtil.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package io.quarkus.redis.client.runtime;\n+\n+import java.net.URI;\n+import java.util.Set;\n+\n+import io.quarkus.redis.client.runtime.RedisConfig.RedisConfiguration;\n+import io.quarkus.runtime.configuration.ConfigurationException;\n+import io.vertx.redis.client.RedisClientType;\n+import io.vertx.redis.client.RedisOptions;\n+\n+public class RedisClientUtil {\n+    public static final String DEFAULT_CLIENT = \"__redis_default_client__\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8152dac3ba2bd37cc6974fcef1dd748f97c72e88"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc3MTEyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Configures additional redis client connections.\n          \n          \n            \n                 * Configures additional Redis client connections.", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r488771124", "createdAt": "2020-09-15T15:43:45Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisConfig.java", "diffHunk": "@@ -1,77 +1,136 @@\n package io.quarkus.redis.client.runtime;\n \n-import java.net.InetSocketAddress;\n+import java.net.URI;\n import java.time.Duration;\n+import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n \n+import io.quarkus.runtime.annotations.ConfigGroup;\n import io.quarkus.runtime.annotations.ConfigItem;\n import io.quarkus.runtime.annotations.ConfigPhase;\n import io.quarkus.runtime.annotations.ConfigRoot;\n import io.vertx.redis.client.RedisClientType;\n+import io.vertx.redis.client.RedisRole;\n+import io.vertx.redis.client.RedisSlaves;\n \n @ConfigRoot(phase = ConfigPhase.RUN_TIME)\n public class RedisConfig {\n \n     /**\n-     * The redis password\n+     * The default redis client\n      */\n-    @ConfigItem\n-    public Optional<String> password;\n+    @ConfigItem(name = ConfigItem.PARENT)\n+    public RedisConfiguration defaultClient;\n \n     /**\n-     * The redis hosts\n+     * Configures additional redis client connections.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8152dac3ba2bd37cc6974fcef1dd748f97c72e88"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODc3MjI3Mg==", "bodyText": "Was it copy/pasted from elsewhere? All this Javadoc block could use some rework.", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r488772272", "createdAt": "2020-09-15T15:45:18Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisConfig.java", "diffHunk": "@@ -1,77 +1,136 @@\n package io.quarkus.redis.client.runtime;\n \n-import java.net.InetSocketAddress;\n+import java.net.URI;\n import java.time.Duration;\n+import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n \n+import io.quarkus.runtime.annotations.ConfigGroup;\n import io.quarkus.runtime.annotations.ConfigItem;\n import io.quarkus.runtime.annotations.ConfigPhase;\n import io.quarkus.runtime.annotations.ConfigRoot;\n import io.vertx.redis.client.RedisClientType;\n+import io.vertx.redis.client.RedisRole;\n+import io.vertx.redis.client.RedisSlaves;\n \n @ConfigRoot(phase = ConfigPhase.RUN_TIME)\n public class RedisConfig {\n \n     /**\n-     * The redis password\n+     * The default redis client\n      */\n-    @ConfigItem\n-    public Optional<String> password;\n+    @ConfigItem(name = ConfigItem.PARENT)\n+    public RedisConfiguration defaultClient;\n \n     /**\n-     * The redis hosts\n+     * Configures additional redis client connections.\n+     * <p>\n+     * each client have a unique identifier witch must be identified to select the right connection.\n+     * example:\n+     * <p>\n+     *\n+     * <pre>\n+     * quarkus.redis.client1.hosts = redis://localhost:6379\n+     * quarkus.redis.client2.hosts = redis://localhost:6380\n+     * </pre>\n+     * <p>\n+     * And then use annotations above the instances of RedisClient to indicate which instance we are going to use\n+     * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8152dac3ba2bd37cc6974fcef1dd748f97c72e88"}, "originalPosition": 44}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8152dac3ba2bd37cc6974fcef1dd748f97c72e88", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/8152dac3ba2bd37cc6974fcef1dd748f97c72e88", "committedDate": "2020-09-08T19:35:39Z", "message": "feat(redis): make the RedisConfiguration matches the upstream `RedisOptions`\n\nThis will make it easier to tweak things like redis connection hosts to match the expected endpoint\nby the upstream library thus avoid manually reconstructing the connection string. See\nhttps://github.com/vert-x3/vertx-redis-client/blob/e9e3c0db349d662e676c04235841c68488d6f6d2/src/main/java/io/vertx/redis/client/RedisOptions.java\nfor more details about the available options. The global default password for cluster and sentinel\nmode will be added once we have the next release of vertx-redis. `NetClientOptions` can be added now\nbut I considered it to be of less importance and we can have separate PR to configure it once users\nasks for it.\n\nFixes https://github.com/quarkusio/quarkus/issues/11986"}, "afterCommit": {"oid": "5086d58e174b666d6152f24a7a43fea3f4bc8842", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/5086d58e174b666d6152f24a7a43fea3f4bc8842", "committedDate": "2020-09-15T21:35:46Z", "message": "feat(redis): make the RedisConfiguration matches the upstream `RedisOptions`\n\nThis will make it easier to tweak things like redis connection hosts to match the expected endpoint\nby the upstream library thus avoid manually reconstructing the connection string. See\nhttps://github.com/vert-x3/vertx-redis-client/blob/e9e3c0db349d662e676c04235841c68488d6f6d2/src/main/java/io/vertx/redis/client/RedisOptions.java\nfor more details about the available options. The global default password for cluster and sentinel\nmode will be added once we have the next release of vertx-redis. `NetClientOptions` can be added now\nbut I considered it to be of less importance and we can have separate PR to configure it once users\nasks for it.\n\nFixes https://github.com/quarkusio/quarkus/issues/11986"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNDYxMDU4", "url": "https://github.com/quarkusio/quarkus/pull/11908#pullrequestreview-490461058", "createdAt": "2020-09-17T10:36:37Z", "commit": {"oid": "5086d58e174b666d6152f24a7a43fea3f4bc8842"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDozNjozN1rOHTb8RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDo0MDoxM1rOHTcD2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0Mjc4OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Marker annotation to select the redis client\n          \n          \n            \n             * Marker annotation to select the Redis client.\n          \n      \n    \n    \n  \n\n(it's minor but this is public API so let's get it right)", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r490142789", "createdAt": "2020-09-17T10:36:37Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/RedisClientName.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.quarkus.redis.client;\n+\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+import javax.inject.Qualifier;\n+\n+/**\n+ * Marker annotation to select the redis client", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5086d58e174b666d6152f24a7a43fea3f4bc8842"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0Mjk0Mg==", "bodyText": "Let's drop this.", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r490142942", "createdAt": "2020-09-17T10:36:53Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/RedisClientName.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.quarkus.redis.client;\n+\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+import javax.inject.Qualifier;\n+\n+/**\n+ * Marker annotation to select the redis client\n+ *\n+ * For example, if the Redis connection is configured like so in {@code application.properties}:\n+ *\n+ * <pre>\n+ * quarkus.redis.client1.hosts=localhost:6379\n+ * </pre>\n+ *\n+ * Then to inject the proper {@code redisClient}, you would need to use {@code RedisClientName} like indicated below:\n+ *\n+ * <pre>\n+ *     &#64Inject\n+ *     &#64RedisClientName(\"client1\")\n+ *     RedisClient client;\n+ * </pre>\n+ */\n+@Target({ ElementType.TYPE, ElementType.METHOD, ElementType.FIELD })\n+@Retention(RUNTIME)\n+@Documented\n+@Qualifier\n+public @interface RedisClientName {\n+    /**\n+     * Specify the cluster name of the connection.\n+     *\n+     * @return the value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5086d58e174b666d6152f24a7a43fea3f4bc8842"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0MzEyNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Specify the cluster name of the connection.\n          \n          \n            \n                 * The Redis client name.", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r490143126", "createdAt": "2020-09-17T10:37:14Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/RedisClientName.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.quarkus.redis.client;\n+\n+import static java.lang.annotation.RetentionPolicy.RUNTIME;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.Target;\n+\n+import javax.inject.Qualifier;\n+\n+/**\n+ * Marker annotation to select the redis client\n+ *\n+ * For example, if the Redis connection is configured like so in {@code application.properties}:\n+ *\n+ * <pre>\n+ * quarkus.redis.client1.hosts=localhost:6379\n+ * </pre>\n+ *\n+ * Then to inject the proper {@code redisClient}, you would need to use {@code RedisClientName} like indicated below:\n+ *\n+ * <pre>\n+ *     &#64Inject\n+ *     &#64RedisClientName(\"client1\")\n+ *     RedisClient client;\n+ * </pre>\n+ */\n+@Target({ ElementType.TYPE, ElementType.METHOD, ElementType.FIELD })\n+@Retention(RUNTIME)\n+@Documented\n+@Qualifier\n+public @interface RedisClientName {\n+    /**\n+     * Specify the cluster name of the connection.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5086d58e174b666d6152f24a7a43fea3f4bc8842"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0MzQ5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Each client have a unique identifier which must be identified to select the right connection.\n          \n          \n            \n                 * Each client has a unique identifier which must be identified to select the right connection.", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r490143495", "createdAt": "2020-09-17T10:37:53Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisConfig.java", "diffHunk": "@@ -1,77 +1,140 @@\n package io.quarkus.redis.client.runtime;\n \n-import java.net.InetSocketAddress;\n+import java.net.URI;\n import java.time.Duration;\n+import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n \n+import io.quarkus.redis.client.RedisClient;\n+import io.quarkus.redis.client.RedisClientName;\n+import io.quarkus.runtime.annotations.ConfigGroup;\n import io.quarkus.runtime.annotations.ConfigItem;\n import io.quarkus.runtime.annotations.ConfigPhase;\n import io.quarkus.runtime.annotations.ConfigRoot;\n import io.vertx.redis.client.RedisClientType;\n+import io.vertx.redis.client.RedisRole;\n+import io.vertx.redis.client.RedisSlaves;\n \n @ConfigRoot(phase = ConfigPhase.RUN_TIME)\n public class RedisConfig {\n \n     /**\n-     * The redis password\n+     * The default redis client\n      */\n-    @ConfigItem\n-    public Optional<String> password;\n+    @ConfigItem(name = ConfigItem.PARENT)\n+    public RedisConfiguration defaultClient;\n \n     /**\n-     * The redis hosts\n+     * Configures additional Redis client connections.\n+     * <p>\n+     * Each client have a unique identifier which must be identified to select the right connection.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5086d58e174b666d6152f24a7a43fea3f4bc8842"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NDAxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * And then use the {@link RedisClientName} to select the {@link RedisClient} or\n          \n          \n            \n                 * {@link io.quarkus.redis.client.reactive.ReactiveRedisClient}\n          \n          \n            \n                 * we are going to use.\n          \n          \n            \n                 * And then use the {@link RedisClientName} annotation to select the {@link RedisClient} or\n          \n          \n            \n                 * {@link io.quarkus.redis.client.reactive.ReactiveRedisClient}.", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r490144012", "createdAt": "2020-09-17T10:38:52Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisConfig.java", "diffHunk": "@@ -1,77 +1,140 @@\n package io.quarkus.redis.client.runtime;\n \n-import java.net.InetSocketAddress;\n+import java.net.URI;\n import java.time.Duration;\n+import java.util.Map;\n import java.util.Optional;\n import java.util.Set;\n \n+import io.quarkus.redis.client.RedisClient;\n+import io.quarkus.redis.client.RedisClientName;\n+import io.quarkus.runtime.annotations.ConfigGroup;\n import io.quarkus.runtime.annotations.ConfigItem;\n import io.quarkus.runtime.annotations.ConfigPhase;\n import io.quarkus.runtime.annotations.ConfigRoot;\n import io.vertx.redis.client.RedisClientType;\n+import io.vertx.redis.client.RedisRole;\n+import io.vertx.redis.client.RedisSlaves;\n \n @ConfigRoot(phase = ConfigPhase.RUN_TIME)\n public class RedisConfig {\n \n     /**\n-     * The redis password\n+     * The default redis client\n      */\n-    @ConfigItem\n-    public Optional<String> password;\n+    @ConfigItem(name = ConfigItem.PARENT)\n+    public RedisConfiguration defaultClient;\n \n     /**\n-     * The redis hosts\n+     * Configures additional Redis client connections.\n+     * <p>\n+     * Each client have a unique identifier which must be identified to select the right connection.\n+     * For example:\n+     * <p>\n+     *\n+     * <pre>\n+     * quarkus.redis.client1.hosts = redis://localhost:6379\n+     * quarkus.redis.client2.hosts = redis://localhost:6380\n+     * </pre>\n+     * <p>\n+     * And then use the {@link RedisClientName} to select the {@link RedisClient} or\n+     * {@link io.quarkus.redis.client.reactive.ReactiveRedisClient}\n+     * we are going to use.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5086d58e174b666d6152f24a7a43fea3f4bc8842"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NDczMQ==", "bodyText": "Is there a reason why we are not being consistent and use the synthetic bean pattern for this too?", "url": "https://github.com/quarkusio/quarkus/pull/11908#discussion_r490144731", "createdAt": "2020-09-17T10:40:13Z", "author": {"login": "gsmet"}, "path": "extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisAPIProducer.java", "diffHunk": "@@ -1,137 +1,55 @@\n package io.quarkus.redis.client.runtime;\n \n-import java.net.InetSocketAddress;\n-import java.util.Set;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import java.util.function.Function;\n \n import javax.annotation.PreDestroy;\n-import javax.enterprise.context.ApplicationScoped;\n-import javax.enterprise.inject.Produces;\n \n import io.quarkus.redis.client.RedisClient;\n import io.quarkus.redis.client.reactive.ReactiveRedisClient;\n-import io.quarkus.runtime.configuration.ConfigurationException;\n import io.vertx.core.Vertx;\n import io.vertx.redis.client.Redis;\n import io.vertx.redis.client.RedisAPI;\n-import io.vertx.redis.client.RedisClientType;\n import io.vertx.redis.client.RedisOptions;\n \n class RedisAPIProducer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5086d58e174b666d6152f24a7a43fea3f4bc8842"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a7ba55365abf623a196fe106800c490c88fe6ac", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/6a7ba55365abf623a196fe106800c490c88fe6ac", "committedDate": "2020-09-17T11:35:23Z", "message": "Update extensions/redis-client/runtime/src/main/java/io/quarkus/redis/client/runtime/RedisConfig.java\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>"}, "afterCommit": {"oid": "706ca0b0b8882fad1101564ae0ef79ea11f83ea9", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/706ca0b0b8882fad1101564ae0ef79ea11f83ea9", "committedDate": "2020-09-17T11:41:01Z", "message": "docs: various documentation fixes in the redis extension\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef18d2cee242e92a46e7b57b9b322162ae588a86", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/ef18d2cee242e92a46e7b57b9b322162ae588a86", "committedDate": "2020-09-17T11:41:18Z", "message": "feat(redis): add the possibility to configure \"maxWaitingHandlers\" and \"maxNestedArrays\" options"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b61176e46f6325750da1fe787da1388089e52c4e", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/b61176e46f6325750da1fe787da1388089e52c4e", "committedDate": "2020-09-17T11:41:19Z", "message": "feat(redis): support for multiple redis clients\n\nFixes https://github.com/quarkusio/quarkus/issues/11558"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb5c45494668b77f6677ad4c36b837e40b617c4a", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/cb5c45494668b77f6677ad4c36b837e40b617c4a", "committedDate": "2020-09-17T11:41:19Z", "message": "feat(redis): make the RedisConfiguration matches the upstream `RedisOptions`\n\nThis will make it easier to tweak things like redis connection hosts to match the expected endpoint\nby the upstream library thus avoid manually reconstructing the connection string. See\nhttps://github.com/vert-x3/vertx-redis-client/blob/e9e3c0db349d662e676c04235841c68488d6f6d2/src/main/java/io/vertx/redis/client/RedisOptions.java\nfor more details about the available options. The global default password for cluster and sentinel\nmode will be added once we have the next release of vertx-redis. `NetClientOptions` can be added now\nbut I considered it to be of less importance and we can have separate PR to configure it once users\nasks for it.\n\nFixes https://github.com/quarkusio/quarkus/issues/11986"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26f642ca69403bd38e9968aed727fa8044e98b95", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/26f642ca69403bd38e9968aed727fa8044e98b95", "committedDate": "2020-09-17T11:41:27Z", "message": "docs(redis): various documentation adjustements in the redis extension\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "706ca0b0b8882fad1101564ae0ef79ea11f83ea9", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/706ca0b0b8882fad1101564ae0ef79ea11f83ea9", "committedDate": "2020-09-17T11:41:01Z", "message": "docs: various documentation fixes in the redis extension\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>"}, "afterCommit": {"oid": "26f642ca69403bd38e9968aed727fa8044e98b95", "author": {"user": {"login": "machi1990", "name": "Manyanda Chitimbo"}}, "url": "https://github.com/quarkusio/quarkus/commit/26f642ca69403bd38e9968aed727fa8044e98b95", "committedDate": "2020-09-17T11:41:27Z", "message": "docs(redis): various documentation adjustements in the redis extension\n\nCo-authored-by: Guillaume Smet <guillaume.smet@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNTMxNjU3", "url": "https://github.com/quarkusio/quarkus/pull/11908#pullrequestreview-490531657", "createdAt": "2020-09-17T12:17:54Z", "commit": {"oid": "26f642ca69403bd38e9968aed727fa8044e98b95"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 556, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}