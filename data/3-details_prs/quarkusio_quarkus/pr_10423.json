{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNDAyNDky", "number": 10423, "title": "Created UberJarFormatWorksTest", "bodyText": "Created uber-jar test for Gradle", "createdAt": "2020-07-02T09:44:00Z", "url": "https://github.com/quarkusio/quarkus/pull/10423", "merged": true, "mergeCommit": {"oid": "42efa84e6052474564b4ac9b845709c7f81df157"}, "closed": true, "closedAt": "2020-07-03T01:16:26Z", "author": {"login": "Garima829"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcw9wlBgFqTQ0MTYxNzM4NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcw_n7sgFqTQ0MTcyNzA2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjE3Mzg1", "url": "https://github.com/quarkusio/quarkus/pull/10423#pullrequestreview-441617385", "createdAt": "2020-07-02T12:11:42Z", "commit": {"oid": "ec0a3805da1c59d5ac9d3a4ef1bcfaa81c57fc5a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxMTo0MlrOGsKGXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxMTo0MlrOGsKGXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NTk5OQ==", "bodyText": "No need to have this as static. It can probably just be private.", "url": "https://github.com/quarkusio/quarkus/pull/10423#discussion_r448955999", "createdAt": "2020-07-02T12:11:42Z", "author": {"login": "geoand"}, "path": "integration-tests/gradle/src/test/java/io/quarkus/gradle/UberJarFormatWorksTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package io.quarkus.gradle;\n+\n+import io.quarkus.test.devmode.util.DevModeTestUtils;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.log4j.Logger;\n+import org.awaitility.core.ConditionTimeoutException;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import static io.quarkus.gradle.LaunchUtils.launch;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.awaitility.Awaitility.await;\n+\n+public class UberJarFormatWorksTest extends QuarkusGradleWrapperTestBase{\n+\n+    private static Future<?> jarRun;\n+\n+    @Test\n+    public void testUberJarFormatWorks() throws Exception {\n+\n+        final File projectDir = getProjectDir(\"test-uber-jar-format-works\");\n+        runGradleWrapper(projectDir, \"clean\", \"build\");\n+        final Path quarkusApp = projectDir.toPath().resolve(\"build\");\n+        assertThat(quarkusApp).exists();\n+        Path jar = quarkusApp.resolve(\"code-with-quarkus-1.0.0-SNAPSHOT-runner.jar\");\n+        assertThat(jar).exists();\n+\n+        File output = new File(projectDir, \"build/output.log\");\n+        output.createNewFile();\n+        Process process = launch(jar, output);\n+        try {\n+            // Wait until server up\n+            dumpFileContentOnFailure(() -> {\n+                await()\n+                        .pollDelay(1, TimeUnit.SECONDS)\n+                        .atMost(1, TimeUnit.MINUTES).until(() -> DevModeTestUtils.getHttpResponse(\"/hello\", 200));\n+                return null;\n+            }, output, ConditionTimeoutException.class);\n+\n+            String logs = FileUtils.readFileToString(output, \"UTF-8\");\n+\n+            assertThatOutputWorksCorrectly(logs);\n+\n+            // test that the application name and version are properly set\n+            assertThat(DevModeTestUtils.getHttpResponse(\"/hello\", getQuarkusDevBrokenReason()).equals(\"hello\"));\n+        } finally {\n+            process.destroy();\n+        }\n+\n+    }\n+\n+    static void assertThatOutputWorksCorrectly(String logs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0a3805da1c59d5ac9d3a4ef1bcfaa81c57fc5a"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjE3NzMx", "url": "https://github.com/quarkusio/quarkus/pull/10423#pullrequestreview-441617731", "createdAt": "2020-07-02T12:12:10Z", "commit": {"oid": "ec0a3805da1c59d5ac9d3a4ef1bcfaa81c57fc5a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxMjoxMFrOGsKHTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxMjoxMFrOGsKHTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NjIzOQ==", "bodyText": "This method is the same as what you added in the other test. Best not duplicate it", "url": "https://github.com/quarkusio/quarkus/pull/10423#discussion_r448956239", "createdAt": "2020-07-02T12:12:10Z", "author": {"login": "geoand"}, "path": "integration-tests/gradle/src/test/java/io/quarkus/gradle/UberJarFormatWorksTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package io.quarkus.gradle;\n+\n+import io.quarkus.test.devmode.util.DevModeTestUtils;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.log4j.Logger;\n+import org.awaitility.core.ConditionTimeoutException;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import static io.quarkus.gradle.LaunchUtils.launch;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.awaitility.Awaitility.await;\n+\n+public class UberJarFormatWorksTest extends QuarkusGradleWrapperTestBase{\n+\n+    private static Future<?> jarRun;\n+\n+    @Test\n+    public void testUberJarFormatWorks() throws Exception {\n+\n+        final File projectDir = getProjectDir(\"test-uber-jar-format-works\");\n+        runGradleWrapper(projectDir, \"clean\", \"build\");\n+        final Path quarkusApp = projectDir.toPath().resolve(\"build\");\n+        assertThat(quarkusApp).exists();\n+        Path jar = quarkusApp.resolve(\"code-with-quarkus-1.0.0-SNAPSHOT-runner.jar\");\n+        assertThat(jar).exists();\n+\n+        File output = new File(projectDir, \"build/output.log\");\n+        output.createNewFile();\n+        Process process = launch(jar, output);\n+        try {\n+            // Wait until server up\n+            dumpFileContentOnFailure(() -> {\n+                await()\n+                        .pollDelay(1, TimeUnit.SECONDS)\n+                        .atMost(1, TimeUnit.MINUTES).until(() -> DevModeTestUtils.getHttpResponse(\"/hello\", 200));\n+                return null;\n+            }, output, ConditionTimeoutException.class);\n+\n+            String logs = FileUtils.readFileToString(output, \"UTF-8\");\n+\n+            assertThatOutputWorksCorrectly(logs);\n+\n+            // test that the application name and version are properly set\n+            assertThat(DevModeTestUtils.getHttpResponse(\"/hello\", getQuarkusDevBrokenReason()).equals(\"hello\"));\n+        } finally {\n+            process.destroy();\n+        }\n+\n+    }\n+\n+    static void assertThatOutputWorksCorrectly(String logs) {\n+        assertThat(logs.isEmpty()).isFalse();\n+        String infoLogLevel = \"INFO\";\n+        assertThat(logs.contains(infoLogLevel)).isTrue();\n+        assertThat(logs.contains(\"cdi, resteasy\")).isTrue();\n+    }\n+\n+    private void dumpFileContentOnFailure(final Callable<Void> operation, final File logFile,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0a3805da1c59d5ac9d3a4ef1bcfaa81c57fc5a"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjE4MjYz", "url": "https://github.com/quarkusio/quarkus/pull/10423#pullrequestreview-441618263", "createdAt": "2020-07-02T12:12:52Z", "commit": {"oid": "ec0a3805da1c59d5ac9d3a4ef1bcfaa81c57fc5a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxMjo1MlrOGsKI1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxMjo1MlrOGsKI1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NjYyOA==", "bodyText": "The name of the method is incorrect since it has nothing to do with quarkus dev", "url": "https://github.com/quarkusio/quarkus/pull/10423#discussion_r448956628", "createdAt": "2020-07-02T12:12:52Z", "author": {"login": "geoand"}, "path": "integration-tests/gradle/src/test/java/io/quarkus/gradle/UberJarFormatWorksTest.java", "diffHunk": "@@ -0,0 +1,85 @@\n+package io.quarkus.gradle;\n+\n+import io.quarkus.test.devmode.util.DevModeTestUtils;\n+import org.apache.commons.io.FileUtils;\n+import org.apache.log4j.Logger;\n+import org.awaitility.core.ConditionTimeoutException;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+import java.nio.file.Path;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.Future;\n+import java.util.concurrent.TimeUnit;\n+import java.util.function.Supplier;\n+\n+import static io.quarkus.gradle.LaunchUtils.launch;\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.awaitility.Awaitility.await;\n+\n+public class UberJarFormatWorksTest extends QuarkusGradleWrapperTestBase{\n+\n+    private static Future<?> jarRun;\n+\n+    @Test\n+    public void testUberJarFormatWorks() throws Exception {\n+\n+        final File projectDir = getProjectDir(\"test-uber-jar-format-works\");\n+        runGradleWrapper(projectDir, \"clean\", \"build\");\n+        final Path quarkusApp = projectDir.toPath().resolve(\"build\");\n+        assertThat(quarkusApp).exists();\n+        Path jar = quarkusApp.resolve(\"code-with-quarkus-1.0.0-SNAPSHOT-runner.jar\");\n+        assertThat(jar).exists();\n+\n+        File output = new File(projectDir, \"build/output.log\");\n+        output.createNewFile();\n+        Process process = launch(jar, output);\n+        try {\n+            // Wait until server up\n+            dumpFileContentOnFailure(() -> {\n+                await()\n+                        .pollDelay(1, TimeUnit.SECONDS)\n+                        .atMost(1, TimeUnit.MINUTES).until(() -> DevModeTestUtils.getHttpResponse(\"/hello\", 200));\n+                return null;\n+            }, output, ConditionTimeoutException.class);\n+\n+            String logs = FileUtils.readFileToString(output, \"UTF-8\");\n+\n+            assertThatOutputWorksCorrectly(logs);\n+\n+            // test that the application name and version are properly set\n+            assertThat(DevModeTestUtils.getHttpResponse(\"/hello\", getQuarkusDevBrokenReason()).equals(\"hello\"));\n+        } finally {\n+            process.destroy();\n+        }\n+\n+    }\n+\n+    static void assertThatOutputWorksCorrectly(String logs) {\n+        assertThat(logs.isEmpty()).isFalse();\n+        String infoLogLevel = \"INFO\";\n+        assertThat(logs.contains(infoLogLevel)).isTrue();\n+        assertThat(logs.contains(\"cdi, resteasy\")).isTrue();\n+    }\n+\n+    private void dumpFileContentOnFailure(final Callable<Void> operation, final File logFile,\n+                                          final Class<? extends Throwable> failureType) throws Exception {\n+\n+        final Logger log = Logger.getLogger(FastJarFormatWorksTest.class);\n+        try {\n+            operation.call();\n+        } catch (Throwable t) {\n+            log.error(\"Dumping logs that were generated in \" + logFile + \" for an operation that resulted in \"\n+                    + t.getClass().getName() + \":\", t);\n+\n+            throw t;\n+        }\n+    }\n+\n+    private static Supplier<String> getQuarkusDevBrokenReason() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0a3805da1c59d5ac9d3a4ef1bcfaa81c57fc5a"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjE4NjU5", "url": "https://github.com/quarkusio/quarkus/pull/10423#pullrequestreview-441618659", "createdAt": "2020-07-02T12:13:26Z", "commit": {"oid": "ec0a3805da1c59d5ac9d3a4ef1bcfaa81c57fc5a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxMzoyN1rOGsKJ4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxMzoyN1rOGsKJ4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1Njg5OQ==", "bodyText": "Let's give it a more descriptive name, like uber-jar-test", "url": "https://github.com/quarkusio/quarkus/pull/10423#discussion_r448956899", "createdAt": "2020-07-02T12:13:27Z", "author": {"login": "geoand"}, "path": "integration-tests/gradle/src/test/resources/test-uber-jar-format-works/settings.gradle", "diffHunk": "@@ -0,0 +1,11 @@\n+pluginManagement {\n+    repositories {\n+        mavenLocal()\n+        mavenCentral()\n+        gradlePluginPortal()\n+    }\n+    plugins {\n+      id 'io.quarkus' version \"${quarkusPluginVersion}\"\n+    }\n+}\n+rootProject.name='code-with-quarkus'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0a3805da1c59d5ac9d3a4ef1bcfaa81c57fc5a"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjE5MzIz", "url": "https://github.com/quarkusio/quarkus/pull/10423#pullrequestreview-441619323", "createdAt": "2020-07-02T12:14:25Z", "commit": {"oid": "ec0a3805da1c59d5ac9d3a4ef1bcfaa81c57fc5a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxNDoyNVrOGsKL8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMjoxNDoyNVrOGsKL8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODk1NzQyNw==", "bodyText": "This file shouldn't be needed", "url": "https://github.com/quarkusio/quarkus/pull/10423#discussion_r448957427", "createdAt": "2020-07-02T12:14:25Z", "author": {"login": "geoand"}, "path": "integration-tests/gradle/src/test/resources/test-uber-jar-format-works/src/test/resources/application.properties", "diffHunk": "@@ -0,0 +1,7 @@\n+# Configuration file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec0a3805da1c59d5ac9d3a4ef1bcfaa81c57fc5a"}, "originalPosition": 1}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ec0a3805da1c59d5ac9d3a4ef1bcfaa81c57fc5a", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/ec0a3805da1c59d5ac9d3a4ef1bcfaa81c57fc5a", "committedDate": "2020-07-02T09:37:27Z", "message": "Created UberJarFormatWorksTest"}, "afterCommit": {"oid": "9f32403b68dd3a1c42bac3a2f3c8adad175166ae", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/9f32403b68dd3a1c42bac3a2f3c8adad175166ae", "committedDate": "2020-07-02T13:25:10Z", "message": "Updated Uber-Jar test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjgwMjE5", "url": "https://github.com/quarkusio/quarkus/pull/10423#pullrequestreview-441680219", "createdAt": "2020-07-02T13:31:01Z", "commit": {"oid": "9f32403b68dd3a1c42bac3a2f3c8adad175166ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMzozMTowMVrOGsM-1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMzozMTowMVrOGsM-1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAwMzIyMw==", "bodyText": "This isn't a good idea since you introduce unnecessary coupling between the test classes. It would be better if you moved this method to LaunchUtils", "url": "https://github.com/quarkusio/quarkus/pull/10423#discussion_r449003223", "createdAt": "2020-07-02T13:31:01Z", "author": {"login": "geoand"}, "path": "integration-tests/gradle/src/test/java/io/quarkus/gradle/FastJarFormatWorksTest.java", "diffHunk": "@@ -50,20 +49,22 @@ public void testFastJarFormatWorks() throws Exception {\n             assertThatOutputWorksCorrectly(logs);\n \n             // test that the application name and version are properly set\n-            assertThat(DevModeTestUtils.getHttpResponse(\"/hello\", getQuarkusDevBrokenReason()).equals(\"hello\"));\n+            assertThat(DevModeTestUtils.getHttpResponse(\"/hello\", () -> {\n+                return jarRun == null ? null : jarRun.isDone() ? \"jar run mode has terminated\" : null;\n+            }).equals(\"hello\"));\n         } finally {\n             process.destroy();\n         }\n     }\n \n-    static void assertThatOutputWorksCorrectly(String logs) {\n+    private void assertThatOutputWorksCorrectly(String logs) {\n         assertThat(logs.isEmpty()).isFalse();\n         String infoLogLevel = \"INFO\";\n         assertThat(logs.contains(infoLogLevel)).isTrue();\n         assertThat(logs.contains(\"cdi, resteasy\")).isTrue();\n     }\n \n-    private void dumpFileContentOnFailure(final Callable<Void> operation, final File logFile,\n+    protected static void dumpFileContentOnFailure(final Callable<Void> operation, final File logFile,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f32403b68dd3a1c42bac3a2f3c8adad175166ae"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f32403b68dd3a1c42bac3a2f3c8adad175166ae", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/9f32403b68dd3a1c42bac3a2f3c8adad175166ae", "committedDate": "2020-07-02T13:25:10Z", "message": "Updated Uber-Jar test"}, "afterCommit": {"oid": "42facc8c37ee0f6b746f2f5a0a2df1d594a10855", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/42facc8c37ee0f6b746f2f5a0a2df1d594a10855", "committedDate": "2020-07-02T13:40:25Z", "message": "Updated Uber-Jar & Fast-jar test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNjkyNTg4", "url": "https://github.com/quarkusio/quarkus/pull/10423#pullrequestreview-441692588", "createdAt": "2020-07-02T13:44:58Z", "commit": {"oid": "42facc8c37ee0f6b746f2f5a0a2df1d594a10855"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMzo0NDo1OFrOGsNjCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMzo0NDo1OFrOGsNjCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAxMjQ5MA==", "bodyText": "No need to have this protected, just make it public please", "url": "https://github.com/quarkusio/quarkus/pull/10423#discussion_r449012490", "createdAt": "2020-07-02T13:44:58Z", "author": {"login": "geoand"}, "path": "integration-tests/gradle/src/test/java/io/quarkus/gradle/LaunchUtils.java", "diffHunk": "@@ -21,4 +23,18 @@ protected static Process launch(Path jar, File output) throws IOException {\n         return processBuilder.start();\n     }\n \n+    protected static void dumpFileContentOnFailure(final Callable<Void> operation, final File logFile,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42facc8c37ee0f6b746f2f5a0a2df1d594a10855"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "42facc8c37ee0f6b746f2f5a0a2df1d594a10855", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/42facc8c37ee0f6b746f2f5a0a2df1d594a10855", "committedDate": "2020-07-02T13:40:25Z", "message": "Updated Uber-Jar & Fast-jar test"}, "afterCommit": {"oid": "2d5db752bc3729d6be1f09e26b0df7d060e4ce85", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/2d5db752bc3729d6be1f09e26b0df7d060e4ce85", "committedDate": "2020-07-02T13:48:46Z", "message": "Updated Uber-Jar & Fast-jar test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNzAwOTY1", "url": "https://github.com/quarkusio/quarkus/pull/10423#pullrequestreview-441700965", "createdAt": "2020-07-02T13:53:51Z", "commit": {"oid": "2d5db752bc3729d6be1f09e26b0df7d060e4ce85"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMzo1Mzo1MVrOGsN7rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMzo1Mzo1MVrOGsN7rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAxODc5Ng==", "bodyText": "Sorry, I missed this. You shouldn't this. A log is always per class. So just add\nprivate static final Logger log = Logger.getLogger(LaunchUtils.class);\n\nas a field of LaunchUtils and that in this method instead of creating the log in the method", "url": "https://github.com/quarkusio/quarkus/pull/10423#discussion_r449018796", "createdAt": "2020-07-02T13:53:51Z", "author": {"login": "geoand"}, "path": "integration-tests/gradle/src/test/java/io/quarkus/gradle/LaunchUtils.java", "diffHunk": "@@ -21,4 +23,18 @@ protected static Process launch(Path jar, File output) throws IOException {\n         return processBuilder.start();\n     }\n \n+    public static void dumpFileContentOnFailure(final Callable<Void> operation, final File logFile,\n+                                                   final Class<? extends Throwable> failureType) throws Exception {\n+\n+        final Logger log = Logger.getLogger(FastJarFormatWorksTest.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d5db752bc3729d6be1f09e26b0df7d060e4ce85"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d5db752bc3729d6be1f09e26b0df7d060e4ce85", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/2d5db752bc3729d6be1f09e26b0df7d060e4ce85", "committedDate": "2020-07-02T13:48:46Z", "message": "Updated Uber-Jar & Fast-jar test"}, "afterCommit": {"oid": "dd023c5417cb6f03ba8ad54603aea6d0ffe95ba2", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/dd023c5417cb6f03ba8ad54603aea6d0ffe95ba2", "committedDate": "2020-07-02T14:14:51Z", "message": "Updated Uber-Jar,Fast-jar test and LaunchUtils"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNzIyODc3", "url": "https://github.com/quarkusio/quarkus/pull/10423#pullrequestreview-441722877", "createdAt": "2020-07-02T14:17:32Z", "commit": {"oid": "dd023c5417cb6f03ba8ad54603aea6d0ffe95ba2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxNzozMlrOGsO7bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNDoxNzozMlrOGsO7bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTAzNTExNg==", "bodyText": "Let's get rid of this comment please", "url": "https://github.com/quarkusio/quarkus/pull/10423#discussion_r449035116", "createdAt": "2020-07-02T14:17:32Z", "author": {"login": "geoand"}, "path": "integration-tests/gradle/src/test/java/io/quarkus/gradle/LaunchUtils.java", "diffHunk": "@@ -5,10 +5,15 @@\n import java.nio.file.Path;\n import java.util.ArrayList;\n import java.util.List;\n+import java.util.concurrent.Callable;\n+\n+// import org.apache.log4j.Logger;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd023c5417cb6f03ba8ad54603aea6d0ffe95ba2"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd023c5417cb6f03ba8ad54603aea6d0ffe95ba2", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/dd023c5417cb6f03ba8ad54603aea6d0ffe95ba2", "committedDate": "2020-07-02T14:14:51Z", "message": "Updated Uber-Jar,Fast-jar test and LaunchUtils"}, "afterCommit": {"oid": "b8872db079ae263e3d5eb9a2be498bb7e3bfe851", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/b8872db079ae263e3d5eb9a2be498bb7e3bfe851", "committedDate": "2020-07-02T14:18:57Z", "message": "Updated Uber-Jar,Fast-jar test and LaunchUtils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a763df576ef86bd829bbfb3aa0bf6ea94be8a9da", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/a763df576ef86bd829bbfb3aa0bf6ea94be8a9da", "committedDate": "2020-07-02T14:20:40Z", "message": "Updated Uber-Jar,Fast-jar test and LaunchUtils"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b8872db079ae263e3d5eb9a2be498bb7e3bfe851", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/b8872db079ae263e3d5eb9a2be498bb7e3bfe851", "committedDate": "2020-07-02T14:18:57Z", "message": "Updated Uber-Jar,Fast-jar test and LaunchUtils"}, "afterCommit": {"oid": "a763df576ef86bd829bbfb3aa0bf6ea94be8a9da", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/a763df576ef86bd829bbfb3aa0bf6ea94be8a9da", "committedDate": "2020-07-02T14:20:40Z", "message": "Updated Uber-Jar,Fast-jar test and LaunchUtils"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNzI3MDY3", "url": "https://github.com/quarkusio/quarkus/pull/10423#pullrequestreview-441727067", "createdAt": "2020-07-02T14:22:05Z", "commit": {"oid": "a763df576ef86bd829bbfb3aa0bf6ea94be8a9da"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3606, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}