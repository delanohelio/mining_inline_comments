{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyODk0NTM4", "number": 13028, "title": "Improved Quarkus platform detection mechanism", "bodyText": "Quarkus platform detection mechanism based on a \"fingerprint\" dependency constraint represented by the JSON platform descriptor artifact introduced into the platform BOM.\nThere are couple of reasons behind this PR:\n\nThe current way of detecting platforms used in Quarkus applications is inefficient and most importantly not very reliable (it is based on the assumption that we can detect all the BOM imports and check whether each imported BOM is a Quarkus platform);\nBeing able to identify imports of potentially conflicting platforms (conflicting on e.g. the Quarkus code versions they are based on) by the same application.\n\nThis PR changes the coordinates of the platform descriptor to <platform-group-id>:<platform-artifact-id>-quarkus-platform-descriptor:<platform-version>:json:<platform-version>.\nWhich, e.g. in case of the current quarkus-bom, it will be io.quarkus:quarkus-bom-quarkus-platform-descriptor:999-SNAPSHOT:json:999-SNAPSHOT.\nThe platform version in the middle of the example above is the artifact's classifier. The classifier is a part of the artifact's ID. Which means when the project's effective dependencyManagement section is resolved, all the platform imports will be preserved and in the proper order. The classifier in this case will allow to detect imports of different versions of the same platform in a given application (which is very much possible in case a project imports two platforms that are based on different versions of quarkus-bom).\nThis specific PR, however, does not introduce the platform conflict checks yet, although given that all the necessary data for this kind of check is already included and it'd be very easy to implement. For now it is only replacing the legacy platform detection mechanism making it more efficient and reliable.", "createdAt": "2020-10-30T10:17:08Z", "url": "https://github.com/quarkusio/quarkus/pull/13028", "merged": true, "mergeCommit": {"oid": "fa38cb495054d71b6a9aadcc2e1f03c98a188cb9"}, "closed": true, "closedAt": "2020-11-02T13:53:32Z", "author": {"login": "aloubyansky"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXkIhXgFqTUyMDUzNzc2MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXn8NEgBqjM5NDE2MDI5Nzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNTM3NzYw", "url": "https://github.com/quarkusio/quarkus/pull/13028#pullrequestreview-520537760", "createdAt": "2020-10-30T10:23:22Z", "commit": {"oid": "4b7e1a2b8fc46543753d2cccc8b7f31dda660446"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMDoyMzoyMlrOHrI_xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMDoyMzoyMlrOHrI_xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk5ODIxMw==", "bodyText": "@gastaldi this PR changes the coordinates of the JSON descriptor and will require adjustments in the extension catalog project. To hopefully make it easier to maintain, I introduced this method and a couple interfaces right above this class. This specific method returns a JSON resolver that will try resolving the JSON for the BOM coordinates using the legacy and the new JSON coordinates conventions.", "url": "https://github.com/quarkusio/quarkus/pull/13028#discussion_r514998213", "createdAt": "2020-10-30T10:23:22Z", "author": {"login": "aloubyansky"}, "path": "independent-projects/tools/platform-descriptor-resolver-json/src/main/java/io/quarkus/platform/descriptor/resolver/json/QuarkusJsonPlatformDescriptorResolver.java", "diffHunk": "@@ -58,21 +59,43 @@\n     public static final String PROP_PLATFORM_JSON_VERSION = \"quarkus.platform.json.version\";\n     public static final String PROP_PLATFORM_JSON_VERSION_RANGE = \"quarkus.platform.json.version-range\";\n \n+    private static final JsonDescriptorResolver jsonDescriptorResolver;\n+    static {\n+        jsonDescriptorResolver = new ChainedJsonDescriptorResolver(\n+                ((bomGroupId, bomArtifactId, bomVersion, jsonResolver, log) -> jsonResolver.resolveArtifact(bomGroupId,\n+                        bomArtifactId + \"-\" + BootstrapConstants.PLATFORM_DESCRIPTOR_ARTIFACT_ID_SUFFIX, bomVersion, \"json\",\n+                        bomVersion, log)),\n+                ((bomGroupId, bomArtifactId, bomVersion, jsonResolver, log) -> jsonResolver.resolveArtifact(bomGroupId,\n+                        bomArtifactId, null, \"json\", bomVersion, log)),\n+                ((bomGroupId, bomArtifactId, bomVersion, jsonResolver, log) -> jsonResolver.resolveArtifact(bomGroupId,\n+                        bomArtifactId + \"-descriptor-json\", null, \"json\", bomVersion, log)));\n+    }\n+\n+    public static JsonDescriptorResolver jsonDescriptorResolver() {\n+        return jsonDescriptorResolver;\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b7e1a2b8fc46543753d2cccc8b7f31dda660446"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4b7e1a2b8fc46543753d2cccc8b7f31dda660446", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/4b7e1a2b8fc46543753d2cccc8b7f31dda660446", "committedDate": "2020-10-30T09:53:28Z", "message": "Quarkus platform detection mechanism based on a \"fingerprint\" dependency constraint represented by the JSON platform descriptor artifact introduced into the platform BOM."}, "afterCommit": {"oid": "d8db99b335021b178ce3dfe3d5d01d41b9b60532", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/d8db99b335021b178ce3dfe3d5d01d41b9b60532", "committedDate": "2020-10-30T12:26:50Z", "message": "Quarkus platform detection mechanism based on a \"fingerprint\" dependency constraint represented by the JSON platform descriptor artifact introduced into the platform BOM."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNjMyMDQ1", "url": "https://github.com/quarkusio/quarkus/pull/13028#pullrequestreview-520632045", "createdAt": "2020-10-30T12:44:52Z", "commit": {"oid": "4b7e1a2b8fc46543753d2cccc8b7f31dda660446"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNzE5NzQ0", "url": "https://github.com/quarkusio/quarkus/pull/13028#pullrequestreview-520719744", "createdAt": "2020-10-30T14:26:44Z", "commit": {"oid": "d8db99b335021b178ce3dfe3d5d01d41b9b60532"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDoyNjo0NFrOHrRdwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDoyNjo0NFrOHrRdwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzNjk2MQ==", "bodyText": "Excellent! \ud83d\udc4f", "url": "https://github.com/quarkusio/quarkus/pull/13028#discussion_r515136961", "createdAt": "2020-10-30T14:26:44Z", "author": {"login": "gastaldi"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusListExtensions.java", "diffHunk": "@@ -96,7 +97,11 @@ public QuarkusListExtensions() {\n     @TaskAction\n     public void listExtensions() {\n         try {\n-            ListExtensions listExtensions = new ListExtensions(getQuarkusProject())\n+            final QuarkusProject quarkusProject = getQuarkusProject();\n+            getLogger().info(\"Quarkus platform \" + quarkusProject.getPlatformDescriptor().getBomGroupId() + \":\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8db99b335021b178ce3dfe3d5d01d41b9b60532"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNzIwMzM1", "url": "https://github.com/quarkusio/quarkus/pull/13028#pullrequestreview-520720335", "createdAt": "2020-10-30T14:27:23Z", "commit": {"oid": "d8db99b335021b178ce3dfe3d5d01d41b9b60532"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDoyNzoyM1rOHrRfdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDoyNzoyM1rOHrRfdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzNzM5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new GradleException(\"Failed to determine Quarkus platform for the project\");\n          \n          \n            \n                        throw new GradleException(\"Failed to determine the Quarkus platform for the project\");", "url": "https://github.com/quarkusio/quarkus/pull/13028#discussion_r515137397", "createdAt": "2020-10-30T14:27:23Z", "author": {"login": "gastaldi"}, "path": "devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusPlatformTask.java", "diffHunk": "@@ -30,48 +39,148 @@\n \n     protected QuarkusPlatformDescriptor platformDescriptor() {\n \n+        final List<Dependency> boms = boms();\n+        if (boms.isEmpty()) {\n+            throw new GradleException(\"No platforms detected in the project\");\n+        }\n+\n         final QuarkusJsonPlatformDescriptorResolver platformResolver = QuarkusJsonPlatformDescriptorResolver.newInstance()\n                 .setArtifactResolver(extension().getAppModelResolver())\n                 .setMessageWriter(new GradleMessageWriter(getProject().getLogger()));\n \n-        List<QuarkusPlatformDescriptor> platforms = new ArrayList<>(2);\n+        final QuarkusPlatformDescriptor platform = resolvePlatformDescriptor(platformResolver, getProject(), boms);\n+        if (platform != null) {\n+            return platform;\n+        }\n+\n+        final List<QuarkusPlatformDescriptor> platforms = resolveLegacyPlatforms(platformResolver, boms);\n+        if (platforms.isEmpty()) {\n+            throw new GradleException(\"Failed to determine Quarkus platform for the project\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8db99b335021b178ce3dfe3d5d01d41b9b60532"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32104e73ba8f055b551c9f05e890885e177ee548", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/32104e73ba8f055b551c9f05e890885e177ee548", "committedDate": "2020-10-30T14:49:08Z", "message": "Quarkus platform detection mechanism based on a \"fingerprint\" dependency constraint represented by the JSON platform descriptor artifact introduced into the platform BOM."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7a5f3c80bf2b6fdcb5c6365124f0b3401ef98054", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/7a5f3c80bf2b6fdcb5c6365124f0b3401ef98054", "committedDate": "2020-10-30T14:48:40Z", "message": "Update devtools/gradle/src/main/java/io/quarkus/gradle/tasks/QuarkusPlatformTask.java\n\nCo-authored-by: George Gastaldi <gegastaldi@gmail.com>"}, "afterCommit": {"oid": "32104e73ba8f055b551c9f05e890885e177ee548", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/32104e73ba8f055b551c9f05e890885e177ee548", "committedDate": "2020-10-30T14:49:08Z", "message": "Quarkus platform detection mechanism based on a \"fingerprint\" dependency constraint represented by the JSON platform descriptor artifact introduced into the platform BOM."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1593, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}