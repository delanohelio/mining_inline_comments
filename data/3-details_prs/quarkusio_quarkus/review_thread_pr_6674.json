{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MTQ3MDQw", "number": 6674, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwODoyMjo0MFrODZaBKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwODo1MDozNFrODZadOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTY3MjcyOnYy", "diffSide": "LEFT", "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/DefaultEntityManagerFactoryProducer.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwODoyMjo0MFrOFfxglg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwOTo0MTo0OFrOFfzrMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg2MTMzNA==", "bodyText": "Why do you remove the scope here? Since the produced EntityManagerFactory is dependent a new instance of this producer will be created for each EntityManagerFactory  injection point...", "url": "https://github.com/quarkusio/quarkus/pull/6674#discussion_r368861334", "createdAt": "2020-01-21T08:22:40Z", "author": {"login": "mkouba"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/DefaultEntityManagerFactoryProducer.java", "diffHunk": "@@ -1,11 +1,9 @@\n package io.quarkus.hibernate.orm.runtime;\n \n import javax.enterprise.inject.Produces;\n-import javax.inject.Singleton;\n import javax.persistence.EntityManagerFactory;\n import javax.persistence.PersistenceUnit;\n \n-@Singleton", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "456e598cf6bd75f0078147d36d10c27d33e99d6d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg3MTczOQ==", "bodyText": "I could have sworn the producer also had a scope on it, oops.", "url": "https://github.com/quarkusio/quarkus/pull/6674#discussion_r368871739", "createdAt": "2020-01-21T08:48:22Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/DefaultEntityManagerFactoryProducer.java", "diffHunk": "@@ -1,11 +1,9 @@\n package io.quarkus.hibernate.orm.runtime;\n \n import javax.enterprise.inject.Produces;\n-import javax.inject.Singleton;\n import javax.persistence.EntityManagerFactory;\n import javax.persistence.PersistenceUnit;\n \n-@Singleton", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg2MTMzNA=="}, "originalCommit": {"oid": "456e598cf6bd75f0078147d36d10c27d33e99d6d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg4OTkxNw==", "bodyText": "@mkouba are you good with the move of the annotation to the producer method? I would like to get this approved (I think all the changes make sense) and merged if CI passes.", "url": "https://github.com/quarkusio/quarkus/pull/6674#discussion_r368889917", "createdAt": "2020-01-21T09:27:31Z", "author": {"login": "geoand"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/DefaultEntityManagerFactoryProducer.java", "diffHunk": "@@ -1,11 +1,9 @@\n package io.quarkus.hibernate.orm.runtime;\n \n import javax.enterprise.inject.Produces;\n-import javax.inject.Singleton;\n import javax.persistence.EntityManagerFactory;\n import javax.persistence.PersistenceUnit;\n \n-@Singleton", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg2MTMzNA=="}, "originalCommit": {"oid": "456e598cf6bd75f0078147d36d10c27d33e99d6d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg5NjgxNw==", "bodyText": "Looks good so +1 if CI passes ;-).", "url": "https://github.com/quarkusio/quarkus/pull/6674#discussion_r368896817", "createdAt": "2020-01-21T09:41:48Z", "author": {"login": "mkouba"}, "path": "extensions/hibernate-orm/runtime/src/main/java/io/quarkus/hibernate/orm/runtime/DefaultEntityManagerFactoryProducer.java", "diffHunk": "@@ -1,11 +1,9 @@\n package io.quarkus.hibernate.orm.runtime;\n \n import javax.enterprise.inject.Produces;\n-import javax.inject.Singleton;\n import javax.persistence.EntityManagerFactory;\n import javax.persistence.PersistenceUnit;\n \n-@Singleton", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg2MTMzNA=="}, "originalCommit": {"oid": "456e598cf6bd75f0078147d36d10c27d33e99d6d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3OTc0NDU5OnYy", "diffSide": "RIGHT", "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/DefaultTenantConfigResolver.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwODo1MDozNFrOFfyMpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwOTowODozN1rOFfys7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg3MjYxNA==", "bodyText": "So I assume this is the part that actually fixes #6608?", "url": "https://github.com/quarkusio/quarkus/pull/6674#discussion_r368872614", "createdAt": "2020-01-21T08:50:34Z", "author": {"login": "geoand"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/DefaultTenantConfigResolver.java", "diffHunk": "@@ -20,9 +20,9 @@\n     @Inject\n     Instance<TenantConfigResolver> tenantConfigResolver;\n \n-    private Map<String, TenantConfigContext> tenantsConfig;\n-    private TenantConfigContext defaultTenant;\n-    private Function<OidcTenantConfig, TenantConfigContext> tenantConfigContextFactory;\n+    private volatile Map<String, TenantConfigContext> tenantsConfig;\n+    private volatile TenantConfigContext defaultTenant;\n+    private volatile Function<OidcTenantConfig, TenantConfigContext> tenantConfigContextFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8b7aa33df76d05774d499e66569acc72c4ea754"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg3OTczOQ==", "bodyText": "I hope so. Without this the HTTP thread could read incorrect config, so was likely missing the principalClaim. This is the only explanation I can see for the type of failure we are seeing.", "url": "https://github.com/quarkusio/quarkus/pull/6674#discussion_r368879739", "createdAt": "2020-01-21T09:06:15Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/DefaultTenantConfigResolver.java", "diffHunk": "@@ -20,9 +20,9 @@\n     @Inject\n     Instance<TenantConfigResolver> tenantConfigResolver;\n \n-    private Map<String, TenantConfigContext> tenantsConfig;\n-    private TenantConfigContext defaultTenant;\n-    private Function<OidcTenantConfig, TenantConfigContext> tenantConfigContextFactory;\n+    private volatile Map<String, TenantConfigContext> tenantsConfig;\n+    private volatile TenantConfigContext defaultTenant;\n+    private volatile Function<OidcTenantConfig, TenantConfigContext> tenantConfigContextFactory;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg3MjYxNA=="}, "originalCommit": {"oid": "e8b7aa33df76d05774d499e66569acc72c4ea754"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg4MDg3Nw==", "bodyText": "I see, thanks for the explanation. Let's see what CI thinks :)", "url": "https://github.com/quarkusio/quarkus/pull/6674#discussion_r368880877", "createdAt": "2020-01-21T09:08:37Z", "author": {"login": "geoand"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/DefaultTenantConfigResolver.java", "diffHunk": "@@ -20,9 +20,9 @@\n     @Inject\n     Instance<TenantConfigResolver> tenantConfigResolver;\n \n-    private Map<String, TenantConfigContext> tenantsConfig;\n-    private TenantConfigContext defaultTenant;\n-    private Function<OidcTenantConfig, TenantConfigContext> tenantConfigContextFactory;\n+    private volatile Map<String, TenantConfigContext> tenantsConfig;\n+    private volatile TenantConfigContext defaultTenant;\n+    private volatile Function<OidcTenantConfig, TenantConfigContext> tenantConfigContextFactory;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg3MjYxNA=="}, "originalCommit": {"oid": "e8b7aa33df76d05774d499e66569acc72c4ea754"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1251, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}