{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4NTI0ODA4", "number": 11848, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDozNTozM1rOEf7giA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNDo0NDoyOFrOEgBmJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTE2Mjk2OnYy", "diffSide": "RIGHT", "path": "extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unused/UnusedExclusionTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMDozNTozM1rOHMgkgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMToyODowMFrOHMiQ8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg3ODU5NA==", "bodyText": "Let's keep an eye out for future uses of this and try to move it into some test utility if it starts shows up", "url": "https://github.com/quarkusio/quarkus/pull/11848#discussion_r482878594", "createdAt": "2020-09-03T10:35:33Z", "author": {"login": "geoand"}, "path": "extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unused/UnusedExclusionTest.java", "diffHunk": "@@ -21,13 +35,56 @@\n     static final QuarkusUnitTest config = new QuarkusUnitTest()\n             .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n                     .addClasses(UnusedExclusionTest.class, Alpha.class, Beta.class, Charlie.class, Delta.class,\n-                            ProducerBean.class)\n+                            ProducerBean.class, TestRecorder.class, Gama.class, GamaProducer.class)\n                     .addAsResource(new StringAsset(\n                             \"quarkus.arc.unremovable-types=io.quarkus.arc.test.unused.UnusedExclusionTest$Alpha,io.quarkus.arc.test.unused.subpackage.**,io.quarkus.arc.test.unused.Charlie,Delta\"),\n-                            \"application.properties\"));\n+                            \"application.properties\"))\n+            .addBuildChainCustomizer(buildCustomizer());\n+\n+    static Consumer<BuildChainBuilder> buildCustomizer() {\n+        return new Consumer<BuildChainBuilder>() {\n+\n+            @Override\n+            public void accept(BuildChainBuilder builder) {\n+                builder.addBuildStep(new BuildStep() {\n+\n+                    @Override\n+                    public void execute(BuildContext context) {\n+                        BeanContainer beanContainer = context.consume(BeanContainerBuildItem.class).getValue();\n+                        BytecodeRecorderImpl bytecodeRecorder = new BytecodeRecorderImpl(true,\n+                                TestRecorder.class.getSimpleName(),\n+                                \"test\", \"\" + TestRecorder.class.hashCode());\n+                        // We need to use reflection due to some class loading problems\n+                        Object recorderProxy = bytecodeRecorder.getRecordingProxy(TestRecorder.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a6913b503530653f222bf02bb19889fcd7852f9"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjkwNjM1Mw==", "bodyText": "FYI @michalszynkiewicz", "url": "https://github.com/quarkusio/quarkus/pull/11848#discussion_r482906353", "createdAt": "2020-09-03T11:28:00Z", "author": {"login": "mkouba"}, "path": "extensions/arc/deployment/src/test/java/io/quarkus/arc/test/unused/UnusedExclusionTest.java", "diffHunk": "@@ -21,13 +35,56 @@\n     static final QuarkusUnitTest config = new QuarkusUnitTest()\n             .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n                     .addClasses(UnusedExclusionTest.class, Alpha.class, Beta.class, Charlie.class, Delta.class,\n-                            ProducerBean.class)\n+                            ProducerBean.class, TestRecorder.class, Gama.class, GamaProducer.class)\n                     .addAsResource(new StringAsset(\n                             \"quarkus.arc.unremovable-types=io.quarkus.arc.test.unused.UnusedExclusionTest$Alpha,io.quarkus.arc.test.unused.subpackage.**,io.quarkus.arc.test.unused.Charlie,Delta\"),\n-                            \"application.properties\"));\n+                            \"application.properties\"))\n+            .addBuildChainCustomizer(buildCustomizer());\n+\n+    static Consumer<BuildChainBuilder> buildCustomizer() {\n+        return new Consumer<BuildChainBuilder>() {\n+\n+            @Override\n+            public void accept(BuildChainBuilder builder) {\n+                builder.addBuildStep(new BuildStep() {\n+\n+                    @Override\n+                    public void execute(BuildContext context) {\n+                        BeanContainer beanContainer = context.consume(BeanContainerBuildItem.class).getValue();\n+                        BytecodeRecorderImpl bytecodeRecorder = new BytecodeRecorderImpl(true,\n+                                TestRecorder.class.getSimpleName(),\n+                                \"test\", \"\" + TestRecorder.class.hashCode());\n+                        // We need to use reflection due to some class loading problems\n+                        Object recorderProxy = bytecodeRecorder.getRecordingProxy(TestRecorder.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjg3ODU5NA=="}, "originalCommit": {"oid": "3a6913b503530653f222bf02bb19889fcd7852f9"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxOTU5MjA4OnYy", "diffSide": "RIGHT", "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/ArcConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjozNzo1OFrOHMkmzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxMjozNzo1OFrOHMkmzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjk0NDcxNg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/quarkusio/quarkus/pull/11848#discussion_r482944716", "createdAt": "2020-09-03T12:37:58Z", "author": {"login": "geoand"}, "path": "extensions/arc/deployment/src/main/java/io/quarkus/arc/deployment/ArcConfig.java", "diffHunk": "@@ -146,6 +146,15 @@\n     @ConfigItem\n     Map<String, IndexDependencyConfig> excludeDependency;\n \n+    /**\n+     * If set to true then the container attempts to detect \"unused removed beans\" false positives during programmatic lookup at\n+     * runtime. You can disable this feature to conserve some memory when running your application in production.\n+     * \n+     * @see ArcConfig#removeUnusedBeans\n+     */\n+    @ConfigItem(defaultValue = \"true\")\n+    public boolean detectUnusedFalsePositives;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82286c5c30c67448101bb30265dc9158ce6039eb"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDE2MDM4OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/devmode/ArcEndpointProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNDo0NDoyOFrOHMqEUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNDo0NDoyOFrOHMqEUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzAzNDE5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                void registerRoutes(HttpBuildTimeConfig httConfig, ArcConfig arcConfig, ArcEndpointRecorder recorder,\n          \n          \n            \n                void registerRoutes(HttpBuildTimeConfig httpConfig, ArcConfig arcConfig, ArcEndpointRecorder recorder,", "url": "https://github.com/quarkusio/quarkus/pull/11848#discussion_r483034195", "createdAt": "2020-09-03T14:44:28Z", "author": {"login": "gastaldi"}, "path": "extensions/vertx-http/deployment/src/main/java/io/quarkus/vertx/http/deployment/devmode/ArcEndpointProcessor.java", "diffHunk": "@@ -13,15 +17,38 @@\n \n     @Record(ExecutionTime.RUNTIME_INIT)\n     @BuildStep(onlyIf = IsDevelopment.class)\n-    void registerRoutes(HttpBuildTimeConfig config, ArcEndpointRecorder recorder, BuildProducer<RouteBuildItem> routes,\n+    void registerRoutes(HttpBuildTimeConfig httConfig, ArcConfig arcConfig, ArcEndpointRecorder recorder,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82286c5c30c67448101bb30265dc9158ce6039eb"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 485, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}