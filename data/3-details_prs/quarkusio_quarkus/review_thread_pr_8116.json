{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMTQ5NjE1", "number": 8116, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzoxMTowMVrODrDHHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzoxMTowMVrODrDHHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NDY2MzM1OnYy", "diffSide": "RIGHT", "path": "extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/LiquibaseProcessor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMzoxMTowMVrOF7Ksxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxMDoyMTozMFrOF7Uc3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4NTYwNg==", "bodyText": "Should we care about the order here (LinkedHashMap) ?", "url": "https://github.com/quarkusio/quarkus/pull/8116#discussion_r397585606", "createdAt": "2020-03-25T03:11:01Z", "author": {"login": "gastaldi"}, "path": "extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/LiquibaseProcessor.java", "diffHunk": "@@ -96,6 +97,7 @@ void nativeImageConfiguration(\n                 liquibase.sql.visitor.SqlVisitor.class);\n \n         // load the liquibase services\n+        Map<String, List<String>> serviceClassesImplementationRegistry = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ef1b61ca278273628d43f4afbfd3a96337cc739"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4NTg1MA==", "bodyText": "Should we care about the order here (LinkedHashMap) ?\n\nProbably yes, to avoid uncertainty while loading all services, WDYT?", "url": "https://github.com/quarkusio/quarkus/pull/8116#discussion_r397585850", "createdAt": "2020-03-25T03:12:02Z", "author": {"login": "gastaldi"}, "path": "extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/LiquibaseProcessor.java", "diffHunk": "@@ -96,6 +97,7 @@ void nativeImageConfiguration(\n                 liquibase.sql.visitor.SqlVisitor.class);\n \n         // load the liquibase services\n+        Map<String, List<String>> serviceClassesImplementationRegistry = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4NTYwNg=="}, "originalCommit": {"oid": "0ef1b61ca278273628d43f4afbfd3a96337cc739"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzY3Njk4OA==", "bodyText": "Should we care about the order here (LinkedHashMap) ?\n\nProbably yes, to avoid uncertainty while loading all services, WDYT?\n\nI do not think so. I think we just need a lookup table here, order is irrelevant. What uncertainty are you thinking of?", "url": "https://github.com/quarkusio/quarkus/pull/8116#discussion_r397676988", "createdAt": "2020-03-25T08:25:40Z", "author": {"login": "machi1990"}, "path": "extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/LiquibaseProcessor.java", "diffHunk": "@@ -96,6 +97,7 @@ void nativeImageConfiguration(\n                 liquibase.sql.visitor.SqlVisitor.class);\n \n         // load the liquibase services\n+        Map<String, List<String>> serviceClassesImplementationRegistry = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4NTYwNg=="}, "originalCommit": {"oid": "0ef1b61ca278273628d43f4afbfd3a96337cc739"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzc0NTM3Mw==", "bodyText": "Ah nevermind, I thought you were iterating entries. I should stop reviewing code late at night \ud83d\ude1b", "url": "https://github.com/quarkusio/quarkus/pull/8116#discussion_r397745373", "createdAt": "2020-03-25T10:21:30Z", "author": {"login": "gastaldi"}, "path": "extensions/liquibase/deployment/src/main/java/io/quarkus/liquibase/LiquibaseProcessor.java", "diffHunk": "@@ -96,6 +97,7 @@ void nativeImageConfiguration(\n                 liquibase.sql.visitor.SqlVisitor.class);\n \n         // load the liquibase services\n+        Map<String, List<String>> serviceClassesImplementationRegistry = new HashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU4NTYwNg=="}, "originalCommit": {"oid": "0ef1b61ca278273628d43f4afbfd3a96337cc739"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4609, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}