{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzOTM0NzQy", "number": 13743, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODo1MDowNFrOFCMxkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODo1MDozN1rOFCMygA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODUwNzcwOnYy", "diffSide": "RIGHT", "path": "integration-tests/hibernate-orm-panache/src/main/java/io/quarkus/it/panache/resources/BookResource.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODo1MDowNFrOIBN7ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTozMjoxNFrOIBjnlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0NzcwNw==", "bodyText": "I don't understand how this tests for using the getters?\nIn ORM+Panache we have a lots of tests for that, which involve calling real getters and making sure they were called. Why don't you copy that?", "url": "https://github.com/quarkusio/quarkus/pull/13743#discussion_r538147707", "createdAt": "2020-12-08T08:50:04Z", "author": {"login": "FroMage"}, "path": "integration-tests/hibernate-orm-panache/src/main/java/io/quarkus/it/panache/resources/BookResource.java", "diffHunk": "@@ -19,6 +22,11 @@\n     @Path(\"/{name}/{author}\")\n     public List<Book> addAndListAll(@PathParam(\"name\") String name, @PathParam(\"author\") String author) {\n         bookDao.persist(new Book(name, author));\n-        return bookDao.listAll();\n+        List<Book> books = bookDao.listAll();\n+        // This is done to invoke the hopefully replaced field access with the getter access\n+        books.forEach(book -> {\n+            book.name.hashCode();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c4306adb0a9db128d5a9f40ec3321efd3ebe3e7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5MTUyMw==", "bodyText": "because this call (getField) replaced by invokeVirtual which is a public method where the field is private and so avoids the IllegalAccessException.", "url": "https://github.com/quarkusio/quarkus/pull/13743#discussion_r538391523", "createdAt": "2020-12-08T13:50:26Z", "author": {"login": "evanchooly"}, "path": "integration-tests/hibernate-orm-panache/src/main/java/io/quarkus/it/panache/resources/BookResource.java", "diffHunk": "@@ -19,6 +22,11 @@\n     @Path(\"/{name}/{author}\")\n     public List<Book> addAndListAll(@PathParam(\"name\") String name, @PathParam(\"author\") String author) {\n         bookDao.persist(new Book(name, author));\n-        return bookDao.listAll();\n+        List<Book> books = bookDao.listAll();\n+        // This is done to invoke the hopefully replaced field access with the getter access\n+        books.forEach(book -> {\n+            book.name.hashCode();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0NzcwNw=="}, "originalCommit": {"oid": "4c4306adb0a9db128d5a9f40ec3321efd3ebe3e7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ5OTQ4Mw==", "bodyText": "I'm sorry this doesn't parse.", "url": "https://github.com/quarkusio/quarkus/pull/13743#discussion_r538499483", "createdAt": "2020-12-08T15:29:09Z", "author": {"login": "FroMage"}, "path": "integration-tests/hibernate-orm-panache/src/main/java/io/quarkus/it/panache/resources/BookResource.java", "diffHunk": "@@ -19,6 +22,11 @@\n     @Path(\"/{name}/{author}\")\n     public List<Book> addAndListAll(@PathParam(\"name\") String name, @PathParam(\"author\") String author) {\n         bookDao.persist(new Book(name, author));\n-        return bookDao.listAll();\n+        List<Book> books = bookDao.listAll();\n+        // This is done to invoke the hopefully replaced field access with the getter access\n+        books.forEach(book -> {\n+            book.name.hashCode();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0NzcwNw=="}, "originalCommit": {"oid": "4c4306adb0a9db128d5a9f40ec3321efd3ebe3e7"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUwMzA2Mw==", "bodyText": "No worries.  I found the accessor tests on the hibernate side and I'm recreating them for mongodb.  this will all go away then.", "url": "https://github.com/quarkusio/quarkus/pull/13743#discussion_r538503063", "createdAt": "2020-12-08T15:32:14Z", "author": {"login": "evanchooly"}, "path": "integration-tests/hibernate-orm-panache/src/main/java/io/quarkus/it/panache/resources/BookResource.java", "diffHunk": "@@ -19,6 +22,11 @@\n     @Path(\"/{name}/{author}\")\n     public List<Book> addAndListAll(@PathParam(\"name\") String name, @PathParam(\"author\") String author) {\n         bookDao.persist(new Book(name, author));\n-        return bookDao.listAll();\n+        List<Book> books = bookDao.listAll();\n+        // This is done to invoke the hopefully replaced field access with the getter access\n+        books.forEach(book -> {\n+            book.name.hashCode();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0NzcwNw=="}, "originalCommit": {"oid": "4c4306adb0a9db128d5a9f40ec3321efd3ebe3e7"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3ODUxMDA4OnYy", "diffSide": "RIGHT", "path": "extensions/panache/mongodb-panache-common/deployment/src/main/java/io/quarkus/mongodb/panache/deployment/BasePanacheMongoResourceProcessor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwODo1MDozN1rOIBN87g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQxNTozMzoxNFrOIBjsDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0ODA3OA==", "bodyText": "I don't understand how come we're getting formatting here, isn't that auto-formatted?", "url": "https://github.com/quarkusio/quarkus/pull/13743#discussion_r538148078", "createdAt": "2020-12-08T08:50:37Z", "author": {"login": "FroMage"}, "path": "extensions/panache/mongodb-panache-common/deployment/src/main/java/io/quarkus/mongodb/panache/deployment/BasePanacheMongoResourceProcessor.java", "diffHunk": "@@ -87,7 +94,8 @@ public void buildReactive(CombinedIndexBuildItem index,\n         List<PanacheMethodCustomizer> methodCustomizers = methodCustomizersBuildItems.stream()\n                 .map(bi -> bi.getMethodCustomizer()).collect(Collectors.toList());\n \n-        processTypes(index, transformers, reflectiveClass, propertyMappingClass, getReactiveTypeBundle(),\n+        processTypes(index, transformers, reflectiveClass, propertyMappingClass,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c4306adb0a9db128d5a9f40ec3321efd3ebe3e7"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODM5OTQ4MQ==", "bodyText": "it is.  there used to be an extra parameter there before I realized it wasn't necessary which probably cause the wrap there.", "url": "https://github.com/quarkusio/quarkus/pull/13743#discussion_r538399481", "createdAt": "2020-12-08T13:56:41Z", "author": {"login": "evanchooly"}, "path": "extensions/panache/mongodb-panache-common/deployment/src/main/java/io/quarkus/mongodb/panache/deployment/BasePanacheMongoResourceProcessor.java", "diffHunk": "@@ -87,7 +94,8 @@ public void buildReactive(CombinedIndexBuildItem index,\n         List<PanacheMethodCustomizer> methodCustomizers = methodCustomizersBuildItems.stream()\n                 .map(bi -> bi.getMethodCustomizer()).collect(Collectors.toList());\n \n-        processTypes(index, transformers, reflectiveClass, propertyMappingClass, getReactiveTypeBundle(),\n+        processTypes(index, transformers, reflectiveClass, propertyMappingClass,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0ODA3OA=="}, "originalCommit": {"oid": "4c4306adb0a9db128d5a9f40ec3321efd3ebe3e7"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODQ5NzczMg==", "bodyText": "It's still weird, I thought formatting was deterministic. But whatever.", "url": "https://github.com/quarkusio/quarkus/pull/13743#discussion_r538497732", "createdAt": "2020-12-08T15:27:36Z", "author": {"login": "FroMage"}, "path": "extensions/panache/mongodb-panache-common/deployment/src/main/java/io/quarkus/mongodb/panache/deployment/BasePanacheMongoResourceProcessor.java", "diffHunk": "@@ -87,7 +94,8 @@ public void buildReactive(CombinedIndexBuildItem index,\n         List<PanacheMethodCustomizer> methodCustomizers = methodCustomizersBuildItems.stream()\n                 .map(bi -> bi.getMethodCustomizer()).collect(Collectors.toList());\n \n-        processTypes(index, transformers, reflectiveClass, propertyMappingClass, getReactiveTypeBundle(),\n+        processTypes(index, transformers, reflectiveClass, propertyMappingClass,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0ODA3OA=="}, "originalCommit": {"oid": "4c4306adb0a9db128d5a9f40ec3321efd3ebe3e7"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODUwNDIwNw==", "bodyText": "I had edited the source and added a parameter causing the new wrap.  then removed it when it turned up unnecessary (the mongodb case is simpler than hibernate's).  But i'll clean that up so the diff is smaller.", "url": "https://github.com/quarkusio/quarkus/pull/13743#discussion_r538504207", "createdAt": "2020-12-08T15:33:14Z", "author": {"login": "evanchooly"}, "path": "extensions/panache/mongodb-panache-common/deployment/src/main/java/io/quarkus/mongodb/panache/deployment/BasePanacheMongoResourceProcessor.java", "diffHunk": "@@ -87,7 +94,8 @@ public void buildReactive(CombinedIndexBuildItem index,\n         List<PanacheMethodCustomizer> methodCustomizers = methodCustomizersBuildItems.stream()\n                 .map(bi -> bi.getMethodCustomizer()).collect(Collectors.toList());\n \n-        processTypes(index, transformers, reflectiveClass, propertyMappingClass, getReactiveTypeBundle(),\n+        processTypes(index, transformers, reflectiveClass, propertyMappingClass,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODE0ODA3OA=="}, "originalCommit": {"oid": "4c4306adb0a9db128d5a9f40ec3321efd3ebe3e7"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3803, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}