{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NzAwOTYz", "number": 12083, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNTo0OTo1OFrOEjNGPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzowNDo0MVrOEjW14Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MzUwMjA3OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/getting-started-testing.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNTo0OTo1OFrOHRbl5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxOTowNjozNFrOHRizuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAzOTkwOA==", "bodyText": "Maybe something like return List.of(new TestResourceEntry(MyWireMockServerManager.class)); or similar would make the usage even more clear.", "url": "https://github.com/quarkusio/quarkus/pull/12083#discussion_r488039908", "createdAt": "2020-09-14T15:49:58Z", "author": {"login": "famod"}, "path": "docs/src/main/asciidoc/getting-started-testing.adoc", "diffHunk": "@@ -504,11 +505,19 @@ public class MockGreetingProfile implements QuarkusTestProfile {\n     public String getConfigProfile() { <3>\n         return \"test\";\n     }\n+\n+    @Override\n+    public List<TestResourceEntry> testResources() { <4>\n+        return Collections.emptyList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd554a40ba4be1054806b9f16e717f78125e9d6e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODE1ODEzOQ==", "bodyText": "Good idea!", "url": "https://github.com/quarkusio/quarkus/pull/12083#discussion_r488158139", "createdAt": "2020-09-14T19:06:34Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/getting-started-testing.adoc", "diffHunk": "@@ -504,11 +505,19 @@ public class MockGreetingProfile implements QuarkusTestProfile {\n     public String getConfigProfile() { <3>\n         return \"test\";\n     }\n+\n+    @Override\n+    public List<TestResourceEntry> testResources() { <4>\n+        return Collections.emptyList();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAzOTkwOA=="}, "originalCommit": {"oid": "bd554a40ba4be1054806b9f16e717f78125e9d6e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NDYxOTE3OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/getting-started-testing.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMDo1OTozN1rOHRmX9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMTozOTo1NVrOHRnhsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIxNjU2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return Collections.SingletonList(new TestResourceEntry(CustomWireMockServerManager.class));\n          \n          \n            \n                    return Collections.singletonList(new TestResourceEntry(CustomWireMockServerManager.class));", "url": "https://github.com/quarkusio/quarkus/pull/12083#discussion_r488216564", "createdAt": "2020-09-14T20:59:37Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/getting-started-testing.adoc", "diffHunk": "@@ -504,11 +505,19 @@ public class MockGreetingProfile implements QuarkusTestProfile {\n     public String getConfigProfile() { <3>\n         return \"test\";\n     }\n+\n+    @Override\n+    public List<TestResourceEntry> testResources() { <4>\n+        return Collections.SingletonList(new TestResourceEntry(CustomWireMockServerManager.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2c8ee84c30065d22bfe53c95afcc95837611b83"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIzNTQ0Mg==", "bodyText": "Thanks for spotting that!", "url": "https://github.com/quarkusio/quarkus/pull/12083#discussion_r488235442", "createdAt": "2020-09-14T21:39:55Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/getting-started-testing.adoc", "diffHunk": "@@ -504,11 +505,19 @@ public class MockGreetingProfile implements QuarkusTestProfile {\n     public String getConfigProfile() { <3>\n         return \"test\";\n     }\n+\n+    @Override\n+    public List<TestResourceEntry> testResources() { <4>\n+        return Collections.SingletonList(new TestResourceEntry(CustomWireMockServerManager.class));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODIxNjU2NA=="}, "originalCommit": {"oid": "b2c8ee84c30065d22bfe53c95afcc95837611b83"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1NTA5ODU3OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/getting-started-testing.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQyMzowNDo0MVrOHRqmZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNTowNzozNlrOHRw3ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI4NTc5Ng==", "bodyText": "I think you're missing an import to java.util.List?", "url": "https://github.com/quarkusio/quarkus/pull/12083#discussion_r488285796", "createdAt": "2020-09-14T23:04:41Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/getting-started-testing.adoc", "diffHunk": "@@ -504,11 +505,19 @@ public class MockGreetingProfile implements QuarkusTestProfile {\n     public String getConfigProfile() { <3>\n         return \"test\";\n     }\n+\n+    @Override\n+    public List<TestResourceEntry> testResources() { <4>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "306d5c85897c05e2cf292b75c1b02034b920ad26"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODM4ODQ1Mw==", "bodyText": "Fixed", "url": "https://github.com/quarkusio/quarkus/pull/12083#discussion_r488388453", "createdAt": "2020-09-15T05:07:36Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/getting-started-testing.adoc", "diffHunk": "@@ -504,11 +505,19 @@ public class MockGreetingProfile implements QuarkusTestProfile {\n     public String getConfigProfile() { <3>\n         return \"test\";\n     }\n+\n+    @Override\n+    public List<TestResourceEntry> testResources() { <4>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODI4NTc5Ng=="}, "originalCommit": {"oid": "306d5c85897c05e2cf292b75c1b02034b920ad26"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 267, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}