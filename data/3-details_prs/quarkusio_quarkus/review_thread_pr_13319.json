{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNzM0Nzgz", "number": 13319, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNToyODo1MlrOE5iklQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNToyODo1MlrOE5iklQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4NzcwNzA5OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/reactive-routes.adoc", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNToyODo1MlrOH0D9Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNTozMzo1NFrOH0EMug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1Mjc5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Otherwise, set the `type` attribute of the `@Route` annotation to `Route.HandlerType.BLOCKING`, or use the `@Blocking` annotation.\n          \n          \n            \n            Otherwise, set the `type` attribute of the `@Route` annotation to `Route.HandlerType.BLOCKING`, or use the `@io.smallrye.common.annotation.Blocking` annotation.\n          \n      \n    \n    \n  \n\nWe have several of them so better use the FQCN.", "url": "https://github.com/quarkusio/quarkus/pull/13319#discussion_r524352794", "createdAt": "2020-11-16T15:28:52Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/reactive-routes.adoc", "diffHunk": "@@ -336,7 +336,7 @@ String helloSync(RoutingContext context) {\n ----\n \n Be aware, the processing must be **non-blocking** as reactive routes are invoked on the IO Thread.\n-Otherwise, use the `blocking` attribute of the `@Route` annotation or the `@Blocking` annotation.\n+Otherwise, set the `type` attribute of the `@Route` annotation to `Route.HandlerType.BLOCKING`, or use the `@Blocking` annotation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "848d6c6b349239582a7b0815e38cbe7742b814d3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1NDM5Nw==", "bodyText": "I'll check all the guide as this annotation is cited multiple times", "url": "https://github.com/quarkusio/quarkus/pull/13319#discussion_r524354397", "createdAt": "2020-11-16T15:30:45Z", "author": {"login": "loicmathieu"}, "path": "docs/src/main/asciidoc/reactive-routes.adoc", "diffHunk": "@@ -336,7 +336,7 @@ String helloSync(RoutingContext context) {\n ----\n \n Be aware, the processing must be **non-blocking** as reactive routes are invoked on the IO Thread.\n-Otherwise, use the `blocking` attribute of the `@Route` annotation or the `@Blocking` annotation.\n+Otherwise, set the `type` attribute of the `@Route` annotation to `Route.HandlerType.BLOCKING`, or use the `@Blocking` annotation.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1Mjc5NA=="}, "originalCommit": {"oid": "848d6c6b349239582a7b0815e38cbe7742b814d3"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1Njc5NA==", "bodyText": "OK, this was the only one.\nI updated the guide", "url": "https://github.com/quarkusio/quarkus/pull/13319#discussion_r524356794", "createdAt": "2020-11-16T15:33:54Z", "author": {"login": "loicmathieu"}, "path": "docs/src/main/asciidoc/reactive-routes.adoc", "diffHunk": "@@ -336,7 +336,7 @@ String helloSync(RoutingContext context) {\n ----\n \n Be aware, the processing must be **non-blocking** as reactive routes are invoked on the IO Thread.\n-Otherwise, use the `blocking` attribute of the `@Route` annotation or the `@Blocking` annotation.\n+Otherwise, set the `type` attribute of the `@Route` annotation to `Route.HandlerType.BLOCKING`, or use the `@Blocking` annotation.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM1Mjc5NA=="}, "originalCommit": {"oid": "848d6c6b349239582a7b0815e38cbe7742b814d3"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3933, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}