{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMzgxNjY4", "number": 9469, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNTo0MDowMlrOD_RDAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzo0OTozNFrOEBofyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjY2MTc4OnYy", "diffSide": "RIGHT", "path": "extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/PgPoolRecorder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNTo0MDowMlrOGZ1NOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNDoxMDoyNFrOGaCZPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczOTMyMA==", "bodyText": "We try to avoid import statements using *.", "url": "https://github.com/quarkusio/quarkus/pull/9469#discussion_r429739320", "createdAt": "2020-05-25T05:40:02Z", "author": {"login": "cescoffier"}, "path": "extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/PgPoolRecorder.java", "diffHunk": "@@ -2,6 +2,7 @@\n \n import static io.quarkus.credentials.CredentialsProvider.PASSWORD_PROPERTY_NAME;\n import static io.quarkus.credentials.CredentialsProvider.USER_PROPERTY_NAME;\n+import static io.quarkus.vertx.core.runtime.SSLConfigHelper.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35b2a349219b22f6a08aad14d455f02a7a62ea7e"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk1NTM5MA==", "bodyText": "Sorry, I will fix that", "url": "https://github.com/quarkusio/quarkus/pull/9469#discussion_r429955390", "createdAt": "2020-05-25T14:10:24Z", "author": {"login": "tsegismont"}, "path": "extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/PgPoolRecorder.java", "diffHunk": "@@ -2,6 +2,7 @@\n \n import static io.quarkus.credentials.CredentialsProvider.PASSWORD_PROPERTY_NAME;\n import static io.quarkus.credentials.CredentialsProvider.USER_PROPERTY_NAME;\n+import static io.quarkus.vertx.core.runtime.SSLConfigHelper.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczOTMyMA=="}, "originalCommit": {"oid": "35b2a349219b22f6a08aad14d455f02a7a62ea7e"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjY2MzUxOnYy", "diffSide": "RIGHT", "path": "extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/PgPoolRecorder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNTo0MToxNVrOGZ1OSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNDoxMTo0N1rOGaCbyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczOTU5NA==", "bodyText": "Shouldn't we break the chain if we already configured the options?\nIf you use PEM, the chances to also use JKS PFX are 0, no?", "url": "https://github.com/quarkusio/quarkus/pull/9469#discussion_r429739594", "createdAt": "2020-05-25T05:41:15Z", "author": {"login": "cescoffier"}, "path": "extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/PgPoolRecorder.java", "diffHunk": "@@ -121,6 +122,18 @@ private PgConnectOptions toPgConnectOptions(DataSourceRuntimeConfig dataSourceRu\n             pgConnectOptions.setPipeliningLimit(dataSourceReactivePostgreSQLConfig.pipeliningLimit.getAsInt());\n         }\n \n+        if (dataSourceReactivePostgreSQLConfig.sslMode.isPresent()) {\n+            pgConnectOptions.setSslMode(dataSourceReactivePostgreSQLConfig.sslMode.get());\n+        }\n+\n+        configurePemTrustOptions(pgConnectOptions, dataSourceReactivePostgreSQLConfig.trustCertificatePem);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35b2a349219b22f6a08aad14d455f02a7a62ea7e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk1NjA0MA==", "bodyText": "Actually we do, this is done in SSLHelper#ensureTrustOptionsNotSet.", "url": "https://github.com/quarkusio/quarkus/pull/9469#discussion_r429956040", "createdAt": "2020-05-25T14:11:47Z", "author": {"login": "tsegismont"}, "path": "extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/PgPoolRecorder.java", "diffHunk": "@@ -121,6 +122,18 @@ private PgConnectOptions toPgConnectOptions(DataSourceRuntimeConfig dataSourceRu\n             pgConnectOptions.setPipeliningLimit(dataSourceReactivePostgreSQLConfig.pipeliningLimit.getAsInt());\n         }\n \n+        if (dataSourceReactivePostgreSQLConfig.sslMode.isPresent()) {\n+            pgConnectOptions.setSslMode(dataSourceReactivePostgreSQLConfig.sslMode.get());\n+        }\n+\n+        configurePemTrustOptions(pgConnectOptions, dataSourceReactivePostgreSQLConfig.trustCertificatePem);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczOTU5NA=="}, "originalCommit": {"oid": "35b2a349219b22f6a08aad14d455f02a7a62ea7e"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NjY2NTQ1OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-core/runtime/src/main/java/io/quarkus/vertx/core/runtime/SSLConfigHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwNTo0Mjo0M1rOGZ1PjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQxNDoxNDoyM1rOGaCgeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczOTkxNw==", "bodyText": "This should be done directly in the config class. List are comma-separated by default. See the last example from https://github.com/eclipse/microprofile-config/blob/master/spec/src/main/asciidoc/configexamples.asciidoc.", "url": "https://github.com/quarkusio/quarkus/pull/9469#discussion_r429739917", "createdAt": "2020-05-25T05:42:43Z", "author": {"login": "cescoffier"}, "path": "extensions/vertx-core/runtime/src/main/java/io/quarkus/vertx/core/runtime/SSLConfigHelper.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package io.quarkus.vertx.core.runtime;\n+\n+import java.util.regex.Pattern;\n+\n+import io.quarkus.vertx.core.runtime.config.JksConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PemKeyCertConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PemTrustCertConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PfxConfiguration;\n+import io.vertx.core.net.*;\n+\n+public class SSLConfigHelper {\n+\n+    private static final Pattern COMMA_PATTERN = Pattern.compile(\",\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35b2a349219b22f6a08aad14d455f02a7a62ea7e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTk1NzI0MA==", "bodyText": "Thanks for pointing this out, I will update the config object.", "url": "https://github.com/quarkusio/quarkus/pull/9469#discussion_r429957240", "createdAt": "2020-05-25T14:14:23Z", "author": {"login": "tsegismont"}, "path": "extensions/vertx-core/runtime/src/main/java/io/quarkus/vertx/core/runtime/SSLConfigHelper.java", "diffHunk": "@@ -0,0 +1,119 @@\n+package io.quarkus.vertx.core.runtime;\n+\n+import java.util.regex.Pattern;\n+\n+import io.quarkus.vertx.core.runtime.config.JksConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PemKeyCertConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PemTrustCertConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PfxConfiguration;\n+import io.vertx.core.net.*;\n+\n+public class SSLConfigHelper {\n+\n+    private static final Pattern COMMA_PATTERN = Pattern.compile(\",\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTczOTkxNw=="}, "originalCommit": {"oid": "35b2a349219b22f6a08aad14d455f02a7a62ea7e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDMwMTU3OnYy", "diffSide": "RIGHT", "path": "extensions/reactive-datasource/runtime/src/main/java/io/quarkus/reactive/datasource/runtime/DataSourceReactiveRuntimeConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwODo1MDowOVrOGa_myw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMzo1ODo1MFrOGbLgaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk1ODI4Mw==", "bodyText": "This javadoc is used in the configuration reference doc. Thus it's better to avoid link to properties and also use the \"dash case\" versions that are used in config (so trust-certificate-jks for instance).", "url": "https://github.com/quarkusio/quarkus/pull/9469#discussion_r430958283", "createdAt": "2020-05-27T08:50:09Z", "author": {"login": "gsmet"}, "path": "extensions/reactive-datasource/runtime/src/main/java/io/quarkus/reactive/datasource/runtime/DataSourceReactiveRuntimeConfig.java", "diffHunk": "@@ -24,4 +28,58 @@\n      */\n     @ConfigItem\n     public OptionalInt maxSize;\n+\n+    /**\n+     * Whether all server certificates should be trusted.\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    public boolean trustAll;\n+\n+    /**\n+     * Trust configuration in the PEM format.\n+     * <p>\n+     * When enabled, {@link #trustCertificateJks} and {@link #trustCertificatePfx} must be disabled.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49343655e9ee5e5666360dd4f444f13358ea5807"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTE1MzI1Nw==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/9469#discussion_r431153257", "createdAt": "2020-05-27T13:58:50Z", "author": {"login": "tsegismont"}, "path": "extensions/reactive-datasource/runtime/src/main/java/io/quarkus/reactive/datasource/runtime/DataSourceReactiveRuntimeConfig.java", "diffHunk": "@@ -24,4 +28,58 @@\n      */\n     @ConfigItem\n     public OptionalInt maxSize;\n+\n+    /**\n+     * Whether all server certificates should be trusted.\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    public boolean trustAll;\n+\n+    /**\n+     * Trust configuration in the PEM format.\n+     * <p>\n+     * When enabled, {@link #trustCertificateJks} and {@link #trustCertificatePfx} must be disabled.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk1ODI4Mw=="}, "originalCommit": {"oid": "49343655e9ee5e5666360dd4f444f13358ea5807"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTQ2NTE1OnYy", "diffSide": "RIGHT", "path": "extensions/reactive-datasource/runtime/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzo0NjozMVrOGdl7TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwODozODowMFrOGdnvoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4MzI3Nw==", "bodyText": "So we are adding this dependency because of the reuse of some configuration class. I just want to be sure there is not a dragon hidden under a stone.", "url": "https://github.com/quarkusio/quarkus/pull/9469#discussion_r433683277", "createdAt": "2020-06-02T07:46:31Z", "author": {"login": "cescoffier"}, "path": "extensions/reactive-datasource/runtime/pom.xml", "diffHunk": "@@ -26,6 +26,10 @@\n             <groupId>io.quarkus</groupId>\n             <artifactId>quarkus-datasource</artifactId>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5030577e61b969367624b13ba1fd6fc1164c4715"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcxMzA1Nw==", "bodyText": "Yes, the dependency was added to share the ssl helper class.", "url": "https://github.com/quarkusio/quarkus/pull/9469#discussion_r433713057", "createdAt": "2020-06-02T08:38:00Z", "author": {"login": "tsegismont"}, "path": "extensions/reactive-datasource/runtime/pom.xml", "diffHunk": "@@ -26,6 +26,10 @@\n             <groupId>io.quarkus</groupId>\n             <artifactId>quarkus-datasource</artifactId>\n         </dependency>\n+        <dependency>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4MzI3Nw=="}, "originalCommit": {"oid": "5030577e61b969367624b13ba1fd6fc1164c4715"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMTQ3NTMxOnYy", "diffSide": "RIGHT", "path": "extensions/vertx-core/runtime/src/main/java/io/quarkus/vertx/core/runtime/SSLConfigHelper.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQwNzo0OTozNFrOGdmBsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzo1Nzo0NlrOGfRbgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4NDkxMw==", "bodyText": "@michalszynkiewicz Don't we have the same type of code in gRPC? Maybe we can reuse the same classes.", "url": "https://github.com/quarkusio/quarkus/pull/9469#discussion_r433684913", "createdAt": "2020-06-02T07:49:34Z", "author": {"login": "cescoffier"}, "path": "extensions/vertx-core/runtime/src/main/java/io/quarkus/vertx/core/runtime/SSLConfigHelper.java", "diffHunk": "@@ -0,0 +1,120 @@\n+package io.quarkus.vertx.core.runtime;\n+\n+import io.quarkus.vertx.core.runtime.config.JksConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PemKeyCertConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PemTrustCertConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PfxConfiguration;\n+import io.vertx.core.net.JksOptions;\n+import io.vertx.core.net.KeyCertOptions;\n+import io.vertx.core.net.PemKeyCertOptions;\n+import io.vertx.core.net.PemTrustOptions;\n+import io.vertx.core.net.PfxOptions;\n+import io.vertx.core.net.TCPSSLOptions;\n+\n+public class SSLConfigHelper {\n+\n+    public static void configurePemTrustOptions(TCPSSLOptions options, PemTrustCertConfiguration configuration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5030577e61b969367624b13ba1fd6fc1164c4715"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzcxNTExMA==", "bodyText": "@cescoffier can we do any follow-up work related to gRPC in another PR? If you and @gsmet are both fine with this one, it would be great to merge it so I can rebase #9644", "url": "https://github.com/quarkusio/quarkus/pull/9469#discussion_r433715110", "createdAt": "2020-06-02T08:41:30Z", "author": {"login": "tsegismont"}, "path": "extensions/vertx-core/runtime/src/main/java/io/quarkus/vertx/core/runtime/SSLConfigHelper.java", "diffHunk": "@@ -0,0 +1,120 @@\n+package io.quarkus.vertx.core.runtime;\n+\n+import io.quarkus.vertx.core.runtime.config.JksConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PemKeyCertConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PemTrustCertConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PfxConfiguration;\n+import io.vertx.core.net.JksOptions;\n+import io.vertx.core.net.KeyCertOptions;\n+import io.vertx.core.net.PemKeyCertOptions;\n+import io.vertx.core.net.PemTrustOptions;\n+import io.vertx.core.net.PfxOptions;\n+import io.vertx.core.net.TCPSSLOptions;\n+\n+public class SSLConfigHelper {\n+\n+    public static void configurePemTrustOptions(TCPSSLOptions options, PemTrustCertConfiguration configuration) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4NDkxMw=="}, "originalCommit": {"oid": "5030577e61b969367624b13ba1fd6fc1164c4715"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQ0NDYwOA==", "bodyText": "Yes @tsegismont, this is not an issue with this PR, it's a good idea to reuse them!", "url": "https://github.com/quarkusio/quarkus/pull/9469#discussion_r435444608", "createdAt": "2020-06-04T17:57:46Z", "author": {"login": "cescoffier"}, "path": "extensions/vertx-core/runtime/src/main/java/io/quarkus/vertx/core/runtime/SSLConfigHelper.java", "diffHunk": "@@ -0,0 +1,120 @@\n+package io.quarkus.vertx.core.runtime;\n+\n+import io.quarkus.vertx.core.runtime.config.JksConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PemKeyCertConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PemTrustCertConfiguration;\n+import io.quarkus.vertx.core.runtime.config.PfxConfiguration;\n+import io.vertx.core.net.JksOptions;\n+import io.vertx.core.net.KeyCertOptions;\n+import io.vertx.core.net.PemKeyCertOptions;\n+import io.vertx.core.net.PemTrustOptions;\n+import io.vertx.core.net.PfxOptions;\n+import io.vertx.core.net.TCPSSLOptions;\n+\n+public class SSLConfigHelper {\n+\n+    public static void configurePemTrustOptions(TCPSSLOptions options, PemTrustCertConfiguration configuration) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzY4NDkxMw=="}, "originalCommit": {"oid": "5030577e61b969367624b13ba1fd6fc1164c4715"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3115, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}