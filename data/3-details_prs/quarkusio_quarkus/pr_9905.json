{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMzY3NzUx", "number": 9905, "title": "Qute - replace the map-based html escaper with simplified impl", "bodyText": "this result mapper is used to replace some characters for HTML/XML\ntemplates", "createdAt": "2020-06-10T10:41:03Z", "url": "https://github.com/quarkusio/quarkus/pull/9905", "merged": true, "mergeCommit": {"oid": "51ceab1366b5c8c6e50e3349ae4a60b862572b30"}, "closed": true, "closedAt": "2020-06-11T17:04:28Z", "author": {"login": "mkouba"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcp3Qy3AH2gAyNDMyMzY3NzUxOjgyY2NkNzhiNTg3OTQxM2JkMTI1NGVhZmMzYmRhMDA2MGY3NmQzYWI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcp6w6nAFqTQyODEyOTk0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "82ccd78b5879413bd1254eafc3bda0060f76d3ab", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/82ccd78b5879413bd1254eafc3bda0060f76d3ab", "committedDate": "2020-06-10T10:40:06Z", "message": "Qute - replace the map-based html escaper with simplified impl\n\n- this result mapper is used to replace some characters for HTML/XML\ntemplates"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MTA0MTcz", "url": "https://github.com/quarkusio/quarkus/pull/9905#pullrequestreview-428104173", "createdAt": "2020-06-10T14:21:09Z", "commit": {"oid": "82ccd78b5879413bd1254eafc3bda0060f76d3ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDoyMTowOVrOGh3MkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDoyMTowOVrOGh3MkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE2MDUyOA==", "bodyText": "Instead of iterating through each character, maybe it's easier to create a Regexp?", "url": "https://github.com/quarkusio/quarkus/pull/9905#discussion_r438160528", "createdAt": "2020-06-10T14:21:09Z", "author": {"login": "gastaldi"}, "path": "extensions/qute/runtime/src/main/java/io/quarkus/qute/runtime/HtmlEscaper.java", "diffHunk": "@@ -0,0 +1,82 @@\n+package io.quarkus.qute.runtime;\n+\n+import java.util.Objects;\n+import java.util.Optional;\n+\n+import io.quarkus.qute.Expression;\n+import io.quarkus.qute.RawString;\n+import io.quarkus.qute.ResultMapper;\n+import io.quarkus.qute.TemplateNode.Origin;\n+import io.quarkus.qute.Variant;\n+\n+class HtmlEscaper implements ResultMapper {\n+\n+    @Override\n+    public boolean appliesTo(Origin origin, Object result) {\n+        if (result instanceof RawString) {\n+            return false;\n+        }\n+        Optional<Variant> variant = origin.getVariant();\n+        if (variant.isPresent()) {\n+            return requiresDefaultEscaping(variant.get());\n+        }\n+        return false;\n+    }\n+\n+    @Override\n+    public String map(Object result, Expression expression) {\n+        return escape(result.toString());\n+    }\n+\n+    String escape(CharSequence value) {\n+        if (Objects.requireNonNull(value).length() == 0) {\n+            return value.toString();\n+        }\n+        for (int i = 0; i < value.length(); i++) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82ccd78b5879413bd1254eafc3bda0060f76d3ab"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MTI5OTQ4", "url": "https://github.com/quarkusio/quarkus/pull/9905#pullrequestreview-428129948", "createdAt": "2020-06-10T14:44:54Z", "commit": {"oid": "82ccd78b5879413bd1254eafc3bda0060f76d3ab"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4324, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}