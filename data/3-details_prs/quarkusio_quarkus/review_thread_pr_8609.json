{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MTQzODE5", "number": 8609, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODowMDoxOFrODyYm-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMDowNzowNlrODybpYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MTU4NTg1OnYy", "diffSide": "RIGHT", "path": "extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwODowMDoxOFrOGGZN8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwOTo0NzozNVrOGGdYxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NzgxMQ==", "bodyText": "I'm pretty sure I've changed this code yesterday, you might want to rebase. (Wonder why GitHub doesn't complain...?)", "url": "https://github.com/quarkusio/quarkus/pull/8609#discussion_r409357811", "createdAt": "2020-04-16T08:00:18Z", "author": {"login": "Ladicek"}, "path": "extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java", "diffHunk": "@@ -22,13 +28,17 @@\n     @BuildStep\n     @Record(ExecutionTime.RUNTIME_INIT)\n     void setupTracer(JaegerDeploymentRecorder jdr, JaegerBuildTimeConfig buildTimeConfig, JaegerConfig jaeger,\n-            ApplicationConfig appConfig, Capabilities capabilities) {\n+            ApplicationConfig appConfig, Capabilities capabilities, BuildProducer<MetricBuildItem> metricProducer) {\n \n         // Indicates that this extension would like the SSL support to be enabled\n         extensionSslNativeSupport.produce(new ExtensionSslNativeSupportBuildItem(FeatureBuildItem.JAEGER));\n \n         if (buildTimeConfig.enabled) {\n-            boolean metricsEnabled = capabilities.isCapabilityPresent(Capabilities.METRICS);\n+            boolean metricsEnabled = capabilities.isCapabilityPresent(Capabilities.METRICS)\n+                    && buildTimeConfig.metricsEnabled;\n+            if (metricsEnabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a5b5765bce465357979934a3d88f8e6b938fb3b"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5MTU5OQ==", "bodyText": "Git was able to handle the rebase itself, but the code after rebase was ugly (two if(metricsEnabled) conditions after each other), so I fixed it up a bit", "url": "https://github.com/quarkusio/quarkus/pull/8609#discussion_r409391599", "createdAt": "2020-04-16T08:53:49Z", "author": {"login": "jmartisk"}, "path": "extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java", "diffHunk": "@@ -22,13 +28,17 @@\n     @BuildStep\n     @Record(ExecutionTime.RUNTIME_INIT)\n     void setupTracer(JaegerDeploymentRecorder jdr, JaegerBuildTimeConfig buildTimeConfig, JaegerConfig jaeger,\n-            ApplicationConfig appConfig, Capabilities capabilities) {\n+            ApplicationConfig appConfig, Capabilities capabilities, BuildProducer<MetricBuildItem> metricProducer) {\n \n         // Indicates that this extension would like the SSL support to be enabled\n         extensionSslNativeSupport.produce(new ExtensionSslNativeSupportBuildItem(FeatureBuildItem.JAEGER));\n \n         if (buildTimeConfig.enabled) {\n-            boolean metricsEnabled = capabilities.isCapabilityPresent(Capabilities.METRICS);\n+            boolean metricsEnabled = capabilities.isCapabilityPresent(Capabilities.METRICS)\n+                    && buildTimeConfig.metricsEnabled;\n+            if (metricsEnabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NzgxMQ=="}, "originalCommit": {"oid": "2a5b5765bce465357979934a3d88f8e6b938fb3b"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM5NjczNg==", "bodyText": "You don't need this first if then, right? It seems duplicate.", "url": "https://github.com/quarkusio/quarkus/pull/8609#discussion_r409396736", "createdAt": "2020-04-16T09:01:32Z", "author": {"login": "Ladicek"}, "path": "extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java", "diffHunk": "@@ -22,13 +28,17 @@\n     @BuildStep\n     @Record(ExecutionTime.RUNTIME_INIT)\n     void setupTracer(JaegerDeploymentRecorder jdr, JaegerBuildTimeConfig buildTimeConfig, JaegerConfig jaeger,\n-            ApplicationConfig appConfig, Capabilities capabilities) {\n+            ApplicationConfig appConfig, Capabilities capabilities, BuildProducer<MetricBuildItem> metricProducer) {\n \n         // Indicates that this extension would like the SSL support to be enabled\n         extensionSslNativeSupport.produce(new ExtensionSslNativeSupportBuildItem(FeatureBuildItem.JAEGER));\n \n         if (buildTimeConfig.enabled) {\n-            boolean metricsEnabled = capabilities.isCapabilityPresent(Capabilities.METRICS);\n+            boolean metricsEnabled = capabilities.isCapabilityPresent(Capabilities.METRICS)\n+                    && buildTimeConfig.metricsEnabled;\n+            if (metricsEnabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NzgxMQ=="}, "originalCommit": {"oid": "2a5b5765bce465357979934a3d88f8e6b938fb3b"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQyNjExNg==", "bodyText": "Hmm, yeah, seems I managed to mess it up. Fixed, thanks for noticing :D", "url": "https://github.com/quarkusio/quarkus/pull/8609#discussion_r409426116", "createdAt": "2020-04-16T09:47:35Z", "author": {"login": "jmartisk"}, "path": "extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java", "diffHunk": "@@ -22,13 +28,17 @@\n     @BuildStep\n     @Record(ExecutionTime.RUNTIME_INIT)\n     void setupTracer(JaegerDeploymentRecorder jdr, JaegerBuildTimeConfig buildTimeConfig, JaegerConfig jaeger,\n-            ApplicationConfig appConfig, Capabilities capabilities) {\n+            ApplicationConfig appConfig, Capabilities capabilities, BuildProducer<MetricBuildItem> metricProducer) {\n \n         // Indicates that this extension would like the SSL support to be enabled\n         extensionSslNativeSupport.produce(new ExtensionSslNativeSupportBuildItem(FeatureBuildItem.JAEGER));\n \n         if (buildTimeConfig.enabled) {\n-            boolean metricsEnabled = capabilities.isCapabilityPresent(Capabilities.METRICS);\n+            boolean metricsEnabled = capabilities.isCapabilityPresent(Capabilities.METRICS)\n+                    && buildTimeConfig.metricsEnabled;\n+            if (metricsEnabled) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTM1NzgxMQ=="}, "originalCommit": {"oid": "2a5b5765bce465357979934a3d88f8e6b938fb3b"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MjA4MzUzOnYy", "diffSide": "RIGHT", "path": "extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMDowNzowNlrOGGeIfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwNzoyMDo1MVrOGIGnxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzODMzNQ==", "bodyText": "Is there any test that checks that these metrics are actually reported by Jaeger and alternatively also report that new metrics are reported by Jaeger client?", "url": "https://github.com/quarkusio/quarkus/pull/8609#discussion_r409438335", "createdAt": "2020-04-16T10:07:06Z", "author": {"login": "pavolloffay"}, "path": "extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java", "diffHunk": "@@ -43,4 +50,51 @@ public void build(BuildProducer<FeatureBuildItem> feature) {\n         feature.produce(new FeatureBuildItem(FeatureBuildItem.JAEGER));\n     }\n \n+    private void produceMetrics(BuildProducer<MetricBuildItem> producer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4fbdbbd5e22d0ba571ab1a608a42a3b503480fe"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ0Nzk4OQ==", "bodyText": "None that I'm aware of, Jaeger tests in Quarkus codebase are extremely basic because they don't spin up an actual Jaeger instance so there's not much that we can actually test... That would need a wholly new test suite I think.", "url": "https://github.com/quarkusio/quarkus/pull/8609#discussion_r409447989", "createdAt": "2020-04-16T10:23:28Z", "author": {"login": "jmartisk"}, "path": "extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java", "diffHunk": "@@ -43,4 +50,51 @@ public void build(BuildProducer<FeatureBuildItem> feature) {\n         feature.produce(new FeatureBuildItem(FeatureBuildItem.JAEGER));\n     }\n \n+    private void produceMetrics(BuildProducer<MetricBuildItem> producer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzODMzNQ=="}, "originalCommit": {"oid": "e4fbdbbd5e22d0ba571ab1a608a42a3b503480fe"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQ1MDEwMA==", "bodyText": "We could probably use testcontainers for that - we do use it in some places.", "url": "https://github.com/quarkusio/quarkus/pull/8609#discussion_r409450100", "createdAt": "2020-04-16T10:27:05Z", "author": {"login": "geoand"}, "path": "extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java", "diffHunk": "@@ -43,4 +50,51 @@ public void build(BuildProducer<FeatureBuildItem> feature) {\n         feature.produce(new FeatureBuildItem(FeatureBuildItem.JAEGER));\n     }\n \n+    private void produceMetrics(BuildProducer<MetricBuildItem> producer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzODMzNQ=="}, "originalCommit": {"oid": "e4fbdbbd5e22d0ba571ab1a608a42a3b503480fe"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIyNjI2NA==", "bodyText": "I thought that these metrics were reported by the Jaeger client not the server.\nThis article might help to test jaeger with test containers https://medium.com/jaegertracing/generating-jaeger-grpc-services-and-using-jaeger-in-junit-with-testcontainers-ac08a6e4e1c", "url": "https://github.com/quarkusio/quarkus/pull/8609#discussion_r410226264", "createdAt": "2020-04-17T13:35:21Z", "author": {"login": "pavolloffay"}, "path": "extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java", "diffHunk": "@@ -43,4 +50,51 @@ public void build(BuildProducer<FeatureBuildItem> feature) {\n         feature.produce(new FeatureBuildItem(FeatureBuildItem.JAEGER));\n     }\n \n+    private void produceMetrics(BuildProducer<MetricBuildItem> producer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzODMzNQ=="}, "originalCommit": {"oid": "e4fbdbbd5e22d0ba571ab1a608a42a3b503480fe"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTEyMzgxNQ==", "bodyText": "The metrics are computed by the client, but they seem to be updated after succesfully reporting the related data to the server, so if there's no server connection, then the generated metrics don't make much sense (for example, the counter of finished spans seems to be incremented once that span is reported to the server).", "url": "https://github.com/quarkusio/quarkus/pull/8609#discussion_r411123815", "createdAt": "2020-04-20T06:26:57Z", "author": {"login": "jmartisk"}, "path": "extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java", "diffHunk": "@@ -43,4 +50,51 @@ public void build(BuildProducer<FeatureBuildItem> feature) {\n         feature.produce(new FeatureBuildItem(FeatureBuildItem.JAEGER));\n     }\n \n+    private void produceMetrics(BuildProducer<MetricBuildItem> producer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzODMzNQ=="}, "originalCommit": {"oid": "e4fbdbbd5e22d0ba571ab1a608a42a3b503480fe"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTE1MDI3OQ==", "bodyText": "I reported #8680 for the new tests so we don't forget about it", "url": "https://github.com/quarkusio/quarkus/pull/8609#discussion_r411150279", "createdAt": "2020-04-20T07:20:51Z", "author": {"login": "jmartisk"}, "path": "extensions/jaeger/deployment/src/main/java/io/quarkus/jaeger/deployment/JaegerProcessor.java", "diffHunk": "@@ -43,4 +50,51 @@ public void build(BuildProducer<FeatureBuildItem> feature) {\n         feature.produce(new FeatureBuildItem(FeatureBuildItem.JAEGER));\n     }\n \n+    private void produceMetrics(BuildProducer<MetricBuildItem> producer) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTQzODMzNQ=="}, "originalCommit": {"oid": "e4fbdbbd5e22d0ba571ab1a608a42a3b503480fe"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3524, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}