{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4ODY2MjEy", "number": 11420, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMTowNzo0N1rOEZRgvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMTowNzo0N1rOEZRgvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0OTM2NzY1OnYy", "diffSide": "RIGHT", "path": "extensions/undertow/deployment/src/main/java/io/quarkus/undertow/deployment/UndertowBuildStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMTowNzo0OFrOHB_0Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMToxNDo1MVrOHB_7pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1NjE5MA==", "bodyText": "this should not be an error. 3rd party jars sometimes define these in web-framgement.xml, with the intention the application can map them if required.", "url": "https://github.com/quarkusio/quarkus/pull/11420#discussion_r471856190", "createdAt": "2020-08-18T01:07:48Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/undertow/deployment/src/main/java/io/quarkus/undertow/deployment/UndertowBuildStep.java", "diffHunk": "@@ -417,16 +417,34 @@ public ServletDeploymentManagerBuildItem build(List<ServletBuildItem> servlets,\n         }\n         if (webMetaData.getFilterMappings() != null) {\n             for (FilterMappingMetaData mapping : webMetaData.getFilterMappings()) {\n-                for (String m : mapping.getUrlPatterns()) {\n-                    if (mapping.getDispatchers() == null || mapping.getDispatchers().isEmpty()) {\n-                        recorder.addFilterURLMapping(deployment, mapping.getFilterName(), m, REQUEST);\n-                    } else {\n-\n-                        for (DispatcherType dispatcher : mapping.getDispatchers()) {\n-                            recorder.addFilterURLMapping(deployment, mapping.getFilterName(), m,\n-                                    javax.servlet.DispatcherType.valueOf(dispatcher.name()));\n+                List<String> urlPatterns = mapping.getUrlPatterns();\n+                List<String> servletNames = mapping.getServletNames();\n+                if (urlPatterns != null && !urlPatterns.isEmpty()) {\n+                    for (String m : urlPatterns) {\n+                        if (mapping.getDispatchers() == null || mapping.getDispatchers().isEmpty()) {\n+                            recorder.addFilterURLMapping(deployment, mapping.getFilterName(), m, REQUEST);\n+                        } else {\n+                            for (DispatcherType dispatcher : mapping.getDispatchers()) {\n+                                recorder.addFilterURLMapping(deployment, mapping.getFilterName(), m,\n+                                        javax.servlet.DispatcherType.valueOf(dispatcher.name()));\n+                            }\n+                        }\n+                    }\n+                } else if (servletNames != null && !servletNames.isEmpty()) {\n+                    // No URL Patterns found, map to servlet name instead\n+                    for (String name : servletNames) {\n+                        if (mapping.getDispatchers() == null || mapping.getDispatchers().isEmpty()) {\n+                            recorder.addFilterServletNameMapping(deployment, mapping.getFilterName(), name, REQUEST);\n+                        } else {\n+                            for (DispatcherType dispatcher : mapping.getDispatchers()) {\n+                                recorder.addFilterServletNameMapping(deployment, mapping.getFilterName(), name,\n+                                        javax.servlet.DispatcherType.valueOf(dispatcher.name()));\n+                            }\n                         }\n                     }\n+                } else {\n+                    throw new IllegalStateException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aab50b33a17d5d6c6fed284e19c9c9b9b4223937"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1ODA4NQ==", "bodyText": "Ok, exception removed", "url": "https://github.com/quarkusio/quarkus/pull/11420#discussion_r471858085", "createdAt": "2020-08-18T01:14:51Z", "author": {"login": "gastaldi"}, "path": "extensions/undertow/deployment/src/main/java/io/quarkus/undertow/deployment/UndertowBuildStep.java", "diffHunk": "@@ -417,16 +417,34 @@ public ServletDeploymentManagerBuildItem build(List<ServletBuildItem> servlets,\n         }\n         if (webMetaData.getFilterMappings() != null) {\n             for (FilterMappingMetaData mapping : webMetaData.getFilterMappings()) {\n-                for (String m : mapping.getUrlPatterns()) {\n-                    if (mapping.getDispatchers() == null || mapping.getDispatchers().isEmpty()) {\n-                        recorder.addFilterURLMapping(deployment, mapping.getFilterName(), m, REQUEST);\n-                    } else {\n-\n-                        for (DispatcherType dispatcher : mapping.getDispatchers()) {\n-                            recorder.addFilterURLMapping(deployment, mapping.getFilterName(), m,\n-                                    javax.servlet.DispatcherType.valueOf(dispatcher.name()));\n+                List<String> urlPatterns = mapping.getUrlPatterns();\n+                List<String> servletNames = mapping.getServletNames();\n+                if (urlPatterns != null && !urlPatterns.isEmpty()) {\n+                    for (String m : urlPatterns) {\n+                        if (mapping.getDispatchers() == null || mapping.getDispatchers().isEmpty()) {\n+                            recorder.addFilterURLMapping(deployment, mapping.getFilterName(), m, REQUEST);\n+                        } else {\n+                            for (DispatcherType dispatcher : mapping.getDispatchers()) {\n+                                recorder.addFilterURLMapping(deployment, mapping.getFilterName(), m,\n+                                        javax.servlet.DispatcherType.valueOf(dispatcher.name()));\n+                            }\n+                        }\n+                    }\n+                } else if (servletNames != null && !servletNames.isEmpty()) {\n+                    // No URL Patterns found, map to servlet name instead\n+                    for (String name : servletNames) {\n+                        if (mapping.getDispatchers() == null || mapping.getDispatchers().isEmpty()) {\n+                            recorder.addFilterServletNameMapping(deployment, mapping.getFilterName(), name, REQUEST);\n+                        } else {\n+                            for (DispatcherType dispatcher : mapping.getDispatchers()) {\n+                                recorder.addFilterServletNameMapping(deployment, mapping.getFilterName(), name,\n+                                        javax.servlet.DispatcherType.valueOf(dispatcher.name()));\n+                            }\n                         }\n                     }\n+                } else {\n+                    throw new IllegalStateException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg1NjE5MA=="}, "originalCommit": {"oid": "aab50b33a17d5d6c6fed284e19c9c9b9b4223937"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 581, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}