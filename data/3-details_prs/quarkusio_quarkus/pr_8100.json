{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyNzYzNTQ4", "number": 8100, "title": "Exclude deps of extensions as well", "bodyText": "Fixes #8069", "createdAt": "2020-03-24T04:04:23Z", "url": "https://github.com/quarkusio/quarkus/pull/8100", "merged": true, "mergeCommit": {"oid": "4ac53b8775642814e5d807a63a7f1cfec4af2a68"}, "closed": true, "closedAt": "2020-03-24T09:28:58Z", "author": {"login": "stuartwdouglas"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQq15OgH2gAyMzkyNzYzNTQ4OjA3NWJmNzBkOGU0OTg4NDBiM2M1N2QyNTI1YTUxM2Y4NzE2NjFjZmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQuyhMgFqTM4MDA5NTA2Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "075bf70d8e498840b3c57d2525a513f871661cfa", "author": {"user": {"login": "stuartwdouglas", "name": "Stuart Douglas"}}, "url": "https://github.com/quarkusio/quarkus/commit/075bf70d8e498840b3c57d2525a513f871661cfa", "committedDate": "2020-03-24T04:03:45Z", "message": "Exclude deps of extensions as well\n\nFixes #8069"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMDg0Njg2", "url": "https://github.com/quarkusio/quarkus/pull/8100#pullrequestreview-380084686", "createdAt": "2020-03-24T08:24:09Z", "commit": {"oid": "075bf70d8e498840b3c57d2525a513f871661cfa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMDk1MDY2", "url": "https://github.com/quarkusio/quarkus/pull/8100#pullrequestreview-380095066", "createdAt": "2020-03-24T08:39:40Z", "commit": {"oid": "075bf70d8e498840b3c57d2525a513f871661cfa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwODozOTo0MFrOF6ly7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwODozOTo0MFrOF6ly7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njk4MDk3NQ==", "bodyText": "How about we log a warning here? I think it may be pretty helpful.", "url": "https://github.com/quarkusio/quarkus/pull/8100#discussion_r396980975", "createdAt": "2020-03-24T08:39:40Z", "author": {"login": "aloubyansky"}, "path": "devtools/maven/src/main/java/io/quarkus/maven/DevMojo.java", "diffHunk": "@@ -753,4 +749,52 @@ public void stop() throws InterruptedException {\n         }\n \n     }\n+\n+    private List<LocalProject> filterExtensionDependencies(LocalProject localProject) {\n+        List<LocalProject> ret = new ArrayList<>();\n+        Queue<LocalProject> toRemove = new ArrayDeque<>();\n+        Set<AppArtifactKey> extensionsAndDeps = new HashSet<>();\n+        Set<AppArtifactKey> inProject = new HashSet<>();\n+\n+        for (LocalProject project : localProject.getSelfWithLocalDeps()) {\n+            inProject.add(project.getKey());\n+            if (project.getClassesDir() != null &&\n+            //if this project also contains Quarkus extensions we do no want to include these in the discovery\n+            //a bit of an edge case, but if you try and include a sample project with your extension you will\n+            //run into problems without this\n+                    (Files.exists(project.getClassesDir().resolve(\"META-INF/quarkus-extension.properties\")) ||\n+                            Files.exists(project.getClassesDir().resolve(\"META-INF/quarkus-build-steps.list\")))) {\n+                toRemove.add(project);\n+                extensionsAndDeps.add(project.getKey());\n+            } else {\n+                ret.add(project);\n+            }\n+        }\n+        if (toRemove.isEmpty()) {\n+            return ret;\n+        }\n+        //we also remove transitive deps of the extensions\n+        //this is common in projects that provide a library, and a quarkus extension for that library\n+        //all in the same project\n+        while (!toRemove.isEmpty()) {\n+            LocalProject dep = toRemove.poll();\n+            //we don't need to resolve deps properly, this is all in the same project\n+            //so we have all the info we need locally\n+            for (Dependency i : dep.getRawModel().getDependencies()) {\n+                AppArtifactKey key = new AppArtifactKey(i.getGroupId(), i.getArtifactId(), i.getClassifier());\n+                if (inProject.contains(key) && !extensionsAndDeps.contains(key)) {\n+                    extensionsAndDeps.add(key);\n+                    toRemove.add(localProject.getWorkspace().getProject(key));\n+                }\n+            }\n+        }\n+        Iterator<LocalProject> iterator = ret.iterator();\n+        while (iterator.hasNext()) {\n+            LocalProject obj = iterator.next();\n+            if (extensionsAndDeps.contains(obj.getKey())) {\n+                iterator.remove();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "075bf70d8e498840b3c57d2525a513f871661cfa"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3587, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}