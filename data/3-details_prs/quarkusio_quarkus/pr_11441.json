{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5NTAyMjg4", "number": 11441, "title": "Add Kotlin support for MongoDB Panache", "bodyText": "resubmitting with fixed tests:  implement kotlin support for mongodb panache", "createdAt": "2020-08-18T13:33:46Z", "url": "https://github.com/quarkusio/quarkus/pull/11441", "merged": true, "mergeCommit": {"oid": "669677000f1f898376c8250f41fa87017ad20b26"}, "closed": true, "closedAt": "2020-08-20T17:58:40Z", "author": {"login": "evanchooly"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAwogFgH2gAyNDY5NTAyMjg4OmM2MDA3MGI1ZWJlZDI0YzQwYjI4MzZkMTNmY2Q0MWM3ZDgxMmNhNTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdA_hPrAFqTQ3MjI1OTM4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c60070b5ebed24c40b2836d13fcd41c7d812ca57", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/c60070b5ebed24c40b2836d13fcd41c7d812ca57", "committedDate": "2020-08-20T13:56:55Z", "message": "fix failing tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66ff4f130a858ae53d8746be8f266774b1b6e522", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/66ff4f130a858ae53d8746be8f266774b1b6e522", "committedDate": "2020-08-20T13:56:56Z", "message": "implement kotlin support for mongodb panache\n\n(cherry picked from commit 0adc1d3d82403733cdaa76e735b1b8f398505172)"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d5389313aceeb7b71fa38e41850b5ba3e72ced4", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/8d5389313aceeb7b71fa38e41850b5ba3e72ced4", "committedDate": "2020-08-18T13:29:57Z", "message": "implement kotlin support for mongodb panache\n\n(cherry picked from commit 0adc1d3d82403733cdaa76e735b1b8f398505172)"}, "afterCommit": {"oid": "66ff4f130a858ae53d8746be8f266774b1b6e522", "author": {"user": null}, "url": "https://github.com/quarkusio/quarkus/commit/66ff4f130a858ae53d8746be8f266774b1b6e522", "committedDate": "2020-08-20T13:56:56Z", "message": "implement kotlin support for mongodb panache\n\n(cherry picked from commit 0adc1d3d82403733cdaa76e735b1b8f398505172)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODU0OTQw", "url": "https://github.com/quarkusio/quarkus/pull/11441#pullrequestreview-471854940", "createdAt": "2020-08-20T17:57:16Z", "commit": {"oid": "66ff4f130a858ae53d8746be8f266774b1b6e522"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMjU5Mzg3", "url": "https://github.com/quarkusio/quarkus/pull/11441#pullrequestreview-472259387", "createdAt": "2020-08-21T07:17:33Z", "commit": {"oid": "66ff4f130a858ae53d8746be8f266774b1b6e522"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNzoxNzozM1rOHEeuyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNzoxNzozM1rOHEeuyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ1OTg0OQ==", "bodyText": "Is double missing here?", "url": "https://github.com/quarkusio/quarkus/pull/11441#discussion_r474459849", "createdAt": "2020-08-21T07:17:33Z", "author": {"login": "Ladicek"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/util/AsmUtil.java", "diffHunk": "@@ -20,6 +33,36 @@\n  */\n public class AsmUtil {\n \n+    public static final List<org.objectweb.asm.Type> PRIMITIVES = asList(\n+            VOID_TYPE,\n+            BOOLEAN_TYPE,\n+            CHAR_TYPE,\n+            BYTE_TYPE,\n+            SHORT_TYPE,\n+            INT_TYPE,\n+            FLOAT_TYPE,\n+            LONG_TYPE);\n+    public static final List<org.objectweb.asm.Type> WRAPPERS = asList(\n+            getType(Void.class),\n+            getType(Boolean.class),\n+            getType(Character.class),\n+            getType(Byte.class),\n+            getType(Short.class),\n+            getType(Integer.class),\n+            getType(Float.class),\n+            getType(Long.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66ff4f130a858ae53d8746be8f266774b1b6e522"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 805, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}