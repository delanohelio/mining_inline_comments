{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3Mjg5NTU1", "number": 10630, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTo0MDo1OFrOENZR0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTo0Mjo0MlrOENZTgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDgxMTA0OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/reactive-routes.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTo0MDo1OFrOGwDmCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxMzowMjo0NFrOGwMtbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0MzcyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Furhtermore, it is possible to inject the `HttpServerRequest` parameters into a method parameter annotated with `@io.quarkus.vertx.web.Param`:\n          \n          \n            \n            Furthermore, it is possible to inject the `HttpServerRequest` parameters into a method parameter annotated with `@io.quarkus.vertx.web.Param`:", "url": "https://github.com/quarkusio/quarkus/pull/10630#discussion_r453043721", "createdAt": "2020-07-10T19:40:58Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/reactive-routes.adoc", "diffHunk": "@@ -193,10 +196,70 @@ The annotated method can accept arguments of the following types:\n * `io.vertx.reactivex.core.http.HttpServerRequest`\n * `io.vertx.reactivex.core.http.HttpServerResponse`\n \n-If the annotated method returns `void` then it has to accept at least one argument. \n-If the annotated method does not return `void` then the arguments are optional.\n+Furhtermore, it is possible to inject the `HttpServerRequest` parameters into a method parameter annotated with `@io.quarkus.vertx.web.Param`:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dadba754f3c81764e24c6106eee81d9593bc15d"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5MzA3MQ==", "bodyText": "Thanks for spotting this!", "url": "https://github.com/quarkusio/quarkus/pull/10630#discussion_r453193071", "createdAt": "2020-07-11T13:02:44Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/reactive-routes.adoc", "diffHunk": "@@ -193,10 +196,70 @@ The annotated method can accept arguments of the following types:\n * `io.vertx.reactivex.core.http.HttpServerRequest`\n * `io.vertx.reactivex.core.http.HttpServerResponse`\n \n-If the annotated method returns `void` then it has to accept at least one argument. \n-If the annotated method does not return `void` then the arguments are optional.\n+Furhtermore, it is possible to inject the `HttpServerRequest` parameters into a method parameter annotated with `@io.quarkus.vertx.web.Param`:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0MzcyMQ=="}, "originalCommit": {"oid": "7dadba754f3c81764e24c6106eee81d9593bc15d"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNDgxNTM3OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/reactive-routes.adoc", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTo0Mjo0MlrOGwDoxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwODozMjo1OFrOGweXcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0NDQyMQ==", "bodyText": "Isn't a compilation flag required to read method parameter names?", "url": "https://github.com/quarkusio/quarkus/pull/10630#discussion_r453044421", "createdAt": "2020-07-10T19:42:42Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/reactive-routes.adoc", "diffHunk": "@@ -193,10 +196,70 @@ The annotated method can accept arguments of the following types:\n * `io.vertx.reactivex.core.http.HttpServerRequest`\n * `io.vertx.reactivex.core.http.HttpServerResponse`\n \n-If the annotated method returns `void` then it has to accept at least one argument. \n-If the annotated method does not return `void` then the arguments are optional.\n+Furhtermore, it is possible to inject the `HttpServerRequest` parameters into a method parameter annotated with `@io.quarkus.vertx.web.Param`:\n+\n+[options=\"header\",cols=\"1,1\"]\n+|===\n+|Parameter Type   | Obtained via  \n+//-------------\n+|`java.lang.String`   |`routingContext.request().getParam()`   \n+|`java.util.Optional<String>`   |`routingContext.request().getParam()`   \n+|`java.util.List<String>`   |`routingContext.request().params().getAll()`\n+|===\n+\n+.Request Parameter Example\n+[source,java]\n+----\n+@Route\n+String hello(@Param Optional<String> name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dadba754f3c81764e24c6106eee81d9593bc15d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE5Mzg1MA==", "bodyText": "You're right. We should improve the error message...", "url": "https://github.com/quarkusio/quarkus/pull/10630#discussion_r453193850", "createdAt": "2020-07-11T13:13:03Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/reactive-routes.adoc", "diffHunk": "@@ -193,10 +196,70 @@ The annotated method can accept arguments of the following types:\n * `io.vertx.reactivex.core.http.HttpServerRequest`\n * `io.vertx.reactivex.core.http.HttpServerResponse`\n \n-If the annotated method returns `void` then it has to accept at least one argument. \n-If the annotated method does not return `void` then the arguments are optional.\n+Furhtermore, it is possible to inject the `HttpServerRequest` parameters into a method parameter annotated with `@io.quarkus.vertx.web.Param`:\n+\n+[options=\"header\",cols=\"1,1\"]\n+|===\n+|Parameter Type   | Obtained via  \n+//-------------\n+|`java.lang.String`   |`routingContext.request().getParam()`   \n+|`java.util.Optional<String>`   |`routingContext.request().getParam()`   \n+|`java.util.List<String>`   |`routingContext.request().params().getAll()`\n+|===\n+\n+.Request Parameter Example\n+[source,java]\n+----\n+@Route\n+String hello(@Param Optional<String> name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0NDQyMQ=="}, "originalCommit": {"oid": "7dadba754f3c81764e24c6106eee81d9593bc15d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzQ4MjM1Mw==", "bodyText": "FYI: #4632 (comment)", "url": "https://github.com/quarkusio/quarkus/pull/10630#discussion_r453482353", "createdAt": "2020-07-13T08:32:58Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/reactive-routes.adoc", "diffHunk": "@@ -193,10 +196,70 @@ The annotated method can accept arguments of the following types:\n * `io.vertx.reactivex.core.http.HttpServerRequest`\n * `io.vertx.reactivex.core.http.HttpServerResponse`\n \n-If the annotated method returns `void` then it has to accept at least one argument. \n-If the annotated method does not return `void` then the arguments are optional.\n+Furhtermore, it is possible to inject the `HttpServerRequest` parameters into a method parameter annotated with `@io.quarkus.vertx.web.Param`:\n+\n+[options=\"header\",cols=\"1,1\"]\n+|===\n+|Parameter Type   | Obtained via  \n+//-------------\n+|`java.lang.String`   |`routingContext.request().getParam()`   \n+|`java.util.Optional<String>`   |`routingContext.request().getParam()`   \n+|`java.util.List<String>`   |`routingContext.request().params().getAll()`\n+|===\n+\n+.Request Parameter Example\n+[source,java]\n+----\n+@Route\n+String hello(@Param Optional<String> name) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA0NDQyMQ=="}, "originalCommit": {"oid": "7dadba754f3c81764e24c6106eee81d9593bc15d"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2435, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}