{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NzA4NjI5", "number": 7630, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOToxMToyNFrODlubaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOToxMToyNFrODlubaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwODg0NTg3OnYy", "diffSide": "RIGHT", "path": "extensions/resteasy-common/deployment/src/main/java/io/quarkus/resteasy/common/deployment/ResteasyCommonProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOToxMToyNFrOFyxs0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwOToxOTowMlrOFyx6WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NzQwOQ==", "bodyText": "javax.enterprise.inject.Instance is also legal... and it extends Provider ;-).", "url": "https://github.com/quarkusio/quarkus/pull/7630#discussion_r388787409", "createdAt": "2020-03-06T09:11:24Z", "author": {"login": "mkouba"}, "path": "extensions/resteasy-common/deployment/src/main/java/io/quarkus/resteasy/common/deployment/ResteasyCommonProcessor.java", "diffHunk": "@@ -187,6 +191,29 @@ JaxrsProvidersToRegisterBuildItem setupProviders(BuildProducer<ReflectiveClassBu\n         return new JaxrsProvidersToRegisterBuildItem(providersToRegister, contributedProviders, useBuiltinProviders);\n     }\n \n+    private void checkProperConfigAccessInProvider(AnnotationInstance instance) {\n+        List<AnnotationInstance> configPropertyInstances = instance.target().asClass().annotations()\n+                .get(ResteasyDotNames.CONFIG_PROPERTY);\n+        if (configPropertyInstances == null) {\n+            return;\n+        }\n+        for (AnnotationInstance configPropertyInstance : configPropertyInstances) {\n+            if (configPropertyInstance.target().kind() != AnnotationTarget.Kind.FIELD) {\n+                continue;\n+            }\n+            FieldInfo field = configPropertyInstance.target().asField();\n+            Type fieldType = field.type();\n+            if (ResteasyDotNames.CDI_PROVIDER.equals(fieldType.name())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75eed1df654b3560f1cbd2ea944efa8ff1655b89"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4OTQ0MA==", "bodyText": "Actually I think we should just propose Instance since the name doesn't class with the JAX-RS Provider. WDYT?", "url": "https://github.com/quarkusio/quarkus/pull/7630#discussion_r388789440", "createdAt": "2020-03-06T09:15:58Z", "author": {"login": "geoand"}, "path": "extensions/resteasy-common/deployment/src/main/java/io/quarkus/resteasy/common/deployment/ResteasyCommonProcessor.java", "diffHunk": "@@ -187,6 +191,29 @@ JaxrsProvidersToRegisterBuildItem setupProviders(BuildProducer<ReflectiveClassBu\n         return new JaxrsProvidersToRegisterBuildItem(providersToRegister, contributedProviders, useBuiltinProviders);\n     }\n \n+    private void checkProperConfigAccessInProvider(AnnotationInstance instance) {\n+        List<AnnotationInstance> configPropertyInstances = instance.target().asClass().annotations()\n+                .get(ResteasyDotNames.CONFIG_PROPERTY);\n+        if (configPropertyInstances == null) {\n+            return;\n+        }\n+        for (AnnotationInstance configPropertyInstance : configPropertyInstances) {\n+            if (configPropertyInstance.target().kind() != AnnotationTarget.Kind.FIELD) {\n+                continue;\n+            }\n+            FieldInfo field = configPropertyInstance.target().asField();\n+            Type fieldType = field.type();\n+            if (ResteasyDotNames.CDI_PROVIDER.equals(fieldType.name())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NzQwOQ=="}, "originalCommit": {"oid": "75eed1df654b3560f1cbd2ea944efa8ff1655b89"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc5MDg3Mw==", "bodyText": "Fixed", "url": "https://github.com/quarkusio/quarkus/pull/7630#discussion_r388790873", "createdAt": "2020-03-06T09:19:02Z", "author": {"login": "geoand"}, "path": "extensions/resteasy-common/deployment/src/main/java/io/quarkus/resteasy/common/deployment/ResteasyCommonProcessor.java", "diffHunk": "@@ -187,6 +191,29 @@ JaxrsProvidersToRegisterBuildItem setupProviders(BuildProducer<ReflectiveClassBu\n         return new JaxrsProvidersToRegisterBuildItem(providersToRegister, contributedProviders, useBuiltinProviders);\n     }\n \n+    private void checkProperConfigAccessInProvider(AnnotationInstance instance) {\n+        List<AnnotationInstance> configPropertyInstances = instance.target().asClass().annotations()\n+                .get(ResteasyDotNames.CONFIG_PROPERTY);\n+        if (configPropertyInstances == null) {\n+            return;\n+        }\n+        for (AnnotationInstance configPropertyInstance : configPropertyInstances) {\n+            if (configPropertyInstance.target().kind() != AnnotationTarget.Kind.FIELD) {\n+                continue;\n+            }\n+            FieldInfo field = configPropertyInstance.target().asField();\n+            Type fieldType = field.type();\n+            if (ResteasyDotNames.CDI_PROVIDER.equals(fieldType.name())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODc4NzQwOQ=="}, "originalCommit": {"oid": "75eed1df654b3560f1cbd2ea944efa8ff1655b89"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4927, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}