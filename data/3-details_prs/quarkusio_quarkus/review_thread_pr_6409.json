{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU5MzI1MjQ3", "number": 6409, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxOTozMzo1MVrODV20bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNzoxMzowNlrODV5s3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjQ0ODQ0OnYy", "diffSide": "LEFT", "path": "docs/src/main/asciidoc/neo4j.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxOTozMzo1MVrOFaSn3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxOTozMzo1MVrOFaSn3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjQxNA==", "bodyText": "There's still a note above the warning you removed which mentions that it is preview.", "url": "https://github.com/quarkusio/quarkus/pull/6409#discussion_r363112414", "createdAt": "2020-01-05T19:33:51Z", "author": {"login": "gunnarmorling"}, "path": "docs/src/main/asciidoc/neo4j.adoc", "diffHunk": "@@ -4,10 +4,9 @@ and pull requests should be submitted there:\n https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n ////\n = Quarkus - Neo4j\n-:neo4j_version: 3.5.13\n+:neo4j_version: 4.0.0\n \n include::./attributes.adoc[]\n-:extension-status: preview", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cdc3a910b52e67cbff9f2bd1818bf3b6ada818d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjQ1MDc2OnYy", "diffSide": "LEFT", "path": "docs/src/main/asciidoc/neo4j.adoc", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNVQxOTozOToxM1rOFaSpEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNzoyMzoyNVrOFaW43w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjcyMg==", "bodyText": "Not related to the change itself, but rather to the entire method: this is 22 lines for a single get-by-id call :(\nI understand it's all async and non-blocking and so on, but e.g. in comparison to Panache where this would be one line essentially, the signal-to-noise ratio seems not great. Is there any way for simplifying this? Perhaps first show imperative, too, before going to async/reactive?", "url": "https://github.com/quarkusio/quarkus/pull/6409#discussion_r363112722", "createdAt": "2020-01-05T19:39:13Z", "author": {"login": "gunnarmorling"}, "path": "docs/src/main/asciidoc/neo4j.adoc", "diffHunk": "@@ -321,10 +314,10 @@ We also add some exception handling, in case the resource is called with an inva\n public CompletionStage<Response> getSingle(@PathParam(\"id\") Long id) {\n     AsyncSession session = driver.asyncSession();\n     return session\n-        .readTransactionAsync(tx ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cdc3a910b52e67cbff9f2bd1818bf3b6ada818d"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzEyMjM5OQ==", "bodyText": "Comparing Panache with the raw Driver is like comparing access via Panache to plain JDBC driver. I don\u2019t see the point here.", "url": "https://github.com/quarkusio/quarkus/pull/6409#discussion_r363122399", "createdAt": "2020-01-05T22:43:20Z", "author": {"login": "michael-simons"}, "path": "docs/src/main/asciidoc/neo4j.adoc", "diffHunk": "@@ -321,10 +314,10 @@ We also add some exception handling, in case the resource is called with an inva\n public CompletionStage<Response> getSingle(@PathParam(\"id\") Long id) {\n     AsyncSession session = driver.asyncSession();\n     return session\n-        .readTransactionAsync(tx ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjcyMg=="}, "originalCommit": {"oid": "4cdc3a910b52e67cbff9f2bd1818bf3b6ada818d"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE3MjEyMw==", "bodyText": "Good point on the comparison, it's not 100% fair. Still the amount of code for this piece of functionality is overwhelming. Anyways, seems my comment isn't really actionable right now, so feel free to ignore it.", "url": "https://github.com/quarkusio/quarkus/pull/6409#discussion_r363172123", "createdAt": "2020-01-06T06:28:07Z", "author": {"login": "gunnarmorling"}, "path": "docs/src/main/asciidoc/neo4j.adoc", "diffHunk": "@@ -321,10 +314,10 @@ We also add some exception handling, in case the resource is called with an inva\n public CompletionStage<Response> getSingle(@PathParam(\"id\") Long id) {\n     AsyncSession session = driver.asyncSession();\n     return session\n-        .readTransactionAsync(tx ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjcyMg=="}, "originalCommit": {"oid": "4cdc3a910b52e67cbff9f2bd1818bf3b6ada818d"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE4MjMwMw==", "bodyText": "We have detailed docs on this: https://neo4j.com/docs/driver-manual/4.0-preview/session-api/ This is about choice.\nActually, most Neo4j users that use Neo4j-OGM (our object mapper) keep on asking how to work around that object mapping. So we think it's in the interest of our (potential) users to make access to the driver as easy as possible and than let the users chose: Either just using imperative (I think that will be good enough in the vast majority of use cases), using an asynchronous connection (available on all Neo4j versions supported by the driver) or going reactive (available on the Neo4j 4.0 and the best choice in a reactive world based on Quarkus).", "url": "https://github.com/quarkusio/quarkus/pull/6409#discussion_r363182303", "createdAt": "2020-01-06T07:23:25Z", "author": {"login": "michael-simons"}, "path": "docs/src/main/asciidoc/neo4j.adoc", "diffHunk": "@@ -321,10 +314,10 @@ We also add some exception handling, in case the resource is called with an inva\n public CompletionStage<Response> getSingle(@PathParam(\"id\") Long id) {\n     AsyncSession session = driver.asyncSession();\n     return session\n-        .readTransactionAsync(tx ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzExMjcyMg=="}, "originalCommit": {"oid": "4cdc3a910b52e67cbff9f2bd1818bf3b6ada818d"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI0MjkyMDYwOnYy", "diffSide": "LEFT", "path": "docs/src/main/asciidoc/neo4j.adoc", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNzoxMzowNlrOFaWxUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wNlQwNzoyMzozNVrOFaW5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE4MDM3MA==", "bodyText": "I would keep the extension as preview for now until we get sufficient feedback.\nAgreed to remove the warning below.", "url": "https://github.com/quarkusio/quarkus/pull/6409#discussion_r363180370", "createdAt": "2020-01-06T07:13:06Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/neo4j.adoc", "diffHunk": "@@ -4,10 +4,9 @@ and pull requests should be submitted there:\n https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n ////\n = Quarkus - Neo4j\n-:neo4j_version: 3.5.13\n+:neo4j_version: 4.0.0\n \n include::./attributes.adoc[]\n-:extension-status: preview", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cdc3a910b52e67cbff9f2bd1818bf3b6ada818d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE4MjM4Ng==", "bodyText": "Agreed and added back in.", "url": "https://github.com/quarkusio/quarkus/pull/6409#discussion_r363182386", "createdAt": "2020-01-06T07:23:35Z", "author": {"login": "michael-simons"}, "path": "docs/src/main/asciidoc/neo4j.adoc", "diffHunk": "@@ -4,10 +4,9 @@ and pull requests should be submitted there:\n https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n ////\n = Quarkus - Neo4j\n-:neo4j_version: 3.5.13\n+:neo4j_version: 4.0.0\n \n include::./attributes.adoc[]\n-:extension-status: preview", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MzE4MDM3MA=="}, "originalCommit": {"oid": "4cdc3a910b52e67cbff9f2bd1818bf3b6ada818d"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1289, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}