{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMTYwMzgx", "number": 10283, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODoyMzoxN1rOEJDBsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMTowNjoyMFrOEJF9kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTIyMjI0OnYy", "diffSide": "RIGHT", "path": "extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/PgPoolProducer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODoyMzoxN1rOGpYKFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwODoyNDo1MVrOGpYNew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0MDU5OA==", "bodyText": "Out of curiosity, the bean container will invoke this just once and keep a reference to the result, correct?", "url": "https://github.com/quarkusio/quarkus/pull/10283#discussion_r446040598", "createdAt": "2020-06-26T08:23:17Z", "author": {"login": "tsegismont"}, "path": "extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/PgPoolProducer.java", "diffHunk": "@@ -13,43 +14,16 @@\n \n     private static final Logger LOGGER = Logger.getLogger(PgPoolProducer.class);\n \n-    private volatile PgPool pgPool;\n-    private io.vertx.mutiny.pgclient.PgPool mutinyPgPool;\n-\n-    /**\n-     * @deprecated The Axle API is deprecated and will be removed in the future, use {@link #mutinyPgPool} instead.\n-     */\n-    @Deprecated\n-    private io.vertx.axle.pgclient.PgPool axlePgPool;\n-    /**\n-     * @deprecated The RX API is deprecated and will be removed in the future, use {@link #mutinyPgPool} instead.\n-     */\n-    @Deprecated\n-    private io.vertx.reactivex.pgclient.PgPool rxPgPool;\n-\n-    void initialize(PgPool pgPool) {\n-        this.pgPool = pgPool;\n-    }\n-\n-    /**\n-     * @return the <em>bare</em> PostGreSQL Pool instance.\n-     */\n-    @Singleton\n-    @Produces\n-    public PgPool pgPool() {\n-        return pgPool;\n-    }\n+    @Inject\n+    PgPool pgPool;\n \n     /**\n      * @return the <em>mutiny</em> PostGreSQL Pool instance. The instance is created lazily.\n      */\n     @Singleton\n     @Produces\n-    public synchronized io.vertx.mutiny.pgclient.PgPool mutinyPgPool() {\n-        if (mutinyPgPool == null) {\n-            mutinyPgPool = io.vertx.mutiny.pgclient.PgPool.newInstance(pgPool);\n-        }\n-        return mutinyPgPool;\n+    public io.vertx.mutiny.pgclient.PgPool mutinyPgPool() {\n+        return io.vertx.mutiny.pgclient.PgPool.newInstance(pgPool);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d40baaf45b900458bafa9296bbff493702f37899"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0MTQ2Nw==", "bodyText": "Yep, it's @Singleton so the returned instance is stored in the context.", "url": "https://github.com/quarkusio/quarkus/pull/10283#discussion_r446041467", "createdAt": "2020-06-26T08:24:51Z", "author": {"login": "mkouba"}, "path": "extensions/reactive-pg-client/runtime/src/main/java/io/quarkus/reactive/pg/client/runtime/PgPoolProducer.java", "diffHunk": "@@ -13,43 +14,16 @@\n \n     private static final Logger LOGGER = Logger.getLogger(PgPoolProducer.class);\n \n-    private volatile PgPool pgPool;\n-    private io.vertx.mutiny.pgclient.PgPool mutinyPgPool;\n-\n-    /**\n-     * @deprecated The Axle API is deprecated and will be removed in the future, use {@link #mutinyPgPool} instead.\n-     */\n-    @Deprecated\n-    private io.vertx.axle.pgclient.PgPool axlePgPool;\n-    /**\n-     * @deprecated The RX API is deprecated and will be removed in the future, use {@link #mutinyPgPool} instead.\n-     */\n-    @Deprecated\n-    private io.vertx.reactivex.pgclient.PgPool rxPgPool;\n-\n-    void initialize(PgPool pgPool) {\n-        this.pgPool = pgPool;\n-    }\n-\n-    /**\n-     * @return the <em>bare</em> PostGreSQL Pool instance.\n-     */\n-    @Singleton\n-    @Produces\n-    public PgPool pgPool() {\n-        return pgPool;\n-    }\n+    @Inject\n+    PgPool pgPool;\n \n     /**\n      * @return the <em>mutiny</em> PostGreSQL Pool instance. The instance is created lazily.\n      */\n     @Singleton\n     @Produces\n-    public synchronized io.vertx.mutiny.pgclient.PgPool mutinyPgPool() {\n-        if (mutinyPgPool == null) {\n-            mutinyPgPool = io.vertx.mutiny.pgclient.PgPool.newInstance(pgPool);\n-        }\n-        return mutinyPgPool;\n+    public io.vertx.mutiny.pgclient.PgPool mutinyPgPool() {\n+        return io.vertx.mutiny.pgclient.PgPool.newInstance(pgPool);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjA0MDU5OA=="}, "originalCommit": {"oid": "d40baaf45b900458bafa9296bbff493702f37899"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTcwMzIzOnYy", "diffSide": "RIGHT", "path": "extensions/reactive-db2-client/deployment/src/main/java/io/quarkus/reactive/db2/client/deployment/ReactiveDB2ClientProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMTowNjoyMFrOGpc4AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMTowNjoyMFrOGpc4AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjExNzg4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    // Synthetic bean for MySQLPool\n          \n          \n            \n                    // Synthetic bean for DB2Pool", "url": "https://github.com/quarkusio/quarkus/pull/10283#discussion_r446117889", "createdAt": "2020-06-26T11:06:20Z", "author": {"login": "gsmet"}, "path": "extensions/reactive-db2-client/deployment/src/main/java/io/quarkus/reactive/db2/client/deployment/ReactiveDB2ClientProcessor.java", "diffHunk": "@@ -55,11 +58,16 @@ ServiceStartBuildItem build(BuildProducer<FeatureBuildItem> feature,\n             return serviceStart;\n         }\n \n-        RuntimeValue<DB2Pool> db2PoolValue = recorder.configureDB2Pool(vertx.getVertx(), beanContainer.getValue(),\n+        RuntimeValue<DB2Pool> db2PoolValue = recorder.configureDB2Pool(vertx.getVertx(),\n                 dataSourcesRuntimeConfig, dataSourceReactiveRuntimeConfig, dataSourceReactiveDB2Config,\n                 shutdown);\n         db2Pool.produce(new DB2PoolBuildItem(db2PoolValue));\n \n+        // Synthetic bean for MySQLPool", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c29ed46e5731b2ffd20b131d0013f9fa7109790"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2654, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}