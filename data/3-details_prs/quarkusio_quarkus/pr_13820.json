{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2MTA4NzU2", "number": 13820, "title": "Update SmallRye GraphQL, adding more test cases for reactive", "bodyText": "Upgrade the SmallRye GraphQL version to 1.0.20, adding some more Test cases for reactive and adding a small section in the guide about reactive\nsee https://github.com/smallrye/smallrye-graphql/releases/tag/1.0.20\nFix #13777\nSigned-off-by:Phillip Kruger phillip.kruger@gmail.com", "createdAt": "2020-12-10T17:31:00Z", "url": "https://github.com/quarkusio/quarkus/pull/13820", "merged": true, "mergeCommit": {"oid": "dbcb100a41fe2d2a8e728e7fe3e8b87b3dab407e"}, "closed": true, "closedAt": "2020-12-11T10:24:08Z", "author": {"login": "phillip-kruger"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdk60A8gFqTU0OTY0Mjg5Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlFUJjAFqTU0OTk3MzQ5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NjQyODk2", "url": "https://github.com/quarkusio/quarkus/pull/13820#pullrequestreview-549642896", "createdAt": "2020-12-10T22:07:30Z", "commit": {"oid": "9ee8f83142e1b781a887ebf2aec1fc0598232b91"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjowNzozMFrOIDfdpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMjowOTozOVrOIDfiew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUzMjEzMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Queries can be made reactive by using `Uni`, or `CompletionStage` as a return type, in example:\n          \n          \n            \n            Queries can be made reactive by using `Uni`, or `CompletionStage` as a return type, for example:", "url": "https://github.com/quarkusio/quarkus/pull/13820#discussion_r540532132", "createdAt": "2020-12-10T22:07:30Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/microprofile-graphql.adoc", "diffHunk": "@@ -543,6 +543,54 @@ the heroes:\n \n <1> Here receive the films as a batch, allowing you to fetch the corresponding heroes.\n \n+=== Reactive\n+\n+Queries can be made reactive by using `Uni`, or `CompletionStage` as a return type, in example:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ee8f83142e1b781a887ebf2aec1fc0598232b91"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUzMjQ0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Using `Uni` or `CompletionStage` means that when a request contains more than one query, they will be executed concurrently, in example:\n          \n          \n            \n            Using `Uni` or `CompletionStage` means that when a request contains more than one query, they will be executed concurrently.\n          \n          \n            \n            \n          \n          \n            \n            For instance, the query below will fetch `film0` and `film1` concurrently:", "url": "https://github.com/quarkusio/quarkus/pull/13820#discussion_r540532449", "createdAt": "2020-12-10T22:08:04Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/microprofile-graphql.adoc", "diffHunk": "@@ -543,6 +543,54 @@ the heroes:\n \n <1> Here receive the films as a batch, allowing you to fetch the corresponding heroes.\n \n+=== Reactive\n+\n+Queries can be made reactive by using `Uni`, or `CompletionStage` as a return type, in example:\n+\n+[source,java]\n+----\n+    @Query\n+    @Description(\"Get a Films from a galaxy far far away\")\n+    public Uni<Film> getFilm(@Name(\"filmId\") int id) {\n+        // ...\n+    }\n+----\n+\n+NOTE: Due to the underlying library, graphql-java, `Uni` is creating a `CompletionStage` under the hood.\n+\n+Or you can use `CompletionStage`:\n+\n+[source,java]\n+----\n+    @Query\n+    @Description(\"Get a Films from a galaxy far far away\")\n+    public CompletionStage<Film> getFilm(@Name(\"filmId\") int id) {\n+        // ...\n+    }\n+----\n+ \n+Using `Uni` or `CompletionStage` means that when a request contains more than one query, they will be executed concurrently, in example:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ee8f83142e1b781a887ebf2aec1fc0598232b91"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDUzMzM3MQ==", "bodyText": "And I would remove this line.", "url": "https://github.com/quarkusio/quarkus/pull/13820#discussion_r540533371", "createdAt": "2020-12-10T22:09:39Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/microprofile-graphql.adoc", "diffHunk": "@@ -543,6 +543,54 @@ the heroes:\n \n <1> Here receive the films as a batch, allowing you to fetch the corresponding heroes.\n \n+=== Reactive\n+\n+Queries can be made reactive by using `Uni`, or `CompletionStage` as a return type, in example:\n+\n+[source,java]\n+----\n+    @Query\n+    @Description(\"Get a Films from a galaxy far far away\")\n+    public Uni<Film> getFilm(@Name(\"filmId\") int id) {\n+        // ...\n+    }\n+----\n+\n+NOTE: Due to the underlying library, graphql-java, `Uni` is creating a `CompletionStage` under the hood.\n+\n+Or you can use `CompletionStage`:\n+\n+[source,java]\n+----\n+    @Query\n+    @Description(\"Get a Films from a galaxy far far away\")\n+    public CompletionStage<Film> getFilm(@Name(\"filmId\") int id) {\n+        // ...\n+    }\n+----\n+ \n+Using `Uni` or `CompletionStage` means that when a request contains more than one query, they will be executed concurrently, in example:\n+\n+[source, graphql]\n+----\n+query getFilms {\n+  film0: film(filmId: 0) {\n+    title\n+    director\n+    releaseDate\n+    episodeID\n+  }\n+  film1: film(filmId: 1) {\n+    title\n+    director\n+    releaseDate\n+    episodeID\n+  }\n+}\n+----\n+\n+Above will fetch `film0` and `film1` concurrently.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ee8f83142e1b781a887ebf2aec1fc0598232b91"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "286b1c4ac9bcdcf30e61c0599fcb5755f0149ca1", "author": {"user": {"login": "phillip-kruger", "name": "Phillip Kr\u00fcger"}}, "url": "https://github.com/quarkusio/quarkus/commit/286b1c4ac9bcdcf30e61c0599fcb5755f0149ca1", "committedDate": "2020-12-11T06:16:57Z", "message": "Upgrade the SmallRye GraphQL version, adding some more Test cases for reactive and adding a small section in the guide about reactive\n\nSigned-off-by: Phillip Kruger <phillip.kruger@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5OTczNDk3", "url": "https://github.com/quarkusio/quarkus/pull/13820#pullrequestreview-549973497", "createdAt": "2020-12-11T10:23:58Z", "commit": {"oid": "286b1c4ac9bcdcf30e61c0599fcb5755f0149ca1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4287, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}