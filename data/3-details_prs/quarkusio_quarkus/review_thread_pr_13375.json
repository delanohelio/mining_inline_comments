{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzODc0MzEx", "number": 13375, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMTo0MzowMVrOE7AVQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzowMzowN1rOFLRb5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMzA2ODgyOnYy", "diffSide": "RIGHT", "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMTo0MzowMVrOH2Zf5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMTo0MzowMVrOH2Zf5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjgwMjkxOA==", "bodyText": "You don't need the name, it will be the one generated.", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r526802918", "createdAt": "2020-11-19T11:43:01Z", "author": {"login": "gsmet"}, "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "diffHunk": "@@ -16,4 +16,12 @@\n     @ConvertWith(DatabaseKindConverter.class)\n     public Optional<String> dbKind = Optional.empty();\n \n+    /**\n+     * Whether this particular data source should be excluded from the health check if\n+     * the general health check for data sources is enabled. By default, the health check includes\n+     * all configured data sources (if it is enabled).\n+     */\n+    @ConfigItem(name = \"health-check-exclude\", defaultValue = \"false\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70809325902908d6f5e75779a502429ceedd79a0"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODQ1NDMxOnYy", "diffSide": "RIGHT", "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/AgroalRecorder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjoyMToyOFrOH3Nigw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjo0MTo0MlrOH3OK3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1NTU1NQ==", "bodyText": "Can we use a proper \n  \n    \n      quarkus/extensions/datasource/common/src/main/java/io/quarkus/datasource/common/runtime/DataSourceUtil.java\n    \n    \n         Line 7\n      in\n      e963fe4\n    \n    \n    \n    \n\n        \n          \n           public static final String DEFAULT_DATASOURCE_NAME = \"<default>\"; \n        \n    \n  \n\n instead of null?", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r527655555", "createdAt": "2020-11-20T12:21:28Z", "author": {"login": "machi1990"}, "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/AgroalRecorder.java", "diffHunk": "@@ -29,4 +35,24 @@ public AgroalDataSource get() {\n         };\n     }\n \n+    public Supplier<DataSourcesExcludedFromHealthChecks> dataSourcesExcludedFromHealthChecks(\n+            DataSourcesBuildTimeConfig dataSourcesBuildTimeConfig) {\n+        return new Supplier<DataSourcesExcludedFromHealthChecks>() {\n+            @Override\n+            public DataSourcesExcludedFromHealthChecks get() {\n+                List<String> excludedNames = new ArrayList<>();\n+                if (dataSourcesBuildTimeConfig.defaultDataSource.healthCheckExclude) {\n+                    excludedNames.add(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e963fe4f4887cdeaf0bdee3ae9f4040be0736a8b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2NTg4Ng==", "bodyText": "done", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r527665886", "createdAt": "2020-11-20T12:41:42Z", "author": {"login": "jmartisk"}, "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/AgroalRecorder.java", "diffHunk": "@@ -29,4 +35,24 @@ public AgroalDataSource get() {\n         };\n     }\n \n+    public Supplier<DataSourcesExcludedFromHealthChecks> dataSourcesExcludedFromHealthChecks(\n+            DataSourcesBuildTimeConfig dataSourcesBuildTimeConfig) {\n+        return new Supplier<DataSourcesExcludedFromHealthChecks>() {\n+            @Override\n+            public DataSourcesExcludedFromHealthChecks get() {\n+                List<String> excludedNames = new ArrayList<>();\n+                if (dataSourcesBuildTimeConfig.defaultDataSource.healthCheckExclude) {\n+                    excludedNames.add(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1NTU1NQ=="}, "originalCommit": {"oid": "e963fe4f4887cdeaf0bdee3ae9f4040be0736a8b"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODQ1NTk0OnYy", "diffSide": "RIGHT", "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/health/DataSourceHealthCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjoyMTo1OVrOH3NjeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjo0MTo0N1rOH3OK_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1NTgwMA==", "bodyText": "Let's replace the null usage by something like \n  \n    \n      quarkus/extensions/datasource/common/src/main/java/io/quarkus/datasource/common/runtime/DataSourceUtil.java\n    \n    \n         Line 7\n      in\n      e963fe4\n    \n    \n    \n    \n\n        \n          \n           public static final String DEFAULT_DATASOURCE_NAME = \"<default>\";", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r527655800", "createdAt": "2020-11-20T12:21:59Z", "author": {"login": "machi1990"}, "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/health/DataSourceHealthCheck.java", "diffHunk": "@@ -27,14 +29,21 @@\n     @PostConstruct\n     protected void init() {\n         Set<Bean<?>> beans = Arc.container().beanManager().getBeans(DataSource.class);\n+        DataSourcesExcludedFromHealthChecks excluded = Arc.container().instance(DataSourcesExcludedFromHealthChecks.class)\n+                .get();\n+        List<String> excludedNames = excluded.getExcludedNames();\n         for (Bean<?> bean : beans) {\n             if (bean.getName() == null) {\n-                // this is the default DataSource: retrieve it by type\n-                DataSource defaultDs = Arc.container().instance(DataSource.class).get();\n-                dataSources.put(DEFAULT_DS, defaultDs);\n+                if (!excludedNames.contains(null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e963fe4f4887cdeaf0bdee3ae9f4040be0736a8b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY2NTkxOQ==", "bodyText": "done", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r527665919", "createdAt": "2020-11-20T12:41:47Z", "author": {"login": "jmartisk"}, "path": "extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/health/DataSourceHealthCheck.java", "diffHunk": "@@ -27,14 +29,21 @@\n     @PostConstruct\n     protected void init() {\n         Set<Bean<?>> beans = Arc.container().beanManager().getBeans(DataSource.class);\n+        DataSourcesExcludedFromHealthChecks excluded = Arc.container().instance(DataSourcesExcludedFromHealthChecks.class)\n+                .get();\n+        List<String> excludedNames = excluded.getExcludedNames();\n         for (Bean<?> bean : beans) {\n             if (bean.getName() == null) {\n-                // this is the default DataSource: retrieve it by type\n-                DataSource defaultDs = Arc.container().instance(DataSource.class).get();\n-                dataSources.put(DEFAULT_DS, defaultDs);\n+                if (!excludedNames.contains(null)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1NTgwMA=="}, "originalCommit": {"oid": "e963fe4f4887cdeaf0bdee3ae9f4040be0736a8b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODQ2MjQ0OnYy", "diffSide": "RIGHT", "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjoyNDowNFrOH3NnWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMjoyNDowNFrOH3NnWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzY1Njc5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /**\n          \n          \n            \n                 * Whether this particular data source should be excluded from the health check if\n          \n          \n            \n                 * the general health check for data sources is enabled. By default, the health check includes\n          \n          \n            \n                 * all configured data sources (if it is enabled).\n          \n          \n            \n                 */\n          \n          \n            \n                /**\n          \n          \n            \n                 * Whether this particular data source should be excluded from the health check if\n          \n          \n            \n                 * the general health check for data sources is enabled. \n          \n          \n            \n                 * <p>\n          \n          \n            \n                 * By default, the health check includes all configured data sources (if it is enabled).\n          \n          \n            \n                 */\n          \n      \n    \n    \n  \n\nIntroduce <p> to render out nicely the generated doc.", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r527656795", "createdAt": "2020-11-20T12:24:04Z", "author": {"login": "machi1990"}, "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "diffHunk": "@@ -16,4 +16,12 @@\n     @ConvertWith(DatabaseKindConverter.class)\n     public Optional<String> dbKind = Optional.empty();\n \n+    /**\n+     * Whether this particular data source should be excluded from the health check if\n+     * the general health check for data sources is enabled. By default, the health check includes\n+     * all configured data sources (if it is enabled).\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e963fe4f4887cdeaf0bdee3ae9f4040be0736a8b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MDUyNzA2OnYy", "diffSide": "RIGHT", "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNzowOTo1NlrOIN5xTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQwODozNDoyOFrOIOOSsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0ODkxMQ==", "bodyText": "Could we maybe have something like health.exclude instead? That looks a bit more in line with health.enabled.", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r551448911", "createdAt": "2021-01-04T17:09:56Z", "author": {"login": "gsmet"}, "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "diffHunk": "@@ -16,4 +16,13 @@\n     @ConvertWith(DatabaseKindConverter.class)\n     public Optional<String> dbKind = Optional.empty();\n \n+    /**\n+     * Whether this particular data source should be excluded from the health check if\n+     * the general health check for data sources is enabled.\n+     * <p>\n+     * By default, the health check includes all configured data sources (if it is enabled).\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    public boolean healthCheckExclude;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80c5ed1929d4f90f200029cc90ecf14980c86349"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTc4NTEzNg==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r551785136", "createdAt": "2021-01-05T08:34:28Z", "author": {"login": "jmartisk"}, "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "diffHunk": "@@ -16,4 +16,13 @@\n     @ConvertWith(DatabaseKindConverter.class)\n     public Optional<String> dbKind = Optional.empty();\n \n+    /**\n+     * Whether this particular data source should be excluded from the health check if\n+     * the general health check for data sources is enabled.\n+     * <p>\n+     * By default, the health check includes all configured data sources (if it is enabled).\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    public boolean healthCheckExclude;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0ODkxMQ=="}, "originalCommit": {"oid": "80c5ed1929d4f90f200029cc90ecf14980c86349"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MzY0MzI2OnYy", "diffSide": "RIGHT", "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMzowMzowN1rOIOWbGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0yNlQwODoxMzowMlrOI-Me5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxODM2MA==", "bodyText": "That will make it health-exclude not health.exclude. Also shouldn't we have a test?", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r551918360", "createdAt": "2021-01-05T13:03:07Z", "author": {"login": "gsmet"}, "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "diffHunk": "@@ -16,4 +16,13 @@\n     @ConvertWith(DatabaseKindConverter.class)\n     public Optional<String> dbKind = Optional.empty();\n \n+    /**\n+     * Whether this particular data source should be excluded from the health check if\n+     * the general health check for data sources is enabled.\n+     * <p>\n+     * By default, the health check includes all configured data sources (if it is enabled).\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    public boolean healthExclude;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "009018b58e868147104ae470024911dbf6795236"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTk4MTgyNQ==", "bodyText": "Hmm. Maybe we should keep it at health-exclude, becausequarkus.datasource.health.enabled is a setting that is only used globally, whereas the exclusions are per each datasource. If we used health.enabled here, then we would get\n\nquarkus.datasource.health.enabled for the global setting\nquarkus.datasource.health.exclude would be to exclude the DEFAULT data source, but it would look very similar to the previous one (it shares the complete segment namespace) and therefore it would look like it's a global setting too, but it's not... Hope my explanation is understandable\n\nAnyway I've added a test as you requested", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r551981825", "createdAt": "2021-01-05T14:54:43Z", "author": {"login": "jmartisk"}, "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "diffHunk": "@@ -16,4 +16,13 @@\n     @ConvertWith(DatabaseKindConverter.class)\n     public Optional<String> dbKind = Optional.empty();\n \n+    /**\n+     * Whether this particular data source should be excluded from the health check if\n+     * the general health check for data sources is enabled.\n+     * <p>\n+     * By default, the health check includes all configured data sources (if it is enabled).\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    public boolean healthExclude;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxODM2MA=="}, "originalCommit": {"oid": "009018b58e868147104ae470024911dbf6795236"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3NDMxNzA2Mw==", "bodyText": "Hey @gsmet so what do you think? We got a user asking when this will be released. Still insist on renaming?", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r574317063", "createdAt": "2021-02-11T08:26:28Z", "author": {"login": "jmartisk"}, "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "diffHunk": "@@ -16,4 +16,13 @@\n     @ConvertWith(DatabaseKindConverter.class)\n     public Optional<String> dbKind = Optional.empty();\n \n+    /**\n+     * Whether this particular data source should be excluded from the health check if\n+     * the general health check for data sources is enabled.\n+     * <p>\n+     * By default, the health check includes all configured data sources (if it is enabled).\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    public boolean healthExclude;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxODM2MA=="}, "originalCommit": {"oid": "009018b58e868147104ae470024911dbf6795236"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwMjA4NzE0Mg==", "bodyText": "Hi @gsmet we need this for many production container, can we help on this PR so that can be merged soon?\nThanks", "url": "https://github.com/quarkusio/quarkus/pull/13375#discussion_r602087142", "createdAt": "2021-03-26T08:13:02Z", "author": {"login": "masini"}, "path": "extensions/datasource/runtime/src/main/java/io/quarkus/datasource/runtime/DataSourceBuildTimeConfig.java", "diffHunk": "@@ -16,4 +16,13 @@\n     @ConvertWith(DatabaseKindConverter.class)\n     public Optional<String> dbKind = Optional.empty();\n \n+    /**\n+     * Whether this particular data source should be excluded from the health check if\n+     * the general health check for data sources is enabled.\n+     * <p>\n+     * By default, the health check includes all configured data sources (if it is enabled).\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    public boolean healthExclude;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTkxODM2MA=="}, "originalCommit": {"oid": "009018b58e868147104ae470024911dbf6795236"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3955, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}