{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5MDQyNjA1", "number": 8860, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMToyMDoxMFrOEAVByw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMToyMDoxMFrOEAVByw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Nzc5OTc5OnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwMToyMDoxMFrOGbihhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjoxMzozN1rOGcaKmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzMDM3NA==", "bodyText": "I think this should only be for windows. We just want one format to build the native image from in general, this is an intermediate state so it should not matter to the user, but having two different formats means more possible things to debug.", "url": "https://github.com/quarkusio/quarkus/pull/8860#discussion_r431530374", "createdAt": "2020-05-28T01:20:10Z", "author": {"login": "stuartwdouglas"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "diffHunk": "@@ -593,23 +616,54 @@ public NativeImageSourceJarBuildItem buildNativeImageJar(CurateOutcomeBuildItem\n             List<GeneratedClassBuildItem> generatedClasses,\n             List<GeneratedNativeImageClassBuildItem> nativeImageResources,\n             List<GeneratedResourceBuildItem> generatedResources,\n-            MainClassBuildItem mainClassBuildItem) throws Exception {\n-        Path thinJarDirectory = outputTargetBuildItem.getOutputDirectory()\n+            MainClassBuildItem mainClassBuildItem,\n+            List<UberJarRequiredBuildItem> uberJarRequired) throws Exception {\n+        Path targetDirectory = outputTargetBuildItem.getOutputDirectory()\n                 .resolve(outputTargetBuildItem.getBaseName() + \"-native-image-source-jar\");\n-        IoUtils.recursiveDelete(thinJarDirectory);\n-        Files.createDirectories(thinJarDirectory);\n-        copyJsonConfigFiles(applicationArchivesBuildItem, thinJarDirectory);\n-\n-        Path runnerJar = thinJarDirectory\n-                .resolve(outputTargetBuildItem.getBaseName() + packageConfig.runnerSuffix + \".jar\");\n-        Path libDir = thinJarDirectory.resolve(LIB);\n-        Files.createDirectories(libDir);\n+        IoUtils.recursiveDelete(targetDirectory);\n+        Files.createDirectories(targetDirectory);\n \n         List<GeneratedClassBuildItem> allClasses = new ArrayList<>(generatedClasses);\n         allClasses.addAll(nativeImageResources.stream()\n                 .map((s) -> new GeneratedClassBuildItem(true, s.getName(), s.getClassData()))\n                 .collect(Collectors.toList()));\n \n+        boolean uberJarRequested = !uberJarRequired.isEmpty() || packageConfig.uberJar;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "450776c1a3a7496b2181bfaa60f609044687f5f8"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ0MjAwOQ==", "bodyText": "@stuartwdouglas Can you check if my last change is what you had in mind?", "url": "https://github.com/quarkusio/quarkus/pull/8860#discussion_r432442009", "createdAt": "2020-05-29T12:13:37Z", "author": {"login": "Mobe91"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "diffHunk": "@@ -593,23 +616,54 @@ public NativeImageSourceJarBuildItem buildNativeImageJar(CurateOutcomeBuildItem\n             List<GeneratedClassBuildItem> generatedClasses,\n             List<GeneratedNativeImageClassBuildItem> nativeImageResources,\n             List<GeneratedResourceBuildItem> generatedResources,\n-            MainClassBuildItem mainClassBuildItem) throws Exception {\n-        Path thinJarDirectory = outputTargetBuildItem.getOutputDirectory()\n+            MainClassBuildItem mainClassBuildItem,\n+            List<UberJarRequiredBuildItem> uberJarRequired) throws Exception {\n+        Path targetDirectory = outputTargetBuildItem.getOutputDirectory()\n                 .resolve(outputTargetBuildItem.getBaseName() + \"-native-image-source-jar\");\n-        IoUtils.recursiveDelete(thinJarDirectory);\n-        Files.createDirectories(thinJarDirectory);\n-        copyJsonConfigFiles(applicationArchivesBuildItem, thinJarDirectory);\n-\n-        Path runnerJar = thinJarDirectory\n-                .resolve(outputTargetBuildItem.getBaseName() + packageConfig.runnerSuffix + \".jar\");\n-        Path libDir = thinJarDirectory.resolve(LIB);\n-        Files.createDirectories(libDir);\n+        IoUtils.recursiveDelete(targetDirectory);\n+        Files.createDirectories(targetDirectory);\n \n         List<GeneratedClassBuildItem> allClasses = new ArrayList<>(generatedClasses);\n         allClasses.addAll(nativeImageResources.stream()\n                 .map((s) -> new GeneratedClassBuildItem(true, s.getName(), s.getClassData()))\n                 .collect(Collectors.toList()));\n \n+        boolean uberJarRequested = !uberJarRequired.isEmpty() || packageConfig.uberJar;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTUzMDM3NA=="}, "originalCommit": {"oid": "450776c1a3a7496b2181bfaa60f609044687f5f8"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3289, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}