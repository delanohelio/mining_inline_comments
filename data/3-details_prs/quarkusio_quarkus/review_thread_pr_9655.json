{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NDE1NTg0", "number": 9655, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzowNTozMFrOED-g6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoxNTozNFrOED-ujQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjA1NDE2OnYy", "diffSide": "RIGHT", "path": "extensions/funqy/funqy-google-cloud-functions/runtime/src/main/java/io/quarkus/funqy/gcp/functions/FunqyHttpFunction.java", "isResolved": false, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzowNTozMFrOGhUGcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo0NDowOVrOGl3tDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTUyMg==", "bodyText": "We is there a specific need for Funqy + HTTP + GCP?  Isn't this handled by a more generic function?", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437585522", "createdAt": "2020-06-09T17:05:30Z", "author": {"login": "patriot1burke"}, "path": "extensions/funqy/funqy-google-cloud-functions/runtime/src/main/java/io/quarkus/funqy/gcp/functions/FunqyHttpFunction.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.funqy.gcp.functions;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import com.google.cloud.functions.HttpFunction;\n+import com.google.cloud.functions.HttpRequest;\n+import com.google.cloud.functions.HttpResponse;\n+\n+import io.quarkus.runtime.Application;\n+\n+public class FunqyHttpFunction implements HttpFunction {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkxNTc2MA==", "bodyText": "GCF have 3 distinct function interface, one for HttpFunction and two for BackgroundFunction. So I use two different implementation.\nWe can mix the two function inside he same implementation if you think it's easier for the user to use and easier for us to maintain.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437915760", "createdAt": "2020-06-10T07:31:28Z", "author": {"login": "loicmathieu"}, "path": "extensions/funqy/funqy-google-cloud-functions/runtime/src/main/java/io/quarkus/funqy/gcp/functions/FunqyHttpFunction.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.funqy.gcp.functions;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import com.google.cloud.functions.HttpFunction;\n+import com.google.cloud.functions.HttpRequest;\n+import com.google.cloud.functions.HttpResponse;\n+\n+import io.quarkus.runtime.Application;\n+\n+public class FunqyHttpFunction implements HttpFunction {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTUyMg=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA3MDczMQ==", "bodyText": "I'm saying the work you already did that is merged for GCP + HTTP will work with Funqy already.  If your extension works for Servlet, JAX-RS, and Vert.x Web, it will work for Funqy.  There's no need for a new  funqy+http+gcp extension.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r438070731", "createdAt": "2020-06-10T12:06:57Z", "author": {"login": "patriot1burke"}, "path": "extensions/funqy/funqy-google-cloud-functions/runtime/src/main/java/io/quarkus/funqy/gcp/functions/FunqyHttpFunction.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.funqy.gcp.functions;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import com.google.cloud.functions.HttpFunction;\n+import com.google.cloud.functions.HttpRequest;\n+import com.google.cloud.functions.HttpResponse;\n+\n+import io.quarkus.runtime.Application;\n+\n+public class FunqyHttpFunction implements HttpFunction {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTUyMg=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODExNDIzMg==", "bodyText": "OK, so I need to update the GCF HTTP support to support Funqy right ?", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r438114232", "createdAt": "2020-06-10T13:18:27Z", "author": {"login": "loicmathieu"}, "path": "extensions/funqy/funqy-google-cloud-functions/runtime/src/main/java/io/quarkus/funqy/gcp/functions/FunqyHttpFunction.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.funqy.gcp.functions;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import com.google.cloud.functions.HttpFunction;\n+import com.google.cloud.functions.HttpRequest;\n+import com.google.cloud.functions.HttpResponse;\n+\n+import io.quarkus.runtime.Application;\n+\n+public class FunqyHttpFunction implements HttpFunction {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTUyMg=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE4NzkyOQ==", "bodyText": "No, GCF HTTP wont' have to do anything to support Funqy.  That's my point.  We only have quarkus-funqy-amazon-lambda because raw lambda does not use HTTP.  Notice that we don't have quarkus-funqy-azure-functions either.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r438187929", "createdAt": "2020-06-10T14:55:19Z", "author": {"login": "patriot1burke"}, "path": "extensions/funqy/funqy-google-cloud-functions/runtime/src/main/java/io/quarkus/funqy/gcp/functions/FunqyHttpFunction.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.funqy.gcp.functions;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import com.google.cloud.functions.HttpFunction;\n+import com.google.cloud.functions.HttpRequest;\n+import com.google.cloud.functions.HttpResponse;\n+\n+import io.quarkus.runtime.Application;\n+\n+public class FunqyHttpFunction implements HttpFunction {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTUyMg=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIwMzA3OQ==", "bodyText": "I'm lost here, how do you call a GCF HttpFunction via Funqy ? Or maybe you're saying that we don't as Funqy is designed only for not-http function (BackgroundFunction for GCP).", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r438203079", "createdAt": "2020-06-10T15:15:52Z", "author": {"login": "loicmathieu"}, "path": "extensions/funqy/funqy-google-cloud-functions/runtime/src/main/java/io/quarkus/funqy/gcp/functions/FunqyHttpFunction.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.funqy.gcp.functions;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import com.google.cloud.functions.HttpFunction;\n+import com.google.cloud.functions.HttpRequest;\n+import com.google.cloud.functions.HttpResponse;\n+\n+import io.quarkus.runtime.Application;\n+\n+public class FunqyHttpFunction implements HttpFunction {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTUyMg=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk5MDQ2NA==", "bodyText": "If I compare whith what you provides for Amazon, Funqy HTTP for GCF should be using both funqy-http and google-cloud-http.\nIf it's the case, I need to test it and, if working, just provides documentation.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r439990464", "createdAt": "2020-06-15T07:50:47Z", "author": {"login": "loicmathieu"}, "path": "extensions/funqy/funqy-google-cloud-functions/runtime/src/main/java/io/quarkus/funqy/gcp/functions/FunqyHttpFunction.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.funqy.gcp.functions;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import com.google.cloud.functions.HttpFunction;\n+import com.google.cloud.functions.HttpRequest;\n+import com.google.cloud.functions.HttpResponse;\n+\n+import io.quarkus.runtime.Application;\n+\n+public class FunqyHttpFunction implements HttpFunction {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTUyMg=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE3NDEyNQ==", "bodyText": "Yes exactly:  funqy-http + google-cloud-http.  No need for a funqy-gcf-http layer.\nAlso, what about my other question?  If you have funqy integrated with gcf http, why would you want background implementation?  I can understand pub/sub, but what does background provide?", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r440174125", "createdAt": "2020-06-15T13:27:17Z", "author": {"login": "patriot1burke"}, "path": "extensions/funqy/funqy-google-cloud-functions/runtime/src/main/java/io/quarkus/funqy/gcp/functions/FunqyHttpFunction.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.funqy.gcp.functions;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import com.google.cloud.functions.HttpFunction;\n+import com.google.cloud.functions.HttpRequest;\n+import com.google.cloud.functions.HttpResponse;\n+\n+import io.quarkus.runtime.Application;\n+\n+public class FunqyHttpFunction implements HttpFunction {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTUyMg=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDE5MTc2Nw==", "bodyText": "OK, I'll remove it and document the fact that funqy-http will work with google-cloud-functions-http.\nBackground is the generic term for not-http function, it is triggered by any event that Google Cloud support (pubsub, storage, firestore, ...).\nSo this is why we need Funqy for.\nI give examples for PubSub and Storage, on the example I show how you can trigger them via HTTP for testing purpose (via the local invoker) but on GCP this will not be triggered via HTTP so we need Funqy for it.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r440191767", "createdAt": "2020-06-15T13:53:13Z", "author": {"login": "loicmathieu"}, "path": "extensions/funqy/funqy-google-cloud-functions/runtime/src/main/java/io/quarkus/funqy/gcp/functions/FunqyHttpFunction.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.funqy.gcp.functions;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import com.google.cloud.functions.HttpFunction;\n+import com.google.cloud.functions.HttpRequest;\n+import com.google.cloud.functions.HttpResponse;\n+\n+import io.quarkus.runtime.Application;\n+\n+public class FunqyHttpFunction implements HttpFunction {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTUyMg=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIyMjIwOQ==", "bodyText": "HttpFunction binding removed, we can know call only background function via Funqy (so only respond to Cloud events, not to HTTP trigger).", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r440222209", "createdAt": "2020-06-15T14:36:10Z", "author": {"login": "loicmathieu"}, "path": "extensions/funqy/funqy-google-cloud-functions/runtime/src/main/java/io/quarkus/funqy/gcp/functions/FunqyHttpFunction.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.funqy.gcp.functions;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import com.google.cloud.functions.HttpFunction;\n+import com.google.cloud.functions.HttpRequest;\n+import com.google.cloud.functions.HttpResponse;\n+\n+import io.quarkus.runtime.Application;\n+\n+public class FunqyHttpFunction implements HttpFunction {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTUyMg=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM2MzE0OQ==", "bodyText": "@patriot1burke is it OK now that I remove the HttpFunction binding ?", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r442363149", "createdAt": "2020-06-18T16:44:09Z", "author": {"login": "loicmathieu"}, "path": "extensions/funqy/funqy-google-cloud-functions/runtime/src/main/java/io/quarkus/funqy/gcp/functions/FunqyHttpFunction.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package io.quarkus.funqy.gcp.functions;\n+\n+import java.io.IOException;\n+import java.io.PrintWriter;\n+import java.io.StringWriter;\n+\n+import com.google.cloud.functions.HttpFunction;\n+import com.google.cloud.functions.HttpRequest;\n+import com.google.cloud.functions.HttpResponse;\n+\n+import io.quarkus.runtime.Application;\n+\n+public class FunqyHttpFunction implements HttpFunction {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NTUyMg=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjA2NjU3OnYy", "diffSide": "RIGHT", "path": "integration-tests/funqy-google-cloud-functions/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzowOTowM1rOGhUOyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMjowNTowOFrOGhxqTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NzY1OQ==", "bodyText": "Is uber jar required by GCP?", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437587659", "createdAt": "2020-06-09T17:09:03Z", "author": {"login": "patriot1burke"}, "path": "integration-tests/funqy-google-cloud-functions/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,5 @@\n+quarkus.package.uber-jar=true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkxMzE4Mg==", "bodyText": "Yes, you can send an uberjar or a use a single function class and GCP will build it for you.\nApparently, they also support sending a ZIP file with all the sources, it's new so I don't know if it will works for a Quarkus application.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437913182", "createdAt": "2020-06-10T07:26:32Z", "author": {"login": "loicmathieu"}, "path": "integration-tests/funqy-google-cloud-functions/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,5 @@\n+quarkus.package.uber-jar=true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NzY1OQ=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA2OTgzNg==", "bodyText": "ok, so its uber, one .class file, or a zip of source.  Closing", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r438069836", "createdAt": "2020-06-10T12:05:08Z", "author": {"login": "patriot1burke"}, "path": "integration-tests/funqy-google-cloud-functions/src/main/resources/application.properties", "diffHunk": "@@ -0,0 +1,5 @@\n+quarkus.package.uber-jar=true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4NzY1OQ=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjA3MzkxOnYy", "diffSide": "RIGHT", "path": "integration-tests/funqy-google-cloud-functions/README.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoxMToxM1rOGhUTvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDo1MDo1NlrOGh4qcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4ODkyNQ==", "bodyText": "This copy could be done within the extension post build.  See the lambda extension for an example.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437588925", "createdAt": "2020-06-09T17:11:13Z", "author": {"login": "patriot1burke"}, "path": "integration-tests/funqy-google-cloud-functions/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Google Cloud Functions - Funqy Binding\n+\n+This integration test has no automated test, it needs to be launched manually.\n+\n+## Build the artifact\n+\n+First, you need to log in to Google Cloud:\n+\n+```shell script\n+gcloud auth login\n+```\n+\n+Then you need to use Maven to build the artifact and put it in a directory where it will be the only file.\n+\n+```shell script\n+mkdir deployment\n+mvn clean package\n+cp target/quarkus-integration-test-funqy-google-cloud-functions-999-SNAPSHOT-runner.jar deployment/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkxMzYxNA==", "bodyText": "OK, I'll create an issue to add this to both Funqy and HTTP Cloud function.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437913614", "createdAt": "2020-06-10T07:27:19Z", "author": {"login": "loicmathieu"}, "path": "integration-tests/funqy-google-cloud-functions/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Google Cloud Functions - Funqy Binding\n+\n+This integration test has no automated test, it needs to be launched manually.\n+\n+## Build the artifact\n+\n+First, you need to log in to Google Cloud:\n+\n+```shell script\n+gcloud auth login\n+```\n+\n+Then you need to use Maven to build the artifact and put it in a directory where it will be the only file.\n+\n+```shell script\n+mkdir deployment\n+mvn clean package\n+cp target/quarkus-integration-test-funqy-google-cloud-functions-999-SNAPSHOT-runner.jar deployment/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4ODkyNQ=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE4NDU2Mw==", "bodyText": "Done, I'll refactor the HTTP binding implementation later to provide the same functionalty.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r438184563", "createdAt": "2020-06-10T14:50:56Z", "author": {"login": "loicmathieu"}, "path": "integration-tests/funqy-google-cloud-functions/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Google Cloud Functions - Funqy Binding\n+\n+This integration test has no automated test, it needs to be launched manually.\n+\n+## Build the artifact\n+\n+First, you need to log in to Google Cloud:\n+\n+```shell script\n+gcloud auth login\n+```\n+\n+Then you need to use Maven to build the artifact and put it in a directory where it will be the only file.\n+\n+```shell script\n+mkdir deployment\n+mvn clean package\n+cp target/quarkus-integration-test-funqy-google-cloud-functions-999-SNAPSHOT-runner.jar deployment/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4ODkyNQ=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjA3NjgyOnYy", "diffSide": "RIGHT", "path": "integration-tests/funqy-google-cloud-functions/README.md", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoxMjowNFrOGhUVqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNToxNzozNlrOGh53lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4OTQxOQ==", "bodyText": "If possible this deployment directory should be in target/ and created and setup by the extension.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437589419", "createdAt": "2020-06-09T17:12:04Z", "author": {"login": "patriot1burke"}, "path": "integration-tests/funqy-google-cloud-functions/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Google Cloud Functions - Funqy Binding\n+\n+This integration test has no automated test, it needs to be launched manually.\n+\n+## Build the artifact\n+\n+First, you need to log in to Google Cloud:\n+\n+```shell script\n+gcloud auth login\n+```\n+\n+Then you need to use Maven to build the artifact and put it in a directory where it will be the only file.\n+\n+```shell script\n+mkdir deployment\n+mvn clean package\n+cp target/quarkus-integration-test-funqy-google-cloud-functions-999-SNAPSHOT-runner.jar deployment/\n+```\n+\n+Finally, you need to use `gcloud` to deploy the function to Google Cloud. The `gcloud` command is different for HttpFunction and\n+Background function so the set of instruction differs for each.\n+\n+This example contains multiple Funqy functions, if you want to test a different function that the one defined inside\n+your `application.properties`, you can use the `--set-env-vars` option of `gcloud` to define the name of the function via the \n+`QUARKUS_FUNQY_EXPORT` environment variable.\n+\n+## HTTP function\n+To deploy the HttpFunction, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-http --entry-point=io.quarkus.funqy.gcp.functions.FunqyHttpFunction \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkxMzg0OQ==", "bodyText": "+1 to put this in target, I'll update the docs", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437913849", "createdAt": "2020-06-10T07:27:46Z", "author": {"login": "loicmathieu"}, "path": "integration-tests/funqy-google-cloud-functions/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Google Cloud Functions - Funqy Binding\n+\n+This integration test has no automated test, it needs to be launched manually.\n+\n+## Build the artifact\n+\n+First, you need to log in to Google Cloud:\n+\n+```shell script\n+gcloud auth login\n+```\n+\n+Then you need to use Maven to build the artifact and put it in a directory where it will be the only file.\n+\n+```shell script\n+mkdir deployment\n+mvn clean package\n+cp target/quarkus-integration-test-funqy-google-cloud-functions-999-SNAPSHOT-runner.jar deployment/\n+```\n+\n+Finally, you need to use `gcloud` to deploy the function to Google Cloud. The `gcloud` command is different for HttpFunction and\n+Background function so the set of instruction differs for each.\n+\n+This example contains multiple Funqy functions, if you want to test a different function that the one defined inside\n+your `application.properties`, you can use the `--set-env-vars` option of `gcloud` to define the name of the function via the \n+`QUARKUS_FUNQY_EXPORT` environment variable.\n+\n+## HTTP function\n+To deploy the HttpFunction, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-http --entry-point=io.quarkus.funqy.gcp.functions.FunqyHttpFunction \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4OTQxOQ=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE4NTE2NQ==", "bodyText": "The extension now creates a repository inside the target one and copy the generated jar in it.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r438185165", "createdAt": "2020-06-10T14:51:38Z", "author": {"login": "loicmathieu"}, "path": "integration-tests/funqy-google-cloud-functions/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Google Cloud Functions - Funqy Binding\n+\n+This integration test has no automated test, it needs to be launched manually.\n+\n+## Build the artifact\n+\n+First, you need to log in to Google Cloud:\n+\n+```shell script\n+gcloud auth login\n+```\n+\n+Then you need to use Maven to build the artifact and put it in a directory where it will be the only file.\n+\n+```shell script\n+mkdir deployment\n+mvn clean package\n+cp target/quarkus-integration-test-funqy-google-cloud-functions-999-SNAPSHOT-runner.jar deployment/\n+```\n+\n+Finally, you need to use `gcloud` to deploy the function to Google Cloud. The `gcloud` command is different for HttpFunction and\n+Background function so the set of instruction differs for each.\n+\n+This example contains multiple Funqy functions, if you want to test a different function that the one defined inside\n+your `application.properties`, you can use the `--set-env-vars` option of `gcloud` to define the name of the function via the \n+`QUARKUS_FUNQY_EXPORT` environment variable.\n+\n+## HTTP function\n+To deploy the HttpFunction, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-http --entry-point=io.quarkus.funqy.gcp.functions.FunqyHttpFunction \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4OTQxOQ=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE4OTMzNQ==", "bodyText": "You should really have the extension create and copy the runner to the target/deployment/ directory.  Its simple to implement and removes this extra step.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r438189335", "createdAt": "2020-06-10T14:57:07Z", "author": {"login": "patriot1burke"}, "path": "integration-tests/funqy-google-cloud-functions/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Google Cloud Functions - Funqy Binding\n+\n+This integration test has no automated test, it needs to be launched manually.\n+\n+## Build the artifact\n+\n+First, you need to log in to Google Cloud:\n+\n+```shell script\n+gcloud auth login\n+```\n+\n+Then you need to use Maven to build the artifact and put it in a directory where it will be the only file.\n+\n+```shell script\n+mkdir deployment\n+mvn clean package\n+cp target/quarkus-integration-test-funqy-google-cloud-functions-999-SNAPSHOT-runner.jar deployment/\n+```\n+\n+Finally, you need to use `gcloud` to deploy the function to Google Cloud. The `gcloud` command is different for HttpFunction and\n+Background function so the set of instruction differs for each.\n+\n+This example contains multiple Funqy functions, if you want to test a different function that the one defined inside\n+your `application.properties`, you can use the `--set-env-vars` option of `gcloud` to define the name of the function via the \n+`QUARKUS_FUNQY_EXPORT` environment variable.\n+\n+## HTTP function\n+To deploy the HttpFunction, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-http --entry-point=io.quarkus.funqy.gcp.functions.FunqyHttpFunction \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4OTQxOQ=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIwNDMwOQ==", "bodyText": "Just implemented it, it was surprisingly easy ;).\nThis PR is updated to create the dir and copy the runner in it and the doc is updated.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r438204309", "createdAt": "2020-06-10T15:17:36Z", "author": {"login": "loicmathieu"}, "path": "integration-tests/funqy-google-cloud-functions/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Google Cloud Functions - Funqy Binding\n+\n+This integration test has no automated test, it needs to be launched manually.\n+\n+## Build the artifact\n+\n+First, you need to log in to Google Cloud:\n+\n+```shell script\n+gcloud auth login\n+```\n+\n+Then you need to use Maven to build the artifact and put it in a directory where it will be the only file.\n+\n+```shell script\n+mkdir deployment\n+mvn clean package\n+cp target/quarkus-integration-test-funqy-google-cloud-functions-999-SNAPSHOT-runner.jar deployment/\n+```\n+\n+Finally, you need to use `gcloud` to deploy the function to Google Cloud. The `gcloud` command is different for HttpFunction and\n+Background function so the set of instruction differs for each.\n+\n+This example contains multiple Funqy functions, if you want to test a different function that the one defined inside\n+your `application.properties`, you can use the `--set-env-vars` option of `gcloud` to define the name of the function via the \n+`QUARKUS_FUNQY_EXPORT` environment variable.\n+\n+## HTTP function\n+To deploy the HttpFunction, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-http --entry-point=io.quarkus.funqy.gcp.functions.FunqyHttpFunction \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU4OTQxOQ=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjA4Mjk4OnYy", "diffSide": "RIGHT", "path": "integration-tests/funqy-google-cloud-functions/README.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoxMzo0OVrOGhUZzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDo1MTo0OVrOGh4tNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5MDQ3OQ==", "bodyText": "For lambda, the extension generates a helper script within target/ than can create, update, delete, and invoke the lambda.  If you have time to add that, great, if not, its an issue we can post and do it later.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437590479", "createdAt": "2020-06-09T17:13:49Z", "author": {"login": "patriot1burke"}, "path": "integration-tests/funqy-google-cloud-functions/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Google Cloud Functions - Funqy Binding\n+\n+This integration test has no automated test, it needs to be launched manually.\n+\n+## Build the artifact\n+\n+First, you need to log in to Google Cloud:\n+\n+```shell script\n+gcloud auth login\n+```\n+\n+Then you need to use Maven to build the artifact and put it in a directory where it will be the only file.\n+\n+```shell script\n+mkdir deployment\n+mvn clean package\n+cp target/quarkus-integration-test-funqy-google-cloud-functions-999-SNAPSHOT-runner.jar deployment/\n+```\n+\n+Finally, you need to use `gcloud` to deploy the function to Google Cloud. The `gcloud` command is different for HttpFunction and\n+Background function so the set of instruction differs for each.\n+\n+This example contains multiple Funqy functions, if you want to test a different function that the one defined inside\n+your `application.properties`, you can use the `--set-env-vars` option of `gcloud` to define the name of the function via the \n+`QUARKUS_FUNQY_EXPORT` environment variable.\n+\n+## HTTP function\n+To deploy the HttpFunction, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-http --entry-point=io.quarkus.funqy.gcp.functions.FunqyHttpFunction \\\n+  --trigger-http \\\n+  --runtime=java11 --source=deployment\n+```\n+\n+After deploying your HTTP function to Google Cloud, the `gcloud` command will output the endpoint base location.\n+\n+You can issue the following `curl` commands to test it:\n+\n+```shell script\n+curl -v {httpsTrigger.url}\n+```\n+\n+## Background function\n+\n+### PubSub event\n+\n+To deploy a background function that listen to PubSub event, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-pubsub --entry-point=io.quarkus.funqy.gcp.functions.FunqyBackgroundFunction \\\n+  --trigger-resource hello_topic --trigger-event google.pubsub.topic.publish \\\n+  --runtime=java11 --source=deployment\n+```\n+\n+You can then invoke your function via `gcloud`:\n+\n+```shell script\n+gcloud functions call quarkus-example-pubsub --data '{\"data\":\"HelloWorld\"}'\n+```\n+\n+### Storage event\n+\n+To deploy a background function that listen to Storage event, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-storage --entry-point=io.quarkus.funqy.gcp.functions.FunqyBackgroundFunction \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkxNDc0Nw==", "bodyText": "I'll create an issue for this to implement it for both Funqy and HTTP binding.\nAs I didn't want to miss the 1.6 target, I prefere to build our support step by step instead of providing full functionalities.\nMaybe I should set the extension status to experimental waiting to have all the functionalities (easy testing is also missing)", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437914747", "createdAt": "2020-06-10T07:29:31Z", "author": {"login": "loicmathieu"}, "path": "integration-tests/funqy-google-cloud-functions/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Google Cloud Functions - Funqy Binding\n+\n+This integration test has no automated test, it needs to be launched manually.\n+\n+## Build the artifact\n+\n+First, you need to log in to Google Cloud:\n+\n+```shell script\n+gcloud auth login\n+```\n+\n+Then you need to use Maven to build the artifact and put it in a directory where it will be the only file.\n+\n+```shell script\n+mkdir deployment\n+mvn clean package\n+cp target/quarkus-integration-test-funqy-google-cloud-functions-999-SNAPSHOT-runner.jar deployment/\n+```\n+\n+Finally, you need to use `gcloud` to deploy the function to Google Cloud. The `gcloud` command is different for HttpFunction and\n+Background function so the set of instruction differs for each.\n+\n+This example contains multiple Funqy functions, if you want to test a different function that the one defined inside\n+your `application.properties`, you can use the `--set-env-vars` option of `gcloud` to define the name of the function via the \n+`QUARKUS_FUNQY_EXPORT` environment variable.\n+\n+## HTTP function\n+To deploy the HttpFunction, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-http --entry-point=io.quarkus.funqy.gcp.functions.FunqyHttpFunction \\\n+  --trigger-http \\\n+  --runtime=java11 --source=deployment\n+```\n+\n+After deploying your HTTP function to Google Cloud, the `gcloud` command will output the endpoint base location.\n+\n+You can issue the following `curl` commands to test it:\n+\n+```shell script\n+curl -v {httpsTrigger.url}\n+```\n+\n+## Background function\n+\n+### PubSub event\n+\n+To deploy a background function that listen to PubSub event, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-pubsub --entry-point=io.quarkus.funqy.gcp.functions.FunqyBackgroundFunction \\\n+  --trigger-resource hello_topic --trigger-event google.pubsub.topic.publish \\\n+  --runtime=java11 --source=deployment\n+```\n+\n+You can then invoke your function via `gcloud`:\n+\n+```shell script\n+gcloud functions call quarkus-example-pubsub --data '{\"data\":\"HelloWorld\"}'\n+```\n+\n+### Storage event\n+\n+To deploy a background function that listen to Storage event, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-storage --entry-point=io.quarkus.funqy.gcp.functions.FunqyBackgroundFunction \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5MDQ3OQ=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA3MTA1Nw==", "bodyText": "It should definitely be experimental as GCP is in beta.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r438071057", "createdAt": "2020-06-10T12:07:36Z", "author": {"login": "patriot1burke"}, "path": "integration-tests/funqy-google-cloud-functions/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Google Cloud Functions - Funqy Binding\n+\n+This integration test has no automated test, it needs to be launched manually.\n+\n+## Build the artifact\n+\n+First, you need to log in to Google Cloud:\n+\n+```shell script\n+gcloud auth login\n+```\n+\n+Then you need to use Maven to build the artifact and put it in a directory where it will be the only file.\n+\n+```shell script\n+mkdir deployment\n+mvn clean package\n+cp target/quarkus-integration-test-funqy-google-cloud-functions-999-SNAPSHOT-runner.jar deployment/\n+```\n+\n+Finally, you need to use `gcloud` to deploy the function to Google Cloud. The `gcloud` command is different for HttpFunction and\n+Background function so the set of instruction differs for each.\n+\n+This example contains multiple Funqy functions, if you want to test a different function that the one defined inside\n+your `application.properties`, you can use the `--set-env-vars` option of `gcloud` to define the name of the function via the \n+`QUARKUS_FUNQY_EXPORT` environment variable.\n+\n+## HTTP function\n+To deploy the HttpFunction, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-http --entry-point=io.quarkus.funqy.gcp.functions.FunqyHttpFunction \\\n+  --trigger-http \\\n+  --runtime=java11 --source=deployment\n+```\n+\n+After deploying your HTTP function to Google Cloud, the `gcloud` command will output the endpoint base location.\n+\n+You can issue the following `curl` commands to test it:\n+\n+```shell script\n+curl -v {httpsTrigger.url}\n+```\n+\n+## Background function\n+\n+### PubSub event\n+\n+To deploy a background function that listen to PubSub event, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-pubsub --entry-point=io.quarkus.funqy.gcp.functions.FunqyBackgroundFunction \\\n+  --trigger-resource hello_topic --trigger-event google.pubsub.topic.publish \\\n+  --runtime=java11 --source=deployment\n+```\n+\n+You can then invoke your function via `gcloud`:\n+\n+```shell script\n+gcloud functions call quarkus-example-pubsub --data '{\"data\":\"HelloWorld\"}'\n+```\n+\n+### Storage event\n+\n+To deploy a background function that listen to Storage event, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-storage --entry-point=io.quarkus.funqy.gcp.functions.FunqyBackgroundFunction \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5MDQ3OQ=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE4NTI2OA==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r438185268", "createdAt": "2020-06-10T14:51:49Z", "author": {"login": "loicmathieu"}, "path": "integration-tests/funqy-google-cloud-functions/README.md", "diffHunk": "@@ -0,0 +1,77 @@\n+# Google Cloud Functions - Funqy Binding\n+\n+This integration test has no automated test, it needs to be launched manually.\n+\n+## Build the artifact\n+\n+First, you need to log in to Google Cloud:\n+\n+```shell script\n+gcloud auth login\n+```\n+\n+Then you need to use Maven to build the artifact and put it in a directory where it will be the only file.\n+\n+```shell script\n+mkdir deployment\n+mvn clean package\n+cp target/quarkus-integration-test-funqy-google-cloud-functions-999-SNAPSHOT-runner.jar deployment/\n+```\n+\n+Finally, you need to use `gcloud` to deploy the function to Google Cloud. The `gcloud` command is different for HttpFunction and\n+Background function so the set of instruction differs for each.\n+\n+This example contains multiple Funqy functions, if you want to test a different function that the one defined inside\n+your `application.properties`, you can use the `--set-env-vars` option of `gcloud` to define the name of the function via the \n+`QUARKUS_FUNQY_EXPORT` environment variable.\n+\n+## HTTP function\n+To deploy the HttpFunction, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-http --entry-point=io.quarkus.funqy.gcp.functions.FunqyHttpFunction \\\n+  --trigger-http \\\n+  --runtime=java11 --source=deployment\n+```\n+\n+After deploying your HTTP function to Google Cloud, the `gcloud` command will output the endpoint base location.\n+\n+You can issue the following `curl` commands to test it:\n+\n+```shell script\n+curl -v {httpsTrigger.url}\n+```\n+\n+## Background function\n+\n+### PubSub event\n+\n+To deploy a background function that listen to PubSub event, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-pubsub --entry-point=io.quarkus.funqy.gcp.functions.FunqyBackgroundFunction \\\n+  --trigger-resource hello_topic --trigger-event google.pubsub.topic.publish \\\n+  --runtime=java11 --source=deployment\n+```\n+\n+You can then invoke your function via `gcloud`:\n+\n+```shell script\n+gcloud functions call quarkus-example-pubsub --data '{\"data\":\"HelloWorld\"}'\n+```\n+\n+### Storage event\n+\n+To deploy a background function that listen to Storage event, you can use the following `gcloud` command:\n+\n+```shell script\n+gcloud beta functions deploy quarkus-funqy-storage --entry-point=io.quarkus.funqy.gcp.functions.FunqyBackgroundFunction \\", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5MDQ3OQ=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNjA4OTA5OnYy", "diffSide": "RIGHT", "path": "integration-tests/funqy-amazon-lambda/src/test/java/io/quarkus/funqy/gcp/functions/test/GreetTestBase.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoxNTozNFrOGhUduw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwOToyMDoxMVrOGhsX6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5MTQ4Mw==", "bodyText": "Why are you using the lambda client to test GCP?", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437591483", "createdAt": "2020-06-09T17:15:34Z", "author": {"login": "patriot1burke"}, "path": "integration-tests/funqy-amazon-lambda/src/test/java/io/quarkus/funqy/gcp/functions/test/GreetTestBase.java", "diffHunk": "@@ -24,7 +22,7 @@ public void testGreetNPE() {\n         try {\n             LambdaClient.invoke(Greeting.class, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzkxNTAyMQ==", "bodyText": "Leftover, I'll remove it.\nThere is no integration test support for the moment.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437915021", "createdAt": "2020-06-10T07:30:00Z", "author": {"login": "loicmathieu"}, "path": "integration-tests/funqy-amazon-lambda/src/test/java/io/quarkus/funqy/gcp/functions/test/GreetTestBase.java", "diffHunk": "@@ -24,7 +22,7 @@ public void testGreetNPE() {\n         try {\n             LambdaClient.invoke(Greeting.class, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5MTQ4Mw=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk2OTE5MQ==", "bodyText": "In fact, it worse than that, IDEA refactor all the funqy tests when I refactory the one for GCF ... I'll revert this ...", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437969191", "createdAt": "2020-06-10T08:56:20Z", "author": {"login": "loicmathieu"}, "path": "integration-tests/funqy-amazon-lambda/src/test/java/io/quarkus/funqy/gcp/functions/test/GreetTestBase.java", "diffHunk": "@@ -24,7 +22,7 @@ public void testGreetNPE() {\n         try {\n             LambdaClient.invoke(Greeting.class, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5MTQ4Mw=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk4MzIxMA==", "bodyText": "Change reverted.", "url": "https://github.com/quarkusio/quarkus/pull/9655#discussion_r437983210", "createdAt": "2020-06-10T09:20:11Z", "author": {"login": "loicmathieu"}, "path": "integration-tests/funqy-amazon-lambda/src/test/java/io/quarkus/funqy/gcp/functions/test/GreetTestBase.java", "diffHunk": "@@ -24,7 +22,7 @@ public void testGreetNPE() {\n         try {\n             LambdaClient.invoke(Greeting.class, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5MTQ4Mw=="}, "originalCommit": {"oid": "d6f2cc434620f21f12b83adb19de94aca013b4d7"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3028, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}