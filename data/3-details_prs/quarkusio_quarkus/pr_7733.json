{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MTQ3OTQ4", "number": 7733, "title": "Qute enhancements", "bodyText": "Finally found the time to follow up on the discussions we had at the last f2f, here's my proposal for improving UX for templating.\nATM, in order to do a non-type-safe template you need this template in templates/hello.txt:\nSalut {name}!\n\nAnd this controller:\n@Path(\"hello\")\npublic class HelloResource {\n    @Inject\n    Template hello;\n\n    @GET\n    public TemplateInstance get(@QueryParam String name) {\n        return hello.data(\"name\", name);\n    }\n}\nMy proposal for non-type-safe templates is to move the template to templates/HelloResource/hello.txt and write the following code:\n@Path(\"hello\")\npublic class HelloResource {\n    @GET\n    public TemplateInstance hello(@QueryParam String name) {\n// we can change the class/method name, add a static import, or move it to a superinterface to get it in scope easier\n        return ResteasyTemplate.data(\"name\", name);\n    }\n}\nThis will default to using a template under {className}/{methodName}, and will (this is still missing) take an optional template name as parameter if you want to override it.\nType-safe templates\nOn the other hand (and orthogonally), ATM if you want type-safe templates you need to write this template:\n{@java.lang.String name}\nSalut {name.toLowerCase()}!\n\nWhile the invocation (in any style: old or new) is not ever type-safe, letting you do this:\n@Path(\"hello\")\npublic class HelloResource {\n    @GET\n    public TemplateInstance hello(@QueryParam String name) {\n        return ResteasyTemplate.data(\"name\", 23); // will fail at run-time\n    }\n}\nI propose the following variant, guaranteeing type-safety as discussed at the f2f:\nThe template doesn't have types in there:\nSalut {name.toLowerCase()}!\n\nAnd the template declares a constructor for the template instance:\n@Path(\"hello\")\npublic class HelloResource {\n    public static class hello extends CheckedTemplateInstance {\n        public hello(String name) {\n        }\n    }\n\n    @GET\n    public TemplateInstance hello(@QueryParam String name) {\n        return new hello(name); // this is type-safe\n    }\n}\nThis is implemented in this branch and a little bit tested.\nOpinions @mkouba @maxandersen @emmanuelbernard @cescoffier @nicmarti ?", "createdAt": "2020-03-10T13:55:40Z", "url": "https://github.com/quarkusio/quarkus/pull/7733", "merged": true, "mergeCommit": {"oid": "2345bb4e78dea02454e4dfb204a4ab0db466f1da"}, "closed": true, "closedAt": "2020-06-18T10:07:27Z", "author": {"login": "FroMage"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMT0-dABqjMxMTUwOTQ0NTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsK_IAgBqjM0NTM5NjA0OTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83274d2e422873dc2bb2395af0751456288c93e4", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/83274d2e422873dc2bb2395af0751456288c93e4", "committedDate": "2020-03-10T13:41:36Z", "message": "Tests for checked templates"}, "afterCommit": {"oid": "c7d105653826f5892215aef509885dc7ac721c59", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/c7d105653826f5892215aef509885dc7ac721c59", "committedDate": "2020-03-10T14:59:07Z", "message": "Tests for checked templates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7d105653826f5892215aef509885dc7ac721c59", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/c7d105653826f5892215aef509885dc7ac721c59", "committedDate": "2020-03-10T14:59:07Z", "message": "Tests for checked templates"}, "afterCommit": {"oid": "6b6b195bf2d57cde907d3529d33998e6b33ffe1e", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/6b6b195bf2d57cde907d3529d33998e6b33ffe1e", "committedDate": "2020-04-21T14:56:43Z", "message": "Added support for native method variant"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6df06f7eeb4bd4aef8ce51699bc3d5145bbd94e", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/c6df06f7eeb4bd4aef8ce51699bc3d5145bbd94e", "committedDate": "2020-04-21T15:33:48Z", "message": "Added support for native method variant"}, "afterCommit": {"oid": "04c932cdf93cab95d5dd4fcdd632847db396b43b", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/04c932cdf93cab95d5dd4fcdd632847db396b43b", "committedDate": "2020-05-19T09:18:49Z", "message": "For some reason, the tests don't pass if I don't explicitely add this config"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "04c932cdf93cab95d5dd4fcdd632847db396b43b", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/04c932cdf93cab95d5dd4fcdd632847db396b43b", "committedDate": "2020-05-19T09:18:49Z", "message": "For some reason, the tests don't pass if I don't explicitely add this config"}, "afterCommit": {"oid": "b5e26b311cd815380ac88874e1b7bc18fef84f53", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/b5e26b311cd815380ac88874e1b7bc18fef84f53", "committedDate": "2020-05-26T15:59:32Z", "message": "Support native methods for mail templates, check native method return types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4cb235404e1d62802042bde93a698d00346ad273", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/4cb235404e1d62802042bde93a698d00346ad273", "committedDate": "2020-05-27T13:56:01Z", "message": "Backport #9635 since I've moved JandexUtil into AsmUtil"}, "afterCommit": {"oid": "32618a78acb45923e692efc971b818a1fc3e4949", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/32618a78acb45923e692efc971b818a1fc3e4949", "committedDate": "2020-05-27T14:18:31Z", "message": "Backport #9635 since I've moved JandexUtil into AsmUtil"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32618a78acb45923e692efc971b818a1fc3e4949", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/32618a78acb45923e692efc971b818a1fc3e4949", "committedDate": "2020-05-27T14:18:31Z", "message": "Backport #9635 since I've moved JandexUtil into AsmUtil"}, "afterCommit": {"oid": "99e180ccf7432ea3b9a99cb698587ed0450bd708", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/99e180ccf7432ea3b9a99cb698587ed0450bd708", "committedDate": "2020-05-28T12:26:39Z", "message": "Documented the new type-safe native methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "99e180ccf7432ea3b9a99cb698587ed0450bd708", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/99e180ccf7432ea3b9a99cb698587ed0450bd708", "committedDate": "2020-05-28T12:26:39Z", "message": "Documented the new type-safe native methods"}, "afterCommit": {"oid": "4daf855e9a474b72c080d6084a47407e9490aac9", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/4daf855e9a474b72c080d6084a47407e9490aac9", "committedDate": "2020-06-03T14:29:44Z", "message": "Documented the new type-safe native methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4daf855e9a474b72c080d6084a47407e9490aac9", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/4daf855e9a474b72c080d6084a47407e9490aac9", "committedDate": "2020-06-03T14:29:44Z", "message": "Documented the new type-safe native methods"}, "afterCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/618fc07f3c31428fbe71c0cf042ae9a23ccae6d3", "committedDate": "2020-06-11T09:23:16Z", "message": "Documented the new type-safe native methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Nzg4MzM1", "url": "https://github.com/quarkusio/quarkus/pull/7733#pullrequestreview-428788335", "createdAt": "2020-06-11T10:33:14Z", "commit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDozMzoxNVrOGiXr_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDozMzoxNVrOGiXr_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5Mjg2MQ==", "bodyText": "This should be probably return Templates.item(service.findItem(id));, or?", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r438692861", "createdAt": "2020-06-11T10:33:15Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/qute.adoc", "diffHunk": "@@ -99,9 +202,69 @@ public class Item {\n }\n ----\n \n-And we'd like to render a simple HTML page that contains the item name, price and also a discounted price.\n-The discounted price is sometimes called a \"computed property\".\n-We will implement a template extension method to render this property easily.\n+And we'd like to render a simple HTML page that contains the item name and price.\n+\n+Let's start again with the template:\n+\n+.ItemResource/item.html\n+[source,html]\n+----\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<meta charset=\"UTF-8\">\n+<title>{item.name}</title> <1>\n+</head>\n+<body>\n+    <h1>{item.name}</h1>\n+    <div>Price: {item.price}</div> <2> \n+</body>\n+</html>\n+----\n+<1> This expression is validated. Try to change the expression to `{item.nonSense}` and the build should fail.\n+<2> This is also validated.\n+\n+Finally, let's create a resource class with type-safe templates:\n+\n+.ItemResource.java\n+[source,java]\n+----\n+package org.acme.quarkus.sample;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+import io.quarkus.qute.TemplateInstance;\n+import io.quarkus.qute.Template;\n+import io.quarkus.qute.api.CheckedTemplate;\n+\n+@Path(\"item\")\n+public class ItemResource {\n+\n+    @CheckedTemplate\n+    class Templates {\n+        public static native TemplateInstance item(Item item); <1>\n+    }\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces(MediaType.TEXT_HTML)\n+    public TemplateInstance get(@PathParam(\"id\") Integer id) {\n+        return Templates.item(\"item\", service.findItem(id)); <2>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "originalPosition": 179}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Nzg4Njg2", "url": "https://github.com/quarkusio/quarkus/pull/7733#pullrequestreview-428788686", "createdAt": "2020-06-11T10:33:48Z", "commit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDozMzo0OFrOGiXs5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDozMzo0OFrOGiXs5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5MzA5Mw==", "bodyText": "Alternately -> Alternatively", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r438693093", "createdAt": "2020-06-11T10:33:48Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/qute.adoc", "diffHunk": "@@ -99,9 +202,69 @@ public class Item {\n }\n ----\n \n-And we'd like to render a simple HTML page that contains the item name, price and also a discounted price.\n-The discounted price is sometimes called a \"computed property\".\n-We will implement a template extension method to render this property easily.\n+And we'd like to render a simple HTML page that contains the item name and price.\n+\n+Let's start again with the template:\n+\n+.ItemResource/item.html\n+[source,html]\n+----\n+<!DOCTYPE html>\n+<html>\n+<head>\n+<meta charset=\"UTF-8\">\n+<title>{item.name}</title> <1>\n+</head>\n+<body>\n+    <h1>{item.name}</h1>\n+    <div>Price: {item.price}</div> <2> \n+</body>\n+</html>\n+----\n+<1> This expression is validated. Try to change the expression to `{item.nonSense}` and the build should fail.\n+<2> This is also validated.\n+\n+Finally, let's create a resource class with type-safe templates:\n+\n+.ItemResource.java\n+[source,java]\n+----\n+package org.acme.quarkus.sample;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.PathParam;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+import io.quarkus.qute.TemplateInstance;\n+import io.quarkus.qute.Template;\n+import io.quarkus.qute.api.CheckedTemplate;\n+\n+@Path(\"item\")\n+public class ItemResource {\n+\n+    @CheckedTemplate\n+    class Templates {\n+        public static native TemplateInstance item(Item item); <1>\n+    }\n+\n+    @GET\n+    @Path(\"{id}\")\n+    @Produces(MediaType.TEXT_HTML)\n+    public TemplateInstance get(@PathParam(\"id\") Integer id) {\n+        return Templates.item(\"item\", service.findItem(id)); <2>\n+    }\n+}\n+----\n+<1> Declare a method that gives us a `TemplateInstance` for `templates/ItemResource/item.html` and declare its `Item item` parameter so we can validate the template.\n+<2> Make the `Item` object accessible in the template.\n+\n+=== Template parameter declaration inside the template itself\n+\n+Alternately, you can declare your template parameters in the template file itself.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "originalPosition": 188}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NzkxMDA3", "url": "https://github.com/quarkusio/quarkus/pull/7733#pullrequestreview-428791007", "createdAt": "2020-06-11T10:37:31Z", "commit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDozNzozMVrOGiXzwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDo0NDoyMlrOGiX_2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5NDg0OQ==", "bodyText": "We should add some javadoc here...", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r438694849", "createdAt": "2020-06-11T10:37:31Z", "author": {"login": "mkouba"}, "path": "extensions/qute/runtime/src/main/java/io/quarkus/qute/api/CheckedTemplate.java", "diffHunk": "@@ -0,0 +1,14 @@\n+package io.quarkus.qute.api;\n+\n+import java.lang.annotation.Documented;\n+import java.lang.annotation.ElementType;\n+import java.lang.annotation.Retention;\n+import java.lang.annotation.RetentionPolicy;\n+import java.lang.annotation.Target;\n+\n+@Documented\n+@Retention(RetentionPolicy.RUNTIME)\n+@Target(ElementType.TYPE)\n+public @interface CheckedTemplate {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY5Nzk0Nw==", "bodyText": "I'm not sure about the name... maybe just RestTemplate? IDK maybe it's OK. But it should reside in the io.quarkus.resteasy.qute package as it's a public API. Plus it wouldn't hurt to make it final with a private constructor.", "url": "https://github.com/quarkusio/quarkus/pull/7733#discussion_r438697947", "createdAt": "2020-06-11T10:44:22Z", "author": {"login": "mkouba"}, "path": "extensions/resteasy-qute/runtime/src/main/java/io/quarkus/resteasy/qute/runtime/ResteasyTemplate.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package io.quarkus.resteasy.qute.runtime;\n+\n+import javax.ws.rs.container.ResourceInfo;\n+\n+import org.jboss.resteasy.core.ResteasyContext;\n+\n+import io.quarkus.arc.Arc;\n+import io.quarkus.qute.Engine;\n+import io.quarkus.qute.Template;\n+import io.quarkus.qute.TemplateInstance;\n+\n+public class ResteasyTemplate {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "618fc07f3c31428fbe71c0cf042ae9a23ccae6d3", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/618fc07f3c31428fbe71c0cf042ae9a23ccae6d3", "committedDate": "2020-06-11T09:23:16Z", "message": "Documented the new type-safe native methods"}, "afterCommit": {"oid": "3cfecf3f2e684bca8d373bbe3fbb13f198417be5", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/3cfecf3f2e684bca8d373bbe3fbb13f198417be5", "committedDate": "2020-06-16T09:44:46Z", "message": "PR comment fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNDU4OTc0", "url": "https://github.com/quarkusio/quarkus/pull/7733#pullrequestreview-432458974", "createdAt": "2020-06-17T14:26:51Z", "commit": {"oid": "3cfecf3f2e684bca8d373bbe3fbb13f198417be5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7917f25e963ddc7e44363400f2dfd59fc00d79a1", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/7917f25e963ddc7e44363400f2dfd59fc00d79a1", "committedDate": "2020-06-17T14:46:36Z", "message": "Qute: add parser hook to set up parser before it parses"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3cfecf3f2e684bca8d373bbe3fbb13f198417be5", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/3cfecf3f2e684bca8d373bbe3fbb13f198417be5", "committedDate": "2020-06-16T09:44:46Z", "message": "PR comment fixes"}, "afterCommit": {"oid": "7917f25e963ddc7e44363400f2dfd59fc00d79a1", "author": {"user": {"login": "FroMage", "name": "St\u00e9phane \u00c9pardaud"}}, "url": "https://github.com/quarkusio/quarkus/commit/7917f25e963ddc7e44363400f2dfd59fc00d79a1", "committedDate": "2020-06-17T14:46:36Z", "message": "Qute: add parser hook to set up parser before it parses"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3788, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}