{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMzY0MDcy", "number": 6969, "title": "Introduce Startup annotation", "bodyText": "resolves #5955\n\nI've decided to place the Startup annotation in the quarkus core (io.quarkus.runtime package), next to StartupEvent. I'm not so sure it's the best idea but since it's used to emulate an StartupEvent observer it makes probably more sense than to place it in io.quarkus.arc. WDYT?", "createdAt": "2020-02-03T15:01:25Z", "url": "https://github.com/quarkusio/quarkus/pull/6969", "merged": true, "mergeCommit": {"oid": "85b47c52b20f09b3a2a25490efca8314cebef8bd"}, "closed": true, "closedAt": "2020-02-04T15:50:12Z", "author": {"login": "mkouba"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcAugGxgFqTM1MjMzMDA0Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcA_hhbgBqjMwMDU2NTEwODA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMzMwMDQ3", "url": "https://github.com/quarkusio/quarkus/pull/6969#pullrequestreview-352330047", "createdAt": "2020-02-03T15:16:47Z", "commit": {"oid": "aa00df1d83381148fa96e3d32488dc07bba6817f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNToxNjo0N1rOFk07aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNToxNjo0N1rOFk07aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE2MDIzMg==", "bodyText": "Nice test, \ud83d\udc4d", "url": "https://github.com/quarkusio/quarkus/pull/6969#discussion_r374160232", "createdAt": "2020-02-03T15:16:47Z", "author": {"login": "geoand"}, "path": "extensions/arc/deployment/src/test/java/io/quarkus/arc/test/startup/StartupAnnotationTest.java", "diffHunk": "@@ -0,0 +1,174 @@\n+package io.quarkus.arc.test.startup;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+\n+import java.util.List;\n+import java.util.concurrent.CopyOnWriteArrayList;\n+import java.util.function.Consumer;\n+\n+import javax.annotation.PostConstruct;\n+import javax.annotation.PreDestroy;\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+import javax.enterprise.inject.spi.ObserverMethod;\n+import javax.inject.Singleton;\n+\n+import org.jboss.jandex.AnnotationTarget;\n+import org.jboss.jandex.AnnotationTarget.Kind;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.arc.Unremovable;\n+import io.quarkus.arc.deployment.AnnotationsTransformerBuildItem;\n+import io.quarkus.arc.processor.AnnotationsTransformer;\n+import io.quarkus.builder.BuildChainBuilder;\n+import io.quarkus.builder.BuildContext;\n+import io.quarkus.builder.BuildStep;\n+import io.quarkus.runtime.Startup;\n+import io.quarkus.test.QuarkusUnitTest;\n+\n+public class StartupAnnotationTest {\n+\n+    static final List<String> LOG = new CopyOnWriteArrayList<String>();\n+\n+    @RegisterExtension\n+    static final QuarkusUnitTest config = new QuarkusUnitTest()\n+            .setArchiveProducer(() -> ShrinkWrap.create(JavaArchive.class)\n+                    .addClasses(StartMe.class, SingletonStartMe.class, DependentStartMe.class, ProducerStartMe.class))\n+            .addBuildChainCustomizer(buildCustomizer());\n+\n+    static Consumer<BuildChainBuilder> buildCustomizer() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa00df1d83381148fa96e3d32488dc07bba6817f"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyODYxMzAx", "url": "https://github.com/quarkusio/quarkus/pull/6969#pullrequestreview-352861301", "createdAt": "2020-02-04T10:17:24Z", "commit": {"oid": "aa00df1d83381148fa96e3d32488dc07bba6817f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "622f3e7a50dbcf116a8633964094f293bed9aaa5", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/622f3e7a50dbcf116a8633964094f293bed9aaa5", "committedDate": "2020-02-04T11:06:27Z", "message": "Introduce Startup annotation\n\n- resolves #5955"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa00df1d83381148fa96e3d32488dc07bba6817f", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/aa00df1d83381148fa96e3d32488dc07bba6817f", "committedDate": "2020-02-03T14:58:18Z", "message": "Introduce Startup annotation\n\n- resolves #5955"}, "afterCommit": {"oid": "622f3e7a50dbcf116a8633964094f293bed9aaa5", "author": {"user": {"login": "mkouba", "name": "Martin Kouba"}}, "url": "https://github.com/quarkusio/quarkus/commit/622f3e7a50dbcf116a8633964094f293bed9aaa5", "committedDate": "2020-02-04T11:06:27Z", "message": "Introduce Startup annotation\n\n- resolves #5955"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 45, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}