{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0ODgzNTc0", "number": 7652, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxMToxNTozOVrODmAnrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxMToxNTozOVrODmAnrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTgyNjM2OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxMToxNTozOVrOFzNxgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wN1QxMTo0ODo1OVrOFzN5Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzM2Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static void handleExpose(Config config, Map<String, Object> unPrefixed) {\n          \n          \n            \n                    for (String generator : EXPOSABLE_GENERATORS) {\n          \n          \n            \n                        Optional<Boolean> unprefixedExpose = config.getOptionalValue(generator + \".\" + EXPOSE_PROPERTY_NAME,\n          \n          \n            \n                                Boolean.class);\n          \n          \n            \n                        Optional<Boolean> prefixedExpose = config\n          \n          \n            \n                                .getOptionalValue(QUARKUS_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, Boolean.class);\n          \n          \n            \n                        if ((unprefixedExpose.isPresent() && unprefixedExpose.get())\n          \n          \n            \n                                || (prefixedExpose.isPresent() && prefixedExpose.get())) {\n          \n          \n            \n                            unPrefixed.put(DEKORATE_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, true);\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                }\n          \n          \n            \n                private static void handleExpose(Config config, Map<String, Object> unPrefixed) {\n          \n          \n            \n                    for (String generator : EXPOSABLE_GENERATORS) {\n          \n          \n            \n                        boolean unprefixedExpose = config.getOptionalValue(generator + \".\" + EXPOSE_PROPERTY_NAME, Boolean.class)\n          \n          \n            \n                                .orElse(false);\n          \n          \n            \n                        boolean prefixedExpose = config.getOptionalValue(QUARKUS_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, Boolean.class)\n          \n          \n            \n                                .orElse(false);\n          \n          \n            \n                        if (unprefixedExpose || prefixedExpose) {\n          \n          \n            \n                            unPrefixed.put(DEKORATE_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, true);\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                }\n          \n      \n    \n    \n  \n\nTo simply the if condition a bit. WDYT? @geoand", "url": "https://github.com/quarkusio/quarkus/pull/7652#discussion_r389247363", "createdAt": "2020-03-07T11:15:39Z", "author": {"login": "machi1990"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "diffHunk": "@@ -74,12 +79,28 @@\n             }\n         }\n \n+        // hard-coded support for exposed\n+        handleExpose(config, unPrefixed);\n+\n         result.putAll(unPrefixed);\n         result.putAll(quarkusPrefixed);\n         result.putAll(toS2iProperties(quarkusPrefixed));\n         return result;\n     }\n \n+    private static void handleExpose(Config config, Map<String, Object> unPrefixed) {\n+        for (String generator : EXPOSABLE_GENERATORS) {\n+            Optional<Boolean> unprefixedExpose = config.getOptionalValue(generator + \".\" + EXPOSE_PROPERTY_NAME,\n+                    Boolean.class);\n+            Optional<Boolean> prefixedExpose = config\n+                    .getOptionalValue(QUARKUS_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, Boolean.class);\n+            if ((unprefixedExpose.isPresent() && unprefixedExpose.get())\n+                    || (prefixedExpose.isPresent() && prefixedExpose.get())) {\n+                unPrefixed.put(DEKORATE_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, true);\n+            }\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8329e73238935b6380689754d61994f92ef8db3c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0OTMwMw==", "bodyText": "Updated, thanks", "url": "https://github.com/quarkusio/quarkus/pull/7652#discussion_r389249303", "createdAt": "2020-03-07T11:48:59Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "diffHunk": "@@ -74,12 +79,28 @@\n             }\n         }\n \n+        // hard-coded support for exposed\n+        handleExpose(config, unPrefixed);\n+\n         result.putAll(unPrefixed);\n         result.putAll(quarkusPrefixed);\n         result.putAll(toS2iProperties(quarkusPrefixed));\n         return result;\n     }\n \n+    private static void handleExpose(Config config, Map<String, Object> unPrefixed) {\n+        for (String generator : EXPOSABLE_GENERATORS) {\n+            Optional<Boolean> unprefixedExpose = config.getOptionalValue(generator + \".\" + EXPOSE_PROPERTY_NAME,\n+                    Boolean.class);\n+            Optional<Boolean> prefixedExpose = config\n+                    .getOptionalValue(QUARKUS_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, Boolean.class);\n+            if ((unprefixedExpose.isPresent() && unprefixedExpose.get())\n+                    || (prefixedExpose.isPresent() && prefixedExpose.get())) {\n+                unPrefixed.put(DEKORATE_PREFIX + generator + \".\" + EXPOSE_PROPERTY_NAME, true);\n+            }\n+        }\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTI0NzM2Mw=="}, "originalCommit": {"oid": "8329e73238935b6380689754d61994f92ef8db3c"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4937, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}