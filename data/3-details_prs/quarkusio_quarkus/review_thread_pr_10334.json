{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMzM1NzIx", "number": 10334, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMToyNjoxMFrOEJnO1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoyNjo1MVrOEJqJQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTE1NDE1OnYy", "diffSide": "LEFT", "path": "extensions/elytron-security-jdbc/deployment/src/main/java/io/quarkus/elytron/security/jdbc/deployment/ElytronSecurityJdbcProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMToyNjoxMFrOGqMaog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMTo0NjowM1rOGqNFDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg5NjgwMg==", "bodyText": "Perhaps also make this a build step parameter?", "url": "https://github.com/quarkusio/quarkus/pull/10334#discussion_r446896802", "createdAt": "2020-06-29T11:26:10Z", "author": {"login": "geoand"}, "path": "extensions/elytron-security-jdbc/deployment/src/main/java/io/quarkus/elytron/security/jdbc/deployment/ElytronSecurityJdbcProcessor.java", "diffHunk": "@@ -17,13 +17,12 @@\n import io.quarkus.elytron.security.deployment.ElytronPasswordMarkerBuildItem;\n import io.quarkus.elytron.security.deployment.SecurityRealmBuildItem;\n import io.quarkus.elytron.security.jdbc.JdbcRecorder;\n-import io.quarkus.elytron.security.jdbc.JdbcSecurityRealmConfig;\n+import io.quarkus.elytron.security.jdbc.JdbcSecurityRealmBuildTimeConfig;\n+import io.quarkus.elytron.security.jdbc.JdbcSecurityRealmRuntimeConfig;\n import io.quarkus.runtime.RuntimeValue;\n \n class ElytronSecurityJdbcProcessor {\n \n-    JdbcSecurityRealmConfig jdbc;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b5790c9204da0566edeefa9d26ff1b2f2238bf2"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjkwNzY2Mw==", "bodyText": "Stupid mistake, sorry!", "url": "https://github.com/quarkusio/quarkus/pull/10334#discussion_r446907663", "createdAt": "2020-06-29T11:46:03Z", "author": {"login": "geoand"}, "path": "extensions/elytron-security-jdbc/deployment/src/main/java/io/quarkus/elytron/security/jdbc/deployment/ElytronSecurityJdbcProcessor.java", "diffHunk": "@@ -17,13 +17,12 @@\n import io.quarkus.elytron.security.deployment.ElytronPasswordMarkerBuildItem;\n import io.quarkus.elytron.security.deployment.SecurityRealmBuildItem;\n import io.quarkus.elytron.security.jdbc.JdbcRecorder;\n-import io.quarkus.elytron.security.jdbc.JdbcSecurityRealmConfig;\n+import io.quarkus.elytron.security.jdbc.JdbcSecurityRealmBuildTimeConfig;\n+import io.quarkus.elytron.security.jdbc.JdbcSecurityRealmRuntimeConfig;\n import io.quarkus.runtime.RuntimeValue;\n \n class ElytronSecurityJdbcProcessor {\n \n-    JdbcSecurityRealmConfig jdbc;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njg5NjgwMg=="}, "originalCommit": {"oid": "7b5790c9204da0566edeefa9d26ff1b2f2238bf2"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4NTYzMTM5OnYy", "diffSide": "RIGHT", "path": "extensions/elytron-security-ldap/runtime/src/main/java/io/quarkus/elytron/security/ldap/LdapRecorder.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQxMzoyNjo1MVrOGqQ4dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjoxNTo0OFrOGqkO9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2OTk3NA==", "bodyText": "I'm not 100% sure about the implications of allowing the anonymous LDAP binds OOB. I've looked around, for example, https://www.acunetix.com/vulnerabilities/web/ldap-anonymous-binds/. I guess it should be OK in some cases, but may be we should have a boolean allow-anonymous-bind (false by default) ? This will let the empty principal/password be accepted only if the user has explicitly requested it by having allow-anonymous-bind=true ? Without it, with Optional we don't know if it is a user mistake or an intentional decision...", "url": "https://github.com/quarkusio/quarkus/pull/10334#discussion_r446969974", "createdAt": "2020-06-29T13:26:51Z", "author": {"login": "sberyozkin"}, "path": "extensions/elytron-security-ldap/runtime/src/main/java/io/quarkus/elytron/security/ldap/LdapRecorder.java", "diffHunk": "@@ -47,8 +47,8 @@\n     private ExceptionSupplier<DirContext, NamingException> createDirContextSupplier(DirContextConfig dirContext) {\n         DirContextFactory dirContextFactory = new QuarkusDirContextFactory(\n                 dirContext.url,\n-                dirContext.principal,\n-                dirContext.password);\n+                dirContext.principal.orElse(null),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b5790c9204da0566edeefa9d26ff1b2f2238bf2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzAwMTYwNQ==", "bodyText": "I'm really not sure about this. I think it's OK as is tbh. If they can't log in to their LDAP directory, they will soon realize that they need to set the credentials.", "url": "https://github.com/quarkusio/quarkus/pull/10334#discussion_r447001605", "createdAt": "2020-06-29T14:11:03Z", "author": {"login": "gsmet"}, "path": "extensions/elytron-security-ldap/runtime/src/main/java/io/quarkus/elytron/security/ldap/LdapRecorder.java", "diffHunk": "@@ -47,8 +47,8 @@\n     private ExceptionSupplier<DirContext, NamingException> createDirContextSupplier(DirContextConfig dirContext) {\n         DirContextFactory dirContextFactory = new QuarkusDirContextFactory(\n                 dirContext.url,\n-                dirContext.principal,\n-                dirContext.password);\n+                dirContext.principal.orElse(null),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2OTk3NA=="}, "originalCommit": {"oid": "7b5790c9204da0566edeefa9d26ff1b2f2238bf2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzA0NDc2MA==", "bodyText": "Anonymous binds enabled in LDAP servers are usually seen as a security flaw, but having a flag to allow it seems to be too much work compared to just not providing the credentials, so I'm torn on this one too :)\nI think we should at the very least put something in the logs.", "url": "https://github.com/quarkusio/quarkus/pull/10334#discussion_r447044760", "createdAt": "2020-06-29T15:09:18Z", "author": {"login": "gastaldi"}, "path": "extensions/elytron-security-ldap/runtime/src/main/java/io/quarkus/elytron/security/ldap/LdapRecorder.java", "diffHunk": "@@ -47,8 +47,8 @@\n     private ExceptionSupplier<DirContext, NamingException> createDirContextSupplier(DirContextConfig dirContext) {\n         DirContextFactory dirContextFactory = new QuarkusDirContextFactory(\n                 dirContext.url,\n-                dirContext.principal,\n-                dirContext.password);\n+                dirContext.principal.orElse(null),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2OTk3NA=="}, "originalCommit": {"oid": "7b5790c9204da0566edeefa9d26ff1b2f2238bf2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzEwNzUwMQ==", "bodyText": "Hi @gsmet @gastaldi yeah, I agree, it does feel like it is one more extra step; my concern would be that say the next day after the release someone files the vulnerability request along these lines \"Quarkus activates the anonymous LDAP binds by default\" with some description why it would be a risk :-). As it stands right now, the user who has to get it bound to the secured LDAP has to do some real work (set the principal and password, 2 props), while the user who is OK with the anonymous one just does nothing, so may be it is not that much work to set this property...So at least in the hypothetical scenario (which a good number of CVEs operate in), we have a Quarkus doing an anonymous bind to the LDAP which has been misconfigured to allow such binds. I think I'm getting paranoid, sorry :-)", "url": "https://github.com/quarkusio/quarkus/pull/10334#discussion_r447107501", "createdAt": "2020-06-29T16:41:40Z", "author": {"login": "sberyozkin"}, "path": "extensions/elytron-security-ldap/runtime/src/main/java/io/quarkus/elytron/security/ldap/LdapRecorder.java", "diffHunk": "@@ -47,8 +47,8 @@\n     private ExceptionSupplier<DirContext, NamingException> createDirContextSupplier(DirContextConfig dirContext) {\n         DirContextFactory dirContextFactory = new QuarkusDirContextFactory(\n                 dirContext.url,\n-                dirContext.principal,\n-                dirContext.password);\n+                dirContext.principal.orElse(null),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2OTk3NA=="}, "originalCommit": {"oid": "7b5790c9204da0566edeefa9d26ff1b2f2238bf2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzExMjE2NQ==", "bodyText": "@gsmet @gastaldi If it is not convincing, then go ahead please, I'd not like my theoretical musings stop the enhancement going ahead :-). Would also be good for @stuartwdouglas to check as well but he is offline right now", "url": "https://github.com/quarkusio/quarkus/pull/10334#discussion_r447112165", "createdAt": "2020-06-29T16:49:11Z", "author": {"login": "sberyozkin"}, "path": "extensions/elytron-security-ldap/runtime/src/main/java/io/quarkus/elytron/security/ldap/LdapRecorder.java", "diffHunk": "@@ -47,8 +47,8 @@\n     private ExceptionSupplier<DirContext, NamingException> createDirContextSupplier(DirContextConfig dirContext) {\n         DirContextFactory dirContextFactory = new QuarkusDirContextFactory(\n                 dirContext.url,\n-                dirContext.principal,\n-                dirContext.password);\n+                dirContext.principal.orElse(null),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2OTk3NA=="}, "originalCommit": {"oid": "7b5790c9204da0566edeefa9d26ff1b2f2238bf2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzExNzA4MQ==", "bodyText": "@sberyozkin that makes sense, but isn't up to the LDAP server to decide if anonymous bindings are allowed?", "url": "https://github.com/quarkusio/quarkus/pull/10334#discussion_r447117081", "createdAt": "2020-06-29T16:57:09Z", "author": {"login": "gastaldi"}, "path": "extensions/elytron-security-ldap/runtime/src/main/java/io/quarkus/elytron/security/ldap/LdapRecorder.java", "diffHunk": "@@ -47,8 +47,8 @@\n     private ExceptionSupplier<DirContext, NamingException> createDirContextSupplier(DirContextConfig dirContext) {\n         DirContextFactory dirContextFactory = new QuarkusDirContextFactory(\n                 dirContext.url,\n-                dirContext.principal,\n-                dirContext.password);\n+                dirContext.principal.orElse(null),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2OTk3NA=="}, "originalCommit": {"oid": "7b5790c9204da0566edeefa9d26ff1b2f2238bf2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI4NzAyOA==", "bodyText": "@gastaldi yes, makes sense", "url": "https://github.com/quarkusio/quarkus/pull/10334#discussion_r447287028", "createdAt": "2020-06-29T22:15:48Z", "author": {"login": "sberyozkin"}, "path": "extensions/elytron-security-ldap/runtime/src/main/java/io/quarkus/elytron/security/ldap/LdapRecorder.java", "diffHunk": "@@ -47,8 +47,8 @@\n     private ExceptionSupplier<DirContext, NamingException> createDirContextSupplier(DirContextConfig dirContext) {\n         DirContextFactory dirContextFactory = new QuarkusDirContextFactory(\n                 dirContext.url,\n-                dirContext.principal,\n-                dirContext.password);\n+                dirContext.principal.orElse(null),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Njk2OTk3NA=="}, "originalCommit": {"oid": "7b5790c9204da0566edeefa9d26ff1b2f2238bf2"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2698, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}