{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyMzA4Njk5", "number": 8071, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzoyNDoyNlrODrpKMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOTo0MjoyM1rODuTfKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDg5NzEyOnYy", "diffSide": "RIGHT", "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzoyNDoyNlrOF8GqpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNTowNjoyMFrOF8Lbdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU2ODEwMQ==", "bodyText": "Given that we're testing for this before we check for isEmpty this can throw.", "url": "https://github.com/quarkusio/quarkus/pull/8071#discussion_r398568101", "createdAt": "2020-03-26T13:24:26Z", "author": {"login": "FroMage"}, "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "diffHunk": "@@ -135,6 +142,10 @@ static String createFindQuery(Class<?> entityClass, String query, int paramCount\n         return \"FROM \" + getEntityName(entityClass) + \" WHERE \" + query;\n     }\n \n+    static boolean isNamedQuery(String query) {\n+        return query.charAt(0) == '#';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eda3c749fce3d2e78364f991ac96355d9cddca45"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY0NjEzNQ==", "bodyText": "Fixed", "url": "https://github.com/quarkusio/quarkus/pull/8071#discussion_r398646135", "createdAt": "2020-03-26T15:06:20Z", "author": {"login": "loicmathieu"}, "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "diffHunk": "@@ -135,6 +142,10 @@ static String createFindQuery(Class<?> entityClass, String query, int paramCount\n         return \"FROM \" + getEntityName(entityClass) + \" WHERE \" + query;\n     }\n \n+    static boolean isNamedQuery(String query) {\n+        return query.charAt(0) == '#';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU2ODEwMQ=="}, "originalCommit": {"oid": "eda3c749fce3d2e78364f991ac96355d9cddca45"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTQwMjQxOnYy", "diffSide": "RIGHT", "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNToxMTowOVrOF8Lqzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDozOTo0M1rOF8rrNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MDA2Mg==", "bodyText": "Well, it can also happen here. You could have fixed isNamedQuery instead ;)", "url": "https://github.com/quarkusio/quarkus/pull/8071#discussion_r398650062", "createdAt": "2020-03-26T15:11:09Z", "author": {"login": "FroMage"}, "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "diffHunk": "@@ -249,7 +260,12 @@ public static Object findById(Class<?> entityClass, Object id, LockModeType lock\n         String findQuery = createFindQuery(entityClass, query, paramCount(params));\n         EntityManager em = getEntityManager();\n         // FIXME: check for duplicate ORDER BY clause?\n-        Query jpaQuery = em.createQuery(sort != null ? findQuery + toOrderBy(sort) : findQuery);\n+        Query jpaQuery;\n+        if (isNamedQuery(query)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f86bd853ad27e1e24478ebb8bf1fbfd2bda8e75"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MjQxNw==", "bodyText": "No, here this is the query computed by createFindQuery and it's never null (if null it will be from EntityClass.", "url": "https://github.com/quarkusio/quarkus/pull/8071#discussion_r398652417", "createdAt": "2020-03-26T15:14:05Z", "author": {"login": "loicmathieu"}, "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "diffHunk": "@@ -249,7 +260,12 @@ public static Object findById(Class<?> entityClass, Object id, LockModeType lock\n         String findQuery = createFindQuery(entityClass, query, paramCount(params));\n         EntityManager em = getEntityManager();\n         // FIXME: check for duplicate ORDER BY clause?\n-        Query jpaQuery = em.createQuery(sort != null ? findQuery + toOrderBy(sort) : findQuery);\n+        Query jpaQuery;\n+        if (isNamedQuery(query)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MDA2Mg=="}, "originalCommit": {"oid": "4f86bd853ad27e1e24478ebb8bf1fbfd2bda8e75"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1ODE2NA==", "bodyText": "it looks like the query created by createFindQuery is stored in findQuery and not in the query used, which is a parameter.", "url": "https://github.com/quarkusio/quarkus/pull/8071#discussion_r398658164", "createdAt": "2020-03-26T15:21:15Z", "author": {"login": "FroMage"}, "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "diffHunk": "@@ -249,7 +260,12 @@ public static Object findById(Class<?> entityClass, Object id, LockModeType lock\n         String findQuery = createFindQuery(entityClass, query, paramCount(params));\n         EntityManager em = getEntityManager();\n         // FIXME: check for duplicate ORDER BY clause?\n-        Query jpaQuery = em.createQuery(sort != null ? findQuery + toOrderBy(sort) : findQuery);\n+        Query jpaQuery;\n+        if (isNamedQuery(query)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MDA2Mg=="}, "originalCommit": {"oid": "4f86bd853ad27e1e24478ebb8bf1fbfd2bda8e75"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1ODU1OQ==", "bodyText": "Nope, this comes straight from the user.", "url": "https://github.com/quarkusio/quarkus/pull/8071#discussion_r398658559", "createdAt": "2020-03-26T15:21:44Z", "author": {"login": "FroMage"}, "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "diffHunk": "@@ -249,7 +260,12 @@ public static Object findById(Class<?> entityClass, Object id, LockModeType lock\n         String findQuery = createFindQuery(entityClass, query, paramCount(params));\n         EntityManager em = getEntityManager();\n         // FIXME: check for duplicate ORDER BY clause?\n-        Query jpaQuery = em.createQuery(sort != null ? findQuery + toOrderBy(sort) : findQuery);\n+        Query jpaQuery;\n+        if (isNamedQuery(query)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MDA2Mg=="}, "originalCommit": {"oid": "4f86bd853ad27e1e24478ebb8bf1fbfd2bda8e75"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY3MjY3NA==", "bodyText": "Damned it! I need to clean my glasses ;)\nI will add a test with null and emtpy query so we didn't risk such bugs later", "url": "https://github.com/quarkusio/quarkus/pull/8071#discussion_r398672674", "createdAt": "2020-03-26T15:39:14Z", "author": {"login": "loicmathieu"}, "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "diffHunk": "@@ -249,7 +260,12 @@ public static Object findById(Class<?> entityClass, Object id, LockModeType lock\n         String findQuery = createFindQuery(entityClass, query, paramCount(params));\n         EntityManager em = getEntityManager();\n         // FIXME: check for duplicate ORDER BY clause?\n-        Query jpaQuery = em.createQuery(sort != null ? findQuery + toOrderBy(sort) : findQuery);\n+        Query jpaQuery;\n+        if (isNamedQuery(query)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MDA2Mg=="}, "originalCommit": {"oid": "4f86bd853ad27e1e24478ebb8bf1fbfd2bda8e75"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE3NDQ1NQ==", "bodyText": "@FroMage fixed.\nI also add tests for empty and null query.", "url": "https://github.com/quarkusio/quarkus/pull/8071#discussion_r399174455", "createdAt": "2020-03-27T10:39:43Z", "author": {"login": "loicmathieu"}, "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "diffHunk": "@@ -249,7 +260,12 @@ public static Object findById(Class<?> entityClass, Object id, LockModeType lock\n         String findQuery = createFindQuery(entityClass, query, paramCount(params));\n         EntityManager em = getEntityManager();\n         // FIXME: check for duplicate ORDER BY clause?\n-        Query jpaQuery = em.createQuery(sort != null ? findQuery + toOrderBy(sort) : findQuery);\n+        Query jpaQuery;\n+        if (isNamedQuery(query)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MDA2Mg=="}, "originalCommit": {"oid": "4f86bd853ad27e1e24478ebb8bf1fbfd2bda8e75"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTQwNTE4OnYy", "diffSide": "RIGHT", "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNToxMTozOFrOF8LsZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMDozOTo1NlrOF8rrng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MDQ3MA==", "bodyText": "And here.", "url": "https://github.com/quarkusio/quarkus/pull/8071#discussion_r398650470", "createdAt": "2020-03-26T15:11:38Z", "author": {"login": "FroMage"}, "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "diffHunk": "@@ -263,7 +279,12 @@ public static Object findById(Class<?> entityClass, Object id, LockModeType lock\n         String findQuery = createFindQuery(entityClass, query, paramCount(params));\n         EntityManager em = getEntityManager();\n         // FIXME: check for duplicate ORDER BY clause?\n-        Query jpaQuery = em.createQuery(sort != null ? findQuery + toOrderBy(sort) : findQuery);\n+        Query jpaQuery;\n+        if (isNamedQuery(query)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f86bd853ad27e1e24478ebb8bf1fbfd2bda8e75"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MjUxMw==", "bodyText": "same", "url": "https://github.com/quarkusio/quarkus/pull/8071#discussion_r398652513", "createdAt": "2020-03-26T15:14:12Z", "author": {"login": "loicmathieu"}, "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "diffHunk": "@@ -263,7 +279,12 @@ public static Object findById(Class<?> entityClass, Object id, LockModeType lock\n         String findQuery = createFindQuery(entityClass, query, paramCount(params));\n         EntityManager em = getEntityManager();\n         // FIXME: check for duplicate ORDER BY clause?\n-        Query jpaQuery = em.createQuery(sort != null ? findQuery + toOrderBy(sort) : findQuery);\n+        Query jpaQuery;\n+        if (isNamedQuery(query)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MDQ3MA=="}, "originalCommit": {"oid": "4f86bd853ad27e1e24478ebb8bf1fbfd2bda8e75"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1ODk3NA==", "bodyText": "Same here, it comes straight from the user. Now, I'll admit it looks like we're missing a null check too\u2026", "url": "https://github.com/quarkusio/quarkus/pull/8071#discussion_r398658974", "createdAt": "2020-03-26T15:22:18Z", "author": {"login": "FroMage"}, "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "diffHunk": "@@ -263,7 +279,12 @@ public static Object findById(Class<?> entityClass, Object id, LockModeType lock\n         String findQuery = createFindQuery(entityClass, query, paramCount(params));\n         EntityManager em = getEntityManager();\n         // FIXME: check for duplicate ORDER BY clause?\n-        Query jpaQuery = em.createQuery(sort != null ? findQuery + toOrderBy(sort) : findQuery);\n+        Query jpaQuery;\n+        if (isNamedQuery(query)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MDQ3MA=="}, "originalCommit": {"oid": "4f86bd853ad27e1e24478ebb8bf1fbfd2bda8e75"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTE3NDU1OA==", "bodyText": "same, fixed", "url": "https://github.com/quarkusio/quarkus/pull/8071#discussion_r399174558", "createdAt": "2020-03-27T10:39:56Z", "author": {"login": "loicmathieu"}, "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/JpaOperations.java", "diffHunk": "@@ -263,7 +279,12 @@ public static Object findById(Class<?> entityClass, Object id, LockModeType lock\n         String findQuery = createFindQuery(entityClass, query, paramCount(params));\n         EntityManager em = getEntityManager();\n         // FIXME: check for duplicate ORDER BY clause?\n-        Query jpaQuery = em.createQuery(sort != null ? findQuery + toOrderBy(sort) : findQuery);\n+        Query jpaQuery;\n+        if (isNamedQuery(query)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODY1MDQ3MA=="}, "originalCommit": {"oid": "4f86bd853ad27e1e24478ebb8bf1fbfd2bda8e75"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5ODgwMzYxOnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/hibernate-orm-panache.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOTo0MjoyM1rOGAOK1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwOTo0MjoyM1rOGAOK1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjg4NTMzMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            or on one of it's super classes.\n          \n          \n            \n            or on one of its super classes.", "url": "https://github.com/quarkusio/quarkus/pull/8071#discussion_r402885333", "createdAt": "2020-04-03T09:42:23Z", "author": {"login": "FroMage"}, "path": "docs/src/main/asciidoc/hibernate-orm-panache.adoc", "diffHunk": "@@ -518,6 +518,31 @@ Order.find(\"select distinct o from Order o left join fetch o.lineItems\");\n Order.update(\"update from Person set name = 'Mortal' where status = ?\", Status.Alive);\n ----\n \n+=== Named queries\n+\n+You can reference a named query instead of a (simplified) HQL query by prefixing its name with the '#' character.\n+\n+[source,java]\n+----\n+@Entity\n+@NamedQuery(name = \"Person.getByName\", query = \"from Person where name = :name\")\n+public class Person extends PanacheEntity {\n+    public String name;\n+    public LocalDate birth;\n+    public Status status;\n+\n+    public static Person findByName(String name){\n+        return find(\"#Person.getByName\", name).firstResult();\n+    }\n+}\n+----\n+\n+[WARNING]\n+====\n+Named queries can only be defined inside your JPA entity classes (being the Panache entity class, or the repository parameterized type),\n+or on one of it's super classes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58c364d9d9871834f0ee6feec96ad6f78dc2f558"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4574, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}