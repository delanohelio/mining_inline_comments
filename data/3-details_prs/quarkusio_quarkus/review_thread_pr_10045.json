{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MTcyOTc2", "number": 10045, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjozMToxOVrOEF6l2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjozMToxOVrOEF6l2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NjM4Mjk5OnYy", "diffSide": "RIGHT", "path": "extensions/spring-web/runtime/src/main/java/io/quarkus/spring/web/runtime/ResponseContentTypeResolver.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjozMToxOVrOGkZCbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNDoyNDozNFrOGkd6XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgxMjE0MQ==", "bodyText": "This is done because negotiation.setAcceptHeaders(anEmptyList); throws a NPE", "url": "https://github.com/quarkusio/quarkus/pull/10045#discussion_r440812141", "createdAt": "2020-06-16T12:31:19Z", "author": {"login": "geoand"}, "path": "extensions/spring-web/runtime/src/main/java/io/quarkus/spring/web/runtime/ResponseContentTypeResolver.java", "diffHunk": "@@ -20,7 +20,9 @@ public static MediaType resolve(HttpHeaders httpHeaders, String... supportedMedi\n         Objects.requireNonNull(httpHeaders, \"HttpHeaders cannot be null\");\n         Objects.requireNonNull(supportedMediaTypes, \"Supported media types array cannot be null\");\n \n-        Variant bestVariant = getBestVariant(httpHeaders.getRequestHeader(ACCEPT), getMediaTypeVariants(supportedMediaTypes));\n+        List<String> acceptHeaders = httpHeaders.getRequestHeader(ACCEPT);\n+        Variant bestVariant = acceptHeaders.isEmpty() ? null\n+                : getBestVariant(acceptHeaders, getMediaTypeVariants(supportedMediaTypes));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa42efab7c4aa78043f0fadfef49d087aba26336"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg3MjE4Mw==", "bodyText": "It would be cleaner to do the list check in the getBesetVariant method.", "url": "https://github.com/quarkusio/quarkus/pull/10045#discussion_r440872183", "createdAt": "2020-06-16T13:58:15Z", "author": {"login": "gytis"}, "path": "extensions/spring-web/runtime/src/main/java/io/quarkus/spring/web/runtime/ResponseContentTypeResolver.java", "diffHunk": "@@ -20,7 +20,9 @@ public static MediaType resolve(HttpHeaders httpHeaders, String... supportedMedi\n         Objects.requireNonNull(httpHeaders, \"HttpHeaders cannot be null\");\n         Objects.requireNonNull(supportedMediaTypes, \"Supported media types array cannot be null\");\n \n-        Variant bestVariant = getBestVariant(httpHeaders.getRequestHeader(ACCEPT), getMediaTypeVariants(supportedMediaTypes));\n+        List<String> acceptHeaders = httpHeaders.getRequestHeader(ACCEPT);\n+        Variant bestVariant = acceptHeaders.isEmpty() ? null\n+                : getBestVariant(acceptHeaders, getMediaTypeVariants(supportedMediaTypes));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgxMjE0MQ=="}, "originalCommit": {"oid": "aa42efab7c4aa78043f0fadfef49d087aba26336"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDg5MTk5Nw==", "bodyText": "Indeed", "url": "https://github.com/quarkusio/quarkus/pull/10045#discussion_r440891997", "createdAt": "2020-06-16T14:24:34Z", "author": {"login": "geoand"}, "path": "extensions/spring-web/runtime/src/main/java/io/quarkus/spring/web/runtime/ResponseContentTypeResolver.java", "diffHunk": "@@ -20,7 +20,9 @@ public static MediaType resolve(HttpHeaders httpHeaders, String... supportedMedi\n         Objects.requireNonNull(httpHeaders, \"HttpHeaders cannot be null\");\n         Objects.requireNonNull(supportedMediaTypes, \"Supported media types array cannot be null\");\n \n-        Variant bestVariant = getBestVariant(httpHeaders.getRequestHeader(ACCEPT), getMediaTypeVariants(supportedMediaTypes));\n+        List<String> acceptHeaders = httpHeaders.getRequestHeader(ACCEPT);\n+        Variant bestVariant = acceptHeaders.isEmpty() ? null\n+                : getBestVariant(acceptHeaders, getMediaTypeVariants(supportedMediaTypes));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgxMjE0MQ=="}, "originalCommit": {"oid": "aa42efab7c4aa78043f0fadfef49d087aba26336"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2754, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}