{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3OTI4ODE2", "number": 6822, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMDoxNDo0MVrODbammQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMDoxNDo0MVrODbammQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMDc0MDA5OnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwMDoxNDo0MVrOFi5AJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNzo0MTo1MlrOFi_CDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEyOTgzMQ==", "bodyText": "Files.find needs to be in a try with resources block, as the stream needs to be closed.", "url": "https://github.com/quarkusio/quarkus/pull/6822#discussion_r372129831", "createdAt": "2020-01-29T00:14:41Z", "author": {"login": "stuartwdouglas"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "diffHunk": "@@ -378,31 +379,43 @@ public NativeImageSourceJarBuildItem buildNativeImageJar(CurateOutcomeBuildItem\n      */\n     private void copyJsonConfigFiles(ApplicationArchivesBuildItem applicationArchivesBuildItem, Path thinJarDirectory)\n             throws IOException {\n-        // archiveLocation contains the location of the application jar at this point\n-        Path appJarPath = applicationArchivesBuildItem.getRootArchive().getArchiveLocation();\n-        try (FileSystem jarFileSystem = FileSystems.newFileSystem(appJarPath, null)) {\n-            try (Stream<Path> stream = Files.find(jarFileSystem.getPath(\"/\"), 1, new BiPredicate<Path, BasicFileAttributes>() {\n+        Path archiveLocation = applicationArchivesBuildItem.getRootArchive().getArchiveLocation();\n+        if (Files.isDirectory(archiveLocation)) { // this is the use case where the native image is built as part of the regular build\n+            Files.find(archiveLocation, 1, IS_JSON_FILE_PREDICATE).forEach(new Consumer<Path>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "226a960fa716bc754eadca5a8ea7f5f2571d282b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjIyODYyMA==", "bodyText": "Oops! My bad, it should be fixed now", "url": "https://github.com/quarkusio/quarkus/pull/6822#discussion_r372228620", "createdAt": "2020-01-29T07:41:52Z", "author": {"login": "geoand"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/JarResultBuildStep.java", "diffHunk": "@@ -378,31 +379,43 @@ public NativeImageSourceJarBuildItem buildNativeImageJar(CurateOutcomeBuildItem\n      */\n     private void copyJsonConfigFiles(ApplicationArchivesBuildItem applicationArchivesBuildItem, Path thinJarDirectory)\n             throws IOException {\n-        // archiveLocation contains the location of the application jar at this point\n-        Path appJarPath = applicationArchivesBuildItem.getRootArchive().getArchiveLocation();\n-        try (FileSystem jarFileSystem = FileSystems.newFileSystem(appJarPath, null)) {\n-            try (Stream<Path> stream = Files.find(jarFileSystem.getPath(\"/\"), 1, new BiPredicate<Path, BasicFileAttributes>() {\n+        Path archiveLocation = applicationArchivesBuildItem.getRootArchive().getArchiveLocation();\n+        if (Files.isDirectory(archiveLocation)) { // this is the use case where the native image is built as part of the regular build\n+            Files.find(archiveLocation, 1, IS_JSON_FILE_PREDICATE).forEach(new Consumer<Path>() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjEyOTgzMQ=="}, "originalCommit": {"oid": "226a960fa716bc754eadca5a8ea7f5f2571d282b"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1168, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}