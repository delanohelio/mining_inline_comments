{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NjQ1ODQ2", "number": 7418, "title": "Prevent redirect loops and support a cookie path parameter", "bodyText": "Fixes #6802.\nThis PR makes the following changes:\n\nIntroduces AuthenticationCompletionException to avoid a confusing redirect loop in all the cases when, after the user has already authenticated at the IDP site, the last phase of the authentication flow fails. Two main cases are: missing the state cookie or a code to token exchange failure due to the redirect_uri mismatch. Both of these cases are tested and the log warnings are issued. (I was thinking for a moment to avoid introducing a new exception and instead set a routing context flag and then react to it in the challenge method but decided that having an exception was cleaner)\n\nIn fact, with the last case (code to token exchange) I've managed, in a weird way, before the fix, to have a test application method successfully invoked despite a code grant failure (multi-tenancy case where after the tenant specific failure a redirect loop has started and a default configuration was picked up). Which is a major security issue and has to be fixed before the users will start stressing the multi-tenancy with 1.3.0.\n\n\ncookie-path property is added and tested to address the case where the redirect-path has a root different that of the original request URL which would otherwise cause a redirect loop (before the fix) or 401 with a fix due to a missing state cookie\n\n\nUpdated DefaultTenantConfigResolver to log a debug message when TenantResolver returns a non-empty tenantId and no matching tenant configuration has been found; I've spent a lot of time figuring out the test issues after I've mistyped tenant-3 as tenant3. I've actually wanted to throw an exception but it might be too forceful for the truly dynamic situations tested in the oidc-tenancy (Single ConcurrentHashMap is an alternative but it feels it is not too bad having the dedicated static and dynamic maps)\n\n\nUpdated DefaultTenantConfigResolver to keep TenantConfigContexts created with the help from TenantConfigResolver in its own map to avoid a possible thread safety issue (one thread gets TenantConfigResolver statically created at the startup, another one puts a new TenantConfigContext) and updated a lock to minimize a possible contention too.", "createdAt": "2020-02-25T15:20:56Z", "url": "https://github.com/quarkusio/quarkus/pull/7418", "merged": true, "mergeCommit": {"oid": "e1696bb880812d90fd05177edc5a1598569f9e15"}, "closed": true, "closedAt": "2020-02-26T11:42:54Z", "author": {"login": "sberyozkin"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcH1niDABqjMwNzAzNDg5NTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcIFByKgFqTM2NDgyMzM4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6632dfc1a8c1cc32a7ba3f683c991f12d51b9419", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/6632dfc1a8c1cc32a7ba3f683c991f12d51b9419", "committedDate": "2020-02-25T14:59:02Z", "message": "Prevent redirect loops and support a cookie path parameter"}, "afterCommit": {"oid": "b71a49f88a1c35b133efe429715eff0833acffda", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/b71a49f88a1c35b133efe429715eff0833acffda", "committedDate": "2020-02-25T17:31:24Z", "message": "Prevent redirect loops and support a cookie path parameter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b71a49f88a1c35b133efe429715eff0833acffda", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/b71a49f88a1c35b133efe429715eff0833acffda", "committedDate": "2020-02-25T17:31:24Z", "message": "Prevent redirect loops and support a cookie path parameter"}, "afterCommit": {"oid": "7d1dba601c920770a02c30c5cf7d0d7902209cde", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/7d1dba601c920770a02c30c5cf7d0d7902209cde", "committedDate": "2020-02-25T22:05:53Z", "message": "Prevent redirect loops and support a cookie path parameter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NTE4OTk4", "url": "https://github.com/quarkusio/quarkus/pull/7418#pullrequestreview-364518998", "createdAt": "2020-02-25T23:13:20Z", "commit": {"oid": "7d1dba601c920770a02c30c5cf7d0d7902209cde"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMzoxMzoyMFrOFuYu5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQyMzoxMzoyMFrOFuYu5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDE4NDAzOA==", "bodyText": "This should be DEBUG if it is something a user can trigger with a malformed request. In general you don't want to log anything that a user can trigger higher than DEBUG, as it opens you up to DOS attacks because logging is very expensive.", "url": "https://github.com/quarkusio/quarkus/pull/7418#discussion_r384184038", "createdAt": "2020-02-25T23:13:20Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/CodeAuthenticationMechanism.java", "diffHunk": "@@ -182,16 +188,19 @@ private static QuarkusSecurityIdentity augmentIdentity(SecurityIdentity security\n \n         configContext.auth.authenticate(params, userAsyncResult -> {\n             if (userAsyncResult.failed()) {\n-                cf.completeExceptionally(new AuthenticationFailedException());\n+                if (userAsyncResult.cause() != null) {\n+                    LOG.warnf(\"Exception during the code to token exchange: %s\", userAsyncResult.cause().getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d1dba601c920770a02c30c5cf7d0d7902209cde"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff1425ba3f87e2963026306620e22581ba3df309", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/ff1425ba3f87e2963026306620e22581ba3df309", "committedDate": "2020-02-26T09:42:27Z", "message": "Prevent redirect loops and support a cookie path parameter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7d1dba601c920770a02c30c5cf7d0d7902209cde", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/7d1dba601c920770a02c30c5cf7d0d7902209cde", "committedDate": "2020-02-25T22:05:53Z", "message": "Prevent redirect loops and support a cookie path parameter"}, "afterCommit": {"oid": "ff1425ba3f87e2963026306620e22581ba3df309", "author": {"user": {"login": "sberyozkin", "name": null}}, "url": "https://github.com/quarkusio/quarkus/commit/ff1425ba3f87e2963026306620e22581ba3df309", "committedDate": "2020-02-26T09:42:27Z", "message": "Prevent redirect loops and support a cookie path parameter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODA5ODcw", "url": "https://github.com/quarkusio/quarkus/pull/7418#pullrequestreview-364809870", "createdAt": "2020-02-26T11:06:18Z", "commit": {"oid": "ff1425ba3f87e2963026306620e22581ba3df309"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0ODIzMzg1", "url": "https://github.com/quarkusio/quarkus/pull/7418#pullrequestreview-364823385", "createdAt": "2020-02-26T11:28:57Z", "commit": {"oid": "ff1425ba3f87e2963026306620e22581ba3df309"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4011, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}