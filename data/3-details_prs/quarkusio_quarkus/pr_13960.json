{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMTYyNzY1", "number": 13960, "title": "Ability to configure provided capabilities in the extension descriptor and detect conflicts", "bodyText": "This change allows extensions to configure the provided capabilities in their descriptors (META-INF/quarkus-extension.properties).\nA capability is represented as a dot-separated string that denotes, e.g., a specific spec implementation or some other functionality.\nThe primary goal of this PR at this stage was to allow identifying multiple conflicting among themselves providers of the same capability in an application and report that fact as an error early during the build.\nCapabilities can be configured in the Maven plugin generating the extension descriptor, e.g.\n            <plugin>\n                <groupId>io.quarkus</groupId>\n                <artifactId>quarkus-bootstrap-maven-plugin</artifactId>\n                <configuration>\n                    <capabilities>\n                        <provides>io.quarkus.resteasy</provides>\n                        <provides>other</provides>\n                    </capabilities>\n                </configuration>\n            </plugin>\n\nThe configuration above will add the following property to the generated META-INF/quarkus-extension.properties\nprovides-capabilities=io.quarkus.resteasy,other\n\nIn case the above configuration is added to e.g. quarkus-resteasy and quarkus-resteasy-reactive and both of these extensions are found among the app dependencies then the build will fail with the following error\nCaused by: io.quarkus.bootstrap.resolver.AppModelResolverException: Please make sure there is only one provider of the following capabailities.\nCapability io.quarkus.resteasy is provided by:\n  - io.quarkus:quarkus-resteasy::jar:999-SNAPSHOT\n  - io.quarkus:quarkus-resteasy-reactive::jar:999-SNAPSHOT\nCapability other is provided by:\n  - io.quarkus:quarkus-resteasy::jar:999-SNAPSHOT\n  - io.quarkus:quarkus-resteasy-reactive::jar:999-SNAPSHOT\n\nCapabilities configured in extension descriptors are still represented as CapabilityBuildItems at build time. All CapabilityBuilldItems regardless whether they were created by extensions directly or from extension descriptors will participate in the conflict check.\nCapabilityBuildItem's created by extensions may be produced by BuildSteps that are configured with onlyIf and onlyIfNot boolean suppliers. The plugin configuration allows to express them as, e.g.\n            <plugin>\n                <groupId>io.quarkus</groupId>\n                <artifactId>quarkus-bootstrap-maven-plugin</artifactId>\n                <configuration>\n                    <capabilities>\n                        <providesIf>\n                            <positive>org.acme.BooleanSupplierImpl</positive>\n                            <negative>org.acme.OtherBooleanSupplierImpl</negative>\n                            <name>org.acme.some.capability</name>\n                        </providesIf>\n                        <provides>other</provides>\n                    </capabilities>\n                </configuration>\n            </plugin>\n\nExtensions can still check whether a capability is available at build time using Capabilities.isPresent(capabilityName). This PR adds another method Capabilities.isCapabilityWithPrefixPresent(capabilityPrefix). This method checks whether there is any capability that starts with the given prefix (which is also a dot separated string).\nFor example if there is an extension providing io.quarkus.resteasy.json.jackson and an extension providing io.quarkus.resteasy.json.jsonb capabilities, at build time it could be checked whether there is an extension providing any of those by calling capabilities.isCapabilityWithPrefixPresent(\"io.quarkus.resteasy.json\").", "createdAt": "2020-12-17T22:07:13Z", "url": "https://github.com/quarkusio/quarkus/pull/13960", "merged": true, "mergeCommit": {"oid": "ca56b59521d22241d464fda8ac1893610e043a89"}, "closed": true, "closedAt": "2021-04-22T12:44:36Z", "author": {"login": "aloubyansky"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnNQmpgFqTU1NTA5ODQ4MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABePmcM_gFqTY0MjE1MTcwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MDk4NDgx", "url": "https://github.com/quarkusio/quarkus/pull/13960#pullrequestreview-555098481", "createdAt": "2020-12-18T00:47:11Z", "commit": {"oid": "8f2115fe51bb30fd4a8f8428fdde57b3548c2e36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMDo0NzoxMVrOIIOs_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMDo0NzoxMVrOIIOs_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTUwMDQxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        writer.write(\"Please make sure there is only one provider of the following capabailities.\");\n          \n          \n            \n                        writer.write(\"Please make sure there is only one provider of the following capabilities.\");", "url": "https://github.com/quarkusio/quarkus/pull/13960#discussion_r545500414", "createdAt": "2020-12-18T00:47:11Z", "author": {"login": "maxandersen"}, "path": "independent-projects/bootstrap/app-model/src/main/java/io/quarkus/bootstrap/resolver/CapabilityErrors.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.quarkus.bootstrap.resolver;\n+\n+import java.io.BufferedWriter;\n+import java.io.IOException;\n+import java.io.StringWriter;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class CapabilityErrors {\n+\n+    private final Map<String, List<String>> conflicts = new HashMap<>();\n+\n+    public void addConflict(String capability, String provider) {\n+        conflicts.computeIfAbsent(capability, k -> new ArrayList<>()).add(provider);\n+    }\n+\n+    public boolean isEmpty() {\n+        return conflicts.isEmpty();\n+    }\n+\n+    public String report() {\n+        final StringWriter sw = new StringWriter();\n+        try (BufferedWriter writer = new BufferedWriter(sw)) {\n+            writer.write(\"Please make sure there is only one provider of the following capabailities.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f2115fe51bb30fd4a8f8428fdde57b3548c2e36"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f2115fe51bb30fd4a8f8428fdde57b3548c2e36", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/8f2115fe51bb30fd4a8f8428fdde57b3548c2e36", "committedDate": "2020-12-17T22:06:01Z", "message": "Introduction of the notion of capabilities provided by extensions and the capability conflict checks"}, "afterCommit": {"oid": "c61eb0eb90bca13d0e5abb3fc62253fcbde7e181", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/c61eb0eb90bca13d0e5abb3fc62253fcbde7e181", "committedDate": "2020-12-18T08:01:52Z", "message": "Introduction of the notion of capabilities provided by extensions and the capability conflict checks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwMTU0Nzc2", "url": "https://github.com/quarkusio/quarkus/pull/13960#pullrequestreview-570154776", "createdAt": "2021-01-18T03:48:27Z", "commit": {"oid": "c61eb0eb90bca13d0e5abb3fc62253fcbde7e181"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwMzo0ODoyN1rOIVZI0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwMzo0ODoyN1rOIVZI0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTMwMjg2Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        writer.write(\"Please make sure there is only one provider of the following capabilities.\");\n          \n          \n            \n                        writer.write(\"Please make sure there is only one provider of the following capabilities:\");", "url": "https://github.com/quarkusio/quarkus/pull/13960#discussion_r559302867", "createdAt": "2021-01-18T03:48:27Z", "author": {"login": "gastaldi"}, "path": "independent-projects/bootstrap/app-model/src/main/java/io/quarkus/bootstrap/resolver/CapabilityErrors.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package io.quarkus.bootstrap.resolver;\n+\n+import java.io.BufferedWriter;\n+import java.io.IOException;\n+import java.io.StringWriter;\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+public class CapabilityErrors {\n+\n+    private final Map<String, List<String>> conflicts = new HashMap<>();\n+\n+    public void addConflict(String capability, String provider) {\n+        conflicts.computeIfAbsent(capability, k -> new ArrayList<>()).add(provider);\n+    }\n+\n+    public boolean isEmpty() {\n+        return conflicts.isEmpty();\n+    }\n+\n+    public String report() {\n+        final StringWriter sw = new StringWriter();\n+        try (BufferedWriter writer = new BufferedWriter(sw)) {\n+            writer.write(\"Please make sure there is only one provider of the following capabilities.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c61eb0eb90bca13d0e5abb3fc62253fcbde7e181"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c61eb0eb90bca13d0e5abb3fc62253fcbde7e181", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/c61eb0eb90bca13d0e5abb3fc62253fcbde7e181", "committedDate": "2020-12-18T08:01:52Z", "message": "Introduction of the notion of capabilities provided by extensions and the capability conflict checks"}, "afterCommit": {"oid": "8fa3986c444bb4fae07042ff23223fe1ff12a275", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/8fa3986c444bb4fae07042ff23223fe1ff12a275", "committedDate": "2021-01-27T16:41:40Z", "message": "Ability to configure provided capabilities in the extension descriptor and capability conflict detection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8fa3986c444bb4fae07042ff23223fe1ff12a275", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/8fa3986c444bb4fae07042ff23223fe1ff12a275", "committedDate": "2021-01-27T16:41:40Z", "message": "Ability to configure provided capabilities in the extension descriptor and capability conflict detection"}, "afterCommit": {"oid": "469c2e8cd9fa2310caa3f513dac1c099dcaba656", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/469c2e8cd9fa2310caa3f513dac1c099dcaba656", "committedDate": "2021-01-27T16:43:12Z", "message": "Ability to configure provided capabilities in the extension descriptor and capability conflict detection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "469c2e8cd9fa2310caa3f513dac1c099dcaba656", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/469c2e8cd9fa2310caa3f513dac1c099dcaba656", "committedDate": "2021-01-27T16:43:12Z", "message": "Ability to configure provided capabilities in the extension descriptor and capability conflict detection"}, "afterCommit": {"oid": "9a3f67d3be7b1a96762667c244ab65bbf5b22f9b", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/9a3f67d3be7b1a96762667c244ab65bbf5b22f9b", "committedDate": "2021-01-29T11:54:01Z", "message": "Ability to configure provided capabilities in the extension descriptor and capability conflict detection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a3f67d3be7b1a96762667c244ab65bbf5b22f9b", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/9a3f67d3be7b1a96762667c244ab65bbf5b22f9b", "committedDate": "2021-01-29T11:54:01Z", "message": "Ability to configure provided capabilities in the extension descriptor and capability conflict detection"}, "afterCommit": {"oid": "c905f4b6161a8340e80d3097c4b04e5aa4bdf3e1", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/c905f4b6161a8340e80d3097c4b04e5aa4bdf3e1", "committedDate": "2021-03-25T11:52:24Z", "message": "Ability to configure provided capabilities in the extension descriptor and capability conflict detection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c905f4b6161a8340e80d3097c4b04e5aa4bdf3e1", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/c905f4b6161a8340e80d3097c4b04e5aa4bdf3e1", "committedDate": "2021-03-25T11:52:24Z", "message": "Ability to configure provided capabilities in the extension descriptor and capability conflict detection"}, "afterCommit": {"oid": "69b3ae4da203013141f47dffa8bdb43a10eca859", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/69b3ae4da203013141f47dffa8bdb43a10eca859", "committedDate": "2021-03-25T16:19:59Z", "message": "Ability to configure provided capabilities in the extension descriptor and capability conflict detection"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "69b3ae4da203013141f47dffa8bdb43a10eca859", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/69b3ae4da203013141f47dffa8bdb43a10eca859", "committedDate": "2021-03-25T16:19:59Z", "message": "Ability to configure provided capabilities in the extension descriptor and capability conflict detection"}, "afterCommit": {"oid": "1abe53b1a585d6985b77485494c3bbb2578a792c", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/1abe53b1a585d6985b77485494c3bbb2578a792c", "committedDate": "2021-03-26T11:02:49Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1abe53b1a585d6985b77485494c3bbb2578a792c", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/1abe53b1a585d6985b77485494c3bbb2578a792c", "committedDate": "2021-03-26T11:02:49Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities"}, "afterCommit": {"oid": "6695c1866fa5114f6b1f0cd16b7dc54bb1cba758", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/6695c1866fa5114f6b1f0cd16b7dc54bb1cba758", "committedDate": "2021-03-26T11:55:58Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6695c1866fa5114f6b1f0cd16b7dc54bb1cba758", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/6695c1866fa5114f6b1f0cd16b7dc54bb1cba758", "committedDate": "2021-03-26T11:55:58Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}, "afterCommit": {"oid": "32ced8e44d2d458f7c2d067b7f68a23cb1481755", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/32ced8e44d2d458f7c2d067b7f68a23cb1481755", "committedDate": "2021-03-26T13:38:26Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32ced8e44d2d458f7c2d067b7f68a23cb1481755", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/32ced8e44d2d458f7c2d067b7f68a23cb1481755", "committedDate": "2021-03-26T13:38:26Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}, "afterCommit": {"oid": "e7ce66653263c0a98285f257c3c321c0d5a3959b", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/e7ce66653263c0a98285f257c3c321c0d5a3959b", "committedDate": "2021-03-27T20:12:47Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e7ce66653263c0a98285f257c3c321c0d5a3959b", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/e7ce66653263c0a98285f257c3c321c0d5a3959b", "committedDate": "2021-03-27T20:12:47Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}, "afterCommit": {"oid": "127b21015ccb121c3def69bad6e53c5883a05b74", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/127b21015ccb121c3def69bad6e53c5883a05b74", "committedDate": "2021-03-28T06:21:44Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "127b21015ccb121c3def69bad6e53c5883a05b74", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/127b21015ccb121c3def69bad6e53c5883a05b74", "committedDate": "2021-03-28T06:21:44Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}, "afterCommit": {"oid": "125d7a0dfd1a09d44008c60705db416fecae8750", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/125d7a0dfd1a09d44008c60705db416fecae8750", "committedDate": "2021-03-29T12:26:21Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "125d7a0dfd1a09d44008c60705db416fecae8750", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/125d7a0dfd1a09d44008c60705db416fecae8750", "committedDate": "2021-03-29T12:26:21Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}, "afterCommit": {"oid": "8e1c5783e71775ca295e6d5c3fe57152ea31e8fa", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/8e1c5783e71775ca295e6d5c3fe57152ea31e8fa", "committedDate": "2021-03-29T15:18:02Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjI2MjQ3ODA4", "url": "https://github.com/quarkusio/quarkus/pull/13960#pullrequestreview-626247808", "createdAt": "2021-04-01T13:08:53Z", "commit": {"oid": "8e1c5783e71775ca295e6d5c3fe57152ea31e8fa"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wMVQxMzowODo1NFrOJBllUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wMVQxMzoxNjo1OVrOJBl6gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTY0NDExMw==", "bodyText": "This kind of cast can be made safe (and more easily debuggable as a result):\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    testClass = (Class<? extends BooleanSupplier>) classLoader.loadClass(testClassName);\n          \n          \n            \n                                    testClass = classLoader.loadClass(testClassName).asSubclass(BooleanSupplier.class);", "url": "https://github.com/quarkusio/quarkus/pull/13960#discussion_r605644113", "createdAt": "2021-04-01T13:08:54Z", "author": {"login": "dmlloyd"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/ExtensionLoader.java", "diffHunk": "@@ -214,7 +218,45 @@ public boolean canHandleObject(final Object obj, final boolean staticInit) {\n                 .produces(RunTimeConfigurationProxyBuildItem.class)\n                 .produces(BytecodeRecorderObjectLoaderBuildItem.class)\n                 .build());\n-        return result;\n+\n+        return result.andThen(provideCapabilities(classLoader, appModel, readResult, launchMode, devModeType));\n+    }\n+\n+    private static Consumer<BuildChainBuilder> provideCapabilities(ClassLoader classLoader, AppModel appModel,\n+            BuildTimeConfigurationReader.ReadResult readResult, LaunchMode launchMode, DevModeType devModeType) {\n+        Map<Class<? extends BooleanSupplier>, BooleanSupplier> condCache = new HashMap<>();\n+\n+        Consumer<BuildChainBuilder> stepConfig = Functions.discardingConsumer();\n+        BooleanSupplier alwaysAddStep = () -> true;\n+        for (CapabilityContract contract : appModel.getCapabilityContracts().values()) {\n+            final String provider = contract.getExtension();\n+            for (String capability : contract.getProvidesCapabilities()) {\n+                int conditionIndex = capability.indexOf('?');\n+                final String name = conditionIndex < 0 ? capability : capability.substring(0, conditionIndex);\n+                BooleanSupplier buildIf = alwaysAddStep;\n+                int testClassStart;\n+                while (conditionIndex > 0) {\n+                    final boolean inv = conditionIndex < capability.length() - 1\n+                            && capability.charAt(conditionIndex + 1) == '!';\n+                    testClassStart = conditionIndex + (inv ? 2 : 1);\n+                    conditionIndex = capability.indexOf('?', testClassStart + 1);\n+                    final String testClassName = capability\n+                            .substring(testClassStart, conditionIndex > 0 ? conditionIndex : capability.length());\n+                    Class<? extends BooleanSupplier> testClass;\n+                    try {\n+                        testClass = (Class<? extends BooleanSupplier>) classLoader.loadClass(testClassName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e1c5783e71775ca295e6d5c3fe57152ea31e8fa"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTY0NTM4OA==", "bodyText": "Could this loop not be done as a build step which produces a CapabilityBuildItem?  This kind of change to the extension loader makes it more brittle, and it was definitely intended that the build item system be able to support this kind of thing.", "url": "https://github.com/quarkusio/quarkus/pull/13960#discussion_r605645388", "createdAt": "2021-04-01T13:10:49Z", "author": {"login": "dmlloyd"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/ExtensionLoader.java", "diffHunk": "@@ -214,7 +218,45 @@ public boolean canHandleObject(final Object obj, final boolean staticInit) {\n                 .produces(RunTimeConfigurationProxyBuildItem.class)\n                 .produces(BytecodeRecorderObjectLoaderBuildItem.class)\n                 .build());\n-        return result;\n+\n+        return result.andThen(provideCapabilities(classLoader, appModel, readResult, launchMode, devModeType));\n+    }\n+\n+    private static Consumer<BuildChainBuilder> provideCapabilities(ClassLoader classLoader, AppModel appModel,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e1c5783e71775ca295e6d5c3fe57152ea31e8fa"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTY0ODU2Ng==", "bodyText": "Is this constructor still used? It might be better to move everything over to the builder constructor.", "url": "https://github.com/quarkusio/quarkus/pull/13960#discussion_r605648566", "createdAt": "2021-04-01T13:15:31Z", "author": {"login": "dmlloyd"}, "path": "independent-projects/bootstrap/app-model/src/main/java/io/quarkus/bootstrap/model/AppModel.java", "diffHunk": "@@ -62,20 +62,14 @@\n \n     private final Map<String, String> platformProperties;\n \n-    private AppModel(AppArtifact appArtifact, List<AppDependency> runtimeDeps, List<AppDependency> deploymentDeps,\n-            List<AppDependency> fullDeploymentDeps, Set<AppArtifactKey> parentFirstArtifacts,\n-            Set<AppArtifactKey> runnerParentFirstArtifacts, Set<AppArtifactKey> lesserPriorityArtifacts,\n-            Set<AppArtifactKey> localProjectArtifacts) {\n-        this(appArtifact, runtimeDeps, deploymentDeps, fullDeploymentDeps, parentFirstArtifacts, runnerParentFirstArtifacts,\n-                lesserPriorityArtifacts,\n-                localProjectArtifacts, Collections.emptyMap());\n-    }\n+    private final Map<String, CapabilityContract> capabilitiesContracts;\n \n     private AppModel(AppArtifact appArtifact, List<AppDependency> runtimeDeps, List<AppDependency> deploymentDeps,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e1c5783e71775ca295e6d5c3fe57152ea31e8fa"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTY0OTM5Nw==", "bodyText": "Is there a compelling reason to make these fields protected?", "url": "https://github.com/quarkusio/quarkus/pull/13960#discussion_r605649397", "createdAt": "2021-04-01T13:16:44Z", "author": {"login": "dmlloyd"}, "path": "independent-projects/bootstrap/maven-plugin/src/main/java/io/quarkus/maven/capabilities/CapabilityConfig.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.quarkus.maven.capabilities;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class CapabilityConfig {\n+\n+    protected String name;\n+    protected List<String> onlyIf = new ArrayList<>(0);\n+    protected List<String> onlyIfNot = new ArrayList<>(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e1c5783e71775ca295e6d5c3fe57152ea31e8fa"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwNTY0OTUzOQ==", "bodyText": "Can these be final?", "url": "https://github.com/quarkusio/quarkus/pull/13960#discussion_r605649539", "createdAt": "2021-04-01T13:16:59Z", "author": {"login": "dmlloyd"}, "path": "independent-projects/bootstrap/maven-plugin/src/main/java/io/quarkus/maven/capabilities/CapabilityConfig.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package io.quarkus.maven.capabilities;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class CapabilityConfig {\n+\n+    protected String name;\n+    protected List<String> onlyIf = new ArrayList<>(0);\n+    protected List<String> onlyIfNot = new ArrayList<>(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e1c5783e71775ca295e6d5c3fe57152ea31e8fa"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8807850f39371a762c522336d6b0a3879960cc63", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/8807850f39371a762c522336d6b0a3879960cc63", "committedDate": "2021-04-02T15:49:18Z", "message": "Update core/deployment/src/main/java/io/quarkus/deployment/ExtensionLoader.java\n\nCo-authored-by: David M. Lloyd <david.lloyd@redhat.com>"}, "afterCommit": {"oid": "0f1a7a51192313a36424fb0f35b4b4135af46442", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/0f1a7a51192313a36424fb0f35b4b4135af46442", "committedDate": "2021-04-02T19:15:14Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools\n\nCo-authored-by: David M. Lloyd <david.lloyd@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0f1a7a51192313a36424fb0f35b4b4135af46442", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/0f1a7a51192313a36424fb0f35b4b4135af46442", "committedDate": "2021-04-02T19:15:14Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools\n\nCo-authored-by: David M. Lloyd <david.lloyd@redhat.com>"}, "afterCommit": {"oid": "a5ea8f6c4c8ff7f5d35b67729352afb42e995b1e", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/a5ea8f6c4c8ff7f5d35b67729352afb42e995b1e", "committedDate": "2021-04-07T08:36:54Z", "message": "Produce all the CapabilityBuildItems from a single build step as a list"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjMwMzMyMzE5", "url": "https://github.com/quarkusio/quarkus/pull/13960#pullrequestreview-630332319", "createdAt": "2021-04-07T18:03:55Z", "commit": {"oid": "a5ea8f6c4c8ff7f5d35b67729352afb42e995b1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wN1QxODowMzo1NVrOJEq9Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNC0wN1QxODowMzo1NVrOJEq9Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDYwODg3Nzg4Mg==", "bodyText": "Now that this is done as a build step, could it possibly be done as a build step class in io/quarkus/deployment/steps?", "url": "https://github.com/quarkusio/quarkus/pull/13960#discussion_r608877882", "createdAt": "2021-04-07T18:03:55Z", "author": {"login": "dmlloyd"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/ExtensionLoader.java", "diffHunk": "@@ -226,36 +226,38 @@ public boolean canHandleObject(final Object obj, final boolean staticInit) {\n             AppModel appModel,\n             BuildTimeConfigurationReader.ReadResult readResult, LaunchMode launchMode, DevModeType devModeType) {\n         Map<Class<? extends BooleanSupplier>, BooleanSupplier> condCache = new HashMap<>();\n-\n-        BooleanSupplier alwaysAddStep = () -> true;\n-        for (CapabilityContract contract : appModel.getCapabilityContracts().values()) {\n-            final String provider = contract.getExtension();\n-            for (String capability : contract.getProvidesCapabilities()) {\n-                int conditionIndex = capability.indexOf('?');\n-                final String name = conditionIndex < 0 ? capability : capability.substring(0, conditionIndex);\n-                BooleanSupplier buildIf = alwaysAddStep;\n-                int testClassStart;\n-                while (conditionIndex > 0) {\n-                    final boolean inv = conditionIndex < capability.length() - 1\n-                            && capability.charAt(conditionIndex + 1) == '!';\n-                    testClassStart = conditionIndex + (inv ? 2 : 1);\n-                    conditionIndex = capability.indexOf('?', testClassStart + 1);\n-                    final String testClassName = capability\n-                            .substring(testClassStart, conditionIndex > 0 ? conditionIndex : capability.length());\n-                    Class<? extends BooleanSupplier> testClass;\n-                    try {\n-                        testClass = classLoader.loadClass(testClassName).asSubclass(BooleanSupplier.class);\n-                    } catch (ClassNotFoundException e) {\n-                        throw new RuntimeException(\"Failed to load capability condition class \" + testClassName, e);\n+        final BooleanSupplier alwaysAddStep = () -> true;\n+        result = result.andThen(bcb -> bcb.addBuildStep(bc -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5ea8f6c4c8ff7f5d35b67729352afb42e995b1e"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a5ea8f6c4c8ff7f5d35b67729352afb42e995b1e", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/a5ea8f6c4c8ff7f5d35b67729352afb42e995b1e", "committedDate": "2021-04-07T08:36:54Z", "message": "Produce all the CapabilityBuildItems from a single build step as a list"}, "afterCommit": {"oid": "6ebcbfc23426088797d273e15244cd63236ea851", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/6ebcbfc23426088797d273e15244cd63236ea851", "committedDate": "2021-04-09T15:00:29Z", "message": "Extract ExtensionLoader.provideCapabilities(...) to its own BuildStep class"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6ebcbfc23426088797d273e15244cd63236ea851", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/6ebcbfc23426088797d273e15244cd63236ea851", "committedDate": "2021-04-09T15:00:29Z", "message": "Extract ExtensionLoader.provideCapabilities(...) to its own BuildStep class"}, "afterCommit": {"oid": "4299137e4690fe7d30f483944e180c21f7e7d271", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/4299137e4690fe7d30f483944e180c21f7e7d271", "committedDate": "2021-04-09T15:09:04Z", "message": "Extract ExtensionLoader.provideCapabilities(...) to its own BuildStep class"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4299137e4690fe7d30f483944e180c21f7e7d271", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/4299137e4690fe7d30f483944e180c21f7e7d271", "committedDate": "2021-04-09T15:09:04Z", "message": "Extract ExtensionLoader.provideCapabilities(...) to its own BuildStep class"}, "afterCommit": {"oid": "beeafbaf4aa8bf2896f0f34476c203e63aa3e53f", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/beeafbaf4aa8bf2896f0f34476c203e63aa3e53f", "committedDate": "2021-04-12T20:42:13Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "beeafbaf4aa8bf2896f0f34476c203e63aa3e53f", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/beeafbaf4aa8bf2896f0f34476c203e63aa3e53f", "committedDate": "2021-04-12T20:42:13Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}, "afterCommit": {"oid": "6c3daa7a3c740958b4c3cf7222f3177ee6c80848", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/6c3daa7a3c740958b4c3cf7222f3177ee6c80848", "committedDate": "2021-04-12T20:47:09Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c3daa7a3c740958b4c3cf7222f3177ee6c80848", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/6c3daa7a3c740958b4c3cf7222f3177ee6c80848", "committedDate": "2021-04-12T20:47:09Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}, "afterCommit": {"oid": "881caca3d4bf783a4884469c1a6e7361ff1eb775", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/881caca3d4bf783a4884469c1a6e7361ff1eb775", "committedDate": "2021-04-13T12:50:01Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjM0NTUzMDcx", "url": "https://github.com/quarkusio/quarkus/pull/13960#pullrequestreview-634553071", "createdAt": "2021-04-13T12:56:09Z", "commit": {"oid": "881caca3d4bf783a4884469c1a6e7361ff1eb775"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "881caca3d4bf783a4884469c1a6e7361ff1eb775", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/881caca3d4bf783a4884469c1a6e7361ff1eb775", "committedDate": "2021-04-13T12:50:01Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools"}, "afterCommit": {"oid": "6a31c048077ffc7b06be6f68cdf2a0401e965c8b", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/6a31c048077ffc7b06be6f68cdf2a0401e965c8b", "committedDate": "2021-04-20T11:07:07Z", "message": "more"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a31c048077ffc7b06be6f68cdf2a0401e965c8b", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/6a31c048077ffc7b06be6f68cdf2a0401e965c8b", "committedDate": "2021-04-20T11:07:07Z", "message": "more"}, "afterCommit": {"oid": "9e7a45843598c6b3328ed0870c39aecb1791f26e", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/9e7a45843598c6b3328ed0870c39aecb1791f26e", "committedDate": "2021-04-20T15:53:50Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools\n* Replaced direct creation of CapabilityBuildItem with the corresponding extension descriptor configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3950a46a61fef3cf8cb7d14bc20f81b98884d267", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/3950a46a61fef3cf8cb7d14bc20f81b98884d267", "committedDate": "2021-04-21T11:03:59Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools\n* Replaced direct creation of CapabilityBuildItem with the corresponding extension descriptor configuration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e7a45843598c6b3328ed0870c39aecb1791f26e", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/9e7a45843598c6b3328ed0870c39aecb1791f26e", "committedDate": "2021-04-20T15:53:50Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools\n* Replaced direct creation of CapabilityBuildItem with the corresponding extension descriptor configuration"}, "afterCommit": {"oid": "3950a46a61fef3cf8cb7d14bc20f81b98884d267", "author": {"user": {"login": "aloubyansky", "name": "Alexey Loubyansky"}}, "url": "https://github.com/quarkusio/quarkus/commit/3950a46a61fef3cf8cb7d14bc20f81b98884d267", "committedDate": "2021-04-21T11:03:59Z", "message": "* Ability to configure provided capabilities in the extension descriptor and capability conflict detection\n* Make sure only single provider of a given capability is allowed in the application\n* Introduce a possibility to check not only presence of a given capability but also if a specific capability prefix (or subpath of its dot-separated name) is found among all the registered capabilities\n* Add the configured in the maven plugin configuration capabilities to the quarkus-extension.yaml consumed by the dev tools\n* Replaced direct creation of CapabilityBuildItem with the corresponding extension descriptor configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQyMTUxNzAw", "url": "https://github.com/quarkusio/quarkus/pull/13960#pullrequestreview-642151700", "createdAt": "2021-04-22T12:44:27Z", "commit": {"oid": "3950a46a61fef3cf8cb7d14bc20f81b98884d267"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4215, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}