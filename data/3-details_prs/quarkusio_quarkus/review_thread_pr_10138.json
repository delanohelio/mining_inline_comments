{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NTA4NDkw", "number": 10138, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNTo1MjowOFrOEHb2Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNTo1NjowMVrOEHb4rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjMxNzU5OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ProxyConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNTo1MjowOFrOGmytBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDoxNDozOVrOGn472g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMyOTc5OQ==", "bodyText": "This feels a bit long, maybe 'enableForwardedHost' ?", "url": "https://github.com/quarkusio/quarkus/pull/10138#discussion_r443329799", "createdAt": "2020-06-22T05:52:08Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ProxyConfig.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package io.quarkus.vertx.http.runtime;\n+\n+import io.quarkus.runtime.annotations.ConfigGroup;\n+import io.quarkus.runtime.annotations.ConfigItem;\n+\n+/**\n+ * Holds configuration related with proxy addressing forward.\n+ */\n+@ConfigGroup\n+public class ProxyConfig {\n+    /**\n+     * Enable override the received request's host through a forwarded host header.\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    public boolean enableForwardedForHostHeader;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b3076f5818abfa998454e358ad03ebe04b05ee"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ4MDQ3NA==", "bodyText": "done", "url": "https://github.com/quarkusio/quarkus/pull/10138#discussion_r444480474", "createdAt": "2020-06-23T20:14:39Z", "author": {"login": "ejba"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ProxyConfig.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package io.quarkus.vertx.http.runtime;\n+\n+import io.quarkus.runtime.annotations.ConfigGroup;\n+import io.quarkus.runtime.annotations.ConfigItem;\n+\n+/**\n+ * Holds configuration related with proxy addressing forward.\n+ */\n+@ConfigGroup\n+public class ProxyConfig {\n+    /**\n+     * Enable override the received request's host through a forwarded host header.\n+     */\n+    @ConfigItem(defaultValue = \"false\")\n+    public boolean enableForwardedForHostHeader;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMyOTc5OQ=="}, "originalCommit": {"oid": "12b3076f5818abfa998454e358ad03ebe04b05ee"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjMxOTM5OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ForwardedParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNTo1MzoyNFrOGmyuSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDoxNDo0N1rOGn48Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMzMDEyMw==", "bodyText": "It would be better to do this in the recorder, and pass it into the parser, so it is only done once and not once per request.", "url": "https://github.com/quarkusio/quarkus/pull/10138#discussion_r443330123", "createdAt": "2020-06-22T05:53:24Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ForwardedParser.java", "diffHunk": "@@ -134,9 +136,12 @@ private void calculate() {\n                 port = -1;\n             }\n \n-            String hostHeader = delegate.getHeader(X_FORWARDED_HOST);\n-            if (hostHeader != null) {\n-                setHostAndPort(hostHeader.split(\",\")[0], port);\n+            if (proxyConfig.enableForwardedForHostHeader) {\n+                AsciiString forwardedHeader = AsciiString.cached(proxyConfig.forwardedHostHeader);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b3076f5818abfa998454e358ad03ebe04b05ee"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ4MDU1MA==", "bodyText": "done", "url": "https://github.com/quarkusio/quarkus/pull/10138#discussion_r444480550", "createdAt": "2020-06-23T20:14:47Z", "author": {"login": "ejba"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ForwardedParser.java", "diffHunk": "@@ -134,9 +136,12 @@ private void calculate() {\n                 port = -1;\n             }\n \n-            String hostHeader = delegate.getHeader(X_FORWARDED_HOST);\n-            if (hostHeader != null) {\n-                setHostAndPort(hostHeader.split(\",\")[0], port);\n+            if (proxyConfig.enableForwardedForHostHeader) {\n+                AsciiString forwardedHeader = AsciiString.cached(proxyConfig.forwardedHostHeader);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMzMDEyMw=="}, "originalCommit": {"oid": "12b3076f5818abfa998454e358ad03ebe04b05ee"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjMyMzY2OnYy", "diffSide": "RIGHT", "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ProxyConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNTo1NjowMVrOGmyxMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDoxNDo1M1rOGn48Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMzMDg2Ng==", "bodyText": "I think the existing proxy config should be moved to this class as well (proxyAddressForwarding and allowForwarded).\nTo do this mark the original ones deprecated, change them to Optional, and then add new ones here. If the old ones are set then log a warning about deprecation and use those values, otherwise use the new config.", "url": "https://github.com/quarkusio/quarkus/pull/10138#discussion_r443330866", "createdAt": "2020-06-22T05:56:01Z", "author": {"login": "stuartwdouglas"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ProxyConfig.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package io.quarkus.vertx.http.runtime;\n+\n+import io.quarkus.runtime.annotations.ConfigGroup;\n+import io.quarkus.runtime.annotations.ConfigItem;\n+\n+/**\n+ * Holds configuration related with proxy addressing forward.\n+ */\n+@ConfigGroup\n+public class ProxyConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b3076f5818abfa998454e358ad03ebe04b05ee"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ4MDU5NA==", "bodyText": "done", "url": "https://github.com/quarkusio/quarkus/pull/10138#discussion_r444480594", "createdAt": "2020-06-23T20:14:53Z", "author": {"login": "ejba"}, "path": "extensions/vertx-http/runtime/src/main/java/io/quarkus/vertx/http/runtime/ProxyConfig.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package io.quarkus.vertx.http.runtime;\n+\n+import io.quarkus.runtime.annotations.ConfigGroup;\n+import io.quarkus.runtime.annotations.ConfigItem;\n+\n+/**\n+ * Holds configuration related with proxy addressing forward.\n+ */\n+@ConfigGroup\n+public class ProxyConfig {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMzMDg2Ng=="}, "originalCommit": {"oid": "12b3076f5818abfa998454e358ad03ebe04b05ee"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2792, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}