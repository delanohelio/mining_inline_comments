{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExOTMzMDE3", "number": 8995, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzowNjowNFrOD4-obA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzowNjowNFrOD4-obA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDczMDA0OnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/runner/bootstrap/StartupActionImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzowNjowNFrOGP_Y1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjowMjoxMVrOGQT2lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQyMDM3Mw==", "bodyText": "What if you have only one core in a container?", "url": "https://github.com/quarkusio/quarkus/pull/8995#discussion_r419420373", "createdAt": "2020-05-04T13:06:04Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/runner/bootstrap/StartupActionImpl.java", "diffHunk": "@@ -66,12 +72,47 @@ public StartupActionImpl(CuratedApplication curatedApplication, BuildResult buil\n             runtimeClassLoader = baseClassLoader;\n         }\n         this.runtimeClassLoader = runtimeClassLoader;\n+        handleEagerClasses(runtimeClassLoader, eagerClasses);\n+    }\n+\n+    private void handleEagerClasses(QuarkusClassLoader runtimeClassLoader, Set<String> eagerClasses) {\n+        int availableProcessors = Runtime.getRuntime().availableProcessors();\n+        if (availableProcessors == 1) {\n+            return;\n+        }\n+        //leave one processor for the main startup thread\n+        ExecutorService loadingExecutor = Executors.newFixedThreadPool(availableProcessors - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19e7bdbc5547ae4306fb6f0d85499a97076f19b4"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc0NTk2MQ==", "bodyText": "This code is not run, there is a check 4 lines above that will bail out.", "url": "https://github.com/quarkusio/quarkus/pull/8995#discussion_r419745961", "createdAt": "2020-05-04T21:41:02Z", "author": {"login": "stuartwdouglas"}, "path": "core/deployment/src/main/java/io/quarkus/runner/bootstrap/StartupActionImpl.java", "diffHunk": "@@ -66,12 +72,47 @@ public StartupActionImpl(CuratedApplication curatedApplication, BuildResult buil\n             runtimeClassLoader = baseClassLoader;\n         }\n         this.runtimeClassLoader = runtimeClassLoader;\n+        handleEagerClasses(runtimeClassLoader, eagerClasses);\n+    }\n+\n+    private void handleEagerClasses(QuarkusClassLoader runtimeClassLoader, Set<String> eagerClasses) {\n+        int availableProcessors = Runtime.getRuntime().availableProcessors();\n+        if (availableProcessors == 1) {\n+            return;\n+        }\n+        //leave one processor for the main startup thread\n+        ExecutorService loadingExecutor = Executors.newFixedThreadPool(availableProcessors - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQyMDM3Mw=="}, "originalCommit": {"oid": "19e7bdbc5547ae4306fb6f0d85499a97076f19b4"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc1NTY3MQ==", "bodyText": "Hum. Silly me.", "url": "https://github.com/quarkusio/quarkus/pull/8995#discussion_r419755671", "createdAt": "2020-05-04T22:02:11Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/runner/bootstrap/StartupActionImpl.java", "diffHunk": "@@ -66,12 +72,47 @@ public StartupActionImpl(CuratedApplication curatedApplication, BuildResult buil\n             runtimeClassLoader = baseClassLoader;\n         }\n         this.runtimeClassLoader = runtimeClassLoader;\n+        handleEagerClasses(runtimeClassLoader, eagerClasses);\n+    }\n+\n+    private void handleEagerClasses(QuarkusClassLoader runtimeClassLoader, Set<String> eagerClasses) {\n+        int availableProcessors = Runtime.getRuntime().availableProcessors();\n+        if (availableProcessors == 1) {\n+            return;\n+        }\n+        //leave one processor for the main startup thread\n+        ExecutorService loadingExecutor = Executors.newFixedThreadPool(availableProcessors - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQyMDM3Mw=="}, "originalCommit": {"oid": "19e7bdbc5547ae4306fb6f0d85499a97076f19b4"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3341, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}