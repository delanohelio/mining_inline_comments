{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NDM0NzM4", "number": 8817, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo0MTowM1rOD1r_uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODozNTowMFrOD38kDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjIxOTQ0OnYy", "diffSide": "RIGHT", "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo0MTowM1rOGLPatw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDo0OToxMFrOGLR7DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MDExOQ==", "bodyText": "This list was about serde, LoginModule might go in another list (it's actually not build-in as it comes from javax.security.auth.spi.LoginModule)", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414440119", "createdAt": "2020-04-24T09:41:03Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -68,6 +76,9 @@\n             ByteBufferDeserializer.class,\n             StringDeserializer.class,\n             FloatDeserializer.class,\n+\n+            //login modules\n+            LoginModule.class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ4MTE2NQ==", "bodyText": "Relocated native-SASL/JAAS code into separate build step.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414481165", "createdAt": "2020-04-24T10:49:10Z", "author": {"login": "schulzp"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -68,6 +76,9 @@\n             ByteBufferDeserializer.class,\n             StringDeserializer.class,\n             FloatDeserializer.class,\n+\n+            //login modules\n+            LoginModule.class", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MDExOQ=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjIyMjMyOnYy", "diffSide": "RIGHT", "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo0MTozOVrOGLPcXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjoxMTozN1rOGMGmYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MDU0Mg==", "bodyText": "I would add the LoginModule directly here.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414440542", "createdAt": "2020-04-24T09:41:39Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -109,6 +120,12 @@ public void build(CombinedIndexBuildItem indexBuildItem, BuildProducer<Reflectiv\n         // classes needed to perform reflection on DirectByteBuffer - only really needed for Java 8\n         reflectiveClass.produce(new ReflectiveClassBuildItem(true, false, \"java.nio.DirectByteBuffer\"));\n         reflectiveClass.produce(new ReflectiveClassBuildItem(true, false, \"sun.misc.Cleaner\"));\n+\n+        // enable native JAAS/SASL PLAIN support\n+        reflectiveClass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NTUyMg==", "bodyText": "Actually, I need all the sub-classes, for example (but not limited to):\n\nPlainLoginModule (org.apache.kafka.common.security.plain)\n\nThe list of sub-classes also contains:\n\nExternalCertificateLoginModule (org.apache.activemq.artemis.spi.core.security.jaas)\nKrb5LoginModule (org.apache.activemq.artemis.spi.core.security.jaas)\nPropertiesLoginModule (org.apache.activemq.artemis.spi.core.security.jaas)\nDigestLoginModule (org.apache.zookeeper.server.auth)\nLDAPLoginModule (org.apache.activemq.artemis.spi.core.security.jaas)\nScramLoginModule (org.apache.kafka.common.security.scram)\nNTLoginModule (com.sun.security.auth.module)\nGuestLoginModule (org.apache.activemq.artemis.spi.core.security.jaas)\nInVMLoginModule (org.apache.activemq.artemis.spi.core.security.jaas)\nFileLoginModule (com.sun.jmx.remote.security)\nJndiLoginModule (com.sun.security.auth.module)\nAbstractKeycloakLoginModule (org.keycloak.adapters.jaas)\nLdapLoginModule (com.sun.security.auth.module)\nOAuthBearerLoginModule (org.apache.kafka.common.security.oauthbearer)\nUnixLoginModule (com.sun.security.auth.module)\nKrb5LoginModule (com.sun.security.auth.module)\nCertificateLoginModule (org.apache.activemq.artemis.spi.core.security.jaas)\nKeyStoreLoginModule (com.sun.security.auth.module)", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414475522", "createdAt": "2020-04-24T10:38:56Z", "author": {"login": "schulzp"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -109,6 +120,12 @@ public void build(CombinedIndexBuildItem indexBuildItem, BuildProducer<Reflectiv\n         // classes needed to perform reflection on DirectByteBuffer - only really needed for Java 8\n         reflectiveClass.produce(new ReflectiveClassBuildItem(true, false, \"java.nio.DirectByteBuffer\"));\n         reflectiveClass.produce(new ReflectiveClassBuildItem(true, false, \"sun.misc.Cleaner\"));\n+\n+        // enable native JAAS/SASL PLAIN support\n+        reflectiveClass", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MDU0Mg=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NDIyNg==", "bodyText": "Relocated native-SASL/JAAS code into separate build step.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r415344226", "createdAt": "2020-04-26T16:11:37Z", "author": {"login": "schulzp"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -109,6 +120,12 @@ public void build(CombinedIndexBuildItem indexBuildItem, BuildProducer<Reflectiv\n         // classes needed to perform reflection on DirectByteBuffer - only really needed for Java 8\n         reflectiveClass.produce(new ReflectiveClassBuildItem(true, false, \"java.nio.DirectByteBuffer\"));\n         reflectiveClass.produce(new ReflectiveClassBuildItem(true, false, \"sun.misc.Cleaner\"));\n+\n+        // enable native JAAS/SASL PLAIN support\n+        reflectiveClass", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MDU0Mg=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjIyNzgyOnYy", "diffSide": "RIGHT", "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/health/KafkaHealthCheck.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo0MzowM1rOGLPfzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNzozMzoxMVrOGMU3vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MTQyMw==", "bodyText": "How is this related to the issue? I may miss a link.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414441423", "createdAt": "2020-04-24T09:43:03Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/health/KafkaHealthCheck.java", "diffHunk": "@@ -3,36 +3,39 @@\n import java.util.HashMap;\n import java.util.Map;\n \n-import javax.annotation.PostConstruct;\n import javax.annotation.PreDestroy;\n import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n \n import org.apache.kafka.clients.admin.AdminClient;\n import org.apache.kafka.clients.admin.AdminClientConfig;\n import org.apache.kafka.common.Node;\n-import org.eclipse.microprofile.config.inject.ConfigProperty;\n import org.eclipse.microprofile.health.HealthCheck;\n import org.eclipse.microprofile.health.HealthCheckResponse;\n import org.eclipse.microprofile.health.HealthCheckResponseBuilder;\n import org.eclipse.microprofile.health.Readiness;\n \n+import io.quarkus.kafka.client.runtime.KafkaRuntimeConfig;\n+\n @Readiness\n @ApplicationScoped\n public class KafkaHealthCheck implements HealthCheck {\n \n-    @ConfigProperty(name = \"kafka.bootstrap.servers\", defaultValue = \"localhost:9092\")\n-    private String bootstrapServers;\n-\n     private AdminClient client;\n \n-    @PostConstruct\n-    void init() {\n-        Map<String, Object> conf = new HashMap<>();\n-        conf.put(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);\n+    @Inject\n+    public KafkaHealthCheck(KafkaRuntimeConfig runtimeConfig) {\n+        Map<String, Object> conf = new HashMap<>(runtimeConfig.getProperties());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3MzUzNw==", "bodyText": "the previous @PostConstruct ran into NPEs for the @Injected KafkaRuntimeConfig. Using constructor injection it worked.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414473537", "createdAt": "2020-04-24T10:35:35Z", "author": {"login": "schulzp"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/health/KafkaHealthCheck.java", "diffHunk": "@@ -3,36 +3,39 @@\n import java.util.HashMap;\n import java.util.Map;\n \n-import javax.annotation.PostConstruct;\n import javax.annotation.PreDestroy;\n import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n \n import org.apache.kafka.clients.admin.AdminClient;\n import org.apache.kafka.clients.admin.AdminClientConfig;\n import org.apache.kafka.common.Node;\n-import org.eclipse.microprofile.config.inject.ConfigProperty;\n import org.eclipse.microprofile.health.HealthCheck;\n import org.eclipse.microprofile.health.HealthCheckResponse;\n import org.eclipse.microprofile.health.HealthCheckResponseBuilder;\n import org.eclipse.microprofile.health.Readiness;\n \n+import io.quarkus.kafka.client.runtime.KafkaRuntimeConfig;\n+\n @Readiness\n @ApplicationScoped\n public class KafkaHealthCheck implements HealthCheck {\n \n-    @ConfigProperty(name = \"kafka.bootstrap.servers\", defaultValue = \"localhost:9092\")\n-    private String bootstrapServers;\n-\n     private AdminClient client;\n \n-    @PostConstruct\n-    void init() {\n-        Map<String, Object> conf = new HashMap<>();\n-        conf.put(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);\n+    @Inject\n+    public KafkaHealthCheck(KafkaRuntimeConfig runtimeConfig) {\n+        Map<String, Object> conf = new HashMap<>(runtimeConfig.getProperties());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MTQyMw=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU3ODA0NQ==", "bodyText": "Why not using the static access to the configuration? That would remove the bean.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r415578045", "createdAt": "2020-04-27T07:33:11Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/health/KafkaHealthCheck.java", "diffHunk": "@@ -3,36 +3,39 @@\n import java.util.HashMap;\n import java.util.Map;\n \n-import javax.annotation.PostConstruct;\n import javax.annotation.PreDestroy;\n import javax.enterprise.context.ApplicationScoped;\n+import javax.inject.Inject;\n \n import org.apache.kafka.clients.admin.AdminClient;\n import org.apache.kafka.clients.admin.AdminClientConfig;\n import org.apache.kafka.common.Node;\n-import org.eclipse.microprofile.config.inject.ConfigProperty;\n import org.eclipse.microprofile.health.HealthCheck;\n import org.eclipse.microprofile.health.HealthCheckResponse;\n import org.eclipse.microprofile.health.HealthCheckResponseBuilder;\n import org.eclipse.microprofile.health.Readiness;\n \n+import io.quarkus.kafka.client.runtime.KafkaRuntimeConfig;\n+\n @Readiness\n @ApplicationScoped\n public class KafkaHealthCheck implements HealthCheck {\n \n-    @ConfigProperty(name = \"kafka.bootstrap.servers\", defaultValue = \"localhost:9092\")\n-    private String bootstrapServers;\n-\n     private AdminClient client;\n \n-    @PostConstruct\n-    void init() {\n-        Map<String, Object> conf = new HashMap<>();\n-        conf.put(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, bootstrapServers);\n+    @Inject\n+    public KafkaHealthCheck(KafkaRuntimeConfig runtimeConfig) {\n+        Map<String, Object> conf = new HashMap<>(runtimeConfig.getProperties());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MTQyMw=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjIzNTg0OnYy", "diffSide": "RIGHT", "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/KafkaRuntimeConfigProducer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo0NDo1NlrOGLPknA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNzozNDo0MFrOGMU7Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MjY1Mg==", "bodyText": "If I understand correctly you copy the \"kafka\" configuration and configure the health check admin client with them.\nIs it really related to this PR?", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414442652", "createdAt": "2020-04-24T09:44:56Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/KafkaRuntimeConfigProducer.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package io.quarkus.kafka.client.runtime;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.StreamSupport;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+\n+import io.quarkus.arc.DefaultBean;\n+\n+@Dependent\n+public class KafkaRuntimeConfigProducer {\n+\n+    private String configPrefix = \"kafka\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3NjQ3MQ==", "bodyText": "I'd say so. The admin client needs the same security configuration as all consumers/producers. Otherwise authentication will fail once the broker is set up to expect it.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414476471", "createdAt": "2020-04-24T10:40:40Z", "author": {"login": "schulzp"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/KafkaRuntimeConfigProducer.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package io.quarkus.kafka.client.runtime;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.StreamSupport;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+\n+import io.quarkus.arc.DefaultBean;\n+\n+@Dependent\n+public class KafkaRuntimeConfigProducer {\n+\n+    private String configPrefix = \"kafka\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MjY1Mg=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU3ODkxNA==", "bodyText": "Yes and no. You have applications using multiple brokers, and some parts of Quarkus use a different configuration format.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r415578914", "createdAt": "2020-04-27T07:34:40Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/KafkaRuntimeConfigProducer.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package io.quarkus.kafka.client.runtime;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.StreamSupport;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+\n+import io.quarkus.arc.DefaultBean;\n+\n+@Dependent\n+public class KafkaRuntimeConfigProducer {\n+\n+    private String configPrefix = \"kafka\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MjY1Mg=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjIzODYyOnYy", "diffSide": "RIGHT", "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/KafkaRuntimeConfigProducer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo0NTo0MFrOGLPmUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMDo0MzoyNVrOGLRu-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MzA5MQ==", "bodyText": "It can be confusing as the Kafka Client is not produced by default. Typically, it would not cover the configuration coming from reactive messaging. Existing applications create their properties directly (following the Kafka documentation).", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414443091", "createdAt": "2020-04-24T09:45:40Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/KafkaRuntimeConfigProducer.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package io.quarkus.kafka.client.runtime;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.StreamSupport;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+\n+import io.quarkus.arc.DefaultBean;\n+\n+@Dependent\n+public class KafkaRuntimeConfigProducer {\n+\n+    private String configPrefix = \"kafka\";\n+\n+    @Produces\n+    @DefaultBean\n+    @ApplicationScoped\n+    public KafkaRuntimeConfig createKafkaRuntimeConfig() {\n+        Map<String, String> properties = new HashMap<>();\n+        final Config config = ConfigProvider.getConfig();\n+\n+        StreamSupport\n+                .stream(config.getPropertyNames().spliterator(), false)\n+                .map(String::toLowerCase)\n+                .filter(name -> name.startsWith(configPrefix))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ3ODA3NQ==", "bodyText": "Okay, in that case I could remove the KafkaRuntimeConfiguration again and would only have to make sure all the clients in integration-tests/kafa get the right set of properties. I just found it to be very cumbersome to inject them one by one, especially when extending the test case to more than plain authentication.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414478075", "createdAt": "2020-04-24T10:43:25Z", "author": {"login": "schulzp"}, "path": "extensions/kafka-client/runtime/src/main/java/io/quarkus/kafka/client/runtime/KafkaRuntimeConfigProducer.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package io.quarkus.kafka.client.runtime;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.stream.StreamSupport;\n+\n+import javax.enterprise.context.ApplicationScoped;\n+import javax.enterprise.context.Dependent;\n+import javax.enterprise.inject.Produces;\n+\n+import org.eclipse.microprofile.config.Config;\n+import org.eclipse.microprofile.config.ConfigProvider;\n+\n+import io.quarkus.arc.DefaultBean;\n+\n+@Dependent\n+public class KafkaRuntimeConfigProducer {\n+\n+    private String configPrefix = \"kafka\";\n+\n+    @Produces\n+    @DefaultBean\n+    @ApplicationScoped\n+    public KafkaRuntimeConfig createKafkaRuntimeConfig() {\n+        Map<String, String> properties = new HashMap<>();\n+        final Config config = ConfigProvider.getConfig();\n+\n+        StreamSupport\n+                .stream(config.getPropertyNames().spliterator(), false)\n+                .map(String::toLowerCase)\n+                .filter(name -> name.startsWith(configPrefix))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0MzA5MQ=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjI2NjI1OnYy", "diffSide": "RIGHT", "path": "integration-tests/kafka/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo1MjoxNVrOGLP2QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjoxMjozMFrOGMGm7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0NzE2OA==", "bodyText": "Why is this passed here and not in the Map produced by the Kafka Test Resource?", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414447168", "createdAt": "2020-04-24T09:52:15Z", "author": {"login": "cescoffier"}, "path": "integration-tests/kafka/pom.xml", "diffHunk": "@@ -114,13 +135,31 @@\n                         <artifactId>maven-failsafe-plugin</artifactId>\n                         <executions>\n                             <execution>\n+                                <id>without-security</id>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <systemProperties>\n+                                        <native.image.path>\n+                                            ${project.build.directory}/${project.build.finalName}-runner\n+                                        </native.image.path>\n+                                    </systemProperties>\n+                                </configuration>\n+                            </execution>\n+                            <execution>\n+                                <id>with-sasl-plaintext</id>\n                                 <goals>\n                                     <goal>integration-test</goal>\n                                     <goal>verify</goal>\n                                 </goals>\n                                 <configuration>\n                                     <systemProperties>\n-                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n+                                        <kafka.security.protocol>SASL_PLAINTEXT</kafka.security.protocol>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ4MjA5NQ==", "bodyText": "This instructs the test resource to set up the broker to request authentication and to pass the required kafka-client properties on to quarkus.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414482095", "createdAt": "2020-04-24T10:51:00Z", "author": {"login": "schulzp"}, "path": "integration-tests/kafka/pom.xml", "diffHunk": "@@ -114,13 +135,31 @@\n                         <artifactId>maven-failsafe-plugin</artifactId>\n                         <executions>\n                             <execution>\n+                                <id>without-security</id>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <systemProperties>\n+                                        <native.image.path>\n+                                            ${project.build.directory}/${project.build.finalName}-runner\n+                                        </native.image.path>\n+                                    </systemProperties>\n+                                </configuration>\n+                            </execution>\n+                            <execution>\n+                                <id>with-sasl-plaintext</id>\n                                 <goals>\n                                     <goal>integration-test</goal>\n                                     <goal>verify</goal>\n                                 </goals>\n                                 <configuration>\n                                     <systemProperties>\n-                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n+                                        <kafka.security.protocol>SASL_PLAINTEXT</kafka.security.protocol>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0NzE2OA=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NDM2NQ==", "bodyText": "Implemented dedicated integration test, leaving the existing ones untouched.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r415344365", "createdAt": "2020-04-26T16:12:30Z", "author": {"login": "schulzp"}, "path": "integration-tests/kafka/pom.xml", "diffHunk": "@@ -114,13 +135,31 @@\n                         <artifactId>maven-failsafe-plugin</artifactId>\n                         <executions>\n                             <execution>\n+                                <id>without-security</id>\n+                                <goals>\n+                                    <goal>integration-test</goal>\n+                                    <goal>verify</goal>\n+                                </goals>\n+                                <configuration>\n+                                    <systemProperties>\n+                                        <native.image.path>\n+                                            ${project.build.directory}/${project.build.finalName}-runner\n+                                        </native.image.path>\n+                                    </systemProperties>\n+                                </configuration>\n+                            </execution>\n+                            <execution>\n+                                <id>with-sasl-plaintext</id>\n                                 <goals>\n                                     <goal>integration-test</goal>\n                                     <goal>verify</goal>\n                                 </goals>\n                                 <configuration>\n                                     <systemProperties>\n-                                        <native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path>\n+                                        <kafka.security.protocol>SASL_PLAINTEXT</kafka.security.protocol>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0NzE2OA=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjI2NzgyOnYy", "diffSide": "RIGHT", "path": "integration-tests/kafka/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo1MjozOVrOGLP3Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQxNjoxMzowMVrOGMGnRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0NzM5OQ==", "bodyText": "Why are these properties configured here and not in the Kafka Test Resource?", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414447399", "createdAt": "2020-04-24T09:52:39Z", "author": {"login": "cescoffier"}, "path": "integration-tests/kafka/pom.xml", "diffHunk": "@@ -96,6 +96,27 @@\n                     </execution>\n                 </executions>\n             </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>with-sasl-plaintext</id>\n+                        <goals>\n+                            <goal>test</goal>\n+                        </goals>\n+                        <configuration>\n+                            <systemProperties>\n+                                <kafka.security.protocol>SASL_PLAINTEXT", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ4MjQzMw==", "bodyText": "This instructs the test resource to set up the broker to request authentication and to pass the required kafka-client properties on to quarkus.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414482433", "createdAt": "2020-04-24T10:51:28Z", "author": {"login": "schulzp"}, "path": "integration-tests/kafka/pom.xml", "diffHunk": "@@ -96,6 +96,27 @@\n                     </execution>\n                 </executions>\n             </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>with-sasl-plaintext</id>\n+                        <goals>\n+                            <goal>test</goal>\n+                        </goals>\n+                        <configuration>\n+                            <systemProperties>\n+                                <kafka.security.protocol>SASL_PLAINTEXT", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0NzM5OQ=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTM0NDQ1Mg==", "bodyText": "Implemented dedicated integration test, leaving the existing ones untouched.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r415344452", "createdAt": "2020-04-26T16:13:01Z", "author": {"login": "schulzp"}, "path": "integration-tests/kafka/pom.xml", "diffHunk": "@@ -96,6 +96,27 @@\n                     </execution>\n                 </executions>\n             </plugin>\n+            <plugin>\n+                <groupId>org.apache.maven.plugins</groupId>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+                <executions>\n+                    <execution>\n+                        <id>with-sasl-plaintext</id>\n+                        <goals>\n+                            <goal>test</goal>\n+                        </goals>\n+                        <configuration>\n+                            <systemProperties>\n+                                <kafka.security.protocol>SASL_PLAINTEXT", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ0NzM5OQ=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjI4ODAyOnYy", "diffSide": "RIGHT", "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwOTo1NzowOFrOGLQC1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNzozMjoyN1rOGMU2Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MDM5MQ==", "bodyText": "I believe we should be able to avoid this new bean.\nIt seems to be convenient for the tests, but the Kafka Test Resource can configure properties (that's the Map returned by the start method)", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r414450391", "createdAt": "2020-04-24T09:57:08Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -130,4 +147,13 @@ HealthBuildItem addHealthCheck(KafkaBuildTimeConfig buildTimeConfig) {\n         return new HealthBuildItem(\"io.quarkus.kafka.client.health.KafkaHealthCheck\",\n                 buildTimeConfig.healthEnabled, \"kafka\");\n     }\n+\n+    @BuildStep\n+    AdditionalBeanBuildItem addRuntimeConfig() {\n+        final Builder builder = AdditionalBeanBuildItem.builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTU3NzY1OQ==", "bodyText": "If we go with this, we would need to adapt the Reactive Messaging Kafka connector to use the same config. This would be a breaking change.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r415577659", "createdAt": "2020-04-27T07:32:27Z", "author": {"login": "cescoffier"}, "path": "extensions/kafka-client/deployment/src/main/java/io/quarkus/kafka/client/deployment/KafkaProcessor.java", "diffHunk": "@@ -130,4 +147,13 @@ HealthBuildItem addHealthCheck(KafkaBuildTimeConfig buildTimeConfig) {\n         return new HealthBuildItem(\"io.quarkus.kafka.client.health.KafkaHealthCheck\",\n                 buildTimeConfig.healthEnabled, \"kafka\");\n     }\n+\n+    @BuildStep\n+    AdditionalBeanBuildItem addRuntimeConfig() {\n+        final Builder builder = AdditionalBeanBuildItem.builder()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDQ1MDM5MQ=="}, "originalCommit": {"oid": "f8b60e63553decad4ddf79fd85fb321f533f463e"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5OTkwNTQxOnYy", "diffSide": "RIGHT", "path": "integration-tests/kafka/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQwODozNTowMFrOGOfUfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxOToxODozMFrOGO2_JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg0NjM5OA==", "bodyText": "Any reason for this?", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r417846398", "createdAt": "2020-04-30T08:35:00Z", "author": {"login": "cescoffier"}, "path": "integration-tests/kafka/pom.xml", "diffHunk": "@@ -196,6 +196,9 @@\n                         <artifactId>maven-surefire-plugin</artifactId>\n                         <configuration>\n                             <skip>false</skip>\n+                            <systemProperties>\n+                                <quarkus.debug.generated-sources-dir>${project.build.directory}/generated-sources</quarkus.debug.generated-sources-dir>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed66d2c6c57414355068d3d9dcbad6b3dfaa415"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODIzNDE0OA==", "bodyText": "Good catch, removed it.", "url": "https://github.com/quarkusio/quarkus/pull/8817#discussion_r418234148", "createdAt": "2020-04-30T19:18:30Z", "author": {"login": "schulzp"}, "path": "integration-tests/kafka/pom.xml", "diffHunk": "@@ -196,6 +196,9 @@\n                         <artifactId>maven-surefire-plugin</artifactId>\n                         <configuration>\n                             <skip>false</skip>\n+                            <systemProperties>\n+                                <quarkus.debug.generated-sources-dir>${project.build.directory}/generated-sources</quarkus.debug.generated-sources-dir>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzg0NjM5OA=="}, "originalCommit": {"oid": "aed66d2c6c57414355068d3d9dcbad6b3dfaa415"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3446, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}