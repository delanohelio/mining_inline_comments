{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMTc2NDEw", "number": 13923, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMTozNjoyOVrOFGqezg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMTozNjoyOVrOFGqezg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNTMxNzkwOnYy", "diffSide": "RIGHT", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanDeployment.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMTozNjoyOVrOIHxgvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMTozNjoyOVrOIHxgvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTAyMjE0MA==", "bodyText": "Container annotations are not bindings/qualifiers themselves. This should be left untouched.", "url": "https://github.com/quarkusio/quarkus/pull/13923#discussion_r545022140", "createdAt": "2020-12-17T11:36:29Z", "author": {"login": "manovotn"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/BeanDeployment.java", "diffHunk": "@@ -513,31 +513,43 @@ private void buildContextPut(String key, Object value) {\n         }\n     }\n \n-    private static Map<DotName, ClassInfo> findQualifiers(IndexView index) {\n+    private Map<DotName, ClassInfo> findQualifiers(IndexView index) {\n         Map<DotName, ClassInfo> qualifiers = new HashMap<>();\n         for (AnnotationInstance qualifier : index.getAnnotations(DotNames.QUALIFIER)) {\n-            qualifiers.put(qualifier.target().asClass().name(), qualifier.target().asClass());\n+            ClassInfo qualifierClass = qualifier.target().asClass();\n+            if (isExcluded(qualifierClass)) {\n+                continue;\n+            }\n+            qualifiers.put(qualifierClass.name(), qualifierClass);\n         }\n         return qualifiers;\n     }\n \n-    private static Map<DotName, ClassInfo> findContainerAnnotations(Map<DotName, ClassInfo> annotations, IndexView index) {\n+    private Map<DotName, ClassInfo> findContainerAnnotations(Map<DotName, ClassInfo> annotations, IndexView index) {\n         Map<DotName, ClassInfo> containerAnnotations = new HashMap<>();\n         for (ClassInfo annotation : annotations.values()) {\n             AnnotationInstance repeatableMetaAnnotation = annotation.classAnnotation(DotNames.REPEATABLE);\n             if (repeatableMetaAnnotation != null) {\n                 DotName containerAnnotationName = repeatableMetaAnnotation.value().asClass().name();\n-                containerAnnotations.put(containerAnnotationName, getClassByName(index, containerAnnotationName));\n+                ClassInfo containerClass = getClassByName(index, containerAnnotationName);\n+                if (isExcluded(containerClass)) {\n+                    continue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd216be2b0ad203f5040c73b237428f5894a229"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4404, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}