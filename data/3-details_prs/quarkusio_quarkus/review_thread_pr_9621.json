{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNDUyODAy", "number": 9621, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwODo1NzozMFrOD__2iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOTowNjo1OFrOEAAEmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDMzMDMyOnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwODo1NzozMFrOGa_5Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDo1MTozNFrOGbD6NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2MzAzOQ==", "bodyText": "Do you really need the null test? I don't think so. Javadoc of the method says @return a non-null list of annotation instances.", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r430963039", "createdAt": "2020-05-27T08:57:30Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -905,6 +908,22 @@ public void produceLoggingCategories(BuildProducer<LogCategoryBuildItem> categor\n         }\n     }\n \n+    @BuildStep(onlyIf = NativeBuild.class)\n+    public void test(CombinedIndexBuildItem index,\n+            BuildProducer<ReflectiveClassBuildItem> reflective) {\n+        Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);\n+        if (annotationInstance != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cbfc1c5c1c49ed50714249985c0f6c324d9e393"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAyODc4OQ==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r431028789", "createdAt": "2020-05-27T10:51:34Z", "author": {"login": "andrejpetras"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -905,6 +908,22 @@ public void produceLoggingCategories(BuildProducer<LogCategoryBuildItem> categor\n         }\n     }\n \n+    @BuildStep(onlyIf = NativeBuild.class)\n+    public void test(CombinedIndexBuildItem index,\n+            BuildProducer<ReflectiveClassBuildItem> reflective) {\n+        Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);\n+        if (annotationInstance != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2MzAzOQ=="}, "originalCommit": {"oid": "8cbfc1c5c1c49ed50714249985c0f6c324d9e393"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDMzMjc4OnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwODo1ODowNlrOGa_69Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDo1MToyN1rOGbD6AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2MzQ0NQ==", "bodyText": "Please use name().toString() instead of the ClassInfo#toString(). In this case, it makes no difference but we had some issues with that before.", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r430963445", "createdAt": "2020-05-27T08:58:06Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -905,6 +908,22 @@ public void produceLoggingCategories(BuildProducer<LogCategoryBuildItem> categor\n         }\n     }\n \n+    @BuildStep(onlyIf = NativeBuild.class)\n+    public void test(CombinedIndexBuildItem index,\n+            BuildProducer<ReflectiveClassBuildItem> reflective) {\n+        Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);\n+        if (annotationInstance != null) {\n+\n+            String[] metamodel = annotationInstance.stream()\n+                    .map(a -> a.target().asClass().toString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cbfc1c5c1c49ed50714249985c0f6c324d9e393"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAyODczNw==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r431028737", "createdAt": "2020-05-27T10:51:27Z", "author": {"login": "andrejpetras"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -905,6 +908,22 @@ public void produceLoggingCategories(BuildProducer<LogCategoryBuildItem> categor\n         }\n     }\n \n+    @BuildStep(onlyIf = NativeBuild.class)\n+    public void test(CombinedIndexBuildItem index,\n+            BuildProducer<ReflectiveClassBuildItem> reflective) {\n+        Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);\n+        if (annotationInstance != null) {\n+\n+            String[] metamodel = annotationInstance.stream()\n+                    .map(a -> a.target().asClass().toString())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2MzQ0NQ=="}, "originalCommit": {"oid": "8cbfc1c5c1c49ed50714249985c0f6c324d9e393"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDM2NDc1OnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOTowNjozN1rOGbAP7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDo1MToyMVrOGbD5xA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2ODgxMw==", "bodyText": "Thinking about it a bit more, just test if the collection is empty above instead of null and drop that check.", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r430968813", "createdAt": "2020-05-27T09:06:37Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -905,6 +908,22 @@ public void produceLoggingCategories(BuildProducer<LogCategoryBuildItem> categor\n         }\n     }\n \n+    @BuildStep(onlyIf = NativeBuild.class)\n+    public void test(CombinedIndexBuildItem index,\n+            BuildProducer<ReflectiveClassBuildItem> reflective) {\n+        Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);\n+        if (annotationInstance != null) {\n+\n+            String[] metamodel = annotationInstance.stream()\n+                    .map(a -> a.target().asClass().toString())\n+                    .toArray(String[]::new);\n+\n+            if (metamodel.length > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cbfc1c5c1c49ed50714249985c0f6c324d9e393"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAyODY3Ng==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r431028676", "createdAt": "2020-05-27T10:51:21Z", "author": {"login": "andrejpetras"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -905,6 +908,22 @@ public void produceLoggingCategories(BuildProducer<LogCategoryBuildItem> categor\n         }\n     }\n \n+    @BuildStep(onlyIf = NativeBuild.class)\n+    public void test(CombinedIndexBuildItem index,\n+            BuildProducer<ReflectiveClassBuildItem> reflective) {\n+        Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);\n+        if (annotationInstance != null) {\n+\n+            String[] metamodel = annotationInstance.stream()\n+                    .map(a -> a.target().asClass().toString())\n+                    .toArray(String[]::new);\n+\n+            if (metamodel.length > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2ODgxMw=="}, "originalCommit": {"oid": "8cbfc1c5c1c49ed50714249985c0f6c324d9e393"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NDM2NjM0OnYy", "diffSide": "RIGHT", "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwOTowNjo1OFrOGbAQ8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QxMDo1MToxNlrOGbD5mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2OTA3NQ==", "bodyText": "Could you make the variable plural? It would be less confusing.", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r430969075", "createdAt": "2020-05-27T09:06:58Z", "author": {"login": "gsmet"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -905,6 +908,22 @@ public void produceLoggingCategories(BuildProducer<LogCategoryBuildItem> categor\n         }\n     }\n \n+    @BuildStep(onlyIf = NativeBuild.class)\n+    public void test(CombinedIndexBuildItem index,\n+            BuildProducer<ReflectiveClassBuildItem> reflective) {\n+        Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cbfc1c5c1c49ed50714249985c0f6c324d9e393"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTAyODYzMw==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/9621#discussion_r431028633", "createdAt": "2020-05-27T10:51:16Z", "author": {"login": "andrejpetras"}, "path": "extensions/hibernate-orm/deployment/src/main/java/io/quarkus/hibernate/orm/deployment/HibernateOrmProcessor.java", "diffHunk": "@@ -905,6 +908,22 @@ public void produceLoggingCategories(BuildProducer<LogCategoryBuildItem> categor\n         }\n     }\n \n+    @BuildStep(onlyIf = NativeBuild.class)\n+    public void test(CombinedIndexBuildItem index,\n+            BuildProducer<ReflectiveClassBuildItem> reflective) {\n+        Collection<AnnotationInstance> annotationInstance = index.getIndex().getAnnotations(STATIC_METAMODEL);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDk2OTA3NQ=="}, "originalCommit": {"oid": "8cbfc1c5c1c49ed50714249985c0f6c324d9e393"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3016, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}