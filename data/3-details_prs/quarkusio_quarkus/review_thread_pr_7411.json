{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5NTE5OTc0", "number": 7411, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDo1NTo0N1rODiu68w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNToxOTo0MVrODivh1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzQ2OTMxOnYy", "diffSide": "RIGHT", "path": "extensions/smallrye-metrics/deployment/src/test/java/io/quarkus/smallrye/metrics/test/MetricResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDo1NTo0N1rOFuJNqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDo1NTo0N1rOFuJNqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkyOTc2OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public String[] getRegisteredCountersInVendorScope() {\n          \n          \n            \n                public String[] getRegisteredCountersInVendorRegistryType() {", "url": "https://github.com/quarkusio/quarkus/pull/7411#discussion_r383929769", "createdAt": "2020-02-25T14:55:47Z", "author": {"login": "gastaldi"}, "path": "extensions/smallrye-metrics/deployment/src/test/java/io/quarkus/smallrye/metrics/test/MetricResource.java", "diffHunk": "@@ -16,18 +16,34 @@\n     @RegistryType(type = MetricRegistry.Type.VENDOR)\n     MetricRegistry vendorRegistry;\n \n+    @Inject\n+    @RegistryType(type = MetricRegistry.Type.BASE)\n+    MetricRegistry baseRegistry;\n+\n     @GET\n     @Path(\"/get-counters\")\n     @Produces(\"application/json\")\n-    public String[] getRegisteredCounters() {\n+    public String[] getRegisteredCountersInVendorScope() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc06c0edbba65820a5b6f802af9ff84d3abd12d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzQ3MDk5OnYy", "diffSide": "RIGHT", "path": "extensions/smallrye-metrics/deployment/src/test/java/io/quarkus/smallrye/metrics/test/MetricResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDo1NjoxMVrOFuJOww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDo1NjoxMVrOFuJOww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkzMDA1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public String[] getRegisteredCountersInBaseScope() {\n          \n          \n            \n                public String[] getRegisteredCountersInBaseRegistryType() {", "url": "https://github.com/quarkusio/quarkus/pull/7411#discussion_r383930051", "createdAt": "2020-02-25T14:56:11Z", "author": {"login": "gastaldi"}, "path": "extensions/smallrye-metrics/deployment/src/test/java/io/quarkus/smallrye/metrics/test/MetricResource.java", "diffHunk": "@@ -16,18 +16,34 @@\n     @RegistryType(type = MetricRegistry.Type.VENDOR)\n     MetricRegistry vendorRegistry;\n \n+    @Inject\n+    @RegistryType(type = MetricRegistry.Type.BASE)\n+    MetricRegistry baseRegistry;\n+\n     @GET\n     @Path(\"/get-counters\")\n     @Produces(\"application/json\")\n-    public String[] getRegisteredCounters() {\n+    public String[] getRegisteredCountersInVendorScope() {\n         return vendorRegistry.getCounters().keySet().stream().map(MetricID::getName).toArray(String[]::new);\n     }\n \n+    @GET\n+    @Path(\"/get-counters-base\")\n+    @Produces(\"application/json\")\n+    public String[] getRegisteredCountersInBaseScope() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc06c0edbba65820a5b6f802af9ff84d3abd12d"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzQ3MzIwOnYy", "diffSide": "RIGHT", "path": "extensions/smallrye-metrics/deployment/src/test/java/io/quarkus/smallrye/metrics/test/MetricsFromExtensionDisabledTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDo1Njo0MVrOFuJQMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDo1Njo0MVrOFuJQMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkzMDQxNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testBaseScope() {\n          \n          \n            \n                public void testBaseRegistryType() {", "url": "https://github.com/quarkusio/quarkus/pull/7411#discussion_r383930417", "createdAt": "2020-02-25T14:56:41Z", "author": {"login": "gastaldi"}, "path": "extensions/smallrye-metrics/deployment/src/test/java/io/quarkus/smallrye/metrics/test/MetricsFromExtensionDisabledTestCase.java", "diffHunk": "@@ -29,9 +31,17 @@\n             .addBuildChainCustomizer(buildCustomizer());\n \n     @Test\n-    public void test() {\n+    public void testBaseScope() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc06c0edbba65820a5b6f802af9ff84d3abd12d"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzQ3NDY2OnYy", "diffSide": "RIGHT", "path": "extensions/smallrye-metrics/deployment/src/test/java/io/quarkus/smallrye/metrics/test/MetricsFromExtensionDisabledTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDo1NzowMVrOFuJRGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDo1NzowMVrOFuJRGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkzMDY1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testVendorScope() {\n          \n          \n            \n                public void testVendorRegistryType() {", "url": "https://github.com/quarkusio/quarkus/pull/7411#discussion_r383930650", "createdAt": "2020-02-25T14:57:01Z", "author": {"login": "gastaldi"}, "path": "extensions/smallrye-metrics/deployment/src/test/java/io/quarkus/smallrye/metrics/test/MetricsFromExtensionDisabledTestCase.java", "diffHunk": "@@ -29,9 +31,17 @@\n             .addBuildChainCustomizer(buildCustomizer());\n \n     @Test\n-    public void test() {\n+    public void testBaseScope() {\n+        String[] metricNames = RestAssured.when().get(\"/get-counters-base\").then().extract().as(String[].class);\n+        assertThat(metricNames,\n+                not(hasItemInArray(\"io.quarkus.smallrye.metrics.test.MetricResource.countMeInBaseScope\")));\n+        assertThat(metricNames, not(emptyArray())); // regular base metrics should still be present\n+    }\n+\n+    @Test\n+    public void testVendorScope() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fc06c0edbba65820a5b6f802af9ff84d3abd12d"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzU2NzA5OnYy", "diffSide": "RIGHT", "path": "extensions/smallrye-metrics/deployment/src/test/java/io/quarkus/smallrye/metrics/test/MetricsFromExtensionTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNToxOToxM1rOFuKKmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNToxOToxM1rOFuKKmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk0NTM3MQ==", "bodyText": "Darn I missed these two tests :)", "url": "https://github.com/quarkusio/quarkus/pull/7411#discussion_r383945371", "createdAt": "2020-02-25T15:19:13Z", "author": {"login": "gastaldi"}, "path": "extensions/smallrye-metrics/deployment/src/test/java/io/quarkus/smallrye/metrics/test/MetricsFromExtensionTestCase.java", "diffHunk": "@@ -59,11 +76,17 @@ public void accept(BuildChainBuilder builder) {\n     }\n \n     @Test\n-    public void test() {\n+    public void testVendorScope() {\n         String[] metricNames = RestAssured.when().get(\"/get-counters\").then().extract().as(String[].class);\n         assertThat(metricNames, Matchers.arrayContainingInAnyOrder(\n                 \"io.quarkus.smallrye.metrics.test.MetricResource.countMePlease\",\n                 \"io.quarkus.smallrye.metrics.test.MetricResource.countMePlease2\"));\n     }\n \n+    @Test\n+    public void testBaseScope() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0630f534ed925630b82a68d677743b7f4a7f30c3"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzU2ODg1OnYy", "diffSide": "RIGHT", "path": "extensions/smallrye-metrics/deployment/src/test/java/io/quarkus/smallrye/metrics/test/MetricsFromExtensionTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNToxOTo0MVrOFuKLuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNToxOTo0MVrOFuKLuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk0NTY1OQ==", "bodyText": "scope is used here too", "url": "https://github.com/quarkusio/quarkus/pull/7411#discussion_r383945659", "createdAt": "2020-02-25T15:19:41Z", "author": {"login": "gastaldi"}, "path": "extensions/smallrye-metrics/deployment/src/test/java/io/quarkus/smallrye/metrics/test/MetricsFromExtensionTestCase.java", "diffHunk": "@@ -22,8 +23,9 @@\n \n /**\n  * Test the metric registration mechanism for other Quarkus extensions.\n- * The test simulates an extension that registers a counter for every method\n- * whose name starts with \"countMePlease\".\n+ * The test simulates an extension that registers a counter in VENDOR scope for every method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0630f534ed925630b82a68d677743b7f4a7f30c3"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4971, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}