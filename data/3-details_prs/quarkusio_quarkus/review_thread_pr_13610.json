{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNjEyOTcw", "number": 13610, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMjozMTowMlrOE_Xbuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDoyMDo0MlrOE_jKpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0ODc5Njc1OnYy", "diffSide": "RIGHT", "path": "integration-tests/funqy-amazon-lambda/src/test/java/io/quarkus/funqy/test/NoArgFunTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMjozMTowMlrOH9CdOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwMzo0Njo0NFrOH9JTQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc2NTQzNA==", "bodyText": "Maybe we could add overload with timeout?", "url": "https://github.com/quarkusio/quarkus/pull/13610#discussion_r533765434", "createdAt": "2020-12-01T22:31:02Z", "author": {"login": "matejvasek"}, "path": "integration-tests/funqy-amazon-lambda/src/test/java/io/quarkus/funqy/test/NoArgFunTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.quarkus.funqy.test;\n+\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+import java.util.Timer;\n+import java.util.TimerTask;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+\n+import io.quarkus.amazon.lambda.test.LambdaClient;\n+import io.quarkus.test.junit.QuarkusTest;\n+\n+@QuarkusTest\n+@ExtendWith(UseNoArgFunExtension.class)\n+public class NoArgFunTest {\n+\n+    @Test\n+    public void testNoArgFun() {\n+        Thread mainTestThread = Thread.currentThread();\n+        Timer timer = new Timer(true);\n+        timer.schedule(new TimerTask() {\n+            @Override\n+            public void run() {\n+                mainTestThread.interrupt();\n+            }\n+        }, 10_000);\n+\n+        try {\n+            LambdaClient.invoke(String.class, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "400b77441c2c7f899ee17375a77c54b7195dbbef"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzg3NzU2OA==", "bodyText": "+1", "url": "https://github.com/quarkusio/quarkus/pull/13610#discussion_r533877568", "createdAt": "2020-12-02T03:46:44Z", "author": {"login": "patriot1burke"}, "path": "integration-tests/funqy-amazon-lambda/src/test/java/io/quarkus/funqy/test/NoArgFunTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package io.quarkus.funqy.test;\n+\n+import static org.junit.jupiter.api.Assertions.fail;\n+\n+import java.util.Timer;\n+import java.util.TimerTask;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+\n+import io.quarkus.amazon.lambda.test.LambdaClient;\n+import io.quarkus.test.junit.QuarkusTest;\n+\n+@QuarkusTest\n+@ExtendWith(UseNoArgFunExtension.class)\n+public class NoArgFunTest {\n+\n+    @Test\n+    public void testNoArgFun() {\n+        Thread mainTestThread = Thread.currentThread();\n+        Timer timer = new Timer(true);\n+        timer.schedule(new TimerTask() {\n+            @Override\n+            public void run() {\n+                mainTestThread.interrupt();\n+            }\n+        }, 10_000);\n+\n+        try {\n+            LambdaClient.invoke(String.class, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzc2NTQzNA=="}, "originalCommit": {"oid": "400b77441c2c7f899ee17375a77c54b7195dbbef"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDcxOTExOnYy", "diffSide": "RIGHT", "path": "extensions/amazon-lambda/common-runtime/src/main/java/io/quarkus/amazon/lambda/runtime/AbstractLambdaPollLoop.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDoyMDo0MlrOH9UBig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDoyMDo0MlrOH9UBig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1MzI1OA==", "bodyText": "Please use curly braces.", "url": "https://github.com/quarkusio/quarkus/pull/13610#discussion_r534053258", "createdAt": "2020-12-02T10:20:42Z", "author": {"login": "gsmet"}, "path": "extensions/amazon-lambda/common-runtime/src/main/java/io/quarkus/amazon/lambda/runtime/AbstractLambdaPollLoop.java", "diffHunk": "@@ -74,8 +74,10 @@ public void run() {\n                                     }\n                                 } else {\n                                     Object input = null;\n-                                    if (running.get() && getInputReader() != null) {\n-                                        input = getInputReader().readValue(requestConnection.getInputStream());\n+                                    if (running.get()) {\n+                                        ObjectReader inputReader = getInputReader();\n+                                        if (inputReader != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "400b77441c2c7f899ee17375a77c54b7195dbbef"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3732, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}