{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NjA0NTA2", "number": 10141, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMDozODoyMlrOEHhLtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMDozODoyMlrOEHhLtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzE5MTU3OnYy", "diffSide": "RIGHT", "path": "extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMDozODoyMlrOGm7M3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzoxMDozOVrOGnJvJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ2OTAyMQ==", "bodyText": "Using Json.* methods is quite expensive, could we improve performance by caching the result of JsonProvider.provider() and using that instead?", "url": "https://github.com/quarkusio/quarkus/pull/10141#discussion_r443469021", "createdAt": "2020-06-22T10:38:22Z", "author": {"login": "jmartisk"}, "path": "extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java", "diffHunk": "@@ -123,21 +148,37 @@ private String doRequest(final byte[] body) {\n         try (ByteArrayInputStream input = new ByteArrayInputStream(body);\n                 final JsonReader jsonReader = Json.createReader(input)) {\n             JsonObject jsonInput = jsonReader.readObject();\n-            JsonObject outputJson = getExecutionService().execute(jsonInput);\n-            if (outputJson != null) {\n-                try (StringWriter output = new StringWriter();\n-                        final JsonWriter jsonWriter = Json.createWriter(output)) {\n-                    jsonWriter.writeObject(outputJson);\n-                    output.flush();\n-                    return output.toString();\n-                }\n-            }\n-            return null;\n+            return doRequest(jsonInput);\n         } catch (IOException ex) {\n             throw new RuntimeException(ex);\n         }\n     }\n \n+    private String doRequest(JsonObject jsonInput) {\n+        JsonObject outputJson = getExecutionService().execute(jsonInput);\n+        if (outputJson != null) {\n+            try (StringWriter output = new StringWriter();\n+                    final JsonWriter jsonWriter = Json.createWriter(output)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4b10b2bd29c466b5e5490541b2bd576d92e3c33"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcwNzE3Mw==", "bodyText": "Done. Thanks :)", "url": "https://github.com/quarkusio/quarkus/pull/10141#discussion_r443707173", "createdAt": "2020-06-22T17:10:39Z", "author": {"login": "phillip-kruger"}, "path": "extensions/smallrye-graphql/runtime/src/main/java/io/quarkus/smallrye/graphql/runtime/SmallRyeGraphQLExecutionHandler.java", "diffHunk": "@@ -123,21 +148,37 @@ private String doRequest(final byte[] body) {\n         try (ByteArrayInputStream input = new ByteArrayInputStream(body);\n                 final JsonReader jsonReader = Json.createReader(input)) {\n             JsonObject jsonInput = jsonReader.readObject();\n-            JsonObject outputJson = getExecutionService().execute(jsonInput);\n-            if (outputJson != null) {\n-                try (StringWriter output = new StringWriter();\n-                        final JsonWriter jsonWriter = Json.createWriter(output)) {\n-                    jsonWriter.writeObject(outputJson);\n-                    output.flush();\n-                    return output.toString();\n-                }\n-            }\n-            return null;\n+            return doRequest(jsonInput);\n         } catch (IOException ex) {\n             throw new RuntimeException(ex);\n         }\n     }\n \n+    private String doRequest(JsonObject jsonInput) {\n+        JsonObject outputJson = getExecutionService().execute(jsonInput);\n+        if (outputJson != null) {\n+            try (StringWriter output = new StringWriter();\n+                    final JsonWriter jsonWriter = Json.createWriter(output)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzQ2OTAyMQ=="}, "originalCommit": {"oid": "e4b10b2bd29c466b5e5490541b2bd576d92e3c33"}, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2795, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}