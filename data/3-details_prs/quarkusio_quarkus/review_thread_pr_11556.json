{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNDAwMTcx", "number": 11556, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMDowNToyNlrOEbf1WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMDowNToyNlrOEbf1WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MjY4NTY4OnYy", "diffSide": "RIGHT", "path": "extensions/quartz/deployment/src/main/java/io/quarkus/quartz/deployment/QuartzProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMDowNToyNlrOHFdhWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMDoyMToyMVrOHFeBNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ4ODYwMA==", "bodyText": "Did not know of this build item. If I understand it correctly, it will automatically pick all the implementation of the given interface? Looks handy.", "url": "https://github.com/quarkusio/quarkus/pull/11556#discussion_r475488600", "createdAt": "2020-08-24T10:05:26Z", "author": {"login": "machi1990"}, "path": "extensions/quartz/deployment/src/main/java/io/quarkus/quartz/deployment/QuartzProcessor.java", "diffHunk": "@@ -75,17 +74,10 @@ AdditionalBeanBuildItem beans() {\n     }\n \n     @BuildStep\n-    AdditionalBeanBuildItem jobs(CombinedIndexBuildItem combinedIndexBuildItem) {\n-        // Jobs need to be marked as unremovable otherwise ArC will automatically remove them because they are not @Injected anywhere\n-        AdditionalBeanBuildItem.Builder builder = AdditionalBeanBuildItem.builder().setUnremovable();\n-        // Register Jobs\n-        for (ClassInfo info : combinedIndexBuildItem.getIndex().getAllKnownImplementors(JOB)) {\n-            if (Modifier.isAbstract(info.flags())) {\n-                continue;\n-            }\n-            builder.addBeanClass(info.name().toString());\n-        }\n-        return builder.build();\n+    AutoAddScopeBuildItem addScope() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "630bd8e37d8be38c1d9524ea31fc6e04ba08df1a"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ5NjIzMQ==", "bodyText": "It's a new stuff ;-). It aims to remove boilerplate necessary when annotation transformers are used to add a scope annotation to a class...", "url": "https://github.com/quarkusio/quarkus/pull/11556#discussion_r475496231", "createdAt": "2020-08-24T10:20:12Z", "author": {"login": "mkouba"}, "path": "extensions/quartz/deployment/src/main/java/io/quarkus/quartz/deployment/QuartzProcessor.java", "diffHunk": "@@ -75,17 +74,10 @@ AdditionalBeanBuildItem beans() {\n     }\n \n     @BuildStep\n-    AdditionalBeanBuildItem jobs(CombinedIndexBuildItem combinedIndexBuildItem) {\n-        // Jobs need to be marked as unremovable otherwise ArC will automatically remove them because they are not @Injected anywhere\n-        AdditionalBeanBuildItem.Builder builder = AdditionalBeanBuildItem.builder().setUnremovable();\n-        // Register Jobs\n-        for (ClassInfo info : combinedIndexBuildItem.getIndex().getAllKnownImplementors(JOB)) {\n-            if (Modifier.isAbstract(info.flags())) {\n-                continue;\n-            }\n-            builder.addBeanClass(info.name().toString());\n-        }\n-        return builder.build();\n+    AutoAddScopeBuildItem addScope() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ4ODYwMA=="}, "originalCommit": {"oid": "630bd8e37d8be38c1d9524ea31fc6e04ba08df1a"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ5Njc1Ng==", "bodyText": "It looks shiny ;-)\nThanks. I'll keep it in mind.", "url": "https://github.com/quarkusio/quarkus/pull/11556#discussion_r475496756", "createdAt": "2020-08-24T10:21:21Z", "author": {"login": "machi1990"}, "path": "extensions/quartz/deployment/src/main/java/io/quarkus/quartz/deployment/QuartzProcessor.java", "diffHunk": "@@ -75,17 +74,10 @@ AdditionalBeanBuildItem beans() {\n     }\n \n     @BuildStep\n-    AdditionalBeanBuildItem jobs(CombinedIndexBuildItem combinedIndexBuildItem) {\n-        // Jobs need to be marked as unremovable otherwise ArC will automatically remove them because they are not @Injected anywhere\n-        AdditionalBeanBuildItem.Builder builder = AdditionalBeanBuildItem.builder().setUnremovable();\n-        // Register Jobs\n-        for (ClassInfo info : combinedIndexBuildItem.getIndex().getAllKnownImplementors(JOB)) {\n-            if (Modifier.isAbstract(info.flags())) {\n-                continue;\n-            }\n-            builder.addBeanClass(info.name().toString());\n-        }\n-        return builder.build();\n+    AutoAddScopeBuildItem addScope() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTQ4ODYwMA=="}, "originalCommit": {"oid": "630bd8e37d8be38c1d9524ea31fc6e04ba08df1a"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 650, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}