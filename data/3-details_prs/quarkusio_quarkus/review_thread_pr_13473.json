{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NTUwNDQ3", "number": 13473, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOToxMDo1NlrOE9ir8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoxNzozOVrOE-rHHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTY2ODk4OnYy", "diffSide": "LEFT", "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageAutoFeatureStep.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOToxMDo1NlrOH6SFyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOToyMDo0MVrOH6Sdtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg3NTg0OA==", "bodyText": "Why do you remove this method? NativeImageResourceDirectoryBuildItem does not seem to be related to the -H:IncludeResources problem, or?", "url": "https://github.com/quarkusio/quarkus/pull/13473#discussion_r530875848", "createdAt": "2020-11-26T09:10:56Z", "author": {"login": "mkouba"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageAutoFeatureStep.java", "diffHunk": "@@ -62,44 +53,25 @@\n     private static final MethodDescriptor RERUN_INITIALIZATION = ofMethod(\n             \"org.graalvm.nativeimage.impl.RuntimeClassInitializationSupport\",\n             \"rerunInitialization\", void.class, Class.class, String.class);\n+    private static final MethodDescriptor RESOURCES_REGISTRY_ADD_RESOURCES = ofMethod(\n+            \"com.oracle.svm.core.configure.ResourcesRegistry\",\n+            \"addResources\", void.class, String.class);\n+    private static final MethodDescriptor RESOURCES_REGISTRY_IGNORE_RESOURCES = ofMethod(\n+            \"com.oracle.svm.core.configure.ResourcesRegistry\",\n+            \"ignoreResources\", void.class, String.class);\n     static final String RUNTIME_REFLECTION = RuntimeReflection.class.getName();\n     static final String JNI_RUNTIME_ACCESS = \"com.oracle.svm.core.jni.JNIRuntimeAccess\";\n     static final String BEFORE_ANALYSIS_ACCESS = Feature.BeforeAnalysisAccess.class.getName();\n     static final String DYNAMIC_PROXY_REGISTRY = \"com.oracle.svm.core.jdk.proxy.DynamicProxyRegistry\";\n     static final String LOCALIZATION_FEATURE = \"com.oracle.svm.core.jdk.LocalizationFeature\";\n \n-    @BuildStep\n-    List<NativeImageResourceBuildItem> registerPackageResources(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3ad81c895fe066c76a8166304f32e4e6618591"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg3NjU5MQ==", "bodyText": "Ah, I see the method was just moved..", "url": "https://github.com/quarkusio/quarkus/pull/13473#discussion_r530876591", "createdAt": "2020-11-26T09:12:08Z", "author": {"login": "mkouba"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageAutoFeatureStep.java", "diffHunk": "@@ -62,44 +53,25 @@\n     private static final MethodDescriptor RERUN_INITIALIZATION = ofMethod(\n             \"org.graalvm.nativeimage.impl.RuntimeClassInitializationSupport\",\n             \"rerunInitialization\", void.class, Class.class, String.class);\n+    private static final MethodDescriptor RESOURCES_REGISTRY_ADD_RESOURCES = ofMethod(\n+            \"com.oracle.svm.core.configure.ResourcesRegistry\",\n+            \"addResources\", void.class, String.class);\n+    private static final MethodDescriptor RESOURCES_REGISTRY_IGNORE_RESOURCES = ofMethod(\n+            \"com.oracle.svm.core.configure.ResourcesRegistry\",\n+            \"ignoreResources\", void.class, String.class);\n     static final String RUNTIME_REFLECTION = RuntimeReflection.class.getName();\n     static final String JNI_RUNTIME_ACCESS = \"com.oracle.svm.core.jni.JNIRuntimeAccess\";\n     static final String BEFORE_ANALYSIS_ACCESS = Feature.BeforeAnalysisAccess.class.getName();\n     static final String DYNAMIC_PROXY_REGISTRY = \"com.oracle.svm.core.jdk.proxy.DynamicProxyRegistry\";\n     static final String LOCALIZATION_FEATURE = \"com.oracle.svm.core.jdk.LocalizationFeature\";\n \n-    @BuildStep\n-    List<NativeImageResourceBuildItem> registerPackageResources(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg3NTg0OA=="}, "originalCommit": {"oid": "cf3ad81c895fe066c76a8166304f32e4e6618591"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg4MTk3NA==", "bodyText": "Yes, I only move it to another class, where I add another related method.", "url": "https://github.com/quarkusio/quarkus/pull/13473#discussion_r530881974", "createdAt": "2020-11-26T09:20:41Z", "author": {"login": "ppalaga"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageAutoFeatureStep.java", "diffHunk": "@@ -62,44 +53,25 @@\n     private static final MethodDescriptor RERUN_INITIALIZATION = ofMethod(\n             \"org.graalvm.nativeimage.impl.RuntimeClassInitializationSupport\",\n             \"rerunInitialization\", void.class, Class.class, String.class);\n+    private static final MethodDescriptor RESOURCES_REGISTRY_ADD_RESOURCES = ofMethod(\n+            \"com.oracle.svm.core.configure.ResourcesRegistry\",\n+            \"addResources\", void.class, String.class);\n+    private static final MethodDescriptor RESOURCES_REGISTRY_IGNORE_RESOURCES = ofMethod(\n+            \"com.oracle.svm.core.configure.ResourcesRegistry\",\n+            \"ignoreResources\", void.class, String.class);\n     static final String RUNTIME_REFLECTION = RuntimeReflection.class.getName();\n     static final String JNI_RUNTIME_ACCESS = \"com.oracle.svm.core.jni.JNIRuntimeAccess\";\n     static final String BEFORE_ANALYSIS_ACCESS = Feature.BeforeAnalysisAccess.class.getName();\n     static final String DYNAMIC_PROXY_REGISTRY = \"com.oracle.svm.core.jdk.proxy.DynamicProxyRegistry\";\n     static final String LOCALIZATION_FEATURE = \"com.oracle.svm.core.jdk.LocalizationFeature\";\n \n-    @BuildStep\n-    List<NativeImageResourceBuildItem> registerPackageResources(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg3NTg0OA=="}, "originalCommit": {"oid": "cf3ad81c895fe066c76a8166304f32e4e6618591"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTY5NTE4OnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/nativeimage/NativeImageResourcePatternsBuildItem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOToxNzo0MVrOH6SWNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOToyNToxNVrOH6Spbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg4MDA1NQ==", "bodyText": "I thought that the purpose of this PR is to avoid -H:IncludeResources completely?", "url": "https://github.com/quarkusio/quarkus/pull/13473#discussion_r530880055", "createdAt": "2020-11-26T09:17:41Z", "author": {"login": "mkouba"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/nativeimage/NativeImageResourcePatternsBuildItem.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package io.quarkus.deployment.builditem.nativeimage;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import io.quarkus.builder.item.MultiBuildItem;\n+import io.quarkus.deployment.util.GlobUtil;\n+\n+/**\n+ * A build item that indicates that a set of resource paths defined by regular expression patterns or globs should be\n+ * included in the native image. This uses native-image's {@code -H:IncludeResources} under the hood.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3ad81c895fe066c76a8166304f32e4e6618591"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg4NDk3NQ==", "bodyText": "Haha, true, I have added the comment some time ago, when the migration away from the CLI was not planned yet. I should change the wording. I should say something like \"it is using the same mechanism as native-image's -H:IncludeResources command line option\".", "url": "https://github.com/quarkusio/quarkus/pull/13473#discussion_r530884975", "createdAt": "2020-11-26T09:25:15Z", "author": {"login": "ppalaga"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/nativeimage/NativeImageResourcePatternsBuildItem.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package io.quarkus.deployment.builditem.nativeimage;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import io.quarkus.builder.item.MultiBuildItem;\n+import io.quarkus.deployment.util.GlobUtil;\n+\n+/**\n+ * A build item that indicates that a set of resource paths defined by regular expression patterns or globs should be\n+ * included in the native image. This uses native-image's {@code -H:IncludeResources} under the hood.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg4MDA1NQ=="}, "originalCommit": {"oid": "cf3ad81c895fe066c76a8166304f32e4e6618591"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyOTY5Njk4OnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/nativeimage/NativeImageResourcePatternsBuildItem.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOToxODoxMFrOH6SXTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwOToyNjoyM1rOH6Sshw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg4MDMzMg==", "bodyText": "Maybe it wouldn't hurt to explain what globs means...", "url": "https://github.com/quarkusio/quarkus/pull/13473#discussion_r530880332", "createdAt": "2020-11-26T09:18:10Z", "author": {"login": "mkouba"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/nativeimage/NativeImageResourcePatternsBuildItem.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package io.quarkus.deployment.builditem.nativeimage;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import io.quarkus.builder.item.MultiBuildItem;\n+import io.quarkus.deployment.util.GlobUtil;\n+\n+/**\n+ * A build item that indicates that a set of resource paths defined by regular expression patterns or globs should be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf3ad81c895fe066c76a8166304f32e4e6618591"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg4NTc2Nw==", "bodyText": "Yeah, let me do that. I should also add some JavaDoc to the builder methods.", "url": "https://github.com/quarkusio/quarkus/pull/13473#discussion_r530885767", "createdAt": "2020-11-26T09:26:23Z", "author": {"login": "ppalaga"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/builditem/nativeimage/NativeImageResourcePatternsBuildItem.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package io.quarkus.deployment.builditem.nativeimage;\n+\n+import java.util.ArrayList;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Stream;\n+\n+import io.quarkus.builder.item.MultiBuildItem;\n+import io.quarkus.deployment.util.GlobUtil;\n+\n+/**\n+ * A build item that indicates that a set of resource paths defined by regular expression patterns or globs should be", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDg4MDMzMg=="}, "originalCommit": {"oid": "cf3ad81c895fe066c76a8166304f32e4e6618591"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTUzNTAxOnYy", "diffSide": "RIGHT", "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageAutoFeatureStep.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoxNzozOVrOH79FAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDo1Mjo0OVrOH7-qTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYyODczNw==", "bodyText": "you should use tc here to load the pattern.", "url": "https://github.com/quarkusio/quarkus/pull/13473#discussion_r532628737", "createdAt": "2020-11-30T14:17:39Z", "author": {"login": "gsmet"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageAutoFeatureStep.java", "diffHunk": "@@ -201,6 +173,21 @@ public void write(String s, byte[] bytes) {\n             }\n         }\n \n+        /* Resource includes and excludes */\n+        if (!resourcePatterns.isEmpty()) {\n+            ResultHandle resourcesRegistrySingleton = overallCatch.invokeStaticMethod(IMAGE_SINGLETONS_LOOKUP,\n+                    overallCatch.loadClass(\"com.oracle.svm.core.configure.ResourcesRegistry\"));\n+            TryBlock tc = overallCatch.tryBlock();\n+            for (NativeImageResourcePatternsBuildItem resourcePatternsItem : resourcePatterns) {\n+                for (String pattern : resourcePatternsItem.getIncludePatterns()) {\n+                    tc.invokeInterfaceMethod(RESOURCES_REGISTRY_ADD_RESOURCES, resourcesRegistrySingleton,\n+                            overallCatch.load(pattern));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f671833b31e0b3a0321a6079ccd09db843739062"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY0MDY0NQ==", "bodyText": "Thanks, let me have a look.", "url": "https://github.com/quarkusio/quarkus/pull/13473#discussion_r532640645", "createdAt": "2020-11-30T14:34:19Z", "author": {"login": "ppalaga"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageAutoFeatureStep.java", "diffHunk": "@@ -201,6 +173,21 @@ public void write(String s, byte[] bytes) {\n             }\n         }\n \n+        /* Resource includes and excludes */\n+        if (!resourcePatterns.isEmpty()) {\n+            ResultHandle resourcesRegistrySingleton = overallCatch.invokeStaticMethod(IMAGE_SINGLETONS_LOOKUP,\n+                    overallCatch.loadClass(\"com.oracle.svm.core.configure.ResourcesRegistry\"));\n+            TryBlock tc = overallCatch.tryBlock();\n+            for (NativeImageResourcePatternsBuildItem resourcePatternsItem : resourcePatterns) {\n+                for (String pattern : resourcePatternsItem.getIncludePatterns()) {\n+                    tc.invokeInterfaceMethod(RESOURCES_REGISTRY_ADD_RESOURCES, resourcesRegistrySingleton,\n+                            overallCatch.load(pattern));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYyODczNw=="}, "originalCommit": {"oid": "f671833b31e0b3a0321a6079ccd09db843739062"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY1NDY3MA==", "bodyText": "fixed in 8f5c2b5", "url": "https://github.com/quarkusio/quarkus/pull/13473#discussion_r532654670", "createdAt": "2020-11-30T14:52:49Z", "author": {"login": "ppalaga"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/steps/NativeImageAutoFeatureStep.java", "diffHunk": "@@ -201,6 +173,21 @@ public void write(String s, byte[] bytes) {\n             }\n         }\n \n+        /* Resource includes and excludes */\n+        if (!resourcePatterns.isEmpty()) {\n+            ResultHandle resourcesRegistrySingleton = overallCatch.invokeStaticMethod(IMAGE_SINGLETONS_LOOKUP,\n+                    overallCatch.loadClass(\"com.oracle.svm.core.configure.ResourcesRegistry\"));\n+            TryBlock tc = overallCatch.tryBlock();\n+            for (NativeImageResourcePatternsBuildItem resourcePatternsItem : resourcePatterns) {\n+                for (String pattern : resourcePatternsItem.getIncludePatterns()) {\n+                    tc.invokeInterfaceMethod(RESOURCES_REGISTRY_ADD_RESOURCES, resourcesRegistrySingleton,\n+                            overallCatch.load(pattern));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYyODczNw=="}, "originalCommit": {"oid": "f671833b31e0b3a0321a6079ccd09db843739062"}, "originalPosition": 100}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3842, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}