{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2OTUxNzYx", "number": 10980, "title": "Adding OpenAPI in the Reactive Routes Guide", "bodyText": "This PR adds the OpenAPI section to the Reactive Routes Guide. (see PR #10944)\nIt also updates to the latest SmallRye OpenAPI version that contains some more fixes for the Reactive Routes, namely\n\nSupport for default method on a Route (GET)\nSupport for default path on a Route (Method Name)", "createdAt": "2020-07-27T07:07:32Z", "url": "https://github.com/quarkusio/quarkus/pull/10980", "merged": true, "mergeCommit": {"oid": "a045b8b7fe670fcba956a449f5502867eb31b5c5"}, "closed": true, "closedAt": "2020-07-28T08:12:34Z", "author": {"login": "phillip-kruger"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc49LG7gFqTQ1NTU1ODU5OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5R62hAFqTQ1NjQwMTE2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NTU4NTk5", "url": "https://github.com/quarkusio/quarkus/pull/10980#pullrequestreview-455558599", "createdAt": "2020-07-27T08:02:11Z", "commit": {"oid": "fd0177b4a60fe7afb6c0831a323295915c6c21d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODowMjoxMVrOG3XuYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwODowMjoxMVrOG3XuYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDcxMzU2OQ==", "bodyText": "Is this the correct way to navigate to a section in another document? CC @gsmet\nThe URL part is probably pretty stable but I think that <<openapi-swaggerui.adoc#use-swagger-ui-for-development,the Swagger UI>> should work as well.", "url": "https://github.com/quarkusio/quarkus/pull/10980#discussion_r460713569", "createdAt": "2020-07-27T08:02:11Z", "author": {"login": "mkouba"}, "path": "docs/src/main/asciidoc/reactive-routes.adoc", "diffHunk": "@@ -522,6 +522,171 @@ public class MyFilters {\n <1> The `RouteFilter#value()` defines the priority used to sort the filters - filters with higher priority are called first.\n <2> The filter is likely required to call the `next()` method to continue the chain.\n \n+== Adding OpenAPI and Swagger-UI\n+\n+You can add support for link:https://www.openapis.org/[OpenAPI] and link:https://swagger.io/tools/swagger-ui/[Swagger-UI] by using the `quarkus-smallrye-openapi` extension.\n+\n+Add the extension by running this command:\n+\n+[source,bash]\n+----\n+./mvnw quarkus:add-extension -Dextensions=\"io.quarkus:quarkus-smallrye-openapi\"\n+----\n+\n+This will add the following to your `pom.xml`:\n+\n+[source,xml]\n+----\n+<dependency>\n+    <groupId>io.quarkus</groupId>\n+    <artifactId>quarkus-smallrye-openapi</artifactId>\n+</dependency>\n+----\n+\n+This is enough to generate a basic OpenAPI schema document from your Vert.x Routes:\n+\n+[source,bash]\n+----\n+curl http://localhost:8080/openapi\n+----\n+\n+You will see the generated OpenAPI schema document:\n+\n+[source, yaml]\n+----\n+---\n+openapi: 3.0.3\n+info:\n+  title: Generated API\n+  version: \"1.0\"\n+paths:\n+  /greetings:\n+    get:\n+      responses:\n+        \"204\":\n+          description: No Content\n+  /hello:\n+    get:\n+      responses:\n+        \"204\":\n+          description: No Content\n+  /world:\n+    get:\n+      responses:\n+        \"200\":\n+          description: OK\n+          content:\n+            '*/*':\n+              schema:\n+                type: string\n+----\n+\n+Also see link:https://quarkus.io/guides/openapi-swaggerui[the OpenAPI Guide]\n+\n+=== Adding MicroProfile OpenAPI Annotations\n+\n+You can use link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] to better document your schema, \n+example, adding header info, or specifying the return type on `void` methods might be usefull :\n+\n+[source, java]\n+----\n+@OpenAPIDefinition(<1>\n+    info = @Info(\n+        title=\"Greeting API\",\n+        version = \"1.0.1\",\n+        contact = @Contact(\n+            name = \"Greeting API Support\",\n+            url = \"http://exampleurl.com/contact\",\n+            email = \"techsupport@example.com\"),\n+        license = @License(\n+            name = \"Apache 2.0\",\n+            url = \"http://www.apache.org/licenses/LICENSE-2.0.html\"))\n+)\n+@ApplicationScoped\n+public class MyDeclarativeRoutes {\n+\n+    // neither path nor regex is set - match a path derived from the method name\n+    @Route(methods = HttpMethod.GET)\n+    @APIResponse(responseCode=\"200\", \n+            description=\"Say hello\", \n+            content=@Content(mediaType=\"application/json\", schema=@Schema(type=SchemaType.STRING)))<2>\n+    void hello(RoutingContext rc) {\n+        rc.response().end(\"hello\");\n+    }\n+    \n+    @Route(path = \"/world\") \n+    String helloWorld() {\n+        return \"Hello world!\";\n+    }\n+\n+    @Route(path = \"/greetings\", methods = HttpMethod.GET)\n+    @APIResponse(responseCode=\"200\", \n+            description=\"Greeting\", \n+            content=@Content(mediaType=\"application/json\", schema=@Schema(type=SchemaType.STRING)))\n+    void greetings(RoutingExchange ex) {\n+        ex.ok(\"hello \" + ex.getParam(\"name\").orElse(\"world\"));\n+    }\n+}\n+----\n+\n+<1> Header information about your API.\n+<2> Defining the response\n+\n+This will generate this OpenAPI schema:\n+\n+[source, yaml]\n+----\n+---\n+openapi: 3.0.3\n+info:\n+  title: Greeting API\n+  contact:\n+    name: Greeting API Support\n+    url: http://exampleurl.com/contact\n+    email: techsupport@example.com\n+  license:\n+    name: Apache 2.0\n+    url: http://www.apache.org/licenses/LICENSE-2.0.html\n+  version: 1.0.1\n+paths:\n+  /greetings:\n+    get:\n+      responses:\n+        \"200\":\n+          description: Greeting\n+          content:\n+            application/json:\n+              schema:\n+                type: string\n+  /hello:\n+    get:\n+      responses:\n+        \"200\":\n+          description: Say hello\n+          content:\n+            application/json:\n+              schema:\n+                type: string\n+  /world:\n+    get:\n+      responses:\n+        \"200\":\n+          description: OK\n+          content:\n+            '*/*':\n+              schema:\n+                type: string\n+----\n+\n+=== Using Swagger UI\n+\n+Swagger UI is included by default when running in `Dev` or `Test` mode, and can optionally added to `Prod` mode.\n+See link:https://quarkus.io/guides/openapi-swaggerui#use-swagger-ui-for-development[the Swagger UI] Guide for more details.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fd0177b4a60fe7afb6c0831a323295915c6c21d6"}, "originalPosition": 181}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NjY0MjE2", "url": "https://github.com/quarkusio/quarkus/pull/10980#pullrequestreview-455664216", "createdAt": "2020-07-27T10:32:42Z", "commit": {"oid": "37bd62ad05aa8aec273cfabe0351b6aab93022d1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NzMyMDY2", "url": "https://github.com/quarkusio/quarkus/pull/10980#pullrequestreview-455732066", "createdAt": "2020-07-27T12:26:34Z", "commit": {"oid": "37bd62ad05aa8aec273cfabe0351b6aab93022d1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjoyNjozNFrOG3gOnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxMjoyNzoyOFrOG3gQNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg1Mjg5Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You can add support for link:https://www.openapis.org/[OpenAPI] and link:https://swagger.io/tools/swagger-ui/[Swagger-UI] by using the `quarkus-smallrye-openapi` extension.\n          \n          \n            \n            You can add support for link:https://www.openapis.org/[OpenAPI] and link:https://swagger.io/tools/swagger-ui/[Swagger UI] by using the `quarkus-smallrye-openapi` extension.", "url": "https://github.com/quarkusio/quarkus/pull/10980#discussion_r460852893", "createdAt": "2020-07-27T12:26:34Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/reactive-routes.adoc", "diffHunk": "@@ -522,6 +522,171 @@ public class MyFilters {\n <1> The `RouteFilter#value()` defines the priority used to sort the filters - filters with higher priority are called first.\n <2> The filter is likely required to call the `next()` method to continue the chain.\n \n+== Adding OpenAPI and Swagger-UI\n+\n+You can add support for link:https://www.openapis.org/[OpenAPI] and link:https://swagger.io/tools/swagger-ui/[Swagger-UI] by using the `quarkus-smallrye-openapi` extension.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37bd62ad05aa8aec273cfabe0351b6aab93022d1"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg1Mjk0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            == Adding OpenAPI and Swagger-UI\n          \n          \n            \n            == Adding OpenAPI and Swagger UI", "url": "https://github.com/quarkusio/quarkus/pull/10980#discussion_r460852942", "createdAt": "2020-07-27T12:26:41Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/reactive-routes.adoc", "diffHunk": "@@ -522,6 +522,171 @@ public class MyFilters {\n <1> The `RouteFilter#value()` defines the priority used to sort the filters - filters with higher priority are called first.\n <2> The filter is likely required to call the `next()` method to continue the chain.\n \n+== Adding OpenAPI and Swagger-UI", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37bd62ad05aa8aec273cfabe0351b6aab93022d1"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDg1MzMwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Swagger UI is included by default when running in `Dev` or `Test` mode, and can optionally added to `Prod` mode.\n          \n          \n            \n            Swagger UI is included by default when running in `dev` or `test` mode, and can optionally added to `prod` mode.", "url": "https://github.com/quarkusio/quarkus/pull/10980#discussion_r460853303", "createdAt": "2020-07-27T12:27:28Z", "author": {"login": "gsmet"}, "path": "docs/src/main/asciidoc/reactive-routes.adoc", "diffHunk": "@@ -522,6 +522,171 @@ public class MyFilters {\n <1> The `RouteFilter#value()` defines the priority used to sort the filters - filters with higher priority are called first.\n <2> The filter is likely required to call the `next()` method to continue the chain.\n \n+== Adding OpenAPI and Swagger-UI\n+\n+You can add support for link:https://www.openapis.org/[OpenAPI] and link:https://swagger.io/tools/swagger-ui/[Swagger-UI] by using the `quarkus-smallrye-openapi` extension.\n+\n+Add the extension by running this command:\n+\n+[source,bash]\n+----\n+./mvnw quarkus:add-extension -Dextensions=\"io.quarkus:quarkus-smallrye-openapi\"\n+----\n+\n+This will add the following to your `pom.xml`:\n+\n+[source,xml]\n+----\n+<dependency>\n+    <groupId>io.quarkus</groupId>\n+    <artifactId>quarkus-smallrye-openapi</artifactId>\n+</dependency>\n+----\n+\n+This is enough to generate a basic OpenAPI schema document from your Vert.x Routes:\n+\n+[source,bash]\n+----\n+curl http://localhost:8080/openapi\n+----\n+\n+You will see the generated OpenAPI schema document:\n+\n+[source, yaml]\n+----\n+---\n+openapi: 3.0.3\n+info:\n+  title: Generated API\n+  version: \"1.0\"\n+paths:\n+  /greetings:\n+    get:\n+      responses:\n+        \"204\":\n+          description: No Content\n+  /hello:\n+    get:\n+      responses:\n+        \"204\":\n+          description: No Content\n+  /world:\n+    get:\n+      responses:\n+        \"200\":\n+          description: OK\n+          content:\n+            '*/*':\n+              schema:\n+                type: string\n+----\n+\n+Also see <<openapi-swaggerui.adoc,the OpenAPI Guide>>\n+\n+=== Adding MicroProfile OpenAPI Annotations\n+\n+You can use link:https://github.com/eclipse/microprofile-open-api[MicroProfile OpenAPI] to better document your schema, \n+example, adding header info, or specifying the return type on `void` methods might be usefull :\n+\n+[source, java]\n+----\n+@OpenAPIDefinition(<1>\n+    info = @Info(\n+        title=\"Greeting API\",\n+        version = \"1.0.1\",\n+        contact = @Contact(\n+            name = \"Greeting API Support\",\n+            url = \"http://exampleurl.com/contact\",\n+            email = \"techsupport@example.com\"),\n+        license = @License(\n+            name = \"Apache 2.0\",\n+            url = \"http://www.apache.org/licenses/LICENSE-2.0.html\"))\n+)\n+@ApplicationScoped\n+public class MyDeclarativeRoutes {\n+\n+    // neither path nor regex is set - match a path derived from the method name\n+    @Route(methods = HttpMethod.GET)\n+    @APIResponse(responseCode=\"200\", \n+            description=\"Say hello\", \n+            content=@Content(mediaType=\"application/json\", schema=@Schema(type=SchemaType.STRING)))<2>\n+    void hello(RoutingContext rc) {\n+        rc.response().end(\"hello\");\n+    }\n+    \n+    @Route(path = \"/world\") \n+    String helloWorld() {\n+        return \"Hello world!\";\n+    }\n+\n+    @Route(path = \"/greetings\", methods = HttpMethod.GET)\n+    @APIResponse(responseCode=\"200\", \n+            description=\"Greeting\", \n+            content=@Content(mediaType=\"application/json\", schema=@Schema(type=SchemaType.STRING)))\n+    void greetings(RoutingExchange ex) {\n+        ex.ok(\"hello \" + ex.getParam(\"name\").orElse(\"world\"));\n+    }\n+}\n+----\n+\n+<1> Header information about your API.\n+<2> Defining the response\n+\n+This will generate this OpenAPI schema:\n+\n+[source, yaml]\n+----\n+---\n+openapi: 3.0.3\n+info:\n+  title: Greeting API\n+  contact:\n+    name: Greeting API Support\n+    url: http://exampleurl.com/contact\n+    email: techsupport@example.com\n+  license:\n+    name: Apache 2.0\n+    url: http://www.apache.org/licenses/LICENSE-2.0.html\n+  version: 1.0.1\n+paths:\n+  /greetings:\n+    get:\n+      responses:\n+        \"200\":\n+          description: Greeting\n+          content:\n+            application/json:\n+              schema:\n+                type: string\n+  /hello:\n+    get:\n+      responses:\n+        \"200\":\n+          description: Say hello\n+          content:\n+            application/json:\n+              schema:\n+                type: string\n+  /world:\n+    get:\n+      responses:\n+        \"200\":\n+          description: OK\n+          content:\n+            '*/*':\n+              schema:\n+                type: string\n+----\n+\n+=== Using Swagger UI\n+\n+Swagger UI is included by default when running in `Dev` or `Test` mode, and can optionally added to `Prod` mode.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37bd62ad05aa8aec273cfabe0351b6aab93022d1"}, "originalPosition": 180}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36141f8563cb38fef743be3d36256d921e88d8bc", "author": {"user": {"login": "phillip-kruger", "name": "Phillip Kr\u00fcger"}}, "url": "https://github.com/quarkusio/quarkus/commit/36141f8563cb38fef743be3d36256d921e88d8bc", "committedDate": "2020-07-27T13:35:08Z", "message": "Adding OpenAPI in the Reactive Routes Guide\n\nSigned-off-by: Phillip Kruger <phillip.kruger@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NDAxMTY1", "url": "https://github.com/quarkusio/quarkus/pull/10980#pullrequestreview-456401165", "createdAt": "2020-07-28T08:12:26Z", "commit": {"oid": "36141f8563cb38fef743be3d36256d921e88d8bc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1143, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}