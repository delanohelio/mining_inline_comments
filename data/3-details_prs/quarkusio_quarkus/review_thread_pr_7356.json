{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NTY5Njgz", "number": 7356, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwOToxMDoyNFrODiEtkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNzozMTowNFrODjW1og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDU1Mzc4OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/openshift/deployment/src/main/resources/config-wrapper.vm", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwOToxMDoyNFrOFtKTLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwOToxMjoxNVrOFtKTlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5ODk4OQ==", "bodyText": "What is this file needed for?", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r382898989", "createdAt": "2020-02-22T09:10:24Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/openshift/deployment/src/main/resources/config-wrapper.vm", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.kubernetes.deployment;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c64f47daef0b977a8d3a2ea9715125b4a4eb723"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5OTA5NA==", "bodyText": "They are not needed and have been removed.", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r382899094", "createdAt": "2020-02-22T09:12:15Z", "author": {"login": "iocanel"}, "path": "extensions/kubernetes/openshift/deployment/src/main/resources/config-wrapper.vm", "diffHunk": "@@ -0,0 +1,15 @@\n+package io.quarkus.kubernetes.deployment;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5ODk4OQ=="}, "originalCommit": {"oid": "1c64f47daef0b977a8d3a2ea9715125b4a4eb723"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTMyMjQyOnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yM1QxMToyNzoyM1rOFtQLlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNToyNzozOVrOFtkumQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk5NTM1MQ==", "bodyText": "how does these three methods interact....feels like it will be nondeterministic on who \"wins\" ?", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r382995351", "createdAt": "2020-02-23T11:27:23Z", "author": {"login": "maxandersen"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -74,6 +75,33 @@\n \n     private static final String OUTPUT_ARTIFACT_FORMAT = \"%s%s.jar\";\n \n+    @BuildStep", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dd19ad520b9bda0219a2ed8131491b409cf1ab2"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzMzMTk5Mw==", "bodyText": "There is  not a race here.\nWe just produce build items,  based on the configuration properties that are found.", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r383331993", "createdAt": "2020-02-24T15:27:39Z", "author": {"login": "iocanel"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -74,6 +75,33 @@\n \n     private static final String OUTPUT_ARTIFACT_FORMAT = \"%s%s.jar\";\n \n+    @BuildStep", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjk5NTM1MQ=="}, "originalCommit": {"oid": "7dd19ad520b9bda0219a2ed8131491b409cf1ab2"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MzI2MjE0OnYy", "diffSide": "RIGHT", "path": "bom/runtime/pom.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMzo0ODozMVrOFthK8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMDozMToyN1rOFumN_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3MzcxMg==", "bodyText": "would this be better named as quarkus-openshift-s2i as we wouldn't have this if s2i wasn't in the picture and we could imagine more and more users using openshift without needing s2i at all....so maybe down the line there is something a bit more apropriate to be named quarkus-openshift ?", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r383273712", "createdAt": "2020-02-24T13:48:31Z", "author": {"login": "maxandersen"}, "path": "bom/runtime/pom.xml", "diffHunk": "@@ -733,6 +733,11 @@\n                 <artifactId>quarkus-kubernetes</artifactId>\n                 <version>${project.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-openshift</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7dd19ad520b9bda0219a2ed8131491b409cf1ab2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI4NDA3Mg==", "bodyText": "I am not a big fan of quarkus-openshift-s2i. Mostly, because it's not just about s2i but also to provide default properties for openshift e.g.quarkus.kubernetes.deploymenet-target etc. In the future we could move all the openshfit  related code, in this extension too (if there wasn't time constraints I would have done it already).", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r383284072", "createdAt": "2020-02-24T14:08:25Z", "author": {"login": "iocanel"}, "path": "bom/runtime/pom.xml", "diffHunk": "@@ -733,6 +733,11 @@\n                 <artifactId>quarkus-kubernetes</artifactId>\n                 <version>${project.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-openshift</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3MzcxMg=="}, "originalCommit": {"oid": "7dd19ad520b9bda0219a2ed8131491b409cf1ab2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI5MTk2OA==", "bodyText": "ack -makes sense. I guess question is if s2i.enbled=true  or s2i.enabled=false is the default then ?", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r383291968", "createdAt": "2020-02-24T14:22:37Z", "author": {"login": "maxandersen"}, "path": "bom/runtime/pom.xml", "diffHunk": "@@ -733,6 +733,11 @@\n                 <artifactId>quarkus-kubernetes</artifactId>\n                 <version>${project.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-openshift</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3MzcxMg=="}, "originalCommit": {"oid": "7dd19ad520b9bda0219a2ed8131491b409cf1ab2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQwNDk4OA==", "bodyText": "s2i.enabled=true by default.", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384404988", "createdAt": "2020-02-26T10:31:27Z", "author": {"login": "iocanel"}, "path": "bom/runtime/pom.xml", "diffHunk": "@@ -733,6 +733,11 @@\n                 <artifactId>quarkus-kubernetes</artifactId>\n                 <version>${project.version}</version>\n             </dependency>\n+            <dependency>\n+                <groupId>io.quarkus</groupId>\n+                <artifactId>quarkus-openshift</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzI3MzcxMg=="}, "originalCommit": {"oid": "7dd19ad520b9bda0219a2ed8131491b409cf1ab2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTk1OTY3OnYy", "diffSide": "RIGHT", "path": "integration-tests/infinispan-client/.gitignore", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo0ODoxNlrOFug_Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwODoxNTo0N1rOFuhpFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxOTMyNw==", "bodyText": "I assume this was added by accident?", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384319327", "createdAt": "2020-02-26T07:48:16Z", "author": {"login": "geoand"}, "path": "integration-tests/infinispan-client/.gitignore", "diffHunk": "@@ -0,0 +1 @@\n+/.apt_generated_tests/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6293e32458a165c6903de6c8df146ad495eb06a9"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMzMDAwNA==", "bodyText": "Yeap", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384330004", "createdAt": "2020-02-26T08:15:47Z", "author": {"login": "iocanel"}, "path": "integration-tests/infinispan-client/.gitignore", "diffHunk": "@@ -0,0 +1 @@\n+/.apt_generated_tests/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxOTMyNw=="}, "originalCommit": {"oid": "6293e32458a165c6903de6c8df146ad495eb06a9"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTk2MTY2OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo0OTowOVrOFuhAoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo0OTowOVrOFuhAoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMxOTY0OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //Hanlde custom s2i builder images\n          \n          \n            \n                    //Handle custom s2i builder images", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384319648", "createdAt": "2020-02-26T07:49:09Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesProcessor.java", "diffHunk": "@@ -374,7 +399,7 @@ private void applyBuildItems(Session session,\n         }\n \n         //Hanlde custom s2i builder images", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6293e32458a165c6903de6c8df146ad495eb06a9"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTk2NDE4OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1MDoxNVrOFuhCIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1MDoxNVrOFuhCIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMDAzNA==", "bodyText": "This doesn't seem to be used", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384320034", "createdAt": "2020-02-26T07:50:15Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfigUtil.java", "diffHunk": "@@ -24,13 +25,17 @@\n public class KubernetesConfigUtil {\n \n     private static final String DEKORATE_PREFIX = \"dekorate.\";\n+    private static final String QUARKUS_PREFIX = \"quarkus.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6293e32458a165c6903de6c8df146ad495eb06a9"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTk3MTQ0OnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/openshift/deployment/src/main/java/io/quarkus/openshift/deployment/Constants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1MzozMVrOFuhGhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1MzozMVrOFuhGhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMTE1Ng==", "bodyText": "Is this correct?", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384321156", "createdAt": "2020-02-26T07:53:31Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/openshift/deployment/src/main/java/io/quarkus/openshift/deployment/Constants.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package io.quarkus.openshift.deployment;\n+\n+public class Constants {\n+    static final String OPENSHIFT = \"openshift\";\n+    static final String DEPLOYMENT_CONFIG = \"openshift\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6293e32458a165c6903de6c8df146ad495eb06a9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTk3NTY0OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/openshift.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1NToxMlrOFuhI9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1NToxMlrOFuhI9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMTc4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This guide covers generating and deploying Openshift resources based on sane default and user supplied configuration.\n          \n          \n            \n            This guide covers generating and deploying Openshift resources based on sane defaults and user supplied configuration.", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384321783", "createdAt": "2020-02-26T07:55:12Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/openshift.adoc", "diffHunk": "@@ -0,0 +1,176 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Openshift extension\n+\n+include::./attributes.adoc[]\n+\n+This guide covers generating and deploying Openshift resources based on sane default and user supplied configuration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6293e32458a165c6903de6c8df146ad495eb06a9"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTk3Njk2OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/openshift.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1NTo0N1rOFuhJww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1NTo0N1rOFuhJww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMTk4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            extensions with sensible defaults so that its easier for the user to get started with Quarkus on Openshift.\n          \n          \n            \n            extensions with sensible defaults so that it's easier for the user to get started with Quarkus on Openshift.", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384321987", "createdAt": "2020-02-26T07:55:47Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/openshift.adoc", "diffHunk": "@@ -0,0 +1,176 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Openshift extension\n+\n+include::./attributes.adoc[]\n+\n+This guide covers generating and deploying Openshift resources based on sane default and user supplied configuration.\n+\n+\n+== Prerequisites\n+\n+To complete this guide, you need:\n+\n+* roughly 5 minutes\n+* an IDE\n+* JDK 1.8+ installed with `JAVA_HOME` configured appropriately\n+* Apache Maven 3.5.3+\n+* access to an Openshift or cluster (Minishift is a viable options)\n+\n+== Creating the Maven project\n+\n+First, we need a new project that contains the Openshift extension. This can be done using the following command:\n+\n+[source, subs=attributes+]\n+----\n+mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n+    -DprojectGroupId=org.acme \\\n+    -DprojectArtifactId=openshift-quickstart \\\n+    -DclassName=\"org.acme.rest.GreetingResource\" \\\n+    -Dpath=\"/greeting\" \\\n+    -Dextensions=\"openshift\"\n+\n+cd openshift-quickstart\n+----\n+\n+=== Openshift\n+\n+Quarkus offers the ability to automatically generate Openshift resources based on sane defaults and user supplied configuration.\n+The Openshift extension is actually a wrapper extension that brings together the link:kubernetes[kubernetes] and link:container-image-s2i[container-image-s2i]\n+extensions with sensible defaults so that its easier for the user to get started with Quarkus on Openshift.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6293e32458a165c6903de6c8df146ad495eb06a9"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTk4MDY5OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/openshift.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1NzoyNlrOFuhL_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1NzoyNlrOFuhL_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMjU1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Please, notice that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`.\n          \n          \n            \n            Please note that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`.", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384322559", "createdAt": "2020-02-26T07:57:26Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/openshift.adoc", "diffHunk": "@@ -0,0 +1,176 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Openshift extension\n+\n+include::./attributes.adoc[]\n+\n+This guide covers generating and deploying Openshift resources based on sane default and user supplied configuration.\n+\n+\n+== Prerequisites\n+\n+To complete this guide, you need:\n+\n+* roughly 5 minutes\n+* an IDE\n+* JDK 1.8+ installed with `JAVA_HOME` configured appropriately\n+* Apache Maven 3.5.3+\n+* access to an Openshift or cluster (Minishift is a viable options)\n+\n+== Creating the Maven project\n+\n+First, we need a new project that contains the Openshift extension. This can be done using the following command:\n+\n+[source, subs=attributes+]\n+----\n+mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n+    -DprojectGroupId=org.acme \\\n+    -DprojectArtifactId=openshift-quickstart \\\n+    -DclassName=\"org.acme.rest.GreetingResource\" \\\n+    -Dpath=\"/greeting\" \\\n+    -Dextensions=\"openshift\"\n+\n+cd openshift-quickstart\n+----\n+\n+=== Openshift\n+\n+Quarkus offers the ability to automatically generate Openshift resources based on sane defaults and user supplied configuration.\n+The Openshift extension is actually a wrapper extension that brings together the link:kubernetes[kubernetes] and link:container-image-s2i[container-image-s2i]\n+extensions with sensible defaults so that its easier for the user to get started with Quarkus on Openshift.\n+\n+When we added the `openshift` extension to the command line invocation above, the following dependency was added to the `pom.xml`\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-openshift</artifactId>\n+    </dependency>\n+----\n+\n+By adding this dependency, we now have the ability to configure the Openshift resource generation and application using the usual `application.properties` approach that Quarkus provides.\n+The configuration items that are available can be found in: `io.quarkus.kubernetes.deployment.OpenshiftConfig` class.\n+Furthermore, the items provided by `io.quarkus.deployment.ApplicationConfig` affect the Openshift resources.\n+\n+=== Building\n+\n+Building is handled by the link:container-image#s2i[container-image-s2i] extension. To trigger a build:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.container-image.build=true\n+----\n+\n+The command above will trigger an s2i binary build.\n+\n+=== Deploying\n+\n+To trigger a deployment:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.kubernetes.deploy=true\n+----\n+\n+The command above will trigger a container image build and will apply the generated Openshift resources, right after.\n+The generated resources are using Openshift's `DeploymentConfig` that is configured to automatically trigger a redeployment when a change in the `ImageStream` is noticed.\n+In other words, any container image build after the inital deployment will automatically trigger redeployment, without the need to delete, update or re-apply the generated resources.\n+\n+=== Customizing\n+\n+All available customization options are available in the link:kubenretes#openshift[Openshift configuration options].\n+\n+Some examples are provided in the sections below:\n+\n+==== Labels\n+\n+To add a label in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.labels.foo=bar\n+----\n+\n+==== Annotations\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.annotations.foo=bar\n+----\n+\n+==== Environment variables\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.value=foobar\n+----\n+\n+The command above will add `MY_ENV_VAR=foobar` as an environment variable.\n+Please, notice that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6293e32458a165c6903de6c8df146ad495eb06a9"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTk4MTM4OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/openshift.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1Nzo0N1rOFuhMdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1Nzo0N1rOFuhMdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMjY3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            You may also noticed that in contrast to labels, and annotations for environment variables you don't just use a key=value approach.\n          \n          \n            \n            You may also have noticed that in contrast to labels and annotations for environment variables you don't just use a key=value approach.", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384322676", "createdAt": "2020-02-26T07:57:47Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/openshift.adoc", "diffHunk": "@@ -0,0 +1,176 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Openshift extension\n+\n+include::./attributes.adoc[]\n+\n+This guide covers generating and deploying Openshift resources based on sane default and user supplied configuration.\n+\n+\n+== Prerequisites\n+\n+To complete this guide, you need:\n+\n+* roughly 5 minutes\n+* an IDE\n+* JDK 1.8+ installed with `JAVA_HOME` configured appropriately\n+* Apache Maven 3.5.3+\n+* access to an Openshift or cluster (Minishift is a viable options)\n+\n+== Creating the Maven project\n+\n+First, we need a new project that contains the Openshift extension. This can be done using the following command:\n+\n+[source, subs=attributes+]\n+----\n+mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n+    -DprojectGroupId=org.acme \\\n+    -DprojectArtifactId=openshift-quickstart \\\n+    -DclassName=\"org.acme.rest.GreetingResource\" \\\n+    -Dpath=\"/greeting\" \\\n+    -Dextensions=\"openshift\"\n+\n+cd openshift-quickstart\n+----\n+\n+=== Openshift\n+\n+Quarkus offers the ability to automatically generate Openshift resources based on sane defaults and user supplied configuration.\n+The Openshift extension is actually a wrapper extension that brings together the link:kubernetes[kubernetes] and link:container-image-s2i[container-image-s2i]\n+extensions with sensible defaults so that its easier for the user to get started with Quarkus on Openshift.\n+\n+When we added the `openshift` extension to the command line invocation above, the following dependency was added to the `pom.xml`\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-openshift</artifactId>\n+    </dependency>\n+----\n+\n+By adding this dependency, we now have the ability to configure the Openshift resource generation and application using the usual `application.properties` approach that Quarkus provides.\n+The configuration items that are available can be found in: `io.quarkus.kubernetes.deployment.OpenshiftConfig` class.\n+Furthermore, the items provided by `io.quarkus.deployment.ApplicationConfig` affect the Openshift resources.\n+\n+=== Building\n+\n+Building is handled by the link:container-image#s2i[container-image-s2i] extension. To trigger a build:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.container-image.build=true\n+----\n+\n+The command above will trigger an s2i binary build.\n+\n+=== Deploying\n+\n+To trigger a deployment:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.kubernetes.deploy=true\n+----\n+\n+The command above will trigger a container image build and will apply the generated Openshift resources, right after.\n+The generated resources are using Openshift's `DeploymentConfig` that is configured to automatically trigger a redeployment when a change in the `ImageStream` is noticed.\n+In other words, any container image build after the inital deployment will automatically trigger redeployment, without the need to delete, update or re-apply the generated resources.\n+\n+=== Customizing\n+\n+All available customization options are available in the link:kubenretes#openshift[Openshift configuration options].\n+\n+Some examples are provided in the sections below:\n+\n+==== Labels\n+\n+To add a label in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.labels.foo=bar\n+----\n+\n+==== Annotations\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.annotations.foo=bar\n+----\n+\n+==== Environment variables\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.value=foobar\n+----\n+\n+The command above will add `MY_ENV_VAR=foobar` as an environment variable.\n+Please, notice that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`.\n+\n+You may also noticed that in contrast to labels, and annotations for environment variables you don't just use a key=value approach.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6293e32458a165c6903de6c8df146ad495eb06a9"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTk4MjI5OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/openshift.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1ODowOVrOFuhM_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1ODowOVrOFuhM_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMjgxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            That is because for environment variables there are additonal options rather than just value.\n          \n          \n            \n            That is because for environment variables there are additional options rather than just defining value.", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384322813", "createdAt": "2020-02-26T07:58:09Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/openshift.adoc", "diffHunk": "@@ -0,0 +1,176 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Openshift extension\n+\n+include::./attributes.adoc[]\n+\n+This guide covers generating and deploying Openshift resources based on sane default and user supplied configuration.\n+\n+\n+== Prerequisites\n+\n+To complete this guide, you need:\n+\n+* roughly 5 minutes\n+* an IDE\n+* JDK 1.8+ installed with `JAVA_HOME` configured appropriately\n+* Apache Maven 3.5.3+\n+* access to an Openshift or cluster (Minishift is a viable options)\n+\n+== Creating the Maven project\n+\n+First, we need a new project that contains the Openshift extension. This can be done using the following command:\n+\n+[source, subs=attributes+]\n+----\n+mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n+    -DprojectGroupId=org.acme \\\n+    -DprojectArtifactId=openshift-quickstart \\\n+    -DclassName=\"org.acme.rest.GreetingResource\" \\\n+    -Dpath=\"/greeting\" \\\n+    -Dextensions=\"openshift\"\n+\n+cd openshift-quickstart\n+----\n+\n+=== Openshift\n+\n+Quarkus offers the ability to automatically generate Openshift resources based on sane defaults and user supplied configuration.\n+The Openshift extension is actually a wrapper extension that brings together the link:kubernetes[kubernetes] and link:container-image-s2i[container-image-s2i]\n+extensions with sensible defaults so that its easier for the user to get started with Quarkus on Openshift.\n+\n+When we added the `openshift` extension to the command line invocation above, the following dependency was added to the `pom.xml`\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-openshift</artifactId>\n+    </dependency>\n+----\n+\n+By adding this dependency, we now have the ability to configure the Openshift resource generation and application using the usual `application.properties` approach that Quarkus provides.\n+The configuration items that are available can be found in: `io.quarkus.kubernetes.deployment.OpenshiftConfig` class.\n+Furthermore, the items provided by `io.quarkus.deployment.ApplicationConfig` affect the Openshift resources.\n+\n+=== Building\n+\n+Building is handled by the link:container-image#s2i[container-image-s2i] extension. To trigger a build:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.container-image.build=true\n+----\n+\n+The command above will trigger an s2i binary build.\n+\n+=== Deploying\n+\n+To trigger a deployment:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.kubernetes.deploy=true\n+----\n+\n+The command above will trigger a container image build and will apply the generated Openshift resources, right after.\n+The generated resources are using Openshift's `DeploymentConfig` that is configured to automatically trigger a redeployment when a change in the `ImageStream` is noticed.\n+In other words, any container image build after the inital deployment will automatically trigger redeployment, without the need to delete, update or re-apply the generated resources.\n+\n+=== Customizing\n+\n+All available customization options are available in the link:kubenretes#openshift[Openshift configuration options].\n+\n+Some examples are provided in the sections below:\n+\n+==== Labels\n+\n+To add a label in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.labels.foo=bar\n+----\n+\n+==== Annotations\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.annotations.foo=bar\n+----\n+\n+==== Environment variables\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.value=foobar\n+----\n+\n+The command above will add `MY_ENV_VAR=foobar` as an environment variable.\n+Please, notice that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`.\n+\n+You may also noticed that in contrast to labels, and annotations for environment variables you don't just use a key=value approach.\n+That is because for environment variables there are additonal options rather than just value.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6293e32458a165c6903de6c8df146ad495eb06a9"}, "originalPosition": 120}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTk4MzM2OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/openshift.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1ODozMlrOFuhNlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1ODozMlrOFuhNlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMjk2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To add all key value pairs of a `Secret` as envrionment variables:\n          \n          \n            \n            To add all key value pairs of a `Secret` as environment variables:", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384322966", "createdAt": "2020-02-26T07:58:32Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/openshift.adoc", "diffHunk": "@@ -0,0 +1,176 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Openshift extension\n+\n+include::./attributes.adoc[]\n+\n+This guide covers generating and deploying Openshift resources based on sane default and user supplied configuration.\n+\n+\n+== Prerequisites\n+\n+To complete this guide, you need:\n+\n+* roughly 5 minutes\n+* an IDE\n+* JDK 1.8+ installed with `JAVA_HOME` configured appropriately\n+* Apache Maven 3.5.3+\n+* access to an Openshift or cluster (Minishift is a viable options)\n+\n+== Creating the Maven project\n+\n+First, we need a new project that contains the Openshift extension. This can be done using the following command:\n+\n+[source, subs=attributes+]\n+----\n+mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n+    -DprojectGroupId=org.acme \\\n+    -DprojectArtifactId=openshift-quickstart \\\n+    -DclassName=\"org.acme.rest.GreetingResource\" \\\n+    -Dpath=\"/greeting\" \\\n+    -Dextensions=\"openshift\"\n+\n+cd openshift-quickstart\n+----\n+\n+=== Openshift\n+\n+Quarkus offers the ability to automatically generate Openshift resources based on sane defaults and user supplied configuration.\n+The Openshift extension is actually a wrapper extension that brings together the link:kubernetes[kubernetes] and link:container-image-s2i[container-image-s2i]\n+extensions with sensible defaults so that its easier for the user to get started with Quarkus on Openshift.\n+\n+When we added the `openshift` extension to the command line invocation above, the following dependency was added to the `pom.xml`\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-openshift</artifactId>\n+    </dependency>\n+----\n+\n+By adding this dependency, we now have the ability to configure the Openshift resource generation and application using the usual `application.properties` approach that Quarkus provides.\n+The configuration items that are available can be found in: `io.quarkus.kubernetes.deployment.OpenshiftConfig` class.\n+Furthermore, the items provided by `io.quarkus.deployment.ApplicationConfig` affect the Openshift resources.\n+\n+=== Building\n+\n+Building is handled by the link:container-image#s2i[container-image-s2i] extension. To trigger a build:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.container-image.build=true\n+----\n+\n+The command above will trigger an s2i binary build.\n+\n+=== Deploying\n+\n+To trigger a deployment:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.kubernetes.deploy=true\n+----\n+\n+The command above will trigger a container image build and will apply the generated Openshift resources, right after.\n+The generated resources are using Openshift's `DeploymentConfig` that is configured to automatically trigger a redeployment when a change in the `ImageStream` is noticed.\n+In other words, any container image build after the inital deployment will automatically trigger redeployment, without the need to delete, update or re-apply the generated resources.\n+\n+=== Customizing\n+\n+All available customization options are available in the link:kubenretes#openshift[Openshift configuration options].\n+\n+Some examples are provided in the sections below:\n+\n+==== Labels\n+\n+To add a label in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.labels.foo=bar\n+----\n+\n+==== Annotations\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.annotations.foo=bar\n+----\n+\n+==== Environment variables\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.value=foobar\n+----\n+\n+The command above will add `MY_ENV_VAR=foobar` as an environment variable.\n+Please, notice that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`.\n+\n+You may also noticed that in contrast to labels, and annotations for environment variables you don't just use a key=value approach.\n+That is because for environment variables there are additonal options rather than just value.\n+\n+===== Environment variables from Secret\n+\n+To add all key value pairs of a `Secret` as envrionment variables:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6293e32458a165c6903de6c8df146ad495eb06a9"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTk4NDA1OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/openshift.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1ODo0NlrOFuhN-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1ODo0NlrOFuhN-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMzA2Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To add all key value pairs of a `ConfigMap` as envrionment variables:\n          \n          \n            \n            To add all key value pairs of a `ConfigMap` as environment variables:", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384323066", "createdAt": "2020-02-26T07:58:46Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/openshift.adoc", "diffHunk": "@@ -0,0 +1,176 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Openshift extension\n+\n+include::./attributes.adoc[]\n+\n+This guide covers generating and deploying Openshift resources based on sane default and user supplied configuration.\n+\n+\n+== Prerequisites\n+\n+To complete this guide, you need:\n+\n+* roughly 5 minutes\n+* an IDE\n+* JDK 1.8+ installed with `JAVA_HOME` configured appropriately\n+* Apache Maven 3.5.3+\n+* access to an Openshift or cluster (Minishift is a viable options)\n+\n+== Creating the Maven project\n+\n+First, we need a new project that contains the Openshift extension. This can be done using the following command:\n+\n+[source, subs=attributes+]\n+----\n+mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n+    -DprojectGroupId=org.acme \\\n+    -DprojectArtifactId=openshift-quickstart \\\n+    -DclassName=\"org.acme.rest.GreetingResource\" \\\n+    -Dpath=\"/greeting\" \\\n+    -Dextensions=\"openshift\"\n+\n+cd openshift-quickstart\n+----\n+\n+=== Openshift\n+\n+Quarkus offers the ability to automatically generate Openshift resources based on sane defaults and user supplied configuration.\n+The Openshift extension is actually a wrapper extension that brings together the link:kubernetes[kubernetes] and link:container-image-s2i[container-image-s2i]\n+extensions with sensible defaults so that its easier for the user to get started with Quarkus on Openshift.\n+\n+When we added the `openshift` extension to the command line invocation above, the following dependency was added to the `pom.xml`\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-openshift</artifactId>\n+    </dependency>\n+----\n+\n+By adding this dependency, we now have the ability to configure the Openshift resource generation and application using the usual `application.properties` approach that Quarkus provides.\n+The configuration items that are available can be found in: `io.quarkus.kubernetes.deployment.OpenshiftConfig` class.\n+Furthermore, the items provided by `io.quarkus.deployment.ApplicationConfig` affect the Openshift resources.\n+\n+=== Building\n+\n+Building is handled by the link:container-image#s2i[container-image-s2i] extension. To trigger a build:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.container-image.build=true\n+----\n+\n+The command above will trigger an s2i binary build.\n+\n+=== Deploying\n+\n+To trigger a deployment:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.kubernetes.deploy=true\n+----\n+\n+The command above will trigger a container image build and will apply the generated Openshift resources, right after.\n+The generated resources are using Openshift's `DeploymentConfig` that is configured to automatically trigger a redeployment when a change in the `ImageStream` is noticed.\n+In other words, any container image build after the inital deployment will automatically trigger redeployment, without the need to delete, update or re-apply the generated resources.\n+\n+=== Customizing\n+\n+All available customization options are available in the link:kubenretes#openshift[Openshift configuration options].\n+\n+Some examples are provided in the sections below:\n+\n+==== Labels\n+\n+To add a label in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.labels.foo=bar\n+----\n+\n+==== Annotations\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.annotations.foo=bar\n+----\n+\n+==== Environment variables\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.value=foobar\n+----\n+\n+The command above will add `MY_ENV_VAR=foobar` as an environment variable.\n+Please, notice that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`.\n+\n+You may also noticed that in contrast to labels, and annotations for environment variables you don't just use a key=value approach.\n+That is because for environment variables there are additonal options rather than just value.\n+\n+===== Environment variables from Secret\n+\n+To add all key value pairs of a `Secret` as envrionment variables:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.secret=my-secret\n+----\n+\n+===== Environment variables from ConfigMap\n+\n+To add all key value pairs of a `ConfigMap` as envrionment variables:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6293e32458a165c6903de6c8df146ad495eb06a9"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3OTk4NDY2OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/openshift.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1OTowMFrOFuhOWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwNzo1OTowMFrOFuhOWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDMyMzE2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To expose a route for the Quarkus application:\n          \n          \n            \n            To expose a `Route` for the Quarkus application:", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384323162", "createdAt": "2020-02-26T07:59:00Z", "author": {"login": "geoand"}, "path": "docs/src/main/asciidoc/openshift.adoc", "diffHunk": "@@ -0,0 +1,176 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Openshift extension\n+\n+include::./attributes.adoc[]\n+\n+This guide covers generating and deploying Openshift resources based on sane default and user supplied configuration.\n+\n+\n+== Prerequisites\n+\n+To complete this guide, you need:\n+\n+* roughly 5 minutes\n+* an IDE\n+* JDK 1.8+ installed with `JAVA_HOME` configured appropriately\n+* Apache Maven 3.5.3+\n+* access to an Openshift or cluster (Minishift is a viable options)\n+\n+== Creating the Maven project\n+\n+First, we need a new project that contains the Openshift extension. This can be done using the following command:\n+\n+[source, subs=attributes+]\n+----\n+mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n+    -DprojectGroupId=org.acme \\\n+    -DprojectArtifactId=openshift-quickstart \\\n+    -DclassName=\"org.acme.rest.GreetingResource\" \\\n+    -Dpath=\"/greeting\" \\\n+    -Dextensions=\"openshift\"\n+\n+cd openshift-quickstart\n+----\n+\n+=== Openshift\n+\n+Quarkus offers the ability to automatically generate Openshift resources based on sane defaults and user supplied configuration.\n+The Openshift extension is actually a wrapper extension that brings together the link:kubernetes[kubernetes] and link:container-image-s2i[container-image-s2i]\n+extensions with sensible defaults so that its easier for the user to get started with Quarkus on Openshift.\n+\n+When we added the `openshift` extension to the command line invocation above, the following dependency was added to the `pom.xml`\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-openshift</artifactId>\n+    </dependency>\n+----\n+\n+By adding this dependency, we now have the ability to configure the Openshift resource generation and application using the usual `application.properties` approach that Quarkus provides.\n+The configuration items that are available can be found in: `io.quarkus.kubernetes.deployment.OpenshiftConfig` class.\n+Furthermore, the items provided by `io.quarkus.deployment.ApplicationConfig` affect the Openshift resources.\n+\n+=== Building\n+\n+Building is handled by the link:container-image#s2i[container-image-s2i] extension. To trigger a build:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.container-image.build=true\n+----\n+\n+The command above will trigger an s2i binary build.\n+\n+=== Deploying\n+\n+To trigger a deployment:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.kubernetes.deploy=true\n+----\n+\n+The command above will trigger a container image build and will apply the generated Openshift resources, right after.\n+The generated resources are using Openshift's `DeploymentConfig` that is configured to automatically trigger a redeployment when a change in the `ImageStream` is noticed.\n+In other words, any container image build after the inital deployment will automatically trigger redeployment, without the need to delete, update or re-apply the generated resources.\n+\n+=== Customizing\n+\n+All available customization options are available in the link:kubenretes#openshift[Openshift configuration options].\n+\n+Some examples are provided in the sections below:\n+\n+==== Labels\n+\n+To add a label in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.labels.foo=bar\n+----\n+\n+==== Annotations\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.annotations.foo=bar\n+----\n+\n+==== Environment variables\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.value=foobar\n+----\n+\n+The command above will add `MY_ENV_VAR=foobar` as an environment variable.\n+Please, notice that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`.\n+\n+You may also noticed that in contrast to labels, and annotations for environment variables you don't just use a key=value approach.\n+That is because for environment variables there are additonal options rather than just value.\n+\n+===== Environment variables from Secret\n+\n+To add all key value pairs of a `Secret` as envrionment variables:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.secret=my-secret\n+----\n+\n+===== Environment variables from ConfigMap\n+\n+To add all key value pairs of a `ConfigMap` as envrionment variables:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.configmap=my-secret\n+----\n+\n+==== Exposing Routes\n+\n+To expose a route for the Quarkus application:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6293e32458a165c6903de6c8df146ad495eb06a9"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDUzNjA5OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/openshift.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMDozOTo1N1rOFumgIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMToyMToyN1rOFun0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQwOTYzMw==", "bodyText": "should we add a:\nTIP: You do not need to always put these in application.properties you can also pass it as a command line argument: -Dquarkus.openshift.expose=true", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384409633", "createdAt": "2020-02-26T10:39:57Z", "author": {"login": "maxandersen"}, "path": "docs/src/main/asciidoc/openshift.adoc", "diffHunk": "@@ -0,0 +1,176 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Openshift extension\n+\n+include::./attributes.adoc[]\n+\n+This guide covers generating and deploying Openshift resources based on sane default and user supplied configuration.\n+\n+\n+== Prerequisites\n+\n+To complete this guide, you need:\n+\n+* roughly 5 minutes\n+* an IDE\n+* JDK 1.8+ installed with `JAVA_HOME` configured appropriately\n+* Apache Maven 3.5.3+\n+* access to an Openshift or cluster (Minishift is a viable options)\n+\n+== Creating the Maven project\n+\n+First, we need a new project that contains the Openshift extension. This can be done using the following command:\n+\n+[source, subs=attributes+]\n+----\n+mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n+    -DprojectGroupId=org.acme \\\n+    -DprojectArtifactId=openshift-quickstart \\\n+    -DclassName=\"org.acme.rest.GreetingResource\" \\\n+    -Dpath=\"/greeting\" \\\n+    -Dextensions=\"openshift\"\n+\n+cd openshift-quickstart\n+----\n+\n+=== Openshift\n+\n+Quarkus offers the ability to automatically generate Openshift resources based on sane default and user supplied configuration.\n+The Openshift extension is actually a wrapper extension that brings together the link:kubernetes[kubernetes] and link:container-image-s2i[container-image-s2i]\n+extensions with sensible defaults so that it's easier for the user to get started with Quarkus on Openshift.\n+\n+When we added the `openshift` extension to the command line invocation above, the following dependency was added to the `pom.xml`\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-openshift</artifactId>\n+    </dependency>\n+----\n+\n+By adding this dependency, we now have the ability to configure the Openshift resource generation and application using the usual `application.properties` approach that Quarkus provides.\n+The configuration items that are available can be found in: `io.quarkus.kubernetes.deployment.OpenshiftConfig` class.\n+Furthermore, the items provided by `io.quarkus.deployment.ApplicationConfig` affect the Openshift resources.\n+\n+=== Building\n+\n+Building is handled by the link:container-image#s2i[container-image-s2i] extension. To trigger a build:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.container-image.build=true\n+----\n+\n+The command above will trigger an s2i binary build.\n+\n+=== Deploying\n+\n+To trigger a deployment:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.kubernetes.deploy=true\n+----\n+\n+The command above will trigger a container image build and will apply the generated Openshift resources, right after.\n+The generated resources are using Openshift's `DeploymentConfig` that is configured to automatically trigger a redeployment when a change in the `ImageStream` is noticed.\n+In other words, any container image build after the inital deployment will automatically trigger redeployment, without the need to delete, update or re-apply the generated resources.\n+\n+=== Customizing\n+\n+All available customization options are available in the link:kubenretes#openshift[Openshift configuration options].\n+\n+Some examples are provided in the sections below:\n+\n+==== Labels\n+\n+To add a label in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.labels.foo=bar\n+----\n+\n+==== Annotations\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.annotations.foo=bar\n+----\n+\n+==== Environment variables\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.value=foobar\n+----\n+\n+The command above will add `MY_ENV_VAR=foobar` as an environment variable.\n+Please note that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`.\n+\n+You may also noticed that in contrast to labels, and annotations for environment variables you don't just use a key=value approach.\n+That is because for environment variables there are additional options rather than just value.\n+\n+===== Environment variables from Secret\n+\n+To add all key value pairs of a `Secret` as environment variables:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.secret=my-secret\n+----\n+\n+===== Environment variables from ConfigMap\n+\n+To add all key value pairs of a `ConfigMap` as environment variables:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.configmap=my-secret\n+----\n+\n+==== Exposing Routes\n+\n+To expose a `Route` for the Quarkus application:\n+\n+[source]\n+----\n+quarkus.openshift.expose=true\n+----", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0947b8daea619da642909046acaaa7aac48833ca"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQzMTE1NA==", "bodyText": "Agree! Let me add that.", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384431154", "createdAt": "2020-02-26T11:21:27Z", "author": {"login": "iocanel"}, "path": "docs/src/main/asciidoc/openshift.adoc", "diffHunk": "@@ -0,0 +1,176 @@\n+////\n+This guide is maintained in the main Quarkus repository\n+and pull requests should be submitted there:\n+https://github.com/quarkusio/quarkus/tree/master/docs/src/main/asciidoc\n+////\n+= Quarkus - Openshift extension\n+\n+include::./attributes.adoc[]\n+\n+This guide covers generating and deploying Openshift resources based on sane default and user supplied configuration.\n+\n+\n+== Prerequisites\n+\n+To complete this guide, you need:\n+\n+* roughly 5 minutes\n+* an IDE\n+* JDK 1.8+ installed with `JAVA_HOME` configured appropriately\n+* Apache Maven 3.5.3+\n+* access to an Openshift or cluster (Minishift is a viable options)\n+\n+== Creating the Maven project\n+\n+First, we need a new project that contains the Openshift extension. This can be done using the following command:\n+\n+[source, subs=attributes+]\n+----\n+mvn io.quarkus:quarkus-maven-plugin:{quarkus-version}:create \\\n+    -DprojectGroupId=org.acme \\\n+    -DprojectArtifactId=openshift-quickstart \\\n+    -DclassName=\"org.acme.rest.GreetingResource\" \\\n+    -Dpath=\"/greeting\" \\\n+    -Dextensions=\"openshift\"\n+\n+cd openshift-quickstart\n+----\n+\n+=== Openshift\n+\n+Quarkus offers the ability to automatically generate Openshift resources based on sane default and user supplied configuration.\n+The Openshift extension is actually a wrapper extension that brings together the link:kubernetes[kubernetes] and link:container-image-s2i[container-image-s2i]\n+extensions with sensible defaults so that it's easier for the user to get started with Quarkus on Openshift.\n+\n+When we added the `openshift` extension to the command line invocation above, the following dependency was added to the `pom.xml`\n+\n+[source,xml]\n+----\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-openshift</artifactId>\n+    </dependency>\n+----\n+\n+By adding this dependency, we now have the ability to configure the Openshift resource generation and application using the usual `application.properties` approach that Quarkus provides.\n+The configuration items that are available can be found in: `io.quarkus.kubernetes.deployment.OpenshiftConfig` class.\n+Furthermore, the items provided by `io.quarkus.deployment.ApplicationConfig` affect the Openshift resources.\n+\n+=== Building\n+\n+Building is handled by the link:container-image#s2i[container-image-s2i] extension. To trigger a build:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.container-image.build=true\n+----\n+\n+The command above will trigger an s2i binary build.\n+\n+=== Deploying\n+\n+To trigger a deployment:\n+\n+[source, subs=attributes+]\n+----\n+mvn clean package -Dquarkus.kubernetes.deploy=true\n+----\n+\n+The command above will trigger a container image build and will apply the generated Openshift resources, right after.\n+The generated resources are using Openshift's `DeploymentConfig` that is configured to automatically trigger a redeployment when a change in the `ImageStream` is noticed.\n+In other words, any container image build after the inital deployment will automatically trigger redeployment, without the need to delete, update or re-apply the generated resources.\n+\n+=== Customizing\n+\n+All available customization options are available in the link:kubenretes#openshift[Openshift configuration options].\n+\n+Some examples are provided in the sections below:\n+\n+==== Labels\n+\n+To add a label in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.labels.foo=bar\n+----\n+\n+==== Annotations\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.annotations.foo=bar\n+----\n+\n+==== Environment variables\n+\n+To add an annotation in the generated resources:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.value=foobar\n+----\n+\n+The command above will add `MY_ENV_VAR=foobar` as an environment variable.\n+Please note that the key `my-env-var` will be converted to uppercase and dashes will be replaced by underscores resulting in `MY_ENV_VAR`.\n+\n+You may also noticed that in contrast to labels, and annotations for environment variables you don't just use a key=value approach.\n+That is because for environment variables there are additional options rather than just value.\n+\n+===== Environment variables from Secret\n+\n+To add all key value pairs of a `Secret` as environment variables:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.secret=my-secret\n+----\n+\n+===== Environment variables from ConfigMap\n+\n+To add all key value pairs of a `ConfigMap` as environment variables:\n+\n+[source]\n+----\n+quarkus.openshift.env-vars.my-env-var.configmap=my-secret\n+----\n+\n+==== Exposing Routes\n+\n+To expose a `Route` for the Quarkus application:\n+\n+[source]\n+----\n+quarkus.openshift.expose=true\n+----", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQwOTYzMw=="}, "originalCommit": {"oid": "0947b8daea619da642909046acaaa7aac48833ca"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDAwOTMwOnYy", "diffSide": "RIGHT", "path": "extensions/kubernetes/vanilla/runtime/src/main/resources/META-INF/quarkus-extension.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNzozMTowNFrOFvHpdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwNzozMzoyNFrOFvHsWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk1MjY5NQ==", "bodyText": "this metadata looks wrong - this is for openshift not kubernetes?", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384952695", "createdAt": "2020-02-27T07:31:04Z", "author": {"login": "maxandersen"}, "path": "extensions/kubernetes/vanilla/runtime/src/main/resources/META-INF/quarkus-extension.yaml", "diffHunk": "@@ -0,0 +1,9 @@\n+---\n+name: \"Openshift\"\n+metadata:\n+  keywords:\n+  - \"openshift\"\n+  guide: \"https://quarkus.io/guides/openshift\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "623f3f96afb82cd25064d8096f3550fdfed2491b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk1MzQzMw==", "bodyText": "Yup, I'll fix it", "url": "https://github.com/quarkusio/quarkus/pull/7356#discussion_r384953433", "createdAt": "2020-02-27T07:33:24Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/runtime/src/main/resources/META-INF/quarkus-extension.yaml", "diffHunk": "@@ -0,0 +1,9 @@\n+---\n+name: \"Openshift\"\n+metadata:\n+  keywords:\n+  - \"openshift\"\n+  guide: \"https://quarkus.io/guides/openshift\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk1MjY5NQ=="}, "originalCommit": {"oid": "623f3f96afb82cd25064d8096f3550fdfed2491b"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 156, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}