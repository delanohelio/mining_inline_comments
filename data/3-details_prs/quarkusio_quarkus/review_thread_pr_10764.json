{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5NjI2NTA3", "number": 10764, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxODowNDowNFrOEOzEUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxODowNDowNFrOEOzEUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzOTUyMjEwOnYy", "diffSide": "RIGHT", "path": "extensions/smallrye-graphql/deployment/src/main/java/io/quarkus/smallrye/graphql/deployment/SmallRyeGraphQLProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxODowNDowNFrOGyJvcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwOTo0MTo0N1rOGyjRkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI0MTU4NQ==", "bodyText": "Would it be hard to add a test for this feature?", "url": "https://github.com/quarkusio/quarkus/pull/10764#discussion_r455241585", "createdAt": "2020-07-15T18:04:04Z", "author": {"login": "gsmet"}, "path": "extensions/smallrye-graphql/deployment/src/main/java/io/quarkus/smallrye/graphql/deployment/SmallRyeGraphQLProcessor.java", "diffHunk": "@@ -129,6 +131,15 @@ void registerNativeImageResources(BuildProducer<ServiceProviderBuildItem> servic\n                 lookupService);\n         serviceProvider.produce(\n                 new ServiceProviderBuildItem(LookupService.class.getName(), lookupImplementations.toArray(new String[0])));\n+\n+        // Schema Extension Service (We use the one from the CDI Module)\n+        String schemaExtensionService = SPI_PATH + SchemaBuildingExtensionService.class.getName();\n+        Set<String> schemaExtensionImplementations = ServiceUtil.classNamesNamedIn(\n+                Thread.currentThread().getContextClassLoader(),\n+                schemaExtensionService);\n+        serviceProvider.produce(\n+                new ServiceProviderBuildItem(SchemaBuildingExtensionService.class.getName(),\n+                        schemaExtensionImplementations.toArray(new String[0])));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63da5afca4db8ab924cbc0abb1cdd788f286beba"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI0ODc4NQ==", "bodyText": "Good idea. Let me look into this.", "url": "https://github.com/quarkusio/quarkus/pull/10764#discussion_r455248785", "createdAt": "2020-07-15T18:15:55Z", "author": {"login": "phillip-kruger"}, "path": "extensions/smallrye-graphql/deployment/src/main/java/io/quarkus/smallrye/graphql/deployment/SmallRyeGraphQLProcessor.java", "diffHunk": "@@ -129,6 +131,15 @@ void registerNativeImageResources(BuildProducer<ServiceProviderBuildItem> servic\n                 lookupService);\n         serviceProvider.produce(\n                 new ServiceProviderBuildItem(LookupService.class.getName(), lookupImplementations.toArray(new String[0])));\n+\n+        // Schema Extension Service (We use the one from the CDI Module)\n+        String schemaExtensionService = SPI_PATH + SchemaBuildingExtensionService.class.getName();\n+        Set<String> schemaExtensionImplementations = ServiceUtil.classNamesNamedIn(\n+                Thread.currentThread().getContextClassLoader(),\n+                schemaExtensionService);\n+        serviceProvider.produce(\n+                new ServiceProviderBuildItem(SchemaBuildingExtensionService.class.getName(),\n+                        schemaExtensionImplementations.toArray(new String[0])));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI0MTU4NQ=="}, "originalCommit": {"oid": "63da5afca4db8ab924cbc0abb1cdd788f286beba"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY1OTkyMw==", "bodyText": "Done", "url": "https://github.com/quarkusio/quarkus/pull/10764#discussion_r455659923", "createdAt": "2020-07-16T09:41:47Z", "author": {"login": "phillip-kruger"}, "path": "extensions/smallrye-graphql/deployment/src/main/java/io/quarkus/smallrye/graphql/deployment/SmallRyeGraphQLProcessor.java", "diffHunk": "@@ -129,6 +131,15 @@ void registerNativeImageResources(BuildProducer<ServiceProviderBuildItem> servic\n                 lookupService);\n         serviceProvider.produce(\n                 new ServiceProviderBuildItem(LookupService.class.getName(), lookupImplementations.toArray(new String[0])));\n+\n+        // Schema Extension Service (We use the one from the CDI Module)\n+        String schemaExtensionService = SPI_PATH + SchemaBuildingExtensionService.class.getName();\n+        Set<String> schemaExtensionImplementations = ServiceUtil.classNamesNamedIn(\n+                Thread.currentThread().getContextClassLoader(),\n+                schemaExtensionService);\n+        serviceProvider.produce(\n+                new ServiceProviderBuildItem(SchemaBuildingExtensionService.class.getName(),\n+                        schemaExtensionImplementations.toArray(new String[0])));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTI0MTU4NQ=="}, "originalCommit": {"oid": "63da5afca4db8ab924cbc0abb1cdd788f286beba"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2514, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}