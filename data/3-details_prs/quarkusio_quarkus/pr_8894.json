{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NzUxMzg0", "number": 8894, "title": "Unify handling of Kubernetes env vars definition", "bodyText": "Fixes #8792\nInitial implementation for option 1 as discussed in #8792 to get some feedback\nStill to be done:\n\n Fix issue with duplicated field definition (seems linked to dekorateio/dekorate#473)\n Doc updates\n Support older style\n Decide on what to do in case of conflicts (see #8792 (comment) and subsequent comments)\n Support defining multiple configmaps / secrets\n Add integration tests\n Check dev mode", "createdAt": "2020-04-27T21:15:31Z", "url": "https://github.com/quarkusio/quarkus/pull/8894", "merged": true, "mergeCommit": {"oid": "e29bc494b57204ebe5de5310b321bd35f7d818d7"}, "closed": true, "closedAt": "2020-05-06T07:11:12Z", "author": {"login": "metacosm"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccvwFKgBqjMyOTAzNjExNTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcejNRXgFqTQwNjM0ODMyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d16aa19b523e7aeff1c19ce4b76ee9a0d82d47f6", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/quarkusio/quarkus/commit/d16aa19b523e7aeff1c19ce4b76ee9a0d82d47f6", "committedDate": "2020-04-30T14:11:41Z", "message": "fix: improve implementation to better support edge cases, add tests"}, "afterCommit": {"oid": "8d63f5c7606d1528a0306ad9ea5109bb984f9b21", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/quarkusio/quarkus/commit/8d63f5c7606d1528a0306ad9ea5109bb984f9b21", "committedDate": "2020-04-30T16:29:56Z", "message": "feat: unify handling of Kubernetes env vars definition"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NTEyNDk5", "url": "https://github.com/quarkusio/quarkus/pull/8894#pullrequestreview-404512499", "createdAt": "2020-05-02T08:58:41Z", "commit": {"oid": "cc62934b7cbab1d82e765439cc4f4e31759a1a81"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwODo1ODo0MVrOGPhrJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwOTowMDowNlrOGPhrsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzU0MA==", "bodyText": "Please remove all licenses from the source code you added, it's a general rule for this repository.", "url": "https://github.com/quarkusio/quarkus/pull/8894#discussion_r418933540", "createdAt": "2020-05-02T08:58:41Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/EnvVarHolder.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc62934b7cbab1d82e765439cc4f4e31759a1a81"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzYzMg==", "bodyText": "Let's add a comment on what should be used instead, and perhaps add an example of how to convert", "url": "https://github.com/quarkusio/quarkus/pull/8894#discussion_r418933632", "createdAt": "2020-05-02T08:59:28Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/ContainerConfig.java", "diffHunk": "@@ -93,4 +90,34 @@\n     @ConfigItem\n     Map<String, MountConfig> mounts;\n \n+    /**\n+     * Environment variables to add to all containers.\n+     *\n+     * @deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc62934b7cbab1d82e765439cc4f4e31759a1a81"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODkzMzY4Mg==", "bodyText": "Please remove author tags, we don't use them in Quarkus.", "url": "https://github.com/quarkusio/quarkus/pull/8894#discussion_r418933682", "createdAt": "2020-05-02T09:00:06Z", "author": {"login": "geoand"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/EnvVarHolder.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * <p>\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * <p>\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package io.quarkus.kubernetes.deployment;\n+\n+import static io.quarkus.kubernetes.spi.KubernetesEnvBuildItem.EnvType.configmap;\n+import static io.quarkus.kubernetes.spi.KubernetesEnvBuildItem.EnvType.field;\n+import static io.quarkus.kubernetes.spi.KubernetesEnvBuildItem.EnvType.secret;\n+import static io.quarkus.kubernetes.spi.KubernetesEnvBuildItem.EnvType.var;\n+\n+import java.util.Collection;\n+import java.util.Map;\n+\n+import io.quarkus.kubernetes.spi.KubernetesEnvBuildItem;\n+\n+/**\n+ * @author <a href=\"claprun@redhat.com\">Christophe Laprun</a>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc62934b7cbab1d82e765439cc4f4e31759a1a81"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0OTc3ODQw", "url": "https://github.com/quarkusio/quarkus/pull/8894#pullrequestreview-404977840", "createdAt": "2020-05-04T13:19:00Z", "commit": {"oid": "e777fbcddab199af295cefb7f1a0f69d625b386d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzoxOTowMFrOGP_5SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMzozMjo0M1rOGQAfGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQyODY4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        type = EnvType.field;\n          \n          \n            \n                        type = EnvType.secret;", "url": "https://github.com/quarkusio/quarkus/pull/8894#discussion_r419428680", "createdAt": "2020-05-04T13:19:00Z", "author": {"login": "iocanel"}, "path": "extensions/kubernetes/spi/src/main/java/io/quarkus/kubernetes/spi/KubernetesEnvBuildItem.java", "diffHunk": "@@ -5,26 +5,96 @@\n \n public final class KubernetesEnvBuildItem extends MultiBuildItem {\n \n+    public static ItemKey keyFor(EnvType type, String name) {\n+        return new ItemKey(type, name);\n+    }\n+\n+    public static ItemKey keyFor(KubernetesEnvBuildItem item) {\n+        return new ItemKey(item.getType(), item.getName());\n+    }\n+\n+    public enum EnvType {\n+        var(false),\n+        field(false),\n+        secret(true),\n+        configmap(true);\n+\n+        public final boolean allowMultipleDefinitions;\n+\n+        EnvType(boolean allowMultipleDefinitions) {\n+            this.allowMultipleDefinitions = allowMultipleDefinitions;\n+        }\n+\n+        public boolean isCompatibleWith(EnvType type) {\n+            if (this == type) {\n+                return true;\n+            }\n+\n+            switch (this) {\n+                case field:\n+                    return type == var;\n+                case var:\n+                    return type == field;\n+                case secret:\n+                    return type == configmap;\n+                case configmap:\n+                    return type == secret;\n+                default:\n+                    return false;\n+            }\n+        }\n+    }\n+\n     private final String name;\n     private final String value;\n-    private final String secret;\n-    private final String configmap;\n-    private final String field;\n+    private final EnvType type;\n     private final String target;\n \n     public KubernetesEnvBuildItem(String name, String value, String target) {\n-        this(name, value, null, null, null, target);\n+        this(name, value, EnvType.var, target);\n     }\n \n-    public KubernetesEnvBuildItem(String name, String value, String secret, String configmap, String field, String target) {\n+    public static EnvType getEnvType(String secret, String configmap, String field) {\n+        final EnvType type;\n+        if (secret != null) {\n+            type = EnvType.field;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e777fbcddab199af295cefb7f1a0f69d625b386d"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzMDMxNA==", "bodyText": "This is me being compulsive, but since the key is (key, name), how about we bring the type next to the name?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public KubernetesEnvBuildItem(String name, String value, EnvType type, String target) {\n          \n          \n            \n                public KubernetesEnvBuildItem( EnvType type, String name, String value, String target) {", "url": "https://github.com/quarkusio/quarkus/pull/8894#discussion_r419430314", "createdAt": "2020-05-04T13:21:24Z", "author": {"login": "iocanel"}, "path": "extensions/kubernetes/spi/src/main/java/io/quarkus/kubernetes/spi/KubernetesEnvBuildItem.java", "diffHunk": "@@ -5,26 +5,96 @@\n \n public final class KubernetesEnvBuildItem extends MultiBuildItem {\n \n+    public static ItemKey keyFor(EnvType type, String name) {\n+        return new ItemKey(type, name);\n+    }\n+\n+    public static ItemKey keyFor(KubernetesEnvBuildItem item) {\n+        return new ItemKey(item.getType(), item.getName());\n+    }\n+\n+    public enum EnvType {\n+        var(false),\n+        field(false),\n+        secret(true),\n+        configmap(true);\n+\n+        public final boolean allowMultipleDefinitions;\n+\n+        EnvType(boolean allowMultipleDefinitions) {\n+            this.allowMultipleDefinitions = allowMultipleDefinitions;\n+        }\n+\n+        public boolean isCompatibleWith(EnvType type) {\n+            if (this == type) {\n+                return true;\n+            }\n+\n+            switch (this) {\n+                case field:\n+                    return type == var;\n+                case var:\n+                    return type == field;\n+                case secret:\n+                    return type == configmap;\n+                case configmap:\n+                    return type == secret;\n+                default:\n+                    return false;\n+            }\n+        }\n+    }\n+\n     private final String name;\n     private final String value;\n-    private final String secret;\n-    private final String configmap;\n-    private final String field;\n+    private final EnvType type;\n     private final String target;\n \n     public KubernetesEnvBuildItem(String name, String value, String target) {\n-        this(name, value, null, null, null, target);\n+        this(name, value, EnvType.var, target);\n     }\n \n-    public KubernetesEnvBuildItem(String name, String value, String secret, String configmap, String field, String target) {\n+    public static EnvType getEnvType(String secret, String configmap, String field) {\n+        final EnvType type;\n+        if (secret != null) {\n+            type = EnvType.field;\n+        } else if (configmap != null) {\n+            type = EnvType.configmap;\n+        } else if (field != null) {\n+            type = EnvType.field;\n+        } else {\n+            type = EnvType.var;\n+        }\n+        return type;\n+    }\n+\n+    public KubernetesEnvBuildItem(String name, String value, EnvType type, String target) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e777fbcddab199af295cefb7f1a0f69d625b386d"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzNjU1MA==", "bodyText": "This feels weird, as we already have deployment target which may return one or more target platforms, can we use that fields instead?", "url": "https://github.com/quarkusio/quarkus/pull/8894#discussion_r419436550", "createdAt": "2020-05-04T13:30:12Z", "author": {"login": "iocanel"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/EnvVarHolder.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import java.util.Collection;\n+import java.util.Map;\n+\n+import io.quarkus.kubernetes.spi.KubernetesEnvBuildItem;\n+\n+import static io.quarkus.kubernetes.spi.KubernetesEnvBuildItem.EnvType.configmap;\n+import static io.quarkus.kubernetes.spi.KubernetesEnvBuildItem.EnvType.field;\n+import static io.quarkus.kubernetes.spi.KubernetesEnvBuildItem.EnvType.secret;\n+import static io.quarkus.kubernetes.spi.KubernetesEnvBuildItem.EnvType.var;\n+\n+/**\n+ * Common interface for configuration entities holding environment variables meant to be injected into containers.\n+ */\n+public interface EnvVarHolder {\n+    /**\n+     * Retrieves the definition of environment variables to add to the application's container.\n+     *\n+     * @return the associated {@link EnvVarsConfig} holding the definition of which environment variables to add\n+     */\n+    EnvVarsConfig getEnv();\n+    \n+    /**\n+     * @deprecated use {@link #getEnv()} instead\n+     */\n+    @Deprecated\n+    Map<String, EnvConfig> getEnvVars();\n+    \n+    /**\n+     * Specifies which platform this EnvVarHolder targets. This needs to be overridden by implementations that care about which\n+     * platform they target.\n+     *\n+     * @return the name of the targeted platform e.g. {@code kubernetes}\n+     */\n+    default String getTarget() {\n+        return \"UNUSED\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e777fbcddab199af295cefb7f1a0f69d625b386d"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzODM2MQ==", "bodyText": "Neatpicking, but envar as a a key here can be confusing.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 *     <li>{@code quarkus.kubernetes.env-vars.envvar.value=value} becomes {@code quarkus.kubernetes.env.vars.envvar=value}</li>\n          \n          \n            \n                 *     <li>{@code quarkus.kubernetes.env-vars.foo.value=value} becomes {@code quarkus.kubernetes.env.vars.foo=bar}</li>", "url": "https://github.com/quarkusio/quarkus/pull/8894#discussion_r419438361", "createdAt": "2020-05-04T13:32:43Z", "author": {"login": "iocanel"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/KubernetesConfig.java", "diffHunk": "@@ -230,10 +224,41 @@ public boolean isAddBuildTimestamp() {\n         return addBuildTimestamp;\n     }\n \n+    @Override\n+    public String getTarget() {\n+        return Constants.KUBERNETES;\n+    }\n+    \n+    /**\n+     * Environment variables to add to all containers using the old syntax.\n+     *\n+     * @deprecated Use {@link #env} instead using the new syntax as follows:\n+     * <ul>\n+     *     <li>{@code quarkus.kubernetes.env-vars.foo.field=fieldName} becomes {@code quarkus.kubernetes.env.fields.foo=fieldName}</li>\n+     *     <li>{@code quarkus.kubernetes.env-vars.envvar.value=value} becomes {@code quarkus.kubernetes.env.vars.envvar=value}</li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e777fbcddab199af295cefb7f1a0f69d625b386d"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb7617a0b04276aed326a3ca08434d4c747a5f2a", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/quarkusio/quarkus/commit/cb7617a0b04276aed326a3ca08434d4c747a5f2a", "committedDate": "2020-05-04T16:07:45Z", "message": "fix: wrong call after refactoring + format"}, "afterCommit": {"oid": "8cca5d49c2e42c3dc167f761263d948017806491", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/quarkusio/quarkus/commit/8cca5d49c2e42c3dc167f761263d948017806491", "committedDate": "2020-05-04T18:19:17Z", "message": "fix: wrong call after refactoring + format"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c0f28e548e96bb351d9f1e977521703648cf90f7", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/quarkusio/quarkus/commit/c0f28e548e96bb351d9f1e977521703648cf90f7", "committedDate": "2020-05-05T11:23:24Z", "message": "feat: add more integration tests"}, "afterCommit": {"oid": "d30bb7ea51e25bbf2c7c95b59cb9f9674fec8616", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/quarkusio/quarkus/commit/d30bb7ea51e25bbf2c7c95b59cb9f9674fec8616", "committedDate": "2020-05-05T11:33:12Z", "message": "feat: unify handling of Kubernetes env vars definition\n\nThis maintains backwards-compatibility with the old syntax while\nalso adding warnings (redundant definitions) and errors\n(conflicting definitions)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NzA4MDQ4", "url": "https://github.com/quarkusio/quarkus/pull/8894#pullrequestreview-405708048", "createdAt": "2020-05-05T11:41:42Z", "commit": {"oid": "d30bb7ea51e25bbf2c7c95b59cb9f9674fec8616"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NzUxMTY3", "url": "https://github.com/quarkusio/quarkus/pull/8894#pullrequestreview-405751167", "createdAt": "2020-05-05T12:45:58Z", "commit": {"oid": "d30bb7ea51e25bbf2c7c95b59cb9f9674fec8616"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjo0NTo1OFrOGQnqbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjo0NTo1OFrOGQnqbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA4MDIzNw==", "bodyText": "If I understand correctly, the method is used the specify the 'kind' of the config that is bearing the envars, right? If this is the case, I feel that there shouldn't be a default value returned and maybe the value could be derived from the classname. In any case I feel we need a different name for this.", "url": "https://github.com/quarkusio/quarkus/pull/8894#discussion_r420080237", "createdAt": "2020-05-05T12:45:58Z", "author": {"login": "iocanel"}, "path": "extensions/kubernetes/vanilla/deployment/src/main/java/io/quarkus/kubernetes/deployment/EnvVarHolder.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package io.quarkus.kubernetes.deployment;\n+\n+import java.util.Collection;\n+import java.util.Map;\n+\n+import io.quarkus.kubernetes.spi.KubernetesEnvBuildItem;\n+\n+import static io.quarkus.kubernetes.spi.KubernetesEnvBuildItem.EnvType.configmap;\n+import static io.quarkus.kubernetes.spi.KubernetesEnvBuildItem.EnvType.field;\n+import static io.quarkus.kubernetes.spi.KubernetesEnvBuildItem.EnvType.secret;\n+import static io.quarkus.kubernetes.spi.KubernetesEnvBuildItem.EnvType.var;\n+\n+/**\n+ * Common interface for configuration entities holding environment variables meant to be injected into containers.\n+ */\n+public interface EnvVarHolder {\n+    /**\n+     * Retrieves the definition of environment variables to add to the application's container.\n+     *\n+     * @return the associated {@link EnvVarsConfig} holding the definition of which environment variables to add\n+     */\n+    EnvVarsConfig getEnv();\n+    \n+    /**\n+     * @deprecated use {@link #getEnv()} instead\n+     */\n+    @Deprecated\n+    Map<String, EnvConfig> getEnvVars();\n+    \n+    /**\n+     * Specifies which platform this EnvVarHolder targets. This needs to be overridden by implementations that care about which\n+     * platform they target.\n+     *\n+     * @return the name of the targeted platform e.g. {@code kubernetes}\n+     */\n+    default String getTarget() {\n+        return \"UNUSED\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQzNjU1MA=="}, "originalCommit": {"oid": "e777fbcddab199af295cefb7f1a0f69d625b386d"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce03cdf27ecf8facd62cdc8cb4e482a0c13a3c67", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/quarkusio/quarkus/commit/ce03cdf27ecf8facd62cdc8cb4e482a0c13a3c67", "committedDate": "2020-05-05T15:10:20Z", "message": "fix: rename getTarget to getDeploymentTarget and remove default impl"}, "afterCommit": {"oid": "d313d2b4ab5c4e5fc6b7ee55971e7c13b5e0b2ba", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/quarkusio/quarkus/commit/d313d2b4ab5c4e5fc6b7ee55971e7c13b5e0b2ba", "committedDate": "2020-05-05T15:11:51Z", "message": "feat: unify handling of Kubernetes env vars definition\n\nThis maintains backwards-compatibility with the old syntax while\nalso adding warnings (redundant definitions) and errors\n(conflicting definitions)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a82951f334f01e331529b2768bb9feb98be80461", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/quarkusio/quarkus/commit/a82951f334f01e331529b2768bb9feb98be80461", "committedDate": "2020-05-05T18:35:32Z", "message": "feat: unify handling of Kubernetes env vars definition\n\nThis maintains backwards-compatibility with the old syntax while\nalso adding warnings (redundant definitions) and errors\n(conflicting definitions)."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d313d2b4ab5c4e5fc6b7ee55971e7c13b5e0b2ba", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/quarkusio/quarkus/commit/d313d2b4ab5c4e5fc6b7ee55971e7c13b5e0b2ba", "committedDate": "2020-05-05T15:11:51Z", "message": "feat: unify handling of Kubernetes env vars definition\n\nThis maintains backwards-compatibility with the old syntax while\nalso adding warnings (redundant definitions) and errors\n(conflicting definitions)."}, "afterCommit": {"oid": "a82951f334f01e331529b2768bb9feb98be80461", "author": {"user": {"login": "metacosm", "name": "Chris Laprun"}}, "url": "https://github.com/quarkusio/quarkus/commit/a82951f334f01e331529b2768bb9feb98be80461", "committedDate": "2020-05-05T18:35:32Z", "message": "feat: unify handling of Kubernetes env vars definition\n\nThis maintains backwards-compatibility with the old syntax while\nalso adding warnings (redundant definitions) and errors\n(conflicting definitions)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MzQ4MzIz", "url": "https://github.com/quarkusio/quarkus/pull/8894#pullrequestreview-406348323", "createdAt": "2020-05-06T07:05:00Z", "commit": {"oid": "a82951f334f01e331529b2768bb9feb98be80461"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4372, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}