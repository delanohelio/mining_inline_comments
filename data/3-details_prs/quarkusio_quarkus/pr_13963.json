{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjg4MTE1", "number": 13963, "title": "Use builder image's objcopy when building with quarkus.native.container-build=true and quarkus.native.debug.enabled=true", "bodyText": "Closes #13754\nCloses #13856", "createdAt": "2020-12-18T04:59:39Z", "url": "https://github.com/quarkusio/quarkus/pull/13963", "merged": true, "mergeCommit": {"oid": "7299fd0f299a8b713de024c43e68f6989117107a"}, "closed": true, "closedAt": "2021-04-22T10:45:56Z", "author": {"login": "zakkak"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdnQ_EXgBqjQxMjgxNTU1MTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABePkvi5AFqTY0MjA0ODcxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7e95e50c083f52e1d5d28a69635a50c1aad1f6c", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/c7e95e50c083f52e1d5d28a69635a50c1aad1f6c", "committedDate": "2020-12-18T04:56:35Z", "message": "Use builder image's objcopy when using containers"}, "afterCommit": {"oid": "4d66b885e1d1047ae4029f0f0d3fe0419b0ddce1", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/4d66b885e1d1047ae4029f0f0d3fe0419b0ddce1", "committedDate": "2020-12-18T05:06:38Z", "message": "Use builder image's objcopy when using containers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1NTI4NTY3", "url": "https://github.com/quarkusio/quarkus/pull/13963#pullrequestreview-555528567", "createdAt": "2020-12-18T14:28:21Z", "commit": {"oid": "4d66b885e1d1047ae4029f0f0d3fe0419b0ddce1"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDoyODoyMVrOIIk78A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxNDo0OToyMVrOIIl2fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg2NDY4OA==", "bodyText": "Why is the log.info() conditionalized on isContainerBuild? Why ...replace(\"$\", \"\\\\$\")) only then? AFAIK, this is shell-escaping the GC policy in use which might be an inner class ($ separation). I believe it's because maybeRunInContainer conditionally already replaces the $. It makes the code overly complicated to read.", "url": "https://github.com/quarkusio/quarkus/pull/13963#discussion_r545864688", "createdAt": "2020-12-18T14:28:21Z", "author": {"login": "jerboaa"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/NativeImageBuildStep.java", "diffHunk": "@@ -101,166 +101,60 @@ public NativeImageBuildItem build(NativeConfig nativeConfig, NativeImageSourceJa\n         final String runnerJarName = runnerJar.getFileName().toString();\n \n         HashMap<String, String> env = new HashMap<>(System.getenv());\n-        List<String> nativeImage;\n-\n-        String noPIE = \"\";\n+        List<String> containerCommand = null;\n+        List<String> nativeImage = null;\n \n         boolean isContainerBuild = nativeConfig.containerRuntime.isPresent() || nativeConfig.containerBuild;\n-        if (!isContainerBuild && SystemUtils.IS_OS_LINUX) {\n-            noPIE = detectNoPIE();\n+        if (!isContainerBuild) {\n+            nativeImage = getNativeImage(nativeConfig, processInheritIODisabled.isPresent(), outputDir, env);\n+            if (nativeImage == null) {\n+                assert SystemUtils.IS_OS_LINUX;\n+                // If we are on linux we can fallback to the builder image and expect the resulting binary to be able to\n+                // run on the host. Unfortunately the same is not true for other platforms.\n+                log.warn(\"Cannot find `native-image` in the GRAALVM_HOME, JAVA_HOME and System PATH.\" +\n+                        \"Install it using `gu install native-image`. Attempting to fall back to builder image.\");\n+                isContainerBuild = true;\n+            }\n+        }\n+        if (isContainerBuild) {\n+            containerCommand = setupContainerBuild(nativeConfig, processInheritIODisabled.isPresent(), outputDir);\n+            nativeImage = Collections.singletonList(\"native-image\");\n         }\n \n-        nativeImage = getNativeImage(nativeConfig, processInheritIODisabled, outputDir, env);\n-        final GraalVM.Version graalVMVersion = GraalVM.Version.ofBinary(nativeImage);\n+        final GraalVM.Version graalVMVersion = GraalVM.Version.ofBinary(containerCommand, nativeImage);\n \n         if (graalVMVersion.isDetected()) {\n             checkGraalVMVersion(graalVMVersion);\n         } else {\n             log.error(\"Unable to get GraalVM version from the native-image binary.\");\n         }\n \n+        String executableName = outputTargetBuildItem.getBaseName() + packageConfig.runnerSuffix;\n+        String noPIE = \"\";\n+        if (!isContainerBuild && SystemUtils.IS_OS_LINUX) {\n+            noPIE = detectNoPIE();\n+        }\n         try {\n-            List<String> command = new ArrayList<>(nativeImage);\n             if (nativeConfig.cleanupServer && !graalVMVersion.isMandrel()) {\n                 List<String> cleanup = new ArrayList<>(nativeImage);\n                 cleanup.add(\"--server-shutdown\");\n-                final ProcessBuilder pb = new ProcessBuilder(cleanup.toArray(new String[0]));\n+                cleanup = maybeRunInContainer(containerCommand, cleanup);\n+                final ProcessBuilder pb = new ProcessBuilder(cleanup);\n                 pb.directory(outputDir.toFile());\n                 final Process process = ProcessUtil.launchProcess(pb, processInheritIODisabled.isPresent());\n                 process.waitFor();\n             }\n-            boolean enableSslNative = false;\n-            for (NativeImageSystemPropertyBuildItem prop : nativeImageProperties) {\n-                //todo: this should be specific build items\n-                if (prop.getKey().equals(\"quarkus.ssl.native\") && prop.getValue() != null) {\n-                    enableSslNative = Boolean.parseBoolean(prop.getValue());\n-                } else if (prop.getKey().equals(\"quarkus.jni.enable\") && prop.getValue().equals(\"false\")) {\n-                    log.warn(\"Your application is setting the deprecated 'quarkus.jni.enable' configuration key to false.\"\n-                            + \" Please consider removing this configuration key as it is ignored (JNI is always enabled) and it\"\n-                            + \" will be removed in a future Quarkus version.\");\n-                } else if (prop.getKey().equals(\"quarkus.native.enable-all-security-services\") && prop.getValue() != null) {\n-                    nativeConfig.enableAllSecurityServices |= Boolean.parseBoolean(prop.getValue());\n-                } else if (prop.getKey().equals(\"quarkus.native.enable-all-charsets\") && prop.getValue() != null) {\n-                    nativeConfig.addAllCharsets |= Boolean.parseBoolean(prop.getValue());\n-                } else {\n-                    // todo maybe just -D is better than -J-D in this case\n-                    if (prop.getValue() == null) {\n-                        command.add(\"-J-D\" + prop.getKey());\n-                    } else {\n-                        command.add(\"-J-D\" + prop.getKey() + \"=\" + prop.getValue());\n-                    }\n-                }\n-            }\n-            command.add(\"-J-Duser.language=\" + System.getProperty(\"user.language\"));\n-            // Native image runtime uses the host's (i.e. build time) value of file.encoding\n-            // system property. We intentionally default this to UTF-8 to avoid platform specific\n-            // defaults to be picked up which can then result in inconsistent behaviour in the\n-            // generated native application\n-            command.add(\"-J-Dfile.encoding=UTF-8\");\n-\n-            if (enableSslNative) {\n-                nativeConfig.enableHttpsUrlHandler = true;\n-                nativeConfig.enableAllSecurityServices = true;\n-            }\n-\n-            handleAdditionalProperties(nativeConfig, command, isContainerBuild, outputDir);\n-            command.add(\"--initialize-at-build-time=\");\n-            command.add(\n-                    \"-H:InitialCollectionPolicy=com.oracle.svm.core.genscavenge.CollectionPolicy$BySpaceAndTime\"); //the default collection policy results in full GC's 50% of the time\n-            command.add(\"-H:+JNI\");\n-            command.add(\"-jar\");\n-            command.add(runnerJarName);\n-\n-            if (nativeConfig.enableFallbackImages) {\n-                command.add(\"-H:FallbackThreshold=5\");\n-            } else {\n-                //Default: be strict as those fallback images aren't very useful\n-                //and tend to cover up real problems.\n-                command.add(\"-H:FallbackThreshold=0\");\n-            }\n-\n-            if (nativeConfig.reportErrorsAtRuntime) {\n-                command.add(\"-H:+ReportUnsupportedElementsAtRuntime\");\n-            }\n-            if (nativeConfig.reportExceptionStackTraces) {\n-                command.add(\"-H:+ReportExceptionStackTraces\");\n-            }\n-            if (nativeConfig.debug.enabled) {\n-                if (graalVMVersion.isMandrel() || graalVMVersion.isNewerThan(GraalVM.Version.VERSION_20_1)) {\n-                    command.add(\"-g\");\n-                    command.add(\"-H:DebugInfoSourceSearchPath=\" + APP_SOURCES);\n-                }\n-            }\n-            if (nativeConfig.debugBuildProcess) {\n-                command.add(\"-J-Xrunjdwp:transport=dt_socket,address=\" + DEBUG_BUILD_PROCESS_PORT + \",server=y,suspend=y\");\n-            }\n-            if (nativeConfig.enableReports) {\n-                command.add(\"-H:+PrintAnalysisCallTree\");\n-            }\n-            if (nativeConfig.dumpProxies) {\n-                command.add(\"-Dsun.misc.ProxyGenerator.saveGeneratedFiles=true\");\n-                if (nativeConfig.enableServer) {\n-                    log.warn(\n-                            \"Options dumpProxies and enableServer are both enabled: this will get the proxies dumped in an unknown external working directory\");\n-                }\n-            }\n-            if (nativeConfig.nativeImageXmx.isPresent()) {\n-                command.add(\"-J-Xmx\" + nativeConfig.nativeImageXmx.get());\n-            }\n-            List<String> protocols = new ArrayList<>(2);\n-            if (nativeConfig.enableHttpUrlHandler) {\n-                protocols.add(\"http\");\n-            }\n-            if (nativeConfig.enableHttpsUrlHandler) {\n-                protocols.add(\"https\");\n-            }\n-            if (nativeConfig.addAllCharsets) {\n-                command.add(\"-H:+AddAllCharsets\");\n-            } else {\n-                command.add(\"-H:-AddAllCharsets\");\n-            }\n-            if (!protocols.isEmpty()) {\n-                command.add(\"-H:EnableURLProtocols=\" + String.join(\",\", protocols));\n-            }\n-            if (nativeConfig.enableAllSecurityServices) {\n-                command.add(\"--enable-all-security-services\");\n-            }\n-            if (!noPIE.isEmpty()) {\n-                command.add(\"-H:NativeLinkerOption=\" + noPIE);\n-            }\n-\n-            if (!nativeConfig.enableIsolates) {\n-                command.add(\"-H:-SpawnIsolates\");\n-            }\n-            if (!nativeConfig.enableJni) {\n-                log.warn(\"Your application is setting the deprecated 'quarkus.native.enable-jni' configuration key to false.\"\n-                        + \" Please consider removing this configuration key as it is ignored (JNI is always enabled) and it\"\n-                        + \" will be removed in a future Quarkus version.\");\n-            }\n-            if (!nativeConfig.enableServer && !SystemUtils.IS_OS_WINDOWS && !graalVMVersion.isMandrel()) {\n-                command.add(\"--no-server\");\n-            }\n-            if (nativeConfig.enableVmInspection) {\n-                command.add(\"-H:+AllowVMInspection\");\n-            }\n-            if (nativeConfig.autoServiceLoaderRegistration) {\n-                command.add(\"-H:+UseServiceLoaderFeature\");\n-                //When enabling, at least print what exactly is being added:\n-                command.add(\"-H:+TraceServiceLoaderFeature\");\n+            List<String> buildCommand = getBuildCommand(nativeConfig, nativeImageProperties,\n+                    outputDir, runnerJarName, nativeImage, noPIE, isContainerBuild, graalVMVersion,\n+                    executableName);\n+            buildCommand = maybeRunInContainer(containerCommand, buildCommand);\n+            if (isContainerBuild) {\n+                log.info(String.join(\" \", buildCommand).replace(\"$\", \"\\\\$\"));\n             } else {\n-                command.add(\"-H:-UseServiceLoaderFeature\");\n+                log.info(String.join(\" \", buildCommand));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d66b885e1d1047ae4029f0f0d3fe0419b0ddce1"}, "originalPosition": 182}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTg3OTY3OQ==", "bodyText": "Wouldn't this spin up a container 3 times? Ideally, we'd stitch them together so that we can get away with a one time container invocation. I.e. podman run ... --entrypoint=/bin/bash <container> -c 'objcopy --only-keep-debug ... ; objcopy --add-gnu-debuglink=....; objcopy --strip-debug ... or podman run ... --entrypoint=/bin/bash <container> -c 'objcopy --strip-debug ... depending on the -g option.", "url": "https://github.com/quarkusio/quarkus/pull/13963#discussion_r545879679", "createdAt": "2020-12-18T14:49:21Z", "author": {"login": "jerboaa"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/NativeImageBuildStep.java", "diffHunk": "@@ -269,17 +163,34 @@ public NativeImageBuildItem build(NativeConfig nativeConfig, NativeImageSourceJa\n             errorReportLatch.await();\n             int exitCode = process.waitFor();\n             if (exitCode != 0) {\n-                throw imageGenerationFailed(exitCode, command);\n+                throw imageGenerationFailed(exitCode, buildCommand);\n             }\n             if (SystemUtils.IS_OS_WINDOWS && !(isContainerBuild)) {\n                 //once image is generated it gets added .exe on Windows\n                 executableName = executableName + \".exe\";\n             }\n+\n+            String symbols = String.format(\"%s.debug\", executableName);\n+            if (!isContainerBuild && !objcopyExists(env)) {\n+                log.warn(\"objcopy executable not found in PATH. Debug symbols will not be separated from executable.\");\n+                log.warn(\"That will result in a larger native image with debug symbols embedded in it.\");\n+            } else {\n+                assert !(isContainerBuild && containerCommand == null);\n+                if (nativeConfig.debug.enabled) {\n+                    objcopy(containerCommand, outputDir, \"--only-keep-debug\", executableName, symbols);\n+                    objcopy(containerCommand, outputDir, String.format(\"--add-gnu-debuglink=%s\", symbols), executableName);\n+                }\n+                // Strip debug symbols regardless, because the underlying JDK might contain them\n+                objcopy(containerCommand, outputDir, \"--strip-debug\", executableName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d66b885e1d1047ae4029f0f0d3fe0419b0ddce1"}, "originalPosition": 222}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b8f277d2adc90f157f09d948bf11cf5d0253ecc", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/6b8f277d2adc90f157f09d948bf11cf5d0253ecc", "committedDate": "2020-12-22T01:44:06Z", "message": "Move container command log.info in maybeRunInContainer"}, "afterCommit": {"oid": "eaf9955f3ed3ed9a90947af03dfd9a9f3fb66f31", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/eaf9955f3ed3ed9a90947af03dfd9a9f3fb66f31", "committedDate": "2021-01-22T11:29:41Z", "message": "Move container command log.info in maybeRunInContainer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eaf9955f3ed3ed9a90947af03dfd9a9f3fb66f31", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/eaf9955f3ed3ed9a90947af03dfd9a9f3fb66f31", "committedDate": "2021-01-22T11:29:41Z", "message": "Move container command log.info in maybeRunInContainer"}, "afterCommit": {"oid": "ac8e60e4295a0a4c8b3e9c4d27af7ce262dc9aed", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/ac8e60e4295a0a4c8b3e9c4d27af7ce262dc9aed", "committedDate": "2021-01-27T13:24:24Z", "message": "Move container command log.info in maybeRunInContainer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac8e60e4295a0a4c8b3e9c4d27af7ce262dc9aed", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/ac8e60e4295a0a4c8b3e9c4d27af7ce262dc9aed", "committedDate": "2021-01-27T13:24:24Z", "message": "Move container command log.info in maybeRunInContainer"}, "afterCommit": {"oid": "efe041cdc05e6acd55e794a4126ac14e2ef3e6bb", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/efe041cdc05e6acd55e794a4126ac14e2ef3e6bb", "committedDate": "2021-03-02T14:19:27Z", "message": "Run objcopy in builder-image when using it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAxODc2MTUx", "url": "https://github.com/quarkusio/quarkus/pull/13963#pullrequestreview-601876151", "createdAt": "2021-03-02T14:29:01Z", "commit": {"oid": "efe041cdc05e6acd55e794a4126ac14e2ef3e6bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wMlQxNDoyOTowMVrOIue2Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wMlQxNDoyOTowMVrOIue2Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NTYxMDgxMA==", "bodyText": "Ideally I would prefer a dynamically generated unique volume name, but I am not sure it's worth the effort.\nWe could also do something like fixed-name-YYYY-MM-DD-HHMM to avoid potential conflicts with existing volumes.\nWDYT?", "url": "https://github.com/quarkusio/quarkus/pull/13963#discussion_r585610810", "createdAt": "2021-03-02T14:29:01Z", "author": {"login": "zakkak"}, "path": "core/deployment/src/main/java/io/quarkus/deployment/pkg/steps/NativeImageBuildRemoteContainerRunner.java", "diffHunk": "@@ -13,6 +15,7 @@\n public class NativeImageBuildRemoteContainerRunner extends NativeImageBuildContainerRunner {\n \n     private static final Logger log = Logger.getLogger(NativeImageBuildRemoteContainerRunner.class);\n+    private static final String CONTAINER_BUILD_VOLUME_NAME = \"quarkus-native-builder-image-project-volume\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "efe041cdc05e6acd55e794a4126ac14e2ef3e6bb"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "efe041cdc05e6acd55e794a4126ac14e2ef3e6bb", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/efe041cdc05e6acd55e794a4126ac14e2ef3e6bb", "committedDate": "2021-03-02T14:19:27Z", "message": "Run objcopy in builder-image when using it"}, "afterCommit": {"oid": "57328b0ed9ccb1c04dc7e6445b930251868d0fc5", "author": {"user": {"login": "gsmet", "name": "Guillaume Smet"}}, "url": "https://github.com/quarkusio/quarkus/commit/57328b0ed9ccb1c04dc7e6445b930251868d0fc5", "committedDate": "2021-04-01T12:48:56Z", "message": "Fix confusion between native image name and executable name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0c0b530daedaea1aaa118c362212e74fa3a695b", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/d0c0b530daedaea1aaa118c362212e74fa3a695b", "committedDate": "2021-04-12T09:39:18Z", "message": "Update documentation of container-build property"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "609d216fab8ad39b4229b5cadf474979331fe343", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/609d216fab8ad39b4229b5cadf474979331fe343", "committedDate": "2021-04-12T09:39:23Z", "message": "Change the way the builder image is used on remote docker daemons\n\nThis patch creates a volume for /project where we can copy files to/from\nusing `docker cp`. The volume is create in the prebuild step, then used\nin the build step, and finally removed in the postbuild step. The new\napproach allows us to execute more than one commands using\n`docker run --rm` on the same files in /project."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bc84bcef3cc41630fec6811b0e64bd201bb2d57", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/1bc84bcef3cc41630fec6811b0e64bd201bb2d57", "committedDate": "2021-04-12T09:39:23Z", "message": "Run objcopy in builder-image when using it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36ec89402a1a359b9a02337f05aa3c7077d51dea", "author": {"user": {"login": "gsmet", "name": "Guillaume Smet"}}, "url": "https://github.com/quarkusio/quarkus/commit/36ec89402a1a359b9a02337f05aa3c7077d51dea", "committedDate": "2021-04-12T09:39:23Z", "message": "Fix confusion between native image name and executable name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8008cebb7840dacc9ca95b767cf75ba435d07c3d", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/8008cebb7840dacc9ca95b767cf75ba435d07c3d", "committedDate": "2021-04-12T09:39:23Z", "message": "Add comment to explain the usage of fixed volume name"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae176addcd0706dd28313b18541c2f75722b5dca", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/ae176addcd0706dd28313b18541c2f75722b5dca", "committedDate": "2021-04-01T15:05:12Z", "message": "Add comment to explain the usage of fixed volume name"}, "afterCommit": {"oid": "8008cebb7840dacc9ca95b767cf75ba435d07c3d", "author": {"user": {"login": "zakkak", "name": "Foivos"}}, "url": "https://github.com/quarkusio/quarkus/commit/8008cebb7840dacc9ca95b767cf75ba435d07c3d", "committedDate": "2021-04-12T09:39:23Z", "message": "Add comment to explain the usage of fixed volume name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjQyMDQ4NzEw", "url": "https://github.com/quarkusio/quarkus/pull/13963#pullrequestreview-642048710", "createdAt": "2021-04-22T10:45:46Z", "commit": {"oid": "8008cebb7840dacc9ca95b767cf75ba435d07c3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4217, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}