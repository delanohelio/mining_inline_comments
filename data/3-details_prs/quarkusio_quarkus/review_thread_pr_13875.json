{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NTUyMTQ0", "number": 13875, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjoyMzoyNVrOFFEWzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoyOToxOVrOFFGbOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODU4NTc1OnYy", "diffSide": "RIGHT", "path": "extensions/qute/deployment/src/main/java/io/quarkus/qute/deployment/QuteProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjoyMzoyNVrOIFYqQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNjoyMzoyNVrOIFYqQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjUxNzgyNA==", "bodyText": "Missing a > in the comment", "url": "https://github.com/quarkusio/quarkus/pull/13875#discussion_r542517824", "createdAt": "2020-12-14T16:23:25Z", "author": {"login": "cescoffier"}, "path": "extensions/qute/deployment/src/main/java/io/quarkus/qute/deployment/QuteProcessor.java", "diffHunk": "@@ -1193,14 +1186,59 @@ static Type extractMatchType(Set<Type> closure, DotName matchName, Function<Type\n             return clazz.typeParameters();\n         }\n \n-        void clear() {\n+        ClassInfo clazz() {\n+            return clazz;\n+        }\n+\n+        Type type() {\n+            return type;\n+        }\n+\n+        boolean isPrimitive() {\n+            return type != null && type.kind() == org.jboss.jandex.Type.Kind.PRIMITIVE;\n+        }\n+\n+        boolean isArray() {\n+            return type != null && type.kind() == org.jboss.jandex.Type.Kind.ARRAY;\n+        }\n+\n+        boolean isParameterizedType() {\n+            return type != null && type.kind() == org.jboss.jandex.Type.Kind.PARAMETERIZED_TYPE;\n+        }\n+\n+        boolean isClass() {\n+            return type != null && type.kind() == org.jboss.jandex.Type.Kind.CLASS;\n+        }\n+\n+        void setValues(ClassInfo clazz, Type type) {\n+            this.clazz = clazz;\n+            this.type = type;\n+            autoExtractType();\n+        }\n+\n+        void clearValues() {\n             clazz = null;\n             type = null;\n         }\n \n         boolean isEmpty() {\n             return clazz == null;\n         }\n+\n+        void autoExtractType() {\n+            boolean hasCompletionStage = ValueResolverGenerator.hasCompletionStageInTypeClosure(clazz, index);\n+            boolean hasUni = hasCompletionStage ? false\n+                    : ValueResolverGenerator.hasClassInTypeClosure(clazz, Names.UNI, index);\n+            if (hasCompletionStage || hasUni) {\n+                Set<Type> closure = Types.getTypeClosure(clazz, Types.buildResolvedMap(\n+                        getParameterizedTypeArguments(), getTypeParameters(), new HashMap<>(), index), index);\n+                Function<Type, Type> firstParamType = t -> t.asParameterizedType().arguments().get(0);\n+                // CompletionStage<List<Item>> => List<Item>\n+                // Uni<List<String> => List<String>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a0722a519b976bb5fefc687a3ca7cfb93013e76"}, "originalPosition": 301}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODkyMTQ1OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/qute-reference.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoyODo0MFrOIFbxKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoyODo0MFrOIFbxKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU2ODc0Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If a part of an expressions resolves to a `Uni`, a `CompletionStage` is first created from `Uni` using `Uni#subscribeAsCompletionStage()` and then evaluated as described above.\n          \n          \n            \n            If a part of an expression resolves to a `Uni`, a `CompletionStage` is first created from `Uni` using `Uni#subscribeAsCompletionStage()` and then evaluated as described above.", "url": "https://github.com/quarkusio/quarkus/pull/13875#discussion_r542568746", "createdAt": "2020-12-14T17:28:40Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/qute-reference.adoc", "diffHunk": "@@ -440,6 +440,13 @@ Virtual method parameters can be \"nested\" virtual method invocations.\n ----\n <1> `item.calculateDiscount(10)` is evaluated first and then passed as an argument to `item.subtractPrice()`.\n \n+==== Evaluation of `CompletionStage` and `Uni` Objects\n+\n+Objects that implement `java.util.concurrent.CompletionStage` and `io.smallrye.mutiny.Uni` are evaluated in a special way.\n+If a part of an expressions resolves to a `CompletionStage`, the resolution continues once this stage is completed and the next part of the expression (if any) is evaluated against the result of the completed stage.\n+For example, if there is an expression `{foo.size}` and `foo` resolves to `CompletionStage<List<String>>` then `size` is resolved against the completed result, i.e. `List<String>`.\n+If a part of an expressions resolves to a `Uni`, a `CompletionStage` is first created from `Uni` using `Uni#subscribeAsCompletionStage()` and then evaluated as described above.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a0722a519b976bb5fefc687a3ca7cfb93013e76"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwODkyNDc1OnYy", "diffSide": "RIGHT", "path": "docs/src/main/asciidoc/qute-reference.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoyOToxOVrOIFbzKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxNzoyOToxOVrOIFbzKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjU2OTI1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If a part of an expressions resolves to a `CompletionStage`, the resolution continues once this stage is completed and the next part of the expression (if any) is evaluated against the result of the completed stage.\n          \n          \n            \n            If a part of an expression resolves to a `CompletionStage`, the resolution continues once this stage is completed and the next part of the expression (if any) is evaluated against the result of the completed stage.", "url": "https://github.com/quarkusio/quarkus/pull/13875#discussion_r542569258", "createdAt": "2020-12-14T17:29:19Z", "author": {"login": "gastaldi"}, "path": "docs/src/main/asciidoc/qute-reference.adoc", "diffHunk": "@@ -440,6 +440,13 @@ Virtual method parameters can be \"nested\" virtual method invocations.\n ----\n <1> `item.calculateDiscount(10)` is evaluated first and then passed as an argument to `item.subtractPrice()`.\n \n+==== Evaluation of `CompletionStage` and `Uni` Objects\n+\n+Objects that implement `java.util.concurrent.CompletionStage` and `io.smallrye.mutiny.Uni` are evaluated in a special way.\n+If a part of an expressions resolves to a `CompletionStage`, the resolution continues once this stage is completed and the next part of the expression (if any) is evaluated against the result of the completed stage.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a0722a519b976bb5fefc687a3ca7cfb93013e76"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4532, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}