{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2ODM3MDQy", "number": 8321, "title": "Add warning about @Provider constructors", "bodyText": "Fixes: #8180", "createdAt": "2020-04-01T08:25:11Z", "url": "https://github.com/quarkusio/quarkus/pull/8321", "merged": true, "mergeCommit": {"oid": "9ea3a95aa738b432d6da2b119a34ff10bec34875"}, "closed": true, "closedAt": "2020-04-02T06:22:57Z", "author": {"login": "geoand"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTTyQcAFqTM4NTM4Njc4Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTnimaAFqTM4NjE4NTM4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1Mzg2Nzg3", "url": "https://github.com/quarkusio/quarkus/pull/8321#pullrequestreview-385386787", "createdAt": "2020-04-01T08:53:43Z", "commit": {"oid": "535c42fd3e12d14aa7112b60a93ed367a49f4c04"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODo1Mzo0NFrOF-290A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODo1Mzo0NFrOF-290A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1NjU5Mg==", "bodyText": "I wonder if we should send a PR to jandex to add a method like ClassInfo#constructors() ;-).", "url": "https://github.com/quarkusio/quarkus/pull/8321#discussion_r401456592", "createdAt": "2020-04-01T08:53:44Z", "author": {"login": "mkouba"}, "path": "extensions/resteasy-common/deployment/src/main/java/io/quarkus/resteasy/common/deployment/ResteasyCommonProcessor.java", "diffHunk": "@@ -281,6 +283,16 @@ private void checkProperConfigAccessInProvider(AnnotationInstance instance) {\n         }\n     }\n \n+    private void checkProperConstructorInProvider(AnnotationInstance i) {\n+        ClassInfo targetClass = i.target().asClass();\n+        if (!targetClass.hasNoArgsConstructor()\n+                || targetClass.methods().stream().filter(m -> m.name().equals(\"<init>\")).count() > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "535c42fd3e12d14aa7112b60a93ed367a49f4c04"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1Mzg3NzQ0", "url": "https://github.com/quarkusio/quarkus/pull/8321#pullrequestreview-385387744", "createdAt": "2020-04-01T08:54:56Z", "commit": {"oid": "535c42fd3e12d14aa7112b60a93ed367a49f4c04"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODo1NDo1NlrOF-3BCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwODo1NDo1NlrOF-3BCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTQ1NzQxNg==", "bodyText": "Shouldn't we mention what happens if it does not have such a constructor?", "url": "https://github.com/quarkusio/quarkus/pull/8321#discussion_r401457416", "createdAt": "2020-04-01T08:54:56Z", "author": {"login": "mkouba"}, "path": "extensions/resteasy-common/deployment/src/main/java/io/quarkus/resteasy/common/deployment/ResteasyCommonProcessor.java", "diffHunk": "@@ -281,6 +283,16 @@ private void checkProperConfigAccessInProvider(AnnotationInstance instance) {\n         }\n     }\n \n+    private void checkProperConstructorInProvider(AnnotationInstance i) {\n+        ClassInfo targetClass = i.target().asClass();\n+        if (!targetClass.hasNoArgsConstructor()\n+                || targetClass.methods().stream().filter(m -> m.name().equals(\"<init>\")).count() > 1) {\n+            LOGGER.warn(\n+                    \"Classes annotated with @Provider should have a single, no-argument constructor. Offending class is \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "535c42fd3e12d14aa7112b60a93ed367a49f4c04"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f9055565d237d9f865a9f2a2ad868ab1ef610f6", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/8f9055565d237d9f865a9f2a2ad868ab1ef610f6", "committedDate": "2020-04-01T09:05:15Z", "message": "Add warning about Provider constructors\n\nFixes: #8180"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "535c42fd3e12d14aa7112b60a93ed367a49f4c04", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/535c42fd3e12d14aa7112b60a93ed367a49f4c04", "committedDate": "2020-04-01T08:24:51Z", "message": "Add warning about Provider constructors\n\nFixes: #8180"}, "afterCommit": {"oid": "8f9055565d237d9f865a9f2a2ad868ab1ef610f6", "author": {"user": {"login": "geoand", "name": "Georgios Andrianakis"}}, "url": "https://github.com/quarkusio/quarkus/commit/8f9055565d237d9f865a9f2a2ad868ab1ef610f6", "committedDate": "2020-04-01T09:05:15Z", "message": "Add warning about Provider constructors\n\nFixes: #8180"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTM0NzM1", "url": "https://github.com/quarkusio/quarkus/pull/8321#pullrequestreview-386134735", "createdAt": "2020-04-02T06:22:40Z", "commit": {"oid": "8f9055565d237d9f865a9f2a2ad868ab1ef610f6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2MTg1Mzg3", "url": "https://github.com/quarkusio/quarkus/pull/8321#pullrequestreview-386185387", "createdAt": "2020-04-02T07:54:43Z", "commit": {"oid": "8f9055565d237d9f865a9f2a2ad868ab1ef610f6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNzo1NDo0M1rOF_fbQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNzo1NDo0M1rOF_fbQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjExOTQ4OQ==", "bodyText": "The injection works fine if I add @ApplicationScoped to the filter (as described in the original issue). Why not use following text:\nClasses annotated with @Provider without @ApplicationScoped annotation should have a single, no-argument constructor, otherwise dependency injection won't work properly.\n\nHas the if-statement to cover @ApplicationScoped as well?", "url": "https://github.com/quarkusio/quarkus/pull/8321#discussion_r402119489", "createdAt": "2020-04-02T07:54:43Z", "author": {"login": "schrieveslaach"}, "path": "extensions/resteasy-common/deployment/src/main/java/io/quarkus/resteasy/common/deployment/ResteasyCommonProcessor.java", "diffHunk": "@@ -281,6 +283,16 @@ private void checkProperConfigAccessInProvider(AnnotationInstance instance) {\n         }\n     }\n \n+    private void checkProperConstructorInProvider(AnnotationInstance i) {\n+        ClassInfo targetClass = i.target().asClass();\n+        if (!targetClass.hasNoArgsConstructor()\n+                || targetClass.methods().stream().filter(m -> m.name().equals(\"<init>\")).count() > 1) {\n+            LOGGER.warn(\n+                    \"Classes annotated with @Provider should have a single, no-argument constructor, otherwise dependency injection won't work properly. Offending class is \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f9055565d237d9f865a9f2a2ad868ab1ef610f6"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4666, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}