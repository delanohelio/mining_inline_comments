{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNzE1MTU5", "number": 8162, "title": "Remove unneeded paging when using PanacheQuery", "bodyText": "Avoid setting paging information on the native query implementation when no paging has been set on PanacheQuery.\nCloses #8098", "createdAt": "2020-03-25T17:10:08Z", "url": "https://github.com/quarkusio/quarkus/pull/8162", "merged": true, "mergeCommit": {"oid": "0f1d73b29a05c03553d435871591aa7a50c89f61"}, "closed": true, "closedAt": "2020-04-20T08:55:41Z", "author": {"login": "robmv"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRcQsLAFqTM4MjAwOTgwNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcZbMt7gFqTM5NjI2MjI5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyMDA5ODA3", "url": "https://github.com/quarkusio/quarkus/pull/8162#pullrequestreview-382009807", "createdAt": "2020-03-26T13:32:11Z", "commit": {"oid": "0d7e818c90cf1a0fd18e613ea3ac516044ba5af8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzozMjoxMlrOF8G_iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMzozMjoxMlrOF8G_iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODU3MzQ1MQ==", "bodyText": "Well that's a change in behaviour: we used to have a single page encompassing all results. Perhaps it's fine, but at the very least, this has to be mentioned in the javadocs for the PanacheQuery interface.", "url": "https://github.com/quarkusio/quarkus/pull/8162#discussion_r398573451", "createdAt": "2020-03-26T13:32:12Z", "author": {"login": "FroMage"}, "path": "extensions/panache/hibernate-orm-panache/runtime/src/main/java/io/quarkus/hibernate/orm/panache/runtime/PanacheQueryImpl.java", "diffHunk": "@@ -100,11 +97,15 @@ public int pageCount() {\n \n     @Override\n     public Page page() {\n-        checkNotInRange();\n+        checkPagination();\n         return page;\n     }\n \n-    private void checkNotInRange() {\n+    private void checkPagination() {\n+        if (page == null) {\n+            throw new UnsupportedOperationException(\"Cannot call a page related method, \" +\n+                    \"call page(Page) or page(int, int) to initiate pagination first\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d7e818c90cf1a0fd18e613ea3ac516044ba5af8"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODMyOTc0", "url": "https://github.com/quarkusio/quarkus/pull/8162#pullrequestreview-393832974", "createdAt": "2020-04-15T14:32:03Z", "commit": {"oid": "6710ff3ab05d1292b2e216e6c618509e4b26a6eb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDozMjowNFrOGF8lcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNDozMzowMFrOGF8oJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4ODY5MQ==", "bodyText": "This worries me a bit, why is it needed and where is it stopped?", "url": "https://github.com/quarkusio/quarkus/pull/8162#discussion_r408888691", "createdAt": "2020-04-15T14:32:04Z", "author": {"login": "FroMage"}, "path": "integration-tests/hibernate-orm-panache/src/test/java/io/quarkus/it/panache/NoPagingPMT.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package io.quarkus.it.panache;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.awaitility.Awaitility.await;\n+import static org.hamcrest.Matchers.is;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.sql.SQLException;\n+import java.util.List;\n+import java.util.concurrent.TimeUnit;\n+\n+import org.h2.tools.Server;\n+import org.jboss.shrinkwrap.api.ShrinkWrap;\n+import org.jboss.shrinkwrap.api.spec.JavaArchive;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.RegisterExtension;\n+\n+import io.quarkus.builder.Version;\n+import io.quarkus.test.LogFile;\n+import io.quarkus.test.QuarkusProdModeTest;\n+import io.restassured.RestAssured;\n+\n+/**\n+ * Test if PanacheQuery is using unnecessary SQL for limiting the number of output rows, the log output is tested for the\n+ * presence of <code>offset</code> or <code>limit</code> in the SQL.\n+ */\n+public class NoPagingPMT {\n+\n+    static {\n+        // WORKAROUND\n+        try {\n+            Server.createTcpServer().start();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6710ff3ab05d1292b2e216e6c618509e4b26a6eb"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg4OTM4Mw==", "bodyText": "Are we sure we need to split the test runs in two parts?", "url": "https://github.com/quarkusio/quarkus/pull/8162#discussion_r408889383", "createdAt": "2020-04-15T14:33:00Z", "author": {"login": "FroMage"}, "path": "integration-tests/hibernate-orm-panache/pom.xml", "diffHunk": "@@ -109,6 +119,30 @@\n                     </execution>\n                 </executions>\n             </plugin>\n+            <plugin>\n+                <artifactId>maven-surefire-plugin</artifactId>\n+                <executions>\n+                    <!--\n+                    The prod mode tests need to be part of a different execution to ensure that they don't mess with the standard tests.\n+                    By adding this configuration we ensure that the maven surefire plugin will execute twice, one for the regular **/*Test.java\n+                    tests (using the 'default-test' execution), and one for the prod mode tests (this 'prod-mode' execution)\n+                    -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6710ff3ab05d1292b2e216e6c618509e4b26a6eb"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab908efa5f2fd1c2371714f4e3a31e69ed3e894c", "author": {"user": {"login": "robmv", "name": "Robert Marcano"}}, "url": "https://github.com/quarkusio/quarkus/commit/ab908efa5f2fd1c2371714f4e3a31e69ed3e894c", "committedDate": "2020-04-18T14:53:00Z", "message": "Remove unneeded paging when using *PanacheQuery\n\nAvoid setting paging information on the native query implementation when\nno paging has been set on PanacheQuery and ReactivePanacheQuery"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2MjYyMjky", "url": "https://github.com/quarkusio/quarkus/pull/8162#pullrequestreview-396262292", "createdAt": "2020-04-20T08:55:31Z", "commit": {"oid": "ab908efa5f2fd1c2371714f4e3a31e69ed3e894c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3626, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}