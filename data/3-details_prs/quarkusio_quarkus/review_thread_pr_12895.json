{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4Nzk1NzU2", "number": 12895, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwODoxNzo1MlrOExymIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo0OTowMVrOE2BEoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjQ0NjQzOnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/resteasy-jackson-example/kotlin/src/main/kotlin/org/acme/resteasyjackson/MyObjectMapperCustomizer.kt", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwODoxNzo1MlrOHoEptg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOTo0Nzo0MVrOHoH1Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4MTMwMg==", "bodyText": "Why use MyObject instead of Fruit ? MyObject is non-descriptive but applies to lots of stuff thus not the greatest to put into an example; as opposed to Fruit which is pretty specific and if you as new coder would derive from the example would be naturally inclined to rename ...where as MyObject would just hang out forever (not good)", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r511781302", "createdAt": "2020-10-26T08:17:52Z", "author": {"login": "maxandersen"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/resteasy-jackson-example/kotlin/src/main/kotlin/org/acme/resteasyjackson/MyObjectMapperCustomizer.kt", "diffHunk": "@@ -6,8 +6,9 @@ import io.quarkus.jackson.ObjectMapperCustomizer\n import javax.inject.Singleton\n \n @Singleton\n-class FruitObjectMapperCustomizer : ObjectMapperCustomizer {\n+class MyObjectMapperCustomizer : ObjectMapperCustomizer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70d4feebe9f9072544f3154929077140448cbc60"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4OTQ1NA==", "bodyText": "@maxandersen\n\nthis is not dealing with Fruit anymore.\nthe mapper behavior is global, it suppresses null value for the output json for all the different resources.\n\nSo IMHO MyObjectMapperCustomizer is the best possible name, SuppressNullValueObjectMapperCustomizer seems a bit overkill and would not allow other global customization. We could also settle on GlobalObjectMapperCustomizer?", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r511789454", "createdAt": "2020-10-26T08:33:27Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/resteasy-jackson-example/kotlin/src/main/kotlin/org/acme/resteasyjackson/MyObjectMapperCustomizer.kt", "diffHunk": "@@ -6,8 +6,9 @@ import io.quarkus.jackson.ObjectMapperCustomizer\n import javax.inject.Singleton\n \n @Singleton\n-class FruitObjectMapperCustomizer : ObjectMapperCustomizer {\n+class MyObjectMapperCustomizer : ObjectMapperCustomizer {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4MTMwMg=="}, "originalCommit": {"oid": "70d4feebe9f9072544f3154929077140448cbc60"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgzMzM3NQ==", "bodyText": "ah - thanks for the explantation.  makes sense.\nI guess in \"real world\" it would be called AcmeObjectMapperCustomizer but you support changing packages names now right ? then Acme wouldn't be the consistent name.\nThis customizer is a specific to Kotlin example? so could be KotlinObjectMapperCustomizer ...but I'm probably fine with MyObjectMapperCustomizer as is.", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r511833375", "createdAt": "2020-10-26T09:47:41Z", "author": {"login": "maxandersen"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/resteasy-jackson-example/kotlin/src/main/kotlin/org/acme/resteasyjackson/MyObjectMapperCustomizer.kt", "diffHunk": "@@ -6,8 +6,9 @@ import io.quarkus.jackson.ObjectMapperCustomizer\n import javax.inject.Singleton\n \n @Singleton\n-class FruitObjectMapperCustomizer : ObjectMapperCustomizer {\n+class MyObjectMapperCustomizer : ObjectMapperCustomizer {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTc4MTMwMg=="}, "originalCommit": {"oid": "70d4feebe9f9072544f3154929077140448cbc60"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNjc5MjIyOnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/qute-example/codestart.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOTo0OTowMlrOHoH4bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQwOTo0OTowMlrOHoH4bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTgzNDIyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    <p>This example uses a Qute template to server a colourful & interactive web page.</p>\n          \n          \n            \n                    <p>This example uses a Qute template to serve a colourful & interactive web page.</p>", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r511834221", "createdAt": "2020-10-26T09:49:02Z", "author": {"login": "maxandersen"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/qute-example/codestart.yml", "diffHunk": "@@ -4,6 +4,16 @@ type: code\n tags: example\n language:\n   base:\n+    data:\n+      title: Qute example\n+      description: |\n+        <p>This example uses a Qute template to server a colourful & interactive web page.</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70d4feebe9f9072544f3154929077140448cbc60"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDc0MjI2OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/config-yaml-example/codestart.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMjo0MTo0NFrOHpTp1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMjo0MTo0NFrOHpTp1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3NTY3MQ==", "bodyText": "could that be a href so it is clickable in readme ? ...I guess that will be bad for index.html ?", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r513075671", "createdAt": "2020-10-27T22:41:44Z", "author": {"login": "maxandersen"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/config-yaml-example/codestart.yml", "diffHunk": "@@ -4,6 +4,16 @@ type: code\n tags: example\n language:\n   base:\n+    data:\n+      title: YAML Config example\n+      description: |\n+        <p>We took a fight between a Sith and a Jedi to demo the YAML Quarkus configuration.</p>\n+        <p>The Quarkus configuration is located in: <code>src/main/resources/application.yml</code></p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70d4feebe9f9072544f3154929077140448cbc60"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNDc2MDY3OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/qute-example/java/src/main/java/org/acme/qute/Box.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMjo1MDowMVrOHpT1BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMjo1MDowMVrOHpT1BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzA3ODUzMw==", "bodyText": "this reads weird - we have a enum named shape inside a class called Box which always is referred to as a either square or circle....\nMaybe call Box a figure which has specific shape and size.", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r513078533", "createdAt": "2020-10-27T22:50:01Z", "author": {"login": "maxandersen"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/qute-example/java/src/main/java/org/acme/qute/Box.java", "diffHunk": "@@ -0,0 +1,20 @@\n+package org.acme.qute;\n+\n+public class Box {\n+\n+    public enum Shape { SQUARE, CIRCLE }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70d4feebe9f9072544f3154929077140448cbc60"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTc0NzMyOnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/logging-json/java/src/main/java/org/acme/logging/json/LoggingJsonResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNzoxNjo1MFrOHpcrKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwOToyMDozM1rOHpgtig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyMzQ2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOG.infof(\"Stop being lazy , you can't go slower than %s\", i);\n          \n          \n            \n                            LOG.infof(\"Stop being lazy, you can't go slower than %s\", i);", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r513223465", "createdAt": "2020-10-28T07:16:50Z", "author": {"login": "maxandersen"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/logging-json/java/src/main/java/org/acme/logging/json/LoggingJsonResource.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.acme.logging.json;\n+\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+@Path(\"/logging-json\")\n+public class LoggingJsonResource {\n+\n+    private static final Logger LOG = Logger.getLogger(LoggingJsonResource.class);\n+\n+    private final AtomicInteger speed = new AtomicInteger(5);\n+\n+    @GET\n+    @Path(\"slowdown\")\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public int slow() {\n+        return speed.updateAndGet(i -> {\n+            if (i == 0) {\n+                LOG.infof(\"Stop being lazy , you can't go slower than %s\", i);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70d4feebe9f9072544f3154929077140448cbc60"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI4OTYxMA==", "bodyText": "This is going to be removed", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r513289610", "createdAt": "2020-10-28T09:20:33Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/logging-json/java/src/main/java/org/acme/logging/json/LoggingJsonResource.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.acme.logging.json;\n+\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+@Path(\"/logging-json\")\n+public class LoggingJsonResource {\n+\n+    private static final Logger LOG = Logger.getLogger(LoggingJsonResource.class);\n+\n+    private final AtomicInteger speed = new AtomicInteger(5);\n+\n+    @GET\n+    @Path(\"slowdown\")\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public int slow() {\n+        return speed.updateAndGet(i -> {\n+            if (i == 0) {\n+                LOG.infof(\"Stop being lazy , you can't go slower than %s\", i);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyMzQ2NQ=="}, "originalCommit": {"oid": "70d4feebe9f9072544f3154929077140448cbc60"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTc0OTM2OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/logging-json/java/src/main/java/org/acme/logging/json/LoggingJsonResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwNzoxNzo0OVrOHpcsfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwOToyMDoxN1rOHpgs0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyMzgwNA==", "bodyText": "I don't understand this - I fell when I went to speed 9 but writes speed is back to 9 but then set it to 5...that does not feel right.", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r513223804", "createdAt": "2020-10-28T07:17:49Z", "author": {"login": "maxandersen"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/logging-json/java/src/main/java/org/acme/logging/json/LoggingJsonResource.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.acme.logging.json;\n+\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+@Path(\"/logging-json\")\n+public class LoggingJsonResource {\n+\n+    private static final Logger LOG = Logger.getLogger(LoggingJsonResource.class);\n+\n+    private final AtomicInteger speed = new AtomicInteger(5);\n+\n+    @GET\n+    @Path(\"slowdown\")\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public int slow() {\n+        return speed.updateAndGet(i -> {\n+            if (i == 0) {\n+                LOG.infof(\"Stop being lazy , you can't go slower than %s\", i);\n+                return i;\n+            }\n+            LOG.infof(\"Come on /faster \ud83d\ude80, your speed is %s\", i);\n+            return i - 1;\n+        });\n+    }\n+\n+    @GET\n+    @Path(\"faster\")\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public int faster() {\n+        final AtomicReference<RuntimeException> e = new AtomicReference<>();\n+        int newSpeed = speed.updateAndGet(i -> {\n+            if (i == 9) {\n+                e.set(new ServerErrorException(\"You just fell down \ud83e\udd15, speed is back to \" + i, Response.Status.SERVICE_UNAVAILABLE));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70d4feebe9f9072544f3154929077140448cbc60"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI4OTQyNw==", "bodyText": "I will just keep one endpoint to go faster, from 0 to 10, at eleven you fall and back to 0?", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r513289427", "createdAt": "2020-10-28T09:20:17Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/logging-json/java/src/main/java/org/acme/logging/json/LoggingJsonResource.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.acme.logging.json;\n+\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.concurrent.atomic.AtomicInteger;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+@Path(\"/logging-json\")\n+public class LoggingJsonResource {\n+\n+    private static final Logger LOG = Logger.getLogger(LoggingJsonResource.class);\n+\n+    private final AtomicInteger speed = new AtomicInteger(5);\n+\n+    @GET\n+    @Path(\"slowdown\")\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public int slow() {\n+        return speed.updateAndGet(i -> {\n+            if (i == 0) {\n+                LOG.infof(\"Stop being lazy , you can't go slower than %s\", i);\n+                return i;\n+            }\n+            LOG.infof(\"Come on /faster \ud83d\ude80, your speed is %s\", i);\n+            return i - 1;\n+        });\n+    }\n+\n+    @GET\n+    @Path(\"faster\")\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public int faster() {\n+        final AtomicReference<RuntimeException> e = new AtomicReference<>();\n+        int newSpeed = speed.updateAndGet(i -> {\n+            if (i == 9) {\n+                e.set(new ServerErrorException(\"You just fell down \ud83e\udd15, speed is back to \" + i, Response.Status.SERVICE_UNAVAILABLE));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzIyMzgwNA=="}, "originalCommit": {"oid": "70d4feebe9f9072544f3154929077140448cbc60"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDczNDg0OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/core/language/kotlin/codestart.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo0MTo0OVrOHum4KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDoxNjowMVrOHuoD-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzMzUxMg==", "bodyText": "It should be quarkus-kotlin here no ?", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r518633512", "createdAt": "2020-11-06T09:41:49Z", "author": {"login": "glefloch"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/core/language/kotlin/codestart.yml", "diffHunk": "@@ -5,4 +5,6 @@ language:\n     shared-data:\n       language:\n         dir:\n-          code: src/main/kotlin\n\\ No newline at end of file\n+          code: src/main/kotlin\n+    dependencies:\n+      io.quarkus:quarkus-scala", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7869cca1795d17dfebb918876b9d63c11ded5fa8"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1MjkyMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  io.quarkus:quarkus-scala\n          \n          \n            \n                  io.quarkus:quarkus-kotlin\n          \n      \n    \n    \n  \n\n@glefloch very good catch indeed!!!", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r518652921", "createdAt": "2020-11-06T10:16:01Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/core/language/kotlin/codestart.yml", "diffHunk": "@@ -5,4 +5,6 @@ language:\n     shared-data:\n       language:\n         dir:\n-          code: src/main/kotlin\n\\ No newline at end of file\n+          code: src/main/kotlin\n+    dependencies:\n+      io.quarkus:quarkus-scala", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzMzUxMg=="}, "originalCommit": {"oid": "7869cca1795d17dfebb918876b9d63c11ded5fa8"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDc1MjQ2OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/config-example/base/README.tpl.qute.md", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo0NjoxNlrOHunCtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMDoxODoxMFrOHuoIaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzNjIxMw==", "bodyText": "This configuration could be moved to codestart.yml and reused in the index.tpl.qute.html", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r518636213", "createdAt": "2020-11-06T09:46:16Z", "author": {"login": "glefloch"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/config-example/base/README.tpl.qute.md", "diffHunk": "@@ -0,0 +1,6 @@\n+# {title}\n+\n+<p>This example displays mach speed in your favourite unit, depending on the specified Quarkus configuration.</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7869cca1795d17dfebb918876b9d63c11ded5fa8"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1MjUxOQ==", "bodyText": "@glefloch for now I can't, it contains {config.file-name} which should be evaluted.. I didn't split it in two and will use config when they will be evaluated: #12792", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r518652519", "createdAt": "2020-11-06T10:15:14Z", "author": {"login": "ia3andy"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/config-example/base/README.tpl.qute.md", "diffHunk": "@@ -0,0 +1,6 @@\n+# {title}\n+\n+<p>This example displays mach speed in your favourite unit, depending on the specified Quarkus configuration.</p>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzNjIxMw=="}, "originalCommit": {"oid": "7869cca1795d17dfebb918876b9d63c11ded5fa8"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1NDA1Ng==", "bodyText": "oh ok, I hadn't seen that one ;)", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r518654056", "createdAt": "2020-11-06T10:18:10Z", "author": {"login": "glefloch"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/config-example/base/README.tpl.qute.md", "diffHunk": "@@ -0,0 +1,6 @@\n+# {title}\n+\n+<p>This example displays mach speed in your favourite unit, depending on the specified Quarkus configuration.</p>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzNjIxMw=="}, "originalCommit": {"oid": "7869cca1795d17dfebb918876b9d63c11ded5fa8"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDc2MDAyOnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/logging-json/kotlin/src/main/kotlin/org/acme/logging/json/LoggingJsonResource.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo0ODozNFrOHunHdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo0ODozNFrOHunHdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzNzQyOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.infof(message)\n          \n          \n            \n                    LOG.info(message)", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r518637428", "createdAt": "2020-11-06T09:48:34Z", "author": {"login": "glefloch"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/logging-json/kotlin/src/main/kotlin/org/acme/logging/json/LoggingJsonResource.kt", "diffHunk": "@@ -0,0 +1,35 @@\n+package org.acme.logging.json\n+\n+import org.jboss.logging.Logger\n+import java.util.*\n+import java.util.concurrent.atomic.AtomicInteger\n+import javax.ws.rs.GET\n+import javax.ws.rs.Path\n+import javax.ws.rs.Produces\n+import javax.ws.rs.ServerErrorException\n+import javax.ws.rs.core.MediaType\n+import javax.ws.rs.core.Response\n+\n+@Path(\"/logging-json\")\n+class LoggingJsonResource {\n+    private val speed = AtomicInteger(0)\n+    private val random = Random()\n+\n+    @GET\n+    @Path(\"faster\")\n+    @Produces(MediaType.TEXT_PLAIN)\n+    fun faster(): String {\n+        val s = speed.addAndGet(random.nextInt(200))\n+        if (s > SPEED_OF_SOUND_IN_METER_PER_SECOND) {\n+            throw ServerErrorException(\"\ud83d\udca5 SONIC BOOOOOM!!!\", Response.Status.SERVICE_UNAVAILABLE)\n+        }\n+        val message = \"Your jet aircraft speed is $s m/s.\"\n+        LOG.infof(message)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7869cca1795d17dfebb918876b9d63c11ded5fa8"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1MDc2MTI4OnYy", "diffSide": "RIGHT", "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/logging-json/java/src/main/java/org/acme/logging/json/LoggingJsonResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo0OTowMVrOHunINg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwOTo0OTowMVrOHunINg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODYzNzYyMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOG.infof(message);\n          \n          \n            \n                    LOG.info(message);", "url": "https://github.com/quarkusio/quarkus/pull/12895#discussion_r518637622", "createdAt": "2020-11-06T09:49:01Z", "author": {"login": "glefloch"}, "path": "devtools/platform-descriptor-json/src/main/resources/codestarts/quarkus/examples/logging-json/java/src/main/java/org/acme/logging/json/LoggingJsonResource.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package org.acme.logging.json;\n+\n+import org.jboss.logging.Logger;\n+\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.ServerErrorException;\n+import javax.ws.rs.core.MediaType;\n+import javax.ws.rs.core.Response;\n+import java.util.Random;\n+import java.util.concurrent.atomic.AtomicInteger;\n+\n+@Path(\"/logging-json\")\n+public class LoggingJsonResource {\n+\n+    private static final Logger LOG = Logger.getLogger(LoggingJsonResource.class);\n+    private static final int SPEED_OF_SOUND_IN_METER_PER_SECOND = 343;\n+\n+    private final AtomicInteger speed = new AtomicInteger(0);\n+    private final Random random = new Random();\n+\n+    @GET\n+    @Path(\"faster\")\n+    @Produces(MediaType.TEXT_PLAIN)\n+    public String faster() {\n+        final int s = speed.addAndGet(random.nextInt(200));\n+        if (s > SPEED_OF_SOUND_IN_METER_PER_SECOND) {\n+            throw new ServerErrorException(\"\ud83d\udca5 SONIC BOOOOOM!!!\", Response.Status.SERVICE_UNAVAILABLE);\n+        }\n+        String message = String.format(\"Your jet aircraft speed is %s m/s.\", s);\n+        LOG.infof(message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7869cca1795d17dfebb918876b9d63c11ded5fa8"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4235, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}