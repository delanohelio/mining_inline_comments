{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NzExNzM4", "number": 10598, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjoyNDozMFrOENHhwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjoyNDozMFrOENHhwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTkwMjczOnYy", "diffSide": "RIGHT", "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/AnnotationStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjoyNDozMFrOGvnyRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMjoyNDozMFrOGvnyRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU4ODEwMA==", "bodyText": "Small typo \ud83d\ude09\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static IllegalArgumentException unsupportedAnnoationTarget(AnnotationTarget target) {\n          \n          \n            \n                private static IllegalArgumentException unsupportedAnnotationTarget(AnnotationTarget target) {", "url": "https://github.com/quarkusio/quarkus/pull/10598#discussion_r452588100", "createdAt": "2020-07-10T02:24:30Z", "author": {"login": "gastaldi"}, "path": "independent-projects/arc/processor/src/main/java/io/quarkus/arc/processor/AnnotationStore.java", "diffHunk": "@@ -144,4 +148,65 @@ public Transformation transform() {\n \n     }\n \n+    /**\n+     * We cannot use annotation target directly as a key in a Map. Only {@link MethodInfo} overrides equals/hashCode.\n+     */\n+    static final class AnnotationTargetKey {\n+\n+        final AnnotationTarget target;\n+\n+        public AnnotationTargetKey(AnnotationTarget target) {\n+            this.target = target;\n+        }\n+\n+        @Override\n+        public boolean equals(Object obj) {\n+            if (this == obj) {\n+                return true;\n+            }\n+            if (obj == null) {\n+                return false;\n+            }\n+            if (getClass() != obj.getClass()) {\n+                return false;\n+            }\n+            AnnotationTargetKey other = (AnnotationTargetKey) obj;\n+            if (target.kind() != other.target.kind()) {\n+                return false;\n+            }\n+            switch (target.kind()) {\n+                case METHOD:\n+                    return target.asMethod().equals(other.target);\n+                case FIELD:\n+                    FieldInfo field = target.asField();\n+                    FieldInfo otherField = other.target.asField();\n+                    return Objects.equals(field.name(), otherField.name())\n+                            && Objects.equals(field.declaringClass().name(), otherField.declaringClass().name());\n+                case CLASS:\n+                    return target.asClass().name().equals(other.target.asClass().name());\n+                default:\n+                    throw unsupportedAnnoationTarget(target);\n+            }\n+        }\n+\n+        @Override\n+        public int hashCode() {\n+            switch (target.kind()) {\n+                case METHOD:\n+                    return target.asMethod().hashCode();\n+                case FIELD:\n+                    return Objects.hash(target.asField().name(), target.asField().declaringClass().name());\n+                case CLASS:\n+                    return target.asClass().name().hashCode();\n+                default:\n+                    throw unsupportedAnnoationTarget(target);\n+            }\n+        }\n+\n+    }\n+\n+    private static IllegalArgumentException unsupportedAnnoationTarget(AnnotationTarget target) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f42ce973299c4420608f1f8af2a52ca8f91614d"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2411, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}