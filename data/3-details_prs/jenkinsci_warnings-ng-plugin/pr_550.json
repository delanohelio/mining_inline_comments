{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NTA4ODQ4", "number": 550, "title": "[JENKINS-54072] Publish warnings in GitHub pull requests using Checks API", "bodyText": "Publish issues and statistics: https://github.com/XiongKezhi/codingstyle/pull/1/checks?check_run_id=858533400\n Add tests\n Parse HTML warning description\n beautify the output\n ...", "createdAt": "2020-07-10T15:38:11Z", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550", "merged": true, "mergeCommit": {"oid": "e25867884133ded261f7897d1bebe746ffe9a911"}, "closed": true, "closedAt": "2020-07-28T23:11:36Z", "author": {"login": "XiongKezhi"}, "timelineItems": {"totalCount": 37, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczlc9GAH2gAyNDQ3NTA4ODQ4Ojg0YmQ4NGI2NTE5YTVmMmZjYTBjNTA2YmZhZmNmMGU4OTVlMTQ1NzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5_Cm7AFqTQ1ODM2NTE0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/84bd84b6519a5f2fca0c506bfafcf0e895e14571", "committedDate": "2020-07-10T15:34:20Z", "message": "Published issues and statistics"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NTA4MTUz", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-446508153", "createdAt": "2020-07-10T15:46:27Z", "commit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo0NjoyN1rOGv8XWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo0NjoyN1rOGv8XWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyNTI3NQ==", "bodyText": "the case should be consistent for each section\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    + \"- ### %d Outstanding Issues\\n\"\n          \n          \n            \n                                    + \"- ### %d outstanding Issues\\n\"", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r452925275", "createdAt": "2020-07-10T15:46:27Z", "author": {"login": "timja"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -243,4 +277,64 @@ private QualityGateEvaluationMode determineQualityGateEvaluationMode(final Repor\n         }\n         return qualityGateEvaluationMode;\n     }\n+\n+    private String extractChecksSummary(final IssuesStatistics statistics) {\n+        return String.format(\"## %d issues in total:\\n\"\n+                        + \"- ### %d new issues\\n\"\n+                        + \"- ### %d Outstanding Issues\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NTA4NzM3", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-446508737", "createdAt": "2020-07-10T15:47:16Z", "commit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo0NzoxNlrOGv8ZJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo0NzoxNlrOGv8ZJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyNTczMw==", "bodyText": "I think presentation layer code should be extracted to a different class", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r452925733", "createdAt": "2020-07-10T15:47:16Z", "author": {"login": "timja"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -243,4 +277,64 @@ private QualityGateEvaluationMode determineQualityGateEvaluationMode(final Repor\n         }\n         return qualityGateEvaluationMode;\n     }\n+\n+    private String extractChecksSummary(final IssuesStatistics statistics) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NTEwMTE0", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-446510114", "createdAt": "2020-07-10T15:49:08Z", "commit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo0OTowOVrOGv8dGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo0OTowOVrOGv8dGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyNjc0Ng==", "bodyText": "hmm I see check annotations showing up on unchanged files do we want that?\nhttps://github.com/XiongKezhi/codingstyle/pull/1/files", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r452926746", "createdAt": "2020-07-10T15:49:09Z", "author": {"login": "timja"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -148,6 +159,29 @@ ResultAction attachAction(final TrendChartType trendChartType) {\n         return action;\n     }\n \n+    /**\n+     * Publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI.\n+     */\n+    public void publishChecks(final ResultAction action) {\n+        AnalysisResult result = action.getResult();\n+        IssuesStatistics totals = result.getTotals();\n+\n+        ChecksPublisher publisher = ChecksPublisherFactory.fromRun(run);\n+        publisher.publish(new ChecksDetailsBuilder()\n+                .withName(result.getId())\n+                .withStatus(ChecksStatus.COMPLETED)\n+                .withConclusion(extractChecksConclusion(result.getQualityGateStatus()))\n+                .withOutput(new ChecksOutputBuilder()\n+                        .withTitle(StringUtils.capitalize(result.getId()) + \" Warnings\")\n+                        .withSummary(extractChecksSummary(totals))\n+                        .withText(extractChecksText(totals))\n+                        .withAnnotations(extractChecksAnnotations(result.getIssues()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NTEyMzIw", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-446512320", "createdAt": "2020-07-10T15:52:12Z", "commit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo1MjoxMlrOGv8kHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo1MjoxMlrOGv8kHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyODU0MA==", "bodyText": "I don't think Neutral is the same as Warning\npossibly:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            return ChecksConclusion.NEUTRAL;\n          \n          \n            \n                            return ChecksConclusion.FAILURE;", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r452928540", "createdAt": "2020-07-10T15:52:12Z", "author": {"login": "timja"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -243,4 +277,64 @@ private QualityGateEvaluationMode determineQualityGateEvaluationMode(final Repor\n         }\n         return qualityGateEvaluationMode;\n     }\n+\n+    private String extractChecksSummary(final IssuesStatistics statistics) {\n+        return String.format(\"## %d issues in total:\\n\"\n+                        + \"- ### %d new issues\\n\"\n+                        + \"- ### %d Outstanding Issues\\n\"\n+                        + \"- ### %d delta issues\\n\"\n+                        + \"- ### %d fixed issues\",\n+                statistics.getTotalSize(), statistics.getNewSize(), statistics.getTotalSize() - statistics.getNewSize(),\n+                statistics.getDeltaSize(), statistics.getFixedSize());\n+    }\n+\n+    private String extractChecksText(final IssuesStatistics statistics) {\n+        return \"## Total Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getTotalLowSize(), statistics.getTotalNormalSize(),\n+                statistics.getTotalHighSize(), statistics.getTotalErrorSize())\n+                + \"## New Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getNewLowSize(), statistics.getNewNormalSize(),\n+                statistics.getNewHighSize(), statistics.getNewErrorSize())\n+                + \"## Delta Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getDeltaLowSize(), statistics.getDeltaNormalSize(),\n+                statistics.getDeltaHighSize(), statistics.getDeltaErrorSize());\n+    }\n+\n+    private String generateSeverityText(final int low, final int normal, final int high, final int error) {\n+        return \"* low: \" + low + \"\\n\"\n+                + \"* Normal: \" + normal + \"\\n\"\n+                + \"* High: \" + high + \"\\n\"\n+                + \"* Error: \" + error + \"\\n\";\n+    }\n+\n+    private ChecksConclusion extractChecksConclusion(final QualityGateStatus status) {\n+        switch (status) {\n+            case INACTIVE:\n+                return ChecksConclusion.SUCCESS;\n+            case FAILED:\n+                return ChecksConclusion.FAILURE;\n+            case WARNING:\n+                return ChecksConclusion.NEUTRAL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 101}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NTE2MDc4", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-446516078", "createdAt": "2020-07-10T15:57:37Z", "commit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo1NzozOFrOGv8v1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNTo1NzozOFrOGv8v1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzMTU0Mw==", "bodyText": "I looked into how safe this is,\nIt seems like it in the current state it will only work if all builds are using a github app.\nIf the API and implementation was separated out to different plugins (which I think it needs to be so that warnings-ng doesn't have to depend on github-branch-source) then it would fall back to a NullChecksPublisher and it would be far safer. In that case it would only fail for users with the github-checks plugin installed when they don't have a github app configured.\nThoughts?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r452931543", "createdAt": "2020-07-10T15:57:38Z", "author": {"login": "timja"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java", "diffHunk": "@@ -703,7 +702,8 @@ void publishResult(final Run<?, ?> run, final TaskListener listener, final Strin\n                 reportName, referenceJobName, referenceBuildId, ignoreQualityGate, ignoreFailedBuilds,\n                 getSourceCodeCharset(),\n                 new LogHandler(listener, loggerName, report.getReport()), statusHandler, failOnError);\n-        publisher.attachAction(trendChartType);\n+        ResultAction action = publisher.attachAction(trendChartType);\n+        publisher.publishChecks(action);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2NzIyNTM1", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-446722535", "createdAt": "2020-07-10T21:58:54Z", "commit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMTo1OTozMlrOGwGw_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQyMjo0OTo1M1rOGwHqRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5NTY3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .withName(result.getId())\n          \n          \n            \n                            .withName(labelProvider.getName())", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453095679", "createdAt": "2020-07-10T21:59:32Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -148,6 +159,29 @@ ResultAction attachAction(final TrendChartType trendChartType) {\n         return action;\n     }\n \n+    /**\n+     * Publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI.\n+     */\n+    public void publishChecks(final ResultAction action) {\n+        AnalysisResult result = action.getResult();\n+        IssuesStatistics totals = result.getTotals();\n+\n+        ChecksPublisher publisher = ChecksPublisherFactory.fromRun(run);\n+        publisher.publish(new ChecksDetailsBuilder()\n+                .withName(result.getId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5NjQ4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    .withTitle(StringUtils.capitalize(result.getId()) + \" Warnings\")\n          \n          \n            \n                                    .withTitle(labelProvider.getLinkName())", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453096488", "createdAt": "2020-07-10T22:01:18Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -148,6 +159,29 @@ ResultAction attachAction(final TrendChartType trendChartType) {\n         return action;\n     }\n \n+    /**\n+     * Publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI.\n+     */\n+    public void publishChecks(final ResultAction action) {\n+        AnalysisResult result = action.getResult();\n+        IssuesStatistics totals = result.getTotals();\n+\n+        ChecksPublisher publisher = ChecksPublisherFactory.fromRun(run);\n+        publisher.publish(new ChecksDetailsBuilder()\n+                .withName(result.getId())\n+                .withStatus(ChecksStatus.COMPLETED)\n+                .withConclusion(extractChecksConclusion(result.getQualityGateStatus()))\n+                .withOutput(new ChecksOutputBuilder()\n+                        .withTitle(StringUtils.capitalize(result.getId()) + \" Warnings\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzA5OTI4MQ==", "bodyText": "I think it can happen that files will get a new (or old warning) that is in a file that is not part of the PR. Simple use case: add a new checkstyle rule to the configuration. Maybe it makes sense to add it as a configurable option later?\nI think in the beginning we should start with new warnings only:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    .withAnnotations(extractChecksAnnotations(result.getIssues()))\n          \n          \n            \n                                    .withAnnotations(extractChecksAnnotations(result.getNewIssues()))\n          \n      \n    \n    \n  \n\n(It would make sense to have this configurable for a job later)", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453099281", "createdAt": "2020-07-10T22:08:10Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -148,6 +159,29 @@ ResultAction attachAction(final TrendChartType trendChartType) {\n         return action;\n     }\n \n+    /**\n+     * Publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI.\n+     */\n+    public void publishChecks(final ResultAction action) {\n+        AnalysisResult result = action.getResult();\n+        IssuesStatistics totals = result.getTotals();\n+\n+        ChecksPublisher publisher = ChecksPublisherFactory.fromRun(run);\n+        publisher.publish(new ChecksDetailsBuilder()\n+                .withName(result.getId())\n+                .withStatus(ChecksStatus.COMPLETED)\n+                .withConclusion(extractChecksConclusion(result.getQualityGateStatus()))\n+                .withOutput(new ChecksOutputBuilder()\n+                        .withTitle(StringUtils.capitalize(result.getId()) + \" Warnings\")\n+                        .withSummary(extractChecksSummary(totals))\n+                        .withText(extractChecksText(totals))\n+                        .withAnnotations(extractChecksAnnotations(result.getIssues()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyNjc0Ng=="}, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwNDMzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .withDetailsURL(result.getOwner().getParent().getAbsoluteUrl() + result.getOwner().getSearchUrl()\n          \n          \n            \n                                    + result.getId())\n          \n          \n            \n                            .withDetailsURL(action.getAbsoluteUrl())", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453104331", "createdAt": "2020-07-10T22:25:58Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -148,6 +159,29 @@ ResultAction attachAction(final TrendChartType trendChartType) {\n         return action;\n     }\n \n+    /**\n+     * Publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI.\n+     */\n+    public void publishChecks(final ResultAction action) {\n+        AnalysisResult result = action.getResult();\n+        IssuesStatistics totals = result.getTotals();\n+\n+        ChecksPublisher publisher = ChecksPublisherFactory.fromRun(run);\n+        publisher.publish(new ChecksDetailsBuilder()\n+                .withName(result.getId())\n+                .withStatus(ChecksStatus.COMPLETED)\n+                .withConclusion(extractChecksConclusion(result.getQualityGateStatus()))\n+                .withOutput(new ChecksOutputBuilder()\n+                        .withTitle(StringUtils.capitalize(result.getId()) + \" Warnings\")\n+                        .withSummary(extractChecksSummary(totals))\n+                        .withText(extractChecksText(totals))\n+                        .withAnnotations(extractChecksAnnotations(result.getIssues()))\n+                        .build())\n+                .withDetailsURL(result.getOwner().getParent().getAbsoluteUrl() + result.getOwner().getSearchUrl()\n+                        + result.getId())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwNDYxMw==", "bodyText": "Required later:\nLabelProvider labelProvider = action.getLabelProvider();", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453104613", "createdAt": "2020-07-10T22:27:03Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -148,6 +159,29 @@ ResultAction attachAction(final TrendChartType trendChartType) {\n         return action;\n     }\n \n+    /**\n+     * Publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI.\n+     */\n+    public void publishChecks(final ResultAction action) {\n+        AnalysisResult result = action.getResult();\n+        IssuesStatistics totals = result.getTotals();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwNDgzMQ==", "bodyText": "This code would be better placed in a separate class", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453104831", "createdAt": "2020-07-10T22:27:55Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -148,6 +159,29 @@ ResultAction attachAction(final TrendChartType trendChartType) {\n         return action;\n     }\n \n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwNjg1Nw==", "bodyText": "On the other hand: in order to test everything it makes sense to use all warnings. Otherwise we need to change the sources to get some output...", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453106857", "createdAt": "2020-07-10T22:35:32Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -148,6 +159,29 @@ ResultAction attachAction(final TrendChartType trendChartType) {\n         return action;\n     }\n \n+    /**\n+     * Publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI.\n+     */\n+    public void publishChecks(final ResultAction action) {\n+        AnalysisResult result = action.getResult();\n+        IssuesStatistics totals = result.getTotals();\n+\n+        ChecksPublisher publisher = ChecksPublisherFactory.fromRun(run);\n+        publisher.publish(new ChecksDetailsBuilder()\n+                .withName(result.getId())\n+                .withStatus(ChecksStatus.COMPLETED)\n+                .withConclusion(extractChecksConclusion(result.getQualityGateStatus()))\n+                .withOutput(new ChecksOutputBuilder()\n+                        .withTitle(StringUtils.capitalize(result.getId()) + \" Warnings\")\n+                        .withSummary(extractChecksSummary(totals))\n+                        .withText(extractChecksText(totals))\n+                        .withAnnotations(extractChecksAnnotations(result.getIssues()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyNjc0Ng=="}, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwNzA4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return \"* low: \" + low + \"\\n\"\n          \n          \n            \n                    return \"* Low: \" + low + \"\\n\"", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453107083", "createdAt": "2020-07-10T22:36:25Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -243,4 +277,64 @@ private QualityGateEvaluationMode determineQualityGateEvaluationMode(final Repor\n         }\n         return qualityGateEvaluationMode;\n     }\n+\n+    private String extractChecksSummary(final IssuesStatistics statistics) {\n+        return String.format(\"## %d issues in total:\\n\"\n+                        + \"- ### %d new issues\\n\"\n+                        + \"- ### %d Outstanding Issues\\n\"\n+                        + \"- ### %d delta issues\\n\"\n+                        + \"- ### %d fixed issues\",\n+                statistics.getTotalSize(), statistics.getNewSize(), statistics.getTotalSize() - statistics.getNewSize(),\n+                statistics.getDeltaSize(), statistics.getFixedSize());\n+    }\n+\n+    private String extractChecksText(final IssuesStatistics statistics) {\n+        return \"## Total Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getTotalLowSize(), statistics.getTotalNormalSize(),\n+                statistics.getTotalHighSize(), statistics.getTotalErrorSize())\n+                + \"## New Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getNewLowSize(), statistics.getNewNormalSize(),\n+                statistics.getNewHighSize(), statistics.getNewErrorSize())\n+                + \"## Delta Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getDeltaLowSize(), statistics.getDeltaNormalSize(),\n+                statistics.getDeltaHighSize(), statistics.getDeltaErrorSize());\n+    }\n+\n+    private String generateSeverityText(final int low, final int normal, final int high, final int error) {\n+        return \"* low: \" + low + \"\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwNzE3NA==", "bodyText": "I think it would make more sense to sort the other way round (in the output)", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453107174", "createdAt": "2020-07-10T22:36:53Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -243,4 +277,64 @@ private QualityGateEvaluationMode determineQualityGateEvaluationMode(final Repor\n         }\n         return qualityGateEvaluationMode;\n     }\n+\n+    private String extractChecksSummary(final IssuesStatistics statistics) {\n+        return String.format(\"## %d issues in total:\\n\"\n+                        + \"- ### %d new issues\\n\"\n+                        + \"- ### %d Outstanding Issues\\n\"\n+                        + \"- ### %d delta issues\\n\"\n+                        + \"- ### %d fixed issues\",\n+                statistics.getTotalSize(), statistics.getNewSize(), statistics.getTotalSize() - statistics.getNewSize(),\n+                statistics.getDeltaSize(), statistics.getFixedSize());\n+    }\n+\n+    private String extractChecksText(final IssuesStatistics statistics) {\n+        return \"## Total Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getTotalLowSize(), statistics.getTotalNormalSize(),\n+                statistics.getTotalHighSize(), statistics.getTotalErrorSize())\n+                + \"## New Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getNewLowSize(), statistics.getNewNormalSize(),\n+                statistics.getNewHighSize(), statistics.getNewErrorSize())\n+                + \"## Delta Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getDeltaLowSize(), statistics.getDeltaNormalSize(),\n+                statistics.getDeltaHighSize(), statistics.getDeltaErrorSize());\n+    }\n+\n+    private String generateSeverityText(final int low, final int normal, final int high, final int error) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwNzUxMA==", "bodyText": "WARNING vs. FAILED is a Jenkins specific concept that does not exist in Github", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453107510", "createdAt": "2020-07-10T22:38:17Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -243,4 +277,64 @@ private QualityGateEvaluationMode determineQualityGateEvaluationMode(final Repor\n         }\n         return qualityGateEvaluationMode;\n     }\n+\n+    private String extractChecksSummary(final IssuesStatistics statistics) {\n+        return String.format(\"## %d issues in total:\\n\"\n+                        + \"- ### %d new issues\\n\"\n+                        + \"- ### %d Outstanding Issues\\n\"\n+                        + \"- ### %d delta issues\\n\"\n+                        + \"- ### %d fixed issues\",\n+                statistics.getTotalSize(), statistics.getNewSize(), statistics.getTotalSize() - statistics.getNewSize(),\n+                statistics.getDeltaSize(), statistics.getFixedSize());\n+    }\n+\n+    private String extractChecksText(final IssuesStatistics statistics) {\n+        return \"## Total Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getTotalLowSize(), statistics.getTotalNormalSize(),\n+                statistics.getTotalHighSize(), statistics.getTotalErrorSize())\n+                + \"## New Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getNewLowSize(), statistics.getNewNormalSize(),\n+                statistics.getNewHighSize(), statistics.getNewErrorSize())\n+                + \"## Delta Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getDeltaLowSize(), statistics.getDeltaNormalSize(),\n+                statistics.getDeltaHighSize(), statistics.getDeltaErrorSize());\n+    }\n+\n+    private String generateSeverityText(final int low, final int normal, final int high, final int error) {\n+        return \"* low: \" + low + \"\\n\"\n+                + \"* Normal: \" + normal + \"\\n\"\n+                + \"* High: \" + high + \"\\n\"\n+                + \"* Error: \" + error + \"\\n\";\n+    }\n+\n+    private ChecksConclusion extractChecksConclusion(final QualityGateStatus status) {\n+        switch (status) {\n+            case INACTIVE:\n+                return ChecksConclusion.SUCCESS;\n+            case FAILED:\n+                return ChecksConclusion.FAILURE;\n+            case WARNING:\n+                return ChecksConclusion.NEUTRAL;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkyODU0MA=="}, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEwODM1OQ==", "bodyText": "The warnings plugin uses the magic value of 0 to indicate a warning for the whole file. Maybe I should map that to real values in analysis-model. However, columns can be 0 if not used, is this a problem or do we need to suppress the call in such cases?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453108359", "createdAt": "2020-07-10T22:41:42Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesPublisher.java", "diffHunk": "@@ -243,4 +277,64 @@ private QualityGateEvaluationMode determineQualityGateEvaluationMode(final Repor\n         }\n         return qualityGateEvaluationMode;\n     }\n+\n+    private String extractChecksSummary(final IssuesStatistics statistics) {\n+        return String.format(\"## %d issues in total:\\n\"\n+                        + \"- ### %d new issues\\n\"\n+                        + \"- ### %d Outstanding Issues\\n\"\n+                        + \"- ### %d delta issues\\n\"\n+                        + \"- ### %d fixed issues\",\n+                statistics.getTotalSize(), statistics.getNewSize(), statistics.getTotalSize() - statistics.getNewSize(),\n+                statistics.getDeltaSize(), statistics.getFixedSize());\n+    }\n+\n+    private String extractChecksText(final IssuesStatistics statistics) {\n+        return \"## Total Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getTotalLowSize(), statistics.getTotalNormalSize(),\n+                statistics.getTotalHighSize(), statistics.getTotalErrorSize())\n+                + \"## New Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getNewLowSize(), statistics.getNewNormalSize(),\n+                statistics.getNewHighSize(), statistics.getNewErrorSize())\n+                + \"## Delta Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getDeltaLowSize(), statistics.getDeltaNormalSize(),\n+                statistics.getDeltaHighSize(), statistics.getDeltaErrorSize());\n+    }\n+\n+    private String generateSeverityText(final int low, final int normal, final int high, final int error) {\n+        return \"* low: \" + low + \"\\n\"\n+                + \"* Normal: \" + normal + \"\\n\"\n+                + \"* High: \" + high + \"\\n\"\n+                + \"* Error: \" + error + \"\\n\";\n+    }\n+\n+    private ChecksConclusion extractChecksConclusion(final QualityGateStatus status) {\n+        switch (status) {\n+            case INACTIVE:\n+                return ChecksConclusion.SUCCESS;\n+            case FAILED:\n+                return ChecksConclusion.FAILURE;\n+            case WARNING:\n+                return ChecksConclusion.NEUTRAL;\n+            case PASSED:\n+                return ChecksConclusion.SUCCESS;\n+            default:\n+                throw new IllegalArgumentException(\"Unsupported quality gate status: \" + status);\n+        }\n+    }\n+\n+    private List<ChecksAnnotation> extractChecksAnnotations(final Report issues) {\n+        return issues.stream()\n+                .map(issue -> new ChecksAnnotationBuilder()\n+                        .withPath(issue.getFileName())\n+                        .withTitle(issue.getType())\n+                        .withAnnotationLevel(ChecksAnnotationLevel.WARNING)\n+                        .withMessage(issue.getSeverity() + \": \" + issue.getMessage())\n+                        .withStartLine(issue.getLineStart())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzExMDM0MA==", "bodyText": "We cannot release the changes in the warning plugin before we do an official release of the Checks API to the update center anyway.\nShouldn't the ChecksPublisherFactory return a NullPublisher if the GitHub App is not configured for the run?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453110340", "createdAt": "2020-07-10T22:49:53Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java", "diffHunk": "@@ -703,7 +702,8 @@ void publishResult(final Run<?, ?> run, final TaskListener listener, final Strin\n                 reportName, referenceJobName, referenceBuildId, ignoreQualityGate, ignoreFailedBuilds,\n                 getSourceCodeCharset(),\n                 new LogHandler(listener, loggerName, report.getReport()), statusHandler, failOnError);\n-        publisher.attachAction(trendChartType);\n+        ResultAction action = publisher.attachAction(trendChartType);\n+        publisher.publishChecks(action);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjkzMTU0Mw=="}, "originalCommit": {"oid": "84bd84b6519a5f2fca0c506bfafcf0e895e14571"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a237d0043011bb986f232e5838801b16d52fc2f9", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/a237d0043011bb986f232e5838801b16d52fc2f9", "committedDate": "2020-07-11T14:09:49Z", "message": "Add WarningChecksPublisher"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODExOTUx", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-446811951", "createdAt": "2020-07-11T16:04:19Z", "commit": {"oid": "a237d0043011bb986f232e5838801b16d52fc2f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNjowNDoxOVrOGwNrHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNjowNDoxOVrOGwNrHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIwODg2Mg==", "bodyText": "Anything else can we do here for INACTIVE quality gate?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453208862", "createdAt": "2020-07-11T16:04:19Z", "author": {"login": "XiongKezhi"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -0,0 +1,120 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import edu.hm.hafner.analysis.Report;\n+\n+import hudson.model.Result;\n+\n+import io.jenkins.plugins.analysis.core.model.AnalysisResult;\n+import io.jenkins.plugins.analysis.core.model.ResultAction;\n+import io.jenkins.plugins.analysis.core.model.StaticAnalysisLabelProvider;\n+import io.jenkins.plugins.analysis.core.util.IssuesStatistics;\n+import io.jenkins.plugins.analysis.core.util.QualityGateStatus;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksPublisher;\n+import io.jenkins.plugins.checks.api.ChecksPublisherFactory;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+import static hudson.model.Result.*;\n+\n+/**\n+ * Publishes warnings as checks to scm platforms.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+class WarningChecksPublisher {\n+    private final ResultAction action;\n+\n+    WarningChecksPublisher(final ResultAction action) {\n+        this.action = action;\n+    }\n+\n+    /**\n+     * Actually publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI.\n+     */\n+    void publishChecks() {\n+        AnalysisResult result = action.getResult();\n+        IssuesStatistics totals = result.getTotals();\n+\n+        StaticAnalysisLabelProvider labelProvider = action.getLabelProvider();\n+\n+        ChecksPublisher publisher = ChecksPublisherFactory.fromRun(action.getOwner());\n+        publisher.publish(new ChecksDetailsBuilder()\n+                .withName(labelProvider.getId())\n+                .withStatus(ChecksStatus.COMPLETED)\n+                .withConclusion(extractChecksConclusion(result.getQualityGateStatus()))\n+                .withOutput(new ChecksOutputBuilder()\n+                        .withTitle(labelProvider.getLinkName())\n+                        .withSummary(extractChecksSummary(totals))\n+                        .withText(extractChecksText(totals))\n+                        .withAnnotations(extractChecksAnnotations(result.getNewIssues()))\n+                        .build())\n+                .withDetailsURL(action.getAbsoluteUrl())\n+                .build());\n+    }\n+\n+    private String extractChecksSummary(final IssuesStatistics statistics) {\n+        return String.format(\"## %d issues in total:\\n\"\n+                        + \"- ### %d new issues\\n\"\n+                        + \"- ### %d outstanding Issues\\n\"\n+                        + \"- ### %d delta issues\\n\"\n+                        + \"- ### %d fixed issues\",\n+                statistics.getTotalSize(), statistics.getNewSize(), statistics.getTotalSize() - statistics.getNewSize(),\n+                statistics.getDeltaSize(), statistics.getFixedSize());\n+    }\n+\n+    private String extractChecksText(final IssuesStatistics statistics) {\n+        return \"## Total Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getTotalLowSize(), statistics.getTotalNormalSize(),\n+                statistics.getTotalHighSize(), statistics.getTotalErrorSize())\n+                + \"## New Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getNewLowSize(), statistics.getNewNormalSize(),\n+                statistics.getNewHighSize(), statistics.getNewErrorSize())\n+                + \"## Delta Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getDeltaLowSize(), statistics.getDeltaNormalSize(),\n+                statistics.getDeltaHighSize(), statistics.getDeltaErrorSize());\n+    }\n+\n+    private String generateSeverityText(final int low, final int normal, final int high, final int error) {\n+        return \"* Error: \" + error + \"\\n\"\n+                + \"* High: \" + high + \"\\n\"\n+                + \"* Normal: \" + normal + \"\\n\"\n+                + \"* Low: \" + low + \"\\n\";\n+    }\n+\n+    private ChecksConclusion extractChecksConclusion(final QualityGateStatus status) {\n+        switch (status) {\n+            case INACTIVE: // TODO:  determine conclusion for it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a237d0043011bb986f232e5838801b16d52fc2f9"}, "originalPosition": 94}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e1e25913aab0f15f972cf8605ec7b610675f6c5", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/9e1e25913aab0f15f972cf8605ec7b610675f6c5", "committedDate": "2020-07-12T13:59:40Z", "message": "Use label name for check name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODkwNDY1", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-446890465", "createdAt": "2020-07-12T15:58:38Z", "commit": {"oid": "a237d0043011bb986f232e5838801b16d52fc2f9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNTo1ODozOFrOGwVSmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxNTo1ODozOFrOGwVSmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzMzMzY1OA==", "bodyText": "how about\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Actually publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI.\n          \n          \n            \n                 * Publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI, e.g. GitHub checks.", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453333658", "createdAt": "2020-07-12T15:58:38Z", "author": {"login": "timja"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -0,0 +1,120 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import edu.hm.hafner.analysis.Report;\n+\n+import hudson.model.Result;\n+\n+import io.jenkins.plugins.analysis.core.model.AnalysisResult;\n+import io.jenkins.plugins.analysis.core.model.ResultAction;\n+import io.jenkins.plugins.analysis.core.model.StaticAnalysisLabelProvider;\n+import io.jenkins.plugins.analysis.core.util.IssuesStatistics;\n+import io.jenkins.plugins.analysis.core.util.QualityGateStatus;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksPublisher;\n+import io.jenkins.plugins.checks.api.ChecksPublisherFactory;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+import static hudson.model.Result.*;\n+\n+/**\n+ * Publishes warnings as checks to scm platforms.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+class WarningChecksPublisher {\n+    private final ResultAction action;\n+\n+    WarningChecksPublisher(final ResultAction action) {\n+        this.action = action;\n+    }\n+\n+    /**\n+     * Actually publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a237d0043011bb986f232e5838801b16d52fc2f9"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b98237755af8d1d1861f2bda6efeb6c637ea0761", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/b98237755af8d1d1861f2bda6efeb6c637ea0761", "committedDate": "2020-07-12T16:52:28Z", "message": "Add checks publishing disable configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f36d693948c4c3d45310d5cc677cc202c0efe4c", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/2f36d693948c4c3d45310d5cc677cc202c0efe4c", "committedDate": "2020-07-12T16:55:04Z", "message": "Improve WarningChecksPublisher doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2ODk5NDk2", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-446899496", "createdAt": "2020-07-12T18:17:39Z", "commit": {"oid": "2f36d693948c4c3d45310d5cc677cc202c0efe4c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxODoxNzo0MFrOGwWHhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxODoxODoxMFrOGwWHrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM0NzIwNA==", "bodyText": "Booleans should not include is at the start the getter will include that", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453347204", "createdAt": "2020-07-12T18:17:40Z", "author": {"login": "timja"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/PublishIssuesStep.java", "diffHunk": "@@ -58,6 +58,7 @@\n     private String referenceJobName = StringUtils.EMPTY;\n     private String referenceBuildId = StringUtils.EMPTY;\n     private boolean failOnError = false; // by default, it should not fail on error\n+    private boolean isChecksPublishingDisabled = false; // by default, warnings should be published to SCM platforms", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f36d693948c4c3d45310d5cc677cc202c0efe4c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM0NzI0NA==", "bodyText": "Should be isChecksPublishingDisabled and the pmd disable removed", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r453347244", "createdAt": "2020-07-12T18:18:10Z", "author": {"login": "timja"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java", "diffHunk": "@@ -362,6 +363,21 @@ public void setForensicsDisabled(final boolean forensicsDisabled) {\n         isForensicsDisabled = forensicsDisabled;\n     }\n \n+    /**\n+     * Returns whether checks publishing should be disabled.\n+     *\n+     * @return {@code true} if checks publishing should be disabled\n+     */\n+    @SuppressWarnings(\"PMD.BooleanGetMethodName\")\n+    public boolean getChecksPublishingDisabled() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f36d693948c4c3d45310d5cc677cc202c0efe4c"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02e3a70424737b979403d797e661826008de4f75", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/02e3a70424737b979403d797e661826008de4f75", "committedDate": "2020-07-14T05:16:00Z", "message": "Tweak checks configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff0cb0c740f3ade13b7d0b146225b377f6b76a46", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/ff0cb0c740f3ade13b7d0b146225b377f6b76a46", "committedDate": "2020-07-14T08:28:33Z", "message": "Add tests for WarningChecksPublisher"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3OTA4NTY2", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-447908566", "createdAt": "2020-07-14T08:43:50Z", "commit": {"oid": "02e3a70424737b979403d797e661826008de4f75"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODo0Mzo1MFrOGxKKlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwODo0Mzo1MFrOGxKKlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDE5OTk1OQ==", "bodyText": "Note that using a positive setting and true as default will only work for new freestyle jobs. Existing jobs will not publish the results and need to be manually reconfigured. (This is no big thing, I just want to make sure that you are aware of this issue.)", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r454199959", "createdAt": "2020-07-14T08:43:50Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java", "diffHunk": "@@ -103,7 +103,7 @@\n     private boolean isBlameDisabled;\n     private boolean isForensicsDisabled;\n \n-    private boolean isChecksPublishingDisabled;\n+    private boolean publishChecks = true; // by default, checks will be published", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02e3a70424737b979403d797e661826008de4f75"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4230adf53d5dcd2d3710375d349969e90f6d427f", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/4230adf53d5dcd2d3710375d349969e90f6d427f", "committedDate": "2020-07-14T09:11:23Z", "message": "Add tests for WarningChecksPublisher"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4ODcwNDk2", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-448870496", "createdAt": "2020-07-15T11:38:59Z", "commit": {"oid": "4230adf53d5dcd2d3710375d349969e90f6d427f"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMTozODo1OVrOGx6MYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMTo1ODo1OFrOGx60TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4Njg1MA==", "bodyText": "Remove // comments. These comments typically get out of sync soon.", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r454986850", "createdAt": "2020-07-15T11:38:59Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerTest;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerTest {\n+    private static final String OLD_REPORT_FILE = \"checkstyle.xml\";\n+    private static final String NEW_REPORT_FILE = \"checkstyle1.xml\";\n+\n+    /**\n+     * Verifies that {@link WarningChecksPublisher} constructs the {@link ChecksDetails} correctly\n+     * with only new issues.\n+     */\n+    @Test\n+    public void shouldCreateChecksDetailsWithNewIssuesAsAnnotations() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(OLD_REPORT_FILE);\n+        enableCheckStyleWarnings(project);\n+\n+        // trigger a build using the report file with 4 issues", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4230adf53d5dcd2d3710375d349969e90f6d427f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4NzQwNQ==", "bodyText": "If you have 2 builds use a variable reference for the first one and run or build for the second one (to make it consistent to most of my other tests)", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r454987405", "createdAt": "2020-07-15T11:40:06Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerTest;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerTest {\n+    private static final String OLD_REPORT_FILE = \"checkstyle.xml\";\n+    private static final String NEW_REPORT_FILE = \"checkstyle1.xml\";\n+\n+    /**\n+     * Verifies that {@link WarningChecksPublisher} constructs the {@link ChecksDetails} correctly\n+     * with only new issues.\n+     */\n+    @Test\n+    public void shouldCreateChecksDetailsWithNewIssuesAsAnnotations() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(OLD_REPORT_FILE);\n+        enableCheckStyleWarnings(project);\n+\n+        // trigger a build using the report file with 4 issues\n+        Run<?, ?> run = buildSuccessfully(project);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4230adf53d5dcd2d3710375d349969e90f6d427f"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4NzY1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    + \"- ### %d outstanding Issues\\n\"\n          \n          \n            \n                                    + \"- ### %d outstanding issues\\n\"", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r454987655", "createdAt": "2020-07-15T11:40:38Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import edu.hm.hafner.analysis.Report;\n+import edu.hm.hafner.util.VisibleForTesting;\n+\n+import io.jenkins.plugins.analysis.core.model.AnalysisResult;\n+import io.jenkins.plugins.analysis.core.model.ResultAction;\n+import io.jenkins.plugins.analysis.core.model.StaticAnalysisLabelProvider;\n+import io.jenkins.plugins.analysis.core.util.IssuesStatistics;\n+import io.jenkins.plugins.analysis.core.util.QualityGateStatus;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksPublisher;\n+import io.jenkins.plugins.checks.api.ChecksPublisherFactory;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+/**\n+ * Publishes warnings as checks to scm platforms.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+class WarningChecksPublisher {\n+    private final ResultAction action;\n+\n+    WarningChecksPublisher(final ResultAction action) {\n+        this.action = action;\n+    }\n+\n+    /**\n+     * Publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI,\n+     * e.g. GitHub checks.\n+     */\n+    void publishChecks() {\n+        ChecksPublisher publisher = ChecksPublisherFactory.fromRun(action.getOwner());\n+        publisher.publish(extractChecksDetails());\n+    }\n+\n+    @VisibleForTesting\n+    ChecksDetails extractChecksDetails() {\n+        AnalysisResult result = action.getResult();\n+        IssuesStatistics totals = result.getTotals();\n+\n+        StaticAnalysisLabelProvider labelProvider = action.getLabelProvider();\n+\n+        return new ChecksDetailsBuilder()\n+                .withName(labelProvider.getName())\n+                .withStatus(ChecksStatus.COMPLETED)\n+                .withConclusion(extractChecksConclusion(result.getQualityGateStatus()))\n+                .withOutput(new ChecksOutputBuilder()\n+                        .withTitle(labelProvider.getLinkName())\n+                        .withSummary(extractChecksSummary(totals))\n+                        .withText(extractChecksText(totals))\n+                        .withAnnotations(extractChecksAnnotations(result.getNewIssues()))\n+                        .build())\n+                .withDetailsURL(action.getAbsoluteUrl())\n+                .build();\n+    }\n+\n+    private String extractChecksSummary(final IssuesStatistics statistics) {\n+        return String.format(\"## %d issues in total:\\n\"\n+                        + \"- ### %d new issues\\n\"\n+                        + \"- ### %d outstanding Issues\\n\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4230adf53d5dcd2d3710375d349969e90f6d427f"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5NTY4MA==", "bodyText": "inline variable", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r454995680", "createdAt": "2020-07-15T11:56:18Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerTest;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerTest {\n+    private static final String OLD_REPORT_FILE = \"checkstyle.xml\";\n+    private static final String NEW_REPORT_FILE = \"checkstyle1.xml\";\n+\n+    /**\n+     * Verifies that {@link WarningChecksPublisher} constructs the {@link ChecksDetails} correctly\n+     * with only new issues.\n+     */\n+    @Test\n+    public void shouldCreateChecksDetailsWithNewIssuesAsAnnotations() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(OLD_REPORT_FILE);\n+        enableCheckStyleWarnings(project);\n+\n+        // trigger a build using the report file with 4 issues\n+        Run<?, ?> run = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(run))\n+                .hasTotalSize(4)\n+                .hasNewSize(0);\n+\n+        // trigger a build using the report file with 2 new issues\n+        copyMultipleFilesToWorkspaceWithSuffix(project, NEW_REPORT_FILE);\n+        run = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(run))\n+                .hasTotalSize(6)\n+                .hasNewSize(2);\n+\n+        // extract details from result\n+        WarningChecksPublisher publisher = new WarningChecksPublisher(getResultAction(run));\n+        ChecksDetails details = publisher.extractChecksDetails();\n+\n+        // verify extracted details\n+        ChecksDetails expectedDetails = createChecksDetailsBasedOnReportFile();\n+        assertThat(details)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4230adf53d5dcd2d3710375d349969e90f6d427f"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5NTcyOQ==", "bodyText": "inline", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r454995729", "createdAt": "2020-07-15T11:56:25Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerTest;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerTest {\n+    private static final String OLD_REPORT_FILE = \"checkstyle.xml\";\n+    private static final String NEW_REPORT_FILE = \"checkstyle1.xml\";\n+\n+    /**\n+     * Verifies that {@link WarningChecksPublisher} constructs the {@link ChecksDetails} correctly\n+     * with only new issues.\n+     */\n+    @Test\n+    public void shouldCreateChecksDetailsWithNewIssuesAsAnnotations() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(OLD_REPORT_FILE);\n+        enableCheckStyleWarnings(project);\n+\n+        // trigger a build using the report file with 4 issues\n+        Run<?, ?> run = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(run))\n+                .hasTotalSize(4)\n+                .hasNewSize(0);\n+\n+        // trigger a build using the report file with 2 new issues\n+        copyMultipleFilesToWorkspaceWithSuffix(project, NEW_REPORT_FILE);\n+        run = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(run))\n+                .hasTotalSize(6)\n+                .hasNewSize(2);\n+\n+        // extract details from result\n+        WarningChecksPublisher publisher = new WarningChecksPublisher(getResultAction(run));\n+        ChecksDetails details = publisher.extractChecksDetails();\n+\n+        // verify extracted details\n+        ChecksDetails expectedDetails = createChecksDetailsBasedOnReportFile();\n+        assertThat(details)\n+                .usingRecursiveComparison()\n+                .ignoringFields(\"detailsURL\")\n+                .isEqualTo(expectedDetails);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4230adf53d5dcd2d3710375d349969e90f6d427f"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5NTkxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private ChecksDetails createChecksDetailsBasedOnReportFile() {\n          \n          \n            \n                private ChecksDetails createExpectedDetails() {", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r454995914", "createdAt": "2020-07-15T11:56:47Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerTest;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerTest {\n+    private static final String OLD_REPORT_FILE = \"checkstyle.xml\";\n+    private static final String NEW_REPORT_FILE = \"checkstyle1.xml\";\n+\n+    /**\n+     * Verifies that {@link WarningChecksPublisher} constructs the {@link ChecksDetails} correctly\n+     * with only new issues.\n+     */\n+    @Test\n+    public void shouldCreateChecksDetailsWithNewIssuesAsAnnotations() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(OLD_REPORT_FILE);\n+        enableCheckStyleWarnings(project);\n+\n+        // trigger a build using the report file with 4 issues\n+        Run<?, ?> run = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(run))\n+                .hasTotalSize(4)\n+                .hasNewSize(0);\n+\n+        // trigger a build using the report file with 2 new issues\n+        copyMultipleFilesToWorkspaceWithSuffix(project, NEW_REPORT_FILE);\n+        run = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(run))\n+                .hasTotalSize(6)\n+                .hasNewSize(2);\n+\n+        // extract details from result\n+        WarningChecksPublisher publisher = new WarningChecksPublisher(getResultAction(run));\n+        ChecksDetails details = publisher.extractChecksDetails();\n+\n+        // verify extracted details\n+        ChecksDetails expectedDetails = createChecksDetailsBasedOnReportFile();\n+        assertThat(details)\n+                .usingRecursiveComparison()\n+                .ignoringFields(\"detailsURL\")\n+                .isEqualTo(expectedDetails);\n+    }\n+\n+    private ChecksDetails createChecksDetailsBasedOnReportFile() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4230adf53d5dcd2d3710375d349969e90f6d427f"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5NjI3NA==", "bodyText": "Do you have an example output that shows how this is rendered?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r454996274", "createdAt": "2020-07-15T11:57:25Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerTest;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerTest {\n+    private static final String OLD_REPORT_FILE = \"checkstyle.xml\";\n+    private static final String NEW_REPORT_FILE = \"checkstyle1.xml\";\n+\n+    /**\n+     * Verifies that {@link WarningChecksPublisher} constructs the {@link ChecksDetails} correctly\n+     * with only new issues.\n+     */\n+    @Test\n+    public void shouldCreateChecksDetailsWithNewIssuesAsAnnotations() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(OLD_REPORT_FILE);\n+        enableCheckStyleWarnings(project);\n+\n+        // trigger a build using the report file with 4 issues\n+        Run<?, ?> run = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(run))\n+                .hasTotalSize(4)\n+                .hasNewSize(0);\n+\n+        // trigger a build using the report file with 2 new issues\n+        copyMultipleFilesToWorkspaceWithSuffix(project, NEW_REPORT_FILE);\n+        run = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(run))\n+                .hasTotalSize(6)\n+                .hasNewSize(2);\n+\n+        // extract details from result\n+        WarningChecksPublisher publisher = new WarningChecksPublisher(getResultAction(run));\n+        ChecksDetails details = publisher.extractChecksDetails();\n+\n+        // verify extracted details\n+        ChecksDetails expectedDetails = createChecksDetailsBasedOnReportFile();\n+        assertThat(details)\n+                .usingRecursiveComparison()\n+                .ignoringFields(\"detailsURL\")\n+                .isEqualTo(expectedDetails);\n+    }\n+\n+    private ChecksDetails createChecksDetailsBasedOnReportFile() {\n+        ChecksDetailsBuilder builder = new ChecksDetailsBuilder()\n+                .withName(\"CheckStyle\")\n+                .withStatus(ChecksStatus.COMPLETED)\n+                .withConclusion(ChecksConclusion.SUCCESS)\n+                .withDetailsURL(\"http://localhost:39121/jenkins/job/test0/2/\");\n+\n+\n+        ChecksOutput output = new ChecksOutputBuilder()\n+                .withTitle(\"CheckStyle Warnings\")\n+                .withSummary(\"## 6 issues in total:\\n\"\n+                        + \"- ### 2 new issues\\n\"\n+                        + \"- ### 4 outstanding Issues\\n\"\n+                        + \"- ### 2 delta issues\\n\"\n+                        + \"- ### 0 fixed issues\")\n+                .withText(\"## Total Issue Statistics:\\n* Error: 6\\n* High: 0\\n* Normal: 0\\n* Low: 0\\n\"\n+                        + \"## New Issue Statistics:\\n* Error: 2\\n* High: 0\\n* Normal: 0\\n* Low: 0\\n\"\n+                        + \"## Delta Issue Statistics:\\n* Error: 2\\n* High: 0\\n* Normal: 0\\n* Low: 0\\n\")\n+                .addAnnotation(new ChecksAnnotationBuilder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4230adf53d5dcd2d3710375d349969e90f6d427f"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5NzA2OA==", "bodyText": "What are the requirements on GitHub side for the resolution of the filenames? Do they want relative paths starting from the repository root?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r454997068", "createdAt": "2020-07-15T11:58:58Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -0,0 +1,104 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import org.junit.Test;\n+\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerTest;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerTest {\n+    private static final String OLD_REPORT_FILE = \"checkstyle.xml\";\n+    private static final String NEW_REPORT_FILE = \"checkstyle1.xml\";\n+\n+    /**\n+     * Verifies that {@link WarningChecksPublisher} constructs the {@link ChecksDetails} correctly\n+     * with only new issues.\n+     */\n+    @Test\n+    public void shouldCreateChecksDetailsWithNewIssuesAsAnnotations() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(OLD_REPORT_FILE);\n+        enableCheckStyleWarnings(project);\n+\n+        // trigger a build using the report file with 4 issues\n+        Run<?, ?> run = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(run))\n+                .hasTotalSize(4)\n+                .hasNewSize(0);\n+\n+        // trigger a build using the report file with 2 new issues\n+        copyMultipleFilesToWorkspaceWithSuffix(project, NEW_REPORT_FILE);\n+        run = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(run))\n+                .hasTotalSize(6)\n+                .hasNewSize(2);\n+\n+        // extract details from result\n+        WarningChecksPublisher publisher = new WarningChecksPublisher(getResultAction(run));\n+        ChecksDetails details = publisher.extractChecksDetails();\n+\n+        // verify extracted details\n+        ChecksDetails expectedDetails = createChecksDetailsBasedOnReportFile();\n+        assertThat(details)\n+                .usingRecursiveComparison()\n+                .ignoringFields(\"detailsURL\")\n+                .isEqualTo(expectedDetails);\n+    }\n+\n+    private ChecksDetails createChecksDetailsBasedOnReportFile() {\n+        ChecksDetailsBuilder builder = new ChecksDetailsBuilder()\n+                .withName(\"CheckStyle\")\n+                .withStatus(ChecksStatus.COMPLETED)\n+                .withConclusion(ChecksConclusion.SUCCESS)\n+                .withDetailsURL(\"http://localhost:39121/jenkins/job/test0/2/\");\n+\n+\n+        ChecksOutput output = new ChecksOutputBuilder()\n+                .withTitle(\"CheckStyle Warnings\")\n+                .withSummary(\"## 6 issues in total:\\n\"\n+                        + \"- ### 2 new issues\\n\"\n+                        + \"- ### 4 outstanding Issues\\n\"\n+                        + \"- ### 2 delta issues\\n\"\n+                        + \"- ### 0 fixed issues\")\n+                .withText(\"## Total Issue Statistics:\\n* Error: 6\\n* High: 0\\n* Normal: 0\\n* Low: 0\\n\"\n+                        + \"## New Issue Statistics:\\n* Error: 2\\n* High: 0\\n* Normal: 0\\n* Low: 0\\n\"\n+                        + \"## Delta Issue Statistics:\\n* Error: 2\\n* High: 0\\n* Normal: 0\\n* Low: 0\\n\")\n+                .addAnnotation(new ChecksAnnotationBuilder()\n+                        .withPath(\"X:/Build/Results/jobs/Maven/workspace/tasks/src/main/java/hudson/plugins\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4230adf53d5dcd2d3710375d349969e90f6d427f"}, "originalPosition": 77}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MDU3MjY5", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-449057269", "createdAt": "2020-07-15T15:10:50Z", "commit": {"oid": "4230adf53d5dcd2d3710375d349969e90f6d427f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToxMDo1MFrOGyC1Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNToxMjowMFrOGyC4Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEyODM1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    .withAnnotations(extractChecksAnnotations(result.getNewIssues()))\n          \n          \n            \n                                    .withAnnotations(extractChecksAnnotations(result.getNewIssues(), labelProvider))", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r455128355", "createdAt": "2020-07-15T15:10:50Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import edu.hm.hafner.analysis.Report;\n+import edu.hm.hafner.util.VisibleForTesting;\n+\n+import io.jenkins.plugins.analysis.core.model.AnalysisResult;\n+import io.jenkins.plugins.analysis.core.model.ResultAction;\n+import io.jenkins.plugins.analysis.core.model.StaticAnalysisLabelProvider;\n+import io.jenkins.plugins.analysis.core.util.IssuesStatistics;\n+import io.jenkins.plugins.analysis.core.util.QualityGateStatus;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksPublisher;\n+import io.jenkins.plugins.checks.api.ChecksPublisherFactory;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+/**\n+ * Publishes warnings as checks to scm platforms.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+class WarningChecksPublisher {\n+    private final ResultAction action;\n+\n+    WarningChecksPublisher(final ResultAction action) {\n+        this.action = action;\n+    }\n+\n+    /**\n+     * Publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI,\n+     * e.g. GitHub checks.\n+     */\n+    void publishChecks() {\n+        ChecksPublisher publisher = ChecksPublisherFactory.fromRun(action.getOwner());\n+        publisher.publish(extractChecksDetails());\n+    }\n+\n+    @VisibleForTesting\n+    ChecksDetails extractChecksDetails() {\n+        AnalysisResult result = action.getResult();\n+        IssuesStatistics totals = result.getTotals();\n+\n+        StaticAnalysisLabelProvider labelProvider = action.getLabelProvider();\n+\n+        return new ChecksDetailsBuilder()\n+                .withName(labelProvider.getName())\n+                .withStatus(ChecksStatus.COMPLETED)\n+                .withConclusion(extractChecksConclusion(result.getQualityGateStatus()))\n+                .withOutput(new ChecksOutputBuilder()\n+                        .withTitle(labelProvider.getLinkName())\n+                        .withSummary(extractChecksSummary(totals))\n+                        .withText(extractChecksText(totals))\n+                        .withAnnotations(extractChecksAnnotations(result.getNewIssues()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4230adf53d5dcd2d3710375d349969e90f6d427f"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTEyOTE0Ng==", "bodyText": "Then you get for CheckStyle, SpotBugs a detailed description as well:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    .withRawDetails(issue.getDescription())\n          \n          \n            \n                                    .withRawDetails(labelProvider.getDescription(issue))\n          \n      \n    \n    \n  \n\nThis description will contain HTML tags...", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r455129146", "createdAt": "2020-07-15T15:12:00Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -0,0 +1,124 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import edu.hm.hafner.analysis.Report;\n+import edu.hm.hafner.util.VisibleForTesting;\n+\n+import io.jenkins.plugins.analysis.core.model.AnalysisResult;\n+import io.jenkins.plugins.analysis.core.model.ResultAction;\n+import io.jenkins.plugins.analysis.core.model.StaticAnalysisLabelProvider;\n+import io.jenkins.plugins.analysis.core.util.IssuesStatistics;\n+import io.jenkins.plugins.analysis.core.util.QualityGateStatus;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksPublisher;\n+import io.jenkins.plugins.checks.api.ChecksPublisherFactory;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+/**\n+ * Publishes warnings as checks to scm platforms.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+class WarningChecksPublisher {\n+    private final ResultAction action;\n+\n+    WarningChecksPublisher(final ResultAction action) {\n+        this.action = action;\n+    }\n+\n+    /**\n+     * Publishes checks to platforms. Afterwards, all warnings are available in corresponding platform's UI,\n+     * e.g. GitHub checks.\n+     */\n+    void publishChecks() {\n+        ChecksPublisher publisher = ChecksPublisherFactory.fromRun(action.getOwner());\n+        publisher.publish(extractChecksDetails());\n+    }\n+\n+    @VisibleForTesting\n+    ChecksDetails extractChecksDetails() {\n+        AnalysisResult result = action.getResult();\n+        IssuesStatistics totals = result.getTotals();\n+\n+        StaticAnalysisLabelProvider labelProvider = action.getLabelProvider();\n+\n+        return new ChecksDetailsBuilder()\n+                .withName(labelProvider.getName())\n+                .withStatus(ChecksStatus.COMPLETED)\n+                .withConclusion(extractChecksConclusion(result.getQualityGateStatus()))\n+                .withOutput(new ChecksOutputBuilder()\n+                        .withTitle(labelProvider.getLinkName())\n+                        .withSummary(extractChecksSummary(totals))\n+                        .withText(extractChecksText(totals))\n+                        .withAnnotations(extractChecksAnnotations(result.getNewIssues()))\n+                        .build())\n+                .withDetailsURL(action.getAbsoluteUrl())\n+                .build();\n+    }\n+\n+    private String extractChecksSummary(final IssuesStatistics statistics) {\n+        return String.format(\"## %d issues in total:\\n\"\n+                        + \"- ### %d new issues\\n\"\n+                        + \"- ### %d outstanding Issues\\n\"\n+                        + \"- ### %d delta issues\\n\"\n+                        + \"- ### %d fixed issues\",\n+                statistics.getTotalSize(), statistics.getNewSize(), statistics.getTotalSize() - statistics.getNewSize(),\n+                statistics.getDeltaSize(), statistics.getFixedSize());\n+    }\n+\n+    private String extractChecksText(final IssuesStatistics statistics) {\n+        return \"## Total Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getTotalLowSize(), statistics.getTotalNormalSize(),\n+                statistics.getTotalHighSize(), statistics.getTotalErrorSize())\n+                + \"## New Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getNewLowSize(), statistics.getNewNormalSize(),\n+                statistics.getNewHighSize(), statistics.getNewErrorSize())\n+                + \"## Delta Issue Statistics:\\n\"\n+                + generateSeverityText(statistics.getDeltaLowSize(), statistics.getDeltaNormalSize(),\n+                statistics.getDeltaHighSize(), statistics.getDeltaErrorSize());\n+    }\n+\n+    private String generateSeverityText(final int low, final int normal, final int high, final int error) {\n+        return \"* Error: \" + error + \"\\n\"\n+                + \"* High: \" + high + \"\\n\"\n+                + \"* Normal: \" + normal + \"\\n\"\n+                + \"* Low: \" + low + \"\\n\";\n+    }\n+\n+    private ChecksConclusion extractChecksConclusion(final QualityGateStatus status) {\n+        switch (status) {\n+            case INACTIVE:\n+            case PASSED:\n+                return ChecksConclusion.SUCCESS;\n+            case FAILED:\n+            case WARNING:\n+                return ChecksConclusion.FAILURE;\n+            default:\n+                throw new IllegalArgumentException(\"Unsupported quality gate status: \" + status);\n+        }\n+    }\n+\n+    private List<ChecksAnnotation> extractChecksAnnotations(final Report issues) {\n+        return issues.stream()\n+                .map(issue -> new ChecksAnnotationBuilder()\n+                        .withPath(issue.getFileName())\n+                        .withTitle(issue.getType())\n+                        .withAnnotationLevel(ChecksAnnotationLevel.WARNING)\n+                        .withMessage(issue.getSeverity() + \": \" + issue.getMessage())\n+                        .withStartLine(issue.getLineStart())\n+                        .withEndLine(issue.getLineEnd())\n+                        .withStartColumn(issue.getColumnStart())\n+                        .withEndColumn(issue.getColumnEnd())\n+                        .withRawDetails(issue.getDescription())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4230adf53d5dcd2d3710375d349969e90f6d427f"}, "originalPosition": 120}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31db276268701389a46434cbf266a858b4b2caca", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/31db276268701389a46434cbf266a858b4b2caca", "committedDate": "2020-07-16T13:55:30Z", "message": "Test quality gate in WarningChecksPublisher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12726c3fafc429f0bda3ecc96c9469367367434f", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/12726c3fafc429f0bda3ecc96c9469367367434f", "committedDate": "2020-07-16T15:39:19Z", "message": "Merge pull request #3 from XiongKezhi/checks-publisher-tests\n\nTest quality gate in WarningChecksPublisher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8081ee558f1bab5578a0be8487ac239df741d9e", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/d8081ee558f1bab5578a0be8487ac239df741d9e", "committedDate": "2020-07-18T14:02:16Z", "message": "Parse html for checks annotation message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c4883a1a12aa17d9be8cd7b88101bb80032ae6d", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/2c4883a1a12aa17d9be8cd7b88101bb80032ae6d", "committedDate": "2020-07-18T16:49:26Z", "message": "Use checks description from label provider"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMzA2MzU2", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-451306356", "createdAt": "2020-07-20T05:33:57Z", "commit": {"oid": "2c4883a1a12aa17d9be8cd7b88101bb80032ae6d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNTozMzo1N1rOGz5IwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwNjowMToxNlrOGz58Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA2NjY4OQ==", "bodyText": "It would make the test more readable if you would also check the value of the quality gate via getAnalysisResult(). From the test one does not see that there are only 6 warnings in the build.", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r457066689", "createdAt": "2020-07-20T05:33:57Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -0,0 +1,182 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import java.util.Optional;\n+import java.util.function.Consumer;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.junit.Test;\n+\n+import com.google.errorprone.annotations.CanIgnoreReturnValue;\n+\n+import hudson.model.AbstractProject;\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Result;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerTest;\n+import io.jenkins.plugins.analysis.core.util.QualityGate.QualityGateResult;\n+import io.jenkins.plugins.analysis.core.util.QualityGate.QualityGateType;\n+import io.jenkins.plugins.analysis.warnings.PVSStudio;\n+import io.jenkins.plugins.analysis.warnings.checkstyle.CheckStyle;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerTest {\n+    private static final String OLD_CHECK_STYLE_REPORT = \"checkstyle.xml\";\n+    private static final String NEW_CHECK_STYLE_REPORT = \"checkstyle1.xml\";\n+\n+    /**\n+     * Verifies that {@link WarningChecksPublisher} constructs the {@link ChecksDetails} correctly\n+     * with only new issues.\n+     */\n+    @Test\n+    public void shouldCreateChecksDetailsWithNewIssuesAsAnnotations() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(OLD_CHECK_STYLE_REPORT);\n+        enableCheckStyleWarnings(project);\n+\n+        Run<?, ?> reference = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(reference))\n+                .hasTotalSize(4)\n+                .hasNewSize(0);\n+\n+        copyMultipleFilesToWorkspaceWithSuffix(project, NEW_CHECK_STYLE_REPORT);\n+        Run<?, ?> run = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(run))\n+                .hasTotalSize(6)\n+                .hasNewSize(2);\n+\n+        WarningChecksPublisher publisher = new WarningChecksPublisher(getResultAction(run));\n+        assertThat(publisher.extractChecksDetails())\n+                .hasFieldOrPropertyWithValue(\"detailsURL\", Optional.of(getResultAction(run).getAbsoluteUrl()))\n+                .usingRecursiveComparison()\n+                .ignoringFields(\"detailsURL\")\n+                .isEqualTo(createExpectedCheckStyleDetails());\n+    }\n+\n+    @Test\n+    public void shouldConcludeChecksAsSuccessWhenQualityGateIsPassed() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(NEW_CHECK_STYLE_REPORT);\n+        enableAndConfigureCheckstyle(project,\n+                recorder -> recorder.addQualityGate(10, QualityGateType.TOTAL, QualityGateResult.UNSTABLE));\n+\n+        Run<?, ?> build = buildSuccessfully(project);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c4883a1a12aa17d9be8cd7b88101bb80032ae6d"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA2NzIyOQ==", "bodyText": "Can you wrap that part in a method and call it with QualityGateResult.FAILURE and QualityGateResult.UNSTABLE. Then we can see that both types correctly map to ChecksConclusion.FAILURE", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r457067229", "createdAt": "2020-07-20T05:35:10Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -0,0 +1,182 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import java.util.Optional;\n+import java.util.function.Consumer;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.junit.Test;\n+\n+import com.google.errorprone.annotations.CanIgnoreReturnValue;\n+\n+import hudson.model.AbstractProject;\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Result;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerTest;\n+import io.jenkins.plugins.analysis.core.util.QualityGate.QualityGateResult;\n+import io.jenkins.plugins.analysis.core.util.QualityGate.QualityGateType;\n+import io.jenkins.plugins.analysis.warnings.PVSStudio;\n+import io.jenkins.plugins.analysis.warnings.checkstyle.CheckStyle;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerTest {\n+    private static final String OLD_CHECK_STYLE_REPORT = \"checkstyle.xml\";\n+    private static final String NEW_CHECK_STYLE_REPORT = \"checkstyle1.xml\";\n+\n+    /**\n+     * Verifies that {@link WarningChecksPublisher} constructs the {@link ChecksDetails} correctly\n+     * with only new issues.\n+     */\n+    @Test\n+    public void shouldCreateChecksDetailsWithNewIssuesAsAnnotations() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(OLD_CHECK_STYLE_REPORT);\n+        enableCheckStyleWarnings(project);\n+\n+        Run<?, ?> reference = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(reference))\n+                .hasTotalSize(4)\n+                .hasNewSize(0);\n+\n+        copyMultipleFilesToWorkspaceWithSuffix(project, NEW_CHECK_STYLE_REPORT);\n+        Run<?, ?> run = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(run))\n+                .hasTotalSize(6)\n+                .hasNewSize(2);\n+\n+        WarningChecksPublisher publisher = new WarningChecksPublisher(getResultAction(run));\n+        assertThat(publisher.extractChecksDetails())\n+                .hasFieldOrPropertyWithValue(\"detailsURL\", Optional.of(getResultAction(run).getAbsoluteUrl()))\n+                .usingRecursiveComparison()\n+                .ignoringFields(\"detailsURL\")\n+                .isEqualTo(createExpectedCheckStyleDetails());\n+    }\n+\n+    @Test\n+    public void shouldConcludeChecksAsSuccessWhenQualityGateIsPassed() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(NEW_CHECK_STYLE_REPORT);\n+        enableAndConfigureCheckstyle(project,\n+                recorder -> recorder.addQualityGate(10, QualityGateType.TOTAL, QualityGateResult.UNSTABLE));\n+\n+        Run<?, ?> build = buildSuccessfully(project);\n+        WarningChecksPublisher publisher = new WarningChecksPublisher(getResultAction(build));\n+\n+        assertThat(publisher.extractChecksDetails().getConclusion())\n+                .isEqualTo(ChecksConclusion.SUCCESS);\n+    }\n+\n+    @Test\n+    public void shouldConcludeChecksAsFailureWhenQualityGateIsFailed() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(NEW_CHECK_STYLE_REPORT);\n+        enableAndConfigureCheckstyle(project,\n+                recorder -> recorder.addQualityGate(1, QualityGateType.TOTAL, QualityGateResult.FAILURE));\n+\n+        Run<?, ?> build = buildWithResult(project, Result.FAILURE);\n+        WarningChecksPublisher publisher = new WarningChecksPublisher(getResultAction(build));\n+\n+        assertThat(publisher.extractChecksDetails().getConclusion())\n+                .isEqualTo(ChecksConclusion.FAILURE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c4883a1a12aa17d9be8cd7b88101bb80032ae6d"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzA3OTg3MA==", "bodyText": "Is the idea here to replace a <a> with plain text? Or shouldn't this be [text](url)?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r457079870", "createdAt": "2020-07-20T06:01:16Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -0,0 +1,182 @@\n+package io.jenkins.plugins.analysis.core.steps;\n+\n+import java.util.Optional;\n+import java.util.function.Consumer;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.junit.Test;\n+\n+import com.google.errorprone.annotations.CanIgnoreReturnValue;\n+\n+import hudson.model.AbstractProject;\n+import hudson.model.FreeStyleProject;\n+import hudson.model.Result;\n+import hudson.model.Run;\n+\n+import io.jenkins.plugins.analysis.core.testutil.IntegrationTestWithJenkinsPerTest;\n+import io.jenkins.plugins.analysis.core.util.QualityGate.QualityGateResult;\n+import io.jenkins.plugins.analysis.core.util.QualityGate.QualityGateType;\n+import io.jenkins.plugins.analysis.warnings.PVSStudio;\n+import io.jenkins.plugins.analysis.warnings.checkstyle.CheckStyle;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationBuilder;\n+import io.jenkins.plugins.checks.api.ChecksAnnotation.ChecksAnnotationLevel;\n+import io.jenkins.plugins.checks.api.ChecksConclusion;\n+import io.jenkins.plugins.checks.api.ChecksDetails;\n+import io.jenkins.plugins.checks.api.ChecksDetails.ChecksDetailsBuilder;\n+import io.jenkins.plugins.checks.api.ChecksOutput;\n+import io.jenkins.plugins.checks.api.ChecksOutput.ChecksOutputBuilder;\n+import io.jenkins.plugins.checks.api.ChecksStatus;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+public class WarningChecksPublisherITest extends IntegrationTestWithJenkinsPerTest {\n+    private static final String OLD_CHECK_STYLE_REPORT = \"checkstyle.xml\";\n+    private static final String NEW_CHECK_STYLE_REPORT = \"checkstyle1.xml\";\n+\n+    /**\n+     * Verifies that {@link WarningChecksPublisher} constructs the {@link ChecksDetails} correctly\n+     * with only new issues.\n+     */\n+    @Test\n+    public void shouldCreateChecksDetailsWithNewIssuesAsAnnotations() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(OLD_CHECK_STYLE_REPORT);\n+        enableCheckStyleWarnings(project);\n+\n+        Run<?, ?> reference = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(reference))\n+                .hasTotalSize(4)\n+                .hasNewSize(0);\n+\n+        copyMultipleFilesToWorkspaceWithSuffix(project, NEW_CHECK_STYLE_REPORT);\n+        Run<?, ?> run = buildSuccessfully(project);\n+        assertThat(getAnalysisResult(run))\n+                .hasTotalSize(6)\n+                .hasNewSize(2);\n+\n+        WarningChecksPublisher publisher = new WarningChecksPublisher(getResultAction(run));\n+        assertThat(publisher.extractChecksDetails())\n+                .hasFieldOrPropertyWithValue(\"detailsURL\", Optional.of(getResultAction(run).getAbsoluteUrl()))\n+                .usingRecursiveComparison()\n+                .ignoringFields(\"detailsURL\")\n+                .isEqualTo(createExpectedCheckStyleDetails());\n+    }\n+\n+    @Test\n+    public void shouldConcludeChecksAsSuccessWhenQualityGateIsPassed() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(NEW_CHECK_STYLE_REPORT);\n+        enableAndConfigureCheckstyle(project,\n+                recorder -> recorder.addQualityGate(10, QualityGateType.TOTAL, QualityGateResult.UNSTABLE));\n+\n+        Run<?, ?> build = buildSuccessfully(project);\n+        WarningChecksPublisher publisher = new WarningChecksPublisher(getResultAction(build));\n+\n+        assertThat(publisher.extractChecksDetails().getConclusion())\n+                .isEqualTo(ChecksConclusion.SUCCESS);\n+    }\n+\n+    @Test\n+    public void shouldConcludeChecksAsFailureWhenQualityGateIsFailed() {\n+        FreeStyleProject project = createFreeStyleProjectWithWorkspaceFiles(NEW_CHECK_STYLE_REPORT);\n+        enableAndConfigureCheckstyle(project,\n+                recorder -> recorder.addQualityGate(1, QualityGateType.TOTAL, QualityGateResult.FAILURE));\n+\n+        Run<?, ?> build = buildWithResult(project, Result.FAILURE);\n+        WarningChecksPublisher publisher = new WarningChecksPublisher(getResultAction(build));\n+\n+        assertThat(publisher.extractChecksDetails().getConclusion())\n+                .isEqualTo(ChecksConclusion.FAILURE);\n+    }\n+\n+    @Test\n+    public void shouldParseHtmlMessage() {\n+        FreeStyleProject project = createFreeStyleProject();\n+        enableWarnings(project, new PVSStudio());\n+\n+        buildSuccessfully(project);\n+\n+        copySingleFileToWorkspace(project, \"PVSReport.xml\", \"PVSReport.plog\");\n+        Run<?, ?> run = buildSuccessfully(project);\n+\n+        WarningChecksPublisher publisher = new WarningChecksPublisher(getResultAction(run));\n+        ChecksDetails details = publisher.extractChecksDetails();\n+\n+        assertThat(details.getOutput().get().getChecksAnnotations())\n+                .usingElementComparatorOnFields(\"message\")\n+                .containsOnly(new ChecksAnnotationBuilder()\n+                        .withMessage(\"ERROR:\\n\"\n+                                + \"Some diagnostic messages may contain incorrect line number.\\n\"\n+                                + \"V002:https://www.viva64.com/en/w/v002/\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c4883a1a12aa17d9be8cd7b88101bb80032ae6d"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "108e9c8beed839d3136acb8b12d3cb7faf4f37d7", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/108e9c8beed839d3136acb8b12d3cb7faf4f37d7", "committedDate": "2020-07-20T14:15:24Z", "message": "Add unstable quality gate result test for checks publisher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64335cd8c8384c2a535d9499bc8e51c8683048a4", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/64335cd8c8384c2a535d9499bc8e51c8683048a4", "committedDate": "2020-07-27T10:51:32Z", "message": "Improve checks title to contain issues statistics."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d8acf4851163ea9fac22cdb1aca5270c607c8cd", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/8d8acf4851163ea9fac22cdb1aca5270c607c8cd", "committedDate": "2020-07-27T12:38:04Z", "message": "Migrate github-checks to checks-api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "171778206d877605c26ff6ceeab862412e487a14", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/171778206d877605c26ff6ceeab862412e487a14", "committedDate": "2020-07-27T12:39:28Z", "message": "Change checks configuration to skipPublishingChecks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52bf01bdaa523940c1c9ff456b4c3cbe2a1e4209", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/52bf01bdaa523940c1c9ff456b4c3cbe2a1e4209", "committedDate": "2020-07-27T12:50:13Z", "message": "Merge branch 'master' into publish-checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91975e787406b013eb2133b223b5c5db4c9819a3", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/91975e787406b013eb2133b223b5c5db4c9819a3", "committedDate": "2020-07-28T03:46:02Z", "message": "Bump checks api to 0.1.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd46852b45cfd8e4b2b122d8b92d6968a696affc", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/cd46852b45cfd8e4b2b122d8b92d6968a696affc", "committedDate": "2020-07-28T04:26:44Z", "message": "Update serial version UID"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af01e607274011e50e53192a89593244984d5ca0", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/af01e607274011e50e53192a89593244984d5ca0", "committedDate": "2020-07-28T05:13:27Z", "message": "Update version to 9.0.0 due to incompatible change for publishing checks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2NjM4NjIx", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-456638621", "createdAt": "2020-07-28T13:37:45Z", "commit": {"oid": "af01e607274011e50e53192a89593244984d5ca0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzozNzo0NVrOG4M9jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxMzozNzo0NVrOG4M9jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTU4NTgwNQ==", "bodyText": "Is this version number ok? Some incompatible changes (new property for the pipeline script) added.", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#discussion_r461585805", "createdAt": "2020-07-28T13:37:45Z", "author": {"login": "XiongKezhi"}, "path": "plugin/pom.xml", "diffHunk": "@@ -21,7 +21,7 @@\n   <url>https://github.com/jenkinsci/warnings-ng-plugin</url>\n \n   <properties>\n-    <revision>8.4.0</revision>\n+    <revision>9.0.0</revision>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af01e607274011e50e53192a89593244984d5ca0"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff27c99551e681198ead36d8e8884e779dc63337", "author": {"user": {"login": "uhafner", "name": "Ullrich Hafner"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/ff27c99551e681198ead36d8e8884e779dc63337", "committedDate": "2020-07-28T22:38:53Z", "message": "Tweak checks publishing."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fac7122ec8b614092d5820deee306c2fb313098d", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/fac7122ec8b614092d5820deee306c2fb313098d", "committedDate": "2020-07-28T16:29:34Z", "message": "Use line 1 for while file warnings"}, "afterCommit": {"oid": "ff27c99551e681198ead36d8e8884e779dc63337", "author": {"user": {"login": "uhafner", "name": "Ullrich Hafner"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/ff27c99551e681198ead36d8e8884e779dc63337", "committedDate": "2020-07-28T22:38:53Z", "message": "Tweak checks publishing."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzY1MTQ0", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/550#pullrequestreview-458365144", "createdAt": "2020-07-30T12:46:38Z", "commit": {"oid": "ff27c99551e681198ead36d8e8884e779dc63337"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4134, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}