{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NzE5NzEw", "number": 721, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzowODoyNVrOFJk1yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjoxMjowMFrOFJocWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTg1MDk2OnYy", "diffSide": "RIGHT", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/PublishIssuesStep.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzowODoyNVrOIL94Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzowODoyNVrOIL94Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxOTAxOA==", "bodyText": "I would rather prefer it look like:\nWarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener(), getContext().get(ChecksInfo.class));\n\nThen we can place the logic inside of WarningChecksPublisher and reuse it for the recordIssues step. (PublishIssuesStep is a different step with the name publishIssues).", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549419018", "createdAt": "2020-12-28T17:08:25Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/PublishIssuesStep.java", "diffHunk": "@@ -855,7 +857,8 @@ protected ResultAction run() throws IOException, InterruptedException, IllegalSt\n             ResultAction action = publisher.attachAction(step.getTrendChartType());\n \n             if (!step.isSkipPublishingChecks()) {\n-                WarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener());\n+                String checksName = Optional.ofNullable(getContext().get(ChecksInfo.class)).map(ChecksInfo::getName).orElse(null);\n+                WarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener(), checksName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57703098d897573102f94326972028f36e26ae91"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NTg1NDUzOnYy", "diffSide": "RIGHT", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzoxMDoyNVrOIL96Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzoxMDoyNVrOIL96Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxOTU0Ng==", "bodyText": "See above: parameter should be of type ChecksInfo.\nAnd do not add a second constructor since we need the same call for the IssueRecorder (which is used by the recordIssues step).", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549419546", "createdAt": "2020-12-28T17:10:25Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -40,10 +40,16 @@\n class WarningChecksPublisher {\n     private final ResultAction action;\n     private final TaskListener listener;\n+    private final String checksName;\n \n-    WarningChecksPublisher(final ResultAction action, final TaskListener listener) {\n+    WarningChecksPublisher(final ResultAction action, final TaskListener listener, final String checksName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57703098d897573102f94326972028f36e26ae91"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjM3NTYxOnYy", "diffSide": "RIGHT", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMTozNToxMVrOIMCcNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMTozNToxMVrOIMCcNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5MzgxMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private ChecksInfo checksInfo;\n          \n          \n            \n                @CheckForNull\n          \n          \n            \n                private ChecksInfo checksInfo;", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549493813", "createdAt": "2020-12-28T21:35:11Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java", "diffHunk": "@@ -112,6 +113,8 @@\n \n     private boolean skipPublishingChecks; // by default, checks will be published\n \n+    private ChecksInfo checksInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjM3NTk5OnYy", "diffSide": "RIGHT", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMTozNTozMlrOIMCceA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMTozNTozMlrOIMCceA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5Mzg4MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setChecksInfo(final ChecksInfo checksInfo) {\n          \n          \n            \n                public void setChecksInfo(@CheckForNull final ChecksInfo checksInfo) {", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549493880", "createdAt": "2020-12-28T21:35:32Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java", "diffHunk": "@@ -591,6 +594,10 @@ public void setFilters(final List<RegexpFilter> filters) {\n         this.filters = new ArrayList<>(filters);\n     }\n \n+    public void setChecksInfo(final ChecksInfo checksInfo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjM3NzU5OnYy", "diffSide": "RIGHT", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMTozNjoxNVrOIMCdUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMTozNjoxNVrOIMCdUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5NDA5Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                WarningChecksPublisher(final ResultAction action, final TaskListener listener, final ChecksInfo checksInfo) {\n          \n          \n            \n                WarningChecksPublisher(final ResultAction action, final TaskListener listener, @CheckForNull final ChecksInfo checksInfo) {", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549494097", "createdAt": "2020-12-28T21:36:15Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -40,10 +42,12 @@\n class WarningChecksPublisher {\n     private final ResultAction action;\n     private final TaskListener listener;\n+    private final ChecksInfo checksInfo;\n \n-    WarningChecksPublisher(final ResultAction action, final TaskListener listener) {\n+    WarningChecksPublisher(final ResultAction action, final TaskListener listener, final ChecksInfo checksInfo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjM3Nzg3OnYy", "diffSide": "RIGHT", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMTozNjoyOFrOIMCdfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMTozNjoyOFrOIMCdfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5NDE0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final ChecksInfo checksInfo;\n          \n          \n            \n                @CheckForNull\n          \n          \n            \n                private final ChecksInfo checksInfo;", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549494140", "createdAt": "2020-12-28T21:36:28Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -40,10 +42,12 @@\n class WarningChecksPublisher {\n     private final ResultAction action;\n     private final TaskListener listener;\n+    private final ChecksInfo checksInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjQxNzMxOnYy", "diffSide": "RIGHT", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMTo1NzoyNFrOIMCyFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMTo1NzoyNFrOIMCyFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5OTQxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    WorkflowJob project = createPipeline();\n          \n          \n            \n                    copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n          \n          \n            \n                    WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n          \n      \n    \n    \n  \n\nThe file name needs to be renamed automatically, otherwise it is not found.", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549499412", "createdAt": "2020-12-28T21:57:24Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjQzMDgyOnYy", "diffSide": "RIGHT", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjowNTo0MlrOIMC5Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjowNTo0MlrOIMC5Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMTI1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(publishedChecks.size()).isEqualTo(2);\n          \n          \n            \n                    assertThat(publishedChecks).hasSize(2); // add a small comment why there are two results?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549501258", "createdAt": "2020-12-28T22:05:42Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjQzMzcxOnYy", "diffSide": "RIGHT", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjowNjo1NFrOIMC6uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjowNjo1NFrOIMC6uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMTYyNA==", "bodyText": "An additional check:\n        assertThat(publishedChecks.get(1).getOutput()).isPresent().hasValueSatisfying(\n                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549501624", "createdAt": "2020-12-28T22:06:54Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);\n+\n+        publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 126}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjQ0MDUyOnYy", "diffSide": "RIGHT", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjoxMTozNlrOIMC-cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjoxMTozNlrOIMC-cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMjU3OQ==", "bodyText": "This is not actually part of your PR: but since you added a simple way to verify the checks can you also add another test that does not wrap the code with withChecks and see that the original title is used?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549502579", "createdAt": "2020-12-28T22:11:36Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);\n+\n+        publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+    }\n+\n+    /**\n+     * Test that recordIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextRecordIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(String.format(\"\"\n+                + \"withChecks('Custom Checks Name') {\\n\"\n+                + \"  recordIssues(tools: [%s(pattern: '%s')])\\n\"\n+                + \"}\", new CheckStyle().getSymbolName(), NEW_CHECKSTYLE_REPORT)));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);\n+\n+        publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 145}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NjQ0MTIxOnYy", "diffSide": "RIGHT", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjoxMjowMFrOIMC-0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjoxMjowMFrOIMC-0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMjY3Mw==", "bodyText": "See comments above here as well", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549502673", "createdAt": "2020-12-28T22:12:00Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);\n+\n+        publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+    }\n+\n+    /**\n+     * Test that recordIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextRecordIssues() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 132}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4749, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}