{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NzkwODgz", "number": 379, "title": "[JENKINS-59617] Create unit test for IconLabelProvider", "bodyText": "JENKINS-59617 I have one question for this test. During the test, I have to access the ICONS_URL field which is static and private in the original class, so in order not to use reflection or add additional getter in the original class, I create a same field in this test class. I don't know whether this solution is correct.", "createdAt": "2020-02-16T05:51:55Z", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/379", "merged": true, "mergeCommit": {"oid": "1cac7c2b4fcfe4c643d2fa0ec663192979b630d6"}, "closed": true, "closedAt": "2020-02-17T08:47:26Z", "author": {"login": "XiongKezhi"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcExsupgH2gAyMzc1NzkwODgzOmExNzJhZTA3ZDNlYzE0M2M0NmU2ZDBmMjdkMzAyZTI4M2FjMDU0MzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFEIfiAH2gAyMzc1NzkwODgzOjlkNWVmY2QwMWE2OGUyMjU1NDRjNmFjYThmZjBhNDg3ZTljM2ExMjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a172ae07d3ec143c46e6d0f27d302e283ac05432", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/a172ae07d3ec143c46e6d0f27d302e283ac05432", "committedDate": "2020-02-16T05:15:59Z", "message": "[JENKINS-59617] Create unit test for IconLabelProvider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f17ce4a23f85900f830606e0467e312869e80d9", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/1f17ce4a23f85900f830606e0467e312869e80d9", "committedDate": "2020-02-16T05:59:45Z", "message": "changed constant variable name to meet the style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NDMwMzUw", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/379#pullrequestreview-359430350", "createdAt": "2020-02-16T21:27:41Z", "commit": {"oid": "1f17ce4a23f85900f830606e0467e312869e80d9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMToyNzo0MVrOFqVX7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMToyOToyM1rOFqVYZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDcwMw==", "bodyText": "I think it would be more readable if you would inline the variables.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .hasSmallIconUrl(ICONS_URL + ICON_ID + SMALL_ICON_URL_SUFFIX)\n          \n          \n            \n                            .hasSmallIconUrl(\"/plugin/warnings-ng/icons/icon-id-24x24.png\")", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/379#discussion_r379934703", "createdAt": "2020-02-16T21:27:41Z", "author": {"login": "uhafner"}, "path": "src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package io.jenkins.plugins.analysis.core.model;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+/**\n+ * Tests the class {@link IconLabelProvider}.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+class IconLabelProviderTest {\n+    private static final String ICON_ID = \"icon-id\";\n+    private static final String TOOL_NAME = \"tool-name\";\n+    private static final String ICON_NAME = \"icon-name\";\n+\n+    /**\n+     * This field has to be the same as in IconLabelProvider. Create this\n+     * to avoid using reflection or adding getters in the origin class.\n+     */\n+    private static final String ICONS_URL = \"/plugin/warnings-ng/icons/\";\n+\n+    private static final String SMALL_ICON_URL_SUFFIX = \"-24x24.png\";\n+    private static final String LARGE_ICON_URL_SUFFIX = \"-48x48.png\";\n+\n+    /**\n+     * Verifies that the name of the icon in URL is obtained from the icon id, if\n+     * the {@code iconName} parameter is empty.\n+     */\n+    @Test\n+    void shouldUseIdIfParameterIconNameIsBlank() {\n+        IconLabelProvider iconLabelProvider = new IconLabelProvider(ICON_ID, TOOL_NAME);\n+\n+        assertThat(iconLabelProvider).hasId(ICON_ID).hasName(TOOL_NAME)\n+                .hasSmallIconUrl(ICONS_URL + ICON_ID + SMALL_ICON_URL_SUFFIX)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f17ce4a23f85900f830606e0467e312869e80d9"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDgwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .hasLargeIconUrl(ICONS_URL + ICON_ID + LARGE_ICON_URL_SUFFIX);\n          \n          \n            \n                            .hasLargeIconUrl(\"/plugin/warnings-ng/icons/icon-id-48x48.png\");", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/379#discussion_r379934801", "createdAt": "2020-02-16T21:28:57Z", "author": {"login": "uhafner"}, "path": "src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package io.jenkins.plugins.analysis.core.model;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+/**\n+ * Tests the class {@link IconLabelProvider}.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+class IconLabelProviderTest {\n+    private static final String ICON_ID = \"icon-id\";\n+    private static final String TOOL_NAME = \"tool-name\";\n+    private static final String ICON_NAME = \"icon-name\";\n+\n+    /**\n+     * This field has to be the same as in IconLabelProvider. Create this\n+     * to avoid using reflection or adding getters in the origin class.\n+     */\n+    private static final String ICONS_URL = \"/plugin/warnings-ng/icons/\";\n+\n+    private static final String SMALL_ICON_URL_SUFFIX = \"-24x24.png\";\n+    private static final String LARGE_ICON_URL_SUFFIX = \"-48x48.png\";\n+\n+    /**\n+     * Verifies that the name of the icon in URL is obtained from the icon id, if\n+     * the {@code iconName} parameter is empty.\n+     */\n+    @Test\n+    void shouldUseIdIfParameterIconNameIsBlank() {\n+        IconLabelProvider iconLabelProvider = new IconLabelProvider(ICON_ID, TOOL_NAME);\n+\n+        assertThat(iconLabelProvider).hasId(ICON_ID).hasName(TOOL_NAME)\n+                .hasSmallIconUrl(ICONS_URL + ICON_ID + SMALL_ICON_URL_SUFFIX)\n+                .hasLargeIconUrl(ICONS_URL + ICON_ID + LARGE_ICON_URL_SUFFIX);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f17ce4a23f85900f830606e0467e312869e80d9"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTkzNDgyMw==", "bodyText": "same as above. It is redundant but better readable...", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/379#discussion_r379934823", "createdAt": "2020-02-16T21:29:23Z", "author": {"login": "uhafner"}, "path": "src/test/java/io/jenkins/plugins/analysis/core/model/IconLabelProviderTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package io.jenkins.plugins.analysis.core.model;\n+\n+import org.junit.jupiter.api.Test;\n+\n+import static io.jenkins.plugins.analysis.core.assertions.Assertions.*;\n+\n+/**\n+ * Tests the class {@link IconLabelProvider}.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+class IconLabelProviderTest {\n+    private static final String ICON_ID = \"icon-id\";\n+    private static final String TOOL_NAME = \"tool-name\";\n+    private static final String ICON_NAME = \"icon-name\";\n+\n+    /**\n+     * This field has to be the same as in IconLabelProvider. Create this\n+     * to avoid using reflection or adding getters in the origin class.\n+     */\n+    private static final String ICONS_URL = \"/plugin/warnings-ng/icons/\";\n+\n+    private static final String SMALL_ICON_URL_SUFFIX = \"-24x24.png\";\n+    private static final String LARGE_ICON_URL_SUFFIX = \"-48x48.png\";\n+\n+    /**\n+     * Verifies that the name of the icon in URL is obtained from the icon id, if\n+     * the {@code iconName} parameter is empty.\n+     */\n+    @Test\n+    void shouldUseIdIfParameterIconNameIsBlank() {\n+        IconLabelProvider iconLabelProvider = new IconLabelProvider(ICON_ID, TOOL_NAME);\n+\n+        assertThat(iconLabelProvider).hasId(ICON_ID).hasName(TOOL_NAME)\n+                .hasSmallIconUrl(ICONS_URL + ICON_ID + SMALL_ICON_URL_SUFFIX)\n+                .hasLargeIconUrl(ICONS_URL + ICON_ID + LARGE_ICON_URL_SUFFIX);\n+    }\n+\n+    /**\n+     * Verifies the name of the icon in URL is obtained from parameter, if the\n+     * {@code iconName} parameter is provided.\n+     */\n+    @Test\n+    void shouldParameterNameIfNotBlank() {\n+        IconLabelProvider iconLabelProvider = new IconLabelProvider(ICON_ID, TOOL_NAME, ICON_NAME);\n+\n+        assertThat(iconLabelProvider).hasId(ICON_ID).hasName(TOOL_NAME)\n+                .hasSmallIconUrl(ICONS_URL + ICON_NAME + SMALL_ICON_URL_SUFFIX)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f17ce4a23f85900f830606e0467e312869e80d9"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80ffbbb6cd02ea1b4d0071fd935a859ef90e1e32", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/80ffbbb6cd02ea1b4d0071fd935a859ef90e1e32", "committedDate": "2020-02-17T02:41:01Z", "message": "inline variables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d5efcd01a68e225544c6aca8ff0a487e9c3a120", "author": {"user": {"login": "XiongKezhi", "name": "Kezhi Xiong"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/9d5efcd01a68e225544c6aca8ff0a487e9c3a120", "committedDate": "2020-02-17T02:44:36Z", "message": "delete used variables"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 5, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}