{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4OTQ2Mzc1", "number": 478, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMToyMDozNVrOEAR3oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTozOTo1OFrOEASNdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzI4MjI0OnYy", "diffSide": "RIGHT", "path": "ui-tests/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMToyMDozNVrOGbdkZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMToyMDozNVrOGbdkZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ0OTE5MA==", "bodyText": "Wof\u00fcr braucht es das?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/478#discussion_r431449190", "createdAt": "2020-05-27T21:20:35Z", "author": {"login": "uhafner"}, "path": "ui-tests/pom.xml", "diffHunk": "@@ -40,6 +41,12 @@\n       <version>${junit.version}</version>\n       <scope>test</scope>\n     </dependency>\n+    <dependency>\n+      <groupId>edu.hm.hafner</groupId>\n+      <artifactId>analysis-model</artifactId>\n+      <version>${analysis-model-tests.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f88ba51dd039c8817cab4d534a0875090279a0b"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzI5MzA5OnYy", "diffSide": "RIGHT", "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/FreeStyleConfigurationUITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMToyNDoxNVrOGbdrXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMToyNDoxNVrOGbdrXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ1MDk3Mg==", "bodyText": "Custom assertions machen den Test besser lesbar:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(issuesRecorder.getSourceCodeEncoding()).isEqualTo(ENCODING);\n          \n          \n            \n                   assertThat(issuesRecorder).hasSourceCodeEncoding(ENCODING);", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/478#discussion_r431450972", "createdAt": "2020-05-27T21:24:15Z", "author": {"login": "uhafner"}, "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/FreeStyleConfigurationUITest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+import org.junit.Test;\n+import org.jenkinsci.test.acceptance.junit.AbstractJUnitTest;\n+import org.jenkinsci.test.acceptance.junit.WithPlugins;\n+import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n+import io.jenkins.plugins.analysis.warnings.IssuesRecorder.TrendChartType;\n+import static io.jenkins.plugins.analysis.warnings.Assertions.*;\n+\n+/**\n+ * Acceptance tests for the Warnings Next Generation Plugin.\n+\n+ */\n+@WithPlugins(\"warnings-ng\")\n+@SuppressWarnings({\"checkstyle:ClassFanOutComplexity\", \"PMD.SystemPrintln\", \"PMD.ExcessiveImports\"})\n+public class FreeStyleConfigurationUITest extends AbstractJUnitTest {\n+\n+    private static final String PATTERN = \"**/*.txt\";\n+    private static final String ENCODING = \"UTF-8\";\n+    private static final String REFERENCE = \"reference\";\n+    private static final String SOURCE_DIRECTORY = \"relative\";\n+    private static final String SERVERITY = \"NORMAL\";\n+\n+    /**\n+     * Verifies that job configuration screen correctly modifies the properties of an {@link IssuesRecorder} instance.\n+     */\n+    @Test\n+    public void shouldSetPropertiesInJobConfiguration() {\n+        FreeStyleJob job = jenkins.getJobs().create(FreeStyleJob.class);\n+\n+\n+        IssuesRecorder issuesRecorder = job.addPublisher(IssuesRecorder.class, recorder -> {\n+            recorder.setTool(\"Eclipse ECJ\");\n+        });\n+\n+        issuesRecorder.setSourceCodeEncoding(ENCODING);\n+        issuesRecorder.setSourceDirectory(SOURCE_DIRECTORY);\n+        issuesRecorder.setAggregatingResults(true);\n+        issuesRecorder.setTrendChartType(TrendChartType.TOOLS_ONLY);\n+        issuesRecorder.setBlameDisabled(true);\n+        issuesRecorder.setForensicsDisabled(true);\n+        issuesRecorder.setEnabledForFailure(true);\n+        issuesRecorder.setIgnoreQualityGate(true);\n+        issuesRecorder.setIgnoreFailedBuilds(true);\n+        issuesRecorder.setFailOnError(true);\n+        issuesRecorder.setReferenceJobField(REFERENCE);\n+        issuesRecorder.setHealthReport(1, 9, SERVERITY);\n+        issuesRecorder.setReportFilePattern(PATTERN);\n+\n+\n+        job.save();\n+        job.configure();\n+        issuesRecorder.openAdvancedOptions();\n+        assertThat(issuesRecorder.getSourceCodeEncoding()).isEqualTo(ENCODING);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f88ba51dd039c8817cab4d534a0875090279a0b"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzMxMjEyOnYy", "diffSide": "RIGHT", "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/FreeStyleConfigurationUITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTozMDozN1rOGbd3Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTozMDozN1rOGbd3Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ1NDA0Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Acceptance tests for the Warnings Next Generation Plugin.\n          \n          \n            \n             * Acceptance tests for the Freestyle configuration of the Warnings Next Generation Plugin.", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/478#discussion_r431454043", "createdAt": "2020-05-27T21:30:37Z", "author": {"login": "uhafner"}, "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/FreeStyleConfigurationUITest.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+import org.junit.Test;\n+import org.jenkinsci.test.acceptance.junit.AbstractJUnitTest;\n+import org.jenkinsci.test.acceptance.junit.WithPlugins;\n+import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n+import io.jenkins.plugins.analysis.warnings.IssuesRecorder.TrendChartType;\n+import static io.jenkins.plugins.analysis.warnings.Assertions.*;\n+\n+/**\n+ * Acceptance tests for the Warnings Next Generation Plugin.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f88ba51dd039c8817cab4d534a0875090279a0b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzMzMjE4OnYy", "diffSide": "RIGHT", "path": "ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/IssuesRecorder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTozNzo1MlrOGbeD4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTozNzo1MlrOGbeD4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ1NzI0OA==", "bodyText": "Das wurde umbenannt und kann entfallen.", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/478#discussion_r431457248", "createdAt": "2020-05-27T21:37:52Z", "author": {"login": "uhafner"}, "path": "ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/IssuesRecorder.java", "diffHunk": "@@ -150,6 +162,88 @@ public StaticAnalysisTool addTool(final String toolName, final String pattern) {\n         return addTool(toolName, tool -> tool.setPattern(pattern));\n     }\n \n+    /**\n+     * Returns the value of the Source code encoding field\n+     *\n+     * @return the source code encoding\n+     */\n+    public String getSourceCodeEncoding(){return sourceCodeEncoding.get();}\n+\n+    /**\n+     * Returns if the run always / enabled for failure checkbox is checked\n+     *\n+     * @return the enabled for failure checkbox value\n+     */\n+    public boolean getEnabledForFailure(){return enabledForFailureCheckBox.resolve().isSelected();}\n+\n+    /**\n+     * Returns  if the aggregate results checkbox is checked\n+     *\n+     * @return the aggregate results checkbox value\n+     */\n+    public boolean getAggregatingResults(){return aggregatingResultsCheckBox.resolve().isSelected();}\n+\n+    /**\n+     * Returns if the ignore quality gate checkbox is checked\n+     *\n+     * @return the ignore quality gate checkbox value\n+     */\n+    public boolean getIgnoreQualityGate(){return ignoreQualityGate.resolve().isSelected();}\n+\n+    /**\n+     * Returns if\n+     *  TODO What checkbox is this?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f88ba51dd039c8817cab4d534a0875090279a0b"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzMzNTUyOnYy", "diffSide": "RIGHT", "path": "ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/IssuesRecorder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTozOTowNVrOGbeGFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTozOTowNVrOGbeGFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ1NzgxMw==", "bodyText": "Ich glaube, diese JavaDocs k\u00f6nnen entfallen. (Oder einen Punkt am Ende setzen, sonst meckert CheckStyle)", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/478#discussion_r431457813", "createdAt": "2020-05-27T21:39:05Z", "author": {"login": "uhafner"}, "path": "ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/IssuesRecorder.java", "diffHunk": "@@ -150,6 +162,88 @@ public StaticAnalysisTool addTool(final String toolName, final String pattern) {\n         return addTool(toolName, tool -> tool.setPattern(pattern));\n     }\n \n+    /**\n+     * Returns the value of the Source code encoding field", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f88ba51dd039c8817cab4d534a0875090279a0b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzMzODEyOnYy", "diffSide": "RIGHT", "path": "ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/IssuesRecorder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTozOTo1OFrOGbeHog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTozOTo1OFrOGbeHog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQ1ODIxMA==", "bodyText": "Hier w\u00e4re es erlaubt, die Kommentare vom IssueRecorder zu kopieren.", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/478#discussion_r431458210", "createdAt": "2020-05-27T21:39:58Z", "author": {"login": "uhafner"}, "path": "ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/IssuesRecorder.java", "diffHunk": "@@ -210,10 +304,54 @@ public void setReferenceJobField(final String referenceJob) {\n         referenceJobField.set(referenceJob);\n     }\n \n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f88ba51dd039c8817cab4d534a0875090279a0b"}, "originalPosition": 116}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4781, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}