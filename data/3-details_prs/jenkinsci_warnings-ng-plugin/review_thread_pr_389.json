{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MTIzNTE4", "number": 389, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo1NTozNlrODhysXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzo1NzozNFrODiFekQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NzYwMTU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/BlameApi.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzo1NTozNlrOFsuT7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMTo0NTo0N1rOFs0V6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDQyOA==", "bodyText": "Wouldn't it be much simpler if we denormalize the Blames and add 3 additional getters to IssueApi? Then BlameApi is not required at all?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382440428", "createdAt": "2020-02-21T07:55:36Z", "author": {"login": "uhafner"}, "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/BlameApi.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package io.jenkins.plugins.analysis.core.restapi;\n+\n+import org.kohsuke.stapler.export.Exported;\n+import org.kohsuke.stapler.export.ExportedBean;\n+\n+import io.jenkins.plugins.forensics.blame.FileBlame;\n+\n+/**\n+ * Remote API for a {@link FileBlame}. Simple Java Bean that exposes several methods of an {@link FileBlame} instance.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+@ExportedBean\n+public class BlameApi {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57603ba43b63369a513eba8f8a9ae9a8407ecf1c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3MTg4Ng==", "bodyText": "The reason I add the BlameApi and to take the blame information as object list in each issue in json/xml is that because I saw the getLineStart/End method, so I thought it could be possible that we have multiple blames for an issue which contains multiple lines. Does that situation exist? And about your suggestion, what about if I add some getters like getAuthor(filename, line) in Blames, or just simply access them in IssueApi?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382471886", "createdAt": "2020-02-21T09:15:08Z", "author": {"login": "XiongKezhi"}, "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/BlameApi.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package io.jenkins.plugins.analysis.core.restapi;\n+\n+import org.kohsuke.stapler.export.Exported;\n+import org.kohsuke.stapler.export.ExportedBean;\n+\n+import io.jenkins.plugins.forensics.blame.FileBlame;\n+\n+/**\n+ * Remote API for a {@link FileBlame}. Simple Java Bean that exposes several methods of an {@link FileBlame} instance.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+@ExportedBean\n+public class BlameApi {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDQyOA=="}, "originalCommit": {"oid": "57603ba43b63369a513eba8f8a9ae9a8407ecf1c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3Njc4Ng==", "bodyText": "The reason I add the BlameApi and to make the blame infomations as object list in each issue in json/xml is that because I saw the getLineStart/End method, so I thought it could be possible that we have multiple blames for a issue which contains multiple line. Does that situation really exists? And about your suggestion, what about if I add some getters like getAuthor(filename, line) in Blames, or just simplely access them in IssueApi?\n\nNo, this situation cannot happen since the blames are computed from the issue startLine attribute, so each issue has a 1:1 mapping to the blames currently. It is already denormalized in the model. So it makes sense to just have 3 additional attributes in IssueApi that delegate to the corresponding blame, see https://github.com/jenkinsci/warnings-ng-plugin/blob/master/src/main/java/io/jenkins/plugins/analysis/core/model/BlamesModel.java#L78 for details.", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382476786", "createdAt": "2020-02-21T09:25:22Z", "author": {"login": "uhafner"}, "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/BlameApi.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package io.jenkins.plugins.analysis.core.restapi;\n+\n+import org.kohsuke.stapler.export.Exported;\n+import org.kohsuke.stapler.export.ExportedBean;\n+\n+import io.jenkins.plugins.forensics.blame.FileBlame;\n+\n+/**\n+ * Remote API for a {@link FileBlame}. Simple Java Bean that exposes several methods of an {@link FileBlame} instance.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+@ExportedBean\n+public class BlameApi {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDQyOA=="}, "originalCommit": {"oid": "57603ba43b63369a513eba8f8a9ae9a8407ecf1c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3NzE2OQ==", "bodyText": "BlameApi is not required at all", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382477169", "createdAt": "2020-02-21T09:26:11Z", "author": {"login": "uhafner"}, "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/BlameApi.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package io.jenkins.plugins.analysis.core.restapi;\n+\n+import org.kohsuke.stapler.export.Exported;\n+import org.kohsuke.stapler.export.ExportedBean;\n+\n+import io.jenkins.plugins.forensics.blame.FileBlame;\n+\n+/**\n+ * Remote API for a {@link FileBlame}. Simple Java Bean that exposes several methods of an {@link FileBlame} instance.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+@ExportedBean\n+public class BlameApi {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDQyOA=="}, "originalCommit": {"oid": "57603ba43b63369a513eba8f8a9ae9a8407ecf1c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUzOTI0MQ==", "bodyText": "Thanks for pointing out, I got it.", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382539241", "createdAt": "2020-02-21T11:45:47Z", "author": {"login": "XiongKezhi"}, "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/BlameApi.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package io.jenkins.plugins.analysis.core.restapi;\n+\n+import org.kohsuke.stapler.export.Exported;\n+import org.kohsuke.stapler.export.ExportedBean;\n+\n+import io.jenkins.plugins.forensics.blame.FileBlame;\n+\n+/**\n+ * Remote API for a {@link FileBlame}. Simple Java Bean that exposes several methods of an {@link FileBlame} instance.\n+ *\n+ * @author Kezhi Xiong\n+ */\n+@ExportedBean\n+public class BlameApi {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDQyOA=="}, "originalCommit": {"oid": "57603ba43b63369a513eba8f8a9ae9a8407ecf1c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDY3NDc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzo0OTowOVrOFtLNfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzo0OTowOVrOFtLNfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxMzkxOA==", "bodyText": "Use Blame from #391.", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382913918", "createdAt": "2020-02-22T13:49:09Z", "author": {"login": "uhafner"}, "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java", "diffHunk": "@@ -13,15 +16,19 @@\n @ExportedBean\n public class IssueApi {\n     private final Issue issue;\n+    private final FileBlame fileBlame;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91da2e5e3e634d94f6b01022aad24ee4c75d2c2c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDY3NDgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzo0OToyM1rOFtLNhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzo0OToyM1rOFtLNhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxMzkyNg==", "bodyText": "see above", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382913926", "createdAt": "2020-02-22T13:49:23Z", "author": {"login": "uhafner"}, "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java", "diffHunk": "@@ -13,15 +16,19 @@\n @ExportedBean\n public class IssueApi {\n     private final Issue issue;\n+    private final FileBlame fileBlame;\n \n     /**\n      * Creates a new {@link IssueApi}.\n      *\n      * @param issue\n      *         the issue to expose the properties from\n+     * @param fileBlame\n+     *          the blame of the issue file\n      */\n-    public IssueApi(final Issue issue) {\n+    public IssueApi(final Issue issue, @Nullable final FileBlame fileBlame) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91da2e5e3e634d94f6b01022aad24ee4c75d2c2c"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDY3NTI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzo1MDoyNVrOFtLNvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzo1MDoyNVrOFtLNvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxMzk4MA==", "bodyText": "Using Blame introduced in #391 makes this call much simpler:\nreturn blame.getAuthor();", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382913980", "createdAt": "2020-02-22T13:50:25Z", "author": {"login": "uhafner"}, "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java", "diffHunk": "@@ -103,4 +110,43 @@ public String getReference() {\n     public String getFingerprint() {\n         return issue.getFingerprint();\n     }\n+\n+    /**\n+     * Returns the author's name of the blame.\n+     *\n+     * @return the name of the author\n+     */\n+    @Exported\n+    public String getAuthor() {\n+        if (fileBlame != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91da2e5e3e634d94f6b01022aad24ee4c75d2c2c"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDY3NTc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzo1MToxMVrOFtLN_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzo1MToxMVrOFtLN_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxNDA0Nw==", "bodyText": "I think it makes sense to add an addedAt property as well.", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382914047", "createdAt": "2020-02-22T13:51:11Z", "author": {"login": "uhafner"}, "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/IssueApi.java", "diffHunk": "@@ -103,4 +110,43 @@ public String getReference() {\n     public String getFingerprint() {\n         return issue.getFingerprint();\n     }\n+\n+    /**\n+     * Returns the author's name of the blame.\n+     *\n+     * @return the name of the author\n+     */\n+    @Exported\n+    public String getAuthor() {\n+        if (fileBlame != null) {\n+            return fileBlame.getName(getLineStart());\n+        }\n+        return \"\";\n+    }\n+\n+    /**\n+     * Returns the author's email of the blame.\n+     *\n+     * @return the email of the author\n+     */\n+    @Exported\n+    public String getEmail() {\n+        if (fileBlame != null) {\n+            return fileBlame.getEmail(getLineStart());\n+        }\n+        return \"\";\n+    }\n+\n+    /**\n+     * Returns the commit's sha1 of the blame.\n+     *\n+     * @return the commit's sha1 of the blame\n+     */\n+    @Exported\n+    public String getCommit() {\n+        if (fileBlame != null) {\n+            return fileBlame.getCommit(getLineStart());\n+        }\n+        return \"\";\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91da2e5e3e634d94f6b01022aad24ee4c75d2c2c"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDY3OTIxOnYy", "diffSide": "RIGHT", "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/ReportApi.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzo1NzozNFrOFtLPng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQxMzo1NzozNFrOFtLPng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjkxNDQ2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (blames.contains(issue.getFileName())) {\n          \n          \n            \n                        return new IssueApi(issue, blames.getBlame(issue.getFileName()));\n          \n          \n            \n                    }\n          \n          \n            \n                    return new IssueApi(issue, null);\n          \n          \n            \n            return new IssueApi(issue, new Blame(issue, blames));", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/389#discussion_r382914462", "createdAt": "2020-02-22T13:57:34Z", "author": {"login": "uhafner"}, "path": "src/main/java/io/jenkins/plugins/analysis/core/restapi/ReportApi.java", "diffHunk": "@@ -33,7 +40,14 @@ public ReportApi(final Report report) {\n     }\n \n     private List<IssueApi> map() {\n-        return report.stream().map(IssueApi::new).collect(Collectors.toList());\n+        return report.stream().map(this::createIssueApi).collect(Collectors.toList());\n+    }\n+\n+    private IssueApi createIssueApi(final Issue issue) {\n+        if (blames.contains(issue.getFileName())) {\n+            return new IssueApi(issue, blames.getBlame(issue.getFileName()));\n+        }\n+        return new IssueApi(issue, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91da2e5e3e634d94f6b01022aad24ee4c75d2c2c"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4714, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}