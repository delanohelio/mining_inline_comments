{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3OTIzODYz", "number": 476, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo1MTozMFrOD8m50g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTowMTo1OFrOEARhZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODc4NTQ2OnYy", "diffSide": "RIGHT", "path": "ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/DashboardTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo1MTozMFrOGVp4ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo1MTozMFrOGVp4ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM1OTU0Ng==", "bodyText": "Das gibt es schon im PageObject", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/476#discussion_r425359546", "createdAt": "2020-05-14T18:51:30Z", "author": {"login": "uhafner"}, "path": "ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/DashboardTable.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+\n+import java.net.URL;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+\n+import org.openqa.selenium.WebDriver;\n+import org.openqa.selenium.WebElement;\n+\n+import org.jenkinsci.test.acceptance.po.Build;\n+import org.jenkinsci.test.acceptance.po.PageObject;\n+\n+public class DashboardTable extends PageObject {\n+\n+    private final String portletId;\n+\n+    public DashboardTable(final Build parent, final URL url, final String portletId) {\n+        super(parent, url);\n+        this.portletId = portletId;\n+\n+    }\n+\n+    public WebDriver open() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6995b441240d4a9a78d86a7386e617e62ac43c16"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODc5MjUyOnYy", "diffSide": "RIGHT", "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DashboardViewPortletUITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo1Mzo0M1rOGVp9PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODo1Mzo0M1rOGVp9PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM2MDcwMA==", "bodyText": "Wenn Sie einmal auf der Console mvn assertj:generate-assertions aufrufen, werden die custom Assertions generiert. Dann geht\nassertThat(headers).hasPaneHeaders(\"Job\",\"CheckStyle Warnings\" );", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/476#discussion_r425360700", "createdAt": "2020-05-14T18:53:43Z", "author": {"login": "uhafner"}, "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DashboardViewPortletUITest.java", "diffHunk": "@@ -0,0 +1,100 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+import java.util.List;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.TestInstance;\n+import org.junit.jupiter.api.TestInstance.Lifecycle;\n+import org.openqa.selenium.WebElement;\n+\n+import org.jenkinsci.test.acceptance.junit.AbstractJUnitTest;\n+import org.jenkinsci.test.acceptance.plugins.dashboard_view.AbstractDashboardViewPortlet;\n+import org.jenkinsci.test.acceptance.plugins.dashboard_view.DashboardView;\n+import org.jenkinsci.test.acceptance.po.Build;\n+import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n+import org.jenkinsci.test.acceptance.po.Job;\n+\n+import io.jenkins.plugins.analysis.warnings.AnalysisResult.Tab;\n+import io.jenkins.plugins.analysis.warnings.AnalysisSummary.InfoType;\n+\n+import static io.jenkins.plugins.analysis.warnings.Assertions.*;\n+\n+/**\n+ * Integration tests for the dashboard portlet.\n+ *\n+ * @author Lukas Kirner\n+ */\n+public class DashboardViewPortletUITest extends AbstractJUnitTest {\n+    private static final String WARNINGS_PLUGIN_PREFIX = \"/\";\n+\n+    @Test\n+    public void shouldShowIcons() {\n+        DashboardView dashboardView = createDashboardWithStaticAnalysisPortlet(false, true);\n+        FreeStyleJob job = createFreeStyleJob(\"issue_filter/checkstyle-result.xml\");\n+        job.addPublisher(IssuesRecorder.class, recorder -> recorder.setTool(\"CheckStyle\"));\n+        job.save();\n+        Build build = shouldBuildJobSuccessfully(job);\n+\n+        DashboardTable dashboardTable = new DashboardTable(build, dashboardView.url, \"portlet-topPortlets-\" + 0);\n+        dashboardTable.open();\n+\n+        List<String> headers = dashboardTable.getPaneHeaders();\n+        assertThat(headers.get(0)).contains(\"Job\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6995b441240d4a9a78d86a7386e617e62ac43c16"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzIxMTkyOnYy", "diffSide": "RIGHT", "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DashboardViewPortletUITest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMDo1Nzo0NFrOGbc3eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMDo1OTo0MFrOGbc7cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQzNzY5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(headers.get(0)).contains(\"Job\");\n          \n          \n            \n                    assertThat(headers.get(1)).contains(\"\");\n          \n          \n            \n                    assertThat(headers).containsExactly(\"Job\", \"\");", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/476#discussion_r431437690", "createdAt": "2020-05-27T20:57:44Z", "author": {"login": "uhafner"}, "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DashboardViewPortletUITest.java", "diffHunk": "@@ -0,0 +1,202 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.Test;\n+import org.jenkinsci.test.acceptance.junit.AbstractJUnitTest;\n+import org.jenkinsci.test.acceptance.plugins.dashboard_view.DashboardView;\n+import org.jenkinsci.test.acceptance.po.Build;\n+import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n+import org.jenkinsci.test.acceptance.po.Job;\n+import io.jenkins.plugins.analysis.warnings.DashboardTable.DashboardTableEntry;\n+import static io.jenkins.plugins.analysis.warnings.Assertions.*;\n+\n+/**\n+ * Integration tests for the dashboard portlet.\n+ *\n+ * @author Lukas Kirner\n+ */\n+public class DashboardViewPortletUITest extends AbstractJUnitTest {\n+    private static final String WARNINGS_PLUGIN_PREFIX = \"/dashboard_test/\";\n+\n+    @Test\n+    public void shouldShowIcons() {\n+        DashboardView dashboardView = createDashboardWithStaticAnalysisPortlet(false, true);\n+        FreeStyleJob job = createFreeStyleJob(\"checkstyle-result.xml\");\n+        job.addPublisher(IssuesRecorder.class, recorder -> recorder.setTool(\"CheckStyle\"));\n+        job.save();\n+        Build build = shouldBuildJobSuccessfully(job);\n+\n+        DashboardTable dashboardTable = new DashboardTable(build, dashboardView.url);\n+\n+        List<String> headers = dashboardTable.getHeaders();\n+        assertThat(headers.get(0)).contains(\"Job\");\n+        assertThat(headers.get(1)).contains(\"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bbb690844b6a4f86aeeab0a4d66c3ae17da1ad3"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQzODcwNQ==", "bodyText": "Genau genommen zeigt der Test, dass kein Text da ist. Gibt es eine M\u00f6glichkeit einen weiteren Getter im PO zu haben: getIconNames, der analog arbeitet?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/476#discussion_r431438705", "createdAt": "2020-05-27T20:59:40Z", "author": {"login": "uhafner"}, "path": "ui-tests/src/test/java/io/jenkins/plugins/analysis/warnings/DashboardViewPortletUITest.java", "diffHunk": "@@ -0,0 +1,202 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+import java.util.List;\n+import java.util.Map;\n+import org.junit.Test;\n+import org.jenkinsci.test.acceptance.junit.AbstractJUnitTest;\n+import org.jenkinsci.test.acceptance.plugins.dashboard_view.DashboardView;\n+import org.jenkinsci.test.acceptance.po.Build;\n+import org.jenkinsci.test.acceptance.po.FreeStyleJob;\n+import org.jenkinsci.test.acceptance.po.Job;\n+import io.jenkins.plugins.analysis.warnings.DashboardTable.DashboardTableEntry;\n+import static io.jenkins.plugins.analysis.warnings.Assertions.*;\n+\n+/**\n+ * Integration tests for the dashboard portlet.\n+ *\n+ * @author Lukas Kirner\n+ */\n+public class DashboardViewPortletUITest extends AbstractJUnitTest {\n+    private static final String WARNINGS_PLUGIN_PREFIX = \"/dashboard_test/\";\n+\n+    @Test\n+    public void shouldShowIcons() {\n+        DashboardView dashboardView = createDashboardWithStaticAnalysisPortlet(false, true);\n+        FreeStyleJob job = createFreeStyleJob(\"checkstyle-result.xml\");\n+        job.addPublisher(IssuesRecorder.class, recorder -> recorder.setTool(\"CheckStyle\"));\n+        job.save();\n+        Build build = shouldBuildJobSuccessfully(job);\n+\n+        DashboardTable dashboardTable = new DashboardTable(build, dashboardView.url);\n+\n+        List<String> headers = dashboardTable.getHeaders();\n+        assertThat(headers.get(0)).contains(\"Job\");\n+        assertThat(headers.get(1)).contains(\"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQzNzY5MA=="}, "originalCommit": {"oid": "5bbb690844b6a4f86aeeab0a4d66c3ae17da1ad3"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4NzIyNTMyOnYy", "diffSide": "RIGHT", "path": "ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/DashboardTable.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTowMTo1OFrOGbdAQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QyMTowMTo1OFrOGbdAQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTQzOTkzNw==", "bodyText": "Da meckert Checkstyle noch einige JavaDoc Kommentare an...", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/476#discussion_r431439937", "createdAt": "2020-05-27T21:01:58Z", "author": {"login": "uhafner"}, "path": "ui-tests/src/main/java/io/jenkins/plugins/analysis/warnings/DashboardTable.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+import java.net.URL;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.stream.Collectors;\n+import org.openqa.selenium.WebElement;\n+import org.jenkinsci.test.acceptance.po.Build;\n+import org.jenkinsci.test.acceptance.po.PageObject;\n+\n+public class DashboardTable extends PageObject {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bbb690844b6a4f86aeeab0a4d66c3ae17da1ad3"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4778, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}