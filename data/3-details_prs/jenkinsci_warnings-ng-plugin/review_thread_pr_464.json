{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MTkyNTI0", "number": 464, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMjozNToyMVrOD6BTGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoxNTo0M1rOD-aPSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTY1MjcyOnYy", "diffSide": "RIGHT", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/recorder/JobActionITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMjozNToyMVrOGRn1FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMjozNToyMVrOGRn1FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTEzMTU0MA==", "bodyText": "For each of the job actions:\n\nverify that getUrlName is e.g. \"eclipse\"\nverify that getIonName is e.g. \"xyz\"", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/464#discussion_r421131540", "createdAt": "2020-05-06T22:35:21Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/recorder/JobActionITest.java", "diffHunk": "@@ -48,18 +57,22 @@ public void shouldShowTrendChart() {\n         Run<?, ?> build = buildWithResult(project, Result.SUCCESS);\n         assertActionProperties(project, build);\n \n-        HtmlPage jobPage = getWebPage(JavaScriptSupport.JS_DISABLED, project);\n-        assertThatTrendChartIsHidden(jobPage); // trend chart requires at least two builds\n+        project.getActions(JobAction.class);\n+        List<JobAction> jobActions = project.getActions(JobAction.class);\n \n-        assertThatSidebarLinkIsVisibleAndOpensLatestResults(jobPage, build);\n+        assertThatTrendChartIsHidden(jobActions.get(0)); // trend chart requires at least two builds\n+\n+        //TODO This should be done too. Not sure how to check sidebar links without UI\n+        //assertThatSidebarLinkIsVisibleAndOpensLatestResults(jobPage, build);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a523de4506e5c38ee186cdae37eaf94f60b6ddd"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzY3Mzc1OnYy", "diffSide": "RIGHT", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/recorder/JobActionITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoxMjoyOFrOGYfojQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoxMjoyOFrOGYfojQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMzNzI5Mw==", "bodyText": "Extract those strings as constants", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/464#discussion_r428337293", "createdAt": "2020-05-20T22:12:28Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/recorder/JobActionITest.java", "diffHunk": "@@ -210,20 +210,60 @@ private void assertThatSidebarLinkIsVisibleAndOpensLatestResults(final HtmlPage\n         assertThat(results.getBaseURI()).endsWith(build.getUrl() + labelProvider.getId() + \"/\");\n     }\n \n-    private void assertThatTrendChartIsVisible(final HtmlPage jobPage) {\n-        DomElement trendChart = jobPage.getElementById(\"eclipse-history-chart\");\n-        assertThat(trendChart).isNotNull();\n+    private void assertThatTrendChartIsVisible(AsyncTrendChart trendChart) {\n+        assertThat(trendChart.isTrendVisible()).isTrue();\n+    }\n+\n+    private void assertThatTrendChartIsHidden(AsyncTrendChart trendChart) {\n+        assertThat(trendChart.isTrendVisible()).isFalse();\n+    }\n+\n+    public void assertThatCheckstyleAndEclipseChartExist(Actionable actionable, boolean shouldChartBeVisible) {\n+        List<JobAction> jobActions = actionable.getActions(JobAction.class);\n+        assertThat(jobActions).hasSize(2);\n+\n+        JobAction checkstyle;\n+        JobAction eclipse;\n+\n+        if (\"checkstyle\".equals(jobActions.get(0).getUrlName())) {\n+            checkstyle = jobActions.get(0);\n+            eclipse = jobActions.get(1);\n+        }\n+        else {\n+            checkstyle = jobActions.get(1);\n+            eclipse = jobActions.get(0);\n+        }\n+        assertThat(eclipse.getTrendName()).isEqualTo(ECLIPSE);\n+        assertThat(eclipse.getIconFileName()).contains(\"analysis-24x24\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e71da4efebfb866de080bce34e7420176ee53c"}, "originalPosition": 170}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzY3NzEwOnYy", "diffSide": "RIGHT", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/recorder/JobActionITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoxMzo1MFrOGYfqqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoxMzo1MFrOGYfqqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMzNzgzNA==", "bodyText": "Am besten den ganzen Code mal mit Reformat korrigieren (und evtl. CheckStyle Plugin aktivieren, dann werden diese Probleme gleich markiert).", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/464#discussion_r428337834", "createdAt": "2020-05-20T22:13:50Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/recorder/JobActionITest.java", "diffHunk": "@@ -210,20 +210,60 @@ private void assertThatSidebarLinkIsVisibleAndOpensLatestResults(final HtmlPage\n         assertThat(results.getBaseURI()).endsWith(build.getUrl() + labelProvider.getId() + \"/\");\n     }\n \n-    private void assertThatTrendChartIsVisible(final HtmlPage jobPage) {\n-        DomElement trendChart = jobPage.getElementById(\"eclipse-history-chart\");\n-        assertThat(trendChart).isNotNull();\n+    private void assertThatTrendChartIsVisible(AsyncTrendChart trendChart) {\n+        assertThat(trendChart.isTrendVisible()).isTrue();\n+    }\n+\n+    private void assertThatTrendChartIsHidden(AsyncTrendChart trendChart) {\n+        assertThat(trendChart.isTrendVisible()).isFalse();\n+    }\n+\n+    public void assertThatCheckstyleAndEclipseChartExist(Actionable actionable, boolean shouldChartBeVisible) {\n+        List<JobAction> jobActions = actionable.getActions(JobAction.class);\n+        assertThat(jobActions).hasSize(2);\n+\n+        JobAction checkstyle;\n+        JobAction eclipse;\n+\n+        if (\"checkstyle\".equals(jobActions.get(0).getUrlName())) {\n+            checkstyle = jobActions.get(0);\n+            eclipse = jobActions.get(1);\n+        }\n+        else {\n+            checkstyle = jobActions.get(1);\n+            eclipse = jobActions.get(0);\n+        }\n+        assertThat(eclipse.getTrendName()).isEqualTo(ECLIPSE);\n+        assertThat(eclipse.getIconFileName()).contains(\"analysis-24x24\");\n+        assertThat(checkstyle.getTrendName()).isEqualTo(CHECKSTYLEW);\n+        assertThat(checkstyle.getIconFileName()).contains(\"checkstyle-24x24\");\n \n-        List<DomElement> captions = jobPage.getByXPath(\"//div[contains(@class, 'test-trend-caption')]\");\n-        assertThat(captions).hasSize(1);\n-        String title = captions.get(0).getTextContent();\n-        assertThat(title).isEqualTo(new Eclipse().getLabelProvider().getTrendName());\n+        if(shouldChartBeVisible){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e71da4efebfb866de080bce34e7420176ee53c"}, "originalPosition": 178}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzY4MDIzOnYy", "diffSide": "RIGHT", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/recorder/JobActionITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoxNTowNVrOGYfsrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoxNTowNVrOGYfsrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMzODM1MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    List<AggregatedTrendAction> aggregatedTrendActions = actionable.getActions(AggregatedTrendAction.class);\n          \n          \n            \n                    AggregatedTrendAction aggregatedTrendActions = actionable.getAction(AggregatedTrendAction.class);", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/464#discussion_r428338351", "createdAt": "2020-05-20T22:15:05Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/recorder/JobActionITest.java", "diffHunk": "@@ -210,20 +210,60 @@ private void assertThatSidebarLinkIsVisibleAndOpensLatestResults(final HtmlPage\n         assertThat(results.getBaseURI()).endsWith(build.getUrl() + labelProvider.getId() + \"/\");\n     }\n \n-    private void assertThatTrendChartIsVisible(final HtmlPage jobPage) {\n-        DomElement trendChart = jobPage.getElementById(\"eclipse-history-chart\");\n-        assertThat(trendChart).isNotNull();\n+    private void assertThatTrendChartIsVisible(AsyncTrendChart trendChart) {\n+        assertThat(trendChart.isTrendVisible()).isTrue();\n+    }\n+\n+    private void assertThatTrendChartIsHidden(AsyncTrendChart trendChart) {\n+        assertThat(trendChart.isTrendVisible()).isFalse();\n+    }\n+\n+    public void assertThatCheckstyleAndEclipseChartExist(Actionable actionable, boolean shouldChartBeVisible) {\n+        List<JobAction> jobActions = actionable.getActions(JobAction.class);\n+        assertThat(jobActions).hasSize(2);\n+\n+        JobAction checkstyle;\n+        JobAction eclipse;\n+\n+        if (\"checkstyle\".equals(jobActions.get(0).getUrlName())) {\n+            checkstyle = jobActions.get(0);\n+            eclipse = jobActions.get(1);\n+        }\n+        else {\n+            checkstyle = jobActions.get(1);\n+            eclipse = jobActions.get(0);\n+        }\n+        assertThat(eclipse.getTrendName()).isEqualTo(ECLIPSE);\n+        assertThat(eclipse.getIconFileName()).contains(\"analysis-24x24\");\n+        assertThat(checkstyle.getTrendName()).isEqualTo(CHECKSTYLEW);\n+        assertThat(checkstyle.getIconFileName()).contains(\"checkstyle-24x24\");\n \n-        List<DomElement> captions = jobPage.getByXPath(\"//div[contains(@class, 'test-trend-caption')]\");\n-        assertThat(captions).hasSize(1);\n-        String title = captions.get(0).getTextContent();\n-        assertThat(title).isEqualTo(new Eclipse().getLabelProvider().getTrendName());\n+        if(shouldChartBeVisible){\n+            assertThatTrendChartIsVisible(eclipse);\n+            assertThatTrendChartIsVisible(checkstyle);\n+        }\n+        else {\n+            assertThatTrendChartIsHidden(eclipse);\n+            assertThatTrendChartIsHidden(checkstyle);\n+        }\n     }\n \n-    private void assertThatTrendChartIsHidden(final HtmlPage jobPage) {\n-        DomElement trendChart = jobPage.getElementById(\"eclipse-history-chart\");\n+    public void assertThatAggregationChartExists(Actionable actionable,  boolean shouldChartBeVisible){\n+        List<AggregatedTrendAction> aggregatedTrendActions = actionable.getActions(AggregatedTrendAction.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e71da4efebfb866de080bce34e7420176ee53c"}, "originalPosition": 191}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NzY4MjAzOnYy", "diffSide": "RIGHT", "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/recorder/JobActionITest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoxNTo0M1rOGYftzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQyMjoxNTo0M1rOGYftzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODMzODYzNw==", "bodyText": "Der Name steht aktuell nur im UI, oder was genau ist die Idee dahinter?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/464#discussion_r428338637", "createdAt": "2020-05-20T22:15:43Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/warnings/recorder/JobActionITest.java", "diffHunk": "@@ -210,20 +210,60 @@ private void assertThatSidebarLinkIsVisibleAndOpensLatestResults(final HtmlPage\n         assertThat(results.getBaseURI()).endsWith(build.getUrl() + labelProvider.getId() + \"/\");\n     }\n \n-    private void assertThatTrendChartIsVisible(final HtmlPage jobPage) {\n-        DomElement trendChart = jobPage.getElementById(\"eclipse-history-chart\");\n-        assertThat(trendChart).isNotNull();\n+    private void assertThatTrendChartIsVisible(AsyncTrendChart trendChart) {\n+        assertThat(trendChart.isTrendVisible()).isTrue();\n+    }\n+\n+    private void assertThatTrendChartIsHidden(AsyncTrendChart trendChart) {\n+        assertThat(trendChart.isTrendVisible()).isFalse();\n+    }\n+\n+    public void assertThatCheckstyleAndEclipseChartExist(Actionable actionable, boolean shouldChartBeVisible) {\n+        List<JobAction> jobActions = actionable.getActions(JobAction.class);\n+        assertThat(jobActions).hasSize(2);\n+\n+        JobAction checkstyle;\n+        JobAction eclipse;\n+\n+        if (\"checkstyle\".equals(jobActions.get(0).getUrlName())) {\n+            checkstyle = jobActions.get(0);\n+            eclipse = jobActions.get(1);\n+        }\n+        else {\n+            checkstyle = jobActions.get(1);\n+            eclipse = jobActions.get(0);\n+        }\n+        assertThat(eclipse.getTrendName()).isEqualTo(ECLIPSE);\n+        assertThat(eclipse.getIconFileName()).contains(\"analysis-24x24\");\n+        assertThat(checkstyle.getTrendName()).isEqualTo(CHECKSTYLEW);\n+        assertThat(checkstyle.getIconFileName()).contains(\"checkstyle-24x24\");\n \n-        List<DomElement> captions = jobPage.getByXPath(\"//div[contains(@class, 'test-trend-caption')]\");\n-        assertThat(captions).hasSize(1);\n-        String title = captions.get(0).getTextContent();\n-        assertThat(title).isEqualTo(new Eclipse().getLabelProvider().getTrendName());\n+        if(shouldChartBeVisible){\n+            assertThatTrendChartIsVisible(eclipse);\n+            assertThatTrendChartIsVisible(checkstyle);\n+        }\n+        else {\n+            assertThatTrendChartIsHidden(eclipse);\n+            assertThatTrendChartIsHidden(checkstyle);\n+        }\n     }\n \n-    private void assertThatTrendChartIsHidden(final HtmlPage jobPage) {\n-        DomElement trendChart = jobPage.getElementById(\"eclipse-history-chart\");\n+    public void assertThatAggregationChartExists(Actionable actionable,  boolean shouldChartBeVisible){\n+        List<AggregatedTrendAction> aggregatedTrendActions = actionable.getActions(AggregatedTrendAction.class);\n+        assertThat(aggregatedTrendActions).hasSize(1);\n+        //TODO maybe add getTrendName Methode to aggregatedTrendAction?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58e71da4efebfb866de080bce34e7420176ee53c"}, "originalPosition": 193}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4762, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}