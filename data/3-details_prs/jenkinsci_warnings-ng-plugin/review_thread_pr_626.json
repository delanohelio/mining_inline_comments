{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyOTcxMzgz", "number": 626, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTozNTozM1rOEkc5tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTozNzozNFrOEkc8Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjU3NzE5OnYy", "diffSide": "RIGHT", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/warnings/Brakeman.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTozNTozM1rOHTZy_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTozNTozM1rOHTZy_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwNzY0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                static final String ID = \"brakeman\";\n          \n          \n            \n                private static final String ID = \"brakeman\";", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/626#discussion_r490107647", "createdAt": "2020-09-17T09:35:33Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/warnings/Brakeman.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+import edu.hm.hafner.analysis.IssueParser;\n+import edu.hm.hafner.analysis.parser.BrakemanParser;\n+\n+import org.kohsuke.stapler.DataBoundConstructor;\n+import org.jenkinsci.Symbol;\n+import hudson.Extension;\n+\n+import io.jenkins.plugins.analysis.core.model.ReportScanningTool;\n+\n+/**\n+ * Provides a parser and customized messages for Brakeman Scanner.\n+ */\n+public class Brakeman extends ReportScanningTool {\n+    private static final long serialVersionUID = 75319755633492904L;\n+    static final String ID = \"brakeman\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97d734e9398ddf27e6dee055bf00ec808db6f843"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjU4NDA3OnYy", "diffSide": "RIGHT", "path": "plugin/src/main/java/io/jenkins/plugins/analysis/warnings/Brakeman.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTozNzozNFrOHTZ3WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QwOTozNzozNFrOHTZ3WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEwODc2MQ==", "bodyText": "I'm not sure if it would be better to use:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return \"brakeman-output.json\";\n          \n          \n            \n                        return \"**/brakeman-output.json\";", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/626#discussion_r490108761", "createdAt": "2020-09-17T09:37:34Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/warnings/Brakeman.java", "diffHunk": "@@ -0,0 +1,68 @@\n+package io.jenkins.plugins.analysis.warnings;\n+\n+import edu.hm.hafner.analysis.IssueParser;\n+import edu.hm.hafner.analysis.parser.BrakemanParser;\n+\n+import org.kohsuke.stapler.DataBoundConstructor;\n+import org.jenkinsci.Symbol;\n+import hudson.Extension;\n+\n+import io.jenkins.plugins.analysis.core.model.ReportScanningTool;\n+\n+/**\n+ * Provides a parser and customized messages for Brakeman Scanner.\n+ */\n+public class Brakeman extends ReportScanningTool {\n+    private static final long serialVersionUID = 75319755633492904L;\n+    static final String ID = \"brakeman\";\n+\n+    /** Creates a new instance of {@link Brakeman}. */\n+    @DataBoundConstructor\n+    public Brakeman() {\n+        super();\n+        // empty constructor required for stapler\n+    }\n+\n+    @Override\n+    public IssueParser createParser() {\n+        return new BrakemanParser();\n+    }\n+\n+    /** Descriptor for this static analysis tool. */\n+    @Symbol(\"brakeman\")\n+    @Extension\n+    public static class Descriptor extends ReportScanningToolDescriptor {\n+        /** Creates the descriptor instance. */\n+        public Descriptor() {\n+            super(ID);\n+        }\n+\n+        @Override\n+        public boolean canScanConsoleLog() {\n+            return false;\n+        }\n+\n+        @Override\n+        public String getDisplayName() {\n+            return \"Brakeman\";\n+        }\n+\n+        @Override\n+        public String getHelp() {\n+            return \"Reads Brakeman JSON reports. \"\n+                    + \"Use commandline <code>brakeman -o brakeman-output.json</code> output.<br/>\"\n+                    + \"See <a href='https://brakemanscanner.org/docs/jenkins/'>\"\n+                    + \"Brakeman documentation</a> for usage details.\";\n+        }\n+\n+        @Override\n+        public String getPattern() {\n+            return \"brakeman-output.json\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97d734e9398ddf27e6dee055bf00ec808db6f843"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4759, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}