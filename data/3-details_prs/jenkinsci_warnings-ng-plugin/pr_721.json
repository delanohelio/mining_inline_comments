{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NzE5NzEw", "number": 721, "title": "Support withChecks", "bodyText": "This PR adds support for the withChecks step recently added to the checks-api plugin, that allows for customization of published checks names by context.", "createdAt": "2020-12-26T17:57:16Z", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721", "merged": true, "mergeCommit": {"oid": "f641419eac352131d13faa81f1876396a271457f"}, "closed": true, "closedAt": "2020-12-29T23:43:00Z", "author": {"login": "mrginglymus"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdqAtltgH2gAyNTQ1NzE5NzEwOmYzNDU3NGQ2M2JlYTQ4OTZjYTBiOTVhZDY4OWFmNWQ5ZDY3ODE2YjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdrDgciAFqTU1OTczOTk1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f34574d63bea4896ca0b95ad689af5d9d67816b5", "author": {"user": {"login": "mrginglymus", "name": "Bill Collins"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/f34574d63bea4896ca0b95ad689af5d9d67816b5", "committedDate": "2020-12-26T17:51:51Z", "message": "Add test for withChecks support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c37169cd730d8e5853a4ee04d388ade4f6a506cd", "author": {"user": {"login": "mrginglymus", "name": "Bill Collins"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/c37169cd730d8e5853a4ee04d388ade4f6a506cd", "committedDate": "2020-12-26T17:56:06Z", "message": "Support withChecks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4110debe6ab19e76c76ee0fa671a61584b77082a", "author": {"user": {"login": "mrginglymus", "name": "Bill Collins"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/4110debe6ab19e76c76ee0fa671a61584b77082a", "committedDate": "2020-12-26T18:01:07Z", "message": "Update readme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57703098d897573102f94326972028f36e26ae91", "author": {"user": {"login": "mrginglymus", "name": "Bill Collins"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/57703098d897573102f94326972028f36e26ae91", "committedDate": "2020-12-26T19:21:49Z", "message": "Satisfy linters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MjI3Mzgx", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#pullrequestreview-559227381", "createdAt": "2020-12-28T17:08:25Z", "commit": {"oid": "57703098d897573102f94326972028f36e26ae91"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzowODoyNVrOIL94Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzoxMDoyNVrOIL96Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxOTAxOA==", "bodyText": "I would rather prefer it look like:\nWarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener(), getContext().get(ChecksInfo.class));\n\nThen we can place the logic inside of WarningChecksPublisher and reuse it for the recordIssues step. (PublishIssuesStep is a different step with the name publishIssues).", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549419018", "createdAt": "2020-12-28T17:08:25Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/PublishIssuesStep.java", "diffHunk": "@@ -855,7 +857,8 @@ protected ResultAction run() throws IOException, InterruptedException, IllegalSt\n             ResultAction action = publisher.attachAction(step.getTrendChartType());\n \n             if (!step.isSkipPublishingChecks()) {\n-                WarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener());\n+                String checksName = Optional.ofNullable(getContext().get(ChecksInfo.class)).map(ChecksInfo::getName).orElse(null);\n+                WarningChecksPublisher checksPublisher = new WarningChecksPublisher(action, getTaskListener(), checksName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57703098d897573102f94326972028f36e26ae91"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQxOTU0Ng==", "bodyText": "See above: parameter should be of type ChecksInfo.\nAnd do not add a second constructor since we need the same call for the IssueRecorder (which is used by the recordIssues step).", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549419546", "createdAt": "2020-12-28T17:10:25Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -40,10 +40,16 @@\n class WarningChecksPublisher {\n     private final ResultAction action;\n     private final TaskListener listener;\n+    private final String checksName;\n \n-    WarningChecksPublisher(final ResultAction action, final TaskListener listener) {\n+    WarningChecksPublisher(final ResultAction action, final TaskListener listener, final String checksName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57703098d897573102f94326972028f36e26ae91"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36ee313dbded35e6bc1a3b016d454a3240339929", "author": {"user": {"login": "mrginglymus", "name": "Bill Collins"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/36ee313dbded35e6bc1a3b016d454a3240339929", "committedDate": "2020-12-28T18:15:04Z", "message": "Pass around checksInfo, not checksName; support recordIssues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130", "author": {"user": {"login": "mrginglymus", "name": "Bill Collins"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/979f79225faeee4b22095cf0f2db79e234cdb130", "committedDate": "2020-12-28T18:55:41Z", "message": "Add test for withChecks/recordIssues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzA5OTAy", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#pullrequestreview-559309902", "createdAt": "2020-12-28T21:35:11Z", "commit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMTozNToxMVrOIMCcNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQyMjoxMjowMFrOIMC-0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5MzgxMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private ChecksInfo checksInfo;\n          \n          \n            \n                @CheckForNull\n          \n          \n            \n                private ChecksInfo checksInfo;", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549493813", "createdAt": "2020-12-28T21:35:11Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java", "diffHunk": "@@ -112,6 +113,8 @@\n \n     private boolean skipPublishingChecks; // by default, checks will be published\n \n+    private ChecksInfo checksInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5Mzg4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void setChecksInfo(final ChecksInfo checksInfo) {\n          \n          \n            \n                public void setChecksInfo(@CheckForNull final ChecksInfo checksInfo) {", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549493880", "createdAt": "2020-12-28T21:35:32Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/IssuesRecorder.java", "diffHunk": "@@ -591,6 +594,10 @@ public void setFilters(final List<RegexpFilter> filters) {\n         this.filters = new ArrayList<>(filters);\n     }\n \n+    public void setChecksInfo(final ChecksInfo checksInfo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5NDA5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                WarningChecksPublisher(final ResultAction action, final TaskListener listener, final ChecksInfo checksInfo) {\n          \n          \n            \n                WarningChecksPublisher(final ResultAction action, final TaskListener listener, @CheckForNull final ChecksInfo checksInfo) {", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549494097", "createdAt": "2020-12-28T21:36:15Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -40,10 +42,12 @@\n class WarningChecksPublisher {\n     private final ResultAction action;\n     private final TaskListener listener;\n+    private final ChecksInfo checksInfo;\n \n-    WarningChecksPublisher(final ResultAction action, final TaskListener listener) {\n+    WarningChecksPublisher(final ResultAction action, final TaskListener listener, final ChecksInfo checksInfo) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5NDE0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private final ChecksInfo checksInfo;\n          \n          \n            \n                @CheckForNull\n          \n          \n            \n                private final ChecksInfo checksInfo;", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549494140", "createdAt": "2020-12-28T21:36:28Z", "author": {"login": "uhafner"}, "path": "plugin/src/main/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisher.java", "diffHunk": "@@ -40,10 +42,12 @@\n class WarningChecksPublisher {\n     private final ResultAction action;\n     private final TaskListener listener;\n+    private final ChecksInfo checksInfo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQ5OTQxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    WorkflowJob project = createPipeline();\n          \n          \n            \n                    copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n          \n          \n            \n                    WorkflowJob project = createPipelineWithWorkspaceFiles(NEW_CHECKSTYLE_REPORT);\n          \n      \n    \n    \n  \n\nThe file name needs to be renamed automatically, otherwise it is not found.", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549499412", "createdAt": "2020-12-28T21:57:24Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 117}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMTI1OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertThat(publishedChecks.size()).isEqualTo(2);\n          \n          \n            \n                    assertThat(publishedChecks).hasSize(2); // add a small comment why there are two results?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549501258", "createdAt": "2020-12-28T22:05:42Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMTYyNA==", "bodyText": "An additional check:\n        assertThat(publishedChecks.get(1).getOutput()).isPresent().hasValueSatisfying(\n                output -> assertThat(output.getTitle()).isPresent().get().isEqualTo(\"No new issues, 6 total.\"));", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549501624", "createdAt": "2020-12-28T22:06:54Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);\n+\n+        publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMjU3OQ==", "bodyText": "This is not actually part of your PR: but since you added a simple way to verify the checks can you also add another test that does not wrap the code with withChecks and see that the original title is used?", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549502579", "createdAt": "2020-12-28T22:11:36Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);\n+\n+        publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+    }\n+\n+    /**\n+     * Test that recordIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextRecordIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(String.format(\"\"\n+                + \"withChecks('Custom Checks Name') {\\n\"\n+                + \"  recordIssues(tools: [%s(pattern: '%s')])\\n\"\n+                + \"}\", new CheckStyle().getSymbolName(), NEW_CHECKSTYLE_REPORT)));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);\n+\n+        publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTUwMjY3Mw==", "bodyText": "See comments above here as well", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#discussion_r549502673", "createdAt": "2020-12-28T22:12:00Z", "author": {"login": "uhafner"}, "path": "plugin/src/test/java/io/jenkins/plugins/analysis/core/steps/WarningChecksPublisherITest.java", "diffHunk": "@@ -189,6 +209,43 @@ public void shouldIgnoreColumnsWhenBuildMultipleLineAnnotation() {\n                 .hasFieldOrPropertyWithValue(\"endColumn\", Optional.empty());\n     }\n \n+    /**\n+     * Test that publishIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextPublishIssues() {\n+        WorkflowJob project = createPipeline();\n+        copySingleFileToWorkspace(project, NEW_CHECKSTYLE_REPORT);\n+        project.setDefinition(asStage(\"withChecks('Custom Checks Name') {\", createScanForIssuesStep(new CheckStyle()), PUBLISH_ISSUES_STEP, \"}\"));\n+        buildSuccessfully(project);\n+\n+        List<ChecksDetails> publishedChecks = PUBLISHER_FACTORY.getPublishedChecks();\n+\n+        assertThat(publishedChecks.size()).isEqualTo(2);\n+\n+        publishedChecks.forEach(check -> assertThat(check.getName()).isPresent().get().isEqualTo(\"Custom Checks Name\"));\n+    }\n+\n+    /**\n+     * Test that recordIssues honors the checks name provided by a withChecks context.\n+     */\n+    @Test\n+    public void shouldHonorWithChecksContextRecordIssues() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "979f79225faeee4b22095cf0f2db79e234cdb130"}, "originalPosition": 132}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "author": {"user": {"login": "mrginglymus", "name": "Bill Collins"}}, "url": "https://github.com/jenkinsci/warnings-ng-plugin/commit/c46e911ae7d76e0f67483ffce4820a3cf5ca57ad", "committedDate": "2020-12-29T16:48:21Z", "message": "Review feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NzM5OTU2", "url": "https://github.com/jenkinsci/warnings-ng-plugin/pull/721#pullrequestreview-559739956", "createdAt": "2020-12-29T23:41:08Z", "commit": {"oid": "c46e911ae7d76e0f67483ffce4820a3cf5ca57ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 119, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}