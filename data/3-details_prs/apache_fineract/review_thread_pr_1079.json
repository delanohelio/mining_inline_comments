{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MDY0NTIz", "number": 1079, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNjo1NzoxN1rOEJM56Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxNDo0Mzo0MlrOEJWsYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDg0MDczOnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/PlatformApiDataValidationException.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNjo1NzoxN1rOGpoE5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMTowODoxNlrOGqiRrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwMTQxMw==", "bodyText": "In this case, where there is no Object... defaultUserMessageArgs in the original far, you should not introduce it. Just have constructors which take an additional last new argument like , Throwable cause) - makes sense?", "url": "https://github.com/apache/fineract/pull/1079#discussion_r446301413", "createdAt": "2020-06-26T16:57:17Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/PlatformApiDataValidationException.java", "diffHunk": "@@ -43,6 +43,30 @@ public PlatformApiDataValidationException(final String globalisationMessageCode,\n         this.errors = errors;\n     }\n \n+    public PlatformApiDataValidationException(final String globalisationMessageCode, final String defaultUserMessage,\n+            final List<ApiParameterError> errors, final Object... defaultUserMessageArgs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyOTU3Nw==", "bodyText": "okay! noted.", "url": "https://github.com/apache/fineract/pull/1079#discussion_r446529577", "createdAt": "2020-06-27T14:00:00Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/PlatformApiDataValidationException.java", "diffHunk": "@@ -43,6 +43,30 @@ public PlatformApiDataValidationException(final String globalisationMessageCode,\n         this.errors = errors;\n     }\n \n+    public PlatformApiDataValidationException(final String globalisationMessageCode, final String defaultUserMessage,\n+            final List<ApiParameterError> errors, final Object... defaultUserMessageArgs) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwMTQxMw=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI1NDk1OQ==", "bodyText": "Ok now.", "url": "https://github.com/apache/fineract/pull/1079#discussion_r447254959", "createdAt": "2020-06-29T21:08:16Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/PlatformApiDataValidationException.java", "diffHunk": "@@ -43,6 +43,30 @@ public PlatformApiDataValidationException(final String globalisationMessageCode,\n         this.errors = errors;\n     }\n \n+    public PlatformApiDataValidationException(final String globalisationMessageCode, final String defaultUserMessage,\n+            final List<ApiParameterError> errors, final Object... defaultUserMessageArgs) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwMTQxMw=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDg0ODY0OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/PlatformDataIntegrityException.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzowMDowNVrOGpoKLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMjo0MzoxNFrOGqlFMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwMjc2NQ==", "bodyText": "copy pasting (my) findThrowableCause() & filterThrowableCause() seems like a shame... always try to avoid copy/paste, as much as you can. How about introducing a new e.g. public abstract class AbstractPlatformException extends RuntimeException with suitable protected constructors, and these two methods as protected static methods?", "url": "https://github.com/apache/fineract/pull/1079#discussion_r446302765", "createdAt": "2020-06-26T17:00:05Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/PlatformDataIntegrityException.java", "diffHunk": "@@ -30,18 +33,39 @@\n \n     public PlatformDataIntegrityException(final String globalisationMessageCode, final String defaultUserMessage,\n             final Object... defaultUserMessageArgs) {\n+        super(findThrowableCause(defaultUserMessageArgs));\n         this.globalisationMessageCode = globalisationMessageCode;\n         this.defaultUserMessage = defaultUserMessage;\n         this.parameterName = null;\n-        this.defaultUserMessageArgs = defaultUserMessageArgs;\n+        this.defaultUserMessageArgs = filterThrowableCause(defaultUserMessageArgs);\n     }\n \n     public PlatformDataIntegrityException(final String globalisationMessageCode, final String defaultUserMessage,\n             final String parameterName, final Object... defaultUserMessageArgs) {\n+        super(findThrowableCause(defaultUserMessageArgs));\n         this.globalisationMessageCode = globalisationMessageCode;\n         this.defaultUserMessage = defaultUserMessage;\n         this.parameterName = parameterName;\n-        this.defaultUserMessageArgs = defaultUserMessageArgs;\n+        this.defaultUserMessageArgs = filterThrowableCause(defaultUserMessageArgs);\n+    }\n+\n+    private static Throwable findThrowableCause(Object[] defaultUserMessageArgs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyOTg1Ng==", "bodyText": "Agreed! I did not understand do we really need a constructor though(or you mean something else here), an abstract class without any attributes and two static methods will do IMO.", "url": "https://github.com/apache/fineract/pull/1079#discussion_r446529856", "createdAt": "2020-06-27T14:03:33Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/PlatformDataIntegrityException.java", "diffHunk": "@@ -30,18 +33,39 @@\n \n     public PlatformDataIntegrityException(final String globalisationMessageCode, final String defaultUserMessage,\n             final Object... defaultUserMessageArgs) {\n+        super(findThrowableCause(defaultUserMessageArgs));\n         this.globalisationMessageCode = globalisationMessageCode;\n         this.defaultUserMessage = defaultUserMessage;\n         this.parameterName = null;\n-        this.defaultUserMessageArgs = defaultUserMessageArgs;\n+        this.defaultUserMessageArgs = filterThrowableCause(defaultUserMessageArgs);\n     }\n \n     public PlatformDataIntegrityException(final String globalisationMessageCode, final String defaultUserMessage,\n             final String parameterName, final Object... defaultUserMessageArgs) {\n+        super(findThrowableCause(defaultUserMessageArgs));\n         this.globalisationMessageCode = globalisationMessageCode;\n         this.defaultUserMessage = defaultUserMessage;\n         this.parameterName = parameterName;\n-        this.defaultUserMessageArgs = defaultUserMessageArgs;\n+        this.defaultUserMessageArgs = filterThrowableCause(defaultUserMessageArgs);\n+    }\n+\n+    private static Throwable findThrowableCause(Object[] defaultUserMessageArgs) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwMjc2NQ=="}, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUzNTE1Mg==", "bodyText": "@vorburger  made the change I am unsure though if is this is what you meant.", "url": "https://github.com/apache/fineract/pull/1079#discussion_r446535152", "createdAt": "2020-06-27T15:01:06Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/PlatformDataIntegrityException.java", "diffHunk": "@@ -30,18 +33,39 @@\n \n     public PlatformDataIntegrityException(final String globalisationMessageCode, final String defaultUserMessage,\n             final Object... defaultUserMessageArgs) {\n+        super(findThrowableCause(defaultUserMessageArgs));\n         this.globalisationMessageCode = globalisationMessageCode;\n         this.defaultUserMessage = defaultUserMessage;\n         this.parameterName = null;\n-        this.defaultUserMessageArgs = defaultUserMessageArgs;\n+        this.defaultUserMessageArgs = filterThrowableCause(defaultUserMessageArgs);\n     }\n \n     public PlatformDataIntegrityException(final String globalisationMessageCode, final String defaultUserMessage,\n             final String parameterName, final Object... defaultUserMessageArgs) {\n+        super(findThrowableCause(defaultUserMessageArgs));\n         this.globalisationMessageCode = globalisationMessageCode;\n         this.defaultUserMessage = defaultUserMessage;\n         this.parameterName = parameterName;\n-        this.defaultUserMessageArgs = defaultUserMessageArgs;\n+        this.defaultUserMessageArgs = filterThrowableCause(defaultUserMessageArgs);\n+    }\n+\n+    private static Throwable findThrowableCause(Object[] defaultUserMessageArgs) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwMjc2NQ=="}, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI1ODk1Ng==", "bodyText": "It's OK, although arguable now it's perhaps more of a... PlatformExceptionUtil than an AbstractPlatformException.. I'll merge it anyway, as this isn't super important, and perhaps I'll follow-up with a suggested improvement.", "url": "https://github.com/apache/fineract/pull/1079#discussion_r447258956", "createdAt": "2020-06-29T21:16:22Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/PlatformDataIntegrityException.java", "diffHunk": "@@ -30,18 +33,39 @@\n \n     public PlatformDataIntegrityException(final String globalisationMessageCode, final String defaultUserMessage,\n             final Object... defaultUserMessageArgs) {\n+        super(findThrowableCause(defaultUserMessageArgs));\n         this.globalisationMessageCode = globalisationMessageCode;\n         this.defaultUserMessage = defaultUserMessage;\n         this.parameterName = null;\n-        this.defaultUserMessageArgs = defaultUserMessageArgs;\n+        this.defaultUserMessageArgs = filterThrowableCause(defaultUserMessageArgs);\n     }\n \n     public PlatformDataIntegrityException(final String globalisationMessageCode, final String defaultUserMessage,\n             final String parameterName, final Object... defaultUserMessageArgs) {\n+        super(findThrowableCause(defaultUserMessageArgs));\n         this.globalisationMessageCode = globalisationMessageCode;\n         this.defaultUserMessage = defaultUserMessage;\n         this.parameterName = parameterName;\n-        this.defaultUserMessageArgs = defaultUserMessageArgs;\n+        this.defaultUserMessageArgs = filterThrowableCause(defaultUserMessageArgs);\n+    }\n+\n+    private static Throwable findThrowableCause(Object[] defaultUserMessageArgs) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwMjc2NQ=="}, "originalCommit": null, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzMwMDkxMw==", "bodyText": "@thesmallstar I did this, and much more in #1125", "url": "https://github.com/apache/fineract/pull/1079#discussion_r447300913", "createdAt": "2020-06-29T22:43:14Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/PlatformDataIntegrityException.java", "diffHunk": "@@ -30,18 +33,39 @@\n \n     public PlatformDataIntegrityException(final String globalisationMessageCode, final String defaultUserMessage,\n             final Object... defaultUserMessageArgs) {\n+        super(findThrowableCause(defaultUserMessageArgs));\n         this.globalisationMessageCode = globalisationMessageCode;\n         this.defaultUserMessage = defaultUserMessage;\n         this.parameterName = null;\n-        this.defaultUserMessageArgs = defaultUserMessageArgs;\n+        this.defaultUserMessageArgs = filterThrowableCause(defaultUserMessageArgs);\n     }\n \n     public PlatformDataIntegrityException(final String globalisationMessageCode, final String defaultUserMessage,\n             final String parameterName, final Object... defaultUserMessageArgs) {\n+        super(findThrowableCause(defaultUserMessageArgs));\n         this.globalisationMessageCode = globalisationMessageCode;\n         this.defaultUserMessage = defaultUserMessage;\n         this.parameterName = parameterName;\n-        this.defaultUserMessageArgs = defaultUserMessageArgs;\n+        this.defaultUserMessageArgs = filterThrowableCause(defaultUserMessageArgs);\n+    }\n+\n+    private static Throwable findThrowableCause(Object[] defaultUserMessageArgs) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwMjc2NQ=="}, "originalCommit": null, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDg1NjE5OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/organisation/provisioning/exception/ProvisioningCriteriaNotFoundException.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzowMjozNFrOGpoPKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxMzo1Njo1NVrOGp1_MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNDA0Mg==", "bodyText": "you forgot actually propagating the cause here... ;-)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    super(\"error.msg.provisioning.criteria.id.invalid\", \"Provisioning Criteria with identifier \" + id + \" does not exist\", id);\n          \n          \n            \n                    super(\"error.msg.provisioning.criteria.id.invalid\", \"Provisioning Criteria with identifier \" + id + \" does not exist\", id, e);", "url": "https://github.com/apache/fineract/pull/1079#discussion_r446304042", "createdAt": "2020-06-26T17:02:34Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/organisation/provisioning/exception/ProvisioningCriteriaNotFoundException.java", "diffHunk": "@@ -19,10 +19,15 @@\n package org.apache.fineract.organisation.provisioning.exception;\n \n import org.apache.fineract.infrastructure.core.exception.AbstractPlatformResourceNotFoundException;\n+import org.springframework.dao.EmptyResultDataAccessException;\n \n public class ProvisioningCriteriaNotFoundException extends AbstractPlatformResourceNotFoundException {\n \n     public ProvisioningCriteriaNotFoundException(final Long id) {\n         super(\"error.msg.provisioning.criteria.id.invalid\", \"Provisioning Criteria with identifier \" + id + \" does not exist\", id);\n     }\n+\n+    public ProvisioningCriteriaNotFoundException(Long id, EmptyResultDataAccessException e) {\n+        super(\"error.msg.provisioning.criteria.id.invalid\", \"Provisioning Criteria with identifier \" + id + \" does not exist\", id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyOTMyOQ==", "bodyText": "nice catch! thanks", "url": "https://github.com/apache/fineract/pull/1079#discussion_r446529329", "createdAt": "2020-06-27T13:56:55Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/organisation/provisioning/exception/ProvisioningCriteriaNotFoundException.java", "diffHunk": "@@ -19,10 +19,15 @@\n package org.apache.fineract.organisation.provisioning.exception;\n \n import org.apache.fineract.infrastructure.core.exception.AbstractPlatformResourceNotFoundException;\n+import org.springframework.dao.EmptyResultDataAccessException;\n \n public class ProvisioningCriteriaNotFoundException extends AbstractPlatformResourceNotFoundException {\n \n     public ProvisioningCriteriaNotFoundException(final Long id) {\n         super(\"error.msg.provisioning.criteria.id.invalid\", \"Provisioning Criteria with identifier \" + id + \" does not exist\", id);\n     }\n+\n+    public ProvisioningCriteriaNotFoundException(Long id, EmptyResultDataAccessException e) {\n+        super(\"error.msg.provisioning.criteria.id.invalid\", \"Provisioning Criteria with identifier \" + id + \" does not exist\", id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNDA0Mg=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDg2MjY3OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/service/LoanProductWritePlatformServiceJpaRepositoryImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzowNToxMlrOGpoT1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQyMToxMDo1NFrOGqiW5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNTIzNw==", "bodyText": "I'm not 100% sure and haven't looked much at this, but could it make sense to:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"Loan product may only have one charge of each type.`\", \"charges\");\n          \n          \n            \n                                \"Loan product may only have one charge of each type.`\", \"charges\", realCause);", "url": "https://github.com/apache/fineract/pull/1079#discussion_r446305237", "createdAt": "2020-06-26T17:05:12Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/service/LoanProductWritePlatformServiceJpaRepositoryImpl.java", "diffHunk": "@@ -357,9 +357,8 @@ private void handleDataIntegrityIssues(final JsonCommand command, final Throwabl\n             throw new PlatformDataIntegrityException(\"error.msg.product.loan.duplicate.short.name\",\n                     \"Loan product with short name `\" + shortName + \"` already exists\", \"shortName\", shortName);\n         } else if (realCause.getMessage().contains(\"Duplicate entry\")) {\n-            final Object[] args = null;\n             throw new PlatformDataIntegrityException(\"error.msg.product.loan.duplicate.charge\",\n-                    \"Loan product may only have one charge of each type.`\", \"charges\", args);\n+                    \"Loan product may only have one charge of each type.`\", \"charges\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyOTQxNw==", "bodyText": "Yes! makes sense :D", "url": "https://github.com/apache/fineract/pull/1079#discussion_r446529417", "createdAt": "2020-06-27T13:57:58Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/service/LoanProductWritePlatformServiceJpaRepositoryImpl.java", "diffHunk": "@@ -357,9 +357,8 @@ private void handleDataIntegrityIssues(final JsonCommand command, final Throwabl\n             throw new PlatformDataIntegrityException(\"error.msg.product.loan.duplicate.short.name\",\n                     \"Loan product with short name `\" + shortName + \"` already exists\", \"shortName\", shortName);\n         } else if (realCause.getMessage().contains(\"Duplicate entry\")) {\n-            final Object[] args = null;\n             throw new PlatformDataIntegrityException(\"error.msg.product.loan.duplicate.charge\",\n-                    \"Loan product may only have one charge of each type.`\", \"charges\", args);\n+                    \"Loan product may only have one charge of each type.`\", \"charges\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNTIzNw=="}, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUyOTUxNQ==", "bodyText": "Also adding the same in rest of the throws in the same function.", "url": "https://github.com/apache/fineract/pull/1079#discussion_r446529515", "createdAt": "2020-06-27T13:59:15Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/service/LoanProductWritePlatformServiceJpaRepositoryImpl.java", "diffHunk": "@@ -357,9 +357,8 @@ private void handleDataIntegrityIssues(final JsonCommand command, final Throwabl\n             throw new PlatformDataIntegrityException(\"error.msg.product.loan.duplicate.short.name\",\n                     \"Loan product with short name `\" + shortName + \"` already exists\", \"shortName\", shortName);\n         } else if (realCause.getMessage().contains(\"Duplicate entry\")) {\n-            final Object[] args = null;\n             throw new PlatformDataIntegrityException(\"error.msg.product.loan.duplicate.charge\",\n-                    \"Loan product may only have one charge of each type.`\", \"charges\", args);\n+                    \"Loan product may only have one charge of each type.`\", \"charges\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNTIzNw=="}, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI1NjI5NA==", "bodyText": "great, thanks; I've seen it - resolving", "url": "https://github.com/apache/fineract/pull/1079#discussion_r447256294", "createdAt": "2020-06-29T21:10:54Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanproduct/service/LoanProductWritePlatformServiceJpaRepositoryImpl.java", "diffHunk": "@@ -357,9 +357,8 @@ private void handleDataIntegrityIssues(final JsonCommand command, final Throwabl\n             throw new PlatformDataIntegrityException(\"error.msg.product.loan.duplicate.short.name\",\n                     \"Loan product with short name `\" + shortName + \"` already exists\", \"shortName\", shortName);\n         } else if (realCause.getMessage().contains(\"Duplicate entry\")) {\n-            final Object[] args = null;\n             throw new PlatformDataIntegrityException(\"error.msg.product.loan.duplicate.charge\",\n-                    \"Loan product may only have one charge of each type.`\", \"charges\", args);\n+                    \"Loan product may only have one charge of each type.`\", \"charges\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNTIzNw=="}, "originalCommit": null, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MjQ0NDQ4OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/exception/EmailConfigurationNotFoundException.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yN1QxNDo0Mzo0MlrOGp2Pig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxODo1MzozOFrOGrxrUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUzMzUxNA==", "bodyText": "Just curious but wouldn't it be better to add the 3rd param here instead of duplicating the method? cause I can see the 2param method will just be history and unused.", "url": "https://github.com/apache/fineract/pull/1079#discussion_r446533514", "createdAt": "2020-06-27T14:43:42Z", "author": {"login": "xurror"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/exception/EmailConfigurationNotFoundException.java", "diffHunk": "@@ -28,4 +29,9 @@\n     public EmailConfigurationNotFoundException(final String name) {\n         super(\"error.msg.email.configuration.name.not.found\", \"Email configuration with name \" + name + \" does not exist\", name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUzNDkzMQ==", "bodyText": "Nope, we cannot change the original implementation. If the cause of the exception is the exception itself, we need this constructor to be used.", "url": "https://github.com/apache/fineract/pull/1079#discussion_r446534931", "createdAt": "2020-06-27T14:58:39Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/exception/EmailConfigurationNotFoundException.java", "diffHunk": "@@ -28,4 +29,9 @@\n     public EmailConfigurationNotFoundException(final String name) {\n         super(\"error.msg.email.configuration.name.not.found\", \"Email configuration with name \" + name + \" does not exist\", name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUzMzUxNA=="}, "originalCommit": null, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzI1ODI0OA==", "bodyText": "@thesmallstar @xurror the real question is really more if there are any (legitimate) remaining usages of the original constructor, without the cause. It seems like this was only used in EmailConfigurationReadPlatformServiceImpl, which was changed to use the new constructor, right? Then I actually agree that it would have been nicer and better to just add an additional parameter here... this isn't important enough to justify not finally merging this, so I'll probably go ahead, but I'll leave this open in case you'd like to clean this up in a new PR? (And perhaps in other exceptions where a cause was added - if there is no usage without a cause, it's better to simplify - and force future users to provide a cause.)", "url": "https://github.com/apache/fineract/pull/1079#discussion_r447258248", "createdAt": "2020-06-29T21:14:52Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/exception/EmailConfigurationNotFoundException.java", "diffHunk": "@@ -28,4 +29,9 @@\n     public EmailConfigurationNotFoundException(final String name) {\n         super(\"error.msg.email.configuration.name.not.found\", \"Email configuration with name \" + name + \" does not exist\", name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUzMzUxNA=="}, "originalCommit": null, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzM5NzMxMQ==", "bodyText": "Agreed! I will update this", "url": "https://github.com/apache/fineract/pull/1079#discussion_r447397311", "createdAt": "2020-06-30T04:10:53Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/exception/EmailConfigurationNotFoundException.java", "diffHunk": "@@ -28,4 +29,9 @@\n     public EmailConfigurationNotFoundException(final String name) {\n         super(\"error.msg.email.configuration.name.not.found\", \"Email configuration with name \" + name + \" does not exist\", name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUzMzUxNA=="}, "originalCommit": null, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU1NTg1OA==", "bodyText": "@vorburger  @xurror  making a new PR for this cleanup.", "url": "https://github.com/apache/fineract/pull/1079#discussion_r448555858", "createdAt": "2020-07-01T18:53:38Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/campaigns/email/exception/EmailConfigurationNotFoundException.java", "diffHunk": "@@ -28,4 +29,9 @@\n     public EmailConfigurationNotFoundException(final String name) {\n         super(\"error.msg.email.configuration.name.not.found\", \"Email configuration with name \" + name + \" does not exist\", name);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjUzMzUxNA=="}, "originalCommit": null, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1875, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}