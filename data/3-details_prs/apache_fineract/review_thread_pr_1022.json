{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMTY1NzA4", "number": 1022, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyMToyMlrOEE1jBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDowOTowN1rOEGr8Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTA3MDc2OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/adhocquery/service/AdHocScheduledJobRunnerServiceImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDoyMToyMlrOGitceA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODozODoxMlrOGj-HsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0OTMzNg==", "bodyText": "wait... wat ??  By doing this, it will ALWAYS throw, no? This will completely break. @awasum please help..", "url": "https://github.com/apache/fineract/pull/1022#discussion_r439049336", "createdAt": "2020-06-11T20:21:22Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/adhocquery/service/AdHocScheduledJobRunnerServiceImpl.java", "diffHunk": "@@ -88,10 +88,8 @@ public void generateClientSchedule() {\n                                 next = start.plusDays((int) (long) adhoc.getReportRunEvery());\n                                 run = Days.daysBetween(start, end).getDays() >= adhoc.getReportRunEvery();\n                                 break;\n-                            default:\n-                                throw new IllegalStateException();\n                         }\n-\n+                        throw new IllegalStateException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ5OTk3NQ==", "bodyText": "@percyashu ..Maybe remove this exception? and put it back in the default case inside the } on line 91 above?\nAlso if you want to add a default step, you need to check the ReportRunFrequency.fromId(adhoc.getReportRunFrequency() method from line 70 above and see how many different cases needs to be treated, then try to handle them all. Do we absolutely need a default case in all implementations of Switch statement?\nAs seen here: https://errorprone.info/bugpattern/UnnecessaryDefaultInEnumSwitch, dont put a default statement if all the cases have been handled. Maybe skip it? Will that throw an error?\nOr given that ReportRunFrequency is an enum and we/Fineract is already handling all the 5 cases here, we can just throw a new AdHocScheduledJobFrequencyException() error here as default case with a message like \"Correct Frequency not specified, Check the API docs\"... @vorburger  @ptuomola your take?", "url": "https://github.com/apache/fineract/pull/1022#discussion_r439499975", "createdAt": "2020-06-12T15:49:26Z", "author": {"login": "awasum"}, "path": "fineract-provider/src/main/java/org/apache/fineract/adhocquery/service/AdHocScheduledJobRunnerServiceImpl.java", "diffHunk": "@@ -88,10 +88,8 @@ public void generateClientSchedule() {\n                                 next = start.plusDays((int) (long) adhoc.getReportRunEvery());\n                                 run = Days.daysBetween(start, end).getDays() >= adhoc.getReportRunEvery();\n                                 break;\n-                            default:\n-                                throw new IllegalStateException();\n                         }\n-\n+                        throw new IllegalStateException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0OTMzNg=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1NjA2Mg==", "bodyText": "Isn't this ErrorProne check specifically highlighting switch statements where the default case is never used, because we are already handling all the cases specifically? Given that, wouldn't the right solution just be to remove the default including the throw, and not add anything?", "url": "https://github.com/apache/fineract/pull/1022#discussion_r439856062", "createdAt": "2020-06-14T18:30:52Z", "author": {"login": "ptuomola"}, "path": "fineract-provider/src/main/java/org/apache/fineract/adhocquery/service/AdHocScheduledJobRunnerServiceImpl.java", "diffHunk": "@@ -88,10 +88,8 @@ public void generateClientSchedule() {\n                                 next = start.plusDays((int) (long) adhoc.getReportRunEvery());\n                                 run = Days.daysBetween(start, end).getDays() >= adhoc.getReportRunEvery();\n                                 break;\n-                            default:\n-                                throw new IllegalStateException();\n                         }\n-\n+                        throw new IllegalStateException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0OTMzNg=="}, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM3MTEyMA==", "bodyText": "@ptuomola I thought so to but it requires a return.\n@vorburger I thought if the case is not found, switch default is used with exception thrown and if case is not found and no default then switch is not executed then exception is thrown. That's why I did it like this. Just undid what I did and added a suppressedwarning", "url": "https://github.com/apache/fineract/pull/1022#discussion_r440371120", "createdAt": "2020-06-15T18:38:12Z", "author": {"login": "percyashu"}, "path": "fineract-provider/src/main/java/org/apache/fineract/adhocquery/service/AdHocScheduledJobRunnerServiceImpl.java", "diffHunk": "@@ -88,10 +88,8 @@ public void generateClientSchedule() {\n                                 next = start.plusDays((int) (long) adhoc.getReportRunEvery());\n                                 run = Days.daysBetween(start, end).getDays() >= adhoc.getReportRunEvery();\n                                 break;\n-                            default:\n-                                throw new IllegalStateException();\n                         }\n-\n+                        throw new IllegalStateException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0OTMzNg=="}, "originalCommit": null, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MDM0NzMxOnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/documentmanagement/contentrepository/ContentRepositoryUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxODozMToyMlrOGjer5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNFQxODozMToyMlrOGjer5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTg1NjEwMA==", "bodyText": "Same here - shouldn't we just remove the default case altogether, not add anything back?", "url": "https://github.com/apache/fineract/pull/1022#discussion_r439856100", "createdAt": "2020-06-14T18:31:22Z", "author": {"login": "ptuomola"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/documentmanagement/contentrepository/ContentRepositoryUtils.java", "diffHunk": "@@ -55,9 +55,8 @@ public static ImageMIMEtype fromFileExtension(ImageFileExtension fileExtension)\n                     return ImageMIMEtype.JPEG;\n                 case PNG:\n                     return ImageMIMEtype.PNG;\n-                default:\n-                    throw new IllegalArgumentException();\n             }\n+            throw new IllegalArgumentException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzUzNjk4OnYy", "diffSide": "LEFT", "path": "fineract-provider/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoxNDozNVrOGj9VeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxODoyNzo0NFrOGj9xZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1ODI2NA==", "bodyText": "Is this being removed (not moved) intentional?", "url": "https://github.com/apache/fineract/pull/1022#discussion_r440358264", "createdAt": "2020-06-15T18:14:35Z", "author": {"login": "vorburger"}, "path": "fineract-provider/build.gradle", "diffHunk": "@@ -338,7 +338,6 @@ tasks.withType(JavaCompile) {\n                 \"ClassCanBeStatic\",\n                 \"SameNameButDifferent\",\n                 \"StringSplitter\",\n-                \"ImmutableEnumChecker\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM2NTQxMw==", "bodyText": "It was moved to the error list in a previous PR.  Don't know how it is here (maybe during merge) so I just removed it", "url": "https://github.com/apache/fineract/pull/1022#discussion_r440365413", "createdAt": "2020-06-15T18:27:44Z", "author": {"login": "percyashu"}, "path": "fineract-provider/build.gradle", "diffHunk": "@@ -338,7 +338,6 @@ tasks.withType(JavaCompile) {\n                 \"ClassCanBeStatic\",\n                 \"SameNameButDifferent\",\n                 \"StringSplitter\",\n-                \"ImmutableEnumChecker\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDM1ODI2NA=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDQ2ODc0OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/adhocquery/service/AdHocScheduledJobRunnerServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDowOTowN1rOGlossw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQxMDo1NToyN1rOGmmAtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExNzI5OQ==", "bodyText": "If you have suppressed this check..Do we still need this default?", "url": "https://github.com/apache/fineract/pull/1022#discussion_r442117299", "createdAt": "2020-06-18T10:09:07Z", "author": {"login": "awasum"}, "path": "fineract-provider/src/main/java/org/apache/fineract/adhocquery/service/AdHocScheduledJobRunnerServiceImpl.java", "diffHunk": "@@ -87,9 +88,8 @@ public void generateClientSchedule() {\n                                 run = Days.daysBetween(start, end).getDays() >= adhoc.getReportRunEvery();\n                             break;\n                             default:\n-                                throw new IllegalStateException();\n+                                throw new IllegalArgumentException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzEyMTg0NA==", "bodyText": "Was my mistake wasn't not suppose to change the exception will revert it. Yeah we need it because Error prone thinks it is not necessary since all cases are specified.", "url": "https://github.com/apache/fineract/pull/1022#discussion_r443121844", "createdAt": "2020-06-20T10:55:27Z", "author": {"login": "percyashu"}, "path": "fineract-provider/src/main/java/org/apache/fineract/adhocquery/service/AdHocScheduledJobRunnerServiceImpl.java", "diffHunk": "@@ -87,9 +88,8 @@ public void generateClientSchedule() {\n                                 run = Days.daysBetween(start, end).getDays() >= adhoc.getReportRunEvery();\n                             break;\n                             default:\n-                                throw new IllegalStateException();\n+                                throw new IllegalArgumentException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjExNzI5OQ=="}, "originalCommit": null, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1946, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}