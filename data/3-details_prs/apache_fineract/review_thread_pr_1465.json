{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3OTUwMDA4", "number": 1465, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjowMzo1NVrOEwu6tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOTowMDoxNFrOE0SRnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NTM1Nzk4OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjowMzo1NVrOHmeVXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxMzo0MzozMFrOHrniCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwNDkyNw==", "bodyText": "why exclude integration-tests from Spotless now? Or are we already not covering them? Then we should separately fix that, first?", "url": "https://github.com/apache/fineract/pull/1465#discussion_r510104927", "createdAt": "2020-10-22T12:03:55Z", "author": {"login": "vorburger"}, "path": "build.gradle", "diffHunk": "@@ -416,9 +408,14 @@ configure(project.fineractJavaProjects) {\n \n     // Configuration for the spotless plugin\n     // https://github.com/diffplug/spotless/tree/main/plugin-gradle\n+    dependencies {\n+        spotbugsPlugins 'jp.skypencil.findbugs.slf4j:bug-pattern:1.5.0@jar'\n+        spotbugs 'com.github.spotbugs:spotbugs:4.1.4'\n+    }\n+\n     spotless {\n         java {\n-            targetExclude '**/build/**', '**/bin/**', '**/out/**'\n+            targetExclude '**/build/**', '**/bin/**', '**/out/**', '**/integration-tests/**'", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEyNDg2NQ==", "bodyText": "True... was a bit late and was not sure where all the warnings/errors were coming from. I'll revert.", "url": "https://github.com/apache/fineract/pull/1465#discussion_r510124865", "createdAt": "2020-10-22T12:36:28Z", "author": {"login": "vidakovic"}, "path": "build.gradle", "diffHunk": "@@ -416,9 +408,14 @@ configure(project.fineractJavaProjects) {\n \n     // Configuration for the spotless plugin\n     // https://github.com/diffplug/spotless/tree/main/plugin-gradle\n+    dependencies {\n+        spotbugsPlugins 'jp.skypencil.findbugs.slf4j:bug-pattern:1.5.0@jar'\n+        spotbugs 'com.github.spotbugs:spotbugs:4.1.4'\n+    }\n+\n     spotless {\n         java {\n-            targetExclude '**/build/**', '**/bin/**', '**/out/**'\n+            targetExclude '**/build/**', '**/bin/**', '**/out/**', '**/integration-tests/**'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwNDkyNw=="}, "originalCommit": null, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5ODUwNA==", "bodyText": "Thanks! I have checked and see that this was done, so Resolving this point.", "url": "https://github.com/apache/fineract/pull/1465#discussion_r515498504", "createdAt": "2020-10-31T13:43:30Z", "author": {"login": "vorburger"}, "path": "build.gradle", "diffHunk": "@@ -416,9 +408,14 @@ configure(project.fineractJavaProjects) {\n \n     // Configuration for the spotless plugin\n     // https://github.com/diffplug/spotless/tree/main/plugin-gradle\n+    dependencies {\n+        spotbugsPlugins 'jp.skypencil.findbugs.slf4j:bug-pattern:1.5.0@jar'\n+        spotbugs 'com.github.spotbugs:spotbugs:4.1.4'\n+    }\n+\n     spotless {\n         java {\n-            targetExclude '**/build/**', '**/bin/**', '**/out/**'\n+            targetExclude '**/build/**', '**/bin/**', '**/out/**', '**/integration-tests/**'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwNDkyNw=="}, "originalCommit": null, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE5NTM2MzI2OnYy", "diffSide": "RIGHT", "path": "config/checkstyle/suppressions.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxMjowNToxMVrOHmeYeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxMzo1MTowM1rOHrnlDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwNTcyMQ==", "bodyText": "I'm guessing we currently haven't covered integration-tests? We should perhaps try to fix that, first? Or leave as is?", "url": "https://github.com/apache/fineract/pull/1465#discussion_r510105721", "createdAt": "2020-10-22T12:05:11Z", "author": {"login": "vorburger"}, "path": "config/checkstyle/suppressions.xml", "diffHunk": "@@ -27,4 +27,6 @@\n \n <suppressions>\n     <suppress files=\"[/\\\\]build[/\\\\]generated[/\\\\]\" checks=\".*\"/>\n+    <!-- TODO: fix integration test formatting -->\n+    <suppress files=\"[/\\\\]integration-tests[/\\\\]src[/\\\\]test[/\\\\]main[/\\\\]\" checks=\".*\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEyNDU1Mg==", "bodyText": "For now I'd leave the exclusion. Checkstyle reports an avalanche of 1500 errors. I'd say we can fix this when we migrate step by step to to fineract-client usage.", "url": "https://github.com/apache/fineract/pull/1465#discussion_r510124552", "createdAt": "2020-10-22T12:35:56Z", "author": {"login": "vidakovic"}, "path": "config/checkstyle/suppressions.xml", "diffHunk": "@@ -27,4 +27,6 @@\n \n <suppressions>\n     <suppress files=\"[/\\\\]build[/\\\\]generated[/\\\\]\" checks=\".*\"/>\n+    <!-- TODO: fix integration test formatting -->\n+    <suppress files=\"[/\\\\]integration-tests[/\\\\]src[/\\\\]test[/\\\\]main[/\\\\]\" checks=\".*\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwNTcyMQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ5OTI3Nw==", "bodyText": "OK. Let's follow-up on that in FINERACT-1246. I'll leave this review comment open.", "url": "https://github.com/apache/fineract/pull/1465#discussion_r515499277", "createdAt": "2020-10-31T13:51:03Z", "author": {"login": "vorburger"}, "path": "config/checkstyle/suppressions.xml", "diffHunk": "@@ -27,4 +27,6 @@\n \n <suppressions>\n     <suppress files=\"[/\\\\]build[/\\\\]generated[/\\\\]\" checks=\".*\"/>\n+    <!-- TODO: fix integration test formatting -->\n+    <suppress files=\"[/\\\\]integration-tests[/\\\\]src[/\\\\]test[/\\\\]main[/\\\\]\" checks=\".*\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDEwNTcyMQ=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjU5NTA3OnYy", "diffSide": "RIGHT", "path": "integration-tests/build.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODo1NjozOVrOHr7QHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOToyODozMlrOHr8XKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMTU5OA==", "bodyText": "@vidakovic my Gradle foo isn't as strong as yours \ud83d\ude04 but isn't this \"inherited\" from the root build.gradle, after (my) #1477? It's not a big enough problem to not merge this ASAP anyway (I'm reviewing this right now..), but if you agree, then perhaps you want to raise a minor clean-up PR as follow-up?", "url": "https://github.com/apache/fineract/pull/1465#discussion_r515821598", "createdAt": "2020-11-02T08:56:39Z", "author": {"login": "vorburger"}, "path": "integration-tests/build.gradle", "diffHunk": "@@ -0,0 +1,73 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+description = 'Fineract Integration Tests'\n+\n+apply plugin: 'com.bmuschko.cargo'\n+\n+// Configuration for the Gradle Cargo plugin\n+// https://github.com/bmuschko/gradle-cargo-plugin\n+configurations {\n+    tomcat\n+}\n+\n+apply from: 'dependencies.gradle'\n+\n+cargo {\n+    containerId \"tomcat9x\"\n+\n+    // looks like Cargo doesn't detect the WAR file automatically in the multi-module setup\n+    deployable {\n+        file = file(\"$rootDir/fineract-provider/build/libs/fineract-provider.war\")\n+        context = 'fineract-provider'\n+    }\n+\n+    local {\n+        installer {\n+            installConfiguration = configurations.tomcat\n+            downloadDir = file(\"$buildDir/download\")\n+            extractDir = file(\"$buildDir/tomcat\")\n+        }\n+        startStopTimeout = 240000\n+        containerProperties {\n+            property 'cargo.tomcat.connector.keystoreFile', file(\"$rootDir/fineract-provider/src/main/resources/keystore.jks\")\n+            property 'cargo.tomcat.connector.keystorePass', 'openmf'\n+            property 'cargo.tomcat.httpSecure', true\n+            property 'cargo.tomcat.connector.sslProtocol', 'TLS'\n+            property 'cargo.tomcat.connector.clientAuth', false\n+            property 'cargo.protocol', 'https'\n+            property 'cargo.servlet.port', 8443\n+        }\n+    }\n+}\n+\n+cargoRunLocal.dependsOn ':fineract-provider:war'\n+cargoStartLocal.dependsOn ':fineract-provider:war'\n+cargoStartLocal.mustRunAfter 'testClasses'\n+\n+test {\n+    useJUnitPlatform()\n+    testLogging {\n+        // FINERACT-927\n+        events 'skipped', 'failed'\n+        showStandardStreams = false\n+        exceptionFormat 'full'\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3dc8bc6915ddd05aac9869e7b46cf2bd058f030"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyNjQ1MQ==", "bodyText": "@vorburger correct... will create a PR for that... saw this during a rebase, but forgot to clean it up here.", "url": "https://github.com/apache/fineract/pull/1465#discussion_r515826451", "createdAt": "2020-11-02T09:05:28Z", "author": {"login": "vidakovic"}, "path": "integration-tests/build.gradle", "diffHunk": "@@ -0,0 +1,73 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+description = 'Fineract Integration Tests'\n+\n+apply plugin: 'com.bmuschko.cargo'\n+\n+// Configuration for the Gradle Cargo plugin\n+// https://github.com/bmuschko/gradle-cargo-plugin\n+configurations {\n+    tomcat\n+}\n+\n+apply from: 'dependencies.gradle'\n+\n+cargo {\n+    containerId \"tomcat9x\"\n+\n+    // looks like Cargo doesn't detect the WAR file automatically in the multi-module setup\n+    deployable {\n+        file = file(\"$rootDir/fineract-provider/build/libs/fineract-provider.war\")\n+        context = 'fineract-provider'\n+    }\n+\n+    local {\n+        installer {\n+            installConfiguration = configurations.tomcat\n+            downloadDir = file(\"$buildDir/download\")\n+            extractDir = file(\"$buildDir/tomcat\")\n+        }\n+        startStopTimeout = 240000\n+        containerProperties {\n+            property 'cargo.tomcat.connector.keystoreFile', file(\"$rootDir/fineract-provider/src/main/resources/keystore.jks\")\n+            property 'cargo.tomcat.connector.keystorePass', 'openmf'\n+            property 'cargo.tomcat.httpSecure', true\n+            property 'cargo.tomcat.connector.sslProtocol', 'TLS'\n+            property 'cargo.tomcat.connector.clientAuth', false\n+            property 'cargo.protocol', 'https'\n+            property 'cargo.servlet.port', 8443\n+        }\n+    }\n+}\n+\n+cargoRunLocal.dependsOn ':fineract-provider:war'\n+cargoStartLocal.dependsOn ':fineract-provider:war'\n+cargoStartLocal.mustRunAfter 'testClasses'\n+\n+test {\n+    useJUnitPlatform()\n+    testLogging {\n+        // FINERACT-927\n+        events 'skipped', 'failed'\n+        showStandardStreams = false\n+        exceptionFormat 'full'\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMTU5OA=="}, "originalCommit": {"oid": "e3dc8bc6915ddd05aac9869e7b46cf2bd058f030"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgzOTc4Ng==", "bodyText": "#1490", "url": "https://github.com/apache/fineract/pull/1465#discussion_r515839786", "createdAt": "2020-11-02T09:28:32Z", "author": {"login": "vorburger"}, "path": "integration-tests/build.gradle", "diffHunk": "@@ -0,0 +1,73 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+description = 'Fineract Integration Tests'\n+\n+apply plugin: 'com.bmuschko.cargo'\n+\n+// Configuration for the Gradle Cargo plugin\n+// https://github.com/bmuschko/gradle-cargo-plugin\n+configurations {\n+    tomcat\n+}\n+\n+apply from: 'dependencies.gradle'\n+\n+cargo {\n+    containerId \"tomcat9x\"\n+\n+    // looks like Cargo doesn't detect the WAR file automatically in the multi-module setup\n+    deployable {\n+        file = file(\"$rootDir/fineract-provider/build/libs/fineract-provider.war\")\n+        context = 'fineract-provider'\n+    }\n+\n+    local {\n+        installer {\n+            installConfiguration = configurations.tomcat\n+            downloadDir = file(\"$buildDir/download\")\n+            extractDir = file(\"$buildDir/tomcat\")\n+        }\n+        startStopTimeout = 240000\n+        containerProperties {\n+            property 'cargo.tomcat.connector.keystoreFile', file(\"$rootDir/fineract-provider/src/main/resources/keystore.jks\")\n+            property 'cargo.tomcat.connector.keystorePass', 'openmf'\n+            property 'cargo.tomcat.httpSecure', true\n+            property 'cargo.tomcat.connector.sslProtocol', 'TLS'\n+            property 'cargo.tomcat.connector.clientAuth', false\n+            property 'cargo.protocol', 'https'\n+            property 'cargo.servlet.port', 8443\n+        }\n+    }\n+}\n+\n+cargoRunLocal.dependsOn ':fineract-provider:war'\n+cargoStartLocal.dependsOn ':fineract-provider:war'\n+cargoStartLocal.mustRunAfter 'testClasses'\n+\n+test {\n+    useJUnitPlatform()\n+    testLogging {\n+        // FINERACT-927\n+        events 'skipped', 'failed'\n+        showStandardStreams = false\n+        exceptionFormat 'full'\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMTU5OA=="}, "originalCommit": {"oid": "e3dc8bc6915ddd05aac9869e7b46cf2bd058f030"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjYwNDkyOnYy", "diffSide": "RIGHT", "path": "integration-tests/dependencies.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwODo1OToxOVrOHr7WAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOTo1NjoyOVrOHr9ZSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMzEwNQ==", "bodyText": "@vidakovic given that this is here now, we should remove it from fineract/fineract-provider/dependencies.gradle, no? Again not a big enough problem to not merge this ASAP anyway (I'm reviewing this right now..), but if you agree, then perhaps you want to raise a minor clean-up PR as follow-up?", "url": "https://github.com/apache/fineract/pull/1465#discussion_r515823105", "createdAt": "2020-11-02T08:59:19Z", "author": {"login": "vorburger"}, "path": "integration-tests/dependencies.gradle", "diffHunk": "@@ -0,0 +1,45 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+dependencies {\n+    // testCompile dependencies are ONLY used in src/test, not src/main.\n+    // Do NOT repeat dependencies which are ALREADY in implementation or runtimeOnly!\n+    //\n+    tomcat 'org.apache.tomcat:tomcat:9.0.39@zip'\n+    testImplementation( files(\"$rootDir/fineract-provider/build/classes/java/main/\"),\n+            project(path: ':fineract-provider', configuration: 'runtimeElements'),\n+            'org.junit.jupiter:junit-jupiter-api:5.7.0',\n+            'com.google.truth:truth:1.0.1',\n+            'com.google.truth.extensions:truth-java8-extension:1.0.1',\n+            'org.awaitility:awaitility',\n+            // 'com.google.code.gson:gson',\n+            )\n+    testImplementation ('org.mock-server:mockserver-junit-jupiter') {\n+        exclude group: 'com.sun.mail', module: 'mailapi'\n+        exclude group: 'javax.servlet', module: 'javax.servlet-api'\n+        exclude group: 'javax.validation'\n+    }\n+    testImplementation ('io.rest-assured:rest-assured') {\n+        exclude group: 'commons-logging'\n+        exclude group: 'org.apache.sling'\n+        exclude group: 'com.sun.xml.bind'\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3dc8bc6915ddd05aac9869e7b46cf2bd058f030"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg1NjcxMw==", "bodyText": "#1491", "url": "https://github.com/apache/fineract/pull/1465#discussion_r515856713", "createdAt": "2020-11-02T09:56:29Z", "author": {"login": "vorburger"}, "path": "integration-tests/dependencies.gradle", "diffHunk": "@@ -0,0 +1,45 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+dependencies {\n+    // testCompile dependencies are ONLY used in src/test, not src/main.\n+    // Do NOT repeat dependencies which are ALREADY in implementation or runtimeOnly!\n+    //\n+    tomcat 'org.apache.tomcat:tomcat:9.0.39@zip'\n+    testImplementation( files(\"$rootDir/fineract-provider/build/classes/java/main/\"),\n+            project(path: ':fineract-provider', configuration: 'runtimeElements'),\n+            'org.junit.jupiter:junit-jupiter-api:5.7.0',\n+            'com.google.truth:truth:1.0.1',\n+            'com.google.truth.extensions:truth-java8-extension:1.0.1',\n+            'org.awaitility:awaitility',\n+            // 'com.google.code.gson:gson',\n+            )\n+    testImplementation ('org.mock-server:mockserver-junit-jupiter') {\n+        exclude group: 'com.sun.mail', module: 'mailapi'\n+        exclude group: 'javax.servlet', module: 'javax.servlet-api'\n+        exclude group: 'javax.validation'\n+    }\n+    testImplementation ('io.rest-assured:rest-assured') {\n+        exclude group: 'commons-logging'\n+        exclude group: 'org.apache.sling'\n+        exclude group: 'com.sun.xml.bind'\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMzEwNQ=="}, "originalCommit": {"oid": "e3dc8bc6915ddd05aac9869e7b46cf2bd058f030"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjYwODI4OnYy", "diffSide": "RIGHT", "path": ".travis.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOTowMDoxNFrOHr7X7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOToxMDo1NlrOHr7uhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMzU5OA==", "bodyText": "FTR: FINERACT-1250 had a suggestion to simplify this, which we should try in a follow-up PR (I'll raise one).", "url": "https://github.com/apache/fineract/pull/1465#discussion_r515823598", "createdAt": "2020-11-02T09:00:14Z", "author": {"login": "vorburger"}, "path": ".travis.yml", "diffHunk": "@@ -72,6 +72,6 @@ script:\n # using \"&&\" instead of several \"-\" means that integrationTest does not run if test fails,\n # and Docker test does not run if integration test fails, which makes PR failure easier to understand.\n # @see https://docs.travis-ci.com/user/job-lifecycle/#customizing-the-build-phase\n-  - ./gradlew --console=plain -PautomatedBuild=true licenseMain licenseTest licenseIntegrationTest check  &&  ./gradlew --console=plain -PautomatedBuild=true build integrationTest --fail-fast  &&  sudo service mysql stop  &&  docker-compose build  &&  docker-compose up -d  &&  sleep 60s  && curl -f -k --retry 5 --retry-connrefused --connect-timeout 30 --retry-delay 30 https://localhost:8443/fineract-provider/actuator/health  &&  (( $(curl -f -k --retry 5 --retry-connrefused --connect-timeout 30 --retry-delay 30 https://localhost:8443/fineract-provider/actuator/info | wc --chars) > 100 ))\n+  - ./gradlew --console=plain -PautomatedBuild=true licenseMain licenseTest check -x test  &&  ./gradlew --console=plain -PautomatedBuild=true build test --fail-fast  &&  sudo service mysql stop  &&  docker-compose build  &&  docker-compose up -d  &&  sleep 60s  && curl -f -k --retry 5 --retry-connrefused --connect-timeout 30 --retry-delay 30 https://localhost:8443/fineract-provider/actuator/health  &&  (( $(curl -f -k --retry 5 --retry-connrefused --connect-timeout 30 --retry-delay 30 https://localhost:8443/fineract-provider/actuator/info | wc --chars) > 100 ))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3dc8bc6915ddd05aac9869e7b46cf2bd058f030"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyOTM4MQ==", "bodyText": "#1489", "url": "https://github.com/apache/fineract/pull/1465#discussion_r515829381", "createdAt": "2020-11-02T09:10:56Z", "author": {"login": "vorburger"}, "path": ".travis.yml", "diffHunk": "@@ -72,6 +72,6 @@ script:\n # using \"&&\" instead of several \"-\" means that integrationTest does not run if test fails,\n # and Docker test does not run if integration test fails, which makes PR failure easier to understand.\n # @see https://docs.travis-ci.com/user/job-lifecycle/#customizing-the-build-phase\n-  - ./gradlew --console=plain -PautomatedBuild=true licenseMain licenseTest licenseIntegrationTest check  &&  ./gradlew --console=plain -PautomatedBuild=true build integrationTest --fail-fast  &&  sudo service mysql stop  &&  docker-compose build  &&  docker-compose up -d  &&  sleep 60s  && curl -f -k --retry 5 --retry-connrefused --connect-timeout 30 --retry-delay 30 https://localhost:8443/fineract-provider/actuator/health  &&  (( $(curl -f -k --retry 5 --retry-connrefused --connect-timeout 30 --retry-delay 30 https://localhost:8443/fineract-provider/actuator/info | wc --chars) > 100 ))\n+  - ./gradlew --console=plain -PautomatedBuild=true licenseMain licenseTest check -x test  &&  ./gradlew --console=plain -PautomatedBuild=true build test --fail-fast  &&  sudo service mysql stop  &&  docker-compose build  &&  docker-compose up -d  &&  sleep 60s  && curl -f -k --retry 5 --retry-connrefused --connect-timeout 30 --retry-delay 30 https://localhost:8443/fineract-provider/actuator/health  &&  (( $(curl -f -k --retry 5 --retry-connrefused --connect-timeout 30 --retry-delay 30 https://localhost:8443/fineract-provider/actuator/info | wc --chars) > 100 ))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgyMzU5OA=="}, "originalCommit": {"oid": "e3dc8bc6915ddd05aac9869e7b46cf2bd058f030"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1805, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}