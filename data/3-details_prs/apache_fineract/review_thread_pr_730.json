{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MDc2MzY5", "number": 730, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMTo1MTowMVrODmpY-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNTo1NTo1MVrODmvnhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODUwNjE5OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/utils/SQLBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMTo1MTowMVrOF0LnGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMTo1MTowMVrOF0LnGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI2MDUwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    StringBuilder whereClause  = new StringBuilder();\n          \n          \n            \n                    StringBuilder whereClause  = new StringBuilder(\"SQLBuilder{ \");", "url": "https://github.com/apache/fineract/pull/730#discussion_r390260507", "createdAt": "2020-03-10T11:51:01Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/utils/SQLBuilder.java", "diffHunk": "@@ -118,9 +121,34 @@ public String getSQLTemplate() {\n     /*\n      * Returns a String representation suitable for debugging and log output.\n      * This is ONLY intended for debugging in logs, and NEVER for passing to a JDBC database.\n+     */\n     @Override\n     public String toString() {\n-        return \"SQLBuilder{...\"; // TODO implement this...\n+        StringBuilder whereClause  = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODUxMDIwOnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/utils/SQLBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMTo1MjoyN1rOF0LprA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMTo1MjoyN1rOF0LprA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI2MTE2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return \"SQLBuilder{\"+ whereClause.toString() +\"}\";\n          \n          \n            \n                    whereClause.append(\" }\");\n          \n          \n            \n                    return whereClause.toString();\n          \n      \n    \n    \n  \n\nThe point of this is to avoid unnecessary String concatenation object creation.\nYou should also avoid any other String + in this method - just append() everything.", "url": "https://github.com/apache/fineract/pull/730#discussion_r390261164", "createdAt": "2020-03-10T11:52:27Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/utils/SQLBuilder.java", "diffHunk": "@@ -118,9 +121,34 @@ public String getSQLTemplate() {\n     /*\n      * Returns a String representation suitable for debugging and log output.\n      * This is ONLY intended for debugging in logs, and NEVER for passing to a JDBC database.\n+     */\n     @Override\n     public String toString() {\n-        return \"SQLBuilder{...\"; // TODO implement this...\n+        StringBuilder whereClause  = new StringBuilder();\n+        ArrayList<String> modifiedArgs = new ArrayList<String>();\n+        for (Object obj : args)\n+        {\n+            if(obj instanceof String)\n+            {\n+                modifiedArgs.add(\"['\"+ obj + \"']\");\n+            }else if(obj == null)\n+            {\n+                modifiedArgs.add(\"[null]\");\n+            }else{\n+                modifiedArgs.add(\"[\"+ String.valueOf(obj) +\"]\");\n+            }\n+        }\n+        for (int i=0;i<crts.size();i++)\n+        {    if (whereClause.length() > 0)\n+            {\n+                whereClause.append(\"  AND  \");\n+            }\n+            if(whereClause.length()==0)\n+            {\n+                whereClause.append(\"WHERE  \");\n+            }\n+            whereClause.append(crts.get(i) + \" \" + modifiedArgs.get(i));\n+        }\n+        return \"SQLBuilder{\"+ whereClause.toString() +\"}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODUxNDUyOnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/utils/SQLBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMTo1Mzo1MFrOF0LsKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMTo1Mzo1MFrOF0LsKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDI2MTgwMw==", "bodyText": "you can probably avoid creating this intermediate list? Just iterate and append to the StringBuilder, no? Or perhaps I'm missing something here (quick review only; didn't read the code in full details).", "url": "https://github.com/apache/fineract/pull/730#discussion_r390261803", "createdAt": "2020-03-10T11:53:50Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/utils/SQLBuilder.java", "diffHunk": "@@ -118,9 +121,34 @@ public String getSQLTemplate() {\n     /*\n      * Returns a String representation suitable for debugging and log output.\n      * This is ONLY intended for debugging in logs, and NEVER for passing to a JDBC database.\n+     */\n     @Override\n     public String toString() {\n-        return \"SQLBuilder{...\"; // TODO implement this...\n+        StringBuilder whereClause  = new StringBuilder();\n+        ArrayList<String> modifiedArgs = new ArrayList<String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxOTUyNjQ1OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/utils/SQLBuilder.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNTo1NTo1MVrOF0Vd5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxNjoxNToxMFrOF0WVZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQyMTk5MQ==", "bodyText": "I think you could still save this StringBuilder and just whereClause.append(...) as you go? Just a thought.", "url": "https://github.com/apache/fineract/pull/730#discussion_r390421991", "createdAt": "2020-03-10T15:55:51Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/utils/SQLBuilder.java", "diffHunk": "@@ -118,9 +121,40 @@ public String getSQLTemplate() {\n     /*\n      * Returns a String representation suitable for debugging and log output.\n      * This is ONLY intended for debugging in logs, and NEVER for passing to a JDBC database.\n+     */\n     @Override\n     public String toString() {\n-        return \"SQLBuilder{...\"; // TODO implement this...\n+       StringBuilder whereClause  = new StringBuilder(\"SQLBuilder{\");\n+       for (int i=0;i<args.size();i++)\n+        {\n+            if (i!=0)\n+            {\n+                whereClause.append(\"  AND  \");\n+            }\n+            else\n+            {\n+                whereClause.append(\"WHERE  \");\n+            }\n+            Object currentArg = args.get(i);\n+            String currentCri = crts.get(i);\n+            StringBuilder modifiedArg  = new StringBuilder(\"[\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQzNjE5OQ==", "bodyText": "Yes, on it.", "url": "https://github.com/apache/fineract/pull/730#discussion_r390436199", "createdAt": "2020-03-10T16:15:10Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/security/utils/SQLBuilder.java", "diffHunk": "@@ -118,9 +121,40 @@ public String getSQLTemplate() {\n     /*\n      * Returns a String representation suitable for debugging and log output.\n      * This is ONLY intended for debugging in logs, and NEVER for passing to a JDBC database.\n+     */\n     @Override\n     public String toString() {\n-        return \"SQLBuilder{...\"; // TODO implement this...\n+       StringBuilder whereClause  = new StringBuilder(\"SQLBuilder{\");\n+       for (int i=0;i<args.size();i++)\n+        {\n+            if (i!=0)\n+            {\n+                whereClause.append(\"  AND  \");\n+            }\n+            else\n+            {\n+                whereClause.append(\"WHERE  \");\n+            }\n+            Object currentArg = args.get(i);\n+            String currentCri = crts.get(i);\n+            StringBuilder modifiedArg  = new StringBuilder(\"[\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDQyMTk5MQ=="}, "originalCommit": null, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1761, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}