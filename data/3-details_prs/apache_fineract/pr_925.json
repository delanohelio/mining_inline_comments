{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMDIwMzM0", "number": 925, "title": "FINERACT-997", "bodyText": "While debugging, the previous code was returning null even with data. Tested on the current fineract.dev (does not work)\nfindProductIdAndProductTypeAndFinancialAccountTypeAndChargeId\nDescription\nWhen you make a savings product with charges and associate them with accounting using advanced accounting rules you can map them to INCOME and FEES based operating headers.\nOnce any transaction associated to this charges will be diverted in those account headers properly.\nChecklist\nPlease make sure these boxes are checked before submitting your pull request - thanks!\n\n\n Commit message starts with the issue number from https://issues.apache.org/jira/projects/FINERACT/. Ex: FINERACT-646 Pockets API.\n\n\n Coding conventions at https://cwiki.apache.org/confluence/display/FINERACT/Coding+Conventions have been followed.\n\n\n API documentation at fineract-provider/src/main/resources/static/api-docs/apiLive.htm has been updated with details of any API changes.\n\n\n Integration tests have been created/updated for verifying the changes made.\n\n\n All Integrations tests are passing with the new commits.\n\n\n Submission is not a \"code dump\".  (Large changes can be made \"in repository\" via a branch.  Ask on the list.)\n\n\nOur guidelines for code reviews is at https://cwiki.apache.org/confluence/display/FINERACT/Code+Review+Guide", "createdAt": "2020-05-22T16:27:41Z", "url": "https://github.com/apache/fineract/pull/925", "merged": true, "mergeCommit": {"oid": "ce570b4b332f2d053e7a5f604aff7c7ae090e045"}, "closed": true, "closedAt": "2020-05-24T08:43:30Z", "author": {"login": "maektwain"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcj0yQHgH2gAyNDIyMDIwMzM0OjA1MWNhYTBiZTU4YTUwZmJhOTJhZGU1MDFlMDJhOGI1MzA2MDY2YWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABckXZ1-AFqTQxNzMzODc1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "051caa0be58a50fba92ade501e02a8b5306066ae", "author": {"user": null}, "url": "https://github.com/apache/fineract/commit/051caa0be58a50fba92ade501e02a8b5306066ae", "committedDate": "2020-05-22T16:23:23Z", "message": "Fixed Accounting findProductIdAndProductTypeAndFinancialAccountTypeAndChargeId"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MDgyMjIz", "url": "https://github.com/apache/fineract/pull/925#pullrequestreview-417082223", "createdAt": "2020-05-22T17:40:37Z", "commit": {"oid": "051caa0be58a50fba92ade501e02a8b5306066ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzo0MDozN1rOGZe-8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxNzo0MDozN1rOGZe-8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTM3NTIxOQ==", "bodyText": "@maektwain I'd like to better understand what problem this fixes how... At first glance, to me this looks like we are just writing an explicit @Query for what Spring Data otherwise automagically internally generates with from its findBy syntax... can you help me understand what I'm missing? What Query does the current version generate, and what is wrong with it which this explicit version fixes? How is the auto-generated query wrong?", "url": "https://github.com/apache/fineract/pull/925#discussion_r429375219", "createdAt": "2020-05-22T17:40:37Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/accounting/producttoaccountmapping/domain/ProductToGLAccountMappingRepository.java", "diffHunk": "@@ -30,8 +30,9 @@\n     ProductToGLAccountMapping findByProductIdAndProductTypeAndFinancialAccountTypeAndPaymentTypeId(Long productId, int productType,\n             int financialAccountType, Long paymentType);\n \n-    ProductToGLAccountMapping findByProductIdAndProductTypeAndFinancialAccountTypeAndChargeId(Long productId, int productType,\n-            int financialAccountType, Long chargeId);\n+    @Query(\"select mapping from ProductToGLAccountMapping mapping where mapping.productId= :productId and mapping.productType= :productType and mapping.financialAccountType= :financialAccountType and mapping.charge.id= :chargeId\")\n+    ProductToGLAccountMapping findProductIdAndProductTypeAndFinancialAccountTypeAndChargeId(@Param(\"productId\") Long productId, @Param(\"productType\") int productType,\n+            @Param(\"financialAccountType\") int financialAccountType, @Param(\"chargeId\") Long ChargeId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "051caa0be58a50fba92ade501e02a8b5306066ae"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MTQwMDYy", "url": "https://github.com/apache/fineract/pull/925#pullrequestreview-417140062", "createdAt": "2020-05-22T19:21:39Z", "commit": {"oid": "051caa0be58a50fba92ade501e02a8b5306066ae"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzM4NzU2", "url": "https://github.com/apache/fineract/pull/925#pullrequestreview-417338756", "createdAt": "2020-05-24T08:43:24Z", "commit": {"oid": "051caa0be58a50fba92ade501e02a8b5306066ae"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1936, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}