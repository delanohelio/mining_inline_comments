{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MjAzOTgy", "number": 906, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNjo1OToyNFrOD9Q0ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDowNDozMVrOD-ixRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NTY1Mzc5OnYy", "diffSide": "LEFT", "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/AccountingScenarioIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNjo1OToyNFrOGWpxRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMzoyMDo0N1rOGXKlfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNjIxNA==", "bodyText": "I suggest you using a logger but maybe @vorburger  or @awasum, @ptuomola or anyone else would have a different opinion as far as this is concerned.\nIt's more a convention to use here, whether checked or unchecked exceptions.", "url": "https://github.com/apache/fineract/pull/906#discussion_r426406214", "createdAt": "2020-05-18T06:59:24Z", "author": {"login": "xurror"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/AccountingScenarioIntegrationTest.java", "diffHunk": "@@ -587,11 +587,8 @@ public void checkPeriodicAccrualAccountingFlow() {\n         this.journalEntryHelper.checkJournalEntryForAssetAccount(assetAccount, this.EXPECTED_DISBURSAL_DATE, assetAccountInitialEntry);\n \n         final String jobName = \"Add Accrual Transactions\";\n-        try {\n-            this.schedulerJobHelper.executeJob(jobName);\n-        } catch (InterruptedException e) {\n-            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQzNTI4Nw==", "bodyText": "No, in a test, exceptions typically should not be logged but just \"fall through\" (propagate, with 'testXYZ() throws SomeException, Another # Exception...'), so that the test fails, if the exception happens. PS: We need to write this and more like this up into Logging Guidelines, e.g. on the README. Do you want to make a start with that in this PR?", "url": "https://github.com/apache/fineract/pull/906#discussion_r426435287", "createdAt": "2020-05-18T07:57:54Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/AccountingScenarioIntegrationTest.java", "diffHunk": "@@ -587,11 +587,8 @@ public void checkPeriodicAccrualAccountingFlow() {\n         this.journalEntryHelper.checkJournalEntryForAssetAccount(assetAccount, this.EXPECTED_DISBURSAL_DATE, assetAccountInitialEntry);\n \n         final String jobName = \"Add Accrual Transactions\";\n-        try {\n-            this.schedulerJobHelper.executeJob(jobName);\n-        } catch (InterruptedException e) {\n-            e.printStackTrace();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNjIxNA=="}, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjk0Mzg3MA==", "bodyText": "Yes, I will update the readme.", "url": "https://github.com/apache/fineract/pull/906#discussion_r426943870", "createdAt": "2020-05-18T23:20:47Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/AccountingScenarioIntegrationTest.java", "diffHunk": "@@ -587,11 +587,8 @@ public void checkPeriodicAccrualAccountingFlow() {\n         this.journalEntryHelper.checkJournalEntryForAssetAccount(assetAccount, this.EXPECTED_DISBURSAL_DATE, assetAccountInitialEntry);\n \n         final String jobName = \"Add Accrual Transactions\";\n-        try {\n-            this.schedulerJobHelper.executeJob(jobName);\n-        } catch (InterruptedException e) {\n-            e.printStackTrace();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNjIxNA=="}, "originalCommit": null, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Mjk3MDQ5OnYy", "diffSide": "LEFT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/MultiException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyODoyN1rOGXxZjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyODoyN1rOGXxZjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3OTc4OA==", "bodyText": "@thesmallstar this needs to be kept. It's \"special\", and SupressWarning is OK here (only)", "url": "https://github.com/apache/fineract/pull/906#discussion_r427579788", "createdAt": "2020-05-19T20:28:27Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/MultiException.java", "diffHunk": "@@ -87,7 +86,6 @@ public void printStackTrace(PrintStream s) {\n         int i = 0;\n         for (Throwable e : throwables) {\n             s.print(++i + \".\");\n-            e.printStackTrace(s);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Mjk3MjAxOnYy", "diffSide": "LEFT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/MultiException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyODo1M1rOGXxaag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyODo1M1rOGXxaag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MDAxMA==", "bodyText": "as above", "url": "https://github.com/apache/fineract/pull/906#discussion_r427580010", "createdAt": "2020-05-19T20:28:53Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/MultiException.java", "diffHunk": "@@ -97,7 +95,6 @@ public void printStackTrace(PrintWriter s) {\n         int i = 0;\n         for (Throwable e : throwables) {\n             s.print(++i + \".\");\n-            e.printStackTrace(s);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Mjk3Mjg4OnYy", "diffSide": "LEFT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/MultiException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyOTowN1rOGXxa7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyOTowN1rOGXxa7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MDE0MQ==", "bodyText": "as below", "url": "https://github.com/apache/fineract/pull/906#discussion_r427580141", "createdAt": "2020-05-19T20:29:07Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/MultiException.java", "diffHunk": "@@ -77,7 +76,7 @@ public void printStackTrace() {\n         int i = 0;\n         for (Throwable e : throwables) {\n             LOG.info(\"{}.\",++i);\n-            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2Mjk3MzM0OnYy", "diffSide": "LEFT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/MultiException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyOToxOVrOGXxbRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyOToxOVrOGXxbRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU4MDIzMA==", "bodyText": "as below, must keep this as is", "url": "https://github.com/apache/fineract/pull/906#discussion_r427580230", "createdAt": "2020-05-19T20:29:19Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/core/exception/MultiException.java", "diffHunk": "@@ -65,7 +65,6 @@ public String getMessage() {\n             sb.append(++i);\n             sb.append(\". \");\n             Writer w = CharStreams.asWriter(sb);\n-            e.printStackTrace(new PrintWriter(w, true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2OTA3OTczOnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/service/CalendarUtils.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxMDowNDozMVrOGYtTXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQxNjoyODowOFrOGY54MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2MTI0NA==", "bodyText": "Two thoughts on this this: a) your LOG.error() is wrong, as everywhere else, please:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOG.error(\"{}\",e.getMessage());\n          \n          \n            \n                        LOG.error(\"Invalid date: \" + seedDateStr, e);\n          \n      \n    \n    \n  \n\nbut, b) more importantly, isn't this catch plain wrong, not required, and can just be removed?! new Date() does not throw ParseException - or am I missing something obvious?", "url": "https://github.com/apache/fineract/pull/906#discussion_r428561244", "createdAt": "2020-05-21T10:04:31Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/service/CalendarUtils.java", "diffHunk": "@@ -114,7 +116,7 @@ private static Date convertToiCal4JCompatibleDate(final LocalDate inputDate) {\n         try {\n             formattedDate = new Date(seedDateStr, \"yyyy-MM-dd\");\n         } catch (final ParseException e) {\n-            e.printStackTrace();\n+            LOG.error(\"{}\",e.getMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODcyNTY3Mw==", "bodyText": "It does throw a parse exception, a possible explanation is the string received might be complete gibberish and could not be parsed as a date?", "url": "https://github.com/apache/fineract/pull/906#discussion_r428725673", "createdAt": "2020-05-21T15:24:42Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/service/CalendarUtils.java", "diffHunk": "@@ -114,7 +116,7 @@ private static Date convertToiCal4JCompatibleDate(final LocalDate inputDate) {\n         try {\n             formattedDate = new Date(seedDateStr, \"yyyy-MM-dd\");\n         } catch (final ParseException e) {\n-            e.printStackTrace();\n+            LOG.error(\"{}\",e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2MTI0NA=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODcyNjU4NA==", "bodyText": "Replacing it with:\nLOG.error(\"Invalid date: {} \", seedDateStr, e);\nor spot bugs won't like it :)", "url": "https://github.com/apache/fineract/pull/906#discussion_r428726584", "createdAt": "2020-05-21T15:26:06Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/service/CalendarUtils.java", "diffHunk": "@@ -114,7 +116,7 @@ private static Date convertToiCal4JCompatibleDate(final LocalDate inputDate) {\n         try {\n             formattedDate = new Date(seedDateStr, \"yyyy-MM-dd\");\n         } catch (final ParseException e) {\n-            e.printStackTrace();\n+            LOG.error(\"{}\",e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2MTI0NA=="}, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc2NzI4MQ==", "bodyText": "LGTM!", "url": "https://github.com/apache/fineract/pull/906#discussion_r428767281", "createdAt": "2020-05-21T16:28:08Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/calendar/service/CalendarUtils.java", "diffHunk": "@@ -114,7 +116,7 @@ private static Date convertToiCal4JCompatibleDate(final LocalDate inputDate) {\n         try {\n             formattedDate = new Date(seedDateStr, \"yyyy-MM-dd\");\n         } catch (final ParseException e) {\n-            e.printStackTrace();\n+            LOG.error(\"{}\",e.getMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODU2MTI0NA=="}, "originalCommit": null, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1976, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}