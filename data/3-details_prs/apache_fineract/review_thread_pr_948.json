{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NzM2MDI0", "number": 948, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMTo1NzoyN1rOEAsIQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNToyNDoyNlrOEAwmTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MTU4NDY0OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/documentmanagement/api/ImagesApiResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQyMTo1NzoyN1rOGcIKPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwNjowMTozMlrOGc_mww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE0NzAwNQ==", "bodyText": "Base64.getEncoder().encode() returns byte[]\nAre you sure about this string concatenation?", "url": "https://github.com/apache/fineract/pull/948#discussion_r432147005", "createdAt": "2020-05-28T21:57:27Z", "author": {"login": "fynmanoj"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/documentmanagement/api/ImagesApiResource.java", "diffHunk": "@@ -140,7 +140,8 @@ public Response retrieveImage(@PathParam(\"entity\") final String entityName, @Pat\n             imageDataURISuffix = ContentRepositoryUtils.ImageDataURIsuffix.PNG.getValue();\n         }\n \n-        final String clientImageAsBase64Text = imageDataURISuffix + Base64.encodeBytes(imageData.getContentOfSize(maxWidth, maxHeight));\n+        byte[] resizedImage = imageData.getContentOfSize(maxWidth, maxHeight);\n+        final String clientImageAsBase64Text = imageDataURISuffix + Base64.getEncoder().encode(resizedImage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2Mzg0MQ==", "bodyText": "@fynmanoj no you're absolutely right of course, it was (very) wrong - Thank You very much for spotting that!\nPS: It's totally OK to help code review and tell me \"this is wrong!\" more strongly than your very polite \"Are you sure about\" \ud83d\ude04", "url": "https://github.com/apache/fineract/pull/948#discussion_r432963841", "createdAt": "2020-05-31T16:43:30Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/documentmanagement/api/ImagesApiResource.java", "diffHunk": "@@ -140,7 +140,8 @@ public Response retrieveImage(@PathParam(\"entity\") final String entityName, @Pat\n             imageDataURISuffix = ContentRepositoryUtils.ImageDataURIsuffix.PNG.getValue();\n         }\n \n-        final String clientImageAsBase64Text = imageDataURISuffix + Base64.encodeBytes(imageData.getContentOfSize(maxWidth, maxHeight));\n+        byte[] resizedImage = imageData.getContentOfSize(maxWidth, maxHeight);\n+        final String clientImageAsBase64Text = imageDataURISuffix + Base64.getEncoder().encode(resizedImage);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE0NzAwNQ=="}, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzA1NTQyNw==", "bodyText": "@vorburger , Sure \ud83d\ude04 \ud83d\udc4d", "url": "https://github.com/apache/fineract/pull/948#discussion_r433055427", "createdAt": "2020-06-01T06:01:32Z", "author": {"login": "fynmanoj"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/documentmanagement/api/ImagesApiResource.java", "diffHunk": "@@ -140,7 +140,8 @@ public Response retrieveImage(@PathParam(\"entity\") final String entityName, @Pat\n             imageDataURISuffix = ContentRepositoryUtils.ImageDataURIsuffix.PNG.getValue();\n         }\n \n-        final String clientImageAsBase64Text = imageDataURISuffix + Base64.encodeBytes(imageData.getContentOfSize(maxWidth, maxHeight));\n+        byte[] resizedImage = imageData.getContentOfSize(maxWidth, maxHeight);\n+        final String clientImageAsBase64Text = imageDataURISuffix + Base64.getEncoder().encode(resizedImage);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjE0NzAwNQ=="}, "originalCommit": null, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MjMxNjk0OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/documentmanagement/api/ImagesApiResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNToyNDoyNlrOGcPKnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNjo0MTo1NlrOGc6AhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2MTc4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    final String clientImageAsBase64Text = imageDataURISuffix + Base64.getEncoder().encode(resizedImage);\n          \n          \n            \n                    final String clientImageAsBase64Text = imageDataURISuffix + Base64.getEncoder().encodeToString(resizedImage);\n          \n      \n    \n    \n  \n\nI suggest you use this instead. Check this for reference: https://www.baeldung.com/java-base64-encode-and-decode.\nShould be able to merge this once that is done.", "url": "https://github.com/apache/fineract/pull/948#discussion_r432261788", "createdAt": "2020-05-29T05:24:26Z", "author": {"login": "xurror"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/documentmanagement/api/ImagesApiResource.java", "diffHunk": "@@ -140,7 +140,8 @@ public Response retrieveImage(@PathParam(\"entity\") final String entityName, @Pat\n             imageDataURISuffix = ContentRepositoryUtils.ImageDataURIsuffix.PNG.getValue();\n         }\n \n-        final String clientImageAsBase64Text = imageDataURISuffix + Base64.encodeBytes(imageData.getContentOfSize(maxWidth, maxHeight));\n+        byte[] resizedImage = imageData.getContentOfSize(maxWidth, maxHeight);\n+        final String clientImageAsBase64Text = imageDataURISuffix + Base64.getEncoder().encode(resizedImage);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2MzcxNg==", "bodyText": "done! Thanks you, very much.", "url": "https://github.com/apache/fineract/pull/948#discussion_r432963716", "createdAt": "2020-05-31T16:41:56Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/documentmanagement/api/ImagesApiResource.java", "diffHunk": "@@ -140,7 +140,8 @@ public Response retrieveImage(@PathParam(\"entity\") final String entityName, @Pat\n             imageDataURISuffix = ContentRepositoryUtils.ImageDataURIsuffix.PNG.getValue();\n         }\n \n-        final String clientImageAsBase64Text = imageDataURISuffix + Base64.encodeBytes(imageData.getContentOfSize(maxWidth, maxHeight));\n+        byte[] resizedImage = imageData.getContentOfSize(maxWidth, maxHeight);\n+        final String clientImageAsBase64Text = imageDataURISuffix + Base64.getEncoder().encode(resizedImage);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjI2MTc4OA=="}, "originalCommit": null, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1998, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}