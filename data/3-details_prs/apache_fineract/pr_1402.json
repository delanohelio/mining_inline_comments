{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMjg4MzI0", "number": 1402, "title": "FINERACT-1189: fineract client as a separate module", "bodyText": "Description\nSome pointers for your reviews:\n\nfineract-client uses the official OpenAPI Gradle plugin to generate sources; I've removed the plugin that was previously used from fineract-provider; the CLI based code generation is also removed (including spawning a separate Gradle build); just to say fineract-client is a true module now\nthe \"allprojects\" section contains now more plugin configurations that can be applied to all modules; I've moved Spring dependency management, Rat and License check there, because like this we only have to configure them once\nthere is a new section (after \"allprojects\") that contain every plugin configuration common to Java modules. Source sets, compiler arguments, JDK compatibility as well as Spotless Java related configurations are done in one place here. We can move more stuff here, e. g. Errorprone, Jacoco, Git properties, Checkstyle, Modernizer, Spotbugs, project report; these plugins are not fineract-provider specific, but can be applied to any Java module (fineract-client included); I just wanted to limit this first set of changes (already 25+ files changed)\nplease look at line 26 of the build.gradle file in the root folder to see how the selection of Java projects works; this allows us to use one common configuration for Java projects (see line 333)\nfineract-client/src/main/templates contains OpenAPI/Swagger code generator template files that fix a couple of style errors or just add licenses; just to have the bare minimum there; these sources are still excluded from Spotless and other checks, because... well, generated code.\nin the current upstream develop branch the Swagger generated code is built on Travis with \"mvn test\"; I would be surprised if we have any tests there... I remember there's a flag to generate test stubs, but how useful are these skeleton tests then? Have to check this again\nI still have to decide how to handle the Swagger file (\"fineract.yaml\"). In my first prototype I've copied it from fineract-provider to fineract-client, because I couldn't convince Gradle to build the modules in a certain order (fineract-provider -> fineract-client); it's not really a good practice to do this anyway in Gradle, but still there are a few mechanics that should help (like declaring a project dependency or something along those lines). If I manage to get this working then we don't need to Git manage fineract.yaml under fineract-client (we can just pick it up in fineract-provider/build). Just FYI\n\nChecklist\nPlease make sure these boxes are checked before submitting your pull request - thanks!\n\n\n Write the commit message as per https://github.com/apache/fineract/#pull-requests\n\n\n Acknowledge that we will not review PRs that are not passing the build (\"green\") - it is your responsibility to get a proposed PR to pass the build, not primarily the project's maintainers.\n\n\n Create/update unit or integration tests for verifying the changes made.\n\n\n Follow coding conventions at https://cwiki.apache.org/confluence/display/FINERACT/Coding+Conventions.\n\n\n Add required Swagger annotation and update API documentation at fineract-provider/src/main/resources/static/api-docs/apiLive.htm with details of any API changes\n\n\n Submission is not a \"code dump\".  (Large changes can be made \"in repository\" via a branch.  Ask on the developer mailing list for guidance, if required.)", "createdAt": "2020-10-14T10:58:02Z", "url": "https://github.com/apache/fineract/pull/1402", "merged": true, "mergeCommit": {"oid": "ca80ecb46e73d31e4b5f03747ad74c8520ac149e"}, "closed": true, "closedAt": "2020-10-17T14:24:54Z", "author": {"login": "vidakovic"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSbD9ZABqjM4NzU5ODEwMzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTbT6bgFqTUxMDk4NzMzNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "242b01df6de13c57a7ed918e86a6d0d12ba25e40", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/242b01df6de13c57a7ed918e86a6d0d12ba25e40", "committedDate": "2020-10-14T10:26:31Z", "message": "FINERACT-1189: fineract client as a separate module"}, "afterCommit": {"oid": "a0e45730c3b0ed5084322994c91fcf6e4e018b4d", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/a0e45730c3b0ed5084322994c91fcf6e4e018b4d", "committedDate": "2020-10-14T10:59:12Z", "message": "FINERACT-1189: fineract client as a separate module"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4MjQxNDAw", "url": "https://github.com/apache/fineract/pull/1402#pullrequestreview-508241400", "createdAt": "2020-10-14T11:17:10Z", "commit": {"oid": "a0e45730c3b0ed5084322994c91fcf6e4e018b4d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMToxNzoxMVrOHhOIQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxMToyNjozNFrOHhOaQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU5NjU0NA==", "bodyText": "There was a bit of a debate about this earlier. Initially we just had spotlessCheck which complained about any formatting issues, and then people had to manually run spotlessApply to fix them. There was a fair bit of dissatisfaction about this - and hence this was introduced: if you run build manually it will automatically fix any spotless issues with spotlessApply - but when you run the build in Travis, it just checks and doesn't modify the code. If we want to change that behaviour now that should be a different JIRA & PR up for discussion...", "url": "https://github.com/apache/fineract/pull/1402#discussion_r504596544", "createdAt": "2020-10-14T11:17:11Z", "author": {"login": "ptuomola"}, "path": "build.gradle", "diffHunk": "@@ -85,51 +218,235 @@ allprojects  {\n             trimTrailingWhitespace()\n         }\n \n-        if (plugins.hasPlugin('java')) {\n-            java {\n-                targetExclude '**/build/**', '**/bin/**', '**/out/**'\n-                importOrder() //sort imports alphabetically\n-                removeUnusedImports()\n-                eclipse().configFile \"$rootDir/config/fineractdev-formatter.xml\"\n-                endWithNewline()\n-                trimTrailingWhitespace()\n-\n-                // Enforce style modifier order\n-                custom 'Modifier ordering', {\n-                    def modifierRanking = [\n-                        public      : 1,\n-                        protected   : 2,\n-                        private     : 3,\n-                        abstract    : 4,\n-                        default     : 5,\n-                        static      : 6,\n-                        final       : 7,\n-                        transient   : 8,\n-                        volatile    : 9,\n-                        synchronized: 10,\n-                        native      : 11,\n-                        strictfp    : 12]\n-                    // Find any instance of multiple modifiers. Lead with a non-word character to avoid\n-                    // accidental matching against for instance, \"an alternative default value\"\n-                    it.replaceAll(/\\W(?:public |protected |private |abstract |default |static |final |transient |volatile |synchronized |native |strictfp ){2,}/, {\n-                        // Do not replace the leading non-word character.  Identify the modifiers\n-                        it.replaceAll(/(?:public |protected |private |abstract |default |static |final |transient |volatile |synchronized |native |strictfp ){2,}/, {\n-                            // Sort the modifiers according to the ranking above\n-                            it.split().sort({ modifierRanking[it] }).join(' ') + ' '\n-                        }\n-                        )\n+        lineEndings 'UNIX'\n+    }\n+\n+    // Configuration for Gradle license plug-in\n+    // https://github.com/hierynomus/license-gradle-plugin\n+    license {\n+        header rootProject.file(\"$rootDir/APACHE_LICENSETEXT.md\")\n+        excludes([\n+            \"**/git.properties\",\n+            \"**/*.html\",\n+            \"**/*.mustache\",\n+            \"**/package-info.java\",\n+            \"**/keystore.jks\",\n+            \"**/static/swagger-ui/**\",\n+            \"**/api-docs/**\",\n+        ])\n+        strictCheck true\n+    }\n+\n+    task licenseFormatBuildScripts (type:nl.javadude.gradle.plugins.license.License) {\n+        source = fileTree(dir: \"$rootDir/\", includes: [\n+            '**/*.bat',\n+            '**/*.sh',\n+            '**/*.sql'\n+        ])\n+    }\n+    licenseFormat.dependsOn licenseFormatBuildScripts\n+\n+    // Configuration for Apache Release Audit Tool task\n+    // https://github.com/eskatos/creadur-rat-gradle\n+    rat {\n+        verbose = false\n+        reportDir = file(\"$buildDir/reports/rat\")\n+        excludes = [\n+            '**/src/main/templates/**/*.mustache',\n+            '**/.dockerignore',\n+            '**/*.launch',\n+            '**/licenses/**',\n+            '**/*.md',\n+            '**/*.github/**',\n+            '**/MANIFEST.MF',\n+            '**/*.json',\n+            '**/*.json.template',\n+            '**/*.txt',\n+            '**/*.log',\n+            '**/fineractdev-eclipse-preferences.epf',\n+            '**/template-expected.html',\n+            '**/template.mustache',\n+            '**/.classpath',\n+            '**/.project',\n+            '**/.idea/**',\n+            '**/*.ipr',\n+            '**/*.iws',\n+            '**/.settings/**',\n+            '**/bin/**',\n+            '**/.git/**',\n+            '**/.gitignore',\n+            '**/.gitkeep',\n+            '**/*.iml',\n+            '**/config/swagger/templates/**',\n+            // Notice files\n+            '**/NOTICE_RELEASE',\n+            '**/NOTICE_SOURCE',\n+            // Swagger License\n+            '**/src/main/resources/static/swagger-ui/**',\n+            // gradle\n+            '**/.gradle/**',\n+            '**/gradlew',\n+            '**/gradlew.bat',\n+            '**/gradle/wrapper/gradle-wrapper.properties',\n+            '**/caches/**',\n+            '**/daemon/**',\n+            '**/native/**',\n+            '**/wrapper/**',\n+            '**/build/**',\n+            // Api Docs\n+            '**/api-docs/*.*',\n+            '**/docs/system-architecture/.htaccess',\n+            '**/docs/system-architecture/404.html',\n+            '**/docs/system-architecture/index.html',\n+            '**/docs/system-architecture/**/*.xml',\n+            '**/bootstrap-3.0.0/assets/application.js',\n+            '**/system-architecture/js/plugins.js',\n+            // Apache License\n+            '**/bootstrap-3.0.0/assets/less.js',\n+            '**/css/bootstrap-3.0.0/**/*.*',\n+            // Public Domain See http://www.JSON.org/js.html\n+            '**/bootstrap-3.0.0/assets/json2.js.htm',\n+            // MIT License\n+            '**/modernizr-2.6.2.min.js',\n+            '**/css/normalize.css',\n+            '**/assets/filesaver.js',\n+            '**/css/fonts/glyphicons-halflings-regular.svg',\n+            '**/assets/jszip.js',\n+            '**/assets/jquery.js',\n+            '**/api-docs/jquery-1.7.min.js',\n+            '**/css/toc-0.1.2/**/*.*',\n+            '**/docs/system-architecture/css/main.css',\n+            '**/system-architecture/js/vendor/jquery-1.9.1.min.js',\n+            '**/system-architecture/js/vendor/toc-0.1.2/jquery.toc.min.js',\n+            '**/assets/respond.min.js',\n+            '**/assets/html5shiv.js',\n+            // BSD License\n+            '**/assets/uglify.js',\n+            // Ignore out folder\n+            '**/out/**',\n+            // Git build info\n+            \"**/git.properties\",\n+        ]\n+    }\n+}\n+\n+configure(project.fineractJavaProjects) {\n+    // NOTE: order matters!\n+\n+    apply plugin: 'java-library'\n+    apply plugin: 'idea'\n+\n+    /* define the valid syntax level for source files */\n+    sourceCompatibility = JavaVersion.VERSION_11\n+    /* define binary compatibility version */\n+    targetCompatibility = JavaVersion.VERSION_11\n+\n+    /* http://stackoverflow.com/questions/19653311/jpa-repository-works-in-idea-and-production-but-not-in-gradle */\n+    sourceSets.main.output.resourcesDir = sourceSets.main.java.outputDir\n+    sourceSets.test.output.resourcesDir = sourceSets.test.java.outputDir\n+\n+    sourceSets {\n+        integrationTest {\n+            compileClasspath += main.output + test.output\n+            runtimeClasspath += main.output + test.output\n+        }\n+    }\n+\n+    configurations {\n+        implementation.setCanBeResolved(true)\n+        api.setCanBeResolved(true)\n+\n+        integrationTestCompile.extendsFrom testImplementation\n+        integrationTestRuntime.extendsFrom testRuntime\n+    }\n+\n+    tasks.withType(JavaCompile) {\n+        options.compilerArgs += [\n+            \"-Xlint:unchecked\",\n+            \"-Xlint:cast\",\n+            \"-Xlint:auxiliaryclass\",\n+            \"-Xlint:deprecation\",\n+            \"-Xlint:dep-ann\",\n+            \"-Xlint:divzero\",\n+            \"-Xlint:empty\",\n+            \"-Xlint:exports\",\n+            \"-Xlint:fallthrough\",\n+            \"-Xlint:finally\",\n+            \"-Xlint:module\",\n+            \"-Xlint:opens\",\n+            \"-Xlint:options\",\n+            \"-Xlint:overloads\",\n+            \"-Xlint:overrides\",\n+            \"-Xlint:path\",\n+            \"-Xlint:processing\",\n+            \"-Xlint:removal\",\n+            \"-Xlint:requires-automatic\",\n+            \"-Xlint:requires-transitive-automatic\",\n+            \"-Xlint:try\",\n+            \"-Xlint:varargs\",\n+            \"-Xlint:preview\",\n+            \"-Xlint:static\",\n+            // \"-Werror\" // TODO: @vidakovic fix this\n+        ]\n+        // TODO FINERACT-959 (gradually) enable -Xlint:all (see \"javac -help -X\")\n+\n+        options.deprecation = true\n+\n+        options.compilerArgs +=[\n+            \"-Xmaxwarns\",\n+            1500,\n+            \"-Xmaxerrs\",\n+            1500\n+        ]\n+    }\n+\n+    // Configuration for the spotless plugin\n+    // https://github.com/diffplug/spotless/tree/main/plugin-gradle\n+    spotless {\n+        java {\n+            targetExclude '**/build/**', '**/bin/**', '**/out/**'\n+            importOrder() //sort imports alphabetically\n+            removeUnusedImports()\n+            eclipse().configFile \"$rootDir/config/fineractdev-formatter.xml\"\n+            endWithNewline()\n+            trimTrailingWhitespace()\n+\n+            // Enforce style modifier order\n+            custom 'Modifier ordering', {\n+                def modifierRanking = [\n+                    public      : 1,\n+                    protected   : 2,\n+                    private     : 3,\n+                    abstract    : 4,\n+                    default     : 5,\n+                    static      : 6,\n+                    final       : 7,\n+                    transient   : 8,\n+                    volatile    : 9,\n+                    synchronized: 10,\n+                    native      : 11,\n+                    strictfp    : 12]\n+                // Find any instance of multiple modifiers. Lead with a non-word character to avoid\n+                // accidental matching against for instance, \"an alternative default value\"\n+                it.replaceAll(/\\W(?:public |protected |private |abstract |default |static |final |transient |volatile |synchronized |native |strictfp ){2,}/, {\n+                    // Do not replace the leading non-word character.  Identify the modifiers\n+                    it.replaceAll(/(?:public |protected |private |abstract |default |static |final |transient |volatile |synchronized |native |strictfp ){2,}/, {\n+                        // Sort the modifiers according to the ranking above\n+                        it.split().sort({ modifierRanking[it] }).join(' ') + ' '\n                     }\n                     )\n                 }\n-            }\n-\n-            if (project.hasProperty(\"automatedBuild\")) {\n-                dependsOn(spotlessCheck)\n-            } else {\n-                dependsOn(spotlessApply)\n+                )\n             }\n         }\n \n+        // TODO: @vidakovic why do we need this again? Spotless is checking anyway\n+        // if (project.hasProperty(\"automatedBuild\")) {\n+        //     dependsOn(spotlessCheck)\n+        // } else {\n+        //     dependsOn(spotlessApply)\n+        // }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0e45730c3b0ed5084322994c91fcf6e4e018b4d"}, "originalPosition": 434}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU5NzIzMA==", "bodyText": "Hmm... I thought we wanted to only have \"common\" plugins in the main Gradle file. But the OpenAPI one is only needed / used on the client project. Is there any way to make it specific for that subproject only?", "url": "https://github.com/apache/fineract/pull/1402#discussion_r504597230", "createdAt": "2020-10-14T11:18:38Z", "author": {"login": "ptuomola"}, "path": "build.gradle", "diffHunk": "@@ -46,6 +56,7 @@ buildscript {\n plugins {\n     id 'io.spring.dependency-management' version '1.0.10.RELEASE'\n     id 'com.diffplug.spotless' version '5.6.1'\n+    id 'org.openapi.generator' version '4.3.1'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0e45730c3b0ed5084322994c91fcf6e4e018b4d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDU5NzY0Ng==", "bodyText": "It's going to be pretty big list to have all dependencies in a single list covering all possible future subprojects. Is there any way to make these lists subproject-specific, and only keep any common dependencies here?", "url": "https://github.com/apache/fineract/pull/1402#discussion_r504597646", "createdAt": "2020-10-14T11:19:33Z", "author": {"login": "ptuomola"}, "path": "build.gradle", "diffHunk": "@@ -63,14 +74,136 @@ allprojects  {\n     }\n \n     apply plugin: 'io.spring.dependency-management'\n-    apply plugin: \"com.diffplug.spotless\"\n+    apply plugin: 'com.diffplug.spotless'\n+    apply plugin: 'com.github.hierynomus.license'\n+    apply plugin: 'org.nosphere.apache.rat'\n+\n+    // Configuration for the dependency management plugin\n+    // https://github.com/spring-gradle-plugins/dependency-management-plugin\n+    dependencyManagement {\n+        imports {\n+            mavenBom 'org.springframework:spring-framework-bom:5.2.9.RELEASE'\n+        }\n+\n+        dependencies {\n+            // We use fixed versions, instead of inheriting them from the Spring BOM, to be able to be on more recent ones.\n+            // We do not use :+ to get the latest available version available on Maven Central, as that could suddenly break things.\n+            // We use the Renovate Bot to automatically propose Pull Requests (PRs) when upgrades for all of these versions are available.\n+\n+            dependency 'org.springframework.security.oauth:spring-security-oauth2:2.5.0.RELEASE'\n+            dependency 'org.apache.openjpa:openjpa:3.1.2' // when upgrading, also change OpenJPA version repeated above in buildscript!\n+            dependency 'com.squareup.retrofit:retrofit:1.9.0'\n+            dependency 'com.squareup.okhttp:okhttp:2.7.5'\n+            dependency 'com.squareup.okhttp:okhttp-urlconnection:2.7.5'\n+            dependency 'com.google.guava:guava:29.0-jre'\n+            dependency 'com.google.code.gson:gson:2.8.6'\n+            dependency 'org.apache.commons:commons-email:1.5'\n+            dependency 'commons-io:commons-io:2.8.0'\n+            dependency 'org.drizzle.jdbc:drizzle-jdbc:1.4'\n+            dependency 'com.github.librepdf:openpdf:1.3.22'\n+            dependency 'org.mnode.ical4j:ical4j:3.0.20'\n+            dependency 'org.quartz-scheduler:quartz:2.3.2'\n+            dependency 'com.amazonaws:aws-java-sdk-s3:1.11.874'\n+            dependency 'org.ehcache:ehcache:3.9.0'\n+            dependency 'com.github.spullara.mustache.java:compiler:0.9.6'\n+            dependency 'com.jayway.jsonpath:json-path:2.4.0'\n+            dependency 'org.apache.tika:tika-core:1.24.1'\n+            dependency 'org.apache.httpcomponents:httpclient:4.5.13'\n+            dependency 'io.swagger.core.v3:swagger-annotations:2.1.5'\n+            dependency 'jakarta.management.j2ee:jakarta.management.j2ee-api:1.1.4'\n+            dependency 'jakarta.jms:jakarta.jms-api:2.0.3'\n+            dependency 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.3'\n+            dependency 'jakarta.validation:jakarta.validation-api:3.0.0'\n+            dependency 'org.apache.activemq:activemq-broker:5.16.0'\n+            dependency 'org.apache.bval:org.apache.bval.bundle:2.0.4'\n+            dependency 'org.mockito:mockito-core:3.5.13'\n+            dependency 'org.mockito:mockito-junit-jupiter:3.5.13'\n+            dependency 'io.github.classgraph:classgraph:4.8.90'\n+            dependency 'org.awaitility:awaitility:4.0.3'\n+            dependency 'com.github.spotbugs:spotbugs-annotations:4.1.3'\n+            dependency 'javax.cache:cache-api:1.1.1'\n+            dependency 'org.mock-server:mockserver-junit-jupiter:5.11.1'\n+            dependency 'org.webjars.npm:swagger-ui-dist:3.35.1'\n+            dependency 'org.webjars:webjars-locator-core:0.46'\n+\n+            // fineract client dependencies\n+            dependency \"com.squareup.retrofit2:retrofit:$retrofitVersion\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0e45730c3b0ed5084322994c91fcf6e4e018b4d"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDYwMTE1Mg==", "bodyText": "These files look like boilerplate... have we modified them? If not, is there a possibility to have them as dependency we download rather than something we check into git?", "url": "https://github.com/apache/fineract/pull/1402#discussion_r504601152", "createdAt": "2020-10-14T11:26:34Z", "author": {"login": "ptuomola"}, "path": "fineract-client/src/main/templates/java/retrofit2/ApiClient.mustache", "diffHunk": "@@ -0,0 +1,468 @@\n+{{>licenseInfo}}\n+package {{invokerPackage}};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0e45730c3b0ed5084322994c91fcf6e4e018b4d"}, "originalPosition": 2}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0e45730c3b0ed5084322994c91fcf6e4e018b4d", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/a0e45730c3b0ed5084322994c91fcf6e4e018b4d", "committedDate": "2020-10-14T10:59:12Z", "message": "FINERACT-1189: fineract client as a separate module"}, "afterCommit": {"oid": "7ed61809ce458e03fa81b111ffb56ba4f4883b36", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/7ed61809ce458e03fa81b111ffb56ba4f4883b36", "committedDate": "2020-10-14T13:36:53Z", "message": "FINERACT-1189: fineract client as a separate module"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4OTIyMjk3", "url": "https://github.com/apache/fineract/pull/1402#pullrequestreview-508922297", "createdAt": "2020-10-15T04:06:11Z", "commit": {"oid": "7ed61809ce458e03fa81b111ffb56ba4f4883b36"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNDowNjoxMVrOHhwA-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNDowNjoxMVrOHhwA-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE1MTczNg==", "bodyText": "As part of this refactoring, we seem to have lost this ErrorProne configuration. At least I now get 20 pages of errorprone warnings about all these things that used to be disabled...", "url": "https://github.com/apache/fineract/pull/1402#discussion_r505151736", "createdAt": "2020-10-15T04:06:11Z", "author": {"login": "ptuomola"}, "path": "fineract-provider/build.gradle", "diffHunk": "@@ -302,140 +125,6 @@ configurations {\n     runtime\n }\n \n-tasks.withType(JavaCompile) {\n-    options.compilerArgs += [\n-        \"-Xlint:unchecked\",\n-        \"-Xlint:cast\",\n-        \"-Xlint:auxiliaryclass\",\n-        \"-Xlint:deprecation\",\n-        \"-Xlint:dep-ann\",\n-        \"-Xlint:divzero\",\n-        \"-Xlint:empty\",\n-        \"-Xlint:exports\",\n-        \"-Xlint:fallthrough\",\n-        \"-Xlint:finally\",\n-        \"-Xlint:module\",\n-        \"-Xlint:opens\",\n-        \"-Xlint:options\",\n-        \"-Xlint:overloads\",\n-        \"-Xlint:overrides\",\n-        \"-Xlint:path\",\n-        \"-Xlint:processing\",\n-        \"-Xlint:removal\",\n-        \"-Xlint:requires-automatic\",\n-        \"-Xlint:requires-transitive-automatic\",\n-        \"-Xlint:try\",\n-        \"-Xlint:varargs\",\n-        \"-Xlint:preview\",\n-        \"-Xlint:static\",\n-        \"-Werror\"\n-    ]\n-    // TODO FINERACT-959 (gradually) enable -Xlint:all (see \"javac -help -X\")\n-\n-    options.deprecation = true\n-    options.errorprone {\n-        disableWarningsInGeneratedCode = true\n-        //Todo Remove necessary checks from this list\n-        disable(\n-                \"UnusedVariable\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ed61809ce458e03fa81b111ffb56ba4f4883b36"}, "originalPosition": 249}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ed61809ce458e03fa81b111ffb56ba4f4883b36", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/7ed61809ce458e03fa81b111ffb56ba4f4883b36", "committedDate": "2020-10-14T13:36:53Z", "message": "FINERACT-1189: fineract client as a separate module"}, "afterCommit": {"oid": "08a8e9cde52752294d473637bf03565446f8516c", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/08a8e9cde52752294d473637bf03565446f8516c", "committedDate": "2020-10-15T10:35:37Z", "message": "FINERACT-1189: fineract client as a separate module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "08a8e9cde52752294d473637bf03565446f8516c", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/08a8e9cde52752294d473637bf03565446f8516c", "committedDate": "2020-10-15T10:35:37Z", "message": "FINERACT-1189: fineract client as a separate module"}, "afterCommit": {"oid": "1b7f1261279c4e0bbf6301523b20bd9a834716f8", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/1b7f1261279c4e0bbf6301523b20bd9a834716f8", "committedDate": "2020-10-15T10:41:05Z", "message": "FINERACT-1189: fineract client as a separate module"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MzA2MDYz", "url": "https://github.com/apache/fineract/pull/1402#pullrequestreview-509306063", "createdAt": "2020-10-15T12:07:48Z", "commit": {"oid": "1b7f1261279c4e0bbf6301523b20bd9a834716f8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjowNzo0OVrOHiEiuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjowOTo1NlrOHiEnfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4ODA1Ng==", "bodyText": "How does Travis cover for the client now? Just curious.", "url": "https://github.com/apache/fineract/pull/1402#discussion_r505488056", "createdAt": "2020-10-15T12:07:49Z", "author": {"login": "vorburger"}, "path": ".travis.yml", "diffHunk": "@@ -72,6 +72,6 @@ script:\n # using \"&&\" instead of several \"-\" means that integrationTest does not run if test fails,\n # and Docker test does not run if integration test fails, which makes PR failure easier to understand.\n # @see https://docs.travis-ci.com/user/job-lifecycle/#customizing-the-build-phase\n-  - ./gradlew --console=plain -PautomatedBuild=true licenseMain licenseTest licenseIntegrationTest check  &&  ./gradlew --console=plain -PautomatedBuild=true integrationTest --fail-fast  &&  sudo service mysql stop  &&  docker-compose build  &&  docker-compose up -d  &&  sleep 60s  && curl -f -k --retry 5 --retry-connrefused --connect-timeout 30 --retry-delay 30 https://localhost:8443/fineract-provider/actuator/health  &&  (( $(curl -f -k --retry 5 --retry-connrefused --connect-timeout 30 --retry-delay 30 https://localhost:8443/fineract-provider/actuator/info | wc --chars) > 100 )) && ./gradlew generateSwaggerCode && cd fineract-provider/build/swagger-code-fineract && mvn test\n+  - ./gradlew --console=plain -PautomatedBuild=true licenseMain licenseTest licenseIntegrationTest check  &&  ./gradlew --console=plain -PautomatedBuild=true integrationTest --fail-fast  &&  sudo service mysql stop  &&  docker-compose build  &&  docker-compose up -d  &&  sleep 60s  && curl -f -k --retry 5 --retry-connrefused --connect-timeout 30 --retry-delay 30 https://localhost:8443/fineract-provider/actuator/health  &&  (( $(curl -f -k --retry 5 --retry-connrefused --connect-timeout 30 --retry-delay 30 https://localhost:8443/fineract-provider/actuator/info | wc --chars) > 100 ))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b7f1261279c4e0bbf6301523b20bd9a834716f8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQ4OTI3Nw==", "bodyText": "This seems curious, to me.. isn't this RUNTIME related, not BUILD time? Why is e.g. okhttp required to generate code? There's probably a good reason. But we didn't seem to have it before, so I thought I could ask.", "url": "https://github.com/apache/fineract/pull/1402#discussion_r505489277", "createdAt": "2020-10-15T12:09:56Z", "author": {"login": "vorburger"}, "path": "build.gradle", "diffHunk": "@@ -20,6 +20,16 @@\n buildscript {\n     ext {\n         jacocoVersion = '0.8.5'\n+        retrofitVersion = '2.9.0'\n+        okhttpVersion = '4.7.2'\n+        oltuVersion = '1.0.1'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b7f1261279c4e0bbf6301523b20bd9a834716f8"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b7f1261279c4e0bbf6301523b20bd9a834716f8", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/1b7f1261279c4e0bbf6301523b20bd9a834716f8", "committedDate": "2020-10-15T10:41:05Z", "message": "FINERACT-1189: fineract client as a separate module"}, "afterCommit": {"oid": "6fad50ef27f372840f2ceb29f6fb08a3acb8d92c", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/6fad50ef27f372840f2ceb29f6fb08a3acb8d92c", "committedDate": "2020-10-15T13:52:00Z", "message": "FINERACT-1189: fineract client as a separate module"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjkyMDUy", "url": "https://github.com/apache/fineract/pull/1402#pullrequestreview-509692052", "createdAt": "2020-10-15T19:15:31Z", "commit": {"oid": "6fad50ef27f372840f2ceb29f6fb08a3acb8d92c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToxNTozMVrOHiWaPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxOToxNTozMVrOHiWaPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTc4MDc5Nw==", "bodyText": "Hmm... are we changing the license that is on gradlew.bat? Surely we should retain the existing license that it is provided with", "url": "https://github.com/apache/fineract/pull/1402#discussion_r505780797", "createdAt": "2020-10-15T19:15:31Z", "author": {"login": "ptuomola"}, "path": "gradlew.bat", "diffHunk": "@@ -1,3 +1,22 @@\n+@REM\r\n+@REM Licensed to the Apache Software Foundation (ASF) under one\r\n+@REM or more contributor license agreements. See the NOTICE file\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fad50ef27f372840f2ceb29f6fb08a3acb8d92c"}, "originalPosition": 3}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6fad50ef27f372840f2ceb29f6fb08a3acb8d92c", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/6fad50ef27f372840f2ceb29f6fb08a3acb8d92c", "committedDate": "2020-10-15T13:52:00Z", "message": "FINERACT-1189: fineract client as a separate module"}, "afterCommit": {"oid": "9a58ac211cbe41755618f51a84c43280e0def66b", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/9a58ac211cbe41755618f51a84c43280e0def66b", "committedDate": "2020-10-15T21:53:25Z", "message": "FINERACT-1189: fineract client as a separate module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9a58ac211cbe41755618f51a84c43280e0def66b", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/9a58ac211cbe41755618f51a84c43280e0def66b", "committedDate": "2020-10-15T21:53:25Z", "message": "FINERACT-1189: fineract client as a separate module"}, "afterCommit": {"oid": "8db055620880be1742f92888b09c563bfaf0f941", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/8db055620880be1742f92888b09c563bfaf0f941", "committedDate": "2020-10-16T09:52:42Z", "message": "Remove OpenAPI templates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8db055620880be1742f92888b09c563bfaf0f941", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/8db055620880be1742f92888b09c563bfaf0f941", "committedDate": "2020-10-16T09:52:42Z", "message": "Remove OpenAPI templates"}, "afterCommit": {"oid": "517e0247c855dea6cdc3b46fe2c93230cc121ef9", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/517e0247c855dea6cdc3b46fe2c93230cc121ef9", "committedDate": "2020-10-16T09:54:45Z", "message": "FINERACT-1189: fineract client as a separate module"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTU1MDcy", "url": "https://github.com/apache/fineract/pull/1402#pullrequestreview-510955072", "createdAt": "2020-10-17T06:27:06Z", "commit": {"oid": "517e0247c855dea6cdc3b46fe2c93230cc121ef9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c92ac8903f043ec3968ba3c93fe5b796ccfbf1f2", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/c92ac8903f043ec3968ba3c93fe5b796ccfbf1f2", "committedDate": "2020-10-17T12:52:20Z", "message": "FINERACT-1189: fineract client as a separate module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "517e0247c855dea6cdc3b46fe2c93230cc121ef9", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/517e0247c855dea6cdc3b46fe2c93230cc121ef9", "committedDate": "2020-10-16T09:54:45Z", "message": "FINERACT-1189: fineract client as a separate module"}, "afterCommit": {"oid": "c92ac8903f043ec3968ba3c93fe5b796ccfbf1f2", "author": {"user": {"login": "vidakovic", "name": "Aleksandar Vidakovic"}}, "url": "https://github.com/apache/fineract/commit/c92ac8903f043ec3968ba3c93fe5b796ccfbf1f2", "committedDate": "2020-10-17T12:52:20Z", "message": "FINERACT-1189: fineract client as a separate module"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTg0MzM4", "url": "https://github.com/apache/fineract/pull/1402#pullrequestreview-510984338", "createdAt": "2020-10-17T13:03:57Z", "commit": {"oid": "c92ac8903f043ec3968ba3c93fe5b796ccfbf1f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMzowMzo1N1rOHjdPZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMzowMzo1N1rOHjdPZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk0MTI4NQ==", "bodyText": "Not sure why this is suddenly needed here, and what it has to do with FINERACT-1189, but doesn't really hurt much either, not a reason to request removing it. I do expect that likely will be a small PITA for anyone ever making changes to this file again - because it's exported from Eclipse, not manually edited, and when Eclipse rewrites it, it will most likely loose this ASL header again, so whoever makes such changes will have to manually put it back (if we're enforcing this now, else we'll just loose it again sooner or later).", "url": "https://github.com/apache/fineract/pull/1402#discussion_r506941285", "createdAt": "2020-10-17T13:03:57Z", "author": {"login": "vorburger"}, "path": "config/fineractdev-cleanup.xml", "diffHunk": "@@ -1,4 +1,24 @@\n <?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n+<!--", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92ac8903f043ec3968ba3c93fe5b796ccfbf1f2"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTg0NDI3", "url": "https://github.com/apache/fineract/pull/1402#pullrequestreview-510984427", "createdAt": "2020-10-17T13:05:05Z", "commit": {"oid": "c92ac8903f043ec3968ba3c93fe5b796ccfbf1f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMzowNTowNVrOHjdP7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMzowNTowNVrOHjdP7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk0MTQyMg==", "bodyText": "FYI we have FINERACT-1102 about that - do you want to \"take\" it and assign it to yourself?", "url": "https://github.com/apache/fineract/pull/1402#discussion_r506941422", "createdAt": "2020-10-17T13:05:05Z", "author": {"login": "vorburger"}, "path": "fineract-client/build.gradle", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+description = 'Fineract Client'\n+\n+ext['swaggerFile'] = \"$rootDir/fineract-provider/build/classes/java/main/static/swagger-ui/fineract.yaml\".toString()\n+\n+apply plugin: 'org.openapi.generator'\n+\n+apply from: 'dependencies.gradle'\n+\n+// TODO: @vidakovic we should publish this lib to Maven Central; do in separate PR", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92ac8903f043ec3968ba3c93fe5b796ccfbf1f2"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTg0NjI2", "url": "https://github.com/apache/fineract/pull/1402#pullrequestreview-510984626", "createdAt": "2020-10-17T13:08:16Z", "commit": {"oid": "c92ac8903f043ec3968ba3c93fe5b796ccfbf1f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMzowODoxNlrOHjdQ3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMzowODoxNlrOHjdQ3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk0MTY2Mw==", "bodyText": "IMHO much more interesting and directly useful than Go, Ruby, Swift would be a TS (better; or JS) one.. UIs could use!", "url": "https://github.com/apache/fineract/pull/1402#discussion_r506941663", "createdAt": "2020-10-17T13:08:16Z", "author": {"login": "vorburger"}, "path": "fineract-client/build.gradle", "diffHunk": "@@ -0,0 +1,84 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements. See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership. The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License. You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied. See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+description = 'Fineract Client'\n+\n+ext['swaggerFile'] = \"$rootDir/fineract-provider/build/classes/java/main/static/swagger-ui/fineract.yaml\".toString()\n+\n+apply plugin: 'org.openapi.generator'\n+\n+apply from: 'dependencies.gradle'\n+\n+// TODO: @vidakovic we should publish this lib to Maven Central; do in separate PR\n+\n+openApiMeta {\n+    generatorName = 'Fineract'\n+    packageName = 'org.apache.fineract.client'\n+    outputFolder = \"$buildDir/meta\".toString()\n+}\n+\n+openApiValidate {\n+    inputSpec = \"$swaggerFile\"\n+    recommend = true\n+}\n+\n+task buildJavaSdk(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask){\n+    generatorName = 'java'\n+    verbose = false\n+    validateSpec = false\n+    skipValidateSpec = true\n+    inputSpec = \"$swaggerFile\"\n+    outputDir = \"$buildDir/generated/java\".toString()\n+    groupId = 'org.apache.fineract'\n+    apiPackage = 'org.apache.fineract.client.services'\n+    invokerPackage = 'org.apache.fineract.client'\n+    modelPackage = 'org.apache.fineract.client.models'\n+    configOptions = [\n+        dateLibrary: 'java8',\n+        useRxJava2: 'true',\n+        library: 'retrofit2',\n+        hideGenerationTimestamp: 'true',\n+    ]\n+    generateModelTests = false\n+    generateApiTests = false\n+    // trick to make sure fineract.yaml is generated first\n+    dependsOn = [\n+        ':fineract-provider:compileJava'\n+    ]\n+    finalizedBy = [licenseFormat]\n+}\n+\n+// TODO: @vidakovic we could provide even more client libs in different languages (Go, Ruby, Swift etc.)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92ac8903f043ec3968ba3c93fe5b796ccfbf1f2"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwOTg3MzM3", "url": "https://github.com/apache/fineract/pull/1402#pullrequestreview-510987337", "createdAt": "2020-10-17T13:50:58Z", "commit": {"oid": "c92ac8903f043ec3968ba3c93fe5b796ccfbf1f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMzo1MDo1OVrOHjdflw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xN1QxMzo1MDo1OVrOHjdflw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjk0NTQzMQ==", "bodyText": "FTR: we're not actually remove RAT (or hierynomus.license) here, as they were already copied to build.gradle in a previous PR, so this is just clean up. (@vidakovic perhaps in future build refactorings we can have the move more clearly in a single PR.)", "url": "https://github.com/apache/fineract/pull/1402#discussion_r506945431", "createdAt": "2020-10-17T13:50:59Z", "author": {"login": "vorburger"}, "path": "fineract-provider/build.gradle", "diffHunk": "@@ -18,15 +18,11 @@\n  */\n description = 'Fineract Provider'\n \n-apply plugin: \"org.nosphere.apache.rat\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c92ac8903f043ec3968ba3c93fe5b796ccfbf1f2"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1682, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}