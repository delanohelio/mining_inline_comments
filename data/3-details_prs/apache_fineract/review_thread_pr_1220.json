{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMzE5NTQ4", "number": 1220, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMTowNToxMlrOEYPF7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMToxMToxNlrOEYPM-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODQ4NTU5OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/configuration/domain/ConfigurationDomainServiceJpa.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMTowNToxMlrOHAdpfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMTowNToxMlrOHAdpfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI0NzgwNw==", "bodyText": "This should have been part of PR FIN-1106.", "url": "https://github.com/apache/fineract/pull/1220#discussion_r470247807", "createdAt": "2020-08-13T21:05:12Z", "author": {"login": "avikganguly01"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/configuration/domain/ConfigurationDomainServiceJpa.java", "diffHunk": "@@ -252,6 +252,16 @@ public boolean isSkippingMeetingOnFirstDayOfMonthEnabled() {\n         return getGlobalConfigurationPropertyData(\"skip-repayment-on-first-day-of-month\").isEnabled();\n     }\n \n+    @Override\n+    public boolean isFirstRepaymentDateAfterRescheduleAllowedOnHoliday() {\n+        return getGlobalConfigurationPropertyData(\"loan-reschedule-is-first-payday-allowed-on-holiday\").isEnabled();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODQ5MjU4OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/domain/AbstractLoanScheduleGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMTowNzozOFrOHAduEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMTowNzozOFrOHAduEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI0ODk3Nw==", "bodyText": "Is tranche loan approval failing due to flag?", "url": "https://github.com/apache/fineract/pull/1220#discussion_r470248977", "createdAt": "2020-08-13T21:07:38Z", "author": {"login": "avikganguly01"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/domain/AbstractLoanScheduleGenerator.java", "diffHunk": "@@ -279,7 +282,8 @@ private LoanScheduleModel generate(final MathContext mc, final LoanApplicationTe\n \n             // will check for EMI amount greater than interest calculated\n             if (loanApplicationTerms.getFixedEmiAmount() != null\n-                    && loanApplicationTerms.getFixedEmiAmount().compareTo(principalInterestForThisPeriod.interest().getAmount()) < 0) {\n+                    && loanApplicationTerms.getFixedEmiAmount().compareTo(principalInterestForThisPeriod.interest().getAmount()) < 0\n+                    && !loanApplicationTerms.isInterestToBeAppropriatedEquallyWhenGreaterThanEMIEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODQ5ODc4OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/domain/DecliningBalanceInterestLoanScheduleGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMTowOTo0MVrOHAdx-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMTowOTo0MVrOHAdx-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI0OTk3OA==", "bodyText": "LGTM", "url": "https://github.com/apache/fineract/pull/1220#discussion_r470249978", "createdAt": "2020-08-13T21:09:41Z", "author": {"login": "avikganguly01"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/domain/DecliningBalanceInterestLoanScheduleGenerator.java", "diffHunk": "@@ -125,7 +125,30 @@ public PrincipalInterest calculatePrincipalInterestComponentsForPeriod(final Pay\n                 interestCalculationGraceOnRepaymentPeriodFraction, periodNumber, mc, cumulatingInterestDueToGrace,\n                 balanceForInterestCalculation, interestStartDate, periodEndDate);\n \n-        interestForThisInstallment = interestForThisInstallment.plus(result.interest());\n+        if (loanApplicationTerms.isInterestToBeAppropriatedEquallyWhenGreaterThanEMIEnabled() && !result.interest().isZero()\n+                && !interestForThisInstallment.isZero()) {\n+            loanApplicationTerms.setInterestTobeApproppriated(result.interest());\n+        } else {\n+            interestForThisInstallment = interestForThisInstallment.plus(result.interest());\n+        }\n+\n+        if (loanApplicationTerms.getFixedEmiAmount() != null\n+                && loanApplicationTerms.isInterestToBeAppropriatedEquallyWhenGreaterThanEMIEnabled() && interestForThisInstallment\n+                        .isGreaterThan(Money.of(interestForThisInstallment.getCurrency(), loanApplicationTerms.getFixedEmiAmount()))) {\n+            LocalDate actualPeriodEndDate = this.scheduledDateGenerator.generateNextRepaymentDate(interestStartDate, loanApplicationTerms,\n+                    false);\n+            // AdjustedDateDetailsDTO adjustedDateDetailsDTO = this.scheduledDateGenerator\n+            // .adjustRepaymentDate(actualPeriodEndDate, loanApplicationTerms,\n+            // loanApplicationTerms.getHolidayDetailDTO());\n+\n+            PrincipalInterest tempInterest = loanApplicationTerms.calculateTotalInterestForPeriod(calculator,\n+                    interestCalculationGraceOnRepaymentPeriodFraction, periodNumber, mc, cumulatingInterestDueToGrace,\n+                    balanceForInterestCalculation, interestStartDate, actualPeriodEndDate);\n+\n+            loanApplicationTerms.setInterestTobeApproppriated(interestForThisInstallment.minus(tempInterest.interest()));\n+            interestForThisInstallment = tempInterest.interest();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzODUwMzYyOnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/domain/LoanScheduleModelRepaymentPeriod.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMToxMToxNlrOHAd08g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwNjowMjowMFrOHC1j8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI1MDczOA==", "bodyText": "Looks like a different bug got squashed here. What effects could this bug have been producing? Shall we create a different ticket to track this?", "url": "https://github.com/apache/fineract/pull/1220#discussion_r470250738", "createdAt": "2020-08-13T21:11:16Z", "author": {"login": "avikganguly01"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/domain/LoanScheduleModelRepaymentPeriod.java", "diffHunk": "@@ -154,7 +154,7 @@ public boolean isRecalculatedInterestComponent() {\n     @Override\n     public void addInterestAmount(Money interestDue) {\n         this.interestDue = this.interestDue.plus(interestDue);\n-        this.totalDue = this.totalDue.plus(principalDue);\n+        this.totalDue = this.totalDue.plus(interestDue);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU4OTgwNA==", "bodyText": "yes, found this while testing the new feature.", "url": "https://github.com/apache/fineract/pull/1220#discussion_r470589804", "createdAt": "2020-08-14T12:19:54Z", "author": {"login": "fynmanoj"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/domain/LoanScheduleModelRepaymentPeriod.java", "diffHunk": "@@ -154,7 +154,7 @@ public boolean isRecalculatedInterestComponent() {\n     @Override\n     public void addInterestAmount(Money interestDue) {\n         this.interestDue = this.interestDue.plus(interestDue);\n-        this.totalDue = this.totalDue.plus(principalDue);\n+        this.totalDue = this.totalDue.plus(interestDue);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI1MDczOA=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjczNjc1Mw==", "bodyText": "In the add Interest method principle was added to the total due instead of the interest. which is wrong, as the added interest must reflect in the total due.", "url": "https://github.com/apache/fineract/pull/1220#discussion_r472736753", "createdAt": "2020-08-19T06:02:00Z", "author": {"login": "fynmanoj"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/loanschedule/domain/LoanScheduleModelRepaymentPeriod.java", "diffHunk": "@@ -154,7 +154,7 @@ public boolean isRecalculatedInterestComponent() {\n     @Override\n     public void addInterestAmount(Money interestDue) {\n         this.interestDue = this.interestDue.plus(interestDue);\n-        this.totalDue = this.totalDue.plus(principalDue);\n+        this.totalDue = this.totalDue.plus(interestDue);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI1MDczOA=="}, "originalCommit": null, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1860, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}