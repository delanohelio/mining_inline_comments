{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNjg3NDU1", "number": 1019, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwODo0OToxM1rOEHSOow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwODo1MzoyNFrOEHSPUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDc0MTQ3OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientStatusChecker.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwODo0OToxM1rOGmljlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTo1NDo0NFrOGniAHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzExNDM5MQ==", "bodyText": "This is weird / un-usual... I think the typical solution for this is to make the constructor private, and/or (?) declare the class to be final so that there can be no subclasses.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected ClientStatusChecker() {\n          \n          \n            \n                    // prevents calls from subclass(if any)\n          \n          \n            \n                    throw new UnsupportedOperationException();\n          \n          \n            \n                }\n          \n          \n            \n                private ClientStatusChecker() {\n          \n          \n            \n                }", "url": "https://github.com/apache/fineract/pull/1019#discussion_r443114391", "createdAt": "2020-06-20T08:49:13Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientStatusChecker.java", "diffHunk": "@@ -25,6 +25,12 @@\n import org.slf4j.LoggerFactory;\n \n public class ClientStatusChecker {\n+\n+    protected ClientStatusChecker() {\n+        // prevents calls from subclass(if any)\n+        throw new UnsupportedOperationException();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEwNDczMg==", "bodyText": "Agreed! Making the changes", "url": "https://github.com/apache/fineract/pull/1019#discussion_r444104732", "createdAt": "2020-06-23T09:54:44Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientStatusChecker.java", "diffHunk": "@@ -25,6 +25,12 @@\n import org.slf4j.LoggerFactory;\n \n public class ClientStatusChecker {\n+\n+    protected ClientStatusChecker() {\n+        // prevents calls from subclass(if any)\n+        throw new UnsupportedOperationException();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzExNDM5MQ=="}, "originalCommit": null, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDc0MjY5OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/bulkimport/populator/client/ClientEntityWorkbookPopulatorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwODo1MjoxNFrOGmlkPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTo1NjoxM1rOGniDnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzExNDU1Nw==", "bodyText": "Question: Is this (static invocation of static methods) something you have found a way to make your IDE do automatically? If yes, then this would even allow us to enable Error Prone's MethodCanBeStatic in FINERACT-822... but doing it manually for 301 cases (according to @percyashu) is probably not \"worth it\" (https://en.wikipedia.org/wiki/Diminishing_returns).", "url": "https://github.com/apache/fineract/pull/1019#discussion_r443114557", "createdAt": "2020-06-20T08:52:14Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/bulkimport/populator/client/ClientEntityWorkbookPopulatorTest.java", "diffHunk": "@@ -60,9 +60,8 @@ public void setup(){\n     @Test\n     public void testClientEntityWorkbookPopulate() throws IOException {\n         //in order to populate helper sheets\n-        StaffHelper staffHelper=new StaffHelper();\n         requestSpec.header(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON);\n-        Integer outcome_staff_creation =staffHelper.createStaff(requestSpec,responseSpec);\n+        Integer outcome_staff_creation =StaffHelper.createStaff(requestSpec,responseSpec);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEwNTYyOA==", "bodyText": "Nope, it is all manual clean-up. Just that my IDE(vscode) does give a suggestion for this while writing code which makes it easier to spot.\nIn this case, since I am removing the object I have \"no other option\" that making it static it throws out an error.", "url": "https://github.com/apache/fineract/pull/1019#discussion_r444105628", "createdAt": "2020-06-23T09:56:13Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/bulkimport/populator/client/ClientEntityWorkbookPopulatorTest.java", "diffHunk": "@@ -60,9 +60,8 @@ public void setup(){\n     @Test\n     public void testClientEntityWorkbookPopulate() throws IOException {\n         //in order to populate helper sheets\n-        StaffHelper staffHelper=new StaffHelper();\n         requestSpec.header(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON);\n-        Integer outcome_staff_creation =staffHelper.createStaff(requestSpec,responseSpec);\n+        Integer outcome_staff_creation =StaffHelper.createStaff(requestSpec,responseSpec);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzExNDU1Nw=="}, "originalCommit": null, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MDc0MzIyOnYy", "diffSide": "LEFT", "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/bulkimport/populator/loan/LoanWorkbookPopulatorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwODo1MzoyNFrOGmlkhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwOTo1NjoyN1rOGniEKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzExNDYyOQ==", "bodyText": "this is actually a very nice clean up - as it makes absolutely no sense to pass requestSpec, responseSpec twice", "url": "https://github.com/apache/fineract/pull/1019#discussion_r443114629", "createdAt": "2020-06-20T08:53:24Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/bulkimport/populator/loan/LoanWorkbookPopulatorTest.java", "diffHunk": "@@ -64,18 +64,15 @@ public void testLoanWorkbookPopulate() throws IOException {\n         Assert.assertNotNull(\"Could not create office\" ,outcome_office_creation);\n \n         //in order to populate helper sheets\n-        ClientHelper clientHelper=new ClientHelper(requestSpec,responseSpec);\n-        Integer outcome_client_creation=clientHelper.createClient(requestSpec,responseSpec);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEwNTc2OQ==", "bodyText": "Yes!", "url": "https://github.com/apache/fineract/pull/1019#discussion_r444105769", "createdAt": "2020-06-23T09:56:27Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/bulkimport/populator/loan/LoanWorkbookPopulatorTest.java", "diffHunk": "@@ -64,18 +64,15 @@ public void testLoanWorkbookPopulate() throws IOException {\n         Assert.assertNotNull(\"Could not create office\" ,outcome_office_creation);\n \n         //in order to populate helper sheets\n-        ClientHelper clientHelper=new ClientHelper(requestSpec,responseSpec);\n-        Integer outcome_client_creation=clientHelper.createClient(requestSpec,responseSpec);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzExNDYyOQ=="}, "originalCommit": null, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1943, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}