{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjI1NjEz", "number": 683, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxODo0ODowNFrODXY_yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxODo0ODowNFrODXY_yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1ODUzMzg0OnYy", "diffSide": "LEFT", "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanApplicationWritePlatformServiceJpaRepositoryImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxODo0ODowNFrOFcqnjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QwMDo0MTo1OVrOFcr9cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYwMjcwMA==", "bodyText": "@angelboxes I don't know much about this code, but it looks like someone thought that it would be useful to also check the cause... your FINERACT-824 indicates that this can lead to NPEs, so instead of just completely removing the getCause() related check, do you think it may be a good idea to check it like this (for both):\n} else if (realCause.getMessage().contains(\"loan_externalid_UNIQUE\") || (realCause.getCause() != null && realCause.getCause().getMessage().contains(\"loan_externalid_UNIQUE\"))) {\n\nJust a thought, as this would perhaps seem more prudent in case that extra check for the cause was there for a good reason. If you are totally confident that this cause is never set and always null, then this is also OK for me, but I thought it would be worth to clarify?", "url": "https://github.com/apache/fineract/pull/683#discussion_r365602700", "createdAt": "2020-01-12T18:48:04Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanApplicationWritePlatformServiceJpaRepositoryImpl.java", "diffHunk": "@@ -1036,12 +1036,11 @@ else if(existingLoanApplication.getGroup() != null){\n      */\n     private void handleDataIntegrityIssues(final JsonCommand command, final Throwable realCause, final Exception dve) {\n     \t\n-        if (realCause.getMessage().contains(\"loan_account_no_UNIQUE\") || realCause.getCause().getMessage().contains(\"loan_account_no_UNIQUE\")) {\n-\n+        if (realCause.getMessage().contains(\"loan_account_no_UNIQUE\")) {\n             final String accountNo = command.stringValueOfParameterNamed(\"accountNo\");\n             throw new PlatformDataIntegrityException(\"error.msg.loan.duplicate.accountNo\", \"Loan with accountNo `\" + accountNo\n                     + \"` already exists\", \"accountNo\", accountNo);\n-        } else if (realCause.getMessage().contains(\"loan_externalid_UNIQUE\") || realCause.getCause().getMessage().contains(\"loan_externalid_UNIQUE\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYyNDY5MQ==", "bodyText": "Yeah, actually that was my first approach to this issue however I saw that this is not the only place where unique values exceptions are thrown but this is the only place where such validation is done. and thought that it was one of those changes that worked when it was added but a different one made it useless and that maybe it wasn't needed,. Don't worry I will change it as you propose.", "url": "https://github.com/apache/fineract/pull/683#discussion_r365624691", "createdAt": "2020-01-13T00:41:59Z", "author": {"login": "angelboxes"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanApplicationWritePlatformServiceJpaRepositoryImpl.java", "diffHunk": "@@ -1036,12 +1036,11 @@ else if(existingLoanApplication.getGroup() != null){\n      */\n     private void handleDataIntegrityIssues(final JsonCommand command, final Throwable realCause, final Exception dve) {\n     \t\n-        if (realCause.getMessage().contains(\"loan_account_no_UNIQUE\") || realCause.getCause().getMessage().contains(\"loan_account_no_UNIQUE\")) {\n-\n+        if (realCause.getMessage().contains(\"loan_account_no_UNIQUE\")) {\n             final String accountNo = command.stringValueOfParameterNamed(\"accountNo\");\n             throw new PlatformDataIntegrityException(\"error.msg.loan.duplicate.accountNo\", \"Loan with accountNo `\" + accountNo\n                     + \"` already exists\", \"accountNo\", accountNo);\n-        } else if (realCause.getMessage().contains(\"loan_externalid_UNIQUE\") || realCause.getCause().getMessage().contains(\"loan_externalid_UNIQUE\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYwMjcwMA=="}, "originalCommit": null, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1740, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}