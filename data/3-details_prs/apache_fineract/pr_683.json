{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjI1NjEz", "number": 683, "title": "FINERACT-824: NullPointerException is thrown when submitting a loan account application with an existing externalId", "bodyText": "Removed the second validation since realCause.getCause() is null if it is equal to realCause\nDescription\nWhen I tried to create a new loan account with an already used external Id, a NullPointerException was thrown with no description of why the loan account creation failed. I removed a validation that returned a null value, this kind of validation was only used with integrity issues on loan accounts and added for some OpenJPA Integration Changes.\nhttps://issues.apache.org/jira/browse/FINERACT-824\nChecklist\nPlease make sure these boxes are checked before submitting your pull request - thanks!\n\n\n Commit message starts with the issue number from https://issues.apache.org/jira/projects/FINERACT/. Ex: FINERACT-646 Pockets API.\n\n\n Coding conventions at https://cwiki.apache.org/confluence/display/FINERACT/Coding+Conventions have been followed.\n\n\n API documentation at https://github.com/apache/fineract/blob/develop/api-docs/apiLive.htm has been updated with details of any API changes.\n\n\n Integration tests have been created/updated for verifying the changes made.\n\n\n All Integrations tests are passing with the new commits.\n\n\n Submission is not a \"code dump\".  (Large changes can be made \"in repository\" via a branch.  Ask on the list.)\n\n\nOur guidelines for code reviews is at https://cwiki.apache.org/confluence/display/FINERACT/Code+Review+Guide", "createdAt": "2020-01-10T21:17:12Z", "url": "https://github.com/apache/fineract/pull/683", "merged": true, "mergeCommit": {"oid": "efb0a558c88cf850830550a34c46fb4cf84aac60"}, "closed": true, "closedAt": "2020-01-14T07:28:44Z", "author": {"login": "angelboxes"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5sVoqAFqTM0MTU5MjA5NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6ATGeAFqTM0MjAzMzA0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTkyMDk1", "url": "https://github.com/apache/fineract/pull/683#pullrequestreview-341592095", "createdAt": "2020-01-12T18:48:04Z", "commit": {"oid": "380544da6d20d2bb56197ad475db9a2f8fc6e4cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxODo0ODowNFrOFcqnjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMlQxODo0ODowNFrOFcqnjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTYwMjcwMA==", "bodyText": "@angelboxes I don't know much about this code, but it looks like someone thought that it would be useful to also check the cause... your FINERACT-824 indicates that this can lead to NPEs, so instead of just completely removing the getCause() related check, do you think it may be a good idea to check it like this (for both):\n} else if (realCause.getMessage().contains(\"loan_externalid_UNIQUE\") || (realCause.getCause() != null && realCause.getCause().getMessage().contains(\"loan_externalid_UNIQUE\"))) {\n\nJust a thought, as this would perhaps seem more prudent in case that extra check for the cause was there for a good reason. If you are totally confident that this cause is never set and always null, then this is also OK for me, but I thought it would be worth to clarify?", "url": "https://github.com/apache/fineract/pull/683#discussion_r365602700", "createdAt": "2020-01-12T18:48:04Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanApplicationWritePlatformServiceJpaRepositoryImpl.java", "diffHunk": "@@ -1036,12 +1036,11 @@ else if(existingLoanApplication.getGroup() != null){\n      */\n     private void handleDataIntegrityIssues(final JsonCommand command, final Throwable realCause, final Exception dve) {\n     \t\n-        if (realCause.getMessage().contains(\"loan_account_no_UNIQUE\") || realCause.getCause().getMessage().contains(\"loan_account_no_UNIQUE\")) {\n-\n+        if (realCause.getMessage().contains(\"loan_account_no_UNIQUE\")) {\n             final String accountNo = command.stringValueOfParameterNamed(\"accountNo\");\n             throw new PlatformDataIntegrityException(\"error.msg.loan.duplicate.accountNo\", \"Loan with accountNo `\" + accountNo\n                     + \"` already exists\", \"accountNo\", accountNo);\n-        } else if (realCause.getMessage().contains(\"loan_externalid_UNIQUE\") || realCause.getCause().getMessage().contains(\"loan_externalid_UNIQUE\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "380544da6d20d2bb56197ad475db9a2f8fc6e4cb"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d6cf9c1121b2cdd1019eb628d88e0637aa4d7f5", "author": {"user": {"login": "angelboxes", "name": "Angel Cajas"}}, "url": "https://github.com/apache/fineract/commit/5d6cf9c1121b2cdd1019eb628d88e0637aa4d7f5", "committedDate": "2020-01-13T17:57:52Z", "message": "FINERACT-824:\nRemoved the second validation since realCause.getCause() is null if it is equal to realCause"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "380544da6d20d2bb56197ad475db9a2f8fc6e4cb", "author": {"user": {"login": "angelboxes", "name": "Angel Cajas"}}, "url": "https://github.com/apache/fineract/commit/380544da6d20d2bb56197ad475db9a2f8fc6e4cb", "committedDate": "2020-01-10T20:49:17Z", "message": "FINERACT-824:\nRemoved the second validation since realCause.getCause() is null if it is equal to realCause"}, "afterCommit": {"oid": "5d6cf9c1121b2cdd1019eb628d88e0637aa4d7f5", "author": {"user": {"login": "angelboxes", "name": "Angel Cajas"}}, "url": "https://github.com/apache/fineract/commit/5d6cf9c1121b2cdd1019eb628d88e0637aa4d7f5", "committedDate": "2020-01-13T17:57:52Z", "message": "FINERACT-824:\nRemoved the second validation since realCause.getCause() is null if it is equal to realCause"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMDMzMDQ3", "url": "https://github.com/apache/fineract/pull/683#pullrequestreview-342033047", "createdAt": "2020-01-13T18:03:24Z", "commit": {"oid": "5d6cf9c1121b2cdd1019eb628d88e0637aa4d7f5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1986, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}