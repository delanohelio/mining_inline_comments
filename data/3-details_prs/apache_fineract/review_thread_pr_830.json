{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MTM5Mzc0", "number": 830, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxODoyODozMlrOD648oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozMzowM1rOEAljZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzMDc3MDI0OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/notification/domain/Notification.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxODoyODozMlrOGS9KqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQxODo0ODozNVrOGS9Tbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUyOTcwNA==", "bodyText": "@vorburger concerning org.apache.fineract.notification.domain.Notification.setActor(Long) error prone picked this up locally", "url": "https://github.com/apache/fineract/pull/830#discussion_r422529704", "createdAt": "2020-05-09T18:28:32Z", "author": {"login": "percyashu"}, "path": "fineract-provider/src/main/java/org/apache/fineract/notification/domain/Notification.java", "diffHunk": "@@ -90,7 +90,7 @@ public Long getActor() {\n     }\n \n     public void setActor(Long actor) {\n-        this.actorId = actorId;\n+        this.actorId = actor;\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUzMTk1MA==", "bodyText": "@percyashu nice! FYI I've also fixed this in #858 ...", "url": "https://github.com/apache/fineract/pull/830#discussion_r422531950", "createdAt": "2020-05-09T18:48:35Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/notification/domain/Notification.java", "diffHunk": "@@ -90,7 +90,7 @@ public Long getActor() {\n     }\n \n     public void setActor(Long actor) {\n-        this.actorId = actorId;\n+        this.actorId = actor;\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjUyOTcwNA=="}, "originalCommit": null, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MzAxMTE0OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/variableinstallments/VariableInstallmentsFlatHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQyMDo0NjoyN1rOGWTWNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNjoyMDo0NVrOGZqNqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAzODgzNw==", "bodyText": "@vorburger not sure the of the right format that was supposed to be on methods I added @SuppressWarnings(\"MisuedWeekYear\") please see https://errorprone.info/bugpattern/MisusedWeekYear", "url": "https://github.com/apache/fineract/pull/830#discussion_r426038837", "createdAt": "2020-05-15T20:46:27Z", "author": {"login": "percyashu"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/variableinstallments/VariableInstallmentsFlatHelper.java", "diffHunk": "@@ -201,6 +201,7 @@ private static ArrayList createModifyMap(String date) {\n         return toReturn;\n     }\n \n+    @SuppressWarnings(\"MisusedWeekYear\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1OTIxMA==", "bodyText": "this seems suspicious - are you sure suppressing this is correct, and not actually hiding a real bug? (I haven't had a closer look, I'm hoping you'll do that...) If you are completely sure, then each @SuppressWarnings should have an inline comment with a reasonably detailed explanation why that is the right thing to do.", "url": "https://github.com/apache/fineract/pull/830#discussion_r429559210", "createdAt": "2020-05-23T16:20:45Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/variableinstallments/VariableInstallmentsFlatHelper.java", "diffHunk": "@@ -201,6 +201,7 @@ private static ArrayList createModifyMap(String date) {\n         return toReturn;\n     }\n \n+    @SuppressWarnings(\"MisusedWeekYear\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjAzODgzNw=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1Njc1OTgzOnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/StaffTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMjoxODozM1rOGW0jAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMzowMDo1M1rOGX1ieQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU4Mjc4NQ==", "bodyText": "@vorburger or @awasum this looks like a test any idea why they are missing @test.", "url": "https://github.com/apache/fineract/pull/830#discussion_r426582785", "createdAt": "2020-05-18T12:18:33Z", "author": {"login": "percyashu"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/StaffTest.java", "diffHunk": "@@ -183,13 +185,15 @@ public void testStaffUpdate() {\n         Assert.assertEquals(mobileNo, changes.get(\"mobileNo\"));\n     }\n \n+    @SuppressWarnings(\"JUnit4TestNotRun\")\n     public void testStaffUpdateLongExternalIdError() {\n         final HashMap<String, Object> map = new HashMap<>();\n         map.put(\"externalId\", Utils.randomStringGenerator(\"EXT\", 98));\n \n         StaffHelper.updateStaff(requestSpec, responseSpecForValidationError, 1, map);\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzY0NzYwOQ==", "bodyText": "@percyashu I suppose someone just \"forgot\" to add @Test ?\nWhat I suggest you do is do add @Test for all these cases (instead of @SuppressWarnings(\"JUnit4TestNotRun\")), and try running them. If they fail, slap an @Ignore on those that do fail - and then subsequently but in a later separate PR see if you can fix them (or someone else can do that, as part of future work to review all ignored tests). Sounds like a plan?", "url": "https://github.com/apache/fineract/pull/830#discussion_r427647609", "createdAt": "2020-05-19T23:00:53Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/StaffTest.java", "diffHunk": "@@ -183,13 +185,15 @@ public void testStaffUpdate() {\n         Assert.assertEquals(mobileNo, changes.get(\"mobileNo\"));\n     }\n \n+    @SuppressWarnings(\"JUnit4TestNotRun\")\n     public void testStaffUpdateLongExternalIdError() {\n         final HashMap<String, Object> map = new HashMap<>();\n         map.put(\"externalId\", Utils.randomStringGenerator(\"EXT\", 98));\n \n         StaffHelper.updateStaff(requestSpec, responseSpecForValidationError, 1, map);\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjU4Mjc4NQ=="}, "originalCommit": null, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTM1NTQ5OnYy", "diffSide": "RIGHT", "path": "fineract-provider/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNjoxNDozMVrOGZqL7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNzo1NzowM1rOGZqmrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1ODc2NQ==", "bodyText": "wait waaaaat... why are we regressing on FINERACT-959 to progress with FINERACT-822? That doesn't seem right, to me - and worth a discussion...  \ud83d\ude08 I suspect that you may be doing this because Error Prone gives warnings? IMHO we should either fix them all, as part of this - or change EP's config to shut up about particular ones which are obviously wrong (similar to what I have done in another project, have you seen the link in FINERACT-822)...  How many are there?", "url": "https://github.com/apache/fineract/pull/830#discussion_r429558765", "createdAt": "2020-05-23T16:14:31Z", "author": {"login": "vorburger"}, "path": "fineract-provider/build.gradle", "diffHunk": "@@ -276,7 +278,7 @@ configurations {\n }\n \n tasks.withType(JavaCompile) {\n-    options.compilerArgs += [\"-Xlint:unchecked\",\"-Xlint:cast\",\"-Werror\"] // TODO FINERACT-959 (gradually) enable -Xlint:all (see \"javac -help -X\")\n+    options.compilerArgs += [\"-Xlint:unchecked\",\"-Xlint:cast\"] // TODO FINERACT-959 (gradually) enable -Xlint:all (see \"javac -help -X\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NTYxMw==", "bodyText": "@vorburger thanks for the link I will configure error prone to help with the 1000 warnings.", "url": "https://github.com/apache/fineract/pull/830#discussion_r429565613", "createdAt": "2020-05-23T17:57:03Z", "author": {"login": "percyashu"}, "path": "fineract-provider/build.gradle", "diffHunk": "@@ -276,7 +278,7 @@ configurations {\n }\n \n tasks.withType(JavaCompile) {\n-    options.compilerArgs += [\"-Xlint:unchecked\",\"-Xlint:cast\",\"-Werror\"] // TODO FINERACT-959 (gradually) enable -Xlint:all (see \"javac -help -X\")\n+    options.compilerArgs += [\"-Xlint:unchecked\",\"-Xlint:cast\"] // TODO FINERACT-959 (gradually) enable -Xlint:all (see \"javac -help -X\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1ODc2NQ=="}, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTM1NjYxOnYy", "diffSide": "RIGHT", "path": "fineract-provider/build.gradle", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNjoxNjoxMFrOGZqMeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNjoxNjoxMFrOGZqMeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1ODkwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                errorprone \"com.google.errorprone:error_prone_core:2.3.3\"\n          \n          \n            \n                errorprone \"com.google.errorprone:error_prone_core:2.3.4\"", "url": "https://github.com/apache/fineract/pull/830#discussion_r429558904", "createdAt": "2020-05-23T16:16:10Z", "author": {"login": "vorburger"}, "path": "fineract-provider/build.gradle", "diffHunk": "@@ -435,6 +437,9 @@ dependencies {\n   tomcat \"org.apache.tomcat:tomcat:9.0.34@zip\"\n }\n \n+dependencies { \n+    errorprone \"com.google.errorprone:error_prone_core:2.3.3\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTM1NzU0OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/StaffTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNjoxNzo1NFrOGZqM8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNzo1NzowN1rOGZqmtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1OTAyNg==", "bodyText": "this seems a bit suspicious to me - so this test if failing, but you are just making the response expect a validation error? Shouldn't we... fix this test, if we re-enable it, instead of cheating to get the test to pass? Re-enabling these tests could be done in a separate PR before this one, if you like (but don't have to).", "url": "https://github.com/apache/fineract/pull/830#discussion_r429559026", "createdAt": "2020-05-23T16:17:54Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/StaffTest.java", "diffHunk": "@@ -99,9 +101,10 @@ public void testStaffCreateMaxNameLength() {\n         map.put(\"firstname\", Utils.randomNameGenerator(\"michael_\", 42));\n         map.put(\"lastname\", Utils.randomNameGenerator(\"Doe_\", 46));\n \n-        StaffHelper.createStaffWithJson(requestSpec, responseSpec, new Gson().toJson(map));\n+        StaffHelper.createStaffWithJson(requestSpec, responseSpecForValidationError, new Gson().toJson(map));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NTYyMg==", "bodyText": "Ok will do those in seperate Pr.", "url": "https://github.com/apache/fineract/pull/830#discussion_r429565622", "createdAt": "2020-05-23T17:57:07Z", "author": {"login": "percyashu"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/StaffTest.java", "diffHunk": "@@ -99,9 +101,10 @@ public void testStaffCreateMaxNameLength() {\n         map.put(\"firstname\", Utils.randomNameGenerator(\"michael_\", 42));\n         map.put(\"lastname\", Utils.randomNameGenerator(\"Doe_\", 46));\n \n-        StaffHelper.createStaffWithJson(requestSpec, responseSpec, new Gson().toJson(map));\n+        StaffHelper.createStaffWithJson(requestSpec, responseSpecForValidationError, new Gson().toJson(map));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1OTAyNg=="}, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTM1Nzg0OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/StaffTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNjoxODozMVrOGZqNGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNzo1NzoxNlrOGZqmvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1OTA2Ng==", "bodyText": "can you raise a JIRA for the failure and then link it here using @Ignore // TODO FINERACT-123 syntax?", "url": "https://github.com/apache/fineract/pull/830#discussion_r429559066", "createdAt": "2020-05-23T16:18:31Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/StaffTest.java", "diffHunk": "@@ -183,13 +186,17 @@ public void testStaffUpdate() {\n         Assert.assertEquals(mobileNo, changes.get(\"mobileNo\"));\n     }\n \n+    @Test\n+    @Ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NTYzMA==", "bodyText": "OK will do", "url": "https://github.com/apache/fineract/pull/830#discussion_r429565630", "createdAt": "2020-05-23T17:57:16Z", "author": {"login": "percyashu"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/StaffTest.java", "diffHunk": "@@ -183,13 +186,17 @@ public void testStaffUpdate() {\n         Assert.assertEquals(mobileNo, changes.get(\"mobileNo\"));\n     }\n \n+    @Test\n+    @Ignore", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1OTA2Ng=="}, "originalCommit": null, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTM1OTczOnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/interoperation/util/MathUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNjoyMjo1MVrOGZqOMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNzo1OToxN1rOGZqnRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1OTM0NA==", "bodyText": "whoa whoa - slow down, the point is to FIX all problems - not to introduce a tool that tells us about problems, and then just make the tool shut up! I have not looked closely, but just a quick glance at https://errorprone.info/bugpattern/NullTernary makes it seem to me like this is trying to telly us about a real bug? As above, if it's definitely a false positive, then put a detailed analysis explanation in an inline comment...", "url": "https://github.com/apache/fineract/pull/830#discussion_r429559344", "createdAt": "2020-05-23T16:22:51Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/interoperation/util/MathUtil.java", "diffHunk": "@@ -87,6 +87,7 @@ public static Long abs(Long value) {\n \n     /** @return calculates minimum of the two values considering null values\n      * @param notNull if true then null parameter is omitted, otherwise returns null */\n+    @SuppressWarnings(\"NullTernary\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU2NTc2NQ==", "bodyText": "Will look more into those remaining two remaining errors and provide if it is necessary to use the @SuppressWarnings.", "url": "https://github.com/apache/fineract/pull/830#discussion_r429565765", "createdAt": "2020-05-23T17:59:17Z", "author": {"login": "percyashu"}, "path": "fineract-provider/src/main/java/org/apache/fineract/interoperation/util/MathUtil.java", "diffHunk": "@@ -87,6 +87,7 @@ public static Long abs(Long value) {\n \n     /** @return calculates minimum of the two values considering null values\n      * @param notNull if true then null parameter is omitted, otherwise returns null */\n+    @SuppressWarnings(\"NullTernary\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1OTM0NA=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mzg2MjQyOnYy", "diffSide": "RIGHT", "path": "fineract-provider/build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNjozMzo0OFrOGa7OpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozMToyNFrOGb9WCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg4NjU2NQ==", "bodyText": "I see that you have added these so you can enable them and fix gradually rather than fixing the errors at once? Make sure you look at the issues rules you are disabling so that we dont miss catching some critical problems in the system.", "url": "https://github.com/apache/fineract/pull/830#discussion_r430886565", "createdAt": "2020-05-27T06:33:48Z", "author": {"login": "awasum"}, "path": "fineract-provider/build.gradle", "diffHunk": "@@ -278,6 +280,86 @@ configurations {\n tasks.withType(JavaCompile) {\n     options.compilerArgs += [\"-Xlint:unchecked\",\"-Xlint:cast\",\"-Werror\"] // TODO FINERACT-959 (gradually) enable -Xlint:all (see \"javac -help -X\")\n     options.deprecation = true\n+    options.errorprone {\n+        disableWarningsInGeneratedCode = true\n+        //Todo Remove necessary checks from this list\n+        disable(\"UnusedVariable\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU2NTMzMA==", "bodyText": "Yep these are default warning checks and will be removed from this list in separate PR", "url": "https://github.com/apache/fineract/pull/830#discussion_r431565330", "createdAt": "2020-05-28T03:45:49Z", "author": {"login": "percyashu"}, "path": "fineract-provider/build.gradle", "diffHunk": "@@ -278,6 +280,86 @@ configurations {\n tasks.withType(JavaCompile) {\n     options.compilerArgs += [\"-Xlint:unchecked\",\"-Xlint:cast\",\"-Werror\"] // TODO FINERACT-959 (gradually) enable -Xlint:all (see \"javac -help -X\")\n     options.deprecation = true\n+    options.errorprone {\n+        disableWarningsInGeneratedCode = true\n+        //Todo Remove necessary checks from this list\n+        disable(\"UnusedVariable\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg4NjU2NQ=="}, "originalCommit": null, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk2OTgwMA==", "bodyText": "Lets not forget to enable some of the important rules you have disable here in future PRs.", "url": "https://github.com/apache/fineract/pull/830#discussion_r431969800", "createdAt": "2020-05-28T16:31:24Z", "author": {"login": "awasum"}, "path": "fineract-provider/build.gradle", "diffHunk": "@@ -278,6 +280,86 @@ configurations {\n tasks.withType(JavaCompile) {\n     options.compilerArgs += [\"-Xlint:unchecked\",\"-Xlint:cast\",\"-Werror\"] // TODO FINERACT-959 (gradually) enable -Xlint:all (see \"javac -help -X\")\n     options.deprecation = true\n+    options.errorprone {\n+        disableWarningsInGeneratedCode = true\n+        //Todo Remove necessary checks from this list\n+        disable(\"UnusedVariable\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDg4NjU2NQ=="}, "originalCommit": null, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5MDUwNzI2OnYy", "diffSide": "RIGHT", "path": "fineract-provider/build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozMzowM1rOGb9aQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNjozMzo1MlrOGb9cHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3MDg4Mg==", "bodyText": "if I understand you correctly, you want to chop this up into multiple PRs by enabling/uncommenting one or a few rules at a time and fixing them?", "url": "https://github.com/apache/fineract/pull/830#discussion_r431970882", "createdAt": "2020-05-28T16:33:03Z", "author": {"login": "awasum"}, "path": "fineract-provider/build.gradle", "diffHunk": "@@ -278,6 +280,88 @@ configurations {\n tasks.withType(JavaCompile) {\n     options.compilerArgs += [\"-Xlint:unchecked\",\"-Xlint:cast\",\"-Werror\"] // TODO FINERACT-959 (gradually) enable -Xlint:all (see \"javac -help -X\")\n     options.deprecation = true\n+    options.errorprone {\n+        disableWarningsInGeneratedCode = true\n+        //Todo Remove necessary checks from this list\n+        disable(\"UnusedVariable\",\n+                \"VariableNameSameAsType\",\n+                \"InconsistentCapitalization\",\n+                \"UnnecessaryParentheses\",\n+                \"ClassCanBeStatic\",\n+                \"MissingCasesInEnumSwitch\",\n+                \"CompareToZero\",\n+                \"OperatorPrecedence\",\n+                \"MixedMutabilityReturnType\",\n+                \"SameNameButDifferent\",\n+                \"EqualsGetClass\",\n+                \"ReferenceEquality\",\n+                \"StringSplitter\",\n+                \"MissingOverride\",\n+                \"BigDecimalEquals\",\n+                \"ImmutableEnumChecker\",\n+                \"EqualsUnsafeCast\",\n+                \"AssertEqualsArgumentOrderChecker\",\n+                \"BoxedPrimitiveEquality\",\n+                \"BadImport\",\n+                \"UnusedMethod\",\n+                \"ModifiedButNotUsed\",\n+                \"ArgumentSelectionDefectChecker\",\n+                \"JodaPlusMinusLong\",\n+                \"TypeParameterUnusedInFormals\",\n+                \"DoubleBraceInitialization\",\n+                \"UnusedNestedClass\",\n+                \"UndefinedEquals\",\n+                \"JdkObsolete\",\n+                \"OperatorPrecedence\",\n+                \"NarrowingCompoundAssignment\"\n+        )\n+        //TODO gradually enable these checks\n+        error(  \"DefaultCharset\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e32cbe77e42038c878d3aac220c65b2b5816d812"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3MTM1Nw==", "bodyText": "Yeah", "url": "https://github.com/apache/fineract/pull/830#discussion_r431971357", "createdAt": "2020-05-28T16:33:52Z", "author": {"login": "percyashu"}, "path": "fineract-provider/build.gradle", "diffHunk": "@@ -278,6 +280,88 @@ configurations {\n tasks.withType(JavaCompile) {\n     options.compilerArgs += [\"-Xlint:unchecked\",\"-Xlint:cast\",\"-Werror\"] // TODO FINERACT-959 (gradually) enable -Xlint:all (see \"javac -help -X\")\n     options.deprecation = true\n+    options.errorprone {\n+        disableWarningsInGeneratedCode = true\n+        //Todo Remove necessary checks from this list\n+        disable(\"UnusedVariable\",\n+                \"VariableNameSameAsType\",\n+                \"InconsistentCapitalization\",\n+                \"UnnecessaryParentheses\",\n+                \"ClassCanBeStatic\",\n+                \"MissingCasesInEnumSwitch\",\n+                \"CompareToZero\",\n+                \"OperatorPrecedence\",\n+                \"MixedMutabilityReturnType\",\n+                \"SameNameButDifferent\",\n+                \"EqualsGetClass\",\n+                \"ReferenceEquality\",\n+                \"StringSplitter\",\n+                \"MissingOverride\",\n+                \"BigDecimalEquals\",\n+                \"ImmutableEnumChecker\",\n+                \"EqualsUnsafeCast\",\n+                \"AssertEqualsArgumentOrderChecker\",\n+                \"BoxedPrimitiveEquality\",\n+                \"BadImport\",\n+                \"UnusedMethod\",\n+                \"ModifiedButNotUsed\",\n+                \"ArgumentSelectionDefectChecker\",\n+                \"JodaPlusMinusLong\",\n+                \"TypeParameterUnusedInFormals\",\n+                \"DoubleBraceInitialization\",\n+                \"UnusedNestedClass\",\n+                \"UndefinedEquals\",\n+                \"JdkObsolete\",\n+                \"OperatorPrecedence\",\n+                \"NarrowingCompoundAssignment\"\n+        )\n+        //TODO gradually enable these checks\n+        error(  \"DefaultCharset\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3MDg4Mg=="}, "originalCommit": {"oid": "e32cbe77e42038c878d3aac220c65b2b5816d812"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2018, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}