{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNjg3NDU1", "number": 1019, "title": "FINERACT-821 Added and Enforced HideUtilityClassConstructor checkstyle", "bodyText": "FINERACT-821\nHideUtilityClassConstructor  ->\nUtility Classes like Helperand Constants are forced to have all methods static, and constructor non-public and non-default\nIf we keep constructor protected we cannot create an object of that class but support inheritance if required.  The other option was to use a private constructor(which won't support inheritance). I have decided to go with protected constructor any contradicting views?\nThe problems->\n\nSome Utility classes don't have all the methods static and also use \"this\" keyword inside methods.\nSolution-> remove this keywords and make the method static.\nThe constructor is used to set values in a utility class\nSolution -> Make another method to set values and make constructor protected.\nSome methods return \"this\"\nSolution-> Very suspicious on this, why is a utility class returning its instance? Still looking into how to fix this.\n\nThere are about 150-200 changes so can anyone please verify this approach? Do you see any unintended side effects?\n@vorburger @awasum @ptuomola @xurror @percyashu", "createdAt": "2020-06-09T10:16:47Z", "url": "https://github.com/apache/fineract/pull/1019", "merged": true, "mergeCommit": {"oid": "8a3c1903a4c28bbd5fa13d94813a0e1a0ddb419e"}, "closed": true, "closedAt": "2020-08-20T04:33:13Z", "author": {"login": "thesmallstar"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABctD2yfAFqTQzNDQxNDEwNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAokIPAFqTQ3MTIwMzA2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NDE0MTA0", "url": "https://github.com/apache/fineract/pull/1019#pullrequestreview-434414104", "createdAt": "2020-06-20T08:49:13Z", "commit": {"oid": "4f65d50e50ebe9a635d4a6e5b055c3a9e3e786dc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwODo0OToxM1rOGmljlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMFQwODo1MzoyNFrOGmlkhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzExNDM5MQ==", "bodyText": "This is weird / un-usual... I think the typical solution for this is to make the constructor private, and/or (?) declare the class to be final so that there can be no subclasses.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected ClientStatusChecker() {\n          \n          \n            \n                    // prevents calls from subclass(if any)\n          \n          \n            \n                    throw new UnsupportedOperationException();\n          \n          \n            \n                }\n          \n          \n            \n                private ClientStatusChecker() {\n          \n          \n            \n                }", "url": "https://github.com/apache/fineract/pull/1019#discussion_r443114391", "createdAt": "2020-06-20T08:49:13Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/ClientStatusChecker.java", "diffHunk": "@@ -25,6 +25,12 @@\n import org.slf4j.LoggerFactory;\n \n public class ClientStatusChecker {\n+\n+    protected ClientStatusChecker() {\n+        // prevents calls from subclass(if any)\n+        throw new UnsupportedOperationException();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f65d50e50ebe9a635d4a6e5b055c3a9e3e786dc"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzExNDU1Nw==", "bodyText": "Question: Is this (static invocation of static methods) something you have found a way to make your IDE do automatically? If yes, then this would even allow us to enable Error Prone's MethodCanBeStatic in FINERACT-822... but doing it manually for 301 cases (according to @percyashu) is probably not \"worth it\" (https://en.wikipedia.org/wiki/Diminishing_returns).", "url": "https://github.com/apache/fineract/pull/1019#discussion_r443114557", "createdAt": "2020-06-20T08:52:14Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/bulkimport/populator/client/ClientEntityWorkbookPopulatorTest.java", "diffHunk": "@@ -60,9 +60,8 @@ public void setup(){\n     @Test\n     public void testClientEntityWorkbookPopulate() throws IOException {\n         //in order to populate helper sheets\n-        StaffHelper staffHelper=new StaffHelper();\n         requestSpec.header(HttpHeaders.CONTENT_TYPE, MediaType.APPLICATION_JSON);\n-        Integer outcome_staff_creation =staffHelper.createStaff(requestSpec,responseSpec);\n+        Integer outcome_staff_creation =StaffHelper.createStaff(requestSpec,responseSpec);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f65d50e50ebe9a635d4a6e5b055c3a9e3e786dc"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzExNDYyOQ==", "bodyText": "this is actually a very nice clean up - as it makes absolutely no sense to pass requestSpec, responseSpec twice", "url": "https://github.com/apache/fineract/pull/1019#discussion_r443114629", "createdAt": "2020-06-20T08:53:24Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/integrationTest/java/org/apache/fineract/integrationtests/bulkimport/populator/loan/LoanWorkbookPopulatorTest.java", "diffHunk": "@@ -64,18 +64,15 @@ public void testLoanWorkbookPopulate() throws IOException {\n         Assert.assertNotNull(\"Could not create office\" ,outcome_office_creation);\n \n         //in order to populate helper sheets\n-        ClientHelper clientHelper=new ClientHelper(requestSpec,responseSpec);\n-        Integer outcome_client_creation=clientHelper.createClient(requestSpec,responseSpec);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f65d50e50ebe9a635d4a6e5b055c3a9e3e786dc"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NTQ5MjY4", "url": "https://github.com/apache/fineract/pull/1019#pullrequestreview-459549268", "createdAt": "2020-08-01T03:35:58Z", "commit": {"oid": "4f65d50e50ebe9a635d4a6e5b055c3a9e3e786dc"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6362c3b8a9295b702d80d8dfd8fe59921b12735c", "author": {"user": {"login": "thesmallstar", "name": "Manthan Surkar"}}, "url": "https://github.com/apache/fineract/commit/6362c3b8a9295b702d80d8dfd8fe59921b12735c", "committedDate": "2020-08-09T01:18:25Z", "message": "FINERACT-821 Added and Enforced HideUtilityClassConstructor checkstyle"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f65d50e50ebe9a635d4a6e5b055c3a9e3e786dc", "author": {"user": {"login": "thesmallstar", "name": "Manthan Surkar"}}, "url": "https://github.com/apache/fineract/commit/4f65d50e50ebe9a635d4a6e5b055c3a9e3e786dc", "committedDate": "2020-06-09T10:04:08Z", "message": "[WIP] FINERACT-821 Added and Enforced HideUtilityClassConstructor checkstyle"}, "afterCommit": {"oid": "6362c3b8a9295b702d80d8dfd8fe59921b12735c", "author": {"user": {"login": "thesmallstar", "name": "Manthan Surkar"}}, "url": "https://github.com/apache/fineract/commit/6362c3b8a9295b702d80d8dfd8fe59921b12735c", "committedDate": "2020-08-09T01:18:25Z", "message": "FINERACT-821 Added and Enforced HideUtilityClassConstructor checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMjAzMDY4", "url": "https://github.com/apache/fineract/pull/1019#pullrequestreview-471203068", "createdAt": "2020-08-20T04:32:54Z", "commit": {"oid": "6362c3b8a9295b702d80d8dfd8fe59921b12735c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1884, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}