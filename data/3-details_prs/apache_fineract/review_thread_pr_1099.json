{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3NTE0Mjkw", "number": 1099, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxODoxNTozMFrOEHriAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNzo1Nzo0OFrOEH22Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDg4NzA3OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/domain/TrialBalance.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxODoxNTozMVrOGnL24w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDo0MTowOFrOGn5wDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc0MTkyMw==", "bodyText": "Just curious about this:\nHow is other.entryDate.compareTo(entryDate) == 0 ? Boolean.TRUE: Boolean.FALSE\ndIfferent from just  other.entryDate.compareTo(entryDate) == 0   (In terms of end result) of the boolean?\nIs it because .equals returns Boolean.TRUE and not primitive data-type boolean?", "url": "https://github.com/apache/fineract/pull/1099#discussion_r443741923", "createdAt": "2020-06-22T18:15:31Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/domain/TrialBalance.java", "diffHunk": "@@ -100,8 +100,9 @@ public boolean equals(Object obj) {\n         }\n         TrialBalance other = (TrialBalance) obj;\n         return Objects.equals(other.officeId, officeId) && Objects.equals(other.glAccountId, glAccountId)\n-                && Objects.equals(other.amount, amount) && Objects.equals(other.entryDate, entryDate)\n-                && Objects.equals(other.transactionDate, transactionDate) && Objects.equals(other.closingBalance, closingBalance);\n+                && Objects.equals(other.amount, amount) && other.entryDate.compareTo(entryDate) == 0 ? Boolean.TRUE\n+                        : Boolean.FALSE && other.transactionDate.compareTo(transactionDate) == 0 ? Boolean.TRUE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d4774f559a18b18722b9553fca715d3ec883a3c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzNzQ0OA==", "bodyText": "compareTo returns an int. If values to be compared are equal, the value returned is zero.", "url": "https://github.com/apache/fineract/pull/1099#discussion_r443937448", "createdAt": "2020-06-23T03:14:21Z", "author": {"login": "percyashu"}, "path": "fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/domain/TrialBalance.java", "diffHunk": "@@ -100,8 +100,9 @@ public boolean equals(Object obj) {\n         }\n         TrialBalance other = (TrialBalance) obj;\n         return Objects.equals(other.officeId, officeId) && Objects.equals(other.glAccountId, glAccountId)\n-                && Objects.equals(other.amount, amount) && Objects.equals(other.entryDate, entryDate)\n-                && Objects.equals(other.transactionDate, transactionDate) && Objects.equals(other.closingBalance, closingBalance);\n+                && Objects.equals(other.amount, amount) && other.entryDate.compareTo(entryDate) == 0 ? Boolean.TRUE\n+                        : Boolean.FALSE && other.transactionDate.compareTo(transactionDate) == 0 ? Boolean.TRUE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc0MTkyMw=="}, "originalCommit": {"oid": "8d4774f559a18b18722b9553fca715d3ec883a3c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDExNDczMw==", "bodyText": "Agreed, so if other.entryDate.compareTo(entryDate) == 0 is executed, then 0 == 0 returns true, which is boolean.\nSorry if I am confusing, I am not able to understand the need for the\n?Boolean.TRUE: Boolean.FALSE  part.", "url": "https://github.com/apache/fineract/pull/1099#discussion_r444114733", "createdAt": "2020-06-23T10:12:19Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/domain/TrialBalance.java", "diffHunk": "@@ -100,8 +100,9 @@ public boolean equals(Object obj) {\n         }\n         TrialBalance other = (TrialBalance) obj;\n         return Objects.equals(other.officeId, officeId) && Objects.equals(other.glAccountId, glAccountId)\n-                && Objects.equals(other.amount, amount) && Objects.equals(other.entryDate, entryDate)\n-                && Objects.equals(other.transactionDate, transactionDate) && Objects.equals(other.closingBalance, closingBalance);\n+                && Objects.equals(other.amount, amount) && other.entryDate.compareTo(entryDate) == 0 ? Boolean.TRUE\n+                        : Boolean.FALSE && other.transactionDate.compareTo(transactionDate) == 0 ? Boolean.TRUE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc0MTkyMw=="}, "originalCommit": {"oid": "8d4774f559a18b18722b9553fca715d3ec883a3c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE1MjIzMw==", "bodyText": "This is just like a Java If statement where other.entryDate.compareTo(entryDate) == 0 is the condition, the first value Boolean.TRUE is return if the condition is true and the second value Boolean.FALSE if it is false. Could have used an If statement but this is shorter. See this", "url": "https://github.com/apache/fineract/pull/1099#discussion_r444152233", "createdAt": "2020-06-23T11:27:33Z", "author": {"login": "percyashu"}, "path": "fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/domain/TrialBalance.java", "diffHunk": "@@ -100,8 +100,9 @@ public boolean equals(Object obj) {\n         }\n         TrialBalance other = (TrialBalance) obj;\n         return Objects.equals(other.officeId, officeId) && Objects.equals(other.glAccountId, glAccountId)\n-                && Objects.equals(other.amount, amount) && Objects.equals(other.entryDate, entryDate)\n-                && Objects.equals(other.transactionDate, transactionDate) && Objects.equals(other.closingBalance, closingBalance);\n+                && Objects.equals(other.amount, amount) && other.entryDate.compareTo(entryDate) == 0 ? Boolean.TRUE\n+                        : Boolean.FALSE && other.transactionDate.compareTo(transactionDate) == 0 ? Boolean.TRUE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc0MTkyMw=="}, "originalCommit": {"oid": "8d4774f559a18b18722b9553fca715d3ec883a3c"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ5MzgzOQ==", "bodyText": "@percyashu what @thesmallstar is pointing out here, and I agree with, is that ? Boolean.TRUE: Boolean.FALSE is not required - as he said, just other.entryDate.compareTo(entryDate) == 0 yields exactly the same value. The difference between primitive VS non-primitive is hidden by \"auto boxing\". Do you want to raise a follow-up PR to clean this up, or ignore this?", "url": "https://github.com/apache/fineract/pull/1099#discussion_r444493839", "createdAt": "2020-06-23T20:41:08Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/domain/TrialBalance.java", "diffHunk": "@@ -100,8 +100,9 @@ public boolean equals(Object obj) {\n         }\n         TrialBalance other = (TrialBalance) obj;\n         return Objects.equals(other.officeId, officeId) && Objects.equals(other.glAccountId, glAccountId)\n-                && Objects.equals(other.amount, amount) && Objects.equals(other.entryDate, entryDate)\n-                && Objects.equals(other.transactionDate, transactionDate) && Objects.equals(other.closingBalance, closingBalance);\n+                && Objects.equals(other.amount, amount) && other.entryDate.compareTo(entryDate) == 0 ? Boolean.TRUE\n+                        : Boolean.FALSE && other.transactionDate.compareTo(transactionDate) == 0 ? Boolean.TRUE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc0MTkyMw=="}, "originalCommit": {"oid": "8d4774f559a18b18722b9553fca715d3ec883a3c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDkwMjI2OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccount.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxODoyMDowM1rOGnMAHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwMzoxNDoyM1rOGnXytQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc0NDI4Ng==", "bodyText": "very very minor suggestion, can we not keep it just !=0 (this makes it little confusing IMO).", "url": "https://github.com/apache/fineract/pull/1099#discussion_r443744286", "createdAt": "2020-06-22T18:20:03Z", "author": {"login": "thesmallstar"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccount.java", "diffHunk": "@@ -224,7 +224,7 @@ public boolean setSubmittedDate(final Date submittedDate) {\n \n     public boolean setApprovedDate(final Date approvedDate) {\n         boolean toReturn = false;\n-        if (!this.approvedDate.equals(approvedDate)) {\n+        if (this.approvedDate.compareTo(approvedDate) == 0 ? Boolean.FALSE : Boolean.TRUE) {\n             this.approvedDate = approvedDate;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d4774f559a18b18722b9553fca715d3ec883a3c"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzkzNzQ2MQ==", "bodyText": "Yeah, but I think this way is clearer.", "url": "https://github.com/apache/fineract/pull/1099#discussion_r443937461", "createdAt": "2020-06-23T03:14:23Z", "author": {"login": "percyashu"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/shareaccounts/domain/ShareAccount.java", "diffHunk": "@@ -224,7 +224,7 @@ public boolean setSubmittedDate(final Date submittedDate) {\n \n     public boolean setApprovedDate(final Date approvedDate) {\n         boolean toReturn = false;\n-        if (!this.approvedDate.equals(approvedDate)) {\n+        if (this.approvedDate.compareTo(approvedDate) == 0 ? Boolean.FALSE : Boolean.TRUE) {\n             this.approvedDate = approvedDate;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzc0NDI4Ng=="}, "originalCommit": {"oid": "8d4774f559a18b18722b9553fca715d3ec883a3c"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2Njc0MTAzOnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/domain/TrialBalance.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNzo1Nzo0OFrOGndsRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMToxMzo1OVrOGnkg1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAzNDExOA==", "bodyText": "@percyashu I don't understand this... given that entryDate and transactionDate are (both) java.util.Date, why is Objects.equals() not OK? That does not match what https://errorprone.info/bugpattern/UndefinedEquals seems to be about... what am I missing?", "url": "https://github.com/apache/fineract/pull/1099#discussion_r444034118", "createdAt": "2020-06-23T07:57:48Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/domain/TrialBalance.java", "diffHunk": "@@ -100,8 +100,9 @@ public boolean equals(Object obj) {\n         }\n         TrialBalance other = (TrialBalance) obj;\n         return Objects.equals(other.officeId, officeId) && Objects.equals(other.glAccountId, glAccountId)\n-                && Objects.equals(other.amount, amount) && Objects.equals(other.entryDate, entryDate)\n-                && Objects.equals(other.transactionDate, transactionDate) && Objects.equals(other.closingBalance, closingBalance);\n+                && Objects.equals(other.amount, amount) && other.entryDate.compareTo(entryDate) == 0 ? Boolean.TRUE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d4774f559a18b18722b9553fca715d3ec883a3c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDE0NTg3Ng==", "bodyText": "Error Prone kept complaining java.util.Date equals() doesn't seem to work as expected. This is because from this two Date objects are equal if and only if the getTime method returns the same long value for both.", "url": "https://github.com/apache/fineract/pull/1099#discussion_r444145876", "createdAt": "2020-06-23T11:13:59Z", "author": {"login": "percyashu"}, "path": "fineract-provider/src/main/java/org/apache/fineract/accounting/glaccount/domain/TrialBalance.java", "diffHunk": "@@ -100,8 +100,9 @@ public boolean equals(Object obj) {\n         }\n         TrialBalance other = (TrialBalance) obj;\n         return Objects.equals(other.officeId, officeId) && Objects.equals(other.glAccountId, glAccountId)\n-                && Objects.equals(other.amount, amount) && Objects.equals(other.entryDate, entryDate)\n-                && Objects.equals(other.transactionDate, transactionDate) && Objects.equals(other.closingBalance, closingBalance);\n+                && Objects.equals(other.amount, amount) && other.entryDate.compareTo(entryDate) == 0 ? Boolean.TRUE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDAzNDExOA=="}, "originalCommit": {"oid": "8d4774f559a18b18722b9553fca715d3ec883a3c"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1881, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}