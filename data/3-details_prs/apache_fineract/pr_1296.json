{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0Njk2MTE4", "number": 1296, "title": "FINERACT-1135: Fix SQL error at loan repayment template", "bodyText": "Description\nhttps://issues.apache.org/jira/browse/FINERACT-1135\nChecklist\nPlease make sure these boxes are checked before submitting your pull request - thanks!\n\n\n Commit message starts with the issue number from https://issues.apache.org/jira/projects/FINERACT/. Ex: FINERACT-646 Pockets API.\n\n\n Coding conventions at https://cwiki.apache.org/confluence/display/FINERACT/Coding+Conventions have been followed.\n\n\n API documentation at fineract-provider/src/main/resources/static/api-docs/apiLive.htm has been updated with details of any API changes.\n\n\n Integration tests have been created/updated for verifying the changes made.\n\n\n All Integrations tests are passing with the new commits.\n\n\n Submission is not a \"code dump\".  (Large changes can be made \"in repository\" via a branch.  Ask on the list.)\n\n\nOur guidelines for code reviews is at https://cwiki.apache.org/confluence/display/FINERACT/Code+Review+Guide", "createdAt": "2020-08-27T13:20:20Z", "url": "https://github.com/apache/fineract/pull/1296", "merged": true, "mergeCommit": {"oid": "2e720e361a37be0e4142b055fe3679b51f5914c1"}, "closed": true, "closedAt": "2020-09-01T13:12:16Z", "author": {"login": "francisguchie"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDAQn_AH2gAyNDc0Njk2MTE4OjYyMDJiZTFjNDQyNTQ4ZDM2YTU0ZDZkYzVkMjRmMDA0NDA4MmFiZTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEnKrzAFqTQ3OTcyNDg5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6202be1c442548d36a54d6dc5d24f0044082abe5", "author": {"user": {"login": "francisguchie", "name": "Guchie"}}, "url": "https://github.com/apache/fineract/commit/6202be1c442548d36a54d6dc5d24f0044082abe5", "committedDate": "2020-08-27T13:17:10Z", "message": "Fineract-1135 error at loan repayment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc3MDYwNjQz", "url": "https://github.com/apache/fineract/pull/1296#pullrequestreview-477060643", "createdAt": "2020-08-27T20:33:56Z", "commit": {"oid": "6202be1c442548d36a54d6dc5d24f0044082abe5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MDg5ODQ1", "url": "https://github.com/apache/fineract/pull/1296#pullrequestreview-478089845", "createdAt": "2020-08-29T02:10:08Z", "commit": {"oid": "6202be1c442548d36a54d6dc5d24f0044082abe5"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMjoxMDowOFrOHJYIQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwMjozMzowNFrOHJYQBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5NDU2MQ==", "bodyText": "If we are removing one parameter from the query, should we not also pass one less parameter when we execute the query?", "url": "https://github.com/apache/fineract/pull/1296#discussion_r479594561", "createdAt": "2020-08-29T02:10:08Z", "author": {"login": "ptuomola"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java", "diffHunk": "@@ -431,7 +431,7 @@ public LoanTransactionData retrieveLoanTransactionTemplate(final Long loanId) {\n         this.context.authenticatedUser();\n \n         RepaymentTransactionTemplateMapper mapper = new RepaymentTransactionTemplateMapper();\n-        String sql = \"select \" + mapper.schema() + \" where l.id =?\";\n+        String sql = \"select \" + mapper.schema();\n         LoanTransactionData loanTransactionData = this.jdbcTemplate.queryForObject(sql, mapper, LoanTransactionType.REPAYMENT.getValue(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6202be1c442548d36a54d6dc5d24f0044082abe5"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTU5NjU1MQ==", "bodyText": "Is there a reason for removing all these spaces from beginning of the strings? The reason for them, as far as I can see, is avoiding a situation where someone adds before a string that doesn't have a space at the end, and causes the next string to therefore generate broken SQL. I don't think they are harmful and can save us from some accidental illegal SQL...", "url": "https://github.com/apache/fineract/pull/1296#discussion_r479596551", "createdAt": "2020-08-29T02:33:04Z", "author": {"login": "ptuomola"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/loanaccount/service/LoanReadPlatformServiceImpl.java", "diffHunk": "@@ -2176,35 +2176,36 @@ public CurrencyData mapRow(ResultSet rs, @SuppressWarnings(\"unused\") int rowNum)\n         public String schema() {\n             StringBuilder sqlBuilder = new StringBuilder();\n \n-            sqlBuilder.append(\"if(max(tr.transaction_date)>ls.dueDate,max(tr.transaction_date),ls.dueDate) as transactionDate,\");\n+            sqlBuilder.append(\"if(max(tr.transaction_date)>ls.dueDate,max(tr.transaction_date),ls.dueDate) as transactionDate, \");\n             sqlBuilder.append(\n-                    \"ls.principal_amount - IFNULL(ls.principal_writtenoff_derived,0) - IFNULL(ls.principal_completed_derived,0) as principalDue,\");\n+                    \"ls.principal_amount - IFNULL(ls.principal_writtenoff_derived,0) - IFNULL(ls.principal_completed_derived,0) as principalDue, \");\n             sqlBuilder.append(\n-                    \"ls.interest_amount - IFNULL(ls.interest_completed_derived,0) - IFNULL(ls.interest_waived_derived,0) - IFNULL(ls.interest_writtenoff_derived,0) as interestDue,\");\n+                    \"ls.interest_amount - IFNULL(ls.interest_completed_derived,0) - IFNULL(ls.interest_waived_derived,0) - IFNULL(ls.interest_writtenoff_derived,0) as interestDue, \");\n             sqlBuilder.append(\n-                    \"ls.fee_charges_amount - IFNULL(ls.fee_charges_completed_derived,0) - IFNULL(ls.fee_charges_writtenoff_derived,0) - IFNULL(ls.fee_charges_waived_derived,0) as feeDue,\");\n+                    \"ls.fee_charges_amount - IFNULL(ls.fee_charges_completed_derived,0) - IFNULL(ls.fee_charges_writtenoff_derived,0) - IFNULL(ls.fee_charges_waived_derived,0) as feeDue, \");\n             sqlBuilder.append(\n-                    \"ls.penalty_charges_amount - IFNULL(ls.penalty_charges_completed_derived,0) - IFNULL(ls.penalty_charges_writtenoff_derived,0) - IFNULL(ls.penalty_charges_waived_derived,0) as penaltyDue,\");\n+                    \"ls.penalty_charges_amount - IFNULL(ls.penalty_charges_completed_derived,0) - IFNULL(ls.penalty_charges_writtenoff_derived,0) - IFNULL(ls.penalty_charges_waived_derived,0) as penaltyDue, \");\n             sqlBuilder.append(\n-                    \" l.currency_code as currencyCode, l.currency_digits as currencyDigits, l.currency_multiplesof as inMultiplesOf, rc.`name` as currencyName, \");\n-            sqlBuilder.append(\" rc.display_symbol as currencyDisplaySymbol, rc.internationalized_name_code as currencyNameCode \");\n-            sqlBuilder.append(\" FROM m_loan l\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6202be1c442548d36a54d6dc5d24f0044082abe5"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc5NzI0ODk1", "url": "https://github.com/apache/fineract/pull/1296#pullrequestreview-479724895", "createdAt": "2020-09-01T13:10:54Z", "commit": {"oid": "6202be1c442548d36a54d6dc5d24f0044082abe5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1731, "cost": 1, "resetAt": "2021-10-29T17:30:11Z"}}}