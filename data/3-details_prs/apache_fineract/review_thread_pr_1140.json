{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNjg1OTQ0", "number": 1140, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo0OTowM1rOELOaQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo0OTowM1rOELOaQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjA1ODg4OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/SavingsAccountTransactionRepository.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMTo0OTowM1rOGst3ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNDowNzozN1rOGsxfuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0MjA3NA==", "bodyText": "Is there a way to make things like this to fail the build? like a tool that will throw an error saying \"you have not passed the parameter a and b\". Does this mean, this query was not working before now?", "url": "https://github.com/apache/fineract/pull/1140#discussion_r449542074", "createdAt": "2020-07-03T11:49:03Z", "author": {"login": "awasum"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/SavingsAccountTransactionRepository.java", "diffHunk": "@@ -21,11 +21,13 @@\n import org.springframework.data.jpa.repository.JpaRepository;\n import org.springframework.data.jpa.repository.JpaSpecificationExecutor;\n import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n \n public interface SavingsAccountTransactionRepository\n         extends JpaRepository<SavingsAccountTransaction, Long>, JpaSpecificationExecutor<SavingsAccountTransaction> {\n \n     @Query(\"select sat from SavingsAccountTransaction sat where sat.id = :transactionId and sat.savingsAccount.id = :savingsId\")\n-    SavingsAccountTransaction findOneByIdAndSavingsAccountId(Long transactionId, Long savingsId);\n+    SavingsAccountTransaction findOneByIdAndSavingsAccountId(@Param(\"transactionId\") Long transactionId,\n+            @Param(\"savingsId\") Long savingsId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0367df97969684c6dc05ae287db8b529c67e71ee"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYwMTQ2NA==", "bodyText": "@awasum @ptuomola I think it should work without this - but there is a subtlety: Spring can only find out the name of parameters if code is compiled with -parameters; NB e.g. To store formal parameter names in a particular .class file, and thus enable the Reflection API to retrieve formal parameter names, compile the source file with the -parameters option to the javac compiler. on https://docs.oracle.com/javase/tutorial/reflect/member/methodparameterreflection.html. To be able to run in Eclipse, you need to enable https://stackoverflow.com/a/37391164/421602. In an ideal world, we could figure out how to add this to Gradle to have Buildship do that.. or we could keep a .settings/ in Git.", "url": "https://github.com/apache/fineract/pull/1140#discussion_r449601464", "createdAt": "2020-07-03T14:07:37Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/portfolio/savings/domain/SavingsAccountTransactionRepository.java", "diffHunk": "@@ -21,11 +21,13 @@\n import org.springframework.data.jpa.repository.JpaRepository;\n import org.springframework.data.jpa.repository.JpaSpecificationExecutor;\n import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n \n public interface SavingsAccountTransactionRepository\n         extends JpaRepository<SavingsAccountTransaction, Long>, JpaSpecificationExecutor<SavingsAccountTransaction> {\n \n     @Query(\"select sat from SavingsAccountTransaction sat where sat.id = :transactionId and sat.savingsAccount.id = :savingsId\")\n-    SavingsAccountTransaction findOneByIdAndSavingsAccountId(Long transactionId, Long savingsId);\n+    SavingsAccountTransaction findOneByIdAndSavingsAccountId(@Param(\"transactionId\") Long transactionId,\n+            @Param(\"savingsId\") Long savingsId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU0MjA3NA=="}, "originalCommit": {"oid": "0367df97969684c6dc05ae287db8b529c67e71ee"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1903, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}