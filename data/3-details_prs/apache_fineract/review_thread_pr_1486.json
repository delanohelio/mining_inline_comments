{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNjM0ODgx", "number": 1486, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMjo0NDo1NVrOE0o8MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODo0NTo0NFrOE0tMBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNjMyMTc3OnYy", "diffSide": "RIGHT", "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/hooks/service/HookWritePlatformServiceJpaRepositoryImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwMjo0NDo1NVrOHsenWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODoxMjo1MFrOHsjtSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQwMDk4NA==", "bodyText": "just wondering if this part is taken care ?  \"  // Swallow error if it's because of method not supported or\n// if url throws 404 - required for integration test,\n// url generated on 1st POST request\"", "url": "https://github.com/apache/fineract/pull/1486#discussion_r516400984", "createdAt": "2020-11-03T02:44:55Z", "author": {"login": "fynmanoj"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/hooks/service/HookWritePlatformServiceJpaRepositoryImpl.java", "diffHunk": "@@ -282,15 +282,10 @@ private void validateHookRules(final HookTemplate template, final Set<HookConfig\n             if (conf.getFieldName().equals(payloadURLName)) {\n                 try {\n                     final WebHookService service = processorHelper.createWebHookService(fieldValue);\n-                    service.sendEmptyRequest();\n-                } catch (RetrofitError re) {\n-                    // Swallow error if it's because of method not supported or\n-                    // if url throws 404 - required for integration test,\n-                    // url generated on 1st POST request\n-                    if (re.getResponse() == null) {\n-                        String errorMessage = \"url.invalid\";\n-                        baseDataValidator.reset().failWithCodeNoParameterAddedToErrorCode(errorMessage);\n-                    }\n+                    service.sendEmptyRequest().execute();\n+                } catch (IOException re) {\n+                    String errorMessage = \"url.invalid\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d5b1ebe7165815c3d9418ac7b72473a453c763f"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQ4NDQyNQ==", "bodyText": "I was also wondering, but the integration tests all still pass now, so looks like this actually wasn't needed.", "url": "https://github.com/apache/fineract/pull/1486#discussion_r516484425", "createdAt": "2020-11-03T08:12:50Z", "author": {"login": "vorburger"}, "path": "fineract-provider/src/main/java/org/apache/fineract/infrastructure/hooks/service/HookWritePlatformServiceJpaRepositoryImpl.java", "diffHunk": "@@ -282,15 +282,10 @@ private void validateHookRules(final HookTemplate template, final Set<HookConfig\n             if (conf.getFieldName().equals(payloadURLName)) {\n                 try {\n                     final WebHookService service = processorHelper.createWebHookService(fieldValue);\n-                    service.sendEmptyRequest();\n-                } catch (RetrofitError re) {\n-                    // Swallow error if it's because of method not supported or\n-                    // if url throws 404 - required for integration test,\n-                    // url generated on 1st POST request\n-                    if (re.getResponse() == null) {\n-                        String errorMessage = \"url.invalid\";\n-                        baseDataValidator.reset().failWithCodeNoParameterAddedToErrorCode(errorMessage);\n-                    }\n+                    service.sendEmptyRequest().execute();\n+                } catch (IOException re) {\n+                    String errorMessage = \"url.invalid\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjQwMDk4NA=="}, "originalCommit": {"oid": "6d5b1ebe7165815c3d9418ac7b72473a453c763f"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzNzAxNzY3OnYy", "diffSide": "RIGHT", "path": "integration-tests/src/test/java/org/apache/fineract/integrationtests/HookIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODo0NTo0NFrOHskvZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwODo0NTo0NFrOHskvZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjUwMTM1MQ==", "bodyText": "Weird host this Heroku URL is failing in Postman with trailing / but working in Retrofit with trailing /.", "url": "https://github.com/apache/fineract/pull/1486#discussion_r516501351", "createdAt": "2020-11-03T08:45:44Z", "author": {"login": "avikganguly01"}, "path": "integration-tests/src/test/java/org/apache/fineract/integrationtests/HookIntegrationTest.java", "diffHunk": "@@ -98,12 +93,11 @@ public void shouldSendOfficeCreationNotification() {\n         } finally {\n             this.hookHelper.deleteHook(hookId.longValue());\n         }\n-\n     }\n \n     @Test\n     public void createUpdateAndDeleteHook() {\n-        final String payloadURL = \"http://echo-webhook.herokuapp.com:80/Z7RXoCBdLSFMDrpn?\";\n+        final String payloadURL = \"http://echo-webhook.herokuapp.com:80/Z7RXoCBdLSFMDrpn/\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d5b1ebe7165815c3d9418ac7b72473a453c763f"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1778, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}