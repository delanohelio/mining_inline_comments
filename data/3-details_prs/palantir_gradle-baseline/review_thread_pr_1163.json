{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjIzMDgz", "number": 1163, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMToxNDowNlrODXRc4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMToxNDowNlrODXRc4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NzI5NzYxOnYy", "diffSide": "RIGHT", "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/LoggerEnclosingClass.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMToxNDowNlrOFcgPPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMToyNDo1NlrOFcgc0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzMjYzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final Matcher<ExpressionTree> getLoggerMatcher = MethodMatchers.staticMethod()\n          \n          \n            \n                private static final Matcher<VariableTree> LOGGER = Matchers.allOf(\n          \n          \n            \n                        Matchers.isField(),\n          \n          \n            \n                        Matchers.isSameType(Logger.class),\n          \n          \n            \n                        Matchers.variableInitializer(MethodMatchers.staticMethod()\n          \n          \n            \n                                .onClass(LoggerFactory.class.getName())\n          \n          \n            \n                                .named(\"getLogger\")\n          \n          \n            \n                                .withParameters(Class.class.getName())));", "url": "https://github.com/palantir/gradle-baseline/pull/1163#discussion_r365432636", "createdAt": "2020-01-10T21:14:06Z", "author": {"login": "ferozco"}, "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/LoggerEnclosingClass.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.fixes.SuggestedFix;\n+import com.google.errorprone.fixes.SuggestedFixes;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.matchers.Matcher;\n+import com.google.errorprone.matchers.Matchers;\n+import com.google.errorprone.matchers.method.MethodMatchers;\n+import com.google.errorprone.util.ASTHelpers;\n+import com.sun.source.tree.ExpressionTree;\n+import com.sun.source.tree.MemberSelectTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+import com.sun.source.tree.VariableTree;\n+import com.sun.tools.javac.code.Symbol;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"LoggerEnclosingClass\",\n+        link = \"https://github.com/palantir/gradle-baseline#baseline-error-prone-checks\",\n+        linkType = BugPattern.LinkType.CUSTOM,\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = BugPattern.SeverityLevel.WARNING,\n+        summary = \"Loggers created using getLogger(Class<?>) must reference their enclosing class.\")\n+public final class LoggerEnclosingClass extends BugChecker implements BugChecker.VariableTreeMatcher {\n+\n+    private static final Matcher<ExpressionTree> getLoggerMatcher = MethodMatchers.staticMethod()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2acdfcc27933f590969830de1260c6941e3df44c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzNjExMg==", "bodyText": "Snazzy, I hadn't seen `Matchers.variableInitializer!", "url": "https://github.com/palantir/gradle-baseline/pull/1163#discussion_r365436112", "createdAt": "2020-01-10T21:24:56Z", "author": {"login": "carterkozak"}, "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/LoggerEnclosingClass.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.fixes.SuggestedFix;\n+import com.google.errorprone.fixes.SuggestedFixes;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.matchers.Matcher;\n+import com.google.errorprone.matchers.Matchers;\n+import com.google.errorprone.matchers.method.MethodMatchers;\n+import com.google.errorprone.util.ASTHelpers;\n+import com.sun.source.tree.ExpressionTree;\n+import com.sun.source.tree.MemberSelectTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+import com.sun.source.tree.VariableTree;\n+import com.sun.tools.javac.code.Symbol;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"LoggerEnclosingClass\",\n+        link = \"https://github.com/palantir/gradle-baseline#baseline-error-prone-checks\",\n+        linkType = BugPattern.LinkType.CUSTOM,\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = BugPattern.SeverityLevel.WARNING,\n+        summary = \"Loggers created using getLogger(Class<?>) must reference their enclosing class.\")\n+public final class LoggerEnclosingClass extends BugChecker implements BugChecker.VariableTreeMatcher {\n+\n+    private static final Matcher<ExpressionTree> getLoggerMatcher = MethodMatchers.staticMethod()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQzMjYzNg=="}, "originalCommit": {"oid": "2acdfcc27933f590969830de1260c6941e3df44c"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2111, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}