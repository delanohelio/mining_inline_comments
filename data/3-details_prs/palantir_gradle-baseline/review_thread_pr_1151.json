{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNTg0NTY0", "number": 1151, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxODowOToxOVrODWoDVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxODoyNDo0MFrODWoSyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDUxNDc5OnYy", "diffSide": "RIGHT", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxODowOToxOVrOFbfV-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNDo0NToyM1rOFb4McA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM2OTQwMQ==", "bodyText": "nice", "url": "https://github.com/palantir/gradle-baseline/pull/1151#discussion_r364369401", "createdAt": "2020-01-08T18:09:19Z", "author": {"login": "ferozco"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -311,4 +329,31 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             module.dependencies.addAll(projectRefs)\n         }\n     }\n+\n+    /**\n+     * Configures some defaults on the save-actions plugin, but only if it hasn't been configured before.\n+     */\n+    private static void configureSaveActions(Node rootNode) {\n+        GroovyXmlUtils.matchOrCreateChild(rootNode, 'component', [name: 'SaveActionSettings'], [:]) {\n+            // Configure defaults if this plugin is configured for the first time only\n+            appendNode('option', [name: 'actions']).appendNode('set').with {\n+                appendNode('option', [value: 'activate'])\n+                appendNode('option', [value: 'noActionIfCompileErrors'])\n+                appendNode('option', [value: 'organizeImports'])\n+                appendNode('option', [value: 'reformat'])\n+            }\n+            appendNode('option', [name: 'configurationPath', value: ''])\n+            appendNode('inclusions').appendNode('set').with {\n+                appendNode('option', [value: 'src/.*\\\\.java'])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "905a038734b12beee23fb4d57fff291737250b67"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY5NDAzNA==", "bodyText": "Yep, so it's a bit tricky as if people already use this plugin (and have configured it for a project) then we do nothing.. but in the majority of cases, this is probably what people want.\nAn unsolved problem I will add to the description is how to deal with changing flags / how do we know what's safe to update because we set it up that way vs the user set it up that way.", "url": "https://github.com/palantir/gradle-baseline/pull/1151#discussion_r364694034", "createdAt": "2020-01-09T11:39:30Z", "author": {"login": "dansanduleac"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -311,4 +329,31 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             module.dependencies.addAll(projectRefs)\n         }\n     }\n+\n+    /**\n+     * Configures some defaults on the save-actions plugin, but only if it hasn't been configured before.\n+     */\n+    private static void configureSaveActions(Node rootNode) {\n+        GroovyXmlUtils.matchOrCreateChild(rootNode, 'component', [name: 'SaveActionSettings'], [:]) {\n+            // Configure defaults if this plugin is configured for the first time only\n+            appendNode('option', [name: 'actions']).appendNode('set').with {\n+                appendNode('option', [value: 'activate'])\n+                appendNode('option', [value: 'noActionIfCompileErrors'])\n+                appendNode('option', [value: 'organizeImports'])\n+                appendNode('option', [value: 'reformat'])\n+            }\n+            appendNode('option', [name: 'configurationPath', value: ''])\n+            appendNode('inclusions').appendNode('set').with {\n+                appendNode('option', [value: 'src/.*\\\\.java'])", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM2OTQwMQ=="}, "originalCommit": {"oid": "905a038734b12beee23fb4d57fff291737250b67"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc3NjU2MA==", "bodyText": "I'd have to look into what other options the plugin exposes, but we may want to narrow what users can configure to a very narrow set of flags", "url": "https://github.com/palantir/gradle-baseline/pull/1151#discussion_r364776560", "createdAt": "2020-01-09T14:45:23Z", "author": {"login": "ferozco"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -311,4 +329,31 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             module.dependencies.addAll(projectRefs)\n         }\n     }\n+\n+    /**\n+     * Configures some defaults on the save-actions plugin, but only if it hasn't been configured before.\n+     */\n+    private static void configureSaveActions(Node rootNode) {\n+        GroovyXmlUtils.matchOrCreateChild(rootNode, 'component', [name: 'SaveActionSettings'], [:]) {\n+            // Configure defaults if this plugin is configured for the first time only\n+            appendNode('option', [name: 'actions']).appendNode('set').with {\n+                appendNode('option', [value: 'activate'])\n+                appendNode('option', [value: 'noActionIfCompileErrors'])\n+                appendNode('option', [value: 'organizeImports'])\n+                appendNode('option', [value: 'reformat'])\n+            }\n+            appendNode('option', [name: 'configurationPath', value: ''])\n+            appendNode('inclusions').appendNode('set').with {\n+                appendNode('option', [value: 'src/.*\\\\.java'])", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM2OTQwMQ=="}, "originalCommit": {"oid": "905a038734b12beee23fb4d57fff291737250b67"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDUzNjE5OnYy", "diffSide": "RIGHT", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/GroovyXmlUtils.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxODoxNzo0NFrOFbfjOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNDozNjowM1rOFb33ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM3Mjc5NQ==", "bodyText": "spacing on this is weird", "url": "https://github.com/palantir/gradle-baseline/pull/1151#discussion_r364372795", "createdAt": "2020-01-08T18:17:44Z", "author": {"login": "ferozco"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/GroovyXmlUtils.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.plugins\n+\n+final class GroovyXmlUtils {\n+    static Node matchOrCreateChild(Node base, String name, Map attributes = [:], Map defaults = [:],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "905a038734b12beee23fb4d57fff291737250b67"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc3MTE5NQ==", "bodyText": "fixed", "url": "https://github.com/palantir/gradle-baseline/pull/1151#discussion_r364771195", "createdAt": "2020-01-09T14:36:03Z", "author": {"login": "dansanduleac"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/GroovyXmlUtils.groovy", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.plugins\n+\n+final class GroovyXmlUtils {\n+    static Node matchOrCreateChild(Node base, String name, Map attributes = [:], Map defaults = [:],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM3Mjc5NQ=="}, "originalCommit": {"oid": "905a038734b12beee23fb4d57fff291737250b67"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDU0MjIxOnYy", "diffSide": "RIGHT", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxODoyMDoxNlrOFbfnaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMTo0MTo0OFrOFbzN2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM3Mzg2NQ==", "bodyText": "we already have the ideaRootModel above", "url": "https://github.com/palantir/gradle-baseline/pull/1151#discussion_r364373865", "createdAt": "2020-01-08T18:20:16Z", "author": {"login": "ferozco"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -68,6 +68,21 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             moveProjectReferencesToEnd(ideaModuleModel)\n         }\n \n+        // Suggest and configure the \"save actions\" plugin if Palantir Java Format is turned on.\n+        if (project == project.rootProject) {\n+            IdeaModel ideaRootModel = project.extensions.findByType(IdeaModel)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "905a038734b12beee23fb4d57fff291737250b67"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDY5NTAwMQ==", "bodyText": "yeah but it's needlessly trapped inside afterEvaluate. Basically I think the code above is beyond gross (it reapplies the same steps to the root model from every single subproject) and so will not touch it, with an eye to refactor it in another PR.", "url": "https://github.com/palantir/gradle-baseline/pull/1151#discussion_r364695001", "createdAt": "2020-01-09T11:41:48Z", "author": {"login": "dansanduleac"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -68,6 +68,21 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             moveProjectReferencesToEnd(ideaModuleModel)\n         }\n \n+        // Suggest and configure the \"save actions\" plugin if Palantir Java Format is turned on.\n+        if (project == project.rootProject) {\n+            IdeaModel ideaRootModel = project.extensions.findByType(IdeaModel)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM3Mzg2NQ=="}, "originalCommit": {"oid": "905a038734b12beee23fb4d57fff291737250b67"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDU0OTk2OnYy", "diffSide": "RIGHT", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxODoyMzowM1rOFbfsJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNDoyNjoyMVrOFb3isg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM3NTA3Ng==", "bodyText": "it seems like nearly the whole plugin should be a no-op if not applied to the root. perhaps we can restructure this so its a little more clear", "url": "https://github.com/palantir/gradle-baseline/pull/1151#discussion_r364375076", "createdAt": "2020-01-08T18:23:03Z", "author": {"login": "ferozco"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -68,6 +68,21 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             moveProjectReferencesToEnd(ideaModuleModel)\n         }\n \n+        // Suggest and configure the \"save actions\" plugin if Palantir Java Format is turned on.\n+        if (project == project.rootProject) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "905a038734b12beee23fb4d57fff291737250b67"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc2NTg3NA==", "bodyText": "restructured", "url": "https://github.com/palantir/gradle-baseline/pull/1151#discussion_r364765874", "createdAt": "2020-01-09T14:26:21Z", "author": {"login": "dansanduleac"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -68,6 +68,21 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             moveProjectReferencesToEnd(ideaModuleModel)\n         }\n \n+        // Suggest and configure the \"save actions\" plugin if Palantir Java Format is turned on.\n+        if (project == project.rootProject) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM3NTA3Ng=="}, "originalCommit": {"oid": "905a038734b12beee23fb4d57fff291737250b67"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDU1MjIxOnYy", "diffSide": "RIGHT", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxODoyMzo1MVrOFbftbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNDowODozMFrOFb2-Jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM3NTQwNQ==", "bodyText": "is this to allow users to override the configuration?", "url": "https://github.com/palantir/gradle-baseline/pull/1151#discussion_r364375405", "createdAt": "2020-01-08T18:23:51Z", "author": {"login": "ferozco"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -311,4 +329,31 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             module.dependencies.addAll(projectRefs)\n         }\n     }\n+\n+    /**\n+     * Configures some defaults on the save-actions plugin, but only if it hasn't been configured before.\n+     */\n+    private static void configureSaveActions(Node rootNode) {\n+        GroovyXmlUtils.matchOrCreateChild(rootNode, 'component', [name: 'SaveActionSettings'], [:]) {\n+            // Configure defaults if this plugin is configured for the first time only", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "905a038734b12beee23fb4d57fff291737250b67"}, "originalPosition": 110}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1NjUxOA==", "bodyText": "yes, or they might have configured this plugin already for this project and then we don't want to override their configuration", "url": "https://github.com/palantir/gradle-baseline/pull/1151#discussion_r364756518", "createdAt": "2020-01-09T14:08:30Z", "author": {"login": "dansanduleac"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -311,4 +329,31 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             module.dependencies.addAll(projectRefs)\n         }\n     }\n+\n+    /**\n+     * Configures some defaults on the save-actions plugin, but only if it hasn't been configured before.\n+     */\n+    private static void configureSaveActions(Node rootNode) {\n+        GroovyXmlUtils.matchOrCreateChild(rootNode, 'component', [name: 'SaveActionSettings'], [:]) {\n+            // Configure defaults if this plugin is configured for the first time only", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM3NTQwNQ=="}, "originalCommit": {"oid": "905a038734b12beee23fb4d57fff291737250b67"}, "originalPosition": 110}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDU1NDM0OnYy", "diffSide": "RIGHT", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxODoyNDo0MFrOFbfuug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNDozNTo0OFrOFb328Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM3NTczOA==", "bodyText": "might want to pull out the version so its more visible/easier to upgrade", "url": "https://github.com/palantir/gradle-baseline/pull/1151#discussion_r364375738", "createdAt": "2020-01-08T18:24:40Z", "author": {"login": "ferozco"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -311,4 +329,31 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             module.dependencies.addAll(projectRefs)\n         }\n     }\n+\n+    /**\n+     * Configures some defaults on the save-actions plugin, but only if it hasn't been configured before.\n+     */\n+    private static void configureSaveActions(Node rootNode) {\n+        GroovyXmlUtils.matchOrCreateChild(rootNode, 'component', [name: 'SaveActionSettings'], [:]) {\n+            // Configure defaults if this plugin is configured for the first time only\n+            appendNode('option', [name: 'actions']).appendNode('set').with {\n+                appendNode('option', [value: 'activate'])\n+                appendNode('option', [value: 'noActionIfCompileErrors'])\n+                appendNode('option', [value: 'organizeImports'])\n+                appendNode('option', [value: 'reformat'])\n+            }\n+            appendNode('option', [name: 'configurationPath', value: ''])\n+            appendNode('inclusions').appendNode('set').with {\n+                appendNode('option', [value: 'src/.*\\\\.java'])\n+            }\n+        }\n+    }\n+\n+    private static void configureExternalDependencies(Node rootNode) {\n+        def externalDependencies = GroovyXmlUtils.matchOrCreateChild(rootNode, 'component', [name: 'ExternalDependencies'])\n+        // I kid you not, this is the id for the save actions plugin:\n+        // https://github.com/dubreuia/intellij-plugin-save-actions/blob/v1.9.0/src/main/resources/META-INF/plugin.xml#L5\n+        // https://plugins.jetbrains.com/plugin/7642-save-actions/\n+        GroovyXmlUtils.matchOrCreateChild(externalDependencies, 'plugin', [id: 'com.dubreuia'], ['min-version': '1.9.0'])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "905a038734b12beee23fb4d57fff291737250b67"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc3MTA1Nw==", "bodyText": "done", "url": "https://github.com/palantir/gradle-baseline/pull/1151#discussion_r364771057", "createdAt": "2020-01-09T14:35:48Z", "author": {"login": "dansanduleac"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -311,4 +329,31 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             module.dependencies.addAll(projectRefs)\n         }\n     }\n+\n+    /**\n+     * Configures some defaults on the save-actions plugin, but only if it hasn't been configured before.\n+     */\n+    private static void configureSaveActions(Node rootNode) {\n+        GroovyXmlUtils.matchOrCreateChild(rootNode, 'component', [name: 'SaveActionSettings'], [:]) {\n+            // Configure defaults if this plugin is configured for the first time only\n+            appendNode('option', [name: 'actions']).appendNode('set').with {\n+                appendNode('option', [value: 'activate'])\n+                appendNode('option', [value: 'noActionIfCompileErrors'])\n+                appendNode('option', [value: 'organizeImports'])\n+                appendNode('option', [value: 'reformat'])\n+            }\n+            appendNode('option', [name: 'configurationPath', value: ''])\n+            appendNode('inclusions').appendNode('set').with {\n+                appendNode('option', [value: 'src/.*\\\\.java'])\n+            }\n+        }\n+    }\n+\n+    private static void configureExternalDependencies(Node rootNode) {\n+        def externalDependencies = GroovyXmlUtils.matchOrCreateChild(rootNode, 'component', [name: 'ExternalDependencies'])\n+        // I kid you not, this is the id for the save actions plugin:\n+        // https://github.com/dubreuia/intellij-plugin-save-actions/blob/v1.9.0/src/main/resources/META-INF/plugin.xml#L5\n+        // https://plugins.jetbrains.com/plugin/7642-save-actions/\n+        GroovyXmlUtils.matchOrCreateChild(externalDependencies, 'plugin', [id: 'com.dubreuia'], ['min-version': '1.9.0'])", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDM3NTczOA=="}, "originalCommit": {"oid": "905a038734b12beee23fb4d57fff291737250b67"}, "originalPosition": 129}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2097, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}