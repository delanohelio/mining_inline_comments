{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxOTU2MzEw", "number": 1217, "title": "License derived from .baseline/copyright", "bodyText": "Before this PR\nEnforcing copyright file using checkstyle which is hard to change and not in sync with whatever files are in .baseline/copyright.\nAfter this PR\n==COMMIT_MSG==\nEnforcing copyright based on the first file (lexicographically) founds in .baseline/copyright.\nThis now uses spotless, which means that we can now autofix all copyrights using gradle.\nIt also allows us to enforce this copyright on groovy files, which we didn't have before.\n==COMMIT_MSG==\nPossible downsides?\n\nthe copyright at the top of all (java, groovy) files must be identical (except the year) or else it will get rewritten\nit might make it more difficult to deal with copied files that had another license already on them\n\ncan deal with it by having two comments, the standard repo one, and then another one with the original attribution", "createdAt": "2020-02-06T15:19:21Z", "url": "https://github.com/palantir/gradle-baseline/pull/1217", "merged": true, "mergeCommit": {"oid": "99f73ebf5201f1af6a8cd0140907f20dc633e6ad"}, "closed": true, "closedAt": "2020-02-10T17:51:52Z", "author": {"login": "dansanduleac"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBpe6qgH2gAyMzcxOTU2MzEwOjIxMjAwOWZmNWE5YTJjMjRhNWViNTBkOTg3OTIwODVlOTI5MGU4ZWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDATnkgFqTM1NjExMTIzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "212009ff5a9a2c24a5eb50d98792085e9290e8ef", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/212009ff5a9a2c24a5eb50d98792085e9290e8ef", "committedDate": "2020-02-06T11:59:53Z", "message": "separate out spotless application from java-specific config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd40a7c74f4c2d6688897a608ddb61eca21dd483", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/dd40a7c74f4c2d6688897a608ddb61eca21dd483", "committedDate": "2020-02-06T12:00:55Z", "message": "move PJF stuff inside configureSpotlessJava"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14b209f06e1d34812f83a4118509c469725c453d", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/14b209f06e1d34812f83a4118509c469725c453d", "committedDate": "2020-02-06T13:12:36Z", "message": "Handle copyright via BaselineFormat and not checkstyle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c916b3a0ba07f49953e7ef76fbeb26dd6a8eb8a4", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/c916b3a0ba07f49953e7ef76fbeb26dd6a8eb8a4", "committedDate": "2020-02-06T13:21:53Z", "message": "test groovy files as well"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccf044c735c92a7b32addcc51f6c4f8bf7b23abf", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/ccf044c735c92a7b32addcc51f6c4f8bf7b23abf", "committedDate": "2020-02-06T13:30:17Z", "message": "unnecessary eager task get"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "891ce66c920a77693ee8058ba29c1946dbb5d7a1", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/891ce66c920a77693ee8058ba29c1946dbb5d7a1", "committedDate": "2020-02-06T13:54:05Z", "message": "lazy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7934080409d22e7c4a8fe7710bff7d5dcc339431", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/7934080409d22e7c4a8fe7710bff7d5dcc339431", "committedDate": "2020-02-06T15:14:46Z", "message": "trim rhs of copyright lines"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4fcb7ea8c22a5b7e7856a066b2e9e842a70c71d", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/a4fcb7ea8c22a5b7e7856a066b2e9e842a70c71d", "committedDate": "2020-02-06T15:16:50Z", "message": "ensure that empty lines are tested as well"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ddbbb10b04885d275b0c17f54298ca595dbb0c0", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/8ddbbb10b04885d275b0c17f54298ca595dbb0c0", "committedDate": "2020-02-06T15:16:50Z", "message": "Add generated changelog entries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NTQyMzQ0", "url": "https://github.com/palantir/gradle-baseline/pull/1217#pullrequestreview-354542344", "createdAt": "2020-02-06T15:31:12Z", "commit": {"oid": "8ddbbb10b04885d275b0c17f54298ca595dbb0c0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNTozMToxM1rOFmfXPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNTozMToxM1rOFmfXPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkwNDA2MQ==", "bodyText": "can we use a LazyInitializedFormatterStep containing a memozied suppleire instead pls?", "url": "https://github.com/palantir/gradle-baseline/pull/1217#discussion_r375904061", "createdAt": "2020-02-06T15:31:13Z", "author": {"login": "iamdanfox"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineFormat.java", "diffHunk": "@@ -41,6 +55,104 @@\n     public void apply(Project project) {\n         this.project = project;\n \n+        project.getPluginManager().apply(\"com.diffplug.gradle.spotless\");\n+\n+        SpotlessExtension spotlessExtension = project.getExtensions().getByType(SpotlessExtension.class);\n+        // Keep spotless from eagerly configuring all other tasks.  We do the same thing as the enforceCheck\n+        // property below by making the check task depend on spotlessCheck.\n+        // See  https://github.com/diffplug/spotless/issues/444\n+        spotlessExtension.setEnforceCheck(false);\n+\n+        // Allow disabling copyright for tests\n+        if (!\"false\".equals(project.findProperty(\"com.palantir.baseline-format.copyright\"))) {\n+            configureCopyrightStep(project, spotlessExtension);\n+        }\n+\n+        // necessary because SpotlessPlugin creates tasks in an afterEvaluate block\n+        TaskProvider<Task> formatTask = project.getTasks().register(\"format\", task -> {\n+            task.setGroup(\"Formatting\");\n+        });\n+        project.afterEvaluate(p -> {\n+            formatTask.configure(t -> {\n+                t.dependsOn(\"spotlessApply\");\n+            });\n+\n+            // re-enable spotless checking, but lazily so it doesn't eagerly configure everything else\n+            project.getTasks().named(JavaBasePlugin.CHECK_TASK_NAME).configure(t -> {\n+                t.dependsOn(project.getTasks().named(\"spotlessCheck\"));\n+            });\n+\n+            // The copyright step configures itself lazily to allow for baselineUpdateConfig to potentially create the\n+            // right files. Therefore, also make sure that these will run in the right order.\n+            project.getPluginManager().withPlugin(\"com.palantir.baseline-config\", baselineConfig -> {\n+                project.getTasks()\n+                        .matching(t -> t.getName().startsWith(\"spotless\"))\n+                        .configureEach(t -> t.mustRunAfter(\"baselineUpdateConfig\"));\n+            });\n+        });\n+\n+        project.getPluginManager().withPlugin(\"java\", plugin -> {\n+            configureSpotlessJava(project, spotlessExtension);\n+        });\n+    }\n+\n+    /**\n+     * Necessary in order to not fail right away if the copyright folder doesn't exist yet, because it would be created\n+     * by {@code baselineUpdateConfig}.\n+     */\n+    private FormatterStep createLazyLicenseHeaderStep(Project project) {\n+        // Spotless will consider the license header to be the file prefix up to the first line starting with delimiter\n+        String delimiter = \"(?! \\\\*|/\\\\*| \\\\*/)\";\n+\n+        // Compute the copyright lazily\n+        Supplier<FormatterStep> realStep = Suppliers.memoize(() -> {\n+            String header = computeCopyrightHeader(project);\n+            return LicenseHeaderStep.createFromHeader(header, delimiter);\n+        });\n+\n+        return (FormatterStep) Proxy.newProxyInstance(\n+                Thread.currentThread().getContextClassLoader(),\n+                new Class[] {FormatterStep.class},\n+                (_proxy, method, args) -> method.invoke(realStep.get(), args));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ddbbb10b04885d275b0c17f54298ca595dbb0c0"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NTQzOTY3", "url": "https://github.com/palantir/gradle-baseline/pull/1217#pullrequestreview-354543967", "createdAt": "2020-02-06T15:33:07Z", "commit": {"oid": "8ddbbb10b04885d275b0c17f54298ca595dbb0c0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNTozMzowN1rOFmfb8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNTozMzowN1rOFmfb8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTkwNTI2Ng==", "bodyText": "can we use MyCompany instead of Palantir to emphasise this is not prod usage", "url": "https://github.com/palantir/gradle-baseline/pull/1217#discussion_r375905266", "createdAt": "2020-02-06T15:33:07Z", "author": {"login": "iamdanfox"}, "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/BaselineFormatCopyrightIntegrationTest.groovy", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * (c) Copyright 2018 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline\n+\n+import java.time.LocalDate\n+import org.apache.commons.io.FileUtils\n+import org.gradle.testkit.runner.TaskOutcome\n+import spock.lang.Unroll\n+\n+@Unroll\n+class BaselineFormatCopyrightIntegrationTest extends AbstractPluginTest {\n+\n+    def setup() {\n+        FileUtils.copyDirectory(\n+                new File(\"../gradle-baseline-java-config/resources\"),\n+                new File(projectDir, \".baseline\"))\n+\n+        // Testing that an empty line is also OK, these can cause gotchas\n+        file(\".baseline/copyright/000test\") << '''\n+            (c) Copyright $YEAR Palantir\n+            \n+            EXTRA\n+        '''.stripIndent()\n+    }\n+\n+    /** The copyright that we expect will be generated when there isn't an existing one */\n+    static generatedCopyright = \"\"\"\\\n+        /*\n+         * (c) Copyright ${LocalDate.now().year} Palantir\n+         *\n+         * EXTRA\n+         */\n+    \"\"\".stripIndent()\n+\n+    static goodCopyright = \"\"\"\\\n+        /*\n+         * (c) Copyright 2019 Palantir", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ddbbb10b04885d275b0c17f54298ca595dbb0c0"}, "originalPosition": 51}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f09ddc4021c7152c777b1b7c51108f64f6e0540", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/2f09ddc4021c7152c777b1b7c51108f64f6e0540", "committedDate": "2020-02-06T15:33:24Z", "message": "goodcorp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b58418cd069cf4b636b7bcd29a0007cdaa7b913", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/7b58418cd069cf4b636b7bcd29a0007cdaa7b913", "committedDate": "2020-02-06T15:39:19Z", "message": "LazyFormatterStep"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e4d111beefbf36b7d5d3d0071975d8ac9e0519b", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/5e4d111beefbf36b7d5d3d0071975d8ac9e0519b", "committedDate": "2020-02-06T15:47:23Z", "message": "need to serde properly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41ea218945a5b7ef5f4a5360169360f4705ce552", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/41ea218945a5b7ef5f4a5360169360f4705ce552", "committedDate": "2020-02-06T16:46:02Z", "message": "need to not instantiate this thing just to get the name.."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a11f26cb8e808ff8a25c37031551684e2872a082", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/a11f26cb8e808ff8a25c37031551684e2872a082", "committedDate": "2020-02-10T14:31:56Z", "message": "Merge remote-tracking branch 'origin/develop' into ds/copyright-spotless\n\n# Conflicts:\n#\tgradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineFormat.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63b570202205197928015361f9e854a02f5cca0c", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/63b570202205197928015361f9e854a02f5cca0c", "committedDate": "2020-02-10T14:34:12Z", "message": "fix spotless java configuration without plugin"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb50d4bd326806b5699484f0aeceaf2443980d7f", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/fb50d4bd326806b5699484f0aeceaf2443980d7f", "committedDate": "2020-02-10T14:44:27Z", "message": "fix up readme"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1OTkyMzc1", "url": "https://github.com/palantir/gradle-baseline/pull/1217#pullrequestreview-355992375", "createdAt": "2020-02-10T14:46:23Z", "commit": {"oid": "fb50d4bd326806b5699484f0aeceaf2443980d7f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDo0NjoyM1rOFnouCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDo0NjoyM1rOFnouCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzEwNTkzMA==", "bodyText": "./gradlew format feels a bit odd here. I think I'd almost recommend spotlessApply here", "url": "https://github.com/palantir/gradle-baseline/pull/1217#discussion_r377105930", "createdAt": "2020-02-10T14:46:23Z", "author": {"login": "iamdanfox"}, "path": "README.md", "diffHunk": "@@ -224,9 +224,11 @@ as that file will be overridden on updates.\n \n ### Copyright Checks\n \n-By default Baseline enforces Palantir copyright at the beginning of files. To change this, edit the template copyright\n-in `.baseline/copyright/*.txt` and the RegexpHeader checkstyle configuration in `.baseline/checkstyle/checkstyle.xml`\n+Baseline enforces Palantir copyright at the beginning of files when applying `com.palantir.baseline-format`. To change this, edit the template copyright\n+in `.baseline/copyright/*.txt`.\n+Note that only the first file (sorted lexicographically) is chosen as the copyright for the entire project.\n \n+To automatically update all files with mismatching/missing copyrights, run `./gradlew format`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb50d4bd326806b5699484f0aeceaf2443980d7f"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57f423c85339edc2dc552085247e970925407baa", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/57f423c85339edc2dc552085247e970925407baa", "committedDate": "2020-02-10T15:06:13Z", "message": "fork LicenseHeaderStep"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bff97c70aa75df10748cce0d91b08a11d78ec02", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/8bff97c70aa75df10748cce0d91b08a11d78ec02", "committedDate": "2020-02-10T16:47:01Z", "message": "rewrite to support multiple header files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c33af5330751fc0b870cd18111d1c2033139546", "author": {"user": {"login": "dansanduleac", "name": "Dan S\u0103nduleac"}}, "url": "https://github.com/palantir/gradle-baseline/commit/1c33af5330751fc0b870cd18111d1c2033139546", "committedDate": "2020-02-10T16:59:37Z", "message": "proper tests, test other copyright is supported too"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MTExMjM4", "url": "https://github.com/palantir/gradle-baseline/pull/1217#pullrequestreview-356111238", "createdAt": "2020-02-10T17:09:17Z", "commit": {"oid": "1c33af5330751fc0b870cd18111d1c2033139546"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2158, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}