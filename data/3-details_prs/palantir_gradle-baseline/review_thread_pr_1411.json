{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNzU3MzU2", "number": 1411, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDo1NjoyMVrOEFkqsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDo1NjoyMVrOEFkqsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Mjc5MDkxOnYy", "diffSide": "RIGHT", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNDo1NjoyMVrOGj18FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjozOToyOVrOGkZU1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzNzA3Ng==", "bodyText": "I'd flip this so it performs the action when (and if) the BaselineCheckstyle plugin is applied.\nIn the current state, you're dependent on the order of application, so if BaselineCheckstyle is applied later, intellij won't be configured correctly.\nproject.plugins.withType(BaselineCheckstyle) {\n  // rest of the function\n}", "url": "https://github.com/palantir/gradle-baseline/pull/1411#discussion_r440237076", "createdAt": "2020-06-15T14:56:21Z", "author": {"login": "dansanduleac"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -203,6 +294,29 @@ class BaselineIdea extends AbstractBaselinePlugin {\n         }\n \n         project.logger.debug \"Baseline: Configuring Checkstyle for Idea\"\n+\n+        addCheckstyleNode(node)\n+        addCheckstyleExternalDependencies(node)\n+    }\n+\n+    private static void addCheckstyleIntellijImport(project) {\n+        def checkstyle = project.plugins.findPlugin(BaselineCheckstyle)\n+        if (checkstyle == null) {\n+            project.logger.debug \"Baseline: Skipping IDEA checkstyle configuration since baseline-checkstyle not applied\"\n+            return\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c7854c6676498679005fd92a6f989cbc3ec5d84"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI1MTc3NA==", "bodyText": "I copied this from the existing checkstyle application. Would you recommend I flip it for both then?", "url": "https://github.com/palantir/gradle-baseline/pull/1411#discussion_r440251774", "createdAt": "2020-06-15T15:16:44Z", "author": {"login": "aldexis"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -203,6 +294,29 @@ class BaselineIdea extends AbstractBaselinePlugin {\n         }\n \n         project.logger.debug \"Baseline: Configuring Checkstyle for Idea\"\n+\n+        addCheckstyleNode(node)\n+        addCheckstyleExternalDependencies(node)\n+    }\n+\n+    private static void addCheckstyleIntellijImport(project) {\n+        def checkstyle = project.plugins.findPlugin(BaselineCheckstyle)\n+        if (checkstyle == null) {\n+            project.logger.debug \"Baseline: Skipping IDEA checkstyle configuration since baseline-checkstyle not applied\"\n+            return\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzNzA3Ng=="}, "originalCommit": {"oid": "2c7854c6676498679005fd92a6f989cbc3ec5d84"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDMwMzg4MQ==", "bodyText": "only for code paths that happen at configuration time", "url": "https://github.com/palantir/gradle-baseline/pull/1411#discussion_r440303881", "createdAt": "2020-06-15T16:36:05Z", "author": {"login": "dansanduleac"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -203,6 +294,29 @@ class BaselineIdea extends AbstractBaselinePlugin {\n         }\n \n         project.logger.debug \"Baseline: Configuring Checkstyle for Idea\"\n+\n+        addCheckstyleNode(node)\n+        addCheckstyleExternalDependencies(node)\n+    }\n+\n+    private static void addCheckstyleIntellijImport(project) {\n+        def checkstyle = project.plugins.findPlugin(BaselineCheckstyle)\n+        if (checkstyle == null) {\n+            project.logger.debug \"Baseline: Skipping IDEA checkstyle configuration since baseline-checkstyle not applied\"\n+            return\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzNzA3Ng=="}, "originalCommit": {"oid": "2c7854c6676498679005fd92a6f989cbc3ec5d84"}, "originalPosition": 194}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgxNjg1NA==", "bodyText": "I ended up flipping it for both addCheckstyle (called from within ideaRootModel.project.ipr.withXml so maybe that wasn't needed?) and addCheckstyleIntellijImport (mostly because I didn't see your edit before pushing, but I also think consistency is better - I'd even want to not have duplicate code but didn't find a nice way to do it because I'm not familiar enough with the code and how gradle configuration works yet)", "url": "https://github.com/palantir/gradle-baseline/pull/1411#discussion_r440816854", "createdAt": "2020-06-16T12:39:29Z", "author": {"login": "aldexis"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -203,6 +294,29 @@ class BaselineIdea extends AbstractBaselinePlugin {\n         }\n \n         project.logger.debug \"Baseline: Configuring Checkstyle for Idea\"\n+\n+        addCheckstyleNode(node)\n+        addCheckstyleExternalDependencies(node)\n+    }\n+\n+    private static void addCheckstyleIntellijImport(project) {\n+        def checkstyle = project.plugins.findPlugin(BaselineCheckstyle)\n+        if (checkstyle == null) {\n+            project.logger.debug \"Baseline: Skipping IDEA checkstyle configuration since baseline-checkstyle not applied\"\n+            return\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDIzNzA3Ng=="}, "originalCommit": {"oid": "2c7854c6676498679005fd92a6f989cbc3ec5d84"}, "originalPosition": 194}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2182, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}