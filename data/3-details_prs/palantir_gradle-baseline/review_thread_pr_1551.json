{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNTY1NjM0", "number": 1551, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzowODo1NFrOE6IABQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzoxMjoyMFrOE6IF9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MzgzOTQxOnYy", "diffSide": "RIGHT", "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/BaselineIdeaIntegrationTest.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzowODo1NFrOH0_4-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzowODo1NFrOH0_4-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNDc3OQ==", "bodyText": "Nice, I'm actually surprised we got this far without this test.", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525334779", "createdAt": "2020-11-17T17:08:54Z", "author": {"login": "CRogers"}, "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/BaselineIdeaIntegrationTest.groovy", "diffHunk": "@@ -49,7 +49,23 @@ class BaselineIdeaIntegrationTest extends AbstractPluginTest {\n         buildFile << standardBuildFile\n \n         then:\n-        with('idea').build()\n+        BuildResult result = with('idea').build()\n+        assert result.task(':idea').outcome == TaskOutcome.SUCCESS ?: result.output\n+    }\n+\n+    def 'Works with checkstyle and IntelliJ import'() {\n+        when:\n+        buildFile << standardBuildFile\n+        buildFile << \"\"\" \n+        allprojects { \n+            apply plugin: 'com.palantir.baseline-checkstyle'\n+        }\n+        \"\"\"\n+\n+        then:\n+        BuildResult result = with('idea', '-Didea.active=true', '-is').build()\n+        assert file(\".idea/checkstyle-idea.xml\").exists() ?: result.output\n+        assert result.task(':idea').outcome == TaskOutcome.SUCCESS ?: result.output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Mzg0MDI5OnYy", "diffSide": "RIGHT", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzowOTowOFrOH0_5kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzowOTowOFrOH0_5kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNDkzMA==", "bodyText": "a lot of these changes were motivated by @CompileStatic, but I couldn't fully lock it in because of all our xml manipulation. Figured it was better to just get closer \ud83e\udd37", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525334930", "createdAt": "2020-11-17T17:09:08Z", "author": {"login": "iamdanfox"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -179,14 +182,14 @@ class BaselineIdea extends AbstractBaselinePlugin {\n     /**\n      * Extracts copyright headers from Baseline directory and adds them to Idea project XML node.\n      */\n-    private void addCopyright(node) {\n-        def copyrightManager = node.component.find { it.'@name' == 'CopyrightManager' }\n+    private void addCopyright(Node node) {\n+        Node copyrightManager = node.component.find {it.'@name' == 'CopyrightManager'}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Mzg0MDg4OnYy", "diffSide": "RIGHT", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzowOToxN1rOH0_59A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzoxMDoxM1rOH0_8cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNTAyOA==", "bodyText": "One of my fav idea features.", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525335028", "createdAt": "2020-11-17T17:09:17Z", "author": {"login": "CRogers"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -345,6 +351,7 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             return\n         }\n \n+        // language=xml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819"}, "originalPosition": 209}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNTY2NQ==", "bodyText": "TIL!", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525335665", "createdAt": "2020-11-17T17:10:13Z", "author": {"login": "carterkozak"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -345,6 +351,7 @@ class BaselineIdea extends AbstractBaselinePlugin {\n             return\n         }\n \n+        // language=xml", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNTAyOA=="}, "originalCommit": {"oid": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819"}, "originalPosition": 209}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Mzg0NTQ2OnYy", "diffSide": "RIGHT", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzoxMDoxNVrOH0_8oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzoxMDoxNVrOH0_8oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNTcxMw==", "bodyText": "these whitespace changes are intellij helpfully reformatting things. Given that we don't have a palantir-groovy-format (\ud83d\ude02), I couldn't be bothered to revert em all piece by piece", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525335713", "createdAt": "2020-11-17T17:10:15Z", "author": {"login": "iamdanfox"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -179,14 +182,14 @@ class BaselineIdea extends AbstractBaselinePlugin {\n     /**\n      * Extracts copyright headers from Baseline directory and adds them to Idea project XML node.\n      */\n-    private void addCopyright(node) {\n-        def copyrightManager = node.component.find { it.'@name' == 'CopyrightManager' }\n+    private void addCopyright(Node node) {\n+        Node copyrightManager = node.component.find {it.'@name' == 'CopyrightManager'}\n         def copyrightDir = Paths.get(\"${configDir}/copyright/\")\n         def copyrightFiles = getCopyrightFiles(copyrightDir)\n-        copyrightFiles.each { File file ->\n+        copyrightFiles.each {File file ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Mzg1MTczOnYy", "diffSide": "RIGHT", "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzoxMTo0MlrOH1AAww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzoxMTo0MlrOH1AAww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNjc3MQ==", "bodyText": "i stumbled across this trick further down this file, turns out IntelliJ can give you language-specific code highlighting for snippets!!!", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525336771", "createdAt": "2020-11-17T17:11:42Z", "author": {"login": "iamdanfox"}, "path": "gradle-baseline-java/src/main/groovy/com/palantir/baseline/plugins/BaselineIdea.groovy", "diffHunk": "@@ -353,6 +360,7 @@ class BaselineIdea extends AbstractBaselinePlugin {\n     }\n \n     private static void addInspectionProjectProfile(node) {\n+        // language=xml", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819"}, "originalPosition": 217}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Mzg1NDYyOnYy", "diffSide": "LEFT", "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/BaselineIdeaIntegrationTest.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzoxMjoyMFrOH1ACdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzoxMjoyMFrOH1ACdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTMzNzIwNg==", "bodyText": "this assertion would always pass. the result contained an outcome of either success/fail, but we never checked it. \ud83e\udd26", "url": "https://github.com/palantir/gradle-baseline/pull/1551#discussion_r525337206", "createdAt": "2020-11-17T17:12:20Z", "author": {"login": "iamdanfox"}, "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/BaselineIdeaIntegrationTest.groovy", "diffHunk": "@@ -49,7 +49,23 @@ class BaselineIdeaIntegrationTest extends AbstractPluginTest {\n         buildFile << standardBuildFile\n \n         then:\n-        with('idea').build()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa3051ecd4acb7e7f97ce6ea9d76086cb9743819"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2142, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}