{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0MjI4Mzg1", "number": 1554, "title": "Add `PreventUsingIncubatingMethods` error-prone check (conjure)", "bodyText": "An explicit check which warns against using incubating APIs; you can disable it on a per-project basis, or on a per-usage basis using @SuppressWarnings.\nBefore this PR\nIncubating APIs are a stability liability, and should generally only be used explicitly (i.e., opt-in instead of opt-out). This check prevents their usage without an explicit annotation or opt-out.\nAfter this PR\nAdds the PreventUsingIncubatingMethods error-prone check, which blocks methods annotated with Conjure's @Incubating annotation.\nPossible downsides?\nUsers upgrading gradle-baseline may get errors related to incubating methods until they either disable the check or tag their incubating API usages.", "createdAt": "2020-11-19T20:59:04Z", "url": "https://github.com/palantir/gradle-baseline/pull/1554", "merged": true, "mergeCommit": {"oid": "8ed48f563ecd8c96b7ac9e3592117199589cb9c2"}, "closed": true, "closedAt": "2020-11-20T00:28:12Z", "author": {"login": "blacksmithgu"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdeJDYSAH2gAyNTI0MjI4Mzg1OmEzNzNjMDhmOTU3YmUwZTQ5MDAwMzQwYWRlODlhZTJiYTgxMzUzMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeMMWlgFqTUzNDk4NjYyNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a373c08f957be0e49000340ade89ae2ba8135301", "author": {"user": {"login": "blacksmithgu", "name": "Michael \"Tres\" Brenan"}}, "url": "https://github.com/palantir/gradle-baseline/commit/a373c08f957be0e49000340ade89ae2ba8135301", "committedDate": "2020-11-19T20:47:48Z", "message": "Add `PreventUsingIncubatingMethods` error-prone check\n\nAn explicit check which warns against using incubating APIs; you can\ndisable it on a per-project basis, or on a per-usage basis using\n@SuppressWarnings."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0ODgyODg2", "url": "https://github.com/palantir/gradle-baseline/pull/1554#pullrequestreview-534882886", "createdAt": "2020-11-19T21:48:10Z", "commit": {"oid": "a373c08f957be0e49000340ade89ae2ba8135301"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTo0ODoxMFrOH2zNgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTo0ODoxMFrOH2zNgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyNDE5NQ==", "bodyText": "Thoughts on renaming this to something like IncubatingMethod? We haven't been great about naming, but most error-prone checks are named to describe the bad thing they detect.", "url": "https://github.com/palantir/gradle-baseline/pull/1554#discussion_r527224195", "createdAt": "2020-11-19T21:48:10Z", "author": {"login": "carterkozak"}, "path": "README.md", "diffHunk": "@@ -198,6 +198,7 @@ Safe Logging can be found at [github.com/palantir/safe-logging](https://github.c\n - `UnnecessarilyQualified`: Types should not be qualified if they are also imported.\n - `DeprecatedGuavaObjects`: `com.google.common.base.Objects` has been obviated by `java.util.Objects`.\n - `JavaTimeSystemDefaultTimeZone`: Avoid using the system default time zone.\n+- `PreventUsingIncubatingMethods`: Prevents calling Conjure incubating APIs unless you explicitly opt-out of the check on a per-use or per-project basis.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a373c08f957be0e49000340ade89ae2ba8135301"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0ODg0MTE1", "url": "https://github.com/palantir/gradle-baseline/pull/1554#pullrequestreview-534884115", "createdAt": "2020-11-19T21:49:53Z", "commit": {"oid": "a373c08f957be0e49000340ade89ae2ba8135301"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTo0OTo1M1rOH2zRYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTo0OTo1M1rOH2zRYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyNTE4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            + \" @SuppressWarnings(\\\"PreventUsingIncubatingMethods\\\"), or disable it globally for new projects.\")\n          \n          \n            \n                            + \" @SuppressWarnings(\\\"PreventUsingIncubatingMethods\\\").\")\n          \n      \n    \n    \n  \n\nLet's leave the global piece implied, we don't want to give folks too many ideas!", "url": "https://github.com/palantir/gradle-baseline/pull/1554#discussion_r527225187", "createdAt": "2020-11-19T21:49:53Z", "author": {"login": "carterkozak"}, "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/PreventUsingIncubatingMethods.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.util.ASTHelpers;\n+import com.sun.source.tree.MemberReferenceTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+import com.sun.tools.javac.code.Symbol;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"PreventUsingIncubatingMethods\",\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = BugPattern.SeverityLevel.ERROR,\n+        summary = \"You should avoid using incubating methods where possible, since they have very weak stability\"\n+                + \" guarantees. You can explicitly disable this check on a case-by-case basis using\"\n+                + \" @SuppressWarnings(\\\"PreventUsingIncubatingMethods\\\"), or disable it globally for new projects.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a373c08f957be0e49000340ade89ae2ba8135301"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0ODg0NjY1", "url": "https://github.com/palantir/gradle-baseline/pull/1554#pullrequestreview-534884665", "createdAt": "2020-11-19T21:50:39Z", "commit": {"oid": "a373c08f957be0e49000340ade89ae2ba8135301"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTo1MDozOVrOH2zTOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTo1MDozOVrOH2zTOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyNTY1OA==", "bodyText": "No need to set a message, the summary from the annotation above is sufficient\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return buildDescription(tree)\n          \n          \n            \n                    return describeMatch(tree);", "url": "https://github.com/palantir/gradle-baseline/pull/1554#discussion_r527225658", "createdAt": "2020-11-19T21:50:39Z", "author": {"login": "carterkozak"}, "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/PreventUsingIncubatingMethods.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.util.ASTHelpers;\n+import com.sun.source.tree.MemberReferenceTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+import com.sun.tools.javac.code.Symbol;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"PreventUsingIncubatingMethods\",\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = BugPattern.SeverityLevel.ERROR,\n+        summary = \"You should avoid using incubating methods where possible, since they have very weak stability\"\n+                + \" guarantees. You can explicitly disable this check on a case-by-case basis using\"\n+                + \" @SuppressWarnings(\\\"PreventUsingIncubatingMethods\\\"), or disable it globally for new projects.\")\n+public final class PreventUsingIncubatingMethods extends BugChecker\n+        implements BugChecker.MethodInvocationTreeMatcher, BugChecker.MemberReferenceTreeMatcher {\n+\n+    /** The full path for the Incubating annotation. */\n+    private static final String INCUBATING = \"com.palantir.conjure.java.lib.internal.Incubating\";\n+\n+    @Override\n+    public Description matchMethodInvocation(MethodInvocationTree tree, VisitorState state) {\n+        return checkTree(tree, ASTHelpers.getSymbol(tree), state);\n+    }\n+\n+    @Override\n+    public Description matchMemberReference(MemberReferenceTree tree, VisitorState state) {\n+        return checkTree(tree, ASTHelpers.getSymbol(tree), state);\n+    }\n+\n+    private Description checkTree(Tree tree, Symbol.MethodSymbol method, VisitorState state) {\n+        if (!ASTHelpers.hasAnnotation(method, INCUBATING, state)) {\n+            return Description.NO_MATCH;\n+        }\n+\n+        return buildDescription(tree)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a373c08f957be0e49000340ade89ae2ba8135301"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96c83843841a6c5726b9becd1a7e3be76ca952fc", "author": {"user": {"login": "blacksmithgu", "name": "Michael \"Tres\" Brenan"}}, "url": "https://github.com/palantir/gradle-baseline/commit/96c83843841a6c5726b9becd1a7e3be76ca952fc", "committedDate": "2020-11-19T21:57:55Z", "message": "Rename check to 'IncubatingMethod'\n\nTo be more in line with other checks."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0ODkwMDgy", "url": "https://github.com/palantir/gradle-baseline/pull/1554#pullrequestreview-534890082", "createdAt": "2020-11-19T21:58:55Z", "commit": {"oid": "a373c08f957be0e49000340ade89ae2ba8135301"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTo1ODo1NVrOH2zj8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTo1ODo1NVrOH2zj8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyOTkzNw==", "bodyText": "this check can be extracted to a static reusable matcher:\nMatchers.hasAnnotation(\"com.palantir.conjure.java.lib.internal.Incubating\");\nWe should probably not fail builds when folks test their endpoints, so we can avoid reporting a match if TestCheckUtils.isTestCode(state) is true (note that this method is relatively expensive, so we should only check it after we've found an incubating match).", "url": "https://github.com/palantir/gradle-baseline/pull/1554#discussion_r527229937", "createdAt": "2020-11-19T21:58:55Z", "author": {"login": "carterkozak"}, "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/PreventUsingIncubatingMethods.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.util.ASTHelpers;\n+import com.sun.source.tree.MemberReferenceTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+import com.sun.tools.javac.code.Symbol;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"PreventUsingIncubatingMethods\",\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = BugPattern.SeverityLevel.ERROR,\n+        summary = \"You should avoid using incubating methods where possible, since they have very weak stability\"\n+                + \" guarantees. You can explicitly disable this check on a case-by-case basis using\"\n+                + \" @SuppressWarnings(\\\"PreventUsingIncubatingMethods\\\"), or disable it globally for new projects.\")\n+public final class PreventUsingIncubatingMethods extends BugChecker\n+        implements BugChecker.MethodInvocationTreeMatcher, BugChecker.MemberReferenceTreeMatcher {\n+\n+    /** The full path for the Incubating annotation. */\n+    private static final String INCUBATING = \"com.palantir.conjure.java.lib.internal.Incubating\";\n+\n+    @Override\n+    public Description matchMethodInvocation(MethodInvocationTree tree, VisitorState state) {\n+        return checkTree(tree, ASTHelpers.getSymbol(tree), state);\n+    }\n+\n+    @Override\n+    public Description matchMemberReference(MemberReferenceTree tree, VisitorState state) {\n+        return checkTree(tree, ASTHelpers.getSymbol(tree), state);\n+    }\n+\n+    private Description checkTree(Tree tree, Symbol.MethodSymbol method, VisitorState state) {\n+        if (!ASTHelpers.hasAnnotation(method, INCUBATING, state)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a373c08f957be0e49000340ade89ae2ba8135301"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0ODkyMTc0", "url": "https://github.com/palantir/gradle-baseline/pull/1554#pullrequestreview-534892174", "createdAt": "2020-11-19T22:02:03Z", "commit": {"oid": "96c83843841a6c5726b9becd1a7e3be76ca952fc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMjowMjowM1rOH2zqTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMjowMjowM1rOH2zqTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIzMTU2Ng==", "bodyText": "Might be simpler to add a testCompile dependency on conjure-lib so we don't have to define this in tests, and we know we're using the right fqcn", "url": "https://github.com/palantir/gradle-baseline/pull/1554#discussion_r527231566", "createdAt": "2020-11-19T22:02:03Z", "author": {"login": "carterkozak"}, "path": "baseline-error-prone/src/test/java/com/palantir/baseline/errorprone/IncubatingMethodTest.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.errorprone.CompilationTestHelper;\n+import org.junit.Test;\n+\n+public class IncubatingMethodTest {\n+\n+    // We define our own simple conjure incubating annotation at the right path:\n+    private static final String[] ANNOTATION_DEFINITION =\n+            new String[] {\"package com.palantir.conjure.java.lib.internal;\", \"public @interface Incubating {}\"};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96c83843841a6c5726b9becd1a7e3be76ca952fc"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "196f92273cb7b3a6ef1105bc1c76e66fde09cc9a", "author": {"user": {"login": "blacksmithgu", "name": "Michael \"Tres\" Brenan"}}, "url": "https://github.com/palantir/gradle-baseline/commit/196f92273cb7b3a6ef1105bc1c76e66fde09cc9a", "committedDate": "2020-11-19T22:35:11Z", "message": "Add conjure-lib test dependency, reusable matcher\n\nTo ensure we get a compile break if @Incubating ever moves."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c0d79af10cc9b6249816757ba137f6a11ea9093", "author": {"user": {"login": "blacksmithgu", "name": "Michael \"Tres\" Brenan"}}, "url": "https://github.com/palantir/gradle-baseline/commit/9c0d79af10cc9b6249816757ba137f6a11ea9093", "committedDate": "2020-11-19T22:44:12Z", "message": "Fix entry in README, add changelog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1a8af5da038338f6bfc7027753b5458fc479dd2", "author": {"user": {"login": "blacksmithgu", "name": "Michael \"Tres\" Brenan"}}, "url": "https://github.com/palantir/gradle-baseline/commit/c1a8af5da038338f6bfc7027753b5458fc479dd2", "committedDate": "2020-11-19T22:56:43Z", "message": "Fix version lock & formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0OTg2NjI0", "url": "https://github.com/palantir/gradle-baseline/pull/1554#pullrequestreview-534986624", "createdAt": "2020-11-20T00:27:19Z", "commit": {"oid": "c1a8af5da038338f6bfc7027753b5458fc479dd2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2001, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}