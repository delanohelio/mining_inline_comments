{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyODk4NTEy", "number": 1401, "title": "Added OptionalOrElseGetConstant error prone check.", "bodyText": "Before this PR\nLots of Optional.orElseGet(() -> someConstant) floating around in the world.\nAfter this PR\n==COMMIT_MSG==\nRecommends using optional.orElse(constant) instead of optional.orElseGet(() -> constant)\n==COMMIT_MSG==\nPossible downsides?\nNone", "createdAt": "2020-06-11T07:42:57Z", "url": "https://github.com/palantir/gradle-baseline/pull/1401", "merged": true, "mergeCommit": {"oid": "6716a0d340cee1df68f4731b00e4645de2fc4d69"}, "closed": true, "closedAt": "2020-06-17T19:06:39Z", "author": {"login": "aioobe"}, "timelineItems": {"totalCount": 42, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqJTjKAH2gAyNDMyODk4NTEyOmJmMTcxMjU4MWU3MDE2NGYyMmY2NTBhYWE2ZmRiNDFhMTVjM2Q1ZmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsNbLUAH2gAyNDMyODk4NTEyOjY4OTM0NmYxNDUxNzJkYjg5NzVmMWJmZDA1ZjY2MTNjMTRmNGE3NWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bf1712581e70164f22f650aaa6fdb41a15c3d5fb", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/bf1712581e70164f22f650aaa6fdb41a15c3d5fb", "committedDate": "2020-06-11T07:41:24Z", "message": "Added OptionalOrElseGetConstant error prone check."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cb06f5768f4f12f70c1ab97dfc676c9d20e0593", "author": {"user": {"login": "svc-excavator-bot", "name": "Excavator Bot"}}, "url": "https://github.com/palantir/gradle-baseline/commit/6cb06f5768f4f12f70c1ab97dfc676c9d20e0593", "committedDate": "2020-06-11T13:12:34Z", "message": "Excavator: Upgrade buildscript dependencies (#1402)\n\nCo-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTU2NzI0", "url": "https://github.com/palantir/gradle-baseline/pull/1401#pullrequestreview-429156724", "createdAt": "2020-06-11T17:54:51Z", "commit": {"oid": "bf1712581e70164f22f650aaa6fdb41a15c3d5fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzo1NDo1MVrOGiolVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxNzo1NDo1MVrOGiolVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk2OTY4NQ==", "bodyText": "I think we should expand this check to include any variable", "url": "https://github.com/palantir/gradle-baseline/pull/1401#discussion_r438969685", "createdAt": "2020-06-11T17:54:51Z", "author": {"login": "ferozco"}, "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/OptionalOrElseGetConstant.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * (c) Copyright 2019 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.BugPattern.SeverityLevel;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.bugpatterns.BugChecker.MethodInvocationTreeMatcher;\n+import com.google.errorprone.fixes.SuggestedFix;\n+import com.google.errorprone.fixes.SuggestedFixes;\n+import com.google.errorprone.matchers.CompileTimeConstantExpressionMatcher;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.matchers.Matcher;\n+import com.google.errorprone.matchers.method.MethodMatchers;\n+import com.sun.source.tree.ExpressionTree;\n+import com.sun.source.tree.LambdaExpressionTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"OptionalOrElseGetConstant\",\n+        link = \"https://github.com/palantir/gradle-baseline#baseline-error-prone-checks\",\n+        linkType = BugPattern.LinkType.CUSTOM,\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = SeverityLevel.ERROR,\n+        summary = \"If lambda passed to Optional#orElseGet returns a compile time constant, use Optional#orElse instead\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1712581e70164f22f650aaa6fdb41a15c3d5fb"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8fa3d1c5f0e0bf17efc88987f452d1acdb87051", "author": {"user": {"login": "svc-excavator-bot", "name": "Excavator Bot"}}, "url": "https://github.com/palantir/gradle-baseline/commit/f8fa3d1c5f0e0bf17efc88987f452d1acdb87051", "committedDate": "2020-06-11T19:06:04Z", "message": "Excavator: Upgrade buildscript dependencies (#1403)\n\nCo-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MjUzMDkw", "url": "https://github.com/palantir/gradle-baseline/pull/1401#pullrequestreview-429253090", "createdAt": "2020-06-11T20:07:15Z", "commit": {"oid": "bf1712581e70164f22f650aaa6fdb41a15c3d5fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowNzoxNVrOGisyXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowNzoxNVrOGisyXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzODU1OQ==", "bodyText": "If the suggested changes make sense, perhaps we should rename this to OptionalOrElseGetValue", "url": "https://github.com/palantir/gradle-baseline/pull/1401#discussion_r439038559", "createdAt": "2020-06-11T20:07:15Z", "author": {"login": "carterkozak"}, "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/OptionalOrElseGetConstant.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * (c) Copyright 2019 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.BugPattern.SeverityLevel;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.bugpatterns.BugChecker.MethodInvocationTreeMatcher;\n+import com.google.errorprone.fixes.SuggestedFix;\n+import com.google.errorprone.fixes.SuggestedFixes;\n+import com.google.errorprone.matchers.CompileTimeConstantExpressionMatcher;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.matchers.Matcher;\n+import com.google.errorprone.matchers.method.MethodMatchers;\n+import com.sun.source.tree.ExpressionTree;\n+import com.sun.source.tree.LambdaExpressionTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"OptionalOrElseGetConstant\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1712581e70164f22f650aaa6fdb41a15c3d5fb"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MjUzMzYz", "url": "https://github.com/palantir/gradle-baseline/pull/1401#pullrequestreview-429253363", "createdAt": "2020-06-11T20:07:40Z", "commit": {"oid": "bf1712581e70164f22f650aaa6fdb41a15c3d5fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowNzo0MFrOGiszxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowNzo0MFrOGiszxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTAzODkxNw==", "bodyText": "Should probably be WARN rather than ERROR.", "url": "https://github.com/palantir/gradle-baseline/pull/1401#discussion_r439038917", "createdAt": "2020-06-11T20:07:40Z", "author": {"login": "carterkozak"}, "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/OptionalOrElseGetConstant.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * (c) Copyright 2019 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.BugPattern.SeverityLevel;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.bugpatterns.BugChecker.MethodInvocationTreeMatcher;\n+import com.google.errorprone.fixes.SuggestedFix;\n+import com.google.errorprone.fixes.SuggestedFixes;\n+import com.google.errorprone.matchers.CompileTimeConstantExpressionMatcher;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.matchers.Matcher;\n+import com.google.errorprone.matchers.method.MethodMatchers;\n+import com.sun.source.tree.ExpressionTree;\n+import com.sun.source.tree.LambdaExpressionTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"OptionalOrElseGetConstant\",\n+        link = \"https://github.com/palantir/gradle-baseline#baseline-error-prone-checks\",\n+        linkType = BugPattern.LinkType.CUSTOM,\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = SeverityLevel.ERROR,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1712581e70164f22f650aaa6fdb41a15c3d5fb"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MjU0NTUy", "url": "https://github.com/palantir/gradle-baseline/pull/1401#pullrequestreview-429254552", "createdAt": "2020-06-11T20:09:39Z", "commit": {"oid": "bf1712581e70164f22f650aaa6fdb41a15c3d5fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowOTo0MFrOGis5cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMDowOTo0MFrOGis5cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTA0MDM2OQ==", "bodyText": "After we test the suggested fixes on a large internal project (per-merge) we should add this check to the list that baseline automatically fixes by referencing the name from the list in BaselineErrorProneExtension.java", "url": "https://github.com/palantir/gradle-baseline/pull/1401#discussion_r439040369", "createdAt": "2020-06-11T20:09:40Z", "author": {"login": "carterkozak"}, "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/OptionalOrElseGetConstant.java", "diffHunk": "@@ -0,0 +1,88 @@\n+/*\n+ * (c) Copyright 2019 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.BugPattern.SeverityLevel;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.bugpatterns.BugChecker.MethodInvocationTreeMatcher;\n+import com.google.errorprone.fixes.SuggestedFix;\n+import com.google.errorprone.fixes.SuggestedFixes;\n+import com.google.errorprone.matchers.CompileTimeConstantExpressionMatcher;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.matchers.Matcher;\n+import com.google.errorprone.matchers.method.MethodMatchers;\n+import com.sun.source.tree.ExpressionTree;\n+import com.sun.source.tree.LambdaExpressionTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"OptionalOrElseGetConstant\",\n+        link = \"https://github.com/palantir/gradle-baseline#baseline-error-prone-checks\",\n+        linkType = BugPattern.LinkType.CUSTOM,\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf1712581e70164f22f650aaa6fdb41a15c3d5fb"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09ca77ab9f5abb069212837c5b718c370bbb1356", "author": {"user": {"login": "iamdanfox", "name": null}}, "url": "https://github.com/palantir/gradle-baseline/commit/09ca77ab9f5abb069212837c5b718c370bbb1356", "committedDate": "2020-06-11T20:16:56Z", "message": "--write-locks no longer implicitly runs checkClassUniqueness task (#1389)\n\nRunning `./gradlew --write-locks` should be faster now, as it doesn't update your `baseline-class-uniqueness.lock` file implicitly anymore. To update this, you need to run `./gradlew checkClassUniqueness --write-locks`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b99ee1dc983acf0b22195994abf0b405dc7292bd", "author": {"user": {"login": "svc-autorelease", "name": null}}, "url": "https://github.com/palantir/gradle-baseline/commit/b99ee1dc983acf0b22195994abf0b405dc7292bd", "committedDate": "2020-06-11T20:17:00Z", "message": "Autorelease 3.24.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66041065f688e8e13902a8c994099029806f3a88", "author": {"user": {"login": "svc-excavator-bot", "name": "Excavator Bot"}}, "url": "https://github.com/palantir/gradle-baseline/commit/66041065f688e8e13902a8c994099029806f3a88", "committedDate": "2020-06-11T22:40:22Z", "message": "Excavator: Upgrade dependencies (#1399)\n\n* Excavator: Upgrade dependencies\n\n* correct task\n\nCo-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>\nCo-authored-by: Robert Kruszewski <robertk@palantir.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93bca37b17bd1fea81df63512c8b786fb95704a9", "author": {"user": {"login": "robert3005", "name": "Robert Kruszewski"}}, "url": "https://github.com/palantir/gradle-baseline/commit/93bca37b17bd1fea81df63512c8b786fb95704a9", "committedDate": "2020-06-11T23:28:44Z", "message": "Improvement: Upgrade Checkstyle to 8.33 (#1404)\n\nUpgrade checkstyle to 8.33"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4407bb5d0e0581ae6c4ebca46cb92b379fc0d5d3", "author": {"user": {"login": "svc-autorelease", "name": null}}, "url": "https://github.com/palantir/gradle-baseline/commit/4407bb5d0e0581ae6c4ebca46cb92b379fc0d5d3", "committedDate": "2020-06-11T23:28:47Z", "message": "Autorelease 3.25.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d12519dab84aa6299b4a92962e29c412a866004a", "author": {"user": {"login": "robert3005", "name": "Robert Kruszewski"}}, "url": "https://github.com/palantir/gradle-baseline/commit/d12519dab84aa6299b4a92962e29c412a866004a", "committedDate": "2020-06-12T01:35:57Z", "message": "Fix: Adjust checkstyle config for new version (#1409)\n\nFix checkstyle config to conform to breaks made between 8.13 and 8.33"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0401037f787a4a758f2beac134f9252b6e6f64a1", "author": {"user": {"login": "svc-autorelease", "name": null}}, "url": "https://github.com/palantir/gradle-baseline/commit/0401037f787a4a758f2beac134f9252b6e6f64a1", "committedDate": "2020-06-12T01:36:00Z", "message": "Autorelease 3.25.1"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "329b939716a994b387edb38e7b9023b9a11bec40", "author": {"user": {"login": "svc-excavator-bot", "name": "Excavator Bot"}}, "url": "https://github.com/palantir/gradle-baseline/commit/329b939716a994b387edb38e7b9023b9a11bec40", "committedDate": "2020-06-12T15:03:24Z", "message": "Excavator: Render CircleCI file using template specified in .circleci/template.sh (#1384)\n\nCo-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>\r\nCo-authored-by: forozco <forozco@palantir.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1eaa6cef3806bb4393c22dffff574ec1f12b5aa8", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/1eaa6cef3806bb4393c22dffff574ec1f12b5aa8", "committedDate": "2020-06-12T16:15:40Z", "message": "Check now also covers other simple expressions. Readme updated."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5ODg1ODM3", "url": "https://github.com/palantir/gradle-baseline/pull/1401#pullrequestreview-429885837", "createdAt": "2020-06-12T16:37:22Z", "commit": {"oid": "1eaa6cef3806bb4393c22dffff574ec1f12b5aa8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozNzoyM1rOGjKlpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozNzoyM1rOGjKlpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyNjgyMw==", "bodyText": "pedantic nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - `OptionalOrElseGetValue`: Prefer `Optional.orElse(expression)` over `Optional.orElseGet(() -> expression)` for trivial expressions.\n          \n          \n            \n            - `OptionalOrElseGetValue`: Prefer `Optional.orElse(value)` over `Optional.orElseGet(() -> value)` for trivial expressions.", "url": "https://github.com/palantir/gradle-baseline/pull/1401#discussion_r439526823", "createdAt": "2020-06-12T16:37:23Z", "author": {"login": "carterkozak"}, "path": "README.md", "diffHunk": "@@ -159,6 +159,7 @@ Safe Logging can be found at [github.com/palantir/safe-logging](https://github.c\n - `NonComparableStreamSort`: Stream.sorted() should only be called on streams of Comparable types.\n - `DangerousStringInternUsage`: Disallow String.intern() invocations in favor of more predictable, scalable alternatives.\n - `OptionalOrElseThrowThrows`: Optional.orElseThrow argument must return an exception, not throw one.\n+- `OptionalOrElseGetValue`: Prefer `Optional.orElse(expression)` over `Optional.orElseGet(() -> expression)` for trivial expressions.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eaa6cef3806bb4393c22dffff574ec1f12b5aa8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5ODg2NzUx", "url": "https://github.com/palantir/gradle-baseline/pull/1401#pullrequestreview-429886751", "createdAt": "2020-06-12T16:38:51Z", "commit": {"oid": "1eaa6cef3806bb4393c22dffff574ec1f12b5aa8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozODo1MVrOGjKoQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjozODo1MVrOGjKoQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyNzQ5MQ==", "bodyText": "Is the compile time constant check ever necessary? What does it catch that the following checks cannot?", "url": "https://github.com/palantir/gradle-baseline/pull/1401#discussion_r439527491", "createdAt": "2020-06-12T16:38:51Z", "author": {"login": "carterkozak"}, "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/OptionalOrElseGetValue.java", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * (c) Copyright 2019 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.BugPattern.SeverityLevel;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.bugpatterns.BugChecker.MethodInvocationTreeMatcher;\n+import com.google.errorprone.fixes.SuggestedFix;\n+import com.google.errorprone.fixes.SuggestedFixes;\n+import com.google.errorprone.matchers.CompileTimeConstantExpressionMatcher;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.matchers.Matcher;\n+import com.google.errorprone.matchers.method.MethodMatchers;\n+import com.sun.source.tree.ExpressionTree;\n+import com.sun.source.tree.IdentifierTree;\n+import com.sun.source.tree.LambdaExpressionTree;\n+import com.sun.source.tree.LiteralTree;\n+import com.sun.source.tree.MemberSelectTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"OptionalOrElseGetValue\",\n+        link = \"https://github.com/palantir/gradle-baseline#baseline-error-prone-checks\",\n+        linkType = BugPattern.LinkType.CUSTOM,\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = SeverityLevel.WARNING,\n+        summary = \"If lambda passed to Optional#orElseGet returns a simple expression, use Optional#orElse instead\")\n+public final class OptionalOrElseGetValue extends BugChecker implements MethodInvocationTreeMatcher {\n+\n+    private static final long serialVersionUID = 1L;\n+    private static final Matcher<ExpressionTree> OR_ELSE_GET_METHOD =\n+            MethodMatchers.instanceMethod().onExactClass(\"java.util.Optional\").named(\"orElseGet\");\n+    private static final Matcher<ExpressionTree> COMPILE_TIME_CONSTANT = new CompileTimeConstantExpressionMatcher();\n+\n+    @Override\n+    public Description matchMethodInvocation(MethodInvocationTree tree, VisitorState state) {\n+        match:\n+        {\n+            if (!OR_ELSE_GET_METHOD.matches(tree, state)) {\n+                break match;\n+            }\n+\n+            ExpressionTree orElseGetArg = tree.getArguments().get(0);\n+\n+            if (orElseGetArg.getKind() != Tree.Kind.LAMBDA_EXPRESSION) {\n+                break match;\n+            }\n+\n+            LambdaExpressionTree lambdaExpressionTree = (LambdaExpressionTree) orElseGetArg;\n+            LambdaExpressionTree.BodyKind bodyKind = lambdaExpressionTree.getBodyKind();\n+\n+            if (bodyKind != LambdaExpressionTree.BodyKind.EXPRESSION) {\n+                break match;\n+            }\n+\n+            ExpressionTree expressionBody = (ExpressionTree) lambdaExpressionTree.getBody();\n+            if (COMPILE_TIME_CONSTANT.matches(expressionBody, state)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eaa6cef3806bb4393c22dffff574ec1f12b5aa8"}, "originalPosition": 76}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb4d55b75ee04d9a0133645f8ba72885752ac427", "author": {"user": {"login": "ferozco", "name": "Felipe Orozco"}}, "url": "https://github.com/palantir/gradle-baseline/commit/eb4d55b75ee04d9a0133645f8ba72885752ac427", "committedDate": "2020-06-12T17:16:35Z", "message": "StrictUnusedVariable handles Java 14 records (#1412)\n\nStrictUnusedVariable handles Java 14 records"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7209e9b7990754574d4aaa78b104ecf266294ac7", "author": {"user": {"login": "svc-autorelease", "name": null}}, "url": "https://github.com/palantir/gradle-baseline/commit/7209e9b7990754574d4aaa78b104ecf266294ac7", "committedDate": "2020-06-12T17:16:37Z", "message": "Autorelease 3.26.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce1d2e181e4e2a4832fec06d3c9baefbcab3c665", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/ce1d2e181e4e2a4832fec06d3c9baefbcab3c665", "committedDate": "2020-06-12T18:13:28Z", "message": "Ran spotlessApply."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54f4f322053677c7528fa9706c9f6f3f73261bad", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/54f4f322053677c7528fa9706c9f6f3f73261bad", "committedDate": "2020-06-12T20:44:53Z", "message": "Added a compile time constant test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03c85a0dc5243e62f4888b5fc6a94c41b0e46708", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/03c85a0dc5243e62f4888b5fc6a94c41b0e46708", "committedDate": "2020-06-12T20:52:11Z", "message": "Reworded description in README."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMwMDMzOTEz", "url": "https://github.com/palantir/gradle-baseline/pull/1401#pullrequestreview-430033913", "createdAt": "2020-06-12T20:58:13Z", "commit": {"oid": "03c85a0dc5243e62f4888b5fc6a94c41b0e46708"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMDo1ODoxM1rOGjRdfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQyMDo1ODoxM1rOGjRdfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTYzOTQyMg==", "bodyText": "Not sure the named block + break buys us anything over return Description.NO_MATCH;, by returning no-match we can shed a layer of indents, and style more uniformly with other checks.", "url": "https://github.com/palantir/gradle-baseline/pull/1401#discussion_r439639422", "createdAt": "2020-06-12T20:58:13Z", "author": {"login": "carterkozak"}, "path": "baseline-error-prone/src/main/java/com/palantir/baseline/errorprone/OptionalOrElseGetValue.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * (c) Copyright 2019 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline.errorprone;\n+\n+import com.google.auto.service.AutoService;\n+import com.google.errorprone.BugPattern;\n+import com.google.errorprone.BugPattern.SeverityLevel;\n+import com.google.errorprone.VisitorState;\n+import com.google.errorprone.bugpatterns.BugChecker;\n+import com.google.errorprone.bugpatterns.BugChecker.MethodInvocationTreeMatcher;\n+import com.google.errorprone.fixes.SuggestedFix;\n+import com.google.errorprone.fixes.SuggestedFixes;\n+import com.google.errorprone.matchers.CompileTimeConstantExpressionMatcher;\n+import com.google.errorprone.matchers.Description;\n+import com.google.errorprone.matchers.Matcher;\n+import com.google.errorprone.matchers.method.MethodMatchers;\n+import com.sun.source.tree.ExpressionTree;\n+import com.sun.source.tree.IdentifierTree;\n+import com.sun.source.tree.LambdaExpressionTree;\n+import com.sun.source.tree.LiteralTree;\n+import com.sun.source.tree.MemberSelectTree;\n+import com.sun.source.tree.MethodInvocationTree;\n+import com.sun.source.tree.Tree;\n+\n+@AutoService(BugChecker.class)\n+@BugPattern(\n+        name = \"OptionalOrElseGetValue\",\n+        link = \"https://github.com/palantir/gradle-baseline#baseline-error-prone-checks\",\n+        linkType = BugPattern.LinkType.CUSTOM,\n+        providesFix = BugPattern.ProvidesFix.REQUIRES_HUMAN_ATTENTION,\n+        severity = SeverityLevel.WARNING,\n+        summary = \"If lambda passed to Optional#orElseGet returns a simple expression, use Optional#orElse instead\")\n+public final class OptionalOrElseGetValue extends BugChecker implements MethodInvocationTreeMatcher {\n+\n+    private static final long serialVersionUID = 1L;\n+    private static final Matcher<ExpressionTree> OR_ELSE_GET_METHOD =\n+            MethodMatchers.instanceMethod().onExactClass(\"java.util.Optional\").named(\"orElseGet\");\n+    private static final Matcher<ExpressionTree> COMPILE_TIME_CONSTANT = new CompileTimeConstantExpressionMatcher();\n+\n+    @Override\n+    public Description matchMethodInvocation(MethodInvocationTree tree, VisitorState state) {\n+        match:\n+        {\n+            if (!OR_ELSE_GET_METHOD.matches(tree, state)) {\n+                break match;\n+            }\n+\n+            ExpressionTree orElseGetArg = tree.getArguments().get(0);\n+\n+            if (orElseGetArg.getKind() != Tree.Kind.LAMBDA_EXPRESSION) {\n+                break match;\n+            }\n+\n+            LambdaExpressionTree lambdaExpressionTree = (LambdaExpressionTree) orElseGetArg;\n+            LambdaExpressionTree.BodyKind bodyKind = lambdaExpressionTree.getBodyKind();\n+\n+            if (bodyKind != LambdaExpressionTree.BodyKind.EXPRESSION) {\n+                break match;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03c85a0dc5243e62f4888b5fc6a94c41b0e46708"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87eb1ffc467a8f5c23618b29de7e153f5a5c13c9", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/87eb1ffc467a8f5c23618b29de7e153f5a5c13c9", "committedDate": "2020-06-12T22:51:42Z", "message": "Changed to multiple returns."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4fd4b2d8018e1b7ad1e15a63322e03f07293a2b", "author": {"user": {"login": "hesselink", "name": "Erik Hesselink"}}, "url": "https://github.com/palantir/gradle-baseline/commit/c4fd4b2d8018e1b7ad1e15a63322e03f07293a2b", "committedDate": "2020-06-16T18:42:35Z", "message": "Don't wrap method declaration (#1416)\n\nWrap method declarations on parameters, not on modifiers and return type."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02303a8ac7f2257ccf896fe03fa178d23d1d6628", "author": {"user": {"login": "svc-autorelease", "name": null}}, "url": "https://github.com/palantir/gradle-baseline/commit/02303a8ac7f2257ccf896fe03fa178d23d1d6628", "committedDate": "2020-06-16T18:42:37Z", "message": "Autorelease 3.27.0"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9309b7d225757a2ffd1724db59a132ac9f391b9", "author": {"user": {"login": "svc-excavator-bot", "name": "Excavator Bot"}}, "url": "https://github.com/palantir/gradle-baseline/commit/e9309b7d225757a2ffd1724db59a132ac9f391b9", "committedDate": "2020-06-17T01:39:47Z", "message": "Excavator: Upgrade buildscript dependencies (#1417)\n\nCo-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac4956d6e85c51efa432ea8212eaffc9f02c3a68", "author": {"user": {"login": "svc-excavator-bot", "name": "Excavator Bot"}}, "url": "https://github.com/palantir/gradle-baseline/commit/ac4956d6e85c51efa432ea8212eaffc9f02c3a68", "committedDate": "2020-06-17T01:43:01Z", "message": "Excavator: Ensure consistent gradle/publish-(jar|dist).gradle files (#1418)\n\nCo-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d0cc65cd5e229032cd472a5a986116b3177da25", "author": {"user": {"login": "svc-excavator-bot", "name": "Excavator Bot"}}, "url": "https://github.com/palantir/gradle-baseline/commit/1d0cc65cd5e229032cd472a5a986116b3177da25", "committedDate": "2020-06-17T08:18:37Z", "message": "Excavator: Upgrade dependencies (#1419)\n\nCo-authored-by: svc-excavator-bot <svc-excavator-bot@palantir.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13fc3720665d0b1cb99a5b0dcf038909f988ce16", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/13fc3720665d0b1cb99a5b0dcf038909f988ce16", "committedDate": "2020-06-17T16:01:39Z", "message": "Added changelog entry."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bd2a1e0bafa7199bf2220c44e6b5dae06992519", "author": {"user": {"login": "aldexis", "name": null}}, "url": "https://github.com/palantir/gradle-baseline/commit/3bd2a1e0bafa7199bf2220c44e6b5dae06992519", "committedDate": "2020-06-17T16:36:20Z", "message": "Improve gradle-baseline-java integration with IntelliJ import (#1411)\n\nAdds the proper configuration files upon IntelliJ import of a gradle project for checkstyle and copyright.\r\n\r\nThis generates the following additional files:\r\n- .idea/copyright/profiles_settings.xml\r\n- an xml file under .idea/copyright/ per copyright file under .baseline/copyright\r\n- .idea/checkstyle-idea.xml (and adds Checkstyle-IDEA to the external dependencies) if baseline-checkstyle is applied\r\n- Either .idea/codeStyleSettings.xml or a .idea/codeStyles/ folder with the contents being copied from .baseline/idea\r\n  - If .baseline/idea/codeStyles is present, it will copy its contents, otherwise, it will fall back to .baseline/idea/intellij-java-palantir-style.xml as currently\r\n  - The fallback is using a legacy IntelliJ format and requires closing and reopening the project to be taken into account"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1c1f638c0831a727ff656501ba3b9ab1a62cf69", "author": {"user": {"login": "svc-autorelease", "name": null}}, "url": "https://github.com/palantir/gradle-baseline/commit/f1c1f638c0831a727ff656501ba3b9ab1a62cf69", "committedDate": "2020-06-17T16:36:21Z", "message": "Autorelease 3.28.0"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNTgwNjc4", "url": "https://github.com/palantir/gradle-baseline/pull/1401#pullrequestreview-432580678", "createdAt": "2020-06-17T16:39:33Z", "commit": {"oid": "13fc3720665d0b1cb99a5b0dcf038909f988ce16"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b331f105a947a94e7d5ddd7c92f9881d1ddb58a", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/3b331f105a947a94e7d5ddd7c92f9881d1ddb58a", "committedDate": "2020-06-17T17:36:44Z", "message": "Added OptionalOrElseGetConstant error prone check."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa20422e87d0a2987b628f4bcdb5739ca5827b39", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/aa20422e87d0a2987b628f4bcdb5739ca5827b39", "committedDate": "2020-06-17T17:36:44Z", "message": "Check now also covers other simple expressions. Readme updated."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15a48bfb915d47f9b9bc4662305285911ddcfbd9", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/15a48bfb915d47f9b9bc4662305285911ddcfbd9", "committedDate": "2020-06-17T17:36:44Z", "message": "Ran spotlessApply."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83993a1f3ad551ef0780dc9f970663208d36d822", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/83993a1f3ad551ef0780dc9f970663208d36d822", "committedDate": "2020-06-17T17:36:44Z", "message": "Added a compile time constant test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e135dff3af2285789cc16a40ae39afcd7a22ad96", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/e135dff3af2285789cc16a40ae39afcd7a22ad96", "committedDate": "2020-06-17T17:36:44Z", "message": "Reworded description in README."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5e0139f2a8ce666ec9b09c73ca1783fb66f1d55", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/d5e0139f2a8ce666ec9b09c73ca1783fb66f1d55", "committedDate": "2020-06-17T17:36:44Z", "message": "Changed to multiple returns."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ece87bb9acd8b4c7a5149f11f411ed6c18a268c", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/7ece87bb9acd8b4c7a5149f11f411ed6c18a268c", "committedDate": "2020-06-17T17:36:44Z", "message": "Added changelog entry."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "689346f145172db8975f1bfd05f6613c14f4a75b", "author": {"user": {"login": "aioobe", "name": "Andreas Lundblad"}}, "url": "https://github.com/palantir/gradle-baseline/commit/689346f145172db8975f1bfd05f6613c14f4a75b", "committedDate": "2020-06-17T17:37:12Z", "message": "Merge branch 'orElseGet-constant' of github.com:aioobe/gradle-baseline into orElseGet-constant"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2034, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}