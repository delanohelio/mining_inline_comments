{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0OTEzMzYy", "number": 1176, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNzoyMlrODZQ8TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNzoyMlrODZQ8TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3ODE4NTczOnYy", "diffSide": "RIGHT", "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/JunitReportsPluginSpec.groovy", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxNjoyNzoyMlrOFfjsgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxMzozMDoyOFrOFg-HqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNTAxMQ==", "bodyText": "would it make sense to just not use nebula for this one test? i.e. to go through all the ProjectBuilder stuff manually?", "url": "https://github.com/palantir/gradle-baseline/pull/1176#discussion_r368635011", "createdAt": "2020-01-20T16:27:22Z", "author": {"login": "iamdanfox"}, "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/JunitReportsPluginSpec.groovy", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline\n+\n+import nebula.test.IntegrationSpec\n+import nebula.test.functional.ExecutionResult\n+import spock.lang.Unroll\n+\n+@Unroll\n+class JunitReportsPluginSpec extends IntegrationSpec {\n+    private static final List<String> GRADLE_TEST_VERSIONS = ['5.6.4', '6.1']\n+\n+    def '#gradleVersionNumber: configures the checkstlye plugin correctly'() {\n+        setup:\n+        gradleVersion = gradleVersionNumber\n+\n+        when:\n+        buildFile << '''\n+            apply plugin: 'java'\n+            apply plugin: 'checkstyle'\n+            apply plugin: 'com.palantir.junit-reports'\n+            \n+            repositories {\n+                jcenter()\n+            }\n+        '''.stripIndent()\n+\n+        file('src/main/java/foo/Foo.java') << '''\n+            package foo;\n+            public class Foo {}\n+        '''.stripIndent()\n+\n+        ExecutionResult executionResult = runTasks('checkstyleMain')\n+\n+        then:\n+        // Running checkstyle inside nebula does not work as there are classpath problems that result in the `groovy-all`\n+        // not being on Gradle's classpath. So the best we can do to verify that the checkstyle actually ran is to\n+        // verify we get the classpath error that happens when the checkstyle class runs :(\n+        // https://github.com/gradle/gradle/issues/3995\n+        executionResult.standardError.contains 'java.lang.ClassNotFoundException: groovy.util.AntBuilder'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "272e3cee099c67091bd58217e9df2d6f04362e85"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY3NTA5Ng==", "bodyText": "I don't think we can run with a specified gradle version without using nebula?", "url": "https://github.com/palantir/gradle-baseline/pull/1176#discussion_r368675096", "createdAt": "2020-01-20T18:09:17Z", "author": {"login": "CRogers"}, "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/JunitReportsPluginSpec.groovy", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline\n+\n+import nebula.test.IntegrationSpec\n+import nebula.test.functional.ExecutionResult\n+import spock.lang.Unroll\n+\n+@Unroll\n+class JunitReportsPluginSpec extends IntegrationSpec {\n+    private static final List<String> GRADLE_TEST_VERSIONS = ['5.6.4', '6.1']\n+\n+    def '#gradleVersionNumber: configures the checkstlye plugin correctly'() {\n+        setup:\n+        gradleVersion = gradleVersionNumber\n+\n+        when:\n+        buildFile << '''\n+            apply plugin: 'java'\n+            apply plugin: 'checkstyle'\n+            apply plugin: 'com.palantir.junit-reports'\n+            \n+            repositories {\n+                jcenter()\n+            }\n+        '''.stripIndent()\n+\n+        file('src/main/java/foo/Foo.java') << '''\n+            package foo;\n+            public class Foo {}\n+        '''.stripIndent()\n+\n+        ExecutionResult executionResult = runTasks('checkstyleMain')\n+\n+        then:\n+        // Running checkstyle inside nebula does not work as there are classpath problems that result in the `groovy-all`\n+        // not being on Gradle's classpath. So the best we can do to verify that the checkstyle actually ran is to\n+        // verify we get the classpath error that happens when the checkstyle class runs :(\n+        // https://github.com/gradle/gradle/issues/3995\n+        executionResult.standardError.contains 'java.lang.ClassNotFoundException: groovy.util.AntBuilder'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNTAxMQ=="}, "originalCommit": {"oid": "272e3cee099c67091bd58217e9df2d6f04362e85"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODY3NTI5OA==", "bodyText": "This also happens in gradle test kit and the other 3rd party gradleTest framework :(", "url": "https://github.com/palantir/gradle-baseline/pull/1176#discussion_r368675298", "createdAt": "2020-01-20T18:09:57Z", "author": {"login": "CRogers"}, "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/JunitReportsPluginSpec.groovy", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline\n+\n+import nebula.test.IntegrationSpec\n+import nebula.test.functional.ExecutionResult\n+import spock.lang.Unroll\n+\n+@Unroll\n+class JunitReportsPluginSpec extends IntegrationSpec {\n+    private static final List<String> GRADLE_TEST_VERSIONS = ['5.6.4', '6.1']\n+\n+    def '#gradleVersionNumber: configures the checkstlye plugin correctly'() {\n+        setup:\n+        gradleVersion = gradleVersionNumber\n+\n+        when:\n+        buildFile << '''\n+            apply plugin: 'java'\n+            apply plugin: 'checkstyle'\n+            apply plugin: 'com.palantir.junit-reports'\n+            \n+            repositories {\n+                jcenter()\n+            }\n+        '''.stripIndent()\n+\n+        file('src/main/java/foo/Foo.java') << '''\n+            package foo;\n+            public class Foo {}\n+        '''.stripIndent()\n+\n+        ExecutionResult executionResult = runTasks('checkstyleMain')\n+\n+        then:\n+        // Running checkstyle inside nebula does not work as there are classpath problems that result in the `groovy-all`\n+        // not being on Gradle's classpath. So the best we can do to verify that the checkstyle actually ran is to\n+        // verify we get the classpath error that happens when the checkstyle class runs :(\n+        // https://github.com/gradle/gradle/issues/3995\n+        executionResult.standardError.contains 'java.lang.ClassNotFoundException: groovy.util.AntBuilder'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNTAxMQ=="}, "originalCommit": {"oid": "272e3cee099c67091bd58217e9df2d6f04362e85"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcyMzAyOA==", "bodyText": "you can https://docs.gradle.org/current/userguide/test_kit.html#sub:gradle-runner-gradle-version", "url": "https://github.com/palantir/gradle-baseline/pull/1176#discussion_r368723028", "createdAt": "2020-01-20T20:56:11Z", "author": {"login": "robert3005"}, "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/JunitReportsPluginSpec.groovy", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline\n+\n+import nebula.test.IntegrationSpec\n+import nebula.test.functional.ExecutionResult\n+import spock.lang.Unroll\n+\n+@Unroll\n+class JunitReportsPluginSpec extends IntegrationSpec {\n+    private static final List<String> GRADLE_TEST_VERSIONS = ['5.6.4', '6.1']\n+\n+    def '#gradleVersionNumber: configures the checkstlye plugin correctly'() {\n+        setup:\n+        gradleVersion = gradleVersionNumber\n+\n+        when:\n+        buildFile << '''\n+            apply plugin: 'java'\n+            apply plugin: 'checkstyle'\n+            apply plugin: 'com.palantir.junit-reports'\n+            \n+            repositories {\n+                jcenter()\n+            }\n+        '''.stripIndent()\n+\n+        file('src/main/java/foo/Foo.java') << '''\n+            package foo;\n+            public class Foo {}\n+        '''.stripIndent()\n+\n+        ExecutionResult executionResult = runTasks('checkstyleMain')\n+\n+        then:\n+        // Running checkstyle inside nebula does not work as there are classpath problems that result in the `groovy-all`\n+        // not being on Gradle's classpath. So the best we can do to verify that the checkstyle actually ran is to\n+        // verify we get the classpath error that happens when the checkstyle class runs :(\n+        // https://github.com/gradle/gradle/issues/3995\n+        executionResult.standardError.contains 'java.lang.ClassNotFoundException: groovy.util.AntBuilder'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNTAxMQ=="}, "originalCommit": {"oid": "272e3cee099c67091bd58217e9df2d6f04362e85"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODcyMzI4Mg==", "bodyText": "also if you disable debug it will not cause issues. Gradle test runner debug mode is a little too magical on your classpath", "url": "https://github.com/palantir/gradle-baseline/pull/1176#discussion_r368723282", "createdAt": "2020-01-20T20:57:04Z", "author": {"login": "robert3005"}, "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/JunitReportsPluginSpec.groovy", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline\n+\n+import nebula.test.IntegrationSpec\n+import nebula.test.functional.ExecutionResult\n+import spock.lang.Unroll\n+\n+@Unroll\n+class JunitReportsPluginSpec extends IntegrationSpec {\n+    private static final List<String> GRADLE_TEST_VERSIONS = ['5.6.4', '6.1']\n+\n+    def '#gradleVersionNumber: configures the checkstlye plugin correctly'() {\n+        setup:\n+        gradleVersion = gradleVersionNumber\n+\n+        when:\n+        buildFile << '''\n+            apply plugin: 'java'\n+            apply plugin: 'checkstyle'\n+            apply plugin: 'com.palantir.junit-reports'\n+            \n+            repositories {\n+                jcenter()\n+            }\n+        '''.stripIndent()\n+\n+        file('src/main/java/foo/Foo.java') << '''\n+            package foo;\n+            public class Foo {}\n+        '''.stripIndent()\n+\n+        ExecutionResult executionResult = runTasks('checkstyleMain')\n+\n+        then:\n+        // Running checkstyle inside nebula does not work as there are classpath problems that result in the `groovy-all`\n+        // not being on Gradle's classpath. So the best we can do to verify that the checkstyle actually ran is to\n+        // verify we get the classpath error that happens when the checkstyle class runs :(\n+        // https://github.com/gradle/gradle/issues/3995\n+        executionResult.standardError.contains 'java.lang.ClassNotFoundException: groovy.util.AntBuilder'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNTAxMQ=="}, "originalCommit": {"oid": "272e3cee099c67091bd58217e9df2d6f04362e85"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDExNjUyMA==", "bodyText": "Well, I gave using testkit/ProjectBuilder directly a go and I just couldn't get it to work (kept saying the existing code worked on Gradle 6.1) :( So this (or no test) may have to suffice.", "url": "https://github.com/palantir/gradle-baseline/pull/1176#discussion_r370116520", "createdAt": "2020-01-23T13:30:28Z", "author": {"login": "CRogers"}, "path": "gradle-baseline-java/src/test/groovy/com/palantir/baseline/JunitReportsPluginSpec.groovy", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * (c) Copyright 2020 Palantir Technologies Inc. All rights reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.palantir.baseline\n+\n+import nebula.test.IntegrationSpec\n+import nebula.test.functional.ExecutionResult\n+import spock.lang.Unroll\n+\n+@Unroll\n+class JunitReportsPluginSpec extends IntegrationSpec {\n+    private static final List<String> GRADLE_TEST_VERSIONS = ['5.6.4', '6.1']\n+\n+    def '#gradleVersionNumber: configures the checkstlye plugin correctly'() {\n+        setup:\n+        gradleVersion = gradleVersionNumber\n+\n+        when:\n+        buildFile << '''\n+            apply plugin: 'java'\n+            apply plugin: 'checkstyle'\n+            apply plugin: 'com.palantir.junit-reports'\n+            \n+            repositories {\n+                jcenter()\n+            }\n+        '''.stripIndent()\n+\n+        file('src/main/java/foo/Foo.java') << '''\n+            package foo;\n+            public class Foo {}\n+        '''.stripIndent()\n+\n+        ExecutionResult executionResult = runTasks('checkstyleMain')\n+\n+        then:\n+        // Running checkstyle inside nebula does not work as there are classpath problems that result in the `groovy-all`\n+        // not being on Gradle's classpath. So the best we can do to verify that the checkstyle actually ran is to\n+        // verify we get the classpath error that happens when the checkstyle class runs :(\n+        // https://github.com/gradle/gradle/issues/3995\n+        executionResult.standardError.contains 'java.lang.ClassNotFoundException: groovy.util.AntBuilder'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODYzNTAxMQ=="}, "originalCommit": {"oid": "272e3cee099c67091bd58217e9df2d6f04362e85"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2120, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}