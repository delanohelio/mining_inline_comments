{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MjY0NTY4", "number": 612, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoxMzo0MFrODoWXWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTozNzowN1rODoYy7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjM2MDU3OnYy", "diffSide": "RIGHT", "path": "whois-nrtm/src/test/java/net/ripe/db/whois/nrtm/NrtmConnectionPerIpLimitHandlerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoxMzo0MFrOF219Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoxMzo0MFrOF219Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MTQzOQ==", "bodyText": "Please fix your IDE settings not to use \"star\" for imports, it's harder to diff changes", "url": "https://github.com/RIPE-NCC/whois/pull/612#discussion_r393051439", "createdAt": "2020-03-16T14:13:40Z", "author": {"login": "eshryane"}, "path": "whois-nrtm/src/test/java/net/ripe/db/whois/nrtm/NrtmConnectionPerIpLimitHandlerTest.java", "diffHunk": "@@ -11,14 +13,14 @@\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.mockito.ArgumentMatcher;\n+import org.mockito.Matchers;\n import org.mockito.Mock;\n import org.mockito.runners.MockitoJUnitRunner;\n \n import java.net.Inet4Address;\n import java.net.InetSocketAddress;\n \n-import static org.mockito.Matchers.anyObject;\n-import static org.mockito.Matchers.argThat;\n+import static org.mockito.Matchers.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f36fddbc1d6a46861c48a78ce9c7d7550e3b81f8"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjM3MTU5OnYy", "diffSide": "RIGHT", "path": "whois-nrtm/src/main/java/net/ripe/db/whois/nrtm/NrtmConnectionPerIpLimitHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoxNToyM1rOF22Ebw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoxNToyM1rOF22Ebw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1MzI5NQ==", "bodyText": "This method is misleading, the name suggests there are no side-effects, but then it can close the connection. The method does multiple things, and it's only called once - I think it's clearer to inline it into the channelOpen method()?", "url": "https://github.com/RIPE-NCC/whois/pull/612#discussion_r393053295", "createdAt": "2020-03-16T14:15:23Z", "author": {"login": "eshryane"}, "path": "whois-nrtm/src/main/java/net/ripe/db/whois/nrtm/NrtmConnectionPerIpLimitHandler.java", "diffHunk": "@@ -70,4 +72,23 @@ private boolean connectionsExceeded(final InetAddress remoteAddresss) {\n         final Integer count = connectionCounter.increment(remoteAddresss);\n         return (count != null && count > maxConnectionsPerIp);\n     }\n+\n+    private boolean canOpenConnection(final Channel channel, final InetAddress remoteAddress) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f36fddbc1d6a46861c48a78ce9c7d7550e3b81f8"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjM5NDY5OnYy", "diffSide": "RIGHT", "path": "whois-nrtm/src/main/java/net/ripe/db/whois/nrtm/NrtmConnectionPerIpLimitHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDoxODo0OVrOF22SjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNDo1OTozN1rOF24Q6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1NjkwOA==", "bodyText": "Can you move the ACL logic into a separate class? Look at the #596 PR for an example (there's a separate class for AccessControlList).  It's confusing that this Handler now also includes the ACL logic, it should be separate.", "url": "https://github.com/RIPE-NCC/whois/pull/612#discussion_r393056908", "createdAt": "2020-03-16T14:18:49Z", "author": {"login": "eshryane"}, "path": "whois-nrtm/src/main/java/net/ripe/db/whois/nrtm/NrtmConnectionPerIpLimitHandler.java", "diffHunk": "@@ -23,29 +23,31 @@\n @ChannelHandler.Sharable\n public class NrtmConnectionPerIpLimitHandler extends SimpleChannelUpstreamHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f36fddbc1d6a46861c48a78ce9c7d7550e3b81f8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA2OTUwNg==", "bodyText": "Earlier I thought of moving it to a different class but this class name is connection limit perIp handler and acl also works on per Ip limit so I put the logic in same class, but I not a big deal to put it in a seperate class if it makes it more readable", "url": "https://github.com/RIPE-NCC/whois/pull/612#discussion_r393069506", "createdAt": "2020-03-16T14:32:06Z", "author": {"login": "maggarwal13"}, "path": "whois-nrtm/src/main/java/net/ripe/db/whois/nrtm/NrtmConnectionPerIpLimitHandler.java", "diffHunk": "@@ -23,29 +23,31 @@\n @ChannelHandler.Sharable\n public class NrtmConnectionPerIpLimitHandler extends SimpleChannelUpstreamHandler {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1NjkwOA=="}, "originalCommit": {"oid": "f36fddbc1d6a46861c48a78ce9c7d7550e3b81f8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA4OTI1Ng==", "bodyText": "Great, thanks!", "url": "https://github.com/RIPE-NCC/whois/pull/612#discussion_r393089256", "createdAt": "2020-03-16T14:59:37Z", "author": {"login": "eshryane"}, "path": "whois-nrtm/src/main/java/net/ripe/db/whois/nrtm/NrtmConnectionPerIpLimitHandler.java", "diffHunk": "@@ -23,29 +23,31 @@\n @ChannelHandler.Sharable\n public class NrtmConnectionPerIpLimitHandler extends SimpleChannelUpstreamHandler {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzA1NjkwOA=="}, "originalCommit": {"oid": "f36fddbc1d6a46861c48a78ce9c7d7550e3b81f8"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzNjc1ODg2OnYy", "diffSide": "RIGHT", "path": "whois-nrtm/src/test/java/net/ripe/db/whois/nrtm/integration/NrtmClientACLLimitTestIntegration.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNTozNzowN1rOF254yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzo0NzoxN1rOF3c-1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExNTg1MA==", "bodyText": "Can you add one \"success\" test, where the client isn't blocked or denied by ACL?", "url": "https://github.com/RIPE-NCC/whois/pull/612#discussion_r393115850", "createdAt": "2020-03-16T15:37:07Z", "author": {"login": "eshryane"}, "path": "whois-nrtm/src/test/java/net/ripe/db/whois/nrtm/integration/NrtmClientACLLimitTestIntegration.java", "diffHunk": "@@ -0,0 +1,103 @@\n+package net.ripe.db.whois.nrtm.integration;\n+\n+import com.jayway.awaitility.Awaitility;\n+import com.jayway.awaitility.Duration;\n+import net.ripe.db.whois.common.IntegrationTest;\n+import net.ripe.db.whois.common.dao.jdbc.DatabaseHelper;\n+import net.ripe.db.whois.common.rpsl.RpslObject;\n+import net.ripe.db.whois.common.source.SourceContext;\n+import net.ripe.db.whois.nrtm.NrtmServer;\n+import net.ripe.db.whois.nrtm.client.NrtmImporter;\n+import net.ripe.db.whois.query.acl.AccessControlListManager;\n+import net.ripe.db.whois.query.acl.IpResourceConfiguration;\n+import net.ripe.db.whois.query.support.TestPersonalObjectAccounting;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.annotation.DirtiesContext;\n+\n+import java.net.InetAddress;\n+\n+@Category(IntegrationTest.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8188fc5423e13d6679bf0491bfc1f6854532cff0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE0MDY4Nw==", "bodyText": "Have added a success case in junit.\nActually this integration test does not make sense here. As we are just waiting for 5 seconds and checking the nrtm client thread count > 0, (copied from NrtmClientInvalidHostTestIntegration). We should be deleting this integration test and same for NrtmClientInvalidHostTestIntegration or find a different way to check if channel is open or not.\nInfact NrtmClientTestIntegration also does not do much of a testing or  am I missing something?", "url": "https://github.com/RIPE-NCC/whois/pull/612#discussion_r393140687", "createdAt": "2020-03-16T16:12:06Z", "author": {"login": "maggarwal13"}, "path": "whois-nrtm/src/test/java/net/ripe/db/whois/nrtm/integration/NrtmClientACLLimitTestIntegration.java", "diffHunk": "@@ -0,0 +1,103 @@\n+package net.ripe.db.whois.nrtm.integration;\n+\n+import com.jayway.awaitility.Awaitility;\n+import com.jayway.awaitility.Duration;\n+import net.ripe.db.whois.common.IntegrationTest;\n+import net.ripe.db.whois.common.dao.jdbc.DatabaseHelper;\n+import net.ripe.db.whois.common.rpsl.RpslObject;\n+import net.ripe.db.whois.common.source.SourceContext;\n+import net.ripe.db.whois.nrtm.NrtmServer;\n+import net.ripe.db.whois.nrtm.client.NrtmImporter;\n+import net.ripe.db.whois.query.acl.AccessControlListManager;\n+import net.ripe.db.whois.query.acl.IpResourceConfiguration;\n+import net.ripe.db.whois.query.support.TestPersonalObjectAccounting;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.annotation.DirtiesContext;\n+\n+import java.net.InetAddress;\n+\n+@Category(IntegrationTest.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExNTg1MA=="}, "originalCommit": {"oid": "8188fc5423e13d6679bf0491bfc1f6854532cff0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzU2NDMzOQ==", "bodyText": "for NrtmClientTestIntegration  we inject different jdbctemplate that is fine then", "url": "https://github.com/RIPE-NCC/whois/pull/612#discussion_r393564339", "createdAt": "2020-03-17T10:01:44Z", "author": {"login": "maggarwal13"}, "path": "whois-nrtm/src/test/java/net/ripe/db/whois/nrtm/integration/NrtmClientACLLimitTestIntegration.java", "diffHunk": "@@ -0,0 +1,103 @@\n+package net.ripe.db.whois.nrtm.integration;\n+\n+import com.jayway.awaitility.Awaitility;\n+import com.jayway.awaitility.Duration;\n+import net.ripe.db.whois.common.IntegrationTest;\n+import net.ripe.db.whois.common.dao.jdbc.DatabaseHelper;\n+import net.ripe.db.whois.common.rpsl.RpslObject;\n+import net.ripe.db.whois.common.source.SourceContext;\n+import net.ripe.db.whois.nrtm.NrtmServer;\n+import net.ripe.db.whois.nrtm.client.NrtmImporter;\n+import net.ripe.db.whois.query.acl.AccessControlListManager;\n+import net.ripe.db.whois.query.acl.IpResourceConfiguration;\n+import net.ripe.db.whois.query.support.TestPersonalObjectAccounting;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.annotation.DirtiesContext;\n+\n+import java.net.InetAddress;\n+\n+@Category(IntegrationTest.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExNTg1MA=="}, "originalCommit": {"oid": "8188fc5423e13d6679bf0491bfc1f6854532cff0"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY5MDgzOA==", "bodyText": "Thanks for fixing the tests", "url": "https://github.com/RIPE-NCC/whois/pull/612#discussion_r393690838", "createdAt": "2020-03-17T13:47:17Z", "author": {"login": "eshryane"}, "path": "whois-nrtm/src/test/java/net/ripe/db/whois/nrtm/integration/NrtmClientACLLimitTestIntegration.java", "diffHunk": "@@ -0,0 +1,103 @@\n+package net.ripe.db.whois.nrtm.integration;\n+\n+import com.jayway.awaitility.Awaitility;\n+import com.jayway.awaitility.Duration;\n+import net.ripe.db.whois.common.IntegrationTest;\n+import net.ripe.db.whois.common.dao.jdbc.DatabaseHelper;\n+import net.ripe.db.whois.common.rpsl.RpslObject;\n+import net.ripe.db.whois.common.source.SourceContext;\n+import net.ripe.db.whois.nrtm.NrtmServer;\n+import net.ripe.db.whois.nrtm.client.NrtmImporter;\n+import net.ripe.db.whois.query.acl.AccessControlListManager;\n+import net.ripe.db.whois.query.acl.IpResourceConfiguration;\n+import net.ripe.db.whois.query.support.TestPersonalObjectAccounting;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.junit.experimental.categories.Category;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.test.annotation.DirtiesContext;\n+\n+import java.net.InetAddress;\n+\n+@Category(IntegrationTest.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzExNTg1MA=="}, "originalCommit": {"oid": "8188fc5423e13d6679bf0491bfc1f6854532cff0"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4625, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}