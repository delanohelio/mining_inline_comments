{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NDc5MjEz", "number": 629, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjozMTozMVrOD1wGKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjozMzoyMFrOD1wI3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Njg5MTI4OnYy", "diffSide": "RIGHT", "path": "whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjozMTozMVrOGLVdyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjo0NjozN1rOGLWBTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzOTIxMA==", "bodyText": "update.getUpdatedObject().getValuesForAttribute(AttributeType.MNT_BY); is a bit cleaner?", "url": "https://github.com/RIPE-NCC/whois/pull/629#discussion_r414539210", "createdAt": "2020-04-24T12:31:31Z", "author": {"login": "eshryane"}, "path": "whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package net.ripe.db.whois.update.handler.validator.poem;\n+\n+import com.google.common.collect.ImmutableList;\n+import net.ripe.db.whois.common.domain.CIString;\n+import net.ripe.db.whois.common.rpsl.AttributeType;\n+import net.ripe.db.whois.common.rpsl.ObjectType;\n+import net.ripe.db.whois.common.rpsl.RpslAttribute;\n+import net.ripe.db.whois.update.domain.Action;\n+import net.ripe.db.whois.update.domain.PreparedUpdate;\n+import net.ripe.db.whois.update.domain.UpdateContext;\n+import net.ripe.db.whois.update.domain.UpdateMessages;\n+import net.ripe.db.whois.update.handler.validator.BusinessRuleValidator;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+\n+import static net.ripe.db.whois.common.domain.CIString.ciString;\n+\n+@Component\n+public class PoeticFormHasOnlyDbmMaintainerValidator implements BusinessRuleValidator {\n+\n+    private static final ImmutableList<Action> ACTIONS = ImmutableList.of(Action.CREATE, Action.MODIFY);\n+    private static final ImmutableList<ObjectType> TYPES = ImmutableList.of(ObjectType.POETIC_FORM);\n+\n+    private static final CIString POETC_FORM_MAINTAINER = ciString(\"RIPE-DBM-MNT\");\n+\n+    @Override\n+    public void validate(final PreparedUpdate update, final UpdateContext updateContext) {\n+        final List<RpslAttribute> mntByAttribute = update.getUpdatedObject().findAttributes(AttributeType.MNT_BY);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "111046b4408f64a125983f4fa7e918c56a3cf3c6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU0NzYyMQ==", "bodyText": "updateContext.addMessage expects RpslAttribute and this will return CIstring. Also with set I need to then use iterator.", "url": "https://github.com/RIPE-NCC/whois/pull/629#discussion_r414547621", "createdAt": "2020-04-24T12:45:32Z", "author": {"login": "maggarwal13"}, "path": "whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package net.ripe.db.whois.update.handler.validator.poem;\n+\n+import com.google.common.collect.ImmutableList;\n+import net.ripe.db.whois.common.domain.CIString;\n+import net.ripe.db.whois.common.rpsl.AttributeType;\n+import net.ripe.db.whois.common.rpsl.ObjectType;\n+import net.ripe.db.whois.common.rpsl.RpslAttribute;\n+import net.ripe.db.whois.update.domain.Action;\n+import net.ripe.db.whois.update.domain.PreparedUpdate;\n+import net.ripe.db.whois.update.domain.UpdateContext;\n+import net.ripe.db.whois.update.domain.UpdateMessages;\n+import net.ripe.db.whois.update.handler.validator.BusinessRuleValidator;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+\n+import static net.ripe.db.whois.common.domain.CIString.ciString;\n+\n+@Component\n+public class PoeticFormHasOnlyDbmMaintainerValidator implements BusinessRuleValidator {\n+\n+    private static final ImmutableList<Action> ACTIONS = ImmutableList.of(Action.CREATE, Action.MODIFY);\n+    private static final ImmutableList<ObjectType> TYPES = ImmutableList.of(ObjectType.POETIC_FORM);\n+\n+    private static final CIString POETC_FORM_MAINTAINER = ciString(\"RIPE-DBM-MNT\");\n+\n+    @Override\n+    public void validate(final PreparedUpdate update, final UpdateContext updateContext) {\n+        final List<RpslAttribute> mntByAttribute = update.getUpdatedObject().findAttributes(AttributeType.MNT_BY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzOTIxMA=="}, "originalCommit": {"oid": "111046b4408f64a125983f4fa7e918c56a3cf3c6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU0ODMwMg==", "bodyText": "OK! Thanks for explaining", "url": "https://github.com/RIPE-NCC/whois/pull/629#discussion_r414548302", "createdAt": "2020-04-24T12:46:37Z", "author": {"login": "eshryane"}, "path": "whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package net.ripe.db.whois.update.handler.validator.poem;\n+\n+import com.google.common.collect.ImmutableList;\n+import net.ripe.db.whois.common.domain.CIString;\n+import net.ripe.db.whois.common.rpsl.AttributeType;\n+import net.ripe.db.whois.common.rpsl.ObjectType;\n+import net.ripe.db.whois.common.rpsl.RpslAttribute;\n+import net.ripe.db.whois.update.domain.Action;\n+import net.ripe.db.whois.update.domain.PreparedUpdate;\n+import net.ripe.db.whois.update.domain.UpdateContext;\n+import net.ripe.db.whois.update.domain.UpdateMessages;\n+import net.ripe.db.whois.update.handler.validator.BusinessRuleValidator;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+\n+import static net.ripe.db.whois.common.domain.CIString.ciString;\n+\n+@Component\n+public class PoeticFormHasOnlyDbmMaintainerValidator implements BusinessRuleValidator {\n+\n+    private static final ImmutableList<Action> ACTIONS = ImmutableList.of(Action.CREATE, Action.MODIFY);\n+    private static final ImmutableList<ObjectType> TYPES = ImmutableList.of(ObjectType.POETIC_FORM);\n+\n+    private static final CIString POETC_FORM_MAINTAINER = ciString(\"RIPE-DBM-MNT\");\n+\n+    @Override\n+    public void validate(final PreparedUpdate update, final UpdateContext updateContext) {\n+        final List<RpslAttribute> mntByAttribute = update.getUpdatedObject().findAttributes(AttributeType.MNT_BY);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzOTIxMA=="}, "originalCommit": {"oid": "111046b4408f64a125983f4fa7e918c56a3cf3c6"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Njg5MzY4OnYy", "diffSide": "RIGHT", "path": "whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjozMjowNVrOGLVfKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjozMjowNVrOGLVfKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzOTU2Mw==", "bodyText": "Typo, \"POETIC\"", "url": "https://github.com/RIPE-NCC/whois/pull/629#discussion_r414539563", "createdAt": "2020-04-24T12:32:05Z", "author": {"login": "eshryane"}, "path": "whois-update/src/main/java/net/ripe/db/whois/update/handler/validator/poem/PoeticFormHasOnlyDbmMaintainerValidator.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package net.ripe.db.whois.update.handler.validator.poem;\n+\n+import com.google.common.collect.ImmutableList;\n+import net.ripe.db.whois.common.domain.CIString;\n+import net.ripe.db.whois.common.rpsl.AttributeType;\n+import net.ripe.db.whois.common.rpsl.ObjectType;\n+import net.ripe.db.whois.common.rpsl.RpslAttribute;\n+import net.ripe.db.whois.update.domain.Action;\n+import net.ripe.db.whois.update.domain.PreparedUpdate;\n+import net.ripe.db.whois.update.domain.UpdateContext;\n+import net.ripe.db.whois.update.domain.UpdateMessages;\n+import net.ripe.db.whois.update.handler.validator.BusinessRuleValidator;\n+import org.springframework.stereotype.Component;\n+\n+import java.util.List;\n+\n+import static net.ripe.db.whois.common.domain.CIString.ciString;\n+\n+@Component\n+public class PoeticFormHasOnlyDbmMaintainerValidator implements BusinessRuleValidator {\n+\n+    private static final ImmutableList<Action> ACTIONS = ImmutableList.of(Action.CREATE, Action.MODIFY);\n+    private static final ImmutableList<ObjectType> TYPES = ImmutableList.of(ObjectType.POETIC_FORM);\n+\n+    private static final CIString POETC_FORM_MAINTAINER = ciString(\"RIPE-DBM-MNT\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "111046b4408f64a125983f4fa7e918c56a3cf3c6"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Njg5ODIzOnYy", "diffSide": "RIGHT", "path": "whois-update/src/main/java/net/ripe/db/whois/update/domain/UpdateMessages.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjozMzoyMFrOGLVh5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjozMzoyMFrOGLVh5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU0MDI2Mg==", "bodyText": "Reorder the sentence? \"Poetic-form must only be maintained by..\"", "url": "https://github.com/RIPE-NCC/whois/pull/629#discussion_r414540262", "createdAt": "2020-04-24T12:33:20Z", "author": {"login": "eshryane"}, "path": "whois-update/src/main/java/net/ripe/db/whois/update/domain/UpdateMessages.java", "diffHunk": "@@ -406,6 +406,10 @@ public static Message poemRequiresPublicMaintainer() {\n         return new Message(Type.ERROR, \"Poem must be maintained by 'LIM-MNT', which has a public password\");\n     }\n \n+    public static Message poeticFormRequiresDbmMaintainer() {\n+        return new Message(Type.ERROR, \"Poetic-form must be maintained by only 'RIPE-DBM-MNT'\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "111046b4408f64a125983f4fa7e918c56a3cf3c6"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4632, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}