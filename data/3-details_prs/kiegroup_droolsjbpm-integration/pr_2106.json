{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNDA1ODcx", "number": 2106, "title": "[RHPAM-2911] Null fields should not be included in JSON response", "bodyText": "New fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization", "createdAt": "2020-05-26T19:17:45Z", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2106", "merged": true, "mergeCommit": {"oid": "933120d759fae5f521cb8fb39f9d5edb16589d5e"}, "closed": true, "closedAt": "2020-06-04T06:55:21Z", "author": {"login": "fjtirado"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclKWdqABqjMzNzUyMDQxMTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcn4G4sAFqTQyNDEzNzMxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70145bdb1ed6d7b35b46061c8c7fe705ac89ed91", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/70145bdb1ed6d7b35b46061c8c7fe705ac89ed91", "committedDate": "2020-05-26T19:16:26Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}, "afterCommit": {"oid": "d62de631cc7b9aabe79fe5da129fb4d56601dabd", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/d62de631cc7b9aabe79fe5da129fb4d56601dabd", "committedDate": "2020-05-26T20:04:25Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4OTE3MDI4", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2106#pullrequestreview-418917028", "createdAt": "2020-05-27T07:17:09Z", "commit": {"oid": "d62de631cc7b9aabe79fe5da129fb4d56601dabd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzoxNzowOVrOGa8XLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzoxNzowOVrOGa8XLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkwNTEzMg==", "bodyText": "reuse and set this in to the that class\n\n  \n    \n      droolsjbpm-integration/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/marshalling/MarshallingFormat.java\n    \n    \n         Line 60\n      in\n      56c0abc\n    \n    \n    \n    \n\n        \n          \n           public static boolean isStrictType(String type) {", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2106#discussion_r430905132", "createdAt": "2020-05-27T07:17:09Z", "author": {"login": "elguardian"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/marshal/MarshallerHelper.java", "diffHunk": "@@ -84,9 +83,23 @@ public String marshal(String marshallingFormat, Object entity) {\n         \tserverMarshallers.put(format, marshaller);\n         }\n \n-        return marshaller.marshall(entity, Collections.singletonMap(MARSHALLER_PARAMETER_STRICT, isStrictType(marshallingFormat)));\n+        return marshaller.marshall(entity, buildParameters(marshallingFormat));\n+    }\n+    \n+    \n+    private  Map<String,Object> buildParameters(String contentType)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62de631cc7b9aabe79fe5da129fb4d56601dabd"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4OTE3Mzgy", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2106#pullrequestreview-418917382", "createdAt": "2020-05-27T07:17:42Z", "commit": {"oid": "d62de631cc7b9aabe79fe5da129fb4d56601dabd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzoxNzo0MlrOGa8YMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwNzoxNzo0MlrOGa8YMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDkwNTM5Mg==", "bodyText": "do some extra calls to check the reset of the thead local variable is working.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2106#discussion_r430905392", "createdAt": "2020-05-27T07:17:42Z", "author": {"login": "elguardian"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/test/java/org/kie/server/services/impl/marshal/MarshallerHelperTest.java", "diffHunk": "@@ -218,6 +217,25 @@ public void testJsonUnmarshallProcessInstanceQueryFilterSpec() {\n \t\tassertThat(expectedPiQfs, new ReflectionEquals(unmarshalledPiQfs));\n \t}\n \t\n+\t\n+\t@Test\n+    public void testJsonUnmarshallNull() throws JSONException {   \n+\t    KieServerRegistry kieServerRegistryMock = Mockito.mock(KieServerRegistry.class);\n+        Set<Class<?>> extraClasses = new HashSet<>();\n+        extraClasses.add(QueryFilterSpec.class);\n+        Mockito.when(kieServerRegistryMock.getExtraClasses()).thenReturn(extraClasses);\n+        JSONAssert.assertEquals(\"{\\\"order-by\\\" : null, \\\"order-asc\\\" : false, \\\"query-params\\\" : null, \\\"result-column-mapping\\\" : null}\", new MarshallerHelper(kieServerRegistryMock).marshal(\"application/json\", new QueryFilterSpecBuilder().get()), false);   ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62de631cc7b9aabe79fe5da129fb4d56601dabd"}, "originalPosition": 43}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4OTE4MDQ4", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2106#pullrequestreview-418918048", "createdAt": "2020-05-27T07:18:44Z", "commit": {"oid": "d62de631cc7b9aabe79fe5da129fb4d56601dabd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d62de631cc7b9aabe79fe5da129fb4d56601dabd", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/d62de631cc7b9aabe79fe5da129fb4d56601dabd", "committedDate": "2020-05-26T20:04:25Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}, "afterCommit": {"oid": "8eb8e3c646b111f66fadc4cdc38d1a180cf613ba", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/8eb8e3c646b111f66fadc4cdc38d1a180cf613ba", "committedDate": "2020-05-27T10:37:19Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8eb8e3c646b111f66fadc4cdc38d1a180cf613ba", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/8eb8e3c646b111f66fadc4cdc38d1a180cf613ba", "committedDate": "2020-05-27T10:37:19Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}, "afterCommit": {"oid": "0890d3043d230528669b2d50d809cd741d9ac23f", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/0890d3043d230528669b2d50d809cd741d9ac23f", "committedDate": "2020-05-27T10:41:25Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0890d3043d230528669b2d50d809cd741d9ac23f", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/0890d3043d230528669b2d50d809cd741d9ac23f", "committedDate": "2020-05-27T10:41:25Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}, "afterCommit": {"oid": "b471449d8e44940ad8fe802ae10e4420b3362b9b", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b471449d8e44940ad8fe802ae10e4420b3362b9b", "committedDate": "2020-05-27T11:55:08Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b471449d8e44940ad8fe802ae10e4420b3362b9b", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b471449d8e44940ad8fe802ae10e4420b3362b9b", "committedDate": "2020-05-27T11:55:08Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}, "afterCommit": {"oid": "aac5c12ba41ccc12532de3463cb379812cec8539", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/aac5c12ba41ccc12532de3463cb379812cec8539", "committedDate": "2020-05-29T07:34:51Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNzUxOTcw", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2106#pullrequestreview-420751970", "createdAt": "2020-05-29T08:27:30Z", "commit": {"oid": "aac5c12ba41ccc12532de3463cb379812cec8539"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODoyNzozMFrOGcTiEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwODoyOTo1OVrOGcTnPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzMzMzMQ==", "bodyText": "This will make this very slow at integration test level (veeeeeeeeery slow).  and you are testing the full logic of marshalling not really checking whether those fields are being retrieved or not.\nYou need to check directly against the kie-server and see the string response whether thoses fields are returned o not.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2106#discussion_r432333331", "createdAt": "2020-05-29T08:27:30Z", "author": {"login": "elguardian"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-common/src/main/java/org/kie/server/integrationtests/shared/basetests/RestJmsSharedBaseIntegrationTest.java", "diffHunk": "@@ -47,16 +50,14 @@\n     @Parameterized.Parameters(name = \"{index}: {0} {1}\")\n     public static Collection<Object[]> data() {\n         KieServicesConfiguration restConfiguration = createKieServicesRestConfiguration();\n-\n         Collection<Object[]> parameterData = new ArrayList<Object[]>(Arrays.asList(new Object[][]\n                         {\n                                 {MarshallingFormat.JAXB, restConfiguration},\n-                                {MarshallingFormat.JSON, restConfiguration},\n+                                {MarshallingFormat.JSON,  createKieServicesRestConfiguration(Collections.singletonMap(KieServerConstants.KIE_CONTENT_TYPE_HEADER, \"application/json; fields=not_null\"))},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aac5c12ba41ccc12532de3463cb379812cec8539"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzMzc2MA==", "bodyText": "@gmunozfe how was your trick to make the split(\",\") more robust ? split(\"\\s*,\\s*) ?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2106#discussion_r432333760", "createdAt": "2020-05-29T08:28:18Z", "author": {"login": "elguardian"}, "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/marshalling/MarshallingFormat.java", "diffHunk": "@@ -57,19 +58,24 @@ public static MarshallingFormat fromId(int id) {\n         }\n     }\n \n+    \n     public static boolean isStrictType(String type) {\n+        String strictParam  = (String)buildParameters(type).get(Marshaller.MARSHALLER_PARAMETER_STRICT);\n+        return strictParam != null && Boolean.parseBoolean(strictParam);\n+    }\n+    \n+    public static Map<String,Object> buildParameters(String contentType)\n+    {\n         int idx;\n-        if ((idx = type.indexOf(';')) < 0 || (idx + 1) == type.length()) {\n-            return false;\n-        }\n-        // we map parameter=1, pararmeter=2,.... into a map\n-        Map<String, String> parameters = Arrays.asList(type.substring(idx + 1).split(\",\"))\n-                                               .stream()\n-                                               .filter(e -> e.split(\"=\").length > 1) // remove bad parameters\n-                                               .map(e -> e.split(\"=\"))\n-                                               .collect(Collectors.toMap(e -> ((String[]) e)[0].trim(), e -> ((String[]) e)[1]));\n-        return Boolean.parseBoolean(parameters.get(Marshaller.MARSHALLER_PARAMETER_STRICT));\n+        return ((idx = contentType.indexOf(';')) < 0 || (idx + 1) == contentType.length()) \n+                ? Collections.emptyMap() \n+                : Arrays.stream(contentType.substring(idx + 1).split(\",\")).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aac5c12ba41ccc12532de3463cb379812cec8539"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMzNDY1Mw==", "bodyText": "this is nitpicking.... what about calling the parameter filter : none | not_null or something of the sort. wdyt ?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2106#discussion_r432334653", "createdAt": "2020-05-29T08:29:59Z", "author": {"login": "elguardian"}, "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/marshalling/json/JSONMarshaller.java", "diffHunk": "@@ -93,6 +94,8 @@\n     private static final Logger logger = LoggerFactory.getLogger(MarshallerFactory.class);\n \n     private static final boolean STRICT_ID_FORMAT = Boolean.parseBoolean(System.getProperty(KieServerConstants.KIE_SERVER_STRICT_ID_FORMAT, \"false\"));\n+    private static final String FIELDS = \"fields\";\n+    private static final String NOT_NULL = \"not_null\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aac5c12ba41ccc12532de3463cb379812cec8539"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aac5c12ba41ccc12532de3463cb379812cec8539", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/aac5c12ba41ccc12532de3463cb379812cec8539", "committedDate": "2020-05-29T07:34:51Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}, "afterCommit": {"oid": "4d4bac47af6ce530f1d383cdf82cac68830459ae", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/4d4bac47af6ce530f1d383cdf82cac68830459ae", "committedDate": "2020-05-29T16:08:52Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d4bac47af6ce530f1d383cdf82cac68830459ae", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/4d4bac47af6ce530f1d383cdf82cac68830459ae", "committedDate": "2020-05-29T16:08:52Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}, "afterCommit": {"oid": "c521f3afb7974fb84e0f975c647835d274ba4d79", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c521f3afb7974fb84e0f975c647835d274ba4d79", "committedDate": "2020-05-29T16:31:22Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTM1MDg0", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2106#pullrequestreview-421535084", "createdAt": "2020-05-31T22:53:49Z", "commit": {"oid": "c521f3afb7974fb84e0f975c647835d274ba4d79"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQyMjo1Mzo0OVrOGc7x5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQyMjo1Mzo0OVrOGc7x5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk5Mjc0Mw==", "bodyText": "This casting to boolean is failing when receiving a String parameter (true) due to changes for invoking buildParameters instead of isStrictType .\nFailing test is IdentifierJbpmRestIntegrationTest.testBasicJbpmRequest\nIf always receives a String, it should be:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            jsonContext.get().setWrap((boolean) parameters.get(MARSHALLER_PARAMETER_STRICT));\n          \n          \n            \n                            jsonContext.get().setWrap(Boolean.parseBoolean((string) parameters.get(MARSHALLER_PARAMETER_STRICT)));", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2106#discussion_r432992743", "createdAt": "2020-05-31T22:53:49Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/marshalling/json/JSONMarshaller.java", "diffHunk": "@@ -306,6 +323,10 @@ public String marshall(Object input, Map<String, Object> parameters) {\n             if (parameters.containsKey(MARSHALLER_PARAMETER_STRICT)) {\n                 jsonContext.get().setWrap((boolean) parameters.get(MARSHALLER_PARAMETER_STRICT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c521f3afb7974fb84e0f975c647835d274ba4d79"}, "originalPosition": 77}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c521f3afb7974fb84e0f975c647835d274ba4d79", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c521f3afb7974fb84e0f975c647835d274ba4d79", "committedDate": "2020-05-29T16:31:22Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}, "afterCommit": {"oid": "ad4f84b5d912e6b094d41d6766f7297b4cf3b56f", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/ad4f84b5d912e6b094d41d6766f7297b4cf3b56f", "committedDate": "2020-06-01T07:55:27Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0b940ade91a122261be0fe6ba95013fd0057e8a", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/f0b940ade91a122261be0fe6ba95013fd0057e8a", "committedDate": "2020-06-01T08:48:24Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad4f84b5d912e6b094d41d6766f7297b4cf3b56f", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/ad4f84b5d912e6b094d41d6766f7297b4cf3b56f", "committedDate": "2020-06-01T07:55:27Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}, "afterCommit": {"oid": "f0b940ade91a122261be0fe6ba95013fd0057e8a", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/f0b940ade91a122261be0fe6ba95013fd0057e8a", "committedDate": "2020-06-01T08:48:24Z", "message": "[RHPAM-2911] Null fields should not be included in JSON response\n\nNew fields \"parameter\" in content type. If value is non-null alternative\nobject mapper is used to prevent null serialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MTM3MzE5", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2106#pullrequestreview-424137319", "createdAt": "2020-06-04T06:31:20Z", "commit": {"oid": "f0b940ade91a122261be0fe6ba95013fd0057e8a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1429, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}