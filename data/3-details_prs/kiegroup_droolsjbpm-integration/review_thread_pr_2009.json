{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MzMyODg4", "number": 2009, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjozMjoyNFrODhgcUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjo1MDoxNFrODhgvXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDYxMTM2OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjozMjoyNFrOFsRnqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjozMjoyNFrOFsRnqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3MDM0NQ==", "bodyText": "Typo (if matches with the operation)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static QueryParam greaterOrEqualTo(String column, Comparable<?> value) {\n          \n          \n            \n                public static QueryParam greaterOrEqualsTo(String column, Comparable<?> value) {", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2009#discussion_r381970345", "createdAt": "2020-02-20T12:32:24Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.server.api.util;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.kie.server.api.model.definition.QueryParam;\n+\n+public final class QueryParamFactory {\n+\n+    private QueryParamFactory() {}\n+\n+    public static QueryParam isNull(String column) {\n+        return new QueryParam(column, \"IS_NULL\", null);\n+    }\n+\n+    public static QueryParam isNotNull(String column) {\n+        return new QueryParam(column, \"NOT_NULL\", null);\n+    }\n+\n+    public static QueryParam equalsTo(String column, Comparable<?>... values) {\n+        return new QueryParam(column, \"EQUALS_TO\", Arrays.asList(values));\n+    }\n+\n+    public static QueryParam notEqualsTo(String column, Comparable<?>... values) {\n+        return new QueryParam(column, \"NOT_EQUALS_TO\", Arrays.asList(values));\n+    }\n+\n+    public static QueryParam likeTo(String column, boolean caseSensitive, Comparable<?> value) {\n+        return new QueryParam(column, \"LIKE_TO\", Arrays.asList(value, caseSensitive));\n+    }\n+\n+    public static QueryParam greaterThan(String column, Comparable<?> value) {\n+        return new QueryParam(column, \"GREATER_THAN\", Arrays.asList(value));\n+    }\n+\n+    public static QueryParam greaterOrEqualTo(String column, Comparable<?> value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c2f0aeb1d280d277ae920e8c233e8097436a6f2"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDYxMjU3OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjozMjo1MFrOFsRoaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjozMjo1MFrOFsRoaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3MDUzNw==", "bodyText": "Typo (if matches with the operation)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static QueryParam lowerOrEqualTo(String column, Comparable<?> value) {\n          \n          \n            \n                public static QueryParam lowerOrEqualsTo(String column, Comparable<?> value) {", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2009#discussion_r381970537", "createdAt": "2020-02-20T12:32:50Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/util/QueryParamFactory.java", "diffHunk": "@@ -0,0 +1,90 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.server.api.util;\n+\n+import java.util.Arrays;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import org.kie.server.api.model.definition.QueryParam;\n+\n+public final class QueryParamFactory {\n+\n+    private QueryParamFactory() {}\n+\n+    public static QueryParam isNull(String column) {\n+        return new QueryParam(column, \"IS_NULL\", null);\n+    }\n+\n+    public static QueryParam isNotNull(String column) {\n+        return new QueryParam(column, \"NOT_NULL\", null);\n+    }\n+\n+    public static QueryParam equalsTo(String column, Comparable<?>... values) {\n+        return new QueryParam(column, \"EQUALS_TO\", Arrays.asList(values));\n+    }\n+\n+    public static QueryParam notEqualsTo(String column, Comparable<?>... values) {\n+        return new QueryParam(column, \"NOT_EQUALS_TO\", Arrays.asList(values));\n+    }\n+\n+    public static QueryParam likeTo(String column, boolean caseSensitive, Comparable<?> value) {\n+        return new QueryParam(column, \"LIKE_TO\", Arrays.asList(value, caseSensitive));\n+    }\n+\n+    public static QueryParam greaterThan(String column, Comparable<?> value) {\n+        return new QueryParam(column, \"GREATER_THAN\", Arrays.asList(value));\n+    }\n+\n+    public static QueryParam greaterOrEqualTo(String column, Comparable<?> value) {\n+        return new QueryParam(column, \"GREATER_OR_EQUALS_TO\", Arrays.asList(value));\n+    }\n+\n+    public static QueryParam lowerThan(String column, Comparable<?> value) {\n+        return new QueryParam(column, \"LOWER_THAN\", Arrays.asList(value));\n+    }\n+\n+    public static QueryParam lowerOrEqualTo(String column, Comparable<?> value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c2f0aeb1d280d277ae920e8c233e8097436a6f2"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDYyMTc0OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/QueryDataServiceBase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjozNjoxMVrOFsRuPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDoxNjoxNlrOFsU9sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3MjAzMQ==", "bodyText": "Better return an empty list\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return null;\n          \n          \n            \n                        return Collections.emptyList();", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2009#discussion_r381972031", "createdAt": "2020-02-20T12:36:11Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/QueryDataServiceBase.java", "diffHunk": "@@ -190,6 +191,23 @@ public Object queryFiltered(String containerId, String queryName, String mapper,\n         return transform(result, resultMapper);\n     }\n \n+    private List<Object> toJbpmQueryParam(List<?> parameters) {\n+        if (parameters == null) {\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c2f0aeb1d280d277ae920e8c233e8097436a6f2"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyNTEzNw==", "bodyText": "this cannot happens as it will change the current behaviour.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2009#discussion_r382025137", "createdAt": "2020-02-20T14:16:16Z", "author": {"login": "elguardian"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/QueryDataServiceBase.java", "diffHunk": "@@ -190,6 +191,23 @@ public Object queryFiltered(String containerId, String queryName, String mapper,\n         return transform(result, resultMapper);\n     }\n \n+    private List<Object> toJbpmQueryParam(List<?> parameters) {\n+        if (parameters == null) {\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3MjAzMQ=="}, "originalCommit": {"oid": "0c2f0aeb1d280d277ae920e8c233e8097436a6f2"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDY2MDE1OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/model/definition/QueryFilterSpec.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjo1MDoxNFrOFsSGpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjo1MDoxNFrOFsSGpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk3ODI3Nw==", "bodyText": "It should start with lowercase: builder()", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2009#discussion_r381978277", "createdAt": "2020-02-20T12:50:14Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/model/definition/QueryFilterSpec.java", "diffHunk": "@@ -43,6 +44,10 @@\n     @XmlElement(name = \"order-by-clause\")\n     private String orderByClause;\n \n+    public static QueryFilterSpecBuilder Builder() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c2f0aeb1d280d277ae920e8c233e8097436a6f2"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2197, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}