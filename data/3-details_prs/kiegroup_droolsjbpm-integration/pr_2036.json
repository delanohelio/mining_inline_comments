{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNDEyMDIx", "number": 2036, "title": "[JBPM-8910] How to use a \"OR\" query operator in a custom query in the query-parameters", "bodyText": "supporting omision in cond-column when the expression is logical", "createdAt": "2020-03-04T08:42:07Z", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2036", "merged": true, "mergeCommit": {"oid": "7209ce5bfb358111ed33e7b253d0711cfcc6f0b1"}, "closed": true, "closedAt": "2020-03-09T07:41:59Z", "author": {"login": "elguardian"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKSzIgAH2gAyMzgzNDEyMDIxOjk4YmFmYjgyMDdhYTI2MmM0M2NiNGZhOGRhMzBmZWFlMDE5MTIwNzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKYYoYgFqTM2ODg1ODI1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "98bafb8207aa262c43cb4fa8da30feae01912077", "author": {"user": null}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/98bafb8207aa262c43cb4fa8da30feae01912077", "committedDate": "2020-03-04T08:39:28Z", "message": "[JBPM-8910] How to use a \"OR\" query operator in a custom query in the query-parameters\n\nsupporting omision in cond-column when the expression is logical"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4Njc0MjI3", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2036#pullrequestreview-368674227", "createdAt": "2020-03-04T10:45:04Z", "commit": {"oid": "98bafb8207aa262c43cb4fa8da30feae01912077"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDo0NTowNFrOFxoWHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMDo0NTowNFrOFxoWHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4NTU2Nw==", "bodyText": "I think this condition always matches, so it shouldn't be needed, wdyt?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2036#discussion_r387585567", "createdAt": "2020-03-04T10:45:04Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/marshalling/json/JSONMarshaller.java", "diffHunk": "@@ -781,10 +781,20 @@ protected Object mapObject(JsonParser jp, DeserializationContext ctxt) throws IO\n                     List condValues = (List) result.get(\"cond-values\");\n                     return new QueryParam(column, op, condValues);\n                 }\n-                return result;\n+\n+                return wrapCustomObject(result);\n             }\n         }\n \n+        public Object wrapCustomObject(Map<String, Object> result) {\n+            if (result.containsKey(\"cond-operator\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98bafb8207aa262c43cb4fa8da30feae01912077"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4ODU4MjUw", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2036#pullrequestreview-368858250", "createdAt": "2020-03-04T15:09:50Z", "commit": {"oid": "98bafb8207aa262c43cb4fa8da30feae01912077"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNTowOTo1MFrOFxxC1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNTowOTo1MFrOFxxC1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzcyODA4NA==", "bodyText": "BTW, the code-smell that SonarCloud complains, is related to convert \"cond-operator\" (4 times) into a constant. It may be also applied to \"cond-column\" and \"cond-values\", but it's up to you as nice-to-have.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2036#discussion_r387728084", "createdAt": "2020-03-04T15:09:50Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/marshalling/json/JSONMarshaller.java", "diffHunk": "@@ -781,10 +781,20 @@ protected Object mapObject(JsonParser jp, DeserializationContext ctxt) throws IO\n                     List condValues = (List) result.get(\"cond-values\");\n                     return new QueryParam(column, op, condValues);\n                 }\n-                return result;\n+\n+                return wrapCustomObject(result);\n             }\n         }\n \n+        public Object wrapCustomObject(Map<String, Object> result) {\n+            if (result.containsKey(\"cond-operator\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzU4NTU2Nw=="}, "originalCommit": {"oid": "98bafb8207aa262c43cb4fa8da30feae01912077"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1363, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}