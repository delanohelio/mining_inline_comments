{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MDg0MzQy", "number": 2321, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMTo0NzowMVrOE8eBuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMTo0ODoxM1rOE8eEMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxODQxOTc3OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-router/kie-server-router-proxy/src/main/java/org/kie/server/router/repository/ConfigFileWatcher.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMTo0NzowMVrOH4mosg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMTo0NzowMVrOH4mosg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTExNTMxNA==", "bodyText": "move this log line to th e beginning of the else clause and update it to something like, \"configuration file does not exist {0}, creating...\"", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2321#discussion_r529115314", "createdAt": "2020-11-24T01:47:01Z", "author": {"login": "spolti"}, "path": "kie-server-parent/kie-server-router/kie-server-router-proxy/src/main/java/org/kie/server/router/repository/ConfigFileWatcher.java", "diffHunk": "@@ -55,10 +58,22 @@ public ConfigFileWatcher(String configFilePath, ConfigurationMarshaller marshall\n             if(toWatch.toFile().exists()) {\n                 lastUpdate = Files.getLastModifiedTime(toWatch).toMillis();\n             } else {\n+                String cfg = marshaller.marshall(configuration);\n+                File file = new File(this.toWatch.toString() + \"kie-server-router.json\");\n+                file.createNewFile();\n+                if(file.exists()){\n+                    try (FileOutputStream fos = new FileOutputStream(file); PrintWriter writer = new PrintWriter(fos)) {\n+                        writer.write(cfg);\n+                    }\n+                }\n+                FileTime lastModified = Files.getLastModifiedTime(toWatch);\n+                lastUpdate =  lastModified.toMillis();\n                 log.warnv(\"configuration file does not exist {0} \", this.toWatch);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c6d1bfd96b42dbd36edf7a7c9ac9c89545f2c4"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxODQyNjEwOnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-router/kie-server-router-proxy/src/test/java/org/kie/server/router/repository/FileRepositoryTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMTo0ODoxM1rOH4mtJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQwNzo1MDozNlrOH5myZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTExNjQ1NA==", "bodyText": "not sure if this test really test if the file exists, it on tests the object, and at this point it will be never null even if the cfg file is not correctly wriitten.\nprobably reflection would be a way to test it, @elguardian wdyt?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2321#discussion_r529116454", "createdAt": "2020-11-24T01:48:13Z", "author": {"login": "spolti"}, "path": "kie-server-parent/kie-server-router/kie-server-router-proxy/src/test/java/org/kie/server/router/repository/FileRepositoryTest.java", "diffHunk": "@@ -213,4 +213,15 @@ public void onConfigurationReloaded() {\n         repoWithWatcher.close();\n         repoWithWatcher.clean();\n     }\n+\n+    @Test\n+    public void testFileCreation() throws Exception {\n+\n+        File repositoryDirectory = new File(\"target\" + File.separator + UUID.randomUUID().toString());\n+        Configuration configuration = new Configuration();\n+        ConfigurationMarshaller marshaller = new ConfigurationMarshaller();\n+\n+        ConfigFileWatcher configFileWatcher = new ConfigFileWatcher(repositoryDirectory.getParentFile().getAbsolutePath(), marshaller, configuration);\n+        assertNotNull(configFileWatcher);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06c6d1bfd96b42dbd36edf7a7c9ac9c89545f2c4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDE2NjM3Mg==", "bodyText": "assertNotNull(configFileWatcher); <- this is always true.\n\n\nHe will need to check first that the directory contains the file being created.\nassertFileExists(configurationFile)\n\n\nunmarshall the file and check the defaults are equals to configuration\nassertEquals(configuration, unmarshalledConfigurationFromFile)\n\n\nThose would be good condition guards.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2321#discussion_r530166372", "createdAt": "2020-11-25T07:50:36Z", "author": {"login": "elguardian"}, "path": "kie-server-parent/kie-server-router/kie-server-router-proxy/src/test/java/org/kie/server/router/repository/FileRepositoryTest.java", "diffHunk": "@@ -213,4 +213,15 @@ public void onConfigurationReloaded() {\n         repoWithWatcher.close();\n         repoWithWatcher.clean();\n     }\n+\n+    @Test\n+    public void testFileCreation() throws Exception {\n+\n+        File repositoryDirectory = new File(\"target\" + File.separator + UUID.randomUUID().toString());\n+        Configuration configuration = new Configuration();\n+        ConfigurationMarshaller marshaller = new ConfigurationMarshaller();\n+\n+        ConfigFileWatcher configFileWatcher = new ConfigFileWatcher(repositoryDirectory.getParentFile().getAbsolutePath(), marshaller, configuration);\n+        assertNotNull(configFileWatcher);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTExNjQ1NA=="}, "originalCommit": {"oid": "06c6d1bfd96b42dbd36edf7a7c9ac9c89545f2c4"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1876, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}