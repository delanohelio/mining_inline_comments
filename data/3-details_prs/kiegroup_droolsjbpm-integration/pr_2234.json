{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NzQyMTk5", "number": 2234, "title": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test", "bodyText": "In original migration test, abort process was always performed over target containerId, but if for some reason migration fail, instance will still be open over original container id. Exception were rearranged, so if problem occurs again, original exception will not be hidden by abort one.\nJIRA:\nJBPM-9325", "createdAt": "2020-09-14T16:34:26Z", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234", "merged": true, "mergeCommit": {"oid": "262aa968bccba10d332eb1846ad550147d8ad6f2"}, "closed": true, "closedAt": "2020-09-16T06:56:23Z", "author": {"login": "fjtirado"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI18aVgBqjM3NjQzNDc4Nzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJWwFPgFqTQ4OTMyMzY4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe6ad4dca8b9bfc488c5494172183d7d6e5666bd", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/fe6ad4dca8b9bfc488c5494172183d7d6e5666bd", "committedDate": "2020-09-14T16:31:42Z", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one."}, "afterCommit": {"oid": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "committedDate": "2020-09-14T16:39:25Z", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDEwNDYx", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#pullrequestreview-488410461", "createdAt": "2020-09-15T07:43:19Z", "commit": {"oid": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzo0MzoxOVrOHR08YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwNzo1OToxN1rOHR1hhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ1NTI2NQ==", "bodyText": "might be worth failing the test as well?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw ex;\n          \n          \n            \n                        fail(\"Something went wrong: \" + ex.getMessage());\n          \n          \n            \n                        throw ex;", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488455265", "createdAt": "2020-09-15T07:43:19Z", "author": {"login": "afalhambra"}, "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java", "diffHunk": "@@ -142,22 +142,25 @@ public void testProcessStartAndAbort() {\n         assertEquals(containerId, processInstance.getContainerId());\n         \n         try {\n-            \n             MigrationReportInstance report = processAdminClient.migrateProcessInstance(containerId, processInstanceId, containerId2, processId);\n             assertTrue(report.isSuccessful());\n-            \n             processInstance = queryClient.findProcessInstanceById(processInstanceId);\n             assertNotNull(processInstance);\n             assertEquals(1, processInstance.getState().intValue());\n             assertEquals(containerId2, processInstance.getContainerId());\n-        } finally {\n-            // at the end abort process instance\n-            processClient.abortProcessInstance(containerId2, processInstanceId);\n-    \n-            processInstance = queryClient.findProcessInstanceById(processInstanceId);\n-            assertNotNull(processInstance);\n-            assertEquals(3, processInstance.getState().intValue());\n         }\n+        catch (Exception ex ) {\n+            // clean up if failure\n+            try {\n+                processClient.abortProcessInstance(containerId, processInstanceId);\n+            } catch (Exception ex2) {}\n+            throw ex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ1NjkyMQ==", "bodyText": "Shouldn't we try to abort process instance even if above exception is raised? like using this in a finally block? Otherwise this process instance won't be aborted in case of an exception.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488456921", "createdAt": "2020-09-15T07:46:03Z", "author": {"login": "afalhambra"}, "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java", "diffHunk": "@@ -142,22 +142,25 @@ public void testProcessStartAndAbort() {\n         assertEquals(containerId, processInstance.getContainerId());\n         \n         try {\n-            \n             MigrationReportInstance report = processAdminClient.migrateProcessInstance(containerId, processInstanceId, containerId2, processId);\n             assertTrue(report.isSuccessful());\n-            \n             processInstance = queryClient.findProcessInstanceById(processInstanceId);\n             assertNotNull(processInstance);\n             assertEquals(1, processInstance.getState().intValue());\n             assertEquals(containerId2, processInstance.getContainerId());\n-        } finally {\n-            // at the end abort process instance\n-            processClient.abortProcessInstance(containerId2, processInstanceId);\n-    \n-            processInstance = queryClient.findProcessInstanceById(processInstanceId);\n-            assertNotNull(processInstance);\n-            assertEquals(3, processInstance.getState().intValue());\n         }\n+        catch (Exception ex ) {\n+            // clean up if failure\n+            try {\n+                processClient.abortProcessInstance(containerId, processInstanceId);\n+            } catch (Exception ex2) {}\n+            throw ex;\n+        }\n+        //abort process instance (outside try/cath), to not hide exception that will certainly occurs if  migration failed \n+        processClient.abortProcessInstance(containerId2, processInstanceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODQ2NDc3NQ==", "bodyText": "typo\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    //abort process instance (outside try/cath), to not hide exception that will certainly occurs if  migration failed \n          \n          \n            \n                    //abort process instance (outside try/catch), to not hide exception that will certainly occur if migration fails", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488464775", "createdAt": "2020-09-15T07:59:17Z", "author": {"login": "afalhambra"}, "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java", "diffHunk": "@@ -142,22 +142,25 @@ public void testProcessStartAndAbort() {\n         assertEquals(containerId, processInstance.getContainerId());\n         \n         try {\n-            \n             MigrationReportInstance report = processAdminClient.migrateProcessInstance(containerId, processInstanceId, containerId2, processId);\n             assertTrue(report.isSuccessful());\n-            \n             processInstance = queryClient.findProcessInstanceById(processInstanceId);\n             assertNotNull(processInstance);\n             assertEquals(1, processInstance.getState().intValue());\n             assertEquals(containerId2, processInstance.getContainerId());\n-        } finally {\n-            // at the end abort process instance\n-            processClient.abortProcessInstance(containerId2, processInstanceId);\n-    \n-            processInstance = queryClient.findProcessInstanceById(processInstanceId);\n-            assertNotNull(processInstance);\n-            assertEquals(3, processInstance.getState().intValue());\n         }\n+        catch (Exception ex ) {\n+            // clean up if failure\n+            try {\n+                processClient.abortProcessInstance(containerId, processInstanceId);\n+            } catch (Exception ex2) {}\n+            throw ex;\n+        }\n+        //abort process instance (outside try/cath), to not hide exception that will certainly occurs if  migration failed ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221"}, "originalPosition": 51}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/19d89b05c73221c9d3cf8d5f8e9b8a195db68221", "committedDate": "2020-09-14T16:39:25Z", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one."}, "afterCommit": {"oid": "5aca8b6f2a651da1e00318477bc3120125536b54", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/5aca8b6f2a651da1e00318477bc3120125536b54", "committedDate": "2020-09-15T09:31:23Z", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NTExMDk4", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#pullrequestreview-488511098", "createdAt": "2020-09-15T09:45:03Z", "commit": {"oid": "5aca8b6f2a651da1e00318477bc3120125536b54"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3OTYzMDI5", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#pullrequestreview-487963029", "createdAt": "2020-09-14T16:49:56Z", "commit": {"oid": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNjo0OTo1NlrOHReAoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNjo0OTo1NlrOHReAoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODA3OTUyMQ==", "bodyText": "Shouldn't it be useful to log something in case abort process operation fails?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#discussion_r488079521", "createdAt": "2020-09-14T16:49:56Z", "author": {"login": "gmunozfe"}, "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-sample/src/test/java/org/kie/server/springboot/samples/KieServerMigrationTest.java", "diffHunk": "@@ -142,22 +142,25 @@ public void testProcessStartAndAbort() {\n         assertEquals(containerId, processInstance.getContainerId());\n         \n         try {\n-            \n             MigrationReportInstance report = processAdminClient.migrateProcessInstance(containerId, processInstanceId, containerId2, processId);\n             assertTrue(report.isSuccessful());\n-            \n             processInstance = queryClient.findProcessInstanceById(processInstanceId);\n             assertNotNull(processInstance);\n             assertEquals(1, processInstance.getState().intValue());\n             assertEquals(containerId2, processInstance.getContainerId());\n-        } finally {\n-            // at the end abort process instance\n-            processClient.abortProcessInstance(containerId2, processInstanceId);\n-    \n-            processInstance = queryClient.findProcessInstanceById(processInstanceId);\n-            assertNotNull(processInstance);\n-            assertEquals(3, processInstance.getState().intValue());\n         }\n+        catch (Exception ex ) {\n+            // clean up if failure\n+            try {\n+                processClient.abortProcessInstance(containerId, processInstanceId);\n+            } catch (Exception ex2) {}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19d89b05c73221c9d3cf8d5f8e9b8a195db68221"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0642e5bee73ab8eef58c4457c72b8482f890d02b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/0642e5bee73ab8eef58c4457c72b8482f890d02b", "committedDate": "2020-09-15T12:33:22Z", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5aca8b6f2a651da1e00318477bc3120125536b54", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/5aca8b6f2a651da1e00318477bc3120125536b54", "committedDate": "2020-09-15T09:31:23Z", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one."}, "afterCommit": {"oid": "0642e5bee73ab8eef58c4457c72b8482f890d02b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/0642e5bee73ab8eef58c4457c72b8482f890d02b", "committedDate": "2020-09-15T12:33:22Z", "message": "[JBPM-9325] Unstable KIE-SERVER SpringBoot test\n\nIn original migration test, abort process was always performed over\ntarget containerId, but\nif for some reason migration fail, instance will still be open over\noriginal container id. Exception were rearranges, so if problem occurs\nagain, original exception will not be hidden by abort one."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MzIzNjgz", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2234#pullrequestreview-489323683", "createdAt": "2020-09-16T06:52:59Z", "commit": {"oid": "0642e5bee73ab8eef58c4457c72b8482f890d02b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1170, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}