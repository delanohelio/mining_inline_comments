{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxNTg0NTQw", "number": 2226, "title": "[JBPM-9206] container id should be checked when retrieving process", "bodyText": "Throw exception when container id associated with that process id does\nnot match the container id specified in the request\nJIRA:\nJBPM-9206", "createdAt": "2020-09-07T18:15:22Z", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226", "merged": true, "mergeCommit": {"oid": "17de5fbf9a5656e9c220d3772be298373194bec3"}, "closed": true, "closedAt": "2020-09-18T18:50:40Z", "author": {"login": "fjtirado"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdGzkoYgBqjM3Mzk4MDIwNTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdKB4iMABqjM3ODE2NzM2Mzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "945fac479cc7e96234f0a714b77946b2f936c8d6", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/945fac479cc7e96234f0a714b77946b2f936c8d6", "committedDate": "2020-09-07T18:14:34Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "e2375732b0245b3a4a600ffd19e6e358d5994a2a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/e2375732b0245b3a4a600ffd19e6e358d5994a2a", "committedDate": "2020-09-08T08:45:43Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e2375732b0245b3a4a600ffd19e6e358d5994a2a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/e2375732b0245b3a4a600ffd19e6e358d5994a2a", "committedDate": "2020-09-08T08:45:43Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "c1f2175015e92ebb26c63acc0efaa041a7da78be", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c1f2175015e92ebb26c63acc0efaa041a7da78be", "committedDate": "2020-09-08T08:46:40Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1f2175015e92ebb26c63acc0efaa041a7da78be", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c1f2175015e92ebb26c63acc0efaa041a7da78be", "committedDate": "2020-09-08T08:46:40Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "179effaa243d72e11c8f1bb86b33558c2e9f7ad8", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/179effaa243d72e11c8f1bb86b33558c2e9f7ad8", "committedDate": "2020-09-08T09:26:47Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "179effaa243d72e11c8f1bb86b33558c2e9f7ad8", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/179effaa243d72e11c8f1bb86b33558c2e9f7ad8", "committedDate": "2020-09-08T09:26:47Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc", "committedDate": "2020-09-08T10:20:45Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MDIwMTY1", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#pullrequestreview-484020165", "createdAt": "2020-09-08T10:55:50Z", "commit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTowNDowNFrOHOX3rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMToyNjowM1rOHOYhgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMzE5OA==", "bodyText": "https://www.youtube.com/watch?v=VFA2d4G9q30", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484833198", "createdAt": "2020-09-08T11:04:04Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -41,29 +45,36 @@\n import org.kie.server.api.model.instance.RequestInfoInstance;\n import org.kie.server.api.model.instance.TaskInstance;\n import org.kie.server.api.model.instance.TaskSummary;\n+import org.kie.server.api.model.instance.VariableInstance;\n import org.kie.server.api.model.instance.WorkItemInstance;\n-import org.kie.server.api.KieServerConstants;\n-import org.kie.server.api.exception.KieServicesException;\n import org.kie.server.integrationtests.category.Smoke;\n import org.kie.server.integrationtests.category.UnstableOnJenkinsPrBuilder;\n import org.kie.server.integrationtests.config.TestConfig;\n-\n-import static org.junit.Assert.*;\n-import org.kie.server.api.model.instance.VariableInstance;\n import org.kie.server.integrationtests.shared.KieServerAssert;\n import org.kie.server.integrationtests.shared.KieServerDeployer;\n import org.kie.server.integrationtests.shared.KieServerReflections;\n import org.kie.server.integrationtests.shared.KieServerSynchronization;\n \n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.Assert.fail;\n+\n \n public class ProcessServiceIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n \n     private static final KieServerConfigItem PPI_RUNTIME_STRATEGY = new KieServerConfigItem(KieServerConstants.PCFG_RUNTIME_STRATEGY, RuntimeStrategy.PER_PROCESS_INSTANCE.name(), String.class.getName());\n+    \n+    private static final String FUNNY_CONTAINER_ID = \"manic miner forever\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzMzgwMA==", "bodyText": "unnecessary unboxing.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertTrue(processInstanceId.longValue() > 0);\n          \n          \n            \n                        assertTrue(processInstanceId > 0);", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484833800", "createdAt": "2020-09-08T11:05:17Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -178,6 +189,28 @@ public void testAbortExistingProcess() {\n             fail(e.getMessage());\n         }\n     }\n+    \n+    @Test()\n+    public void testAbortExistingProcessWrongContainer() {\n+        Map<String, Object> parameters = new HashMap<String, Object>();\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n+        try {\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId.longValue() > 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNTk4Mg==", "bodyText": "Explicit arguments are not really needed\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, Object> parameters = new HashMap<String, Object>();\n          \n          \n            \n                    Map<String, Object> parameters = new HashMap<>();", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484835982", "createdAt": "2020-09-08T11:09:38Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -178,6 +189,28 @@ public void testAbortExistingProcess() {\n             fail(e.getMessage());\n         }\n     }\n+    \n+    @Test()\n+    public void testAbortExistingProcessWrongContainer() {\n+        Map<String, Object> parameters = new HashMap<String, Object>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNjkxNg==", "bodyText": "Checked exceptions are never thrown in this test\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testSignalProcessInstanceWrongContainer() throws Exception {\n          \n          \n            \n                public void testSignalProcessInstanceWrongContainer() {", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484836916", "createdAt": "2020-09-08T11:11:24Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -236,7 +269,24 @@ public void testSignalProcessInstance() throws Exception {\n             processClient.abortProcessInstance(CONTAINER_ID, processInstanceId);\n             fail(e.getMessage());\n         }\n+    }\n+    \n+    @Test\n+    public void testSignalProcessInstanceWrongContainer() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzNzE0OQ==", "bodyText": "Unnecessary unboxing\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertTrue(processInstanceId.longValue() > 0);\n          \n          \n            \n                    assertTrue(processInstanceId > 0);", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484837149", "createdAt": "2020-09-08T11:11:52Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -236,7 +269,24 @@ public void testSignalProcessInstance() throws Exception {\n             processClient.abortProcessInstance(CONTAINER_ID, processInstanceId);\n             fail(e.getMessage());\n         }\n+    }\n+    \n+    @Test\n+    public void testSignalProcessInstanceWrongContainer() throws Exception {\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n+\n+        assertNotNull(processInstanceId);\n+        assertTrue(processInstanceId.longValue() > 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzODQ5NA==", "bodyText": "Checked exceptions are never thrown within this test\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testManipulateProcessVariableWrongContainer() throws Exception {\n          \n          \n            \n                public void testManipulateProcessVariableWrongContainer() {", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484838494", "createdAt": "2020-09-08T11:14:48Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -353,6 +403,32 @@ public void testManipulateProcessVariable() throws Exception {\n         }\n \n     }\n+    \n+    public void testManipulateProcessVariableWrongContainer() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzODg2Mw==", "bodyText": "Test annotation is missing\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testManipulateProcessVariableWrongContainer() throws Exception {\n          \n          \n            \n                @Test\n          \n          \n            \n                public void testManipulateProcessVariableWrongContainer() {", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484838863", "createdAt": "2020-09-08T11:15:26Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -353,6 +403,32 @@ public void testManipulateProcessVariable() throws Exception {\n         }\n \n     }\n+    \n+    public void testManipulateProcessVariableWrongContainer() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDgzOTE0OQ==", "bodyText": "same as previous", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484839149", "createdAt": "2020-09-08T11:16:05Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -353,6 +403,32 @@ public void testManipulateProcessVariable() throws Exception {\n         }\n \n     }\n+    \n+    public void testManipulateProcessVariableWrongContainer() throws Exception {\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n+\n+        assertNotNull(processInstanceId);\n+        assertTrue(processInstanceId.longValue() > 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 125}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MDE4OA==", "bodyText": "I would add below to make sure personVar is not null\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        exceptionRule.expect(KieServicesException.class);\n          \n          \n            \n                        assertNotNull(personVar);\n          \n          \n            \n                        exceptionRule.expect(KieServicesException.class);", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484840188", "createdAt": "2020-09-08T11:18:13Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -353,6 +403,32 @@ public void testManipulateProcessVariable() throws Exception {\n         }\n \n     }\n+    \n+    public void testManipulateProcessVariableWrongContainer() throws Exception {\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n+\n+        assertNotNull(processInstanceId);\n+        assertTrue(processInstanceId.longValue() > 0);\n+\n+        try {\n+            Object personVar = null;\n+            try {\n+                personVar = processClient.getProcessInstanceVariable(CONTAINER_ID, processInstanceId, \"personData\");\n+                fail(\"Should fail as there is no process variable personData set yet\");\n+            } catch (KieServicesException e) {\n+                // expected\n+            }\n+            assertNull(personVar);\n+\n+            personVar = createPersonInstance(USER_JOHN);\n+            exceptionRule.expect(KieServicesException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MDY4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testGetProcessInstanceWrongContainer() {\n          \n          \n            \n                @Test\n          \n          \n            \n                public void testGetProcessInstanceWrongContainer() {", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484840687", "createdAt": "2020-09-08T11:19:16Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -423,6 +499,27 @@ public void testGetProcessInstance() throws Exception {\n         }\n \n     }\n+    \n+        \n+    public void testGetProcessInstanceWrongContainer() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MDk5OA==", "bodyText": "Explicit type parameters are not required\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, Object> parameters = new HashMap<String, Object>();\n          \n          \n            \n                    Map<String, Object> parameters = new HashMap<>();", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484840998", "createdAt": "2020-09-08T11:19:49Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -423,6 +499,27 @@ public void testGetProcessInstance() throws Exception {\n         }\n \n     }\n+    \n+        \n+    public void testGetProcessInstanceWrongContainer() {\n+        \n+        Map<String, Object> parameters = new HashMap<String, Object>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MTcyMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, Object> parameters = new HashMap<String, Object>();\n          \n          \n            \n                    Map<String, Object> parameters = new HashMap<>();", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484841722", "createdAt": "2020-09-08T11:21:22Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -589,6 +689,48 @@ public void testWorkItemOperationComplete() throws Exception {\n             changeUser(TestConfig.getUsername());\n         }\n     }\n+    \n+    @Test\n+    public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n+\n+        Map<String, Object> parameters = new HashMap<String, Object>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 195}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MTg1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertTrue(processInstanceId.longValue() > 0);\n          \n          \n            \n                        assertTrue(processInstanceId > 0);", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484841854", "createdAt": "2020-09-08T11:21:38Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -589,6 +689,48 @@ public void testWorkItemOperationComplete() throws Exception {\n             changeUser(TestConfig.getUsername());\n         }\n     }\n+    \n+    @Test\n+    public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n+\n+        Map<String, Object> parameters = new HashMap<String, Object>();\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n+        try {\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId.longValue() > 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 200}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MjE4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        List<String> status = Arrays.asList(Status.Ready.toString());\n          \n          \n            \n                        List<String> status = Collections.singletonList(Status.Ready.toString());", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484842187", "createdAt": "2020-09-08T11:22:20Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -589,6 +689,48 @@ public void testWorkItemOperationComplete() throws Exception {\n             changeUser(TestConfig.getUsername());\n         }\n     }\n+    \n+    @Test\n+    public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n+\n+        Map<String, Object> parameters = new HashMap<String, Object>();\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n+        try {\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId.longValue() > 0);\n+\n+            // Completing human task so we can move in process flow to work item.\n+            // User task shouldn't be handled as work item because in such case it doesn't behave consistently:\n+            // i.e. leaving open tasks after finishing process instance.\n+            List<String> status = Arrays.asList(Status.Ready.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 205}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MzczMA==", "bodyText": "I don't think this is needed - what do you think?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484843730", "createdAt": "2020-09-08T11:25:38Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -589,6 +689,48 @@ public void testWorkItemOperationComplete() throws Exception {\n             changeUser(TestConfig.getUsername());\n         }\n     }\n+    \n+    @Test\n+    public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n+\n+        Map<String, Object> parameters = new HashMap<String, Object>();\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n+        try {\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId.longValue() > 0);\n+\n+            // Completing human task so we can move in process flow to work item.\n+            // User task shouldn't be handled as work item because in such case it doesn't behave consistently:\n+            // i.e. leaving open tasks after finishing process instance.\n+            List<String> status = Arrays.asList(Status.Ready.toString());\n+            List<TaskSummary> taskList = taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, status, 0, 10);\n+\n+            assertEquals(1, taskList.size());\n+            TaskSummary taskSummary = taskList.get(0);\n+            taskClient.startTask(CONTAINER_ID, taskSummary.getId(), USER_YODA);\n+            taskClient.completeTask(CONTAINER_ID, taskSummary.getId(), USER_YODA, null);\n+\n+            TaskInstance userTask = taskClient.findTaskById(taskSummary.getId());\n+            assertNotNull(userTask);\n+            assertEquals(\"Evaluate items?\", userTask.getName());\n+            assertEquals(Status.Completed.toString(), userTask.getStatus());\n+\n+            List<WorkItemInstance> workItems = processClient.getWorkItemByProcessInstance(CONTAINER_ID, processInstanceId);\n+            assertNotNull(workItems);\n+            assertEquals(1, workItems.size());\n+\n+            WorkItemInstance workItemInstance = workItems.get(0);\n+            assertNotNull(workItemInstance);\n+\n+            exceptionRule.expect(KieServicesException.class);\n+            processClient.completeWorkItem(FUNNY_CONTAINER_ID, processInstanceId, workItemInstance.getId(), parameters);\n+        } finally {\n+            processClient.abortProcessInstance(CONTAINER_ID, processInstanceId);\n+            changeUser(TestConfig.getUsername());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 229}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg0MzkwNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Map<String, Object> parameters = new HashMap<String, Object>();\n          \n          \n            \n                    Map<String, Object> parameters = new HashMap<>();", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r484843907", "createdAt": "2020-09-08T11:26:03Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -943,6 +1085,22 @@ public void testFindVariableInstances() {\n         }\n \n     }\n+    \n+    @Test\n+    public void testFindVariableInstancesWrongContainer() {\n+        Map<String, Object> parameters = new HashMap<String, Object>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22a7bbd64d7f1ca86fdfd4202f7f8302b6ac2ecc"}, "originalPosition": 243}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b27cf4fd126e1a14fd326723d679a95885e6dc6c", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b27cf4fd126e1a14fd326723d679a95885e6dc6c", "committedDate": "2020-09-08T13:20:18Z", "message": "Update kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java\n\nCo-authored-by: afalhambra <antferna@redhat.com>"}, "afterCommit": {"oid": "1a3f05b266c6c0286bcebf935e9aa9657ca2f149", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/1a3f05b266c6c0286bcebf935e9aa9657ca2f149", "committedDate": "2020-09-08T13:23:23Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c73aec9325981cf2a1ec5f930ac82b74c07d2d81", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c73aec9325981cf2a1ec5f930ac82b74c07d2d81", "committedDate": "2020-09-08T13:25:34Z", "message": "Apply suggestions from code review\n\nCo-authored-by: afalhambra <antferna@redhat.com>"}, "afterCommit": {"oid": "b37d38767b73d9c7a5ba4dd1b350301a867cd48f", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b37d38767b73d9c7a5ba4dd1b350301a867cd48f", "committedDate": "2020-09-08T13:31:30Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b37d38767b73d9c7a5ba4dd1b350301a867cd48f", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b37d38767b73d9c7a5ba4dd1b350301a867cd48f", "committedDate": "2020-09-08T13:31:30Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "b54f7a4feefb61224cd8252fffc7a18aa2dba519", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b54f7a4feefb61224cd8252fffc7a18aa2dba519", "committedDate": "2020-09-08T13:32:34Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b54f7a4feefb61224cd8252fffc7a18aa2dba519", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b54f7a4feefb61224cd8252fffc7a18aa2dba519", "committedDate": "2020-09-08T13:32:34Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "593aa11f991725a704d6bd104f6b19ed16b2f1db", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/593aa11f991725a704d6bd104f6b19ed16b2f1db", "committedDate": "2020-09-08T13:37:55Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MjEwOTc2", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#pullrequestreview-484210976", "createdAt": "2020-09-08T14:41:25Z", "commit": {"oid": "593aa11f991725a704d6bd104f6b19ed16b2f1db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "593aa11f991725a704d6bd104f6b19ed16b2f1db", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/593aa11f991725a704d6bd104f6b19ed16b2f1db", "committedDate": "2020-09-08T13:37:55Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b0960af0661fcd87497189c10f3e6d9e3dfe6d8e", "committedDate": "2020-09-09T09:13:10Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0ODYzMzAz", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#pullrequestreview-484863303", "createdAt": "2020-09-09T10:15:03Z", "commit": {"oid": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDoxNTowM1rOHPAkpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxMDoyOTowNlrOHPBBiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwMDA3MA==", "bodyText": "Shouldn't it be also inside the if-clause?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485500070", "createdAt": "2020-09-09T10:15:03Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/ConvertUtils.java", "diffHunk": "@@ -81,15 +85,14 @@ public static ProcessInstanceList convertToProcessInstanceWithVarsList(Collectio\n             return new ProcessInstanceList(new org.kie.server.api.model.instance.ProcessInstance[0]);\n         }\n \n-        List<ProcessInstance> processInstances = new ArrayList<ProcessInstance>(instances.size());\n+        List<ProcessInstance> processInstances = new ArrayList<>(instances.size());\n         for (ProcessInstanceWithVarsDesc pi : instances) {\n             org.kie.server.api.model.instance.ProcessInstance instance = convertToProcessInstance(pi);\n-\n-            instance.setVariables(pi.getVariables());\n-\n+            if (instance != null) {\n+                instance.setVariables(pi.getVariables());\n+            }\n             processInstances.add(instance);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwMjAyNA==", "bodyText": "placeholder {} is not needed here\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        throw new ProcessInstanceNotFoundException(\"process instance \" + variableDesc.getProcessInstanceId() + \" does not belong to container {}\" + containerId);\n          \n          \n            \n                        throw new ProcessInstanceNotFoundException(\"process instance \" + variableDesc.getProcessInstanceId() + \" does not belong to container \" + containerId);", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485502024", "createdAt": "2020-09-09T10:18:49Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm/src/main/java/org/kie/server/services/jbpm/ConvertUtils.java", "diffHunk": "@@ -352,29 +322,34 @@ public static NodeInstanceList convertToNodeInstanceList(Collection<NodeInstance\n     }\n \n     public static VariableInstance convertToVariable(VariableDesc variableDesc) {\n-        VariableInstance instance = VariableInstance.builder()\n+        return convertToVariable(variableDesc, null);\n+    }\n+\n+    public static VariableInstance convertToVariable(VariableDesc variableDesc, String containerId) {\n+        if (containerId != null && !variableDesc.getDeploymentId().equals(containerId)) {\n+            throw new ProcessInstanceNotFoundException(\"process instance \" + variableDesc.getProcessInstanceId() + \" does not belong to container {}\" + containerId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e"}, "originalPosition": 224}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwNjY4Nw==", "bodyText": "Why don't add also\nexceptionRule.expectMessage(FUNNY_CONTAINER_ID);", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485506687", "createdAt": "2020-09-09T10:27:42Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -178,6 +189,28 @@ public void testAbortExistingProcess() {\n             fail(e.getMessage());\n         }\n     }\n+    \n+    @Test()\n+    public void testAbortExistingProcessWrongContainer() {\n+        Map<String, Object> parameters = new HashMap<>();\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n+        try {\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId > 0);\n+\n+            // Process instance is running and is active.\n+            ProcessInstance processInstance = processClient.getProcessInstance(CONTAINER_ID, processInstanceId);\n+            assertNotNull(processInstance);\n+            assertEquals(org.kie.api.runtime.process.ProcessInstance.STATE_ACTIVE, processInstance.getState().intValue());\n+            exceptionRule.expect(KieServicesException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwNjc4Nw==", "bodyText": "Same here", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485506787", "createdAt": "2020-09-09T10:27:54Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -236,7 +269,24 @@ public void testSignalProcessInstance() throws Exception {\n             processClient.abortProcessInstance(CONTAINER_ID, processInstanceId);\n             fail(e.getMessage());\n         }\n+    }\n+    \n+    @Test\n+    public void testSignalProcessInstanceWrongContainer() {\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n+\n+        assertNotNull(processInstanceId);\n+        assertTrue(processInstanceId > 0);\n+\n+        try {\n+            checkAvailableSignals(CONTAINER_ID, processInstanceId);\n \n+            Object person = createPersonInstance(USER_JOHN);\n+            exceptionRule.expect(KieServicesException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwNzA0OQ==", "bodyText": "Same here", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485507049", "createdAt": "2020-09-09T10:28:25Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -353,6 +403,34 @@ public void testManipulateProcessVariable() throws Exception {\n         }\n \n     }\n+    \n+    @Test\n+    public void testManipulateProcessVariableWrongContainer() {\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_SIGNAL_PROCESS);\n+\n+        assertNotNull(processInstanceId);\n+        assertTrue(processInstanceId > 0);\n+\n+        try {\n+            Object personVar = null;\n+            try {\n+                personVar = processClient.getProcessInstanceVariable(CONTAINER_ID, processInstanceId, \"personData\");\n+                fail(\"Should fail as there is no process variable personData set yet\");\n+            } catch (KieServicesException e) {\n+                // expected\n+            }\n+            assertNull(personVar);\n+\n+            personVar = createPersonInstance(USER_JOHN);\n+            assertNotNull(personVar);\n+            exceptionRule.expect(KieServicesException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwNzI5OQ==", "bodyText": "Same here", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485507299", "createdAt": "2020-09-09T10:28:46Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -589,6 +692,48 @@ public void testWorkItemOperationComplete() throws Exception {\n             changeUser(TestConfig.getUsername());\n         }\n     }\n+    \n+    @Test\n+    public void testWorkItemOperationCompleteWrongContainer() throws Exception {\n+\n+        Map<String, Object> parameters = new HashMap<>();\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_EVALUATION, parameters);\n+        try {\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId > 0);\n+\n+            // Completing human task so we can move in process flow to work item.\n+            // User task shouldn't be handled as work item because in such case it doesn't behave consistently:\n+            // i.e. leaving open tasks after finishing process instance.\n+            List<String> status = Collections.singletonList(Status.Ready.toString());\n+            List<TaskSummary> taskList = taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, status, 0, 10);\n+\n+            assertEquals(1, taskList.size());\n+            TaskSummary taskSummary = taskList.get(0);\n+            taskClient.startTask(CONTAINER_ID, taskSummary.getId(), USER_YODA);\n+            taskClient.completeTask(CONTAINER_ID, taskSummary.getId(), USER_YODA, null);\n+\n+            TaskInstance userTask = taskClient.findTaskById(taskSummary.getId());\n+            assertNotNull(userTask);\n+            assertEquals(\"Evaluate items?\", userTask.getName());\n+            assertEquals(Status.Completed.toString(), userTask.getStatus());\n+\n+            List<WorkItemInstance> workItems = processClient.getWorkItemByProcessInstance(CONTAINER_ID, processInstanceId);\n+            assertNotNull(workItems);\n+            assertEquals(1, workItems.size());\n+\n+            WorkItemInstance workItemInstance = workItems.get(0);\n+            assertNotNull(workItemInstance);\n+\n+            exceptionRule.expect(KieServicesException.class);\n+            processClient.completeWorkItem(FUNNY_CONTAINER_ID, processInstanceId, workItemInstance.getId(), parameters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e"}, "originalPosition": 229}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwNzQ2Nw==", "bodyText": "Same here", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2226#discussion_r485507467", "createdAt": "2020-09-09T10:29:06Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ProcessServiceIntegrationTest.java", "diffHunk": "@@ -943,6 +1088,21 @@ public void testFindVariableInstances() {\n         }\n \n     }\n+    \n+    @Test\n+    public void testFindVariableInstancesWrongContainer() {\n+        Map<String, Object> parameters = new HashMap<>();\n+        parameters.put(\"stringData\", \"waiting for signal\");\n+        parameters.put(\"personData\", createPersonInstance(USER_JOHN));\n+\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_USERTASK, parameters);\n+        try {\n+            exceptionRule.expect(KieServicesException.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e"}, "originalPosition": 252}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0960af0661fcd87497189c10f3e6d9e3dfe6d8e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b0960af0661fcd87497189c10f3e6d9e3dfe6d8e", "committedDate": "2020-09-09T09:13:10Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "cc188e5230b1d10afd172a89001b1207ee438ecd", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/cc188e5230b1d10afd172a89001b1207ee438ecd", "committedDate": "2020-09-09T11:40:16Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc188e5230b1d10afd172a89001b1207ee438ecd", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/cc188e5230b1d10afd172a89001b1207ee438ecd", "committedDate": "2020-09-09T11:40:16Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "192cc0495446a5950b7a9410255866cc60bbefe2", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/192cc0495446a5950b7a9410255866cc60bbefe2", "committedDate": "2020-09-09T11:53:25Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "192cc0495446a5950b7a9410255866cc60bbefe2", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/192cc0495446a5950b7a9410255866cc60bbefe2", "committedDate": "2020-09-09T11:53:25Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "50f46e0677b1d4acfe686e30baff4f9157d36c0a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/50f46e0677b1d4acfe686e30baff4f9157d36c0a", "committedDate": "2020-09-09T12:06:35Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "50f46e0677b1d4acfe686e30baff4f9157d36c0a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/50f46e0677b1d4acfe686e30baff4f9157d36c0a", "committedDate": "2020-09-09T12:06:35Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "aa99ef5d9c2540b0a8dbd591ae62eeb9d07236bc", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/aa99ef5d9c2540b0a8dbd591ae62eeb9d07236bc", "committedDate": "2020-09-09T18:31:42Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa99ef5d9c2540b0a8dbd591ae62eeb9d07236bc", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/aa99ef5d9c2540b0a8dbd591ae62eeb9d07236bc", "committedDate": "2020-09-09T18:31:42Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "5160e7d06eff015a0d745a4b902bffa8b1f4a1c8", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/5160e7d06eff015a0d745a4b902bffa8b1f4a1c8", "committedDate": "2020-09-09T19:43:00Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5160e7d06eff015a0d745a4b902bffa8b1f4a1c8", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/5160e7d06eff015a0d745a4b902bffa8b1f4a1c8", "committedDate": "2020-09-09T19:43:00Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "7bbbb3fefbede0fef4f30fce9bafaedbbc0c0069", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/7bbbb3fefbede0fef4f30fce9bafaedbbc0c0069", "committedDate": "2020-09-10T12:36:58Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7bbbb3fefbede0fef4f30fce9bafaedbbc0c0069", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/7bbbb3fefbede0fef4f30fce9bafaedbbc0c0069", "committedDate": "2020-09-10T12:36:58Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "df081db20f8025dea080304b97ab4022509e5102", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/df081db20f8025dea080304b97ab4022509e5102", "committedDate": "2020-09-11T09:00:44Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "df081db20f8025dea080304b97ab4022509e5102", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/df081db20f8025dea080304b97ab4022509e5102", "committedDate": "2020-09-11T09:00:44Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "568a0686da6b651d5d54e32a0cfa97bee671a4ac", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/568a0686da6b651d5d54e32a0cfa97bee671a4ac", "committedDate": "2020-09-11T14:38:27Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "568a0686da6b651d5d54e32a0cfa97bee671a4ac", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/568a0686da6b651d5d54e32a0cfa97bee671a4ac", "committedDate": "2020-09-11T14:38:27Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "5e598607aafd69c17e98302715811b48b27f43f0", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/5e598607aafd69c17e98302715811b48b27f43f0", "committedDate": "2020-09-14T16:42:30Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8260017463c6b8f690824e541debb556589e2d0e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/8260017463c6b8f690824e541debb556589e2d0e", "committedDate": "2020-09-18T09:07:51Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5e598607aafd69c17e98302715811b48b27f43f0", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/5e598607aafd69c17e98302715811b48b27f43f0", "committedDate": "2020-09-14T16:42:30Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}, "afterCommit": {"oid": "8260017463c6b8f690824e541debb556589e2d0e", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/8260017463c6b8f690824e541debb556589e2d0e", "committedDate": "2020-09-18T09:07:51Z", "message": "[JBPM-9206] container id should be checked when retrieving process\n\nThrow exception when container id associated with that process id does\nnot match the container id specified in the request"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1158, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}