{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MjI3NzA0", "number": 2086, "title": "[JBPM-9147] getTaskById does not return formName", "bodyText": "Added test to retrieve formName from kie-server.\nformName was missing on ConvertUtils.convertToTask method.\nRelated to jbpm#1647", "createdAt": "2020-05-11T17:02:05Z", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2086", "merged": true, "mergeCommit": {"oid": "1a83ba813576176f6802ac6284391d57d360a437"}, "closed": true, "closedAt": "2020-05-18T13:01:05Z", "author": {"login": "gmunozfe"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgeTxAAFqTQwOTczMzU4Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcidZmbgFqTQxMzQ3MDg2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5NzMzNTg2", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2086#pullrequestreview-409733586", "createdAt": "2020-05-12T06:30:24Z", "commit": {"oid": "92bae1f8c944dc07fe4d43d6b4b4475aa91cc7ac"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzMzE1MDE2", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2086#pullrequestreview-413315016", "createdAt": "2020-05-18T06:56:15Z", "commit": {"oid": "92bae1f8c944dc07fe4d43d6b4b4475aa91cc7ac"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNjo1NjoxNVrOGWprqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwNjo1NjoyMlrOGWpr4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNDc3OQ==", "bodyText": "Can't we use Collections.emptyMap()", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2086#discussion_r426404779", "createdAt": "2020-05-18T06:56:15Z", "author": {"login": "jomarko"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/FormServiceIntegrationTest.java", "diffHunk": "@@ -389,4 +390,46 @@ public void testGetTaskFormWithWrongContainerId() throws Exception {\n             KieServerAssert.assertSuccess(client.disposeContainer(CONTAINER_ID_V2));\n         }\n     }\n+    \n+    @Test\n+    public void testFormName() throws Exception {\n+        Long pid = processClient.startProcess(CONTAINER_ID, HIRING_2_PROCESS_ID);\n+        assertNotNull(pid);\n+        assertTrue(pid.longValue() > 0);\n+        \n+        try {\n+            changeUser(USER_ADMINISTRATOR);\n+            \n+            List<TaskSummary> tasks = taskClient.findTasksAssignedAsBusinessAdministrator(USER_ADMINISTRATOR, 0, 10);\n+            assertNotNull(tasks);\n+            Long taskId = tasks.get(0).getId();\n+            \n+            TaskInstance ti = taskClient.getTaskInstance(CONTAINER_ID, taskId);\n+            assertEquals(\"HRInterview2\", ti.getFormName());\n+            \n+            taskClient.startTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR);\n+            taskClient.completeTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR, new HashMap<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92bae1f8c944dc07fe4d43d6b4b4475aa91cc7ac"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjQwNDgzNA==", "bodyText": "Can't we use Collections.emptyMap()?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2086#discussion_r426404834", "createdAt": "2020-05-18T06:56:22Z", "author": {"login": "jomarko"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/jbpm/FormServiceIntegrationTest.java", "diffHunk": "@@ -389,4 +390,46 @@ public void testGetTaskFormWithWrongContainerId() throws Exception {\n             KieServerAssert.assertSuccess(client.disposeContainer(CONTAINER_ID_V2));\n         }\n     }\n+    \n+    @Test\n+    public void testFormName() throws Exception {\n+        Long pid = processClient.startProcess(CONTAINER_ID, HIRING_2_PROCESS_ID);\n+        assertNotNull(pid);\n+        assertTrue(pid.longValue() > 0);\n+        \n+        try {\n+            changeUser(USER_ADMINISTRATOR);\n+            \n+            List<TaskSummary> tasks = taskClient.findTasksAssignedAsBusinessAdministrator(USER_ADMINISTRATOR, 0, 10);\n+            assertNotNull(tasks);\n+            Long taskId = tasks.get(0).getId();\n+            \n+            TaskInstance ti = taskClient.getTaskInstance(CONTAINER_ID, taskId);\n+            assertEquals(\"HRInterview2\", ti.getFormName());\n+            \n+            taskClient.startTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR);\n+            taskClient.completeTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR, new HashMap<>());\n+            \n+            tasks = taskClient.findTasksAssignedAsBusinessAdministrator(USER_ADMINISTRATOR, 0, 10);\n+            assertNotNull(tasks);\n+            taskId = tasks.get(0).getId();\n+            \n+            ti = taskClient.findTaskById(taskId);\n+            assertEquals(\"Tech Interview\", ti.getName());\n+            assertEquals(\"TechInterview\", ti.getFormName());\n+            \n+            taskClient.startTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR);\n+            taskClient.completeTask(CONTAINER_ID, taskId, USER_ADMINISTRATOR, new HashMap<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92bae1f8c944dc07fe4d43d6b4b4475aa91cc7ac"}, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "92bae1f8c944dc07fe4d43d6b4b4475aa91cc7ac", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/92bae1f8c944dc07fe4d43d6b4b4475aa91cc7ac", "committedDate": "2020-05-11T16:56:20Z", "message": "[JBPM-9147] getTaskById does not return formName"}, "afterCommit": {"oid": "696e6bf414585b66a962842588236e9771038326", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/696e6bf414585b66a962842588236e9771038326", "committedDate": "2020-05-18T09:13:53Z", "message": "[JBPM-9147] getTaskById does not return formName"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad1a80e666484ffdd779484e204c03c7f7084da3", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/ad1a80e666484ffdd779484e204c03c7f7084da3", "committedDate": "2020-05-18T09:18:30Z", "message": "[JBPM-9147] getTaskById does not return formName"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "696e6bf414585b66a962842588236e9771038326", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/696e6bf414585b66a962842588236e9771038326", "committedDate": "2020-05-18T09:13:53Z", "message": "[JBPM-9147] getTaskById does not return formName"}, "afterCommit": {"oid": "ad1a80e666484ffdd779484e204c03c7f7084da3", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/ad1a80e666484ffdd779484e204c03c7f7084da3", "committedDate": "2020-05-18T09:18:30Z", "message": "[JBPM-9147] getTaskById does not return formName"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNDcwODYw", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2086#pullrequestreview-413470860", "createdAt": "2020-05-18T10:34:43Z", "commit": {"oid": "ad1a80e666484ffdd779484e204c03c7f7084da3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1411, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}