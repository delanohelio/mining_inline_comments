{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3Njc5Nzg5", "number": 2120, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOToxNzoxOFrOECecZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOToxODozM1rOECeeHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDMxMzk5OnYy", "diffSide": "RIGHT", "path": "drools-ha/ha-core-infra/src/test/java/org/kie/hacep/LocalStorageKieSessionTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOToxNzoxOFrOGe9ENg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzoxNTo0MVrOGh0P7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExMDk2Ng==", "bodyText": "this timeout removal caused deadlock in previous reverted PR", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2120#discussion_r435110966", "createdAt": "2020-06-04T09:17:18Z", "author": {"login": "mareknovotny"}, "path": "drools-ha/ha-core-infra/src/test/java/org/kie/hacep/LocalStorageKieSessionTest.java", "diffHunk": "@@ -127,7 +127,7 @@ public void deleteTest() throws ExecutionException, InterruptedException {\n         assertEquals((Long) 0L, session.getFactCount().get());\n     }\n \n-    @Test(timeout = 20000)\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80adb2afbf502a5c1708dfe116fe3eb207e97e52"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA1OTQ2NA==", "bodyText": "do we really think this will work at the end?\nWDYT @danielezonca @mariofusco ?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2120#discussion_r438059464", "createdAt": "2020-06-10T11:44:04Z", "author": {"login": "mareknovotny"}, "path": "drools-ha/ha-core-infra/src/test/java/org/kie/hacep/LocalStorageKieSessionTest.java", "diffHunk": "@@ -127,7 +127,7 @@ public void deleteTest() throws ExecutionException, InterruptedException {\n         assertEquals((Long) 0L, session.getFactCount().get());\n     }\n \n-    @Test(timeout = 20000)\n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExMDk2Ng=="}, "originalCommit": {"oid": "80adb2afbf502a5c1708dfe116fe3eb207e97e52"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA3NDc5Mg==", "bodyText": "The current code has no reason to deadlock any more so it should be safe, btw fine for me to keep the timeout too. In the best case scenario it is not needed but it should not be a problem :)\n@desmax74 can you please restore the timeout?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2120#discussion_r438074792", "createdAt": "2020-06-10T12:14:41Z", "author": {"login": "danielezonca"}, "path": "drools-ha/ha-core-infra/src/test/java/org/kie/hacep/LocalStorageKieSessionTest.java", "diffHunk": "@@ -127,7 +127,7 @@ public void deleteTest() throws ExecutionException, InterruptedException {\n         assertEquals((Long) 0L, session.getFactCount().get());\n     }\n \n-    @Test(timeout = 20000)\n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExMDk2Ng=="}, "originalCommit": {"oid": "80adb2afbf502a5c1708dfe116fe3eb207e97e52"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODExMjIzOQ==", "bodyText": "thanks @danielezonca for explanation. IF there is no potential race condition we try without timeout, but if we see that we need to react quickly and add it there", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2120#discussion_r438112239", "createdAt": "2020-06-10T13:15:41Z", "author": {"login": "mareknovotny"}, "path": "drools-ha/ha-core-infra/src/test/java/org/kie/hacep/LocalStorageKieSessionTest.java", "diffHunk": "@@ -127,7 +127,7 @@ public void deleteTest() throws ExecutionException, InterruptedException {\n         assertEquals((Long) 0L, session.getFactCount().get());\n     }\n \n-    @Test(timeout = 20000)\n+    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExMDk2Ng=="}, "originalCommit": {"oid": "80adb2afbf502a5c1708dfe116fe3eb207e97e52"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDMxODM5OnYy", "diffSide": "RIGHT", "path": "drools-ha/ha-core-infra/src/test/resources/logback-test.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOToxODozM1rOGe9HLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOToyNzo1N1rOGe9dgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExMTcyNg==", "bodyText": "@danielezonca and myself were against this to go in final merge, so hopefully this  only for testing the change here and will be removed before approved PR, is that correct?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2120#discussion_r435111726", "createdAt": "2020-06-04T09:18:33Z", "author": {"login": "mareknovotny"}, "path": "drools-ha/ha-core-infra/src/test/resources/logback-test.xml", "diffHunk": "@@ -28,14 +28,18 @@\n     <producerConfig>bootstrap.servers=localhost:9092</producerConfig>\n   </appender>\n \n-  <logger name=\"org.hacep\" level=\"warn\" additivity=\"false\">\n+  <logger name=\"org.hacep\" level=\"debug\" additivity=\"false\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80adb2afbf502a5c1708dfe116fe3eb207e97e52"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExNzQ0Mg==", "bodyText": "yes", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2120#discussion_r435117442", "createdAt": "2020-06-04T09:27:57Z", "author": {"login": "desmax74"}, "path": "drools-ha/ha-core-infra/src/test/resources/logback-test.xml", "diffHunk": "@@ -28,14 +28,18 @@\n     <producerConfig>bootstrap.servers=localhost:9092</producerConfig>\n   </appender>\n \n-  <logger name=\"org.hacep\" level=\"warn\" additivity=\"false\">\n+  <logger name=\"org.hacep\" level=\"debug\" additivity=\"false\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTExMTcyNg=="}, "originalCommit": {"oid": "80adb2afbf502a5c1708dfe116fe3eb207e97e52"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2006, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}