{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1Nzk5MTQy", "number": 2287, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTowNzozN1rOEyP2vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTowODowMlrOEyP3hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTI0MDI5OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/KieServerImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTowNzozN1rOHoxzsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODo0NjowM1rOHpfZfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyMTEzOQ==", "bodyText": "It would be safer for avoiding NPE to compare the other way around, though it's not very likely that name is null.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (configItem.getName().equals(KieServerConstants.CFG_KIE_PASSWORD)) {\n          \n          \n            \n                            if (KieServerConstants.CFG_KIE_PASSWORD.equals(configItem.getName())) {", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2287#discussion_r512521139", "createdAt": "2020-10-27T09:07:37Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/KieServerImpl.java", "diffHunk": "@@ -1014,8 +1017,29 @@ private void updateExtensions(KieModuleMetaData metadata, KieContainerInstanceIm\n \n     public ServiceResponse<KieServerStateInfo> getServerState() {\n         KieServerStateInfo state = getInternalServerState();\n-        if(state != null) {\n-            return new ServiceResponse<KieServerStateInfo>(ServiceResponse.ResponseType.SUCCESS, \"Successfully loaded server state for server id \" + KieServerEnvironment.getServerId(), state);\n+        if (state != null) {\n+            KieServerConfig kieServerConfig = state.getConfiguration();\n+            List<KieServerConfigItem> kieConfigItems = kieServerConfig.getConfigItems();\n+            ListIterator<KieServerConfigItem> listIterator = kieConfigItems.listIterator();\n+            while (listIterator.hasNext()) {\n+                KieServerConfigItem configItem = listIterator.next();\n+                if (configItem.getName().equals(KieServerConstants.CFG_KIE_PASSWORD)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f159fa80d5f21001126af051c948f4f99c343cec"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI2ODA5Mg==", "bodyText": "@gmunozfe Thanks you for review. I made suggested changes.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2287#discussion_r513268092", "createdAt": "2020-10-28T08:46:03Z", "author": {"login": "abhijithumbe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/KieServerImpl.java", "diffHunk": "@@ -1014,8 +1017,29 @@ private void updateExtensions(KieModuleMetaData metadata, KieContainerInstanceIm\n \n     public ServiceResponse<KieServerStateInfo> getServerState() {\n         KieServerStateInfo state = getInternalServerState();\n-        if(state != null) {\n-            return new ServiceResponse<KieServerStateInfo>(ServiceResponse.ResponseType.SUCCESS, \"Successfully loaded server state for server id \" + KieServerEnvironment.getServerId(), state);\n+        if (state != null) {\n+            KieServerConfig kieServerConfig = state.getConfiguration();\n+            List<KieServerConfigItem> kieConfigItems = kieServerConfig.getConfigItems();\n+            ListIterator<KieServerConfigItem> listIterator = kieConfigItems.listIterator();\n+            while (listIterator.hasNext()) {\n+                KieServerConfigItem configItem = listIterator.next();\n+                if (configItem.getName().equals(KieServerConstants.CFG_KIE_PASSWORD)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyMTEzOQ=="}, "originalCommit": {"oid": "f159fa80d5f21001126af051c948f4f99c343cec"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTI0MTEzOnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/KieServerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTowNzo0N1rOHox0MQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTowNzo0N1rOHox0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyMTI2NQ==", "bodyText": "Same here", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2287#discussion_r512521265", "createdAt": "2020-10-27T09:07:47Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/KieServerImpl.java", "diffHunk": "@@ -1014,8 +1017,29 @@ private void updateExtensions(KieModuleMetaData metadata, KieContainerInstanceIm\n \n     public ServiceResponse<KieServerStateInfo> getServerState() {\n         KieServerStateInfo state = getInternalServerState();\n-        if(state != null) {\n-            return new ServiceResponse<KieServerStateInfo>(ServiceResponse.ResponseType.SUCCESS, \"Successfully loaded server state for server id \" + KieServerEnvironment.getServerId(), state);\n+        if (state != null) {\n+            KieServerConfig kieServerConfig = state.getConfiguration();\n+            List<KieServerConfigItem> kieConfigItems = kieServerConfig.getConfigItems();\n+            ListIterator<KieServerConfigItem> listIterator = kieConfigItems.listIterator();\n+            while (listIterator.hasNext()) {\n+                KieServerConfigItem configItem = listIterator.next();\n+                if (configItem.getName().equals(KieServerConstants.CFG_KIE_PASSWORD)) {\n+                    listIterator.remove();\n+                }\n+                if (configItem.getName().equals(KieServerConstants.CFG_KIE_TOKEN)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f159fa80d5f21001126af051c948f4f99c343cec"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTI0MTczOnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/KieServerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTowNzo1NVrOHox0iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTowNzo1NVrOHox0iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyMTM1Mg==", "bodyText": "Same here", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2287#discussion_r512521352", "createdAt": "2020-10-27T09:07:55Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/KieServerImpl.java", "diffHunk": "@@ -1014,8 +1017,29 @@ private void updateExtensions(KieModuleMetaData metadata, KieContainerInstanceIm\n \n     public ServiceResponse<KieServerStateInfo> getServerState() {\n         KieServerStateInfo state = getInternalServerState();\n-        if(state != null) {\n-            return new ServiceResponse<KieServerStateInfo>(ServiceResponse.ResponseType.SUCCESS, \"Successfully loaded server state for server id \" + KieServerEnvironment.getServerId(), state);\n+        if (state != null) {\n+            KieServerConfig kieServerConfig = state.getConfiguration();\n+            List<KieServerConfigItem> kieConfigItems = kieServerConfig.getConfigItems();\n+            ListIterator<KieServerConfigItem> listIterator = kieConfigItems.listIterator();\n+            while (listIterator.hasNext()) {\n+                KieServerConfigItem configItem = listIterator.next();\n+                if (configItem.getName().equals(KieServerConstants.CFG_KIE_PASSWORD)) {\n+                    listIterator.remove();\n+                }\n+                if (configItem.getName().equals(KieServerConstants.CFG_KIE_TOKEN)) {\n+                    listIterator.remove();\n+                }\n+                if (configItem.getName().equals(KieServerConstants.CFG_KIE_CONTROLLER_PASSWORD)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f159fa80d5f21001126af051c948f4f99c343cec"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTI0MjI5OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/KieServerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTowODowMlrOHox04Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTowODowMlrOHox04Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjUyMTQ0MQ==", "bodyText": "Same here", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2287#discussion_r512521441", "createdAt": "2020-10-27T09:08:02Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/KieServerImpl.java", "diffHunk": "@@ -1014,8 +1017,29 @@ private void updateExtensions(KieModuleMetaData metadata, KieContainerInstanceIm\n \n     public ServiceResponse<KieServerStateInfo> getServerState() {\n         KieServerStateInfo state = getInternalServerState();\n-        if(state != null) {\n-            return new ServiceResponse<KieServerStateInfo>(ServiceResponse.ResponseType.SUCCESS, \"Successfully loaded server state for server id \" + KieServerEnvironment.getServerId(), state);\n+        if (state != null) {\n+            KieServerConfig kieServerConfig = state.getConfiguration();\n+            List<KieServerConfigItem> kieConfigItems = kieServerConfig.getConfigItems();\n+            ListIterator<KieServerConfigItem> listIterator = kieConfigItems.listIterator();\n+            while (listIterator.hasNext()) {\n+                KieServerConfigItem configItem = listIterator.next();\n+                if (configItem.getName().equals(KieServerConstants.CFG_KIE_PASSWORD)) {\n+                    listIterator.remove();\n+                }\n+                if (configItem.getName().equals(KieServerConstants.CFG_KIE_TOKEN)) {\n+                    listIterator.remove();\n+                }\n+                if (configItem.getName().equals(KieServerConstants.CFG_KIE_CONTROLLER_PASSWORD)) {\n+                    listIterator.remove();\n+                }\n+                if (configItem.getName().equals(KieServerConstants.CFG_KIE_CONTROLLER_TOKEN)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f159fa80d5f21001126af051c948f4f99c343cec"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1973, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}