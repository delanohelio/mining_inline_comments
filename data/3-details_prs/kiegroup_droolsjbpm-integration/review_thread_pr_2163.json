{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzNTIxMzQx", "number": 2163, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo0NDo1NlrOEQQp_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMTowNDozOVrOEQkqWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NDg1NTY2OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNTo0NDo1NlrOG0UHiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQwNjo0NzoyMFrOG0qW6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUwODc0Nw==", "bodyText": "Just for completeness, you can add\nAssertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null\").get(String.class)).doesNotContain(\"null\");", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2163#discussion_r457508747", "createdAt": "2020-07-20T15:44:56Z", "author": {"login": "fjtirado"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java", "diffHunk": "@@ -218,6 +229,21 @@ public void testBasicJbpmRequestManyAcceptHeaders() throws Exception {\n \n     }\n \n+    @Test\n+    public void testBasicJbpmRequestAcceptHeadersStrictAndField() throws Exception {\n+        assumeTrue(marshallingFormat == MarshallingFormat.JSON);\n+\n+        long processId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_USERTASK);\n+        ProcessInstance desc = processClient.getProcessInstance(CONTAINER_ID, processId);\n+        TaskSummary[] tasks = desc.getActiveUserTasks().getTasks();\n+        assertTrue(tasks.length > 0);\n+\n+        WebTarget target = newRequest(RestURI.build(TestConfig.getKieServerHttpUrl(), QUERY_URI + \"/\" + TASK_GET_URI, Collections.singletonMap(TASK_INSTANCE_ID, tasks[0].getId())));\n+        Assertions.assertThat(target.request(MediaType.APPLICATION_JSON_TYPE).get(String.class)).contains(\"null\");\n+        Assertions.assertThat(target.request().header(\"content-type\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");\n+        Assertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eacaa0937827cc74bdd62fb20a5a40ed89686f52"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Nzg3MzEyOQ==", "bodyText": "Good point, added.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2163#discussion_r457873129", "createdAt": "2020-07-21T06:47:20Z", "author": {"login": "sutaakar"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java", "diffHunk": "@@ -218,6 +229,21 @@ public void testBasicJbpmRequestManyAcceptHeaders() throws Exception {\n \n     }\n \n+    @Test\n+    public void testBasicJbpmRequestAcceptHeadersStrictAndField() throws Exception {\n+        assumeTrue(marshallingFormat == MarshallingFormat.JSON);\n+\n+        long processId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_USERTASK);\n+        ProcessInstance desc = processClient.getProcessInstance(CONTAINER_ID, processId);\n+        TaskSummary[] tasks = desc.getActiveUserTasks().getTasks();\n+        assertTrue(tasks.length > 0);\n+\n+        WebTarget target = newRequest(RestURI.build(TestConfig.getKieServerHttpUrl(), QUERY_URI + \"/\" + TASK_GET_URI, Collections.singletonMap(TASK_INSTANCE_ID, tasks[0].getId())));\n+        Assertions.assertThat(target.request(MediaType.APPLICATION_JSON_TYPE).get(String.class)).contains(\"null\");\n+        Assertions.assertThat(target.request().header(\"content-type\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");\n+        Assertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzUwODc0Nw=="}, "originalCommit": {"oid": "eacaa0937827cc74bdd62fb20a5a40ed89686f52"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1ODEzMzM2OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMTowNDozOVrOG0y_NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMToxNDozNlrOG0zSIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxNDUxNw==", "bodyText": "And just for complete completeness, you can add\nAssertions.assertThat(target.request().header(\"content-type\", MediaType.APPLICATION_JSON + \";fields=not_null\").get(String.class)).doesNotContain(\"null\");", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2163#discussion_r458014517", "createdAt": "2020-07-21T11:04:39Z", "author": {"login": "MarianMacik"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java", "diffHunk": "@@ -218,6 +229,22 @@ public void testBasicJbpmRequestManyAcceptHeaders() throws Exception {\n \n     }\n \n+    @Test\n+    public void testBasicJbpmRequestAcceptHeadersStrictAndField() throws Exception {\n+        assumeTrue(marshallingFormat == MarshallingFormat.JSON);\n+\n+        long processId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_USERTASK);\n+        ProcessInstance desc = processClient.getProcessInstance(CONTAINER_ID, processId);\n+        TaskSummary[] tasks = desc.getActiveUserTasks().getTasks();\n+        assertTrue(tasks.length > 0);\n+\n+        WebTarget target = newRequest(RestURI.build(TestConfig.getKieServerHttpUrl(), QUERY_URI + \"/\" + TASK_GET_URI, Collections.singletonMap(TASK_INSTANCE_ID, tasks[0].getId())));\n+        Assertions.assertThat(target.request(MediaType.APPLICATION_JSON_TYPE).get(String.class)).contains(\"null\");\n+        Assertions.assertThat(target.request().header(\"content-type\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");\n+        Assertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");\n+        Assertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null\").get(String.class)).doesNotContain(\"null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67d8e2f7b59fbae5f797d08d9fc70ec0530d83b1"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxOTM2MA==", "bodyText": "Added", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2163#discussion_r458019360", "createdAt": "2020-07-21T11:14:36Z", "author": {"login": "sutaakar"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/rest/JbpmRestIntegrationTest.java", "diffHunk": "@@ -218,6 +229,22 @@ public void testBasicJbpmRequestManyAcceptHeaders() throws Exception {\n \n     }\n \n+    @Test\n+    public void testBasicJbpmRequestAcceptHeadersStrictAndField() throws Exception {\n+        assumeTrue(marshallingFormat == MarshallingFormat.JSON);\n+\n+        long processId = processClient.startProcess(CONTAINER_ID, PROCESS_ID_USERTASK);\n+        ProcessInstance desc = processClient.getProcessInstance(CONTAINER_ID, processId);\n+        TaskSummary[] tasks = desc.getActiveUserTasks().getTasks();\n+        assertTrue(tasks.length > 0);\n+\n+        WebTarget target = newRequest(RestURI.build(TestConfig.getKieServerHttpUrl(), QUERY_URI + \"/\" + TASK_GET_URI, Collections.singletonMap(TASK_INSTANCE_ID, tasks[0].getId())));\n+        Assertions.assertThat(target.request(MediaType.APPLICATION_JSON_TYPE).get(String.class)).contains(\"null\");\n+        Assertions.assertThat(target.request().header(\"content-type\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");\n+        Assertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null;strict=true\").get(String.class)).doesNotContain(\"null\");\n+        Assertions.assertThat(target.request().header(\"accept\", MediaType.APPLICATION_JSON + \";fields=not_null\").get(String.class)).doesNotContain(\"null\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAxNDUxNw=="}, "originalCommit": {"oid": "67d8e2f7b59fbae5f797d08d9fc70ec0530d83b1"}, "originalPosition": 77}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2047, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}