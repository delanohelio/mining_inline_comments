{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NjIxMDI4", "number": 2116, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTo0NTo1N1rOECHilg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDo0OTowOVrOECMDDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjU2MTUwOnYy", "diffSide": "RIGHT", "path": "kie-spring-boot/kie-spring-boot-autoconfiguration/kie-server-spring-boot-autoconfiguration-task-assigning-runtime/src/test/java/org/kie/server/springboot/autoconfiguration/taskassigning/TaskAssigningPersistenceUnitPostProcessorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTo0NTo1N1rOGeYJDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMTo0NTo1N1rOGeYJDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDUwNTk5OQ==", "bodyText": "If this assertion fails, the only thing we learn is \"should have been true, but was false\".\nI recommend using e.g. AssertJ library for rich String-related assertions.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2116#discussion_r434505999", "createdAt": "2020-06-03T11:45:57Z", "author": {"login": "rsynek"}, "path": "kie-spring-boot/kie-spring-boot-autoconfiguration/kie-server-spring-boot-autoconfiguration-task-assigning-runtime/src/test/java/org/kie/server/springboot/autoconfiguration/taskassigning/TaskAssigningPersistenceUnitPostProcessorTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.server.springboot.autoconfiguration.taskassigning;\n+\n+import org.junit.Test;\n+import org.kie.server.services.taskassigning.runtime.persistence.PlanningTaskImpl;\n+import org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class TaskAssigningPersistenceUnitPostProcessorTest {\n+\n+    @Test\n+    public void postProcessPersistenceUnitInfo() {\n+        MutablePersistenceUnitInfo persistenceUnitInfo = new MutablePersistenceUnitInfo();\n+        TaskAssigningPersistenceUnitPostProcessor processor = new TaskAssigningPersistenceUnitPostProcessor();\n+        processor.postProcessPersistenceUnitInfo(persistenceUnitInfo);\n+        assertTrue(persistenceUnitInfo.getManagedClassNames().contains(PlanningTaskImpl.class.getName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bbdefe05154c38fbded09b82b1e5850272614dc"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzI5OTk2OnYy", "diffSide": "RIGHT", "path": "kie-spring-boot/kie-spring-boot-autoconfiguration/kie-server-spring-boot-autoconfiguration-task-assigning-planning/src/main/java/org/kie/server/springboot/autoconfiguration/taskassigning/TaskAssigningPlanningKieServerAutoConfiguration.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNDo0OTowOVrOGefeMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxOTozOTo1OFrOGeqr0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYyNjA5OA==", "bodyText": "I don't see the TaskAssigningConstants.TASK_ASSIGNING_RUNTIME_DELEGATE_PAGE_SIZE being used here. Is it intentional?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2116#discussion_r434626098", "createdAt": "2020-06-03T14:49:09Z", "author": {"login": "rsynek"}, "path": "kie-spring-boot/kie-spring-boot-autoconfiguration/kie-server-spring-boot-autoconfiguration-task-assigning-planning/src/main/java/org/kie/server/springboot/autoconfiguration/taskassigning/TaskAssigningPlanningKieServerAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.server.springboot.autoconfiguration.taskassigning;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.kie.server.services.api.KieServerExtension;\n+import org.kie.server.services.impl.KieServerImpl;\n+import org.kie.server.services.taskassigning.core.model.ModelConstants;\n+import org.kie.server.services.taskassigning.planning.TaskAssigningPlanningKieServerExtension;\n+import org.kie.server.services.taskassigning.user.system.simple.SimpleUserSystemService;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.event.ContextClosedEvent;\n+import org.springframework.context.event.EventListener;\n+\n+import static org.apache.commons.lang3.StringUtils.isNotEmpty;\n+import static org.kie.server.api.KieServerConstants.KIE_TASK_ASSIGNING_PLANNING_EXT_DISABLED;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_KEY_STORE_PROCESS_RUNTIME_ALIAS;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_KEY_STORE_PROCESS_RUNTIME_PWD;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_PROCESS_RUNTIME_PWD;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_PROCESS_RUNTIME_TARGET_USER;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_PROCESS_RUNTIME_TIMEOUT;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_PROCESS_RUNTIME_URL;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_PROCESS_RUNTIME_USER;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_PUBLISH_WINDOW_SIZE;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_CONFIG_RESOURCE;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_CONTAINER_ARTIFACT_ID;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_CONTAINER_GROUP_ID;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_CONTAINER_ID;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_CONTAINER_VERSION;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_MOVE_THREAD_BUFFER_SIZE;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_MOVE_THREAD_COUNT;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_THREAD_FACTORY_CLASS;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SYNC_INTERVAL;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SYNC_QUERIES_SHIFT;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_USERS_SYNC_INTERVAL;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_USER_SYSTEM_CONTAINER_ARTIFACT_ID;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_USER_SYSTEM_CONTAINER_GROUP_ID;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_USER_SYSTEM_CONTAINER_ID;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_USER_SYSTEM_CONTAINER_VERSION;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_USER_SYSTEM_NAME;\n+\n+@Configuration\n+@ConditionalOnClass({KieServerImpl.class})\n+@EnableConfigurationProperties({TaskAssigningPlanningProperties.class})\n+public class TaskAssigningPlanningKieServerAutoConfiguration {\n+\n+    private TaskAssigningPlanningProperties properties;\n+    private Map<String, String> restorableProperties = new HashMap<>();\n+\n+    public TaskAssigningPlanningKieServerAutoConfiguration(TaskAssigningPlanningProperties properties) {\n+        this.properties = properties;\n+    }\n+\n+    @Bean\n+    @ConditionalOnMissingBean(name = \"taskAssigningPlanningServerExtension\")\n+    @ConditionalOnProperty(name = \"kieserver.taskAssigning.planning.enabled\")\n+    public KieServerExtension taskAssigningPlanningServerExtension() {\n+        initProperties();\n+        return new TaskAssigningPlanningKieServerExtension();\n+    }\n+\n+    @EventListener\n+    public void handleContextRefreshEvent(ContextClosedEvent evt) {\n+        restoreProperties();\n+    }\n+\n+    private void initProperties() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bbdefe05154c38fbded09b82b1e5850272614dc"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDgwOTgwOA==", "bodyText": "good catch, was missing. Added.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2116#discussion_r434809808", "createdAt": "2020-06-03T19:39:58Z", "author": {"login": "wmedvede"}, "path": "kie-spring-boot/kie-spring-boot-autoconfiguration/kie-server-spring-boot-autoconfiguration-task-assigning-planning/src/main/java/org/kie/server/springboot/autoconfiguration/taskassigning/TaskAssigningPlanningKieServerAutoConfiguration.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.server.springboot.autoconfiguration.taskassigning;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.kie.server.services.api.KieServerExtension;\n+import org.kie.server.services.impl.KieServerImpl;\n+import org.kie.server.services.taskassigning.core.model.ModelConstants;\n+import org.kie.server.services.taskassigning.planning.TaskAssigningPlanningKieServerExtension;\n+import org.kie.server.services.taskassigning.user.system.simple.SimpleUserSystemService;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnClass;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnMissingBean;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.boot.context.properties.EnableConfigurationProperties;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.event.ContextClosedEvent;\n+import org.springframework.context.event.EventListener;\n+\n+import static org.apache.commons.lang3.StringUtils.isNotEmpty;\n+import static org.kie.server.api.KieServerConstants.KIE_TASK_ASSIGNING_PLANNING_EXT_DISABLED;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_KEY_STORE_PROCESS_RUNTIME_ALIAS;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_KEY_STORE_PROCESS_RUNTIME_PWD;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_PROCESS_RUNTIME_PWD;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_PROCESS_RUNTIME_TARGET_USER;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_PROCESS_RUNTIME_TIMEOUT;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_PROCESS_RUNTIME_URL;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_PROCESS_RUNTIME_USER;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_PUBLISH_WINDOW_SIZE;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_CONFIG_RESOURCE;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_CONTAINER_ARTIFACT_ID;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_CONTAINER_GROUP_ID;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_CONTAINER_ID;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_CONTAINER_VERSION;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_MOVE_THREAD_BUFFER_SIZE;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_MOVE_THREAD_COUNT;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SOLVER_THREAD_FACTORY_CLASS;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SYNC_INTERVAL;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_SYNC_QUERIES_SHIFT;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_USERS_SYNC_INTERVAL;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_USER_SYSTEM_CONTAINER_ARTIFACT_ID;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_USER_SYSTEM_CONTAINER_GROUP_ID;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_USER_SYSTEM_CONTAINER_ID;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_USER_SYSTEM_CONTAINER_VERSION;\n+import static org.kie.server.services.taskassigning.planning.TaskAssigningConstants.TASK_ASSIGNING_USER_SYSTEM_NAME;\n+\n+@Configuration\n+@ConditionalOnClass({KieServerImpl.class})\n+@EnableConfigurationProperties({TaskAssigningPlanningProperties.class})\n+public class TaskAssigningPlanningKieServerAutoConfiguration {\n+\n+    private TaskAssigningPlanningProperties properties;\n+    private Map<String, String> restorableProperties = new HashMap<>();\n+\n+    public TaskAssigningPlanningKieServerAutoConfiguration(TaskAssigningPlanningProperties properties) {\n+        this.properties = properties;\n+    }\n+\n+    @Bean\n+    @ConditionalOnMissingBean(name = \"taskAssigningPlanningServerExtension\")\n+    @ConditionalOnProperty(name = \"kieserver.taskAssigning.planning.enabled\")\n+    public KieServerExtension taskAssigningPlanningServerExtension() {\n+        initProperties();\n+        return new TaskAssigningPlanningKieServerExtension();\n+    }\n+\n+    @EventListener\n+    public void handleContextRefreshEvent(ContextClosedEvent evt) {\n+        restoreProperties();\n+    }\n+\n+    private void initProperties() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDYyNjA5OA=="}, "originalCommit": {"oid": "6bbdefe05154c38fbded09b82b1e5850272614dc"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2176, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}