{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNzQwMzk4", "number": 2030, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNToyOTowM1rODjgCVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjoyNzowOVrODjy9Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTUxNjM4OnYy", "diffSide": "RIGHT", "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-integ-tests-sample/pom.xml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNToyOTowNVrOFvV50Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QyMzozNDo1MFrOFvk4SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE4NjI1Nw==", "bodyText": "Have you consider using some dependency which is declared in kie-parent, like https://github.com/kiegroup/droolsjbpm-build-bootstrap/blob/master/pom.xml#L2386-L2390 ?\nIf specifically this dependency needs to be used, can you please define it in kie-parent?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r385186257", "createdAt": "2020-02-27T15:29:05Z", "author": {"login": "sutaakar"}, "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-integ-tests-sample/pom.xml", "diffHunk": "@@ -15,6 +15,27 @@\n     <start-class>org.kie.server.springboot.samples.KieServerIntegrationTestsApplication</start-class>\n   </properties>\n \n+  <dependencyManagement>\n+    <dependencies>      \n+      <dependency>\n+        <groupId>org.webjars</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e6705d7df82863f8a5b6dcab0ee5decdaef7d1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQxOTI2NA==", "bodyText": "@sutaakar it seems like cxf is not working with springfox. I've also followed this approach as it is the same documented into kie-docs.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r385419264", "createdAt": "2020-02-27T22:56:59Z", "author": {"login": "gmunozfe"}, "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-integ-tests-sample/pom.xml", "diffHunk": "@@ -15,6 +15,27 @@\n     <start-class>org.kie.server.springboot.samples.KieServerIntegrationTestsApplication</start-class>\n   </properties>\n \n+  <dependencyManagement>\n+    <dependencies>      \n+      <dependency>\n+        <groupId>org.webjars</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE4NjI1Nw=="}, "originalCommit": {"oid": "93e6705d7df82863f8a5b6dcab0ee5decdaef7d1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQzMTYyNQ==", "bodyText": "Done, now depends on droolsjbpm-build-bootstrap#1199, as indicated above", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r385431625", "createdAt": "2020-02-27T23:34:50Z", "author": {"login": "gmunozfe"}, "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-integ-tests-sample/pom.xml", "diffHunk": "@@ -15,6 +15,27 @@\n     <start-class>org.kie.server.springboot.samples.KieServerIntegrationTestsApplication</start-class>\n   </properties>\n \n+  <dependencyManagement>\n+    <dependencies>      \n+      <dependency>\n+        <groupId>org.webjars</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE4NjI1Nw=="}, "originalCommit": {"oid": "93e6705d7df82863f8a5b6dcab0ee5decdaef7d1"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTUyNzQ4OnYy", "diffSide": "RIGHT", "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-integ-tests-sample/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNTozMTozMFrOFvWAZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoxMDo0MVrOFvZtqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE4Nzk0MQ==", "bodyText": "Can you please move the version declaration to one location which can be inherited here and in kie-server-spring-boot-sample? So there will be a single source of the version declaration.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r385187941", "createdAt": "2020-02-27T15:31:30Z", "author": {"login": "sutaakar"}, "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-integ-tests-sample/pom.xml", "diffHunk": "@@ -15,6 +15,27 @@\n     <start-class>org.kie.server.springboot.samples.KieServerIntegrationTestsApplication</start-class>\n   </properties>\n \n+  <dependencyManagement>\n+    <dependencies>      \n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>swagger-ui</artifactId>\n+        <version>2.2.10</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.cxf</groupId>\n+        <artifactId>cxf-rt-rs-service-description-swagger</artifactId>\n+        <version>${version.org.apache.cxf}</version>\n+      </dependency>\n+      <!-- Notice that higher versions like 1.5.20 contain a bug (No message body writer has been found) so downgraded to 1.5.15 -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93e6705d7df82863f8a5b6dcab0ee5decdaef7d1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI0ODY4Mw==", "bodyText": "Done, moved to kie-spring-boot-samples and deleted from the other 2 children.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r385248683", "createdAt": "2020-02-27T17:10:41Z", "author": {"login": "gmunozfe"}, "path": "kie-spring-boot/kie-spring-boot-samples/kie-server-spring-boot-integ-tests-sample/pom.xml", "diffHunk": "@@ -15,6 +15,27 @@\n     <start-class>org.kie.server.springboot.samples.KieServerIntegrationTestsApplication</start-class>\n   </properties>\n \n+  <dependencyManagement>\n+    <dependencies>      \n+      <dependency>\n+        <groupId>org.webjars</groupId>\n+        <artifactId>swagger-ui</artifactId>\n+        <version>2.2.10</version>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.apache.cxf</groupId>\n+        <artifactId>cxf-rt-rs-service-description-swagger</artifactId>\n+        <version>${version.org.apache.cxf}</version>\n+      </dependency>\n+      <!-- Notice that higher versions like 1.5.20 contain a bug (No message body writer has been found) so downgraded to 1.5.15 -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTE4Nzk0MQ=="}, "originalCommit": {"oid": "93e6705d7df82863f8a5b6dcab0ee5decdaef7d1"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODU5MDMyOnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjoxNjoyOVrOFvzEwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODowMzowNFrOFxjLmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2NDE5Mg==", "bodyText": "Can you please remove this line from assertResponse and place it for example directly to test methods?\nIt is a side effect and is unrelated to meaning of assertResponse method - according to its name I would expect it just to check response, not setting some method variable.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r385664192", "createdAt": "2020-02-28T12:16:29Z", "author": {"login": "sutaakar"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "diffHunk": "@@ -53,39 +57,49 @@ public static void closeHttpClient() {\n \n     @Test\n     public void testSwaggerDocs() throws Exception {\n-        String html = invokeGet(getContextRoot()+\"docs/\");\n+        Response response = invokeGet(getContextRoot(3)+\"docs/\");\n         \n-        assertThat(Jsoup.parse(html).title()).isEqualTo(\"Execution Server Documentation\");\n+        if (response.getStatus()!=200) {\n+            //Springboot Swagger Docs is located in other URL\n+            response = invokeGet(getContextRoot(1)+\"api-docs?url=\"+getContextRoot(1)+\"swagger.json\");\n+        }\n+\n+        assertResponse(response);\n+        assertThat(Jsoup.parse(responseStr).title()).isIn(\"Execution Server Documentation\", \"Swagger UI\");\n     }\n \n     @Test\n     @SuppressWarnings(\"unchecked\")\n     public void testSwaggerJson() throws Exception {\n-        String responseStr = invokeGet(getContextRoot()+\"services/rest/server/swagger.json\");\n-        \n+        Response response = invokeGet(TestConfig.getKieServerHttpUrl()+\"/swagger.json\");\n+        assertResponse(response);\n+\n         ObjectMapper om = new ObjectMapper();\n         HashMap<String, Object> hm = (HashMap<String, Object>) om.readValue(responseStr, HashMap.class);\n         assertNotNull(hm.get(\"swagger\"));\n         assertNotNull(hm.get(\"info\"));\n         assertEquals(\"KIE Server\", ((HashMap<String, Object>) hm.get(\"info\")).get(\"title\"));\n      }\n \n-    protected String getContextRoot() {\n-        //Navigate to parent path 3 times to get context root\n+    protected String getContextRoot(int foldersUp) {\n+        //Navigate to parent path N folders up to get context root\n         String url = TestConfig.getKieServerHttpUrl();\n         int pos = url.length();\n-        for (int i = 0; i < 3; i++) {\n+        for (int i = 0; i < foldersUp; i++) {\n             pos = url.lastIndexOf('/', pos - 1);\n         }\n         return url.substring(0, pos + 1);\n     }\n \n-    protected String invokeGet(String docsUri) {\n+    protected Response invokeGet(String docsUri) {\n+        logger.info(\"[GET] \" + docsUri);\n         WebTarget clientRequest = httpClient.target(docsUri);\n-        Response response = clientRequest.request().get();\n+        return clientRequest.request().get();\n+    }\n \n+    private void assertResponse(Response response) {\n         assertEquals(200, response.getStatus());\n         assertNotNull(response.getEntity());\n-        return response.readEntity(String.class);\n+        responseStr = response.readEntity(String.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMDk1NQ==", "bodyText": "Done, moved to upper level", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r387500955", "createdAt": "2020-03-04T08:03:04Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "diffHunk": "@@ -53,39 +57,49 @@ public static void closeHttpClient() {\n \n     @Test\n     public void testSwaggerDocs() throws Exception {\n-        String html = invokeGet(getContextRoot()+\"docs/\");\n+        Response response = invokeGet(getContextRoot(3)+\"docs/\");\n         \n-        assertThat(Jsoup.parse(html).title()).isEqualTo(\"Execution Server Documentation\");\n+        if (response.getStatus()!=200) {\n+            //Springboot Swagger Docs is located in other URL\n+            response = invokeGet(getContextRoot(1)+\"api-docs?url=\"+getContextRoot(1)+\"swagger.json\");\n+        }\n+\n+        assertResponse(response);\n+        assertThat(Jsoup.parse(responseStr).title()).isIn(\"Execution Server Documentation\", \"Swagger UI\");\n     }\n \n     @Test\n     @SuppressWarnings(\"unchecked\")\n     public void testSwaggerJson() throws Exception {\n-        String responseStr = invokeGet(getContextRoot()+\"services/rest/server/swagger.json\");\n-        \n+        Response response = invokeGet(TestConfig.getKieServerHttpUrl()+\"/swagger.json\");\n+        assertResponse(response);\n+\n         ObjectMapper om = new ObjectMapper();\n         HashMap<String, Object> hm = (HashMap<String, Object>) om.readValue(responseStr, HashMap.class);\n         assertNotNull(hm.get(\"swagger\"));\n         assertNotNull(hm.get(\"info\"));\n         assertEquals(\"KIE Server\", ((HashMap<String, Object>) hm.get(\"info\")).get(\"title\"));\n      }\n \n-    protected String getContextRoot() {\n-        //Navigate to parent path 3 times to get context root\n+    protected String getContextRoot(int foldersUp) {\n+        //Navigate to parent path N folders up to get context root\n         String url = TestConfig.getKieServerHttpUrl();\n         int pos = url.length();\n-        for (int i = 0; i < 3; i++) {\n+        for (int i = 0; i < foldersUp; i++) {\n             pos = url.lastIndexOf('/', pos - 1);\n         }\n         return url.substring(0, pos + 1);\n     }\n \n-    protected String invokeGet(String docsUri) {\n+    protected Response invokeGet(String docsUri) {\n+        logger.info(\"[GET] \" + docsUri);\n         WebTarget clientRequest = httpClient.target(docsUri);\n-        Response response = clientRequest.request().get();\n+        return clientRequest.request().get();\n+    }\n \n+    private void assertResponse(Response response) {\n         assertEquals(200, response.getStatus());\n         assertNotNull(response.getEntity());\n-        return response.readEntity(String.class);\n+        responseStr = response.readEntity(String.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2NDE5Mg=="}, "originalCommit": {"oid": "bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODYxNDMwOnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjoyNjoyNVrOFvzTpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODowMzoxN1rOFxjL8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2ODAwNg==", "bodyText": "Can you please close the response in the end of test?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r385668006", "createdAt": "2020-02-28T12:26:25Z", "author": {"login": "sutaakar"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "diffHunk": "@@ -53,39 +57,49 @@ public static void closeHttpClient() {\n \n     @Test\n     public void testSwaggerDocs() throws Exception {\n-        String html = invokeGet(getContextRoot()+\"docs/\");\n+        Response response = invokeGet(getContextRoot(3)+\"docs/\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMTA0MQ==", "bodyText": "done", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r387501041", "createdAt": "2020-03-04T08:03:17Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "diffHunk": "@@ -53,39 +57,49 @@ public static void closeHttpClient() {\n \n     @Test\n     public void testSwaggerDocs() throws Exception {\n-        String html = invokeGet(getContextRoot()+\"docs/\");\n+        Response response = invokeGet(getContextRoot(3)+\"docs/\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2ODAwNg=="}, "originalCommit": {"oid": "bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODYxNTA1OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjoyNjozOVrOFvzUCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODowMzozN1rOFxjMcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2ODEwNw==", "bodyText": "Same as above.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r385668107", "createdAt": "2020-02-28T12:26:39Z", "author": {"login": "sutaakar"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "diffHunk": "@@ -53,39 +57,49 @@ public static void closeHttpClient() {\n \n     @Test\n     public void testSwaggerDocs() throws Exception {\n-        String html = invokeGet(getContextRoot()+\"docs/\");\n+        Response response = invokeGet(getContextRoot(3)+\"docs/\");\n         \n-        assertThat(Jsoup.parse(html).title()).isEqualTo(\"Execution Server Documentation\");\n+        if (response.getStatus()!=200) {\n+            //Springboot Swagger Docs is located in other URL\n+            response = invokeGet(getContextRoot(1)+\"api-docs?url=\"+getContextRoot(1)+\"swagger.json\");\n+        }\n+\n+        assertResponse(response);\n+        assertThat(Jsoup.parse(responseStr).title()).isIn(\"Execution Server Documentation\", \"Swagger UI\");\n     }\n \n     @Test\n     @SuppressWarnings(\"unchecked\")\n     public void testSwaggerJson() throws Exception {\n-        String responseStr = invokeGet(getContextRoot()+\"services/rest/server/swagger.json\");\n-        \n+        Response response = invokeGet(TestConfig.getKieServerHttpUrl()+\"/swagger.json\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMTE3MQ==", "bodyText": "done", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r387501171", "createdAt": "2020-03-04T08:03:37Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "diffHunk": "@@ -53,39 +57,49 @@ public static void closeHttpClient() {\n \n     @Test\n     public void testSwaggerDocs() throws Exception {\n-        String html = invokeGet(getContextRoot()+\"docs/\");\n+        Response response = invokeGet(getContextRoot(3)+\"docs/\");\n         \n-        assertThat(Jsoup.parse(html).title()).isEqualTo(\"Execution Server Documentation\");\n+        if (response.getStatus()!=200) {\n+            //Springboot Swagger Docs is located in other URL\n+            response = invokeGet(getContextRoot(1)+\"api-docs?url=\"+getContextRoot(1)+\"swagger.json\");\n+        }\n+\n+        assertResponse(response);\n+        assertThat(Jsoup.parse(responseStr).title()).isIn(\"Execution Server Documentation\", \"Swagger UI\");\n     }\n \n     @Test\n     @SuppressWarnings(\"unchecked\")\n     public void testSwaggerJson() throws Exception {\n-        String responseStr = invokeGet(getContextRoot()+\"services/rest/server/swagger.json\");\n-        \n+        Response response = invokeGet(TestConfig.getKieServerHttpUrl()+\"/swagger.json\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2ODEwNw=="}, "originalCommit": {"oid": "bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODYxNjE5OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMjoyNzowOVrOFvzUvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODowMzoyN1rOFxjMKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2ODI4Nw==", "bodyText": "Can you please change the log level to debug?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r385668287", "createdAt": "2020-02-28T12:27:09Z", "author": {"login": "sutaakar"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "diffHunk": "@@ -53,39 +57,49 @@ public static void closeHttpClient() {\n \n     @Test\n     public void testSwaggerDocs() throws Exception {\n-        String html = invokeGet(getContextRoot()+\"docs/\");\n+        Response response = invokeGet(getContextRoot(3)+\"docs/\");\n         \n-        assertThat(Jsoup.parse(html).title()).isEqualTo(\"Execution Server Documentation\");\n+        if (response.getStatus()!=200) {\n+            //Springboot Swagger Docs is located in other URL\n+            response = invokeGet(getContextRoot(1)+\"api-docs?url=\"+getContextRoot(1)+\"swagger.json\");\n+        }\n+\n+        assertResponse(response);\n+        assertThat(Jsoup.parse(responseStr).title()).isIn(\"Execution Server Documentation\", \"Swagger UI\");\n     }\n \n     @Test\n     @SuppressWarnings(\"unchecked\")\n     public void testSwaggerJson() throws Exception {\n-        String responseStr = invokeGet(getContextRoot()+\"services/rest/server/swagger.json\");\n-        \n+        Response response = invokeGet(TestConfig.getKieServerHttpUrl()+\"/swagger.json\");\n+        assertResponse(response);\n+\n         ObjectMapper om = new ObjectMapper();\n         HashMap<String, Object> hm = (HashMap<String, Object>) om.readValue(responseStr, HashMap.class);\n         assertNotNull(hm.get(\"swagger\"));\n         assertNotNull(hm.get(\"info\"));\n         assertEquals(\"KIE Server\", ((HashMap<String, Object>) hm.get(\"info\")).get(\"title\"));\n      }\n \n-    protected String getContextRoot() {\n-        //Navigate to parent path 3 times to get context root\n+    protected String getContextRoot(int foldersUp) {\n+        //Navigate to parent path N folders up to get context root\n         String url = TestConfig.getKieServerHttpUrl();\n         int pos = url.length();\n-        for (int i = 0; i < 3; i++) {\n+        for (int i = 0; i < foldersUp; i++) {\n             pos = url.lastIndexOf('/', pos - 1);\n         }\n         return url.substring(0, pos + 1);\n     }\n \n-    protected String invokeGet(String docsUri) {\n+    protected Response invokeGet(String docsUri) {\n+        logger.info(\"[GET] \" + docsUri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwMTA5OQ==", "bodyText": "done", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2030#discussion_r387501099", "createdAt": "2020-03-04T08:03:27Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-all/src/test/java/org/kie/server/integrationtests/swagger/SwaggerIntegrationTest.java", "diffHunk": "@@ -53,39 +57,49 @@ public static void closeHttpClient() {\n \n     @Test\n     public void testSwaggerDocs() throws Exception {\n-        String html = invokeGet(getContextRoot()+\"docs/\");\n+        Response response = invokeGet(getContextRoot(3)+\"docs/\");\n         \n-        assertThat(Jsoup.parse(html).title()).isEqualTo(\"Execution Server Documentation\");\n+        if (response.getStatus()!=200) {\n+            //Springboot Swagger Docs is located in other URL\n+            response = invokeGet(getContextRoot(1)+\"api-docs?url=\"+getContextRoot(1)+\"swagger.json\");\n+        }\n+\n+        assertResponse(response);\n+        assertThat(Jsoup.parse(responseStr).title()).isIn(\"Execution Server Documentation\", \"Swagger UI\");\n     }\n \n     @Test\n     @SuppressWarnings(\"unchecked\")\n     public void testSwaggerJson() throws Exception {\n-        String responseStr = invokeGet(getContextRoot()+\"services/rest/server/swagger.json\");\n-        \n+        Response response = invokeGet(TestConfig.getKieServerHttpUrl()+\"/swagger.json\");\n+        assertResponse(response);\n+\n         ObjectMapper om = new ObjectMapper();\n         HashMap<String, Object> hm = (HashMap<String, Object>) om.readValue(responseStr, HashMap.class);\n         assertNotNull(hm.get(\"swagger\"));\n         assertNotNull(hm.get(\"info\"));\n         assertEquals(\"KIE Server\", ((HashMap<String, Object>) hm.get(\"info\")).get(\"title\"));\n      }\n \n-    protected String getContextRoot() {\n-        //Navigate to parent path 3 times to get context root\n+    protected String getContextRoot(int foldersUp) {\n+        //Navigate to parent path N folders up to get context root\n         String url = TestConfig.getKieServerHttpUrl();\n         int pos = url.length();\n-        for (int i = 0; i < 3; i++) {\n+        for (int i = 0; i < foldersUp; i++) {\n             pos = url.lastIndexOf('/', pos - 1);\n         }\n         return url.substring(0, pos + 1);\n     }\n \n-    protected String invokeGet(String docsUri) {\n+    protected Response invokeGet(String docsUri) {\n+        logger.info(\"[GET] \" + docsUri);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY2ODI4Nw=="}, "originalCommit": {"oid": "bf5d9c2d298a85ae51aca5c4fb2618ca4e3e7959"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2101, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}