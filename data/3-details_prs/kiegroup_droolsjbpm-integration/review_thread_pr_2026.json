{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MTU2NDAz", "number": 2026, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMjo0NDoyN1rODjD7jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwOToyNDo0MlrODmNdZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDkxMTQ5OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-controller/kie-server-controller-api/src/main/java/org/kie/server/controller/api/model/spec/ContainerSpec.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMjo0NDoyN1rOFuqE0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxNDozMDoyNlrOFwhhEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ2ODE3OQ==", "bodyText": "Please change the line 38 to also use EnumMap<> for consistency.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2026#discussion_r384468179", "createdAt": "2020-02-26T12:44:27Z", "author": {"login": "MarianMacik"}, "path": "kie-server-parent/kie-server-controller/kie-server-controller-api/src/main/java/org/kie/server/controller/api/model/spec/ContainerSpec.java", "diffHunk": "@@ -44,6 +46,13 @@ public ReleaseId getReleasedId() {\n     public ContainerSpec() {\n     }\n \n+    public ContainerSpec(ContainerSpec other) {\n+        super(other.getId(), other.getContainerName(), other.getServerTemplateKey());\n+        this.releasedId = other.releasedId;\n+        this.status = other.status;\n+        this.configs = other.getConfigs().isEmpty() ? Collections.emptyMap() : new EnumMap<>(other.getConfigs());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1652864eeb58615a108fb7df77f5e2b4fc2cb441"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjQyNTEwNw==", "bodyText": "Still uses HashMap.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2026#discussion_r386425107", "createdAt": "2020-03-02T14:30:26Z", "author": {"login": "MarianMacik"}, "path": "kie-server-parent/kie-server-controller/kie-server-controller-api/src/main/java/org/kie/server/controller/api/model/spec/ContainerSpec.java", "diffHunk": "@@ -44,6 +46,13 @@ public ReleaseId getReleasedId() {\n     public ContainerSpec() {\n     }\n \n+    public ContainerSpec(ContainerSpec other) {\n+        super(other.getId(), other.getContainerName(), other.getServerTemplateKey());\n+        this.releasedId = other.releasedId;\n+        this.status = other.status;\n+        this.configs = other.getConfigs().isEmpty() ? Collections.emptyMap() : new EnumMap<>(other.getConfigs());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ2ODE3OQ=="}, "originalCommit": {"oid": "1652864eeb58615a108fb7df77f5e2b4fc2cb441"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MDkyOTMyOnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-controller/kie-server-controller-impl/src/main/java/org/kie/server/controller/impl/storage/InMemoryKieServerTemplateStorage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMjo1MDoyMFrOFuqPhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxMjo1MDoyMFrOFuqPhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDQ3MDkxNw==", "bodyText": "I guess we no longer need store to be of ConcurrentHashMap implementation if we are fully locking it.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2026#discussion_r384470917", "createdAt": "2020-02-26T12:50:20Z", "author": {"login": "MarianMacik"}, "path": "kie-server-parent/kie-server-controller/kie-server-controller-impl/src/main/java/org/kie/server/controller/impl/storage/InMemoryKieServerTemplateStorage.java", "diffHunk": "@@ -54,17 +58,44 @@ public ServerTemplate store(ServerTemplate serverTemplate) {\n \n     @Override\n     public List<ServerTemplate> load() {\n-        return new ArrayList<ServerTemplate>(store.values());\n+        synchronized (store) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1652864eeb58615a108fb7df77f5e2b4fc2cb441"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzkyNDg1OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-controller/kie-server-controller-impl/src/main/java/org/kie/server/controller/impl/storage/InMemoryKieServerTemplateStorage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwOToyMzoxOFrOFzfsQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwOToyMzoxOFrOFzfsQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU0MDkyOA==", "bodyText": "Here we store the EnumMap instance but in the original state of an object there is an instance of HashMap created. \n  \n    \n      droolsjbpm-integration/kie-server-parent/kie-server-controller/kie-server-controller-api/src/main/java/org/kie/server/controller/api/model/spec/ServerTemplate.java\n    \n    \n         Line 40\n      in\n      1b42ad1\n    \n    \n    \n    \n\n        \n          \n           private Map<Capability, ServerConfig> configs = new HashMap<Capability, ServerConfig>();", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2026#discussion_r389540928", "createdAt": "2020-03-09T09:23:18Z", "author": {"login": "MarianMacik"}, "path": "kie-server-parent/kie-server-controller/kie-server-controller-impl/src/main/java/org/kie/server/controller/impl/storage/InMemoryKieServerTemplateStorage.java", "diffHunk": "@@ -54,17 +60,44 @@ public ServerTemplate store(ServerTemplate serverTemplate) {\n \n     @Override\n     public List<ServerTemplate> load() {\n-        return new ArrayList<ServerTemplate>(store.values());\n+        synchronized (store) {\n+            return store.values().stream().map(this::cloneServerTemplate).collect(Collectors.toList());\n+        }\n     }\n \n     @Override\n     public ServerTemplate load(String identifier) {\n-        return store.get(identifier);\n+        synchronized (store) {\n+            return cloneServerTemplate(store.get(identifier));\n+        }\n     }\n \n     @Override\n     public boolean exists(String identifier) {\n-        return store.containsKey(identifier);\n+        synchronized (store) {\n+            return store.containsKey(identifier);\n+        }\n+    }\n+\n+    private ServerTemplate cloneServerTemplate(ServerTemplate current) {\n+\n+        if (current == null) {\n+            return null;\n+        }\n+\n+        List<ContainerSpec> specs = current.getContainersSpec().stream().map(ContainerSpec::new).collect(Collectors.toList());\n+\n+        ServerTemplate serverTemplate = new ServerTemplate(current.getId(),\n+                                                           current.getName(),\n+                                                           new ArrayList<>(current.getCapabilities()),\n+                                                           current.getConfigs().isEmpty() ? new EnumMap<>(Capability.class) : new EnumMap<>(current.getConfigs()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9050596a307696077124885ea00a264293e804a9"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzkyOTk2OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-controller/kie-server-controller-api/src/main/java/org/kie/server/controller/api/model/spec/ContainerSpec.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwOToyNDo0MlrOFzfvOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwOToyNDo0MlrOFzfvOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTU0MTY5MA==", "bodyText": "Here we use EnumMap but the initializer is set to HashMap, see:\n\n  \n    \n      droolsjbpm-integration/kie-server-parent/kie-server-controller/kie-server-controller-api/src/main/java/org/kie/server/controller/api/model/spec/ContainerSpec.java\n    \n    \n         Line 36\n      in\n      1b42ad1\n    \n    \n    \n    \n\n        \n          \n           private Map<Capability, ContainerConfig> configs = new HashMap<>();", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2026#discussion_r389541690", "createdAt": "2020-03-09T09:24:42Z", "author": {"login": "MarianMacik"}, "path": "kie-server-parent/kie-server-controller/kie-server-controller-api/src/main/java/org/kie/server/controller/api/model/spec/ContainerSpec.java", "diffHunk": "@@ -44,6 +45,13 @@ public ReleaseId getReleasedId() {\n     public ContainerSpec() {\n     }\n \n+    public ContainerSpec(ContainerSpec other) {\n+        super(other.getId(), other.getContainerName(), other.getServerTemplateKey());\n+        this.releasedId = other.releasedId;\n+        this.status = other.status;\n+        this.configs = other.getConfigs().isEmpty() ? new EnumMap<Capability, ContainerConfig>(Capability.class) : new EnumMap<>(other.getConfigs());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9050596a307696077124885ea00a264293e804a9"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2096, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}