{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwODE0Mjg4", "number": 2246, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzozNjoyMlrOEmaNaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMjoyNDo1N1rOEmkChQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzEwNzYwOnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzozNjoyMlrOHWaTpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoyMzozNlrOHYxYzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2MTczMg==", "bodyText": "Please remove unused static imports", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2246#discussion_r493261732", "createdAt": "2020-09-23T07:36:22Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -16,7 +16,9 @@\n \n package org.kie.server.services.jbpm.ui.form.render;\n \n+import static java.util.Arrays.asList;\n import static java.util.Collections.singletonList;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d4a68f1423019923b8a84f94c9cb7a9302541f6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczNzAzOA==", "bodyText": "done", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2246#discussion_r495737038", "createdAt": "2020-09-28T07:23:36Z", "author": {"login": "elguardian"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -16,7 +16,9 @@\n \n package org.kie.server.services.jbpm.ui.form.render;\n \n+import static java.util.Arrays.asList;\n import static java.util.Collections.singletonList;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2MTczMg=="}, "originalCommit": {"oid": "9d4a68f1423019923b8a84f94c9cb7a9302541f6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzEwOTg5OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzozNjo1OVrOHWaVEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoyMzo0MVrOHYxZAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2MjA5OQ==", "bodyText": "Same here", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2246#discussion_r493262099", "createdAt": "2020-09-23T07:36:59Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -34,6 +35,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.StringJoiner;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d4a68f1423019923b8a84f94c9cb7a9302541f6"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczNzA5MQ==", "bodyText": "done", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2246#discussion_r495737091", "createdAt": "2020-09-28T07:23:41Z", "author": {"login": "elguardian"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -34,6 +35,7 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Optional;\n+import java.util.StringJoiner;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2MjA5OQ=="}, "originalCommit": {"oid": "9d4a68f1423019923b8a84f94c9cb7a9302541f6"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzE2OTAxOnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo1MDoyOVrOHWa3oQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoyMzo0OFrOHYxZNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3MDk0NQ==", "bodyText": "can be replaced with method reference\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                                item.setOptions(field.getListOfValues().stream().map(e -> new ItemOption(e)).collect(toList()));\n          \n          \n            \n                                                item.setOptions(field.getListOfValues().stream().map(ItemOption::new).collect(toList()));", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2246#discussion_r493270945", "createdAt": "2020-09-23T07:50:29Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -407,24 +412,40 @@ protected void processFormLayout(FormInstance topLevelForm,\n                                 value = outputs.get(field.getBinding());\n                             }\n                             \n-                            if(!FIELDS_EXCLUSION_TRANSFORMATION.contains(fieldType)) {\n-                                item.setValue(value.toString());\n-                            } else if (value instanceof DocumentCollection){\n-                                DocumentCollection<Document> docCollection = (DocumentCollection<Document>) value;\n-                                docCollection.getDocuments().stream()\n-                                                           .map(e -> (DocumentImpl) e)\n-                                                           .forEach(DocumentImpl::load);\n-\n-                                List<DocumentItem> items = docCollection.getDocuments()\n-                                                               .stream()\n-                                                               .map(e -> new DocumentItem(e.getName(), Base64.getEncoder().encodeToString(e.getContent())))\n-                                                               .collect(Collectors.toList());\n-                                item.setValue(items);\n-                            } else {\n-                                item.setValue(Collections.emptyList());\n-                            }\n                             \n-\n+                            switch(fieldType) {\n+                                case \"documentCollection\":\n+                                    DocumentCollection<Document> docCollection = (DocumentCollection<Document>) value;\n+                                    docCollection.getDocuments().stream()\n+                                                               .map(e -> (DocumentImpl) e)\n+                                                               .forEach(DocumentImpl::load);\n+\n+                                    List<DocumentItem> items = docCollection.getDocuments()\n+                                                                   .stream()\n+                                                                   .map(e -> new DocumentItem(e.getName(), Base64.getEncoder().encodeToString(e.getContent())))\n+                                                                   .collect(toList());\n+                                    item.setValue(items);\n+                                case \"multipleSelector\":\n+                                    item.setOptions(field.getListOfValues().stream().map(e -> new ItemOption(e)).collect(toList()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d4a68f1423019923b8a84f94c9cb7a9302541f6"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczNzE0Mw==", "bodyText": "done", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2246#discussion_r495737143", "createdAt": "2020-09-28T07:23:48Z", "author": {"login": "elguardian"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -407,24 +412,40 @@ protected void processFormLayout(FormInstance topLevelForm,\n                                 value = outputs.get(field.getBinding());\n                             }\n                             \n-                            if(!FIELDS_EXCLUSION_TRANSFORMATION.contains(fieldType)) {\n-                                item.setValue(value.toString());\n-                            } else if (value instanceof DocumentCollection){\n-                                DocumentCollection<Document> docCollection = (DocumentCollection<Document>) value;\n-                                docCollection.getDocuments().stream()\n-                                                           .map(e -> (DocumentImpl) e)\n-                                                           .forEach(DocumentImpl::load);\n-\n-                                List<DocumentItem> items = docCollection.getDocuments()\n-                                                               .stream()\n-                                                               .map(e -> new DocumentItem(e.getName(), Base64.getEncoder().encodeToString(e.getContent())))\n-                                                               .collect(Collectors.toList());\n-                                item.setValue(items);\n-                            } else {\n-                                item.setValue(Collections.emptyList());\n-                            }\n                             \n-\n+                            switch(fieldType) {\n+                                case \"documentCollection\":\n+                                    DocumentCollection<Document> docCollection = (DocumentCollection<Document>) value;\n+                                    docCollection.getDocuments().stream()\n+                                                               .map(e -> (DocumentImpl) e)\n+                                                               .forEach(DocumentImpl::load);\n+\n+                                    List<DocumentItem> items = docCollection.getDocuments()\n+                                                                   .stream()\n+                                                                   .map(e -> new DocumentItem(e.getName(), Base64.getEncoder().encodeToString(e.getContent())))\n+                                                                   .collect(toList());\n+                                    item.setValue(items);\n+                                case \"multipleSelector\":\n+                                    item.setOptions(field.getListOfValues().stream().map(e -> new ItemOption(e)).collect(toList()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3MDk0NQ=="}, "originalCommit": {"oid": "9d4a68f1423019923b8a84f94c9cb7a9302541f6"}, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzE5MzQxOnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzo1NToxOFrOHWbHEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoyMzo1NFrOHYxZWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3NDg5Nw==", "bodyText": "last condition type.contains(\"Date\") is already tested in previous else-if statement.\nPlease remove\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    } else if (type.contains(\"Document\") || type.contains(\"documentCollection\") || type.contains(\"multipleSelector\") || type.contains(\"multipleInput\") || type.contains(\"Date\")) {\n          \n          \n            \n                    } else if (type.contains(\"Document\") || type.contains(\"documentCollection\") || type.contains(\"multipleSelector\") || type.contains(\"multipleInput\")) {", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2246#discussion_r493274897", "createdAt": "2020-09-23T07:55:18Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -655,17 +676,14 @@ protected String getFieldType(String type) {\n             return \"Boolean(\";\n         } else if (type.contains(\"Date\")) {\n             return \"Object(\";\n-        } else if (type.contains(\"Integer\") || type.contains(\"Double\") || type.contains(\"Float\")) {\n-            return \"Number(\";\n-        } else if (type.contains(\"Boolean\")) {\n-            return \"Boolean(\";\n-        } else if (type.contains(\"Document\") || type.contains(\"documentCollection\") || type.contains(\"Date\")) {\n+        } else if (type.contains(\"Document\") || type.contains(\"documentCollection\") || type.contains(\"multipleSelector\") || type.contains(\"multipleInput\") || type.contains(\"Date\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d4a68f1423019923b8a84f94c9cb7a9302541f6"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczNzE3Nw==", "bodyText": "done", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2246#discussion_r495737177", "createdAt": "2020-09-28T07:23:54Z", "author": {"login": "elguardian"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/java/org/kie/server/services/jbpm/ui/form/render/AbstractFormRenderer.java", "diffHunk": "@@ -655,17 +676,14 @@ protected String getFieldType(String type) {\n             return \"Boolean(\";\n         } else if (type.contains(\"Date\")) {\n             return \"Object(\";\n-        } else if (type.contains(\"Integer\") || type.contains(\"Double\") || type.contains(\"Float\")) {\n-            return \"Number(\";\n-        } else if (type.contains(\"Boolean\")) {\n-            return \"Boolean(\";\n-        } else if (type.contains(\"Document\") || type.contains(\"documentCollection\") || type.contains(\"Date\")) {\n+        } else if (type.contains(\"Document\") || type.contains(\"documentCollection\") || type.contains(\"multipleSelector\") || type.contains(\"multipleInput\") || type.contains(\"Date\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI3NDg5Nw=="}, "originalCommit": {"oid": "9d4a68f1423019923b8a84f94c9cb7a9302541f6"}, "originalPosition": 128}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzQwOTI5OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/resources/form-templates-providers/bootstrap/js/bootstrap-tagsinput.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwODozMTo0NVrOHWdSkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwODozMTo0NVrOHWdSkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzMxMDYwOA==", "bodyText": "quick question, if we're using min js version of this file, I guess we should actually call it like that? or should we use the full version https://github.com/bootstrap-tagsinput/bootstrap-tagsinput/blob/master/dist/bootstrap-tagsinput.js?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2246#discussion_r493310608", "createdAt": "2020-09-23T08:31:45Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/resources/form-templates-providers/bootstrap/js/bootstrap-tagsinput.js", "diffHunk": "@@ -0,0 +1,7 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d4a68f1423019923b8a84f94c9cb7a9302541f6"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODcxODEzOnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/resources/form-templates-providers/patternfly/input-form-group-template.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMjoyNDo1N1rOHWqdxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNzoyNDowMFrOHYxZjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUyNjQ3MQ==", "bodyText": "This code will never be reached since below condition is met before:\n\n  \n    \n      droolsjbpm-integration/kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/resources/form-templates-providers/patternfly/input-form-group-template.html\n    \n    \n         Line 64\n      in\n      9d4a68f\n    \n    \n    \n    \n\n        \n          \n           <#elseif item.type == \"multipleInput\">", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2246#discussion_r493526471", "createdAt": "2020-09-23T12:24:57Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/resources/form-templates-providers/patternfly/input-form-group-template.html", "diffHunk": "@@ -136,6 +136,29 @@ <h3 data-i18n-key=\"dropFilesHere\">Drop files here</h3>\n \t\t</#if>\n     </div>\n </div>\n+<#elseif item.type == \"multipleSelector\">\n+<div class=\"form-group\">\n+  <label for=\"${item.id}\">${item.label}</label>\n+  <#if item.required>\n+    <strong style=\"color: red\">*</strong>\n+  </#if>\n+    <select multiple class=\"form-control\" id=\"${item.id}\" ${(item.readOnly)?string('disabled', '')}>\n+        <#if item.options?size gt 0>\n+            <#assign itemList=item.options>\n+            <#list itemList as option>\n+                <option value=\"${option.value}\" ${(item.value?seq_contains(option.value))?string('selected','')}>${option.text}</option> \n+            </#list>\n+        </#if>\n+    </select>\n+</div>\n+<#elseif item.type == \"multipleInput\">\n+<div class=\"form-group\">\n+  <label for=\"${item.id}\">${item.label}</label>\n+  <#if item.required>\n+    <strong style=\"color: red\">*</strong>\n+  </#if>\n+  <input type=\"text\" multiple class=\"form-control\" id=\"${item.id}\" ${(item.readOnly)?string('disabled', '')} data-role=\"tagsinput\" value=\"${item.value}\" />\n+</div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d4a68f1423019923b8a84f94c9cb7a9302541f6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTczNzIzMA==", "bodyText": "done", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2246#discussion_r495737230", "createdAt": "2020-09-28T07:24:00Z", "author": {"login": "elguardian"}, "path": "kie-server-parent/kie-server-services/kie-server-services-jbpm-ui/src/main/resources/form-templates-providers/patternfly/input-form-group-template.html", "diffHunk": "@@ -136,6 +136,29 @@ <h3 data-i18n-key=\"dropFilesHere\">Drop files here</h3>\n \t\t</#if>\n     </div>\n </div>\n+<#elseif item.type == \"multipleSelector\">\n+<div class=\"form-group\">\n+  <label for=\"${item.id}\">${item.label}</label>\n+  <#if item.required>\n+    <strong style=\"color: red\">*</strong>\n+  </#if>\n+    <select multiple class=\"form-control\" id=\"${item.id}\" ${(item.readOnly)?string('disabled', '')}>\n+        <#if item.options?size gt 0>\n+            <#assign itemList=item.options>\n+            <#list itemList as option>\n+                <option value=\"${option.value}\" ${(item.value?seq_contains(option.value))?string('selected','')}>${option.text}</option> \n+            </#list>\n+        </#if>\n+    </select>\n+</div>\n+<#elseif item.type == \"multipleInput\">\n+<div class=\"form-group\">\n+  <label for=\"${item.id}\">${item.label}</label>\n+  <#if item.required>\n+    <strong style=\"color: red\">*</strong>\n+  </#if>\n+  <input type=\"text\" multiple class=\"form-control\" id=\"${item.id}\" ${(item.readOnly)?string('disabled', '')} data-role=\"tagsinput\" value=\"${item.value}\" />\n+</div>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUyNjQ3MQ=="}, "originalCommit": {"oid": "9d4a68f1423019923b8a84f94c9cb7a9302541f6"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1940, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}