{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MTc4MDMz", "number": 2154, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMDozNVrOEN5EoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMDo0OTozM1rOEOoYLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDAyMDE3OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMDozNVrOGwv8-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMDozNVrOGwv8-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MDQ4OA==", "bodyText": "Missing indentation here", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#discussion_r453770488", "createdAt": "2020-07-13T16:20:35Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "diffHunk": "@@ -91,6 +92,31 @@ public String getName() {\n \n     @Override\n     public boolean hasRole(String s) {\n+        Subject subject = getSubjectFromContainer();\n+        if (subject != null) {\n+        Set<Principal> principals = subject.getPrincipals();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a24bbc9b8c7221f70f630d213c0f5b57a6fe986"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDAyMDU3OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMDo0MFrOGwv9MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMDo0MFrOGwv9MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MDU0NA==", "bodyText": "Avoid possible NullPointerException in case \"s\" is null:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        if (s.equals(groupPrincipal.getName())) {\n          \n          \n            \n                                        if (groupPrincipal.getName().equals(s)) {", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#discussion_r453770544", "createdAt": "2020-07-13T16:20:40Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "diffHunk": "@@ -91,6 +92,31 @@ public String getName() {\n \n     @Override\n     public boolean hasRole(String s) {\n+        Subject subject = getSubjectFromContainer();\n+        if (subject != null) {\n+        Set<Principal> principals = subject.getPrincipals();\n+            if (principals != null) {\n+                for (Principal principal : principals) {\n+                    if (principal instanceof Group) {\n+                        Enumeration<? extends Principal> groups = ((Group) principal).members();\n+                        while (groups.hasMoreElements()) {\n+                            Principal groupPrincipal = (Principal) groups.nextElement();\n+                            if (s.equals(groupPrincipal.getName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a24bbc9b8c7221f70f630d213c0f5b57a6fe986"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDAyNTY0OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/test/java/org/kie/server/services/impl/security/JACCIdentityProviderWildFlyTomcatTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMjowM1rOGwwAVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMjowM1rOGwwAVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MTM1MQ==", "bodyText": "You can add a test for null role:\nassertFalse(jaccIdentityProvider.hasRole(null));", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#discussion_r453771351", "createdAt": "2020-07-13T16:22:03Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/test/java/org/kie/server/services/impl/security/JACCIdentityProviderWildFlyTomcatTest.java", "diffHunk": "@@ -101,6 +102,9 @@ public void testGetRoles() throws Exception {\n         assertEquals(2, jaccIdentityProvider.getRoles().size());\n         assertTrue(jaccIdentityProvider.getRoles().contains(GROUP_ONE_NAME));\n         assertTrue(jaccIdentityProvider.getRoles().contains(GROUP_TWO_NAME));\n+        assertTrue(jaccIdentityProvider.hasRole(GROUP_ONE_NAME));\n+        assertTrue(jaccIdentityProvider.hasRole(GROUP_TWO_NAME));\n+        assertFalse(jaccIdentityProvider.hasRole(\"non_existing_role\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a24bbc9b8c7221f70f630d213c0f5b57a6fe986"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzc1OTA5OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMDo0NTo0OVrOGx4mfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMToxMzoyMFrOGx5b4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk2MDc2Nw==", "bodyText": "Cast to Principal is redundant\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        Principal groupPrincipal = (Principal) groups.nextElement();\n          \n          \n            \n                                        Principal groupPrincipal = groups.nextElement();", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#discussion_r454960767", "createdAt": "2020-07-15T10:45:49Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "diffHunk": "@@ -91,6 +92,31 @@ public String getName() {\n \n     @Override\n     public boolean hasRole(String s) {\n+        Subject subject = getSubjectFromContainer();\n+        if (subject != null) {\n+            Set<Principal> principals = subject.getPrincipals();\n+            if (principals != null) {\n+                for (Principal principal : principals) {\n+                    if (principal instanceof Group) {\n+                        Enumeration<? extends Principal> groups = ((Group) principal).members();\n+                        while (groups.hasMoreElements()) {\n+                            Principal groupPrincipal = (Principal) groups.nextElement();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d763de5108264338c31b29fbf8b7ceb0e6dac0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk3NDQzMg==", "bodyText": "good catch, removing this casting from here and former code", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#discussion_r454974432", "createdAt": "2020-07-15T11:13:20Z", "author": {"login": "fjtirado"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "diffHunk": "@@ -91,6 +92,31 @@ public String getName() {\n \n     @Override\n     public boolean hasRole(String s) {\n+        Subject subject = getSubjectFromContainer();\n+        if (subject != null) {\n+            Set<Principal> principals = subject.getPrincipals();\n+            if (principals != null) {\n+                for (Principal principal : principals) {\n+                    if (principal instanceof Group) {\n+                        Enumeration<? extends Principal> groups = ((Group) principal).members();\n+                        while (groups.hasMoreElements()) {\n+                            Principal groupPrincipal = (Principal) groups.nextElement();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk2MDc2Nw=="}, "originalCommit": {"oid": "b0d763de5108264338c31b29fbf8b7ceb0e6dac0"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzc3MDY5OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMDo0OTozM1rOGx4tjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMToxMjoyOFrOGx5aKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk2MjU3Mw==", "bodyText": "Not really sure here, should we ignore case sensitive? What do you think?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#discussion_r454962573", "createdAt": "2020-07-15T10:49:33Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "diffHunk": "@@ -91,6 +92,31 @@ public String getName() {\n \n     @Override\n     public boolean hasRole(String s) {\n+        Subject subject = getSubjectFromContainer();\n+        if (subject != null) {\n+            Set<Principal> principals = subject.getPrincipals();\n+            if (principals != null) {\n+                for (Principal principal : principals) {\n+                    if (principal instanceof Group) {\n+                        Enumeration<? extends Principal> groups = ((Group) principal).members();\n+                        while (groups.hasMoreElements()) {\n+                            Principal groupPrincipal = (Principal) groups.nextElement();\n+                            if (groupPrincipal.getName().equals(s)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d763de5108264338c31b29fbf8b7ceb0e6dac0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk3Mzk5Mg==", "bodyText": "hmmm, good point, since there are not requirement about that, lets keep it this way, which is the default.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#discussion_r454973992", "createdAt": "2020-07-15T11:12:28Z", "author": {"login": "fjtirado"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "diffHunk": "@@ -91,6 +92,31 @@ public String getName() {\n \n     @Override\n     public boolean hasRole(String s) {\n+        Subject subject = getSubjectFromContainer();\n+        if (subject != null) {\n+            Set<Principal> principals = subject.getPrincipals();\n+            if (principals != null) {\n+                for (Principal principal : principals) {\n+                    if (principal instanceof Group) {\n+                        Enumeration<? extends Principal> groups = ((Group) principal).members();\n+                        while (groups.hasMoreElements()) {\n+                            Principal groupPrincipal = (Principal) groups.nextElement();\n+                            if (groupPrincipal.getName().equals(s)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk2MjU3Mw=="}, "originalCommit": {"oid": "b0d763de5108264338c31b29fbf8b7ceb0e6dac0"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2039, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}