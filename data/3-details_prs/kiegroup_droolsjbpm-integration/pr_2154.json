{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MTc4MDMz", "number": 2154, "title": "[JBPM-9229] hasRole implementation shouldn't return always false", "bodyText": "A proper implementation for hasRole has been implemented", "createdAt": "2020-07-13T10:54:30Z", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154", "merged": true, "mergeCommit": {"oid": "f8046a265291e0b5c92e19fec86c11648f02dee1"}, "closed": true, "closedAt": "2020-07-16T13:10:03Z", "author": {"login": "fjtirado"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0j9kKAFqTQ0NzQwMzc5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1Zr62AFqTQ0OTU1NjEzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NDAzNzk4", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#pullrequestreview-447403798", "createdAt": "2020-07-13T16:20:35Z", "commit": {"oid": "5a24bbc9b8c7221f70f630d213c0f5b57a6fe986"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMDozNVrOGwv8-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNjoyMjowM1rOGwwAVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MDQ4OA==", "bodyText": "Missing indentation here", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#discussion_r453770488", "createdAt": "2020-07-13T16:20:35Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "diffHunk": "@@ -91,6 +92,31 @@ public String getName() {\n \n     @Override\n     public boolean hasRole(String s) {\n+        Subject subject = getSubjectFromContainer();\n+        if (subject != null) {\n+        Set<Principal> principals = subject.getPrincipals();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a24bbc9b8c7221f70f630d213c0f5b57a6fe986"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MDU0NA==", "bodyText": "Avoid possible NullPointerException in case \"s\" is null:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        if (s.equals(groupPrincipal.getName())) {\n          \n          \n            \n                                        if (groupPrincipal.getName().equals(s)) {", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#discussion_r453770544", "createdAt": "2020-07-13T16:20:40Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "diffHunk": "@@ -91,6 +92,31 @@ public String getName() {\n \n     @Override\n     public boolean hasRole(String s) {\n+        Subject subject = getSubjectFromContainer();\n+        if (subject != null) {\n+        Set<Principal> principals = subject.getPrincipals();\n+            if (principals != null) {\n+                for (Principal principal : principals) {\n+                    if (principal instanceof Group) {\n+                        Enumeration<? extends Principal> groups = ((Group) principal).members();\n+                        while (groups.hasMoreElements()) {\n+                            Principal groupPrincipal = (Principal) groups.nextElement();\n+                            if (s.equals(groupPrincipal.getName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a24bbc9b8c7221f70f630d213c0f5b57a6fe986"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc3MTM1MQ==", "bodyText": "You can add a test for null role:\nassertFalse(jaccIdentityProvider.hasRole(null));", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#discussion_r453771351", "createdAt": "2020-07-13T16:22:03Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/test/java/org/kie/server/services/impl/security/JACCIdentityProviderWildFlyTomcatTest.java", "diffHunk": "@@ -101,6 +102,9 @@ public void testGetRoles() throws Exception {\n         assertEquals(2, jaccIdentityProvider.getRoles().size());\n         assertTrue(jaccIdentityProvider.getRoles().contains(GROUP_ONE_NAME));\n         assertTrue(jaccIdentityProvider.getRoles().contains(GROUP_TWO_NAME));\n+        assertTrue(jaccIdentityProvider.hasRole(GROUP_ONE_NAME));\n+        assertTrue(jaccIdentityProvider.hasRole(GROUP_TWO_NAME));\n+        assertFalse(jaccIdentityProvider.hasRole(\"non_existing_role\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a24bbc9b8c7221f70f630d213c0f5b57a6fe986"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a24bbc9b8c7221f70f630d213c0f5b57a6fe986", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/5a24bbc9b8c7221f70f630d213c0f5b57a6fe986", "committedDate": "2020-07-13T10:53:10Z", "message": "[JBPM-9229] hasRole implementation shouldn't return always false\n\nA proper implementation for hasRole has been implemented"}, "afterCommit": {"oid": "b0d763de5108264338c31b29fbf8b7ceb0e6dac0", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b0d763de5108264338c31b29fbf8b7ceb0e6dac0", "committedDate": "2020-07-13T17:04:28Z", "message": "[JBPM-9229] hasRole implementation shouldn't return always false\n\nA proper implementation for hasRole has been implemented"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4ODM3ODg1", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#pullrequestreview-448837885", "createdAt": "2020-07-15T10:45:48Z", "commit": {"oid": "b0d763de5108264338c31b29fbf8b7ceb0e6dac0"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMDo0NTo0OVrOGx4mfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMDo0OTozM1rOGx4tjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk2MDc2Nw==", "bodyText": "Cast to Principal is redundant\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                        Principal groupPrincipal = (Principal) groups.nextElement();\n          \n          \n            \n                                        Principal groupPrincipal = groups.nextElement();", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#discussion_r454960767", "createdAt": "2020-07-15T10:45:49Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "diffHunk": "@@ -91,6 +92,31 @@ public String getName() {\n \n     @Override\n     public boolean hasRole(String s) {\n+        Subject subject = getSubjectFromContainer();\n+        if (subject != null) {\n+            Set<Principal> principals = subject.getPrincipals();\n+            if (principals != null) {\n+                for (Principal principal : principals) {\n+                    if (principal instanceof Group) {\n+                        Enumeration<? extends Principal> groups = ((Group) principal).members();\n+                        while (groups.hasMoreElements()) {\n+                            Principal groupPrincipal = (Principal) groups.nextElement();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d763de5108264338c31b29fbf8b7ceb0e6dac0"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk2MjU3Mw==", "bodyText": "Not really sure here, should we ignore case sensitive? What do you think?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#discussion_r454962573", "createdAt": "2020-07-15T10:49:33Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/main/java/org/kie/server/services/impl/security/JACCIdentityProvider.java", "diffHunk": "@@ -91,6 +92,31 @@ public String getName() {\n \n     @Override\n     public boolean hasRole(String s) {\n+        Subject subject = getSubjectFromContainer();\n+        if (subject != null) {\n+            Set<Principal> principals = subject.getPrincipals();\n+            if (principals != null) {\n+                for (Principal principal : principals) {\n+                    if (principal instanceof Group) {\n+                        Enumeration<? extends Principal> groups = ((Group) principal).members();\n+                        while (groups.hasMoreElements()) {\n+                            Principal groupPrincipal = (Principal) groups.nextElement();\n+                            if (groupPrincipal.getName().equals(s)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0d763de5108264338c31b29fbf8b7ceb0e6dac0"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7ae6ea0f6bc57e8043331f8f34cd563f27c31b4", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/f7ae6ea0f6bc57e8043331f8f34cd563f27c31b4", "committedDate": "2020-07-15T11:11:19Z", "message": "[JBPM-9229] hasRole implementation shouldn't return always false\n\nA proper implementation for hasRole has been implemented"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b0d763de5108264338c31b29fbf8b7ceb0e6dac0", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/b0d763de5108264338c31b29fbf8b7ceb0e6dac0", "committedDate": "2020-07-13T17:04:28Z", "message": "[JBPM-9229] hasRole implementation shouldn't return always false\n\nA proper implementation for hasRole has been implemented"}, "afterCommit": {"oid": "f7ae6ea0f6bc57e8043331f8f34cd563f27c31b4", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/f7ae6ea0f6bc57e8043331f8f34cd563f27c31b4", "committedDate": "2020-07-15T11:11:19Z", "message": "[JBPM-9229] hasRole implementation shouldn't return always false\n\nA proper implementation for hasRole has been implemented"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5NTU2MTM5", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2154#pullrequestreview-449556139", "createdAt": "2020-07-16T06:59:40Z", "commit": {"oid": "f7ae6ea0f6bc57e8043331f8f34cd563f27c31b4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1297, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}