{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMzI3NDMw", "number": 2317, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo1NzoyNVrOE6BzOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDoxMjowN1rOE6CNdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MjgyMzYzOnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-api/src/test/java/org/kie/server/api/model/dmn/JSONAPIRoundTripTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo1NzoyNVrOH02DeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo1NzoyNVrOH02DeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MzYyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ctx.set(\"Applicant\", applicant); // VERY IMPORTANT that the map key is \"Applicant\" with the capital-A.\n          \n          \n            \n                    ctx.set(\"Applicant\", applicant); // VERY IMPORTANT that the map key is \"Applicant\" with the capital-A to clash with Applicant simple name", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2317#discussion_r525173624", "createdAt": "2020-11-17T13:57:25Z", "author": {"login": "danielezonca"}, "path": "kie-server-parent/kie-server-api/src/test/java/org/kie/server/api/model/dmn/JSONAPIRoundTripTest.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.server.api.model.dmn;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import org.assertj.core.api.Assertions;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.kie.dmn.api.core.DMNContext;\n+import org.kie.dmn.api.core.DMNDecisionResult.DecisionEvaluationStatus;\n+import org.kie.dmn.core.impl.DMNContextImpl;\n+import org.kie.dmn.core.impl.DMNDecisionResultImpl;\n+import org.kie.dmn.core.impl.DMNResultImpl;\n+import org.kie.server.api.marshalling.Marshaller;\n+import org.kie.server.api.marshalling.MarshallerFactory;\n+import org.kie.server.api.marshalling.MarshallingFormat;\n+import org.kie.server.api.model.KieServiceResponse.ResponseType;\n+import org.kie.server.api.model.ServiceResponse;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class JSONAPIRoundTripTest {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(JSONAPIRoundTripTest.class);\n+    private Marshaller marshaller;\n+\n+    @Before\n+    public void init() {\n+        Set<Class<?>> extraClasses = new HashSet<Class<?>>();\n+        extraClasses.add(Applicant.class);\n+        marshaller = MarshallerFactory.getMarshaller(extraClasses, MarshallingFormat.JSON, this.getClass().getClassLoader());\n+    }\n+\n+    @Test\n+    public void test() {\n+        Applicant applicant = new Applicant(\"John Doe\", 47);\n+        Applicant applicant2 = roundTrip(applicant);\n+        Assertions.assertThat(applicant2).isEqualTo(applicant);\n+\n+        DMNContext ctx = new DMNContextImpl();\n+        ctx.set(\"Applicant\", applicant); // VERY IMPORTANT that the map key is \"Applicant\" with the capital-A.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e47fa377b3bc7e06f8cf6b94def2315ada5910d"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Mjg5MDEwOnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-dmn/src/test/filtered-resources/kjars-sources/json-applicant/src/main/java/com/acme/Address.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDoxMTo1OFrOH02sUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDoxMTo1OFrOH02sUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE4NDA4MQ==", "bodyText": "License header?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2317#discussion_r525184081", "createdAt": "2020-11-17T14:11:58Z", "author": {"login": "danielezonca"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-dmn/src/test/filtered-resources/kjars-sources/json-applicant/src/main/java/com/acme/Address.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package com.acme;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e47fa377b3bc7e06f8cf6b94def2315ada5910d"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Mjg5MDc2OnYy", "diffSide": "RIGHT", "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-dmn/src/test/filtered-resources/kjars-sources/json-applicant/src/main/java/com/acme/Applicant.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDoxMjowN1rOH02sug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDoxMjowN1rOH02sug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE4NDE4Ng==", "bodyText": "License header?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2317#discussion_r525184186", "createdAt": "2020-11-17T14:12:07Z", "author": {"login": "danielezonca"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-dmn/src/test/filtered-resources/kjars-sources/json-applicant/src/main/java/com/acme/Applicant.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.acme;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e47fa377b3bc7e06f8cf6b94def2315ada5910d"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1997, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}