{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyODcyMTkx", "number": 2130, "title": "[JBPM-9184] Subprocess excepcion handling tx rollback causes main process to fail", "bodyText": "test case provide by Gonzalo", "createdAt": "2020-06-11T06:41:08Z", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130", "merged": true, "mergeCommit": {"oid": "49b3a759eb4de0e28cba1a64f81f267529aa2623"}, "closed": true, "closedAt": "2020-07-31T06:39:42Z", "author": {"login": "elguardian"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqJhmkgFqTQyODY3NjQ1MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcuGbj8AFqTQzNTg0ODgyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Njc2NDUx", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#pullrequestreview-428676451", "createdAt": "2020-06-11T07:56:45Z", "commit": {"oid": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzo1Njo0NVrOGiSi8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzo1Njo0NVrOGiSi8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwODYyNg==", "bodyText": "Please use more descriptive method name.", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r438608626", "createdAt": "2020-06-11T07:56:45Z", "author": {"login": "sutaakar"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ExceptionHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.internal.runtime.conf.RuntimeStrategy;\n+import org.kie.server.api.KieServerConstants;\n+import org.kie.server.api.model.KieServerConfigItem;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.instance.ProcessInstance;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+\n+public class ExceptionHandlingIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static final KieServerConfigItem PPI_RUNTIME_STRATEGY = new KieServerConfigItem(KieServerConstants.PCFG_RUNTIME_STRATEGY, RuntimeStrategy.PER_PROCESS_INSTANCE.name(), String.class.getName());\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"exception-handling\", \"1.0.0.Final\");\n+\n+   \n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/exception-handling\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId, PPI_RUNTIME_STRATEGY);\n+    }\n+\n+    @Test\n+    public void test1() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4Njc2OTI2", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#pullrequestreview-428676926", "createdAt": "2020-06-11T07:57:23Z", "commit": {"oid": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzo1NzoyNFrOGiSkSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNzo1NzoyNFrOGiSkSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYwODk3MQ==", "bodyText": "Please remove the catch", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r438608971", "createdAt": "2020-06-11T07:57:24Z", "author": {"login": "sutaakar"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ExceptionHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.internal.runtime.conf.RuntimeStrategy;\n+import org.kie.server.api.KieServerConstants;\n+import org.kie.server.api.model.KieServerConfigItem;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.instance.ProcessInstance;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+\n+public class ExceptionHandlingIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static final KieServerConfigItem PPI_RUNTIME_STRATEGY = new KieServerConfigItem(KieServerConstants.PCFG_RUNTIME_STRATEGY, RuntimeStrategy.PER_PROCESS_INSTANCE.name(), String.class.getName());\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"exception-handling\", \"1.0.0.Final\");\n+\n+   \n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/exception-handling\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId, PPI_RUNTIME_STRATEGY);\n+    }\n+\n+    @Test\n+    public void test1() throws Exception {\n+        Long processInstanceId = null;\n+        try {\n+            processInstanceId = processClient.startProcess(CONTAINER_ID, \"ExceptionHandling.ScriptMainProcess\");\n+\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId.longValue() > 0);\n+\n+            ProcessInstance a = processClient.getProcessInstance(CONTAINER_ID, processInstanceId);\n+            assertNotNull(a);\n+            processInstanceId = null;\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3"}, "originalPosition": 62}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4OTE4NTA5", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#pullrequestreview-428918509", "createdAt": "2020-06-11T13:38:44Z", "commit": {"oid": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozODo0NFrOGidjtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzozODo0NFrOGidjtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODc4OTA0NA==", "bodyText": "2020", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r438789044", "createdAt": "2020-06-11T13:38:44Z", "author": {"login": "gmunozfe"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ExceptionHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMjQ0Nzky", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#pullrequestreview-431244792", "createdAt": "2020-06-16T07:49:05Z", "commit": {"oid": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNzo0OTowNVrOGkPVHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwNzo0OToyNFrOGkPV9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MzA4NA==", "bodyText": "+1", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r440653084", "createdAt": "2020-06-16T07:49:05Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ExceptionHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.internal.runtime.conf.RuntimeStrategy;\n+import org.kie.server.api.KieServerConstants;\n+import org.kie.server.api.model.KieServerConfigItem;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.instance.ProcessInstance;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+\n+public class ExceptionHandlingIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static final KieServerConfigItem PPI_RUNTIME_STRATEGY = new KieServerConfigItem(KieServerConstants.PCFG_RUNTIME_STRATEGY, RuntimeStrategy.PER_PROCESS_INSTANCE.name(), String.class.getName());\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"exception-handling\", \"1.0.0.Final\");\n+\n+   \n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/exception-handling\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId, PPI_RUNTIME_STRATEGY);\n+    }\n+\n+    @Test\n+    public void test1() throws Exception {\n+        Long processInstanceId = null;\n+        try {\n+            processInstanceId = processClient.startProcess(CONTAINER_ID, \"ExceptionHandling.ScriptMainProcess\");\n+\n+            assertNotNull(processInstanceId);\n+            assertTrue(processInstanceId.longValue() > 0);\n+\n+            ProcessInstance a = processClient.getProcessInstance(CONTAINER_ID, processInstanceId);\n+            assertNotNull(a);\n+            processInstanceId = null;\n+        } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MzE2Mg==", "bodyText": "+1", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r440653162", "createdAt": "2020-06-16T07:49:14Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ExceptionHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * \n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.internal.runtime.conf.RuntimeStrategy;\n+import org.kie.server.api.KieServerConstants;\n+import org.kie.server.api.model.KieServerConfigItem;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.instance.ProcessInstance;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+\n+public class ExceptionHandlingIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static final KieServerConfigItem PPI_RUNTIME_STRATEGY = new KieServerConfigItem(KieServerConstants.PCFG_RUNTIME_STRATEGY, RuntimeStrategy.PER_PROCESS_INSTANCE.name(), String.class.getName());\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", \"exception-handling\", \"1.0.0.Final\");\n+\n+   \n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/exception-handling\");\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID, releaseId, PPI_RUNTIME_STRATEGY);\n+    }\n+\n+    @Test\n+    public void test1() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDY1MzMwMQ==", "bodyText": "+1", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#discussion_r440653301", "createdAt": "2020-06-16T07:49:24Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/ExceptionHandlingIntegrationTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+/*\n+ * Copyright 2015 Red Hat, Inc. and/or its affiliates.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3"}, "originalPosition": 2}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0c12d97b615dbd820b0c9c1a42507afad645bd6", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c0c12d97b615dbd820b0c9c1a42507afad645bd6", "committedDate": "2020-06-23T14:18:23Z", "message": "[JBPM-9184] Subprocess excepcion handling tx rollback causes main process to fail"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/fbc621c9a9393a6b9495ed88aa894a2a87eb9ab3", "committedDate": "2020-06-11T06:37:13Z", "message": "[JBPM-9184] Subprocess excepcion handling tx rollback causes main process to fail"}, "afterCommit": {"oid": "c0c12d97b615dbd820b0c9c1a42507afad645bd6", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c0c12d97b615dbd820b0c9c1a42507afad645bd6", "committedDate": "2020-06-23T14:18:23Z", "message": "[JBPM-9184] Subprocess excepcion handling tx rollback causes main process to fail"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1ODQwNjU0", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#pullrequestreview-435840654", "createdAt": "2020-06-23T14:28:13Z", "commit": {"oid": "c0c12d97b615dbd820b0c9c1a42507afad645bd6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1ODQ4ODIx", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2130#pullrequestreview-435848821", "createdAt": "2020-06-23T14:36:08Z", "commit": {"oid": "c0c12d97b615dbd820b0c9c1a42507afad645bd6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1266, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}