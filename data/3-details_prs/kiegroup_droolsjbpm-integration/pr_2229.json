{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMTYyMzUz", "number": 2229, "title": "[JBPM-9331] JACCIdentityProvider must support contextUsers", "bodyText": "JIRA: JBPM-9331", "createdAt": "2020-09-08T16:28:53Z", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229", "merged": true, "mergeCommit": {"oid": "ba3b0943315359bae3634571d9acd41006bab7cd"}, "closed": true, "closedAt": "2020-09-15T09:52:50Z", "author": {"login": "gmunozfe"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdHHM6ugFqTQ4NDcwMTA2OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHhEkpABqjM3NTExNDg5ODg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzAxMDY4", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229#pullrequestreview-484701068", "createdAt": "2020-09-09T06:39:01Z", "commit": {"oid": "cab4830034ebcd261b69742aa68f405849445d16"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNjozOTowMVrOHO4wcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzozNDozOVrOHO6bnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM3MjAxNw==", "bodyText": "There's no checked exceptions thrown in this method\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testContextUsers() throws Exception {\n          \n          \n            \n                public void testContextUsers() {", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229#discussion_r485372017", "createdAt": "2020-09-09T06:39:01Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-services/kie-server-services-common/src/test/java/org/kie/server/services/impl/security/JACCIdentityProviderWildFlyTomcatTest.java", "diffHunk": "@@ -107,6 +108,19 @@ public void testGetRoles() throws Exception {\n         assertFalse(jaccIdentityProvider.hasRole(\"non_existing_role\"));\n         assertFalse(jaccIdentityProvider.hasRole(null));\n     }\n+    \n+    @Test\n+    public void testContextUsers() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab4830034ebcd261b69742aa68f405849445d16"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM3ODY4Mg==", "bodyText": "Just a question, why ee7 and not ee8?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229#discussion_r485378682", "createdAt": "2020-09-09T06:52:59Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/pom.xml", "diffHunk": "@@ -144,6 +148,26 @@\n   <build>\n     <pluginManagement>\n       <plugins>\n+        <plugin>\n+          <groupId>org.apache.maven.plugins</groupId>\n+          <artifactId>maven-antrun-plugin</artifactId>\n+          <executions>\n+            <execution>\n+              <id>prepare-kie-server</id>\n+              <phase>pre-integration-test</phase>\n+              <configuration>\n+                <target>\n+                  <unzip src=\"${maven.dependency.org.kie.server.kie-server.ee7.war.path}\" dest=\"${project.build.directory}/unzipped-kie-server\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab4830034ebcd261b69742aa68f405849445d16"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM4NDg2OQ==", "bodyText": "Seems right package structure folder has not been created properly.\nIt should be org/jbpm/notification/listeners/ but the actual folder is just org.jbpm.notification.listeners", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229#discussion_r485384869", "createdAt": "2020-09-09T07:06:18Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/main/java/org.jbpm.notification.listeners/CustomNotificationListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab4830034ebcd261b69742aa68f405849445d16"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM4NTI2MA==", "bodyText": "Please remove all these imports - not used\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.ArrayList;\n          \n          \n            \n            import java.util.Collections;\n          \n          \n            \n            import java.util.HashMap;\n          \n          \n            \n            import java.util.List;\n          \n          \n            \n            import java.util.Map;", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229#discussion_r485385260", "createdAt": "2020-09-09T07:07:09Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/main/java/org.jbpm.notification.listeners/CustomNotificationListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.jbpm.notification.listeners;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab4830034ebcd261b69742aa68f405849445d16"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM4NTQ4Nw==", "bodyText": "this should be final\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                protected static Logger logger = LoggerFactory.getLogger(CustomNotificationListener.class);\n          \n          \n            \n                protected static final Logger logger = LoggerFactory.getLogger(CustomNotificationListener.class);", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229#discussion_r485385487", "createdAt": "2020-09-09T07:07:38Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/main/java/org.jbpm.notification.listeners/CustomNotificationListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.jbpm.notification.listeners;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.jbpm.services.api.UserTaskService;\n+import org.jbpm.services.api.service.ServiceRegistry;\n+import org.jbpm.services.task.deadlines.NotificationListener;\n+import org.kie.internal.task.api.UserInfo;\n+import org.kie.internal.task.api.model.NotificationEvent;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static java.util.Collections.singletonMap;\n+\n+public class CustomNotificationListener implements NotificationListener {\n+\n+    protected static Logger logger = LoggerFactory.getLogger(CustomNotificationListener.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab4830034ebcd261b69742aa68f405849445d16"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM4NjM3OQ==", "bodyText": "logger expects 3 placeholders but only 2 are provided, also I think there is no harm in using info so we can always see the output when running tests", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229#discussion_r485386379", "createdAt": "2020-09-09T07:09:35Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/main/java/org.jbpm.notification.listeners/CustomNotificationListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.jbpm.notification.listeners;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.jbpm.services.api.UserTaskService;\n+import org.jbpm.services.api.service.ServiceRegistry;\n+import org.jbpm.services.task.deadlines.NotificationListener;\n+import org.kie.internal.task.api.UserInfo;\n+import org.kie.internal.task.api.model.NotificationEvent;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static java.util.Collections.singletonMap;\n+\n+public class CustomNotificationListener implements NotificationListener {\n+\n+    protected static Logger logger = LoggerFactory.getLogger(CustomNotificationListener.class);\n+    \n+    private UserTaskService userTaskService = (UserTaskService) ServiceRegistry.get().service(ServiceRegistry.USER_TASK_SERVICE);\n+\n+    @Override\n+    public void onNotification(NotificationEvent event, UserInfo userInfo) {\n+        logger.debug(\"onNotification with event content {}, task {} , userInfo {}\", ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab4830034ebcd261b69742aa68f405849445d16"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM4ODI5Mw==", "bodyText": "using userInfo will only display a memory address - maybe it's worth to display something more meaningful from userInfo object", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229#discussion_r485388293", "createdAt": "2020-09-09T07:13:27Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/main/java/org.jbpm.notification.listeners/CustomNotificationListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.jbpm.notification.listeners;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.jbpm.services.api.UserTaskService;\n+import org.jbpm.services.api.service.ServiceRegistry;\n+import org.jbpm.services.task.deadlines.NotificationListener;\n+import org.kie.internal.task.api.UserInfo;\n+import org.kie.internal.task.api.model.NotificationEvent;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static java.util.Collections.singletonMap;\n+\n+public class CustomNotificationListener implements NotificationListener {\n+\n+    protected static Logger logger = LoggerFactory.getLogger(CustomNotificationListener.class);\n+    \n+    private UserTaskService userTaskService = (UserTaskService) ServiceRegistry.get().service(ServiceRegistry.USER_TASK_SERVICE);\n+\n+    @Override\n+    public void onNotification(NotificationEvent event, UserInfo userInfo) {\n+        logger.debug(\"onNotification with event content {}, task {} , userInfo {}\", \n+                event.getContent(), userInfo);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab4830034ebcd261b69742aa68f405849445d16"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM4OTEyNw==", "bodyText": "contentId is not used\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            Long contentId = userTaskService.saveContent(event.getTask().getId(), singletonMap(\"grade\", \"E\"));\n          \n          \n            \n                            userTaskService.saveContent(event.getTask().getId(), singletonMap(\"grade\", \"E\"));", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229#discussion_r485389127", "createdAt": "2020-09-09T07:15:14Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/main/java/org.jbpm.notification.listeners/CustomNotificationListener.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.jbpm.notification.listeners;\n+\n+import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.jbpm.services.api.UserTaskService;\n+import org.jbpm.services.api.service.ServiceRegistry;\n+import org.jbpm.services.task.deadlines.NotificationListener;\n+import org.kie.internal.task.api.UserInfo;\n+import org.kie.internal.task.api.model.NotificationEvent;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static java.util.Collections.singletonMap;\n+\n+public class CustomNotificationListener implements NotificationListener {\n+\n+    protected static Logger logger = LoggerFactory.getLogger(CustomNotificationListener.class);\n+    \n+    private UserTaskService userTaskService = (UserTaskService) ServiceRegistry.get().service(ServiceRegistry.USER_TASK_SERVICE);\n+\n+    @Override\n+    public void onNotification(NotificationEvent event, UserInfo userInfo) {\n+        logger.debug(\"onNotification with event content {}, task {} , userInfo {}\", \n+                event.getContent(), userInfo);\n+        try {\n+            if (\"TaskSaveContent\".equals(event.getTask().getName())) {\n+                Long contentId = userTaskService.saveContent(event.getTask().getId(), singletonMap(\"grade\", \"E\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab4830034ebcd261b69742aa68f405849445d16"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5ODAzOQ==", "bodyText": "Unnecessary unboxing\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertTrue(processInstanceId.longValue() > 0);\n          \n          \n            \n                    assertTrue(processInstanceId > 0);", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229#discussion_r485398039", "createdAt": "2020-09-09T07:31:53Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/NotificationSaveContentIntegrationTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.instance.TaskSummary;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+import org.kie.server.integrationtests.shared.KieServerSynchronization;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class NotificationSaveContentIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", CONTAINER_ID_NOTIFICATION,\n+            \"1.0.0.Final\");\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/\"+CONTAINER_ID_NOTIFICATION);\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID_NOTIFICATION, releaseId);\n+    }\n+\n+    @Test(timeout = 10000)\n+    public void testSaveContentOnNotification() throws Exception {\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID_NOTIFICATION, PROCESS_ID_NOTIFICATION);\n+        assertNotNull(processInstanceId);\n+        assertTrue(processInstanceId.longValue() > 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab4830034ebcd261b69742aa68f405849445d16"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5OTQ1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        tasks=taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, Arrays.asList(\"Reserved\"), 0, 10);\n          \n          \n            \n                        tasks=taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, Collections.singletonList(\"Reserved\"), 0, 10);", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229#discussion_r485399455", "createdAt": "2020-09-09T07:34:39Z", "author": {"login": "afalhambra"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-jbpm/src/test/java/org/kie/server/integrationtests/jbpm/NotificationSaveContentIntegrationTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+*/\n+\n+package org.kie.server.integrationtests.jbpm;\n+\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.server.api.model.ReleaseId;\n+import org.kie.server.api.model.instance.TaskSummary;\n+import org.kie.server.integrationtests.shared.KieServerDeployer;\n+import org.kie.server.integrationtests.shared.KieServerSynchronization;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+\n+public class NotificationSaveContentIntegrationTest extends JbpmKieServerBaseIntegrationTest {\n+\n+    private static ReleaseId releaseId = new ReleaseId(\"org.kie.server.testing\", CONTAINER_ID_NOTIFICATION,\n+            \"1.0.0.Final\");\n+\n+    @BeforeClass\n+    public static void buildAndDeployArtifacts() {\n+\n+        KieServerDeployer.buildAndDeployCommonMavenParent();\n+        KieServerDeployer.buildAndDeployMavenProjectFromResource(\"/kjars-sources/\"+CONTAINER_ID_NOTIFICATION);\n+\n+        kieContainer = KieServices.Factory.get().newKieContainer(releaseId);\n+\n+        createContainer(CONTAINER_ID_NOTIFICATION, releaseId);\n+    }\n+\n+    @Test(timeout = 10000)\n+    public void testSaveContentOnNotification() throws Exception {\n+        Long processInstanceId = processClient.startProcess(CONTAINER_ID_NOTIFICATION, PROCESS_ID_NOTIFICATION);\n+        assertNotNull(processInstanceId);\n+        assertTrue(processInstanceId.longValue() > 0);\n+\n+        try {\n+            List<TaskSummary> tasks=taskClient.findTasksAssignedAsPotentialOwner(USER_YODA, 0, 10);\n+            assertEquals(1, tasks.size());\n+            \n+            //Task is claimed during onNotification, as well as saving output content\n+            KieServerSynchronization.waitForTaskStatus(taskClient, tasks.get(0).getId(), \"Reserved\");\n+            \n+            tasks=taskClient.findTasksByStatusByProcessInstanceId(processInstanceId, Arrays.asList(\"Reserved\"), 0, 10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cab4830034ebcd261b69742aa68f405849445d16"}, "originalPosition": 63}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cab4830034ebcd261b69742aa68f405849445d16", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/cab4830034ebcd261b69742aa68f405849445d16", "committedDate": "2020-09-08T16:26:45Z", "message": "[JBPM-9331] JACCIdentityProvider must support contextUsers"}, "afterCommit": {"oid": "50455b9dbd20234870c474bfc2c0a584f73c0049", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/50455b9dbd20234870c474bfc2c0a584f73c0049", "committedDate": "2020-09-09T08:30:55Z", "message": "[JBPM-9331] JACCIdentityProvider must support contextUsers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzkzMDM2", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229#pullrequestreview-484793036", "createdAt": "2020-09-09T08:48:00Z", "commit": {"oid": "50455b9dbd20234870c474bfc2c0a584f73c0049"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0ODQzOTcy", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2229#pullrequestreview-484843972", "createdAt": "2020-09-09T09:49:27Z", "commit": {"oid": "50455b9dbd20234870c474bfc2c0a584f73c0049"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "50455b9dbd20234870c474bfc2c0a584f73c0049", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/50455b9dbd20234870c474bfc2c0a584f73c0049", "committedDate": "2020-09-09T08:30:55Z", "message": "[JBPM-9331] JACCIdentityProvider must support contextUsers"}, "afterCommit": {"oid": "154b42939b7db0c45d664be547d6f21e738f297d", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/154b42939b7db0c45d664be547d6f21e738f297d", "committedDate": "2020-09-09T17:49:20Z", "message": "[JBPM-9331] JACCIdentityProvider must support contextUsers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "154b42939b7db0c45d664be547d6f21e738f297d", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/154b42939b7db0c45d664be547d6f21e738f297d", "committedDate": "2020-09-09T17:49:20Z", "message": "[JBPM-9331] JACCIdentityProvider must support contextUsers"}, "afterCommit": {"oid": "e8261f75296b43fef9d63a442375a930031c5829", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/e8261f75296b43fef9d63a442375a930031c5829", "committedDate": "2020-09-09T17:52:57Z", "message": "[JBPM-9331] JACCIdentityProvider must support contextUsers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e8261f75296b43fef9d63a442375a930031c5829", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/e8261f75296b43fef9d63a442375a930031c5829", "committedDate": "2020-09-09T17:52:57Z", "message": "[JBPM-9331] JACCIdentityProvider must support contextUsers"}, "afterCommit": {"oid": "c23c6c53c8233b641a4c57d36282aa2ccf039050", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c23c6c53c8233b641a4c57d36282aa2ccf039050", "committedDate": "2020-09-10T10:23:40Z", "message": "[JBPM-9331] JACCIdentityProvider must support contextUsers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c23c6c53c8233b641a4c57d36282aa2ccf039050", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/c23c6c53c8233b641a4c57d36282aa2ccf039050", "committedDate": "2020-09-10T10:23:40Z", "message": "[JBPM-9331] JACCIdentityProvider must support contextUsers"}, "afterCommit": {"oid": "235458820b94ab3dc473649a720a0095f734f2b5", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/235458820b94ab3dc473649a720a0095f734f2b5", "committedDate": "2020-09-10T12:38:02Z", "message": "[JBPM-9331] JACCIdentityProvider must support contextUsers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b7b3ab63877b0bf46b09cc59bb99afccfaef453", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/3b7b3ab63877b0bf46b09cc59bb99afccfaef453", "committedDate": "2020-09-10T13:46:14Z", "message": "[JBPM-9331] JACCIdentityProvider must support contextUsers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "235458820b94ab3dc473649a720a0095f734f2b5", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/235458820b94ab3dc473649a720a0095f734f2b5", "committedDate": "2020-09-10T12:38:02Z", "message": "[JBPM-9331] JACCIdentityProvider must support contextUsers"}, "afterCommit": {"oid": "3b7b3ab63877b0bf46b09cc59bb99afccfaef453", "author": {"user": {"login": "gmunozfe", "name": "Gonzalo Mu\u00f1oz"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/3b7b3ab63877b0bf46b09cc59bb99afccfaef453", "committedDate": "2020-09-10T13:46:14Z", "message": "[JBPM-9331] JACCIdentityProvider must support contextUsers"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1163, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}