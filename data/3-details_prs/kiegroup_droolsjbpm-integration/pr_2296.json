{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5NjE1MzA0", "number": 2296, "title": "DROOLS-5756 DMN kie-camel local/embedded execution capability and demo", "bodyText": "JIRA: https://issues.redhat.com/browse/DROOLS-5756\nreferenced Pull Requests: none\n\n\nHow to retest this PR or trigger a specific build:\n\n\n\na pull request please add comment: Jenkins retest this\n\n\na full downstream build please add comment: Jenkins run fdb\n\n\na compile downstream build please  add comment: Jenkins run cdb\n\n\na full production downstream build please add comment: Jenkins execute product fdb\n\n\nan upstream build please add comment: Jenkins run upstream", "createdAt": "2020-10-25T15:55:53Z", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2296", "merged": true, "mergeCommit": {"oid": "dda51756461760acd2eeb4a304c670243d5b09ae"}, "closed": true, "closedAt": "2020-11-02T12:22:10Z", "author": {"login": "tarilabs"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWB4CegH2gAyNTA5NjE1MzA0OjQyMGMyYjk3YTcyM2QzZDU1OGViMDllOGRlMDEwN2MyMWE3OWI2NDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYi-tSgFqTUyMTU1MjI5Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "420c2b97a723d3d558eb09e8de0107c21a79b641", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/420c2b97a723d3d558eb09e8de0107c21a79b641", "committedDate": "2020-10-25T15:54:41Z", "message": "DROOLS-5756 DMN kie-camel local/embedded execution capability and demo"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NTI1MTA2", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2296#pullrequestreview-517525106", "createdAt": "2020-10-27T09:58:52Z", "commit": {"oid": "420c2b97a723d3d558eb09e8de0107c21a79b641"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTo1ODo1MlrOHoz2bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwOTo1ODo1MlrOHoz2bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjU1NDYwNg==", "bodyText": "What about merge ToMapProcessor logic with ToDMNEvaluateAllCommandProcessor? Something like an additional optional parameter for the constructor to specify where to put the exchange body. If this value is not provided and the body is a Map we can use the whole object as input.\nWdyt?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2296#discussion_r512554606", "createdAt": "2020-10-27T09:58:52Z", "author": {"login": "danielezonca"}, "path": "kie-camel/src/test/java/org/kie/camel/embedded/camel/component/KieEmbeddedEndpointDMNTest.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.camel.embedded.camel.component;\n+\n+import java.util.List;\n+\n+import javax.naming.Context;\n+import javax.naming.NamingException;\n+\n+import org.apache.camel.Processor;\n+import org.apache.camel.builder.RouteBuilder;\n+import org.apache.camel.component.mock.MockEndpoint;\n+import org.apache.camel.model.ClaimCheckOperation;\n+import org.drools.compiler.kie.builder.impl.DrlProject;\n+import org.junit.Test;\n+import org.kie.api.KieServices;\n+import org.kie.api.builder.KieBuilder;\n+import org.kie.api.builder.KieFileSystem;\n+import org.kie.api.builder.Message;\n+import org.kie.api.io.KieResources;\n+import org.kie.api.runtime.KieSession;\n+import org.kie.camel.embedded.dmn.DecisionsToHeadersProcessor;\n+import org.kie.camel.embedded.dmn.ToDMNEvaluateAllCommandProcessor;\n+import org.kie.camel.embedded.dmn.ToMapProcessor;\n+import org.kie.pipeline.camel.Person;\n+\n+public class KieEmbeddedEndpointDMNTest extends KieCamelTestSupport {\n+\n+    @Test\n+    public void testDMN() throws Exception {\n+        Person johnDoe = new Person(\"John Doe\", 47);\n+        Person alice = new Person(\"Alice\", 18);\n+        Person bob = new Person(\"Bob\", 17);\n+        Person charlie = new Person(\"Charlie\", 21);\n+\n+        MockEndpoint canDrink = getMockEndpoint(\"mock:canDrink\");\n+        canDrink.expectedMessageCount(3);\n+        canDrink.expectedBodiesReceived(johnDoe, alice, charlie);\n+\n+        MockEndpoint noDrink = getMockEndpoint(\"mock:noDrink\");\n+        noDrink.expectedMessageCount(1);\n+        noDrink.expectedBodiesReceived(bob);\n+\n+        template.requestBody(\"direct:start\", johnDoe);\n+        template.requestBody(\"direct:start\", alice);\n+        template.requestBody(\"direct:start\", bob);\n+        template.requestBody(\"direct:start\", charlie);\n+\n+        canDrink.assertIsSatisfied();\n+        noDrink.assertIsSatisfied();\n+    }\n+\n+    @Override\n+    protected RouteBuilder createRouteBuilder() throws Exception {\n+        final Processor toMap = new ToMapProcessor(\"a person\");\n+        final Processor toDMNCommand = new ToDMNEvaluateAllCommandProcessor(\"https://kiegroup.org/dmn/_FD3D17D0-D23E-457E-B41A-380644F030A8\",\n+                                                                            \"Can Drink?\",\n+                                                                            \"dmnResult\");\n+        final Processor dmnToHeader = DecisionsToHeadersProcessor.builder(\"dmnResult\",\n+                                                                          \"canDrinkHeader\",\n+                                                                          \"Can Drink?\")\n+                                                                 .build();\n+\n+        return new RouteBuilder() {\n+            public void configure() throws Exception {\n+                from(\"direct:start\").claimCheck(ClaimCheckOperation.Push)\n+                                    .process(toMap)\n+                                    .process(toDMNCommand)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "420c2b97a723d3d558eb09e8de0107c21a79b641"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNTUyMjk2", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2296#pullrequestreview-521552296", "createdAt": "2020-11-02T11:36:41Z", "commit": {"oid": "420c2b97a723d3d558eb09e8de0107c21a79b641"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1237, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}