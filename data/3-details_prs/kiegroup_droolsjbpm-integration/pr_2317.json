{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMzI3NDMw", "number": 2317, "title": " DROOLS-5793 kie-server marshaller simpleclass name clash with DMN symbol", "bodyText": "Unfortunately the generic kie-server marshaller for JSON doesn't conform to Jackson's directive such as\n@JsonDeserialize(keyAs = String.class)\nMap<String, Object> field ...\nso there is no way to circumvent the following hard-constraint code-path during deserialization:\n\n  \n    \n      droolsjbpm-integration/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/marshalling/json/JSONMarshaller.java\n    \n    \n        Lines 747 to 751\n      in\n      1032eeb\n    \n    \n    \n    \n\n        \n          \n           String field1 = jp.getText(); \n        \n\n        \n          \n           jp.nextToken(); \n        \n\n        \n          \n           if (classes.containsKey(field1)) { \n        \n\n        \n          \n               jsonContext.get().setStripped(true); \n        \n\n        \n          \n               Object value = deserializeObjectMapper.readValue(jp, classes.get(field1)); \n        \n    \n  \n\n\nThat is because for the purpose of the JSON Marshaller, a string literal in JSON for a (json map) field key could identify a class not only if it correspond to the Java's FQCN of a domain object, but also by its simple name,\nref a little above here:\n\n  \n    \n      droolsjbpm-integration/kie-server-parent/kie-server-api/src/main/java/org/kie/server/api/marshalling/json/JSONMarshaller.java\n    \n    \n        Lines 728 to 732\n      in\n      1032eeb\n    \n    \n    \n    \n\n        \n          \n           public CustomObjectDeserializer(Set<Class<?>> classes) { \n        \n\n        \n          \n            \n        \n\n        \n          \n               for (Class<?> c : classes) { \n        \n\n        \n          \n                   this.classes.put(c.getSimpleName(), c); \n        \n\n        \n          \n                   this.classes.put(c.getName(), c); \n        \n    \n  \n\n\nthis is a problem for the scenario as described in the linked JIRA.\nThis PR does not solve all the analogous problems which may arise for this generic kie-server marshaller \"feature\" but at least it solves for the DMN Client API DTOs, as experience demonstrated it is very likely to occur.\nJIRA: https://issues.redhat.com/browse/DROOLS-5793\nreferenced Pull Requests: none\n\n\nHow to retest this PR or trigger a specific build:\n\n\n\na pull request please add comment: Jenkins retest this\n\n\na full downstream build please add comment: Jenkins run fdb\n\n\na compile downstream build please  add comment: Jenkins run cdb\n\n\na full production downstream build please add comment: Jenkins execute product fdb\n\n\nan upstream build please add comment: Jenkins run upstream", "createdAt": "2020-11-17T11:10:09Z", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2317", "merged": true, "mergeCommit": {"oid": "4543161ec79056415935c435582c8a8ad2b653e3"}, "closed": true, "closedAt": "2020-11-19T12:53:24Z", "author": {"login": "tarilabs"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddXeDggH2gAyNTIyMzI3NDMwOmQ1OGZlMmNjYjliNjliZWQwNGEzMmUwNDQ3NjExMmRiZWRiYTMyNmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdeBX1TAFqTUzNDM0Nzc1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d58fe2ccb9b69bed04a32e04476112dbedba326d", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/d58fe2ccb9b69bed04a32e04476112dbedba326d", "committedDate": "2020-11-17T11:01:41Z", "message": "DROOLS-5793 kie-server marshaller simpleclass name clash with DMN symbol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88dbe427bd565538d10765ca28e4a6780bdba861", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/88dbe427bd565538d10765ca28e4a6780bdba861", "committedDate": "2020-11-17T11:02:53Z", "message": "."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e47fa377b3bc7e06f8cf6b94def2315ada5910d", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/3e47fa377b3bc7e06f8cf6b94def2315ada5910d", "committedDate": "2020-11-17T11:12:42Z", "message": "."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMzg2MDE3", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2317#pullrequestreview-532386017", "createdAt": "2020-11-17T13:57:25Z", "commit": {"oid": "3e47fa377b3bc7e06f8cf6b94def2315ada5910d"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzo1NzoyNVrOH02DeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDoxMjowN1rOH02sug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3MzYyNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ctx.set(\"Applicant\", applicant); // VERY IMPORTANT that the map key is \"Applicant\" with the capital-A.\n          \n          \n            \n                    ctx.set(\"Applicant\", applicant); // VERY IMPORTANT that the map key is \"Applicant\" with the capital-A to clash with Applicant simple name", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2317#discussion_r525173624", "createdAt": "2020-11-17T13:57:25Z", "author": {"login": "danielezonca"}, "path": "kie-server-parent/kie-server-api/src/test/java/org/kie/server/api/model/dmn/JSONAPIRoundTripTest.java", "diffHunk": "@@ -0,0 +1,152 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.kie.server.api.model.dmn;\n+\n+import java.util.Collections;\n+import java.util.HashSet;\n+import java.util.Set;\n+\n+import org.assertj.core.api.Assertions;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.kie.dmn.api.core.DMNContext;\n+import org.kie.dmn.api.core.DMNDecisionResult.DecisionEvaluationStatus;\n+import org.kie.dmn.core.impl.DMNContextImpl;\n+import org.kie.dmn.core.impl.DMNDecisionResultImpl;\n+import org.kie.dmn.core.impl.DMNResultImpl;\n+import org.kie.server.api.marshalling.Marshaller;\n+import org.kie.server.api.marshalling.MarshallerFactory;\n+import org.kie.server.api.marshalling.MarshallingFormat;\n+import org.kie.server.api.model.KieServiceResponse.ResponseType;\n+import org.kie.server.api.model.ServiceResponse;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+public class JSONAPIRoundTripTest {\n+\n+    private static final Logger LOG = LoggerFactory.getLogger(JSONAPIRoundTripTest.class);\n+    private Marshaller marshaller;\n+\n+    @Before\n+    public void init() {\n+        Set<Class<?>> extraClasses = new HashSet<Class<?>>();\n+        extraClasses.add(Applicant.class);\n+        marshaller = MarshallerFactory.getMarshaller(extraClasses, MarshallingFormat.JSON, this.getClass().getClassLoader());\n+    }\n+\n+    @Test\n+    public void test() {\n+        Applicant applicant = new Applicant(\"John Doe\", 47);\n+        Applicant applicant2 = roundTrip(applicant);\n+        Assertions.assertThat(applicant2).isEqualTo(applicant);\n+\n+        DMNContext ctx = new DMNContextImpl();\n+        ctx.set(\"Applicant\", applicant); // VERY IMPORTANT that the map key is \"Applicant\" with the capital-A.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e47fa377b3bc7e06f8cf6b94def2315ada5910d"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE4NDA4MQ==", "bodyText": "License header?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2317#discussion_r525184081", "createdAt": "2020-11-17T14:11:58Z", "author": {"login": "danielezonca"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-dmn/src/test/filtered-resources/kjars-sources/json-applicant/src/main/java/com/acme/Address.java", "diffHunk": "@@ -0,0 +1,31 @@\n+package com.acme;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e47fa377b3bc7e06f8cf6b94def2315ada5910d"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE4NDE4Ng==", "bodyText": "License header?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2317#discussion_r525184186", "createdAt": "2020-11-17T14:12:07Z", "author": {"login": "danielezonca"}, "path": "kie-server-parent/kie-server-tests/kie-server-integ-tests-dmn/src/test/filtered-resources/kjars-sources/json-applicant/src/main/java/com/acme/Applicant.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package com.acme;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e47fa377b3bc7e06f8cf6b94def2315ada5910d"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed083b81a77dd55a1a67d2cce9bfcd5d6ad6e789", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/ed083b81a77dd55a1a67d2cce9bfcd5d6ad6e789", "committedDate": "2020-11-17T14:59:19Z", "message": "implement code review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e5cda891dbc8a34323ec2b77d8ab750c3899682", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/5e5cda891dbc8a34323ec2b77d8ab750c3899682", "committedDate": "2020-11-19T09:28:27Z", "message": "."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26b74d2c3d4de21e2122a22ea257ed2310f9b78d", "author": {"user": {"login": "tarilabs", "name": "Matteo Mortari"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/26b74d2c3d4de21e2122a22ea257ed2310f9b78d", "committedDate": "2020-11-19T09:34:42Z", "message": "fix JSON comparison should ignore \"pretty formatting\""}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MzQ3NzU3", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2317#pullrequestreview-534347757", "createdAt": "2020-11-19T11:50:54Z", "commit": {"oid": "26b74d2c3d4de21e2122a22ea257ed2310f9b78d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1253, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}