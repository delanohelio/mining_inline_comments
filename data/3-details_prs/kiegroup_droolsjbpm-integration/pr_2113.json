{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NjIzMjUw", "number": 2113, "title": "PLANNER-1998: [Tasks Assignment] Test fixes, windows directory and ibm key store", "bodyText": "- Fix SimpleUserSystemService windows directoy error\n- Adds the IBM jdk generated KeyStore taskAssigningKeystoreIBM.jceks for the TaskAssigning tests", "createdAt": "2020-05-31T14:54:07Z", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2113", "merged": true, "mergeCommit": {"oid": "34e389e24167a8150b80854902078b3667c86f9e"}, "closed": true, "closedAt": "2020-06-01T15:31:59Z", "author": {"login": "wmedvede"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcms3o6AH2gAyNDI1NjIzMjUwOjQ3Njc1MDlhOGNiZWQwYTI0OGRjYTQ3OGJhZTg4ZThlYjZkZTMzNGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcm91UTgFqTQyMTc0NzE0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4767509a8cbed0a248dca478bae88e8eb6de334b", "author": {"user": {"login": "wmedvede", "name": "Walter Medvedeo"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/4767509a8cbed0a248dca478bae88e8eb6de334b", "committedDate": "2020-05-31T14:51:48Z", "message": "PLANNER-1998: [Tasks Assignment] Test fixes, windows directory and ibm key store\n\n    - Fix SimpleUserSystemService windows directoy error\n    - Adds the IBM jdk generated KeyStore taskAssigningKeystoreIBM.jceks for the TaskAssigning tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNjkzMzg3", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2113#pullrequestreview-421693387", "createdAt": "2020-06-01T08:59:39Z", "commit": {"oid": "4767509a8cbed0a248dca478bae88e8eb6de334b"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwODo1OTozOVrOGdDjrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwOToxMDowNFrOGdD1YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyMDE3Mw==", "bodyText": "Great idea with using a second keystore that is compatible with the IBM java, thanks!", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2113#discussion_r433120173", "createdAt": "2020-06-01T08:59:39Z", "author": {"login": "rsynek"}, "path": "kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-planning/src/test/java/org/kie/server/services/taskassigning/planning/TaskAssigningPlanningKieServerExtensionTest.java", "diffHunk": "@@ -113,6 +119,8 @@\n     private static final String RUNTIME_TIMEOUT = \"1234\";\n \n     private static final String KEY_STORE_RESOURCE = \"taskAssigningKeystore.jceks\";\n+    private static final String KEY_STORE_RESOURCE_IBM = \"taskAssigningKeystoreIBM.jceks\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4767509a8cbed0a248dca478bae88e8eb6de334b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyMjE1Nw==", "bodyText": "IDE suggests this is a dead code. As such, it may easily disappear in any refactoring to come. Do we need to keep the code, in other words, do we expect the keystore to change in the future? If so, how about moving the keystore creation into a separate class with a main method (still under the test directory structure)?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2113#discussion_r433122157", "createdAt": "2020-06-01T09:04:12Z", "author": {"login": "rsynek"}, "path": "kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-planning/src/test/java/org/kie/server/services/taskassigning/planning/TaskAssigningPlanningKieServerExtensionTest.java", "diffHunk": "@@ -674,4 +683,46 @@ private void enableExtension() {\n     private void disableExtension() {\n         System.setProperty(KIE_TASK_ASSIGNING_PLANNING_EXT_DISABLED, \"true\");\n     }\n+\n+    private String getCurrentKeyStore() {\n+        String vendor = System.getProperty(\"java.vendor\");\n+        if (vendor.toUpperCase().contains(\"IBM\")) {\n+            return KEY_STORE_RESOURCE_IBM;\n+        } else {\n+            return KEY_STORE_RESOURCE;\n+        }\n+    }\n+\n+    /**\n+     * Helper method for facilitating the generation of the KeyStore compatible with IBM jdk.\n+     */\n+    private void generateTaskAssigningIBMKeyStore() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4767509a8cbed0a248dca478bae88e8eb6de334b"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyNDcwNA==", "bodyText": "Suggestion: instead of synchronizing access to this variable, can we use the AtomicInteger?", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2113#discussion_r433124704", "createdAt": "2020-06-01T09:10:04Z", "author": {"login": "rsynek"}, "path": "kie-server-parent/kie-server-services/kie-server-services-task-assigning/kie-server-services-task-assigning-core/src/test/java/org/kie/server/services/taskassigning/core/model/solver/realtime/AbstractProblemFactChangeTest.java", "diffHunk": "@@ -35,14 +35,22 @@\n public abstract class AbstractProblemFactChangeTest extends AbstractTaskAssigningCoreTest {\n \n     final Random random = new Random();\n+    private static int changeIds = 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4767509a8cbed0a248dca478bae88e8eb6de334b"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0b09679faf5275d92df6e80a23174654f7a7705", "author": {"user": {"login": "wmedvede", "name": "Walter Medvedeo"}}, "url": "https://github.com/kiegroup/droolsjbpm-integration/commit/a0b09679faf5275d92df6e80a23174654f7a7705", "committedDate": "2020-06-01T10:10:42Z", "message": "PLANNER-1998: [Tasks Assignment] Test fixes, windows directory and ibm key store\n    - Review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNzQ3MTQw", "url": "https://github.com/kiegroup/droolsjbpm-integration/pull/2113#pullrequestreview-421747140", "createdAt": "2020-06-01T10:37:39Z", "commit": {"oid": "a0b09679faf5275d92df6e80a23174654f7a7705"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1432, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}