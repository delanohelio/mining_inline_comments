{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3NDIxNDI2", "number": 4281, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo1NTozN1rOETHpIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo1NTozN1rOETHpIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDgzNjE5OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/jboss/as/server/deployment/transformation/DeploymentTransformer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo1NTozN1rOG4rCSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjo0MToxOVrOG42jAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3ODUzNg==", "bodyText": "Should we mention anything for in-place replacement (like it is used above in deploymentTransformer.transform(deploymentFile.toPath(), deploymentFile.toPath())?", "url": "https://github.com/wildfly/wildfly-core/pull/4281#discussion_r462078536", "createdAt": "2020-07-29T06:55:37Z", "author": {"login": "jmesnil"}, "path": "server/src/main/java/org/jboss/as/server/deployment/transformation/DeploymentTransformer.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jboss.as.server.deployment.transformation;\n+\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Path;\n+\n+/**\n+ * Performs transformation operations on deployment content.\n+ *\n+ * This interface is experimental and may be removed or altered at any time.\n+ */\n+@Deprecated\n+public interface DeploymentTransformer {\n+\n+    /**\n+     * Perform transformation of streamed deployment content.\n+     *\n+     * @param in InputStream containing the deployment content to be transformed.\n+     * @param name the name of the deployment\n+     * @return an input stream from which the transformed content can be read.\n+     * @throws IOException if a problem occurs reading or writing the content\n+     */\n+    InputStream transform(InputStream in, String name) throws IOException;\n+\n+    /**\n+     * Perform transformation of filesystem deployment content.\n+     * @param src path of the deployment content to be transformed\n+     * @param target path of either the file to which the transformed content should be written or to the directory\n+     *               in which it should be written. If the latter that name of the written file will be the same as\n+     *               the name of the {@code src} file.\n+     * @throws IOException if a problem occurs reading or writing the content\n+     */\n+    void transform(Path src, Path target) throws IOException ;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8c411c1619dce325c28989e8ed693c6e6c34094"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2NzEzNw==", "bodyText": "@jmesnil I just updated the javadoc to clarify. Thanks!", "url": "https://github.com/wildfly/wildfly-core/pull/4281#discussion_r462267137", "createdAt": "2020-07-29T12:41:19Z", "author": {"login": "bstansberry"}, "path": "server/src/main/java/org/jboss/as/server/deployment/transformation/DeploymentTransformer.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2020 Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.jboss.as.server.deployment.transformation;\n+\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.nio.file.Path;\n+\n+/**\n+ * Performs transformation operations on deployment content.\n+ *\n+ * This interface is experimental and may be removed or altered at any time.\n+ */\n+@Deprecated\n+public interface DeploymentTransformer {\n+\n+    /**\n+     * Perform transformation of streamed deployment content.\n+     *\n+     * @param in InputStream containing the deployment content to be transformed.\n+     * @param name the name of the deployment\n+     * @return an input stream from which the transformed content can be read.\n+     * @throws IOException if a problem occurs reading or writing the content\n+     */\n+    InputStream transform(InputStream in, String name) throws IOException;\n+\n+    /**\n+     * Perform transformation of filesystem deployment content.\n+     * @param src path of the deployment content to be transformed\n+     * @param target path of either the file to which the transformed content should be written or to the directory\n+     *               in which it should be written. If the latter that name of the written file will be the same as\n+     *               the name of the {@code src} file.\n+     * @throws IOException if a problem occurs reading or writing the content\n+     */\n+    void transform(Path src, Path target) throws IOException ;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3ODUzNg=="}, "originalCommit": {"oid": "e8c411c1619dce325c28989e8ed693c6e6c34094"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3754, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}