{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NzUxNDYx", "number": 4382, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwMjowNzo0MVrOE8DFwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDo1MTowMlrOE_p9Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNDAwNjQxOnYy", "diffSide": "RIGHT", "path": "controller/src/main/java/org/jboss/as/controller/parsing/ParseUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QwMjowNzo0MVrOH39mPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTowNzoyMlrOH9fbkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ0Mjk0MA==", "bodyText": "This should do the same test that the non-expression else block does, and use 'trimmed' unless attributeType is STRING or PROPERTY. An expression that's meant to resolve to a string convertible to some other type shouldn't have leading/trailing whitespace and we shouldn't stop being helpful about that.", "url": "https://github.com/wildfly/wildfly-core/pull/4382#discussion_r528442940", "createdAt": "2020-11-23T02:07:41Z", "author": {"login": "bstansberry"}, "path": "controller/src/main/java/org/jboss/as/controller/parsing/ParseUtils.java", "diffHunk": "@@ -565,8 +565,8 @@ public static ModelNode parseAttributeValue(final String value, final boolean is\n         final String trimmed = value == null ? null : value.trim();\n         ModelNode node;\n         if (trimmed != null) {\n-            if (isExpressionAllowed && isExpression(trimmed)) {\n-                node = new ModelNode(new ValueExpression(trimmed));\n+            if (isExpressionAllowed && isExpression(value)) {\n+                node = new ModelNode(new ValueExpression(value));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93113d4b528e74f15f830b38aa3b6b276bad293b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDI0MDE0Ng==", "bodyText": "Ok, done...", "url": "https://github.com/wildfly/wildfly-core/pull/4382#discussion_r534240146", "createdAt": "2020-12-02T15:07:22Z", "author": {"login": "jbaesner"}, "path": "controller/src/main/java/org/jboss/as/controller/parsing/ParseUtils.java", "diffHunk": "@@ -565,8 +565,8 @@ public static ModelNode parseAttributeValue(final String value, final boolean is\n         final String trimmed = value == null ? null : value.trim();\n         ModelNode node;\n         if (trimmed != null) {\n-            if (isExpressionAllowed && isExpression(trimmed)) {\n-                node = new ModelNode(new ValueExpression(trimmed));\n+            if (isExpressionAllowed && isExpression(value)) {\n+                node = new ModelNode(new ValueExpression(value));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODQ0Mjk0MA=="}, "originalCommit": {"oid": "93113d4b528e74f15f830b38aa3b6b276bad293b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTgzMTcwOnYy", "diffSide": "RIGHT", "path": "controller/src/test/java/org/jboss/as/controller/parsing/ParseUtilsTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDo1MTowMlrOH9enag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTowNzowMlrOH9fajw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIyNjc5NA==", "bodyText": "@jbaesner I believe this should be ModelType.STRING", "url": "https://github.com/wildfly/wildfly-core/pull/4382#discussion_r534226794", "createdAt": "2020-12-02T14:51:02Z", "author": {"login": "bstansberry"}, "path": "controller/src/test/java/org/jboss/as/controller/parsing/ParseUtilsTestCase.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2012, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.jboss.as.controller.parsing;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.dmr.ModelType;\n+import org.junit.Test;\n+\n+/**\n+ * Unit tests of {@link ParseUtils}.\n+ *\n+ * @author Joerg Baesner (c) 2020 Red Hat Inc.\n+ */\n+public class ParseUtilsTestCase {\n+\n+    @Test\n+    public void testExpressionsWithTrailingWhitespace() {\n+\n+        String propertyValue = \"${key} \";\n+        ModelType attributeType = ModelType.EXPRESSION;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93113d4b528e74f15f830b38aa3b6b276bad293b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIzOTg4Nw==", "bodyText": "Yes, exactly, you're right!", "url": "https://github.com/wildfly/wildfly-core/pull/4382#discussion_r534239887", "createdAt": "2020-12-02T15:07:02Z", "author": {"login": "jbaesner"}, "path": "controller/src/test/java/org/jboss/as/controller/parsing/ParseUtilsTestCase.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/*\n+ * JBoss, Home of Professional Open Source.\n+ * Copyright 2012, Red Hat, Inc., and individual contributors\n+ * as indicated by the @author tags. See the copyright.txt file in the\n+ * distribution for a full listing of individual contributors.\n+ *\n+ * This is free software; you can redistribute it and/or modify it\n+ * under the terms of the GNU Lesser General Public License as\n+ * published by the Free Software Foundation; either version 2.1 of\n+ * the License, or (at your option) any later version.\n+ *\n+ * This software is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details.\n+ *\n+ * You should have received a copy of the GNU Lesser General Public\n+ * License along with this software; if not, write to the Free\n+ * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA\n+ * 02110-1301 USA, or see the FSF site: http://www.fsf.org.\n+ */\n+package org.jboss.as.controller.parsing;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.jboss.dmr.ModelNode;\n+import org.jboss.dmr.ModelType;\n+import org.junit.Test;\n+\n+/**\n+ * Unit tests of {@link ParseUtils}.\n+ *\n+ * @author Joerg Baesner (c) 2020 Red Hat Inc.\n+ */\n+public class ParseUtilsTestCase {\n+\n+    @Test\n+    public void testExpressionsWithTrailingWhitespace() {\n+\n+        String propertyValue = \"${key} \";\n+        ModelType attributeType = ModelType.EXPRESSION;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIyNjc5NA=="}, "originalCommit": {"oid": "93113d4b528e74f15f830b38aa3b6b276bad293b"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3729, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}