{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3OTk1OTA2", "number": 4352, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzozNDo1MFrOEvo2pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0Njo0M1rOEvpIlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mzg3ODc2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/jboss/as/server/controller/git/ElytronClientCredentialsProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzozNDo1MFrOHkuigQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo1NTozNlrOHkvUlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3MzI4MQ==", "bodyText": "@darranl, Is this class considered API? can the restriction of the visibility impact user code or just server code?", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508273281", "createdAt": "2020-10-20T07:34:50Z", "author": {"login": "jmesnil"}, "path": "server/src/main/java/org/jboss/as/server/controller/git/ElytronClientCredentialsProvider.java", "diffHunk": "@@ -39,12 +39,12 @@\n  * Currently only login/password is supported.\n  * @author Emmanuel Hugonnet (c) 2018 Red Hat, inc.\n  */\n-public class ElytronClientCredentialsProvider extends CredentialsProvider {\n+class ElytronClientCredentialsProvider extends CredentialsProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4NjEwMQ==", "bodyText": "Server code.", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508286101", "createdAt": "2020-10-20T07:55:36Z", "author": {"login": "darranl"}, "path": "server/src/main/java/org/jboss/as/server/controller/git/ElytronClientCredentialsProvider.java", "diffHunk": "@@ -39,12 +39,12 @@\n  * Currently only login/password is supported.\n  * @author Emmanuel Hugonnet (c) 2018 Red Hat, inc.\n  */\n-public class ElytronClientCredentialsProvider extends CredentialsProvider {\n+class ElytronClientCredentialsProvider extends CredentialsProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3MzI4MQ=="}, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mzg3OTM4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/jboss/as/server/controller/git/ElytronClientSshdSessionFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzozNDo1OVrOHkui2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo1NTo0NVrOHkvU-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3MzM3MA==", "bodyText": "idem", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508273370", "createdAt": "2020-10-20T07:34:59Z", "author": {"login": "jmesnil"}, "path": "server/src/main/java/org/jboss/as/server/controller/git/ElytronClientSshdSessionFactory.java", "diffHunk": "@@ -66,7 +66,7 @@\n  *\n  * @author <a href=\"mailto:aabdelsa@redhat.com\">Ashley Abdel-Sayed</a>\n  */\n-public class ElytronClientSshdSessionFactory extends SshdSessionFactory {\n+class ElytronClientSshdSessionFactory extends SshdSessionFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4NjIwMQ==", "bodyText": "Server code.", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508286201", "createdAt": "2020-10-20T07:55:45Z", "author": {"login": "darranl"}, "path": "server/src/main/java/org/jboss/as/server/controller/git/ElytronClientSshdSessionFactory.java", "diffHunk": "@@ -66,7 +66,7 @@\n  *\n  * @author <a href=\"mailto:aabdelsa@redhat.com\">Ashley Abdel-Sayed</a>\n  */\n-public class ElytronClientSshdSessionFactory extends SshdSessionFactory {\n+class ElytronClientSshdSessionFactory extends SshdSessionFactory {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3MzM3MA=="}, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mzg4NDUxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/jboss/as/server/logging/ServerLogger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzozNjoyNlrOHkumBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo1Njo1NFrOHkvYOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3NDE4Mg==", "bodyText": "would it make sense to mention the path to the  cloned Git repository in that INFO log?", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508274182", "createdAt": "2020-10-20T07:36:26Z", "author": {"login": "jmesnil"}, "path": "server/src/main/java/org/jboss/as/server/logging/ServerLogger.java", "diffHunk": "@@ -1345,6 +1345,17 @@\n     @Message(id = 277, value = \"Failed to load SSH Credentials %s\")\n     RuntimeException failedToLoadSSHCredentials(@Cause Throwable cause, String message);\n \n+    @LogMessage(level = INFO)\n+    @Message(id = 278, value = \"The configuration history is managed through Git\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4NzAzMw==", "bodyText": "I need to move on from this issue now, the logging I added was to get to the bottom of a test failure - I think other messages will help identify the path if needed.", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508287033", "createdAt": "2020-10-20T07:56:54Z", "author": {"login": "darranl"}, "path": "server/src/main/java/org/jboss/as/server/logging/ServerLogger.java", "diffHunk": "@@ -1345,6 +1345,17 @@\n     @Message(id = 277, value = \"Failed to load SSH Credentials %s\")\n     RuntimeException failedToLoadSSHCredentials(@Cause Throwable cause, String message);\n \n+    @LogMessage(level = INFO)\n+    @Message(id = 278, value = \"The configuration history is managed through Git\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3NDE4Mg=="}, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzkxMDE4OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/org/jboss/as/server/logging/ServerLogger.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0Mjo1OFrOHku1dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo1ODozNVrOHkvcqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3ODEzNQ==", "bodyText": "It's suspicious when I see a @Message without an ID. Most of the time, I consider that this should be a DEBUG log and in that case, I don't see which benefit we have to use a @message for it instead of a plain debugf() call.\nIn that case, it turns out that this is a String used in a Git commit:\ngit.commit().setSign(gitConfig.isSign()).setMessage(ServerLogger.ROOT_LOGGER.repositoryInitialized()).call();\n\nI'm not sure what we want to do here...\nDo we need to i18nize this commit message?\nShould it be a stable message with a Message ID that can be tracked in a knowledge base?", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508278135", "createdAt": "2020-10-20T07:42:58Z", "author": {"login": "jmesnil"}, "path": "server/src/main/java/org/jboss/as/server/logging/ServerLogger.java", "diffHunk": "@@ -1354,23 +1365,10 @@\n     @Message(id = Message.NONE, value = \"The attribute '%s' has changed from '%s' to '%s'\")\n     String jmxAttributeChange(String name, String oldState, String stateString);\n \n-    @LogMessage(level = INFO)\n-    @Message(id = Message.NONE, value = \"The configuration history is managed through Git\")\n-    void usingGit();\n-\n     @Message(id = Message.NONE, value = \"Repository initialized\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3ODI3NA==", "bodyText": "@darranl that's not directly related to your PR though :)", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508278274", "createdAt": "2020-10-20T07:43:16Z", "author": {"login": "jmesnil"}, "path": "server/src/main/java/org/jboss/as/server/logging/ServerLogger.java", "diffHunk": "@@ -1354,23 +1365,10 @@\n     @Message(id = Message.NONE, value = \"The attribute '%s' has changed from '%s' to '%s'\")\n     String jmxAttributeChange(String name, String oldState, String stateString);\n \n-    @LogMessage(level = INFO)\n-    @Message(id = Message.NONE, value = \"The configuration history is managed through Git\")\n-    void usingGit();\n-\n     @Message(id = Message.NONE, value = \"Repository initialized\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3ODEzNQ=="}, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4ODE2OQ==", "bodyText": "IMO these should not have an ID - these messages are used for the commit messages in the git repository so similar to how we don't have message IDs for internationalised CLI messages we don't have message IDs for internationalised commit messages.", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508288169", "createdAt": "2020-10-20T07:58:35Z", "author": {"login": "darranl"}, "path": "server/src/main/java/org/jboss/as/server/logging/ServerLogger.java", "diffHunk": "@@ -1354,23 +1365,10 @@\n     @Message(id = Message.NONE, value = \"The attribute '%s' has changed from '%s' to '%s'\")\n     String jmxAttributeChange(String name, String oldState, String stateString);\n \n-    @LogMessage(level = INFO)\n-    @Message(id = Message.NONE, value = \"The configuration history is managed through Git\")\n-    void usingGit();\n-\n     @Message(id = Message.NONE, value = \"Repository initialized\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3ODEzNQ=="}, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzkxNDU3OnYy", "diffSide": "RIGHT", "path": "testsuite/manualmode/src/test/java/org/jboss/as/test/manualmode/management/persistence/AbstractGitRepositoryTestCase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0NDowNFrOHku4EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0NDowNFrOHku4EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3ODgwMQ==", "bodyText": "if that's a constant, we should rename it to JBOSS_SERVER_BASE_DIR", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508278801", "createdAt": "2020-10-20T07:44:04Z", "author": {"login": "jmesnil"}, "path": "testsuite/manualmode/src/test/java/org/jboss/as/test/manualmode/management/persistence/AbstractGitRepositoryTestCase.java", "diffHunk": "@@ -58,7 +58,7 @@\n  */\n public class AbstractGitRepositoryTestCase {\n \n-    private final Path jbossServerBaseDir = new File(System.getProperty(\"jboss.home\", System.getenv(\"JBOSS_HOME\"))).toPath().resolve(\"standalone\");\n+    private static final Path jbossServerBaseDir = new File(System.getProperty(\"jboss.home\", System.getenv(\"JBOSS_HOME\"))).toPath().resolve(\"standalone\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzkyNDY4OnYy", "diffSide": "RIGHT", "path": "testsuite/manualmode/src/test/java/org/jboss/as/test/manualmode/management/persistence/RemoteSshGitRepositoryTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0Njo0M1rOHku-Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwODozMjo0MVrOHkw22A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4MDQxNA==", "bodyText": "should we also restore the configuration in the @AfterClass to avoid keeping the config from the last test for the rest of the test suite?", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508280414", "createdAt": "2020-10-20T07:46:43Z", "author": {"login": "jmesnil"}, "path": "testsuite/manualmode/src/test/java/org/jboss/as/test/manualmode/management/persistence/RemoteSshGitRepositoryTestCase.java", "diffHunk": "@@ -171,10 +174,19 @@ public static void setUp() throws Exception {\n \n     }\n \n+    static void backupConfiguration() throws IOException {\n+        Path backUpRoot = Files.createTempDirectory(\"BackUpConfigurationFiles\").resolve(\"configuration\");\n+        Files.createDirectories(backUpRoot);\n+        PathUtil.copyRecursively(getJbossServerBaseDir().resolve(\"configuration\"), backUpRoot, true);\n+\n+        RemoteSshGitRepositoryTestCase.backupRoot = backUpRoot;\n+    }\n+\n     @AfterClass\n     public static void afterClass() throws IOException {\n         Security.removeProvider(CREDENTIAL_STORE_PROVIDER.getName());\n         FileUtils.delete(CS_PUBKEY.toFile(), FileUtils.RECURSIVE | FileUtils.RETRY);\n+        PathUtil.deleteRecursively(backupRoot);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMxMTI1Ng==", "bodyText": "The configuration is automatically restored after each individual test on line 260 at the end of the tearDown method.\nThe @BeforeClass and @afterclass methods are focused on taking a backup once at the start of the test run and deleting that backup at the end of the test run with the @after method handling the individual clean up after every test.", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508311256", "createdAt": "2020-10-20T08:32:41Z", "author": {"login": "darranl"}, "path": "testsuite/manualmode/src/test/java/org/jboss/as/test/manualmode/management/persistence/RemoteSshGitRepositoryTestCase.java", "diffHunk": "@@ -171,10 +174,19 @@ public static void setUp() throws Exception {\n \n     }\n \n+    static void backupConfiguration() throws IOException {\n+        Path backUpRoot = Files.createTempDirectory(\"BackUpConfigurationFiles\").resolve(\"configuration\");\n+        Files.createDirectories(backUpRoot);\n+        PathUtil.copyRecursively(getJbossServerBaseDir().resolve(\"configuration\"), backUpRoot, true);\n+\n+        RemoteSshGitRepositoryTestCase.backupRoot = backUpRoot;\n+    }\n+\n     @AfterClass\n     public static void afterClass() throws IOException {\n         Security.removeProvider(CREDENTIAL_STORE_PROVIDER.getName());\n         FileUtils.delete(CS_PUBKEY.toFile(), FileUtils.RECURSIVE | FileUtils.RETRY);\n+        PathUtil.deleteRecursively(backupRoot);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4MDQxNA=="}, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3791, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}