{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3OTk1OTA2", "number": 4352, "title": "[WFCORE-5147] Adjusting git integration logging and stability of RemoteSshGitRepositoryTestCase", "bodyText": "https://issues.redhat.com/browse/WFCORE-5147\nThe RemoteSshGitRepositoryTestCase test case was quite unstable on a resource constrained environment, the test was dependent on monitoring the server.log for an error message but it appears the git integration may log the error in a separate thread so I believe the process can be terminated before the message is logged.\nAttempting to debug the issue I realised the test case was not properly restoring the default server configuration between test as attempts to add additional logging categories were being overridden.\nFinally we were not logging useful information ourselves, although log and throw can be a bad practice at the moment the uncaught exception only made it's way to System.err - the problem with this was if you are reliant on the server.log the messages would be missing.", "createdAt": "2020-10-05T17:09:37Z", "url": "https://github.com/wildfly/wildfly-core/pull/4352", "merged": true, "mergeCommit": {"oid": "b18a32d467c0839cdd6a58b558d01e72d2be21db"}, "closed": true, "closedAt": "2020-11-10T14:29:14Z", "author": {"login": "darranl"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdPkhpbAH2gAyNDk3OTk1OTA2OmJlNzI2MTNhMzVlZTZlOWQ5YzMzYzIzYTMyNjg1MzZhMTI1NWM1ZDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbJGkvgFqTUyNzE4Mzk1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "be72613a35ee6e9d9c33c23a3268536a1255c5d3", "author": {"user": {"login": "darranl", "name": "Darran Lofthouse"}}, "url": "https://github.com/wildfly/wildfly-core/commit/be72613a35ee6e9d9c33c23a3268536a1255c5d3", "committedDate": "2020-10-05T14:19:26Z", "message": "[WFCORE-5147] Group constructors together before the methods, and reduce excessive visibility."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6136e7e9d11e6fd07a4d7d0934be229fd90eb1cd", "author": {"user": {"login": "darranl", "name": "Darran Lofthouse"}}, "url": "https://github.com/wildfly/wildfly-core/commit/6136e7e9d11e6fd07a4d7d0934be229fd90eb1cd", "committedDate": "2020-10-05T14:19:55Z", "message": "[WFCORE-5147] Add a message ID for messages logged at Level.INFO.\n\nAlso remove DEBUG logging from ServerLogger as these should not be translated."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55f63f8df9332d6390b58d7d220c181e4fbcc235", "author": {"user": {"login": "darranl", "name": "Darran Lofthouse"}}, "url": "https://github.com/wildfly/wildfly-core/commit/55f63f8df9332d6390b58d7d220c181e4fbcc235", "committedDate": "2020-10-05T14:20:09Z", "message": "[WFCORE-5147] If initialising the git repository fails report as an Exception to end boot."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNDEwODg2", "url": "https://github.com/wildfly/wildfly-core/pull/4352#pullrequestreview-512410886", "createdAt": "2020-10-20T07:34:49Z", "commit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzozNDo1MFrOHkuigQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNzo0Njo0M1rOHku-Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3MzI4MQ==", "bodyText": "@darranl, Is this class considered API? can the restriction of the visibility impact user code or just server code?", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508273281", "createdAt": "2020-10-20T07:34:50Z", "author": {"login": "jmesnil"}, "path": "server/src/main/java/org/jboss/as/server/controller/git/ElytronClientCredentialsProvider.java", "diffHunk": "@@ -39,12 +39,12 @@\n  * Currently only login/password is supported.\n  * @author Emmanuel Hugonnet (c) 2018 Red Hat, inc.\n  */\n-public class ElytronClientCredentialsProvider extends CredentialsProvider {\n+class ElytronClientCredentialsProvider extends CredentialsProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3MzM3MA==", "bodyText": "idem", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508273370", "createdAt": "2020-10-20T07:34:59Z", "author": {"login": "jmesnil"}, "path": "server/src/main/java/org/jboss/as/server/controller/git/ElytronClientSshdSessionFactory.java", "diffHunk": "@@ -66,7 +66,7 @@\n  *\n  * @author <a href=\"mailto:aabdelsa@redhat.com\">Ashley Abdel-Sayed</a>\n  */\n-public class ElytronClientSshdSessionFactory extends SshdSessionFactory {\n+class ElytronClientSshdSessionFactory extends SshdSessionFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3NDE4Mg==", "bodyText": "would it make sense to mention the path to the  cloned Git repository in that INFO log?", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508274182", "createdAt": "2020-10-20T07:36:26Z", "author": {"login": "jmesnil"}, "path": "server/src/main/java/org/jboss/as/server/logging/ServerLogger.java", "diffHunk": "@@ -1345,6 +1345,17 @@\n     @Message(id = 277, value = \"Failed to load SSH Credentials %s\")\n     RuntimeException failedToLoadSSHCredentials(@Cause Throwable cause, String message);\n \n+    @LogMessage(level = INFO)\n+    @Message(id = 278, value = \"The configuration history is managed through Git\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3ODEzNQ==", "bodyText": "It's suspicious when I see a @Message without an ID. Most of the time, I consider that this should be a DEBUG log and in that case, I don't see which benefit we have to use a @message for it instead of a plain debugf() call.\nIn that case, it turns out that this is a String used in a Git commit:\ngit.commit().setSign(gitConfig.isSign()).setMessage(ServerLogger.ROOT_LOGGER.repositoryInitialized()).call();\n\nI'm not sure what we want to do here...\nDo we need to i18nize this commit message?\nShould it be a stable message with a Message ID that can be tracked in a knowledge base?", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508278135", "createdAt": "2020-10-20T07:42:58Z", "author": {"login": "jmesnil"}, "path": "server/src/main/java/org/jboss/as/server/logging/ServerLogger.java", "diffHunk": "@@ -1354,23 +1365,10 @@\n     @Message(id = Message.NONE, value = \"The attribute '%s' has changed from '%s' to '%s'\")\n     String jmxAttributeChange(String name, String oldState, String stateString);\n \n-    @LogMessage(level = INFO)\n-    @Message(id = Message.NONE, value = \"The configuration history is managed through Git\")\n-    void usingGit();\n-\n     @Message(id = Message.NONE, value = \"Repository initialized\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3ODI3NA==", "bodyText": "@darranl that's not directly related to your PR though :)", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508278274", "createdAt": "2020-10-20T07:43:16Z", "author": {"login": "jmesnil"}, "path": "server/src/main/java/org/jboss/as/server/logging/ServerLogger.java", "diffHunk": "@@ -1354,23 +1365,10 @@\n     @Message(id = Message.NONE, value = \"The attribute '%s' has changed from '%s' to '%s'\")\n     String jmxAttributeChange(String name, String oldState, String stateString);\n \n-    @LogMessage(level = INFO)\n-    @Message(id = Message.NONE, value = \"The configuration history is managed through Git\")\n-    void usingGit();\n-\n     @Message(id = Message.NONE, value = \"Repository initialized\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3ODEzNQ=="}, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI3ODgwMQ==", "bodyText": "if that's a constant, we should rename it to JBOSS_SERVER_BASE_DIR", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508278801", "createdAt": "2020-10-20T07:44:04Z", "author": {"login": "jmesnil"}, "path": "testsuite/manualmode/src/test/java/org/jboss/as/test/manualmode/management/persistence/AbstractGitRepositoryTestCase.java", "diffHunk": "@@ -58,7 +58,7 @@\n  */\n public class AbstractGitRepositoryTestCase {\n \n-    private final Path jbossServerBaseDir = new File(System.getProperty(\"jboss.home\", System.getenv(\"JBOSS_HOME\"))).toPath().resolve(\"standalone\");\n+    private static final Path jbossServerBaseDir = new File(System.getProperty(\"jboss.home\", System.getenv(\"JBOSS_HOME\"))).toPath().resolve(\"standalone\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI4MDQxNA==", "bodyText": "should we also restore the configuration in the @AfterClass to avoid keeping the config from the last test for the rest of the test suite?", "url": "https://github.com/wildfly/wildfly-core/pull/4352#discussion_r508280414", "createdAt": "2020-10-20T07:46:43Z", "author": {"login": "jmesnil"}, "path": "testsuite/manualmode/src/test/java/org/jboss/as/test/manualmode/management/persistence/RemoteSshGitRepositoryTestCase.java", "diffHunk": "@@ -171,10 +174,19 @@ public static void setUp() throws Exception {\n \n     }\n \n+    static void backupConfiguration() throws IOException {\n+        Path backUpRoot = Files.createTempDirectory(\"BackUpConfigurationFiles\").resolve(\"configuration\");\n+        Files.createDirectories(backUpRoot);\n+        PathUtil.copyRecursively(getJbossServerBaseDir().resolve(\"configuration\"), backUpRoot, true);\n+\n+        RemoteSshGitRepositoryTestCase.backupRoot = backUpRoot;\n+    }\n+\n     @AfterClass\n     public static void afterClass() throws IOException {\n         Security.removeProvider(CREDENTIAL_STORE_PROVIDER.getName());\n         FileUtils.delete(CS_PUBKEY.toFile(), FileUtils.RECURSIVE | FileUtils.RETRY);\n+        PathUtil.deleteRecursively(backupRoot);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9acb6962cf0782310df8c197502a7186a130d50", "author": {"user": {"login": "darranl", "name": "Darran Lofthouse"}}, "url": "https://github.com/wildfly/wildfly-core/commit/e9acb6962cf0782310df8c197502a7186a130d50", "committedDate": "2020-10-20T08:24:36Z", "message": "[WFCORE-5147] Log and throw is generally a bad practice, however these errors can be triggered so early in the boot process they are sent to the error output stream meaning the information can not be retrieved from a server log."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2c86e2bf2076bbd5e25aa4f01c8e44a24e865624", "author": {"user": {"login": "darranl", "name": "Darran Lofthouse"}}, "url": "https://github.com/wildfly/wildfly-core/commit/2c86e2bf2076bbd5e25aa4f01c8e44a24e865624", "committedDate": "2020-10-05T16:57:52Z", "message": "Temp"}, "afterCommit": {"oid": "e9acb6962cf0782310df8c197502a7186a130d50", "author": {"user": {"login": "darranl", "name": "Darran Lofthouse"}}, "url": "https://github.com/wildfly/wildfly-core/commit/e9acb6962cf0782310df8c197502a7186a130d50", "committedDate": "2020-10-20T08:24:36Z", "message": "[WFCORE-5147] Log and throw is generally a bad practice, however these errors can be triggered so early in the boot process they are sent to the error output stream meaning the information can not be retrieved from a server log."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTgzOTU1", "url": "https://github.com/wildfly/wildfly-core/pull/4352#pullrequestreview-527183955", "createdAt": "2020-11-10T13:09:31Z", "commit": {"oid": "e9acb6962cf0782310df8c197502a7186a130d50"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3382, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}