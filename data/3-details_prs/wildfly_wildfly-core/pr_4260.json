{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MTE3ODI2", "number": 4260, "title": "WFCORE-5037 - Handle maps of complex objects in JMX Facade", "bodyText": "https://issues.redhat.com/browse/WFCORE-5037", "createdAt": "2020-07-08T09:35:05Z", "url": "https://github.com/wildfly/wildfly-core/pull/4260", "merged": true, "mergeCommit": {"oid": "02b9eea8578e8d83addc15cc7e981c088049a977"}, "closed": true, "closedAt": "2020-07-29T12:43:24Z", "author": {"login": "kabir"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2uo3sAFqTQ1MTQ2MjM5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5AlyDAFqTQ1NTcxNjA1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxNDYyMzk4", "url": "https://github.com/wildfly/wildfly-core/pull/4260#pullrequestreview-451462398", "createdAt": "2020-07-20T09:54:49Z", "commit": {"oid": "c679d681161978a42ca43e57bfa2dd26e8b8fd41"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOTo1NDo0OVrOG0DkdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQwOTo1NDo0OVrOG0DkdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzIzNzYyMA==", "bodyText": "As we discussed during the meeting, I don't think that method belong to the AttributeDefinition API. You mentioned that we can achieve the same by doing an instanceof check for the ObjectMapAttributeDefinition in https://github.com/wildfly/wildfly-core/pull/4260/files#diff-738bea9b01b7d11ea0c7968b4390eeccR299.", "url": "https://github.com/wildfly/wildfly-core/pull/4260#discussion_r457237620", "createdAt": "2020-07-20T09:54:49Z", "author": {"login": "jmesnil"}, "path": "controller/src/main/java/org/jboss/as/controller/AttributeDefinition.java", "diffHunk": "@@ -1295,6 +1295,14 @@ public ModelNode getUndefinedMetricValue() {\n         return undefinedMetricValue;\n     }\n \n+    /**\n+     * @deprecated internal use only\n+     */\n+    @Deprecated\n+    public boolean isNestedMap() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c679d681161978a42ca43e57bfa2dd26e8b8fd41"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9221edcf49a493749f5ddb94b9b21f3ad83db63b", "author": {"user": {"login": "kabir", "name": "Kabir Khan"}}, "url": "https://github.com/wildfly/wildfly-core/commit/9221edcf49a493749f5ddb94b9b21f3ad83db63b", "committedDate": "2020-07-27T08:30:51Z", "message": "[WFCORE-5037] Pass in the AttributeDefinition where possible to the JMX TypeConverters\n\nNote that for the main work we still use the descriptor. This fix is\nmainly to make it possible to check which kind of Object with complex\nvalues we have.\n\nObjectTypeAttributeDefinition and ObjectMapAttributeDefinition both\nreturn the same r-r-d output for attributes but are different. The first\none has defined key/value pairs where the keys are all known. e.g. the\nfollowing would be an allowed value:\n{\"my-attr\" => {\"one\" => 100L}}\n\nObjectMapAttributeDefinition on the other hand is a map of unknown keys\ncontaining those entries, e.g. the following would be an allowed value:\n{\"my-attr\" => {\"a\" => {\"one\" => 100L}}}\n\nIn both cases the r-r-d output for the attribute would look like:\n\n    \"description\" => \"description\",\n    \"attributes\" => {\"my-attr\" => {\n        \"type\" => OBJECT,\n        \"description\" => \"map-of-maps\",\n        \"expressions-allowed\" => false,\n        \"required\" => false,\n        \"nillable\" => true,\n        \"value-type\" => {\"one\" => {\n            \"type\" => LONG,\n            \"description\" => \"map-of-maps.one\",\n            \"expressions-allowed\" => false,\n            \"required\" => true,\n            \"nillable\" => false\n        }},\n        \"access-type\" => \"metric\",\n        \"storage\" => \"runtime\"\n    }},\n    ....\n\nSo there is no way for JMX yet to know which of the two cases we have.\nPassing in the AttributeDefinition is an attempt at figuring that out."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "710e9a9f72ef2ce950d03a32a9f6e7a7026e0958", "author": {"user": {"login": "kabir", "name": "Kabir Khan"}}, "url": "https://github.com/wildfly/wildfly-core/commit/710e9a9f72ef2ce950d03a32a9f6e7a7026e0958", "committedDate": "2020-07-27T08:33:48Z", "message": "[WFCORE-5037] Tighten access a bit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c615ce0002648399e711299c9aee406bd6ca3bce", "author": {"user": {"login": "kabir", "name": "Kabir Khan"}}, "url": "https://github.com/wildfly/wildfly-core/commit/c615ce0002648399e711299c9aee406bd6ca3bce", "committedDate": "2020-07-27T08:34:59Z", "message": "[WFCORE-5037] Get JMX conversion working for maps of complex types"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c679d681161978a42ca43e57bfa2dd26e8b8fd41", "author": {"user": {"login": "kabir", "name": "Kabir Khan"}}, "url": "https://github.com/wildfly/wildfly-core/commit/c679d681161978a42ca43e57bfa2dd26e8b8fd41", "committedDate": "2020-07-08T09:34:02Z", "message": "[WFCORE-5037] Get JMX conversion working for maps of complex types"}, "afterCommit": {"oid": "c615ce0002648399e711299c9aee406bd6ca3bce", "author": {"user": {"login": "kabir", "name": "Kabir Khan"}}, "url": "https://github.com/wildfly/wildfly-core/commit/c615ce0002648399e711299c9aee406bd6ca3bce", "committedDate": "2020-07-27T08:34:59Z", "message": "[WFCORE-5037] Get JMX conversion working for maps of complex types"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NzE2MDUx", "url": "https://github.com/wildfly/wildfly-core/pull/4260#pullrequestreview-455716051", "createdAt": "2020-07-27T12:01:02Z", "commit": {"oid": "c615ce0002648399e711299c9aee406bd6ca3bce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3433, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}