{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NzQxNTI2", "number": 4175, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjozOTo1NVrOD0UxQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjo0MjoxNVrOD0U0yQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTkyODMyOnYy", "diffSide": "RIGHT", "path": "jmx/src/test/java/org/jboss/as/jmx/PluggableMBeanServerTestCase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjozOTo1NVrOGJNrAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNjoyMjo1OVrOGJlVeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMxNDM3MA==", "bodyText": "Minor: can you call this \"testNotificationTccl\"?  Or something like that.", "url": "https://github.com/wildfly/wildfly-core/pull/4175#discussion_r412314370", "createdAt": "2020-04-21T16:39:55Z", "author": {"login": "bstansberry"}, "path": "jmx/src/test/java/org/jboss/as/jmx/PluggableMBeanServerTestCase.java", "diffHunk": "@@ -105,6 +112,33 @@ public void testReservedDomainMBeanRegistrationFails() throws Exception {\n         reservedDomainTest(\"jboss.as.expr:bean=test-null\", NAME);\n     }\n \n+    @Test\n+    public void testTccl() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb1ecbc6ea7a2922b92f85dd6291d90edce15d9"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcwMjA3NA==", "bodyText": "@bstansberry  I've changed it to testNotificationTccl", "url": "https://github.com/wildfly/wildfly-core/pull/4175#discussion_r412702074", "createdAt": "2020-04-22T06:22:59Z", "author": {"login": "moulalis"}, "path": "jmx/src/test/java/org/jboss/as/jmx/PluggableMBeanServerTestCase.java", "diffHunk": "@@ -105,6 +112,33 @@ public void testReservedDomainMBeanRegistrationFails() throws Exception {\n         reservedDomainTest(\"jboss.as.expr:bean=test-null\", NAME);\n     }\n \n+    @Test\n+    public void testTccl() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMxNDM3MA=="}, "originalCommit": {"oid": "bcb1ecbc6ea7a2922b92f85dd6291d90edce15d9"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MTkzNzM3OnYy", "diffSide": "RIGHT", "path": "jmx/src/test/java/org/jboss/as/jmx/PluggableMBeanServerTestCase.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNjo0MjoxNVrOGJNwwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMjowNToxOVrOGKTTsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMxNTg0MA==", "bodyText": "If you change the return type of this method to ClassLoader, then you can add this:\nreturn WildFlySecurityManager.getCurrentContextClassLoaderPrivileged();\n\nAnd then the test can validate that it returns newOutTccl. That both serves as a sanity check that newOutTccl was in place before the notification handling, and confirms that it got restored.", "url": "https://github.com/wildfly/wildfly-core/pull/4175#discussion_r412315840", "createdAt": "2020-04-21T16:42:15Z", "author": {"login": "bstansberry"}, "path": "jmx/src/test/java/org/jboss/as/jmx/PluggableMBeanServerTestCase.java", "diffHunk": "@@ -165,6 +199,10 @@ public void preDeregister() throws Exception {\n         public void postDeregister() {\n         }\n \n+        @Override\n+        public void proceed() {\n+            sendNotification(new Notification(\"testtccl\", 1, 1));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcb1ecbc6ea7a2922b92f85dd6291d90edce15d9"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcwMDQ3OA==", "bodyText": "@bstansberry  I've Renamed it to testNotificationTccl. Initailly I did the same as returntype ClassLoader, But I thought this is not invoking notification was just a test,  so I wrote it inside notification, In that way it actually invoked notification and test the same. Is that okay to have this or still you want me to change?", "url": "https://github.com/wildfly/wildfly-core/pull/4175#discussion_r412700478", "createdAt": "2020-04-22T06:19:36Z", "author": {"login": "moulalis"}, "path": "jmx/src/test/java/org/jboss/as/jmx/PluggableMBeanServerTestCase.java", "diffHunk": "@@ -165,6 +199,10 @@ public void preDeregister() throws Exception {\n         public void postDeregister() {\n         }\n \n+        @Override\n+        public void proceed() {\n+            sendNotification(new Notification(\"testtccl\", 1, 1));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMxNTg0MA=="}, "originalCommit": {"oid": "bcb1ecbc6ea7a2922b92f85dd6291d90edce15d9"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjcwMjQ1Nw==", "bodyText": "@bstansberry  Initailly I did the same as returntype ClassLoader, But I thought this is not invoking notification was just a test, so I wrote it inside notification, In that way it actually invoked notification and test the same. Is that okay to have this or still you want me to change?", "url": "https://github.com/wildfly/wildfly-core/pull/4175#discussion_r412702457", "createdAt": "2020-04-22T06:23:48Z", "author": {"login": "moulalis"}, "path": "jmx/src/test/java/org/jboss/as/jmx/PluggableMBeanServerTestCase.java", "diffHunk": "@@ -165,6 +199,10 @@ public void preDeregister() throws Exception {\n         public void postDeregister() {\n         }\n \n+        @Override\n+        public void proceed() {\n+            sendNotification(new Notification(\"testtccl\", 1, 1));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMxNTg0MA=="}, "originalCommit": {"oid": "bcb1ecbc6ea7a2922b92f85dd6291d90edce15d9"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQ1NTI4MA==", "bodyText": "What your NotificationListener is doing is fine -- it checks that the expected TCCL is in place when it is invoked. I was suggesting an additional check that the expected TCCL (newOutTccl) is in place after the notification call is done.\nBut this is ok as is.", "url": "https://github.com/wildfly/wildfly-core/pull/4175#discussion_r413455280", "createdAt": "2020-04-23T02:05:19Z", "author": {"login": "bstansberry"}, "path": "jmx/src/test/java/org/jboss/as/jmx/PluggableMBeanServerTestCase.java", "diffHunk": "@@ -165,6 +199,10 @@ public void preDeregister() throws Exception {\n         public void postDeregister() {\n         }\n \n+        @Override\n+        public void proceed() {\n+            sendNotification(new Notification(\"testtccl\", 1, 1));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMxNTg0MA=="}, "originalCommit": {"oid": "bcb1ecbc6ea7a2922b92f85dd6291d90edce15d9"}, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3867, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}