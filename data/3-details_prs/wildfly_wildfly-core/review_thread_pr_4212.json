{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNzcxNDQ2", "number": 4212, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTozMzowMVrOD-RmXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTozMzowMVrOD-RmXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjI2NjU1OnYy", "diffSide": "RIGHT", "path": "testsuite/test-runner/src/main/java/org/wildfly/core/testrunner/Server.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNTozMzowMVrOGYRqHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjoxNjo0OFrOGabiuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEwODMxOA==", "bodyText": "I'm fine with doubling these values.\nI also wonder whether we could introduce a mechanism similar to org.jboss.as.test.shared.TimeoutUtil to influence the timeouts with the ts.timeout.factor system property?", "url": "https://github.com/wildfly/wildfly-core/pull/4212#discussion_r428108318", "createdAt": "2020-05-20T15:33:01Z", "author": {"login": "jmesnil"}, "path": "testsuite/test-runner/src/main/java/org/wildfly/core/testrunner/Server.java", "diffHunk": "@@ -66,8 +66,8 @@\n     private final String managementProtocol = System.getProperty(\"management.protocol\", \"remote+http\");\n \n     // timeouts\n-    private final int startupTimeout = Integer.getInteger(\"server.startup.timeout\", 30);\n-    private final int stopTimeout = Integer.getInteger(\"server.stop.timeout\", 10);\n+    private final int startupTimeout = Integer.getInteger(\"server.startup.timeout\", 60);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e10fcd781daba1767814baeee3a39dac63b0628a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODc1Njc2Nw==", "bodyText": "Makes sense. We'd need to port TimeoutUtil though as I don't think we want to add the dep on testsuite-shared.  That's no big deal though.", "url": "https://github.com/wildfly/wildfly-core/pull/4212#discussion_r428756767", "createdAt": "2020-05-21T16:09:55Z", "author": {"login": "bstansberry"}, "path": "testsuite/test-runner/src/main/java/org/wildfly/core/testrunner/Server.java", "diffHunk": "@@ -66,8 +66,8 @@\n     private final String managementProtocol = System.getProperty(\"management.protocol\", \"remote+http\");\n \n     // timeouts\n-    private final int startupTimeout = Integer.getInteger(\"server.startup.timeout\", 30);\n-    private final int stopTimeout = Integer.getInteger(\"server.stop.timeout\", 10);\n+    private final int startupTimeout = Integer.getInteger(\"server.startup.timeout\", 60);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEwODMxOA=="}, "originalCommit": {"oid": "e10fcd781daba1767814baeee3a39dac63b0628a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgyNjUwMw==", "bodyText": "I updated the commit with the relevant code added directly to the Server class.", "url": "https://github.com/wildfly/wildfly-core/pull/4212#discussion_r428826503", "createdAt": "2020-05-21T18:13:18Z", "author": {"login": "bstansberry"}, "path": "testsuite/test-runner/src/main/java/org/wildfly/core/testrunner/Server.java", "diffHunk": "@@ -66,8 +66,8 @@\n     private final String managementProtocol = System.getProperty(\"management.protocol\", \"remote+http\");\n \n     // timeouts\n-    private final int startupTimeout = Integer.getInteger(\"server.startup.timeout\", 30);\n-    private final int stopTimeout = Integer.getInteger(\"server.stop.timeout\", 10);\n+    private final int startupTimeout = Integer.getInteger(\"server.startup.timeout\", 60);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEwODMxOA=="}, "originalCommit": {"oid": "e10fcd781daba1767814baeee3a39dac63b0628a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODgzNDE5NA==", "bodyText": "I'm pretty sure the TimeoutUtil is already in core right? https://github.com/wildfly/wildfly-core/blob/master/testsuite/shared/src/main/java/org/jboss/as/test/shared/TimeoutUtil.java", "url": "https://github.com/wildfly/wildfly-core/pull/4212#discussion_r428834194", "createdAt": "2020-05-21T18:27:19Z", "author": {"login": "jamezp"}, "path": "testsuite/test-runner/src/main/java/org/wildfly/core/testrunner/Server.java", "diffHunk": "@@ -66,8 +66,8 @@\n     private final String managementProtocol = System.getProperty(\"management.protocol\", \"remote+http\");\n \n     // timeouts\n-    private final int startupTimeout = Integer.getInteger(\"server.startup.timeout\", 30);\n-    private final int stopTimeout = Integer.getInteger(\"server.stop.timeout\", 10);\n+    private final int startupTimeout = Integer.getInteger(\"server.startup.timeout\", 60);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEwODMxOA=="}, "originalCommit": {"oid": "e10fcd781daba1767814baeee3a39dac63b0628a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM2NzQxNg==", "bodyText": "That's correct, it's in core but for classes shared by the test suite. afaict, the testrunner does not depend on these shared classes.", "url": "https://github.com/wildfly/wildfly-core/pull/4212#discussion_r430367416", "createdAt": "2020-05-26T12:16:48Z", "author": {"login": "jmesnil"}, "path": "testsuite/test-runner/src/main/java/org/wildfly/core/testrunner/Server.java", "diffHunk": "@@ -66,8 +66,8 @@\n     private final String managementProtocol = System.getProperty(\"management.protocol\", \"remote+http\");\n \n     // timeouts\n-    private final int startupTimeout = Integer.getInteger(\"server.startup.timeout\", 30);\n-    private final int stopTimeout = Integer.getInteger(\"server.stop.timeout\", 10);\n+    private final int startupTimeout = Integer.getInteger(\"server.startup.timeout\", 60);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODEwODMxOA=="}, "originalCommit": {"oid": "e10fcd781daba1767814baeee3a39dac63b0628a"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3807, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}