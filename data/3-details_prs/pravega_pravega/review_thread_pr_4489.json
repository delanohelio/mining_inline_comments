{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNzkzNTYz", "number": 4489, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMjoyMTowN1rODYAc0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTo0MDowOFrODYN5Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NDk5NzkzOnYy", "diffSide": "RIGHT", "path": "segmentstore/server/src/main/java/io/pravega/segmentstore/server/SegmentStoreMetrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMjoyMTowN1rOFdntzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQyMjoyMTowN1rOFdntzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjYwMzcyNw==", "bodyText": "Nit: missing end dot.", "url": "https://github.com/pravega/pravega/pull/4489#discussion_r366603727", "createdAt": "2020-01-14T22:21:07Z", "author": {"login": "RaulGracia"}, "path": "segmentstore/server/src/main/java/io/pravega/segmentstore/server/SegmentStoreMetrics.java", "diffHunk": "@@ -325,6 +326,75 @@ public void close() {\n \n     //endregion\n \n+    //region StorageWriter\n+\n+    /**\n+     * StorageWriter metrics.\n+     */\n+    public final static class StorageWriter implements AutoCloseable {\n+        /**\n+         * Time elapsed for flushing all processors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04df9c5122423bfee5741cda3299af8b6e35acd"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NzIwMDM1OnYy", "diffSide": "RIGHT", "path": "shared/metrics/src/main/java/io/pravega/shared/MetricsNames.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNTo0MDowOFrOFd8ocQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxNjo1NzoxMVrOFd_Z-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0NjQxNw==", "bodyText": "Is this a Histogram as the comment specifies?", "url": "https://github.com/pravega/pravega/pull/4489#discussion_r366946417", "createdAt": "2020-01-15T15:40:08Z", "author": {"login": "RaulGracia"}, "path": "shared/metrics/src/main/java/io/pravega/shared/MetricsNames.java", "diffHunk": "@@ -116,6 +116,14 @@\n     public static final String BK_WRITE_QUEUE_FILL_RATE = PREFIX + \"segmentstore.bookkeeper.write_queue_fill\";       // Per-container Histogram\n     public static final String BK_LEDGER_COUNT = PREFIX + \"segmentstore.bookkeeper.ledger_count\";                    // Per-container Gauge\n \n+    // StorageWriter stats\n+    public static final String STORAGE_WRITER_FLUSH_ELAPSED = PREFIX + \"segmentstore.storagewriter.flush_elapsed_ms\";         // Time to flush all processors. Per-container Histogram.\n+    public static final String STORAGE_WRITER_ITERATION_ELAPSED = PREFIX + \"segmentstore.storagewriter.iteration_elapsed_ms\"; // Total Iteration Duration. Per-container Histogram\n+    public static final String STORAGE_WRITER_READ_COUNT = PREFIX + \"segmentstore.storagewriter.read_count\";                  // Items read from DurableLog. Per-container Histogram.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04df9c5122423bfee5741cda3299af8b6e35acd"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk5MTg2Ng==", "bodyText": "No, it's a counter. Fixed.", "url": "https://github.com/pravega/pravega/pull/4489#discussion_r366991866", "createdAt": "2020-01-15T16:57:11Z", "author": {"login": "andreipaduroiu"}, "path": "shared/metrics/src/main/java/io/pravega/shared/MetricsNames.java", "diffHunk": "@@ -116,6 +116,14 @@\n     public static final String BK_WRITE_QUEUE_FILL_RATE = PREFIX + \"segmentstore.bookkeeper.write_queue_fill\";       // Per-container Histogram\n     public static final String BK_LEDGER_COUNT = PREFIX + \"segmentstore.bookkeeper.ledger_count\";                    // Per-container Gauge\n \n+    // StorageWriter stats\n+    public static final String STORAGE_WRITER_FLUSH_ELAPSED = PREFIX + \"segmentstore.storagewriter.flush_elapsed_ms\";         // Time to flush all processors. Per-container Histogram.\n+    public static final String STORAGE_WRITER_ITERATION_ELAPSED = PREFIX + \"segmentstore.storagewriter.iteration_elapsed_ms\"; // Total Iteration Duration. Per-container Histogram\n+    public static final String STORAGE_WRITER_READ_COUNT = PREFIX + \"segmentstore.storagewriter.read_count\";                  // Items read from DurableLog. Per-container Histogram.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njk0NjQxNw=="}, "originalCommit": {"oid": "c04df9c5122423bfee5741cda3299af8b6e35acd"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4389, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}