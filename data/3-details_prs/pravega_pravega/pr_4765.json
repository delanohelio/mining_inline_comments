{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMjQwMDE5", "number": 4765, "title": "Issue 4764: Optimized AppendDecoder to make fewer buffer copies", "bodyText": "Change log description\n\nOptimized AppendDecoder to make fewer buffer copies from Netty to the Segment Store.\nOptimized the ingestion path in the Segment Store to choose the most efficient method of copying data based on the source and target buffer types.\n\nPurpose of the change\nFixes #4764.\nWhat the code does\nAppendDecoder, in conjunction with WireCommands.AppendBlock/AppendBlockEnd/ConditionalAppend/Event/PartialEvent, is responsible for translating between Wire Commands and an Append that can be processed by the Segment Store it's sitting on top of.\nHowever all these classes make numerous buffer allocations and copies for data to get from Netty's network bufs to the Segment Store:\n\nNetty -> AppendBlockEnd -> Append\nNetty -> AppendBlock/AppendBlockEnd -> Append\nNetty -> ConditionalAppend -> Event -> Append\n\nThis PR changes these classes to not execute those copies anymore but rely on ByteBuf slicing and retaining for this:\n\nThe Wire Commands listed above use EnhancedByteBufInputStream to fetch a ByteBuf slice out of Netty's network bufs (direct memory buffers)\nThese are retain-ed and sent out to AppendDecoder\nAppendDecoder stitches them into one or more Append instances which exposes those bufs as a composite ByteBuf. This Append is then passed on to the underlying Segment Store via AppendProcessor`.\n\nAppendProcessor and Segment Store already manage the lifecycle of these buffers by invoking retain/release in StreamSegmentAppendOperation and release in AppendProcessor after the append is complete.\nAdditionally, inside the ingestion pipeline in the Segment Store, the following modifications have been made:\n\nDataFrameOutputStream implements the new BufferViewSink. This allows using direct buffer copies (from Netty via StreamSegmentAppendOperation to the DataFrame that ends up getting sent to BK). Previously we were using the OutputStream.write(...) methods which were less efficient.\n\nHow to verify it\nUnit tests, integration tests and system tests must pass.\nUnit tests for these classes have been updated to check for memory leaks and under-referenced buffers.", "createdAt": "2020-05-01T18:17:02Z", "url": "https://github.com/pravega/pravega/pull/4765", "merged": true, "mergeCommit": {"oid": "e62dc7aaa9f38cc9263ed8e56873123e43c81bd8"}, "closed": true, "closedAt": "2020-05-07T22:10:29Z", "author": {"login": "andreipaduroiu"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdFyEbAH2gAyNDEyMjQwMDE5OjBlZWUxZjNkODJlOTNkNzA0NzFkN2RkMzFiNjg4YTk4YWYzNTMyMTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfDo9HgFqTQwNzgyNzQyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0eee1f3d82e93d70471d7dd31b688a98af353210", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/0eee1f3d82e93d70471d7dd31b688a98af353210", "committedDate": "2020-05-01T18:14:06Z", "message": "Optimized AppendDecoder.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2b2ce97b0a554724b655f01fd92e58c94f0295b", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/b2b2ce97b0a554724b655f01fd92e58c94f0295b", "committedDate": "2020-05-01T18:16:29Z", "message": "Checkstyle\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7693e5c6d0a09da8f2cb3860b5f33eb5c9ffdda9", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/7693e5c6d0a09da8f2cb3860b5f33eb5c9ffdda9", "committedDate": "2020-05-01T19:59:49Z", "message": "Unit tests.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e5dc31dcf21d384d334bc26fc3d02ecc2809829", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/4e5dc31dcf21d384d334bc26fc3d02ecc2809829", "committedDate": "2020-05-01T20:16:48Z", "message": "Javadoc.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6890bca2cab1806aae3e9e858d0eb02383bf4b3c", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/6890bca2cab1806aae3e9e858d0eb02383bf4b3c", "committedDate": "2020-05-01T20:58:32Z", "message": "Code cov.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a767004d1b7be46cc0b9eea4e38b62a378a6717c", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/a767004d1b7be46cc0b9eea4e38b62a378a6717c", "committedDate": "2020-05-01T22:37:12Z", "message": "Code cov.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6adf3d8e2f163a7d25502725b66648d14b6fe90", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/d6adf3d8e2f163a7d25502725b66648d14b6fe90", "committedDate": "2020-05-04T14:33:25Z", "message": "Merge branch 'master' into issue-4764-append-decoder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "081258e578be3b35eb64de775d4c780c4f0581db", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/081258e578be3b35eb64de775d4c780c4f0581db", "committedDate": "2020-05-04T15:09:09Z", "message": "Refactored code.\nRemoved extra copy from ConditionalAppend.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MTA1MDg2", "url": "https://github.com/pravega/pravega/pull/4765#pullrequestreview-405105086", "createdAt": "2020-05-04T15:37:19Z", "commit": {"oid": "081258e578be3b35eb64de775d4c780c4f0581db"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NTg5OTY0", "url": "https://github.com/pravega/pravega/pull/4765#pullrequestreview-405589964", "createdAt": "2020-05-05T08:34:31Z", "commit": {"oid": "081258e578be3b35eb64de775d4c780c4f0581db"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MTY3NDY5", "url": "https://github.com/pravega/pravega/pull/4765#pullrequestreview-406167469", "createdAt": "2020-05-05T21:26:22Z", "commit": {"oid": "081258e578be3b35eb64de775d4c780c4f0581db"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMToyNjoyMlrOGQ8LZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQyMTozMTowMlrOGQ8Ukg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxNjM1Ng==", "bodyText": "See this comment for why this copy was added. We need to test to confirm this will not cause problemms.", "url": "https://github.com/pravega/pravega/pull/4765#discussion_r420416356", "createdAt": "2020-05-05T21:26:22Z", "author": {"login": "tkaitchuck"}, "path": "shared/protocol/src/main/java/io/pravega/shared/protocol/netty/AppendDecoder.java", "diffHunk": "@@ -163,22 +205,15 @@ private ByteBuf getAppendDataBuf(WireCommands.AppendBlockEnd blockEnd, int sizeO\n                 // Work around a bug in netty:\n                 // See https://github.com/netty/netty/issues/5597\n                 if (appendDataBuf.readableBytes() == 0) {\n-                    appendDataBuf.release();\n+                    currentBlock.release();\n                     appendDataBuf = wrappedBuffer(((WireCommands.PartialEvent) cmd).getData(), blockEnd.getData());\n                 } else {\n                     appendDataBuf = wrappedBuffer(appendDataBuf, ((WireCommands.PartialEvent) cmd).getData(), blockEnd.getData());\n                 }\n             }\n         }\n \n-        // Make a copy of the ByteBuf as the readable bytes of the result may be significantly less than the total allocated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081258e578be3b35eb64de775d4c780c4f0581db"}, "originalPosition": 242}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxNzI5Mw==", "bodyText": "I don't see a corresponding retain", "url": "https://github.com/pravega/pravega/pull/4765#discussion_r420417293", "createdAt": "2020-05-05T21:28:17Z", "author": {"login": "tkaitchuck"}, "path": "shared/protocol/src/main/java/io/pravega/shared/protocol/netty/WireCommands.java", "diffHunk": "@@ -582,26 +591,32 @@ public void writeFields(DataOutput out) throws IOException {\n             out.writeLong(requestId);\n         }\n \n-        public static WireCommand readFrom(ByteBufInputStream in, int length) throws IOException {\n+        public static WireCommand readFrom(EnhancedByteBufInputStream in, int length) throws IOException {\n             UUID writerId = new UUID(in.readLong(), in.readLong());\n             int sizeOfHeaderlessAppends = in.readInt();\n             int dataLength = in.readInt();\n-            byte[] data;\n+            ByteBuf data;\n             if (dataLength > 0) {\n-                data = new byte[dataLength];\n-                in.readFully(data);\n+                data = in.readFully(dataLength);\n             } else {\n-                data = new byte[0];\n+                data = EMPTY_BUFFER;\n             }\n             int numEvents = in.readInt();\n             long lastEventNumber = in.readLong();\n             long requestId = in.available() >= Long.BYTES ? in.readLong() : -1L;\n-            return new AppendBlockEnd(writerId, sizeOfHeaderlessAppends, wrappedBuffer(data), numEvents, lastEventNumber, requestId);\n+            return new AppendBlockEnd(writerId, sizeOfHeaderlessAppends, data.retain(), numEvents, lastEventNumber, requestId)\n+                    .requireRelease();\n+        }\n+\n+        @Override\n+        void releaseInternal() {\n+            this.data.release();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081258e578be3b35eb64de775d4c780c4f0581db"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDQxODcwNg==", "bodyText": "Does this number have to be 1 for the test to pass? If so there should be a comment explaining it.", "url": "https://github.com/pravega/pravega/pull/4765#discussion_r420418706", "createdAt": "2020-05-05T21:31:02Z", "author": {"login": "tkaitchuck"}, "path": "shared/protocol/src/test/java/io/pravega/shared/protocol/netty/AppendEncodeDecodeTest.java", "diffHunk": "@@ -219,23 +219,37 @@ public void execute(Runnable runnable) {\n \n         }\n     };\n-\n     @Mock\n     private ChannelHandlerContext ctx;\n     @Mock\n     private Channel ch;\n+    private ByteBuf fakeNetwork;\n+    private BufferReleaseVerifier releaseVerifier;\n+\n+    protected int getThreadPoolSize() {\n+        return 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "081258e578be3b35eb64de775d4c780c4f0581db"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db00a97dfae811d1e975cea0dcbbf2bd7bbf1d8d", "author": {"user": {"login": "RaulGracia", "name": "Ra\u00fal Gracia"}}, "url": "https://github.com/pravega/pravega/commit/db00a97dfae811d1e975cea0dcbbf2bd7bbf1d8d", "committedDate": "2020-05-05T22:02:15Z", "message": "Merge branch 'master' into issue-4764-append-decoder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c79e7d6168d1156b4e5ae87f40ba222da6a9aa5", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/4c79e7d6168d1156b4e5ae87f40ba222da6a9aa5", "committedDate": "2020-05-06T23:45:03Z", "message": "Optimized the ingestion path by using the most efficient method of copying data based on the source of data being ingested.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f73489476c92fa878ea6fac2bf537823eb668886", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/f73489476c92fa878ea6fac2bf537823eb668886", "committedDate": "2020-05-07T14:42:41Z", "message": "Checkstyle\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NTU3MDgx", "url": "https://github.com/pravega/pravega/pull/4765#pullrequestreview-407557081", "createdAt": "2020-05-07T14:56:31Z", "commit": {"oid": "f73489476c92fa878ea6fac2bf537823eb668886"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODI3NDI2", "url": "https://github.com/pravega/pravega/pull/4765#pullrequestreview-407827426", "createdAt": "2020-05-07T20:52:11Z", "commit": {"oid": "f73489476c92fa878ea6fac2bf537823eb668886"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3452, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}