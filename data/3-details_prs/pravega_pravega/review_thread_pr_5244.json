{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NzA1ODkx", "number": 5244, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDozMToyMFrOEsd_Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMjo1MDoxMlrOEufE0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDY0MDkxOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDozMToyMFrOHfutOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQwNDoyMDoyMFrOHimZ0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzMzE0Nw==", "bodyText": "we should be backward compatible here, this line would throw exceptions when trying to read from data from an older client.", "url": "https://github.com/pravega/pravega/pull/5244#discussion_r503033147", "createdAt": "2020-10-12T04:31:20Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "diffHunk": "@@ -246,6 +255,7 @@ private void read00(RevisionDataInput input, CheckpointStateBuilder builder) thr\n             builder.uncheckpointedHosts(input.readMap(stringDeserializer, in -> in.readCollection(stringDeserializer, ArrayList::new)));\n             builder.checkpointPositions(input.readMap(stringDeserializer, in -> in.readMap(segmentDeserializer, longDeserializer)));\n             builder.lastCheckpointPosition(input.readMap(segmentDeserializer, longDeserializer));\n+            builder.lastStreamCutPosition(input.readMap(segmentDeserializer, longDeserializer));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38fc16bb7167c6de2136f0b8a7cf7fc7d48d45dd"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQyMzE1NQ==", "bodyText": "I've added a new revision and made changes to read00 ensure backward compatibility. I've also added a test for the same in SerializationTest.", "url": "https://github.com/pravega/pravega/pull/5244#discussion_r504423155", "createdAt": "2020-10-14T06:07:48Z", "author": {"login": "anirudhkovuru"}, "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "diffHunk": "@@ -246,6 +255,7 @@ private void read00(RevisionDataInput input, CheckpointStateBuilder builder) thr\n             builder.uncheckpointedHosts(input.readMap(stringDeserializer, in -> in.readCollection(stringDeserializer, ArrayList::new)));\n             builder.checkpointPositions(input.readMap(stringDeserializer, in -> in.readMap(segmentDeserializer, longDeserializer)));\n             builder.lastCheckpointPosition(input.readMap(segmentDeserializer, longDeserializer));\n+            builder.lastStreamCutPosition(input.readMap(segmentDeserializer, longDeserializer));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzMzE0Nw=="}, "originalCommit": {"oid": "38fc16bb7167c6de2136f0b8a7cf7fc7d48d45dd"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjA0MjgzMw==", "bodyText": "The field has been removed so there shouldn't be an issue in regards to backward compatibility.", "url": "https://github.com/pravega/pravega/pull/5244#discussion_r506042833", "createdAt": "2020-10-16T04:20:20Z", "author": {"login": "anirudhkovuru"}, "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "diffHunk": "@@ -246,6 +255,7 @@ private void read00(RevisionDataInput input, CheckpointStateBuilder builder) thr\n             builder.uncheckpointedHosts(input.readMap(stringDeserializer, in -> in.readCollection(stringDeserializer, ArrayList::new)));\n             builder.checkpointPositions(input.readMap(stringDeserializer, in -> in.readMap(segmentDeserializer, longDeserializer)));\n             builder.lastCheckpointPosition(input.readMap(segmentDeserializer, longDeserializer));\n+            builder.lastStreamCutPosition(input.readMap(segmentDeserializer, longDeserializer));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzMzE0Nw=="}, "originalCommit": {"oid": "38fc16bb7167c6de2136f0b8a7cf7fc7d48d45dd"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MDY0MjU2OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwNDozMjoyMVrOHfuuKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMTo0MTowOVrOHi3x4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzMzM4Ng==", "bodyText": "Please add tests to verify this change...", "url": "https://github.com/pravega/pravega/pull/5244#discussion_r503033386", "createdAt": "2020-10-12T04:32:21Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "diffHunk": "@@ -256,6 +266,7 @@ private void write00(CheckpointState object, RevisionDataOutput output) throws I\n             output.writeMap(object.uncheckpointedHosts, stringSerializer, (out, hosts) -> out.writeCollection(hosts, stringSerializer));\n             output.writeMap(object.checkpointPositions, stringSerializer, (out, map) -> out.writeMap(map, segmentSerializer, longSerializer));\n             output.writeMap(object.lastCheckpointPosition, segmentSerializer, longSerializer);\n+            output.writeMap(object.lastStreamCutPosition, segmentSerializer, longSerializer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38fc16bb7167c6de2136f0b8a7cf7fc7d48d45dd"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk1Njk5Ng==", "bodyText": "Please add UTs and integration tests for the new code...", "url": "https://github.com/pravega/pravega/pull/5244#discussion_r503956996", "createdAt": "2020-10-13T13:35:53Z", "author": {"login": "pbelgundi"}, "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "diffHunk": "@@ -256,6 +266,7 @@ private void write00(CheckpointState object, RevisionDataOutput output) throws I\n             output.writeMap(object.uncheckpointedHosts, stringSerializer, (out, hosts) -> out.writeCollection(hosts, stringSerializer));\n             output.writeMap(object.checkpointPositions, stringSerializer, (out, map) -> out.writeMap(map, segmentSerializer, longSerializer));\n             output.writeMap(object.lastCheckpointPosition, segmentSerializer, longSerializer);\n+            output.writeMap(object.lastStreamCutPosition, segmentSerializer, longSerializer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzMzM4Ng=="}, "originalCommit": {"oid": "38fc16bb7167c6de2136f0b8a7cf7fc7d48d45dd"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjMyNzUyMA==", "bodyText": "Added two tests for the new code. Please have a look", "url": "https://github.com/pravega/pravega/pull/5244#discussion_r506327520", "createdAt": "2020-10-16T11:41:09Z", "author": {"login": "anirudhkovuru"}, "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "diffHunk": "@@ -256,6 +266,7 @@ private void write00(CheckpointState object, RevisionDataOutput output) throws I\n             output.writeMap(object.uncheckpointedHosts, stringSerializer, (out, hosts) -> out.writeCollection(hosts, stringSerializer));\n             output.writeMap(object.checkpointPositions, stringSerializer, (out, map) -> out.writeMap(map, segmentSerializer, longSerializer));\n             output.writeMap(object.lastCheckpointPosition, segmentSerializer, longSerializer);\n+            output.writeMap(object.lastStreamCutPosition, segmentSerializer, longSerializer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzAzMzM4Ng=="}, "originalCommit": {"oid": "38fc16bb7167c6de2136f0b8a7cf7fc7d48d45dd"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzgxMDc4OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDozNTo1OVrOHgMaJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMjoyNToyM1rOHi51BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxOTc4MA==", "bodyText": "This is not being used anywhere.", "url": "https://github.com/pravega/pravega/pull/5244#discussion_r503519780", "createdAt": "2020-10-12T20:35:59Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "diffHunk": "@@ -64,23 +64,26 @@\n      */\n     private final Map<String, Map<Segment, Long>> checkpointPositions;\n \n+    private Map<Segment, Long> lastStreamCutPosition;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38fc16bb7167c6de2136f0b8a7cf7fc7d48d45dd"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzY5ODE3Mw==", "bodyText": "This field will store the positions of the last stream-cut/silent checkpoint so that it does not interfere with lastCheckpointPosition where the positions of the actual last checkpoint will be stored. So, instead of having one field store the value of both which was the case before, we have two different fields lastStreamCutPosition and lastCheckpointPosition.", "url": "https://github.com/pravega/pravega/pull/5244#discussion_r503698173", "createdAt": "2020-10-13T06:34:24Z", "author": {"login": "anirudhkovuru"}, "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "diffHunk": "@@ -64,23 +64,26 @@\n      */\n     private final Map<String, Map<Segment, Long>> checkpointPositions;\n \n+    private Map<Segment, Long> lastStreamCutPosition;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxOTc4MA=="}, "originalCommit": {"oid": "38fc16bb7167c6de2136f0b8a7cf7fc7d48d45dd"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzk1NjUzNg==", "bodyText": "Another way of saying what Tom has been alluding to, is where are we really using \"lastStreamCutPosition\" ?\nWhat purpose does it serve other than not persisting StreamCut data inside lastCheckpointPosition?\nThe generateStreamCut() API in ReaderGroup, still seems to be pulling positions from some CheckpointState objects:\n\n  \n    \n      pravega/client/src/main/java/io/pravega/client/stream/impl/ReaderGroupState.java\n    \n    \n         Line 276\n      in\n      5410d55\n    \n    \n    \n    \n\n        \n          \n           final Optional<Map<Segment, Long>> positionMap = Optional.ofNullable(checkpointState.getPositionsForCompletedCheckpoint(checkpointId)); \n        \n    \n  \n\n\nSo instead of adding this new variable, we could just skip persisting positions into lastCheckpointedPosition, if the checkpoint is a silent one......however, if a new checkpoint is created before generateStreamCut() returns, it could clear fields in checkpoint state causing us to loose those StreamCut positions. So we need to think through if & how we'd want to use lastStreamCutPosition", "url": "https://github.com/pravega/pravega/pull/5244#discussion_r503956536", "createdAt": "2020-10-13T13:35:18Z", "author": {"login": "pbelgundi"}, "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "diffHunk": "@@ -64,23 +64,26 @@\n      */\n     private final Map<String, Map<Segment, Long>> checkpointPositions;\n \n+    private Map<Segment, Long> lastStreamCutPosition;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxOTc4MA=="}, "originalCommit": {"oid": "38fc16bb7167c6de2136f0b8a7cf7fc7d48d45dd"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM2MTA5Mw==", "bodyText": "I've removed the field and added two tests to verify the change. In the case of stream-cuts (silent checkpoints), the lastCheckpointPosition is not updated. It only stores the value of the last checkpointed position if it is a true checkpoint.", "url": "https://github.com/pravega/pravega/pull/5244#discussion_r506361093", "createdAt": "2020-10-16T12:25:23Z", "author": {"login": "anirudhkovuru"}, "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "diffHunk": "@@ -64,23 +64,26 @@\n      */\n     private final Map<String, Map<Segment, Long>> checkpointPositions;\n \n+    private Map<Segment, Long> lastStreamCutPosition;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxOTc4MA=="}, "originalCommit": {"oid": "38fc16bb7167c6de2136f0b8a7cf7fc7d48d45dd"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MTc5MDkxOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMjo1MDoxMlrOHi67WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxMjo1MDoxMlrOHi67WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjM3OTA5Ng==", "bodyText": "nit: remove unnecessary newline addition", "url": "https://github.com/pravega/pravega/pull/5244#discussion_r506379096", "createdAt": "2020-10-16T12:50:12Z", "author": {"login": "pbelgundi"}, "path": "client/src/main/java/io/pravega/client/stream/impl/CheckpointState.java", "diffHunk": "@@ -138,8 +138,12 @@ void readerCheckpointed(String checkpointId, String readerName, Map<Segment, Lon\n             positions.putAll(position);\n             if (readers.isEmpty()) {\n                 uncheckpointedHosts.remove(checkpointId);\n-                //checkpoint operation completed for all readers, update the last checkpoint position.\n-                lastCheckpointPosition = checkpointPositions.get(checkpointId);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c40772363a2c066a6d7b8890b3d79c359d0c9586"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4734, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}