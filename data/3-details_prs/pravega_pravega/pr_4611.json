{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MzY5Nzk5", "number": 4611, "title": "Issue 4610: (SegmentStore) Read Index data corruption during concurrent segment merge and cache eviction.", "bodyText": "Change log description\nFixed a bug where a concurrent segment merge and cache eviction could corrupt the Read Index.\nPurpose of the change\nFixes #4610.\nWhat the code does\nIn the Read Index, Segments are merged into each other in a two-step process. Step 1 (BeginMerge) is performed when the request is received externally and involves adding a Redirect placeholder in the index for the merged byte range. Step 2 (CompleteMerge) is performed when the merge is performed in Tier 2 and involves atomically removing the Redirect placeholder and copying over the entire Read Index of the source segment.\nWith the current implementation, Step 2 has a short period of time where, if a Cache Manager eviction executes, it can effectively delete the data from the cache. That is because the source index entries were copied over but they still remained in the source index. If the Cache Manager decided it's time to evict data, those old entries were eligible for eviction since the segment has just been merged. If this does go through, the newly copied entries will now point to invalid Cache addresses, which can have a number of bad side effects:\n\nA subsequent append will fail because it tries to append to a non-allocated block\nA subsequent read will fail because there's no data to read from the cache.\nThe cache blocks could have been reallocated to other entries, so:\n\nA subsequent append will fail because the append condition (last block length) doesn't match what's in the cache.\nA subsequent read will read data belonging to completely unrelated segments and/or events\nA subsequent cache eviction could deallocate blocks that are used by other entries.\n\n\n\nTo resolve this, we need to change the \"copy\" to a \"move\". We atomically replace the Redirect Index entry with copies of the source entries and remove the source entries from the source index. This way, they will be out of reach of the Cache Manager. Since the source segment ceased to exist (it was merged), this operation should have no side effects.\nHow to verify it\nUnit tests added to verify scenario.", "createdAt": "2020-03-10T21:18:29Z", "url": "https://github.com/pravega/pravega/pull/4611", "merged": true, "mergeCommit": {"oid": "6c6dca38aef681f1be57d9b81965c33f8b03d61f"}, "closed": true, "closedAt": "2020-03-12T00:27:24Z", "author": {"login": "andreipaduroiu"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMY_kqAH2gAyMzg2MzY5Nzk5OjNhYWFmNzNhOTVmNGI4ZTNkMDE2MmUyMjBjYWM3MTljYWUyYTA5ZTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMwil4AFqTM3MzIxMDE3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3aaaf73a95f4b8e3d0162e220cac719cae2a09e9", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/3aaaf73a95f4b8e3d0162e220cac719cae2a09e9", "committedDate": "2020-03-10T21:00:20Z", "message": "Fixed a bug where a concurrent segment merge and cache eviction could corrupt the index.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMzUzMTMy", "url": "https://github.com/pravega/pravega/pull/4611#pullrequestreview-372353132", "createdAt": "2020-03-10T22:03:14Z", "commit": {"oid": "3aaaf73a95f4b8e3d0162e220cac719cae2a09e9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjowMzoxNFrOF0inMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjowNDoyNVrOF0ipAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzNzM2Mg==", "bodyText": "It says \"gets a copy\" but then later says they are removed, so, it's not really a copy.", "url": "https://github.com/pravega/pravega/pull/4611#discussion_r390637362", "createdAt": "2020-03-10T22:03:14Z", "author": {"login": "tkaitchuck"}, "path": "segmentstore/server/src/main/java/io/pravega/segmentstore/server/reading/StreamSegmentReadIndex.java", "diffHunk": "@@ -1192,24 +1192,33 @@ private ReadResultEntryBase createFutureRead(long streamSegmentOffset, int maxLe\n     }\n \n     /**\n-     * Gets a copy of all the ReadIndexEntries in this Index that are not RedirectReadIndices. All returned\n-     * entries have their offsets adjusted by the given amount.\n+     * Gets a copy of all the ReadIndexEntries in this Index that are not RedirectReadIndices and removes them from this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aaaf73a95f4b8e3d0162e220cac719cae2a09e9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzNzgyNg==", "bodyText": "This should probably be called \"removeAllEntries\"", "url": "https://github.com/pravega/pravega/pull/4611#discussion_r390637826", "createdAt": "2020-03-10T22:04:25Z", "author": {"login": "tkaitchuck"}, "path": "segmentstore/server/src/main/java/io/pravega/segmentstore/server/reading/StreamSegmentReadIndex.java", "diffHunk": "@@ -1192,24 +1192,33 @@ private ReadResultEntryBase createFutureRead(long streamSegmentOffset, int maxLe\n     }\n \n     /**\n-     * Gets a copy of all the ReadIndexEntries in this Index that are not RedirectReadIndices. All returned\n-     * entries have their offsets adjusted by the given amount.\n+     * Gets a copy of all the ReadIndexEntries in this Index that are not RedirectReadIndices and removes them from this\n+     * index. All returned entries have their offsets adjusted by the given amount.\n      *\n      * @param offsetAdjustment The amount to adjust the offset by.\n+     * @return A List of {@link MergedIndexEntry} that represents the contents of this index. All these entries point to\n+     * live data in the {@link CacheManager}; as such it is the responsibility of the caller to manage their lifecycle\n+     * from now on.\n      */\n-    private List<MergedIndexEntry> getAllEntries(long offsetAdjustment) {\n+    private List<MergedIndexEntry> fetchAllEntries(long offsetAdjustment) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aaaf73a95f4b8e3d0162e220cac719cae2a09e9"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMzcxOTA5", "url": "https://github.com/pravega/pravega/pull/4611#pullrequestreview-372371909", "createdAt": "2020-03-10T22:45:00Z", "commit": {"oid": "3aaaf73a95f4b8e3d0162e220cac719cae2a09e9"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0NTowMFrOF0jo0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjo0NTowMFrOF0jo0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY1NDE2MA==", "bodyText": "Is this change intentional?", "url": "https://github.com/pravega/pravega/pull/4611#discussion_r390654160", "createdAt": "2020-03-10T22:45:00Z", "author": {"login": "RaulGracia"}, "path": "segmentstore/server/src/test/java/io/pravega/segmentstore/server/reading/ContainerReadIndexTests.java", "diffHunk": "@@ -91,7 +91,7 @@\n             .with(ReadIndexConfig.MEMORY_READ_MIN_LENGTH, 0) // Default: Off (we have a special test for this).\n             .with(ReadIndexConfig.STORAGE_READ_ALIGNMENT, 1024)\n             .build();\n-    private static final Duration TIMEOUT = Duration.ofSeconds(20);\n+    private static final Duration TIMEOUT = Duration.ofSeconds(2000000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aaaf73a95f4b8e3d0162e220cac719cae2a09e9"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c07c8f6c37a717c32209300b1946666bfcc45298", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/c07c8f6c37a717c32209300b1946666bfcc45298", "committedDate": "2020-03-10T23:38:20Z", "message": "Renamed method.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5ec2f973fcbcb2a86711e8ad138d381a6838bcd", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/a5ec2f973fcbcb2a86711e8ad138d381a6838bcd", "committedDate": "2020-03-10T23:39:50Z", "message": "Reverted timeout\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96d8c13d8704786f13de51722907f46261a3b1a5", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/96d8c13d8704786f13de51722907f46261a3b1a5", "committedDate": "2020-03-11T04:01:08Z", "message": "checkstyle\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb9cac08d0579ffa7f75f78c458bbcddec5819df", "author": {"user": {"login": "RaulGracia", "name": "Ra\u00fal Gracia"}}, "url": "https://github.com/pravega/pravega/commit/eb9cac08d0579ffa7f75f78c458bbcddec5819df", "committedDate": "2020-03-11T08:26:27Z", "message": "Merge branch 'master' into issue-4610-read-index"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMjEwMTcy", "url": "https://github.com/pravega/pravega/pull/4611#pullrequestreview-373210172", "createdAt": "2020-03-12T00:26:24Z", "commit": {"oid": "eb9cac08d0579ffa7f75f78c458bbcddec5819df"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3624, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}