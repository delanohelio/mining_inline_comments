{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3NDgxMTEx", "number": 4789, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzoyOTo1MVrOD8RXzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzowNTo1MFrOD8kkIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTI1Nzc1OnYy", "diffSide": "RIGHT", "path": "shared/protocol/src/test/java/io/pravega/shared/protocol/netty/WireCommandsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzoyOTo1MVrOGVHAZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMzoyOTo1MVrOGVHAZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc4ODA2OQ==", "bodyText": "Maybe make these two different so we also check that order is preserved.", "url": "https://github.com/pravega/pravega/pull/4789#discussion_r424788069", "createdAt": "2020-05-13T23:29:51Z", "author": {"login": "tkaitchuck"}, "path": "shared/protocol/src/test/java/io/pravega/shared/protocol/netty/WireCommandsTest.java", "diffHunk": "@@ -807,6 +807,24 @@ public void testTableEntriesIteratorItem() throws IOException {\n         testCommand(cmd);\n     }\n \n+    @Test\n+    public void testReadTableEntriesDelta() throws IOException {\n+        WireCommands.ReadTableEntriesDelta cmd = new WireCommands.ReadTableEntriesDelta(l, testString1, \"\", 1L, 100);\n+        testCommand(cmd);\n+    }\n+\n+    @Test\n+    public void testtableEntriesDeltaRead() throws IOException {\n+        List<Map.Entry<WireCommands.TableKey, WireCommands.TableValue>> entries = Arrays.asList(\n+                new SimpleImmutableEntry<>(new WireCommands.TableKey(buf, l), new WireCommands.TableValue(buf)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f07d793d7b2c9ed6986cdcdd8260553f335d02"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTY5ODE0OnYy", "diffSide": "RIGHT", "path": "shared/protocol/src/main/java/io/pravega/shared/protocol/netty/WireCommands.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMzo1NjowN1rOGVLMag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjo1NzoyMFrOGVlqXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1NjY4Mg==", "bodyText": "we should read this value only if it available.Else the OLDEST_COMPATIBLE_VERSION will change.", "url": "https://github.com/pravega/pravega/pull/4789#discussion_r424856682", "createdAt": "2020-05-14T03:56:07Z", "author": {"login": "shrids"}, "path": "shared/protocol/src/main/java/io/pravega/shared/protocol/netty/WireCommands.java", "diffHunk": "@@ -1652,15 +1653,17 @@ public void writeFields(DataOutput out) throws IOException {\n             out.writeUTF(segment);\n             out.writeUTF(delegationToken == null ? \"\" : delegationToken);\n             tableEntries.writeFields(out);\n+            out.writeLong(tableSegmentOffset);\n         }\n \n         public static WireCommand readFrom(ByteBufInputStream in, int length) throws IOException {\n             long requestId = in.readLong();\n             String segment = in.readUTF();\n             String delegationToken = in.readUTF();\n             TableEntries entries = (TableEntries) TableEntries.readFrom(in, in.available());\n+            long tableSegmentOffset = in.readLong();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f07d793d7b2c9ed6986cdcdd8260553f335d02"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI4OTk0Mg==", "bodyText": "Correct. Check out for other examples in this file; there should be a few that followed the same pattern.", "url": "https://github.com/pravega/pravega/pull/4789#discussion_r425289942", "createdAt": "2020-05-14T16:56:40Z", "author": {"login": "andreipaduroiu"}, "path": "shared/protocol/src/main/java/io/pravega/shared/protocol/netty/WireCommands.java", "diffHunk": "@@ -1652,15 +1653,17 @@ public void writeFields(DataOutput out) throws IOException {\n             out.writeUTF(segment);\n             out.writeUTF(delegationToken == null ? \"\" : delegationToken);\n             tableEntries.writeFields(out);\n+            out.writeLong(tableSegmentOffset);\n         }\n \n         public static WireCommand readFrom(ByteBufInputStream in, int length) throws IOException {\n             long requestId = in.readLong();\n             String segment = in.readUTF();\n             String delegationToken = in.readUTF();\n             TableEntries entries = (TableEntries) TableEntries.readFrom(in, in.available());\n+            long tableSegmentOffset = in.readLong();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1NjY4Mg=="}, "originalCommit": {"oid": "f5f07d793d7b2c9ed6986cdcdd8260553f335d02"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI5MDMzNQ==", "bodyText": "And if not provided, then set it to that negative value I mentioned in the comment above.", "url": "https://github.com/pravega/pravega/pull/4789#discussion_r425290335", "createdAt": "2020-05-14T16:57:20Z", "author": {"login": "andreipaduroiu"}, "path": "shared/protocol/src/main/java/io/pravega/shared/protocol/netty/WireCommands.java", "diffHunk": "@@ -1652,15 +1653,17 @@ public void writeFields(DataOutput out) throws IOException {\n             out.writeUTF(segment);\n             out.writeUTF(delegationToken == null ? \"\" : delegationToken);\n             tableEntries.writeFields(out);\n+            out.writeLong(tableSegmentOffset);\n         }\n \n         public static WireCommand readFrom(ByteBufInputStream in, int length) throws IOException {\n             long requestId = in.readLong();\n             String segment = in.readUTF();\n             String delegationToken = in.readUTF();\n             TableEntries entries = (TableEntries) TableEntries.readFrom(in, in.available());\n+            long tableSegmentOffset = in.readLong();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1NjY4Mg=="}, "originalCommit": {"oid": "f5f07d793d7b2c9ed6986cdcdd8260553f335d02"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NTY5ODY2OnYy", "diffSide": "RIGHT", "path": "shared/protocol/src/main/java/io/pravega/shared/protocol/netty/WireCommands.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMzo1NjoyN1rOGVLMwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwMzo1NjoyN1rOGVLMwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg1Njc2OQ==", "bodyText": "same as above.", "url": "https://github.com/pravega/pravega/pull/4789#discussion_r424856769", "createdAt": "2020-05-14T03:56:27Z", "author": {"login": "shrids"}, "path": "shared/protocol/src/main/java/io/pravega/shared/protocol/netty/WireCommands.java", "diffHunk": "@@ -1730,7 +1735,9 @@ public static WireCommand readFrom(ByteBufInputStream in, int length) throws IOE\n             for (int i = 0; i < numberOfKeys; i++) {\n                 keys.add((TableKey) TableKey.readFrom(in, in.available()));\n             }\n-            return new RemoveTableKeys(requestId, segment, delegationToken, keys);\n+            long tableSegmentOffset = in.readLong();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f07d793d7b2c9ed6986cdcdd8260553f335d02"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODM2MjgyOnYy", "diffSide": "RIGHT", "path": "controller/src/main/java/io/pravega/controller/server/SegmentHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjo1NTo0MlrOGVlmLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjo1NTo1M1rOGVlmxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI4OTI2Mw==", "bodyText": "Default this to something negative such as -1 or Long.MIN_VALUE. The contract will be that if we are provided a negative value, the update will be unconditioned (on the length of the segment). Otherwise (0 included), we'll condition the update on the table segment having the specified length.\nI would further suggest encoding this as a public constant in the wire command itself.", "url": "https://github.com/pravega/pravega/pull/4789#discussion_r425289263", "createdAt": "2020-05-14T16:55:42Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/main/java/io/pravega/controller/server/SegmentHelper.java", "diffHunk": "@@ -403,7 +403,7 @@ private String getTransactionName(String scope, String stream, long segmentId, U\n         RawClient connection = new RawClient(ModelHelper.encode(uri), connectionFactory);\n         final long requestId = connection.getFlow().asLong();\n         WireCommands.UpdateTableEntries request = new WireCommands.UpdateTableEntries(requestId, tableName, delegationToken,\n-                new WireCommands.TableEntries(wireCommandEntries));\n+                new WireCommands.TableEntries(wireCommandEntries), 0L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f07d793d7b2c9ed6986cdcdd8260553f335d02"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI4OTQxMg==", "bodyText": "Same with Remove below.", "url": "https://github.com/pravega/pravega/pull/4789#discussion_r425289412", "createdAt": "2020-05-14T16:55:53Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/main/java/io/pravega/controller/server/SegmentHelper.java", "diffHunk": "@@ -403,7 +403,7 @@ private String getTransactionName(String scope, String stream, long segmentId, U\n         RawClient connection = new RawClient(ModelHelper.encode(uri), connectionFactory);\n         final long requestId = connection.getFlow().asLong();\n         WireCommands.UpdateTableEntries request = new WireCommands.UpdateTableEntries(requestId, tableName, delegationToken,\n-                new WireCommands.TableEntries(wireCommandEntries));\n+                new WireCommands.TableEntries(wireCommandEntries), 0L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI4OTI2Mw=="}, "originalCommit": {"oid": "f5f07d793d7b2c9ed6986cdcdd8260553f335d02"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODQwMjI2OnYy", "diffSide": "RIGHT", "path": "shared/protocol/src/main/java/io/pravega/shared/protocol/netty/WireCommands.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzowNTo1MFrOGVl_VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzowNTo1MFrOGVl_VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI5NTcwMQ==", "bodyText": "Have this throw UnsupportedOperationException and add a comment that it will be implemented with\n#4677", "url": "https://github.com/pravega/pravega/pull/4789#discussion_r425295701", "createdAt": "2020-05-14T17:05:50Z", "author": {"login": "andreipaduroiu"}, "path": "shared/protocol/src/main/java/io/pravega/shared/protocol/netty/WireCommands.java", "diffHunk": "@@ -2182,6 +2189,78 @@ public boolean isFailure() {\n         }\n     }\n \n+    @Data\n+    public static final class ReadTableEntriesDelta implements Request, WireCommand {\n+        final WireCommandType type = WireCommandType.READ_TABLE_ENTRIES_DELTA;\n+        final long requestId;\n+        final String segment;\n+        @ToString.Exclude\n+        final String delegationToken;\n+        final long fromVersion;\n+        final int suggestedEntryCount;\n+\n+        @Override\n+        public void process(RequestProcessor cp) {\n+\n+        }\n+\n+        @Override\n+        public void writeFields(DataOutput out) throws IOException {\n+            out.writeLong(requestId);\n+            out.writeUTF(segment);\n+            out.writeUTF(delegationToken == null ? \"\" : delegationToken);\n+            out.writeLong(fromVersion);\n+            out.writeInt(suggestedEntryCount);\n+        }\n+\n+        public static WireCommand readFrom(ByteBufInputStream in, int length) throws IOException {\n+            long requestId = in.readLong();\n+            String segment = in.readUTF();\n+            String delegationToken = in.readUTF();\n+            long fromVersion = in.readLong();\n+            int suggestedEntryCount = in.readInt();\n+\n+            return new ReadTableEntriesDelta(requestId, segment, delegationToken, fromVersion, suggestedEntryCount);\n+        }\n+    }\n+\n+    @Data\n+    public static final class TableEntriesDeltaRead implements Reply, WireCommand {\n+        final WireCommandType type = WireCommandType.TABLE_ENTRIES_DELTA_READ;\n+        final long requestId;\n+        final String segment;\n+        final TableEntries tableEntries;\n+        final boolean shouldClear;\n+        final boolean reachedEnd;\n+        final long lastVersion;\n+\n+        @Override\n+        public void process(ReplyProcessor cp) {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5f07d793d7b2c9ed6986cdcdd8260553f335d02"}, "originalPosition": 114}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4335, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}