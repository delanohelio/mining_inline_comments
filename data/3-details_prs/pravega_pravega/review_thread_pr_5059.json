{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NTQ0NzYw", "number": 5059, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNTowNTo1OFrOEbaF6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNDoxNDoyNFrOEfNb8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTc0NTA3OnYy", "diffSide": "RIGHT", "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNTowNTo1OFrOHFUvtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNTowNTo1OFrOHFUvtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0NDgyMw==", "bodyText": "This flag is used for enabling both TLS and AUTH in this PR. I suppose it should be called something like TLS_AND_AUTH_ENABLED.", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r475344823", "createdAt": "2020-08-24T05:05:58Z", "author": {"login": "ravisharda"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "diffHunk": "@@ -48,9 +48,15 @@\n     public static final int ALTERNATIVE_REST_PORT = 9094;\n     public static final TestExecutorFactory.TestExecutorType EXECUTOR_TYPE = TestExecutorFactory.getTestExecutionType();\n     public static final boolean AUTH_ENABLED = isAuthEnabled();\n+    public static final boolean TLS_ENABLED = isTLSEnabled();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852739281fbab4ed0c1321a368ac8bf3f11fc849"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTc1NjIwOnYy", "diffSide": "RIGHT", "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNToxMjowNFrOHFU1mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNToxMjowNFrOHFU1mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0NjMzMA==", "bodyText": "Using both of these flags - a static flag and a an input argument - looks redundant and somewhat confusing too. Why don't you use just one of these?", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r475346330", "createdAt": "2020-08-24T05:12:04Z", "author": {"login": "ravisharda"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "diffHunk": "@@ -149,18 +162,32 @@ public static Service createPravegaSegmentStoreService(final URI zkUri, final UR\n     }\n \n     public static ClientConfig buildClientConfig(URI controllerUri) {\n-        if (!AUTH_ENABLED) {\n-            log.debug(\"Generating config with auth disabled.\");\n-            return ClientConfig.builder().controllerURI(controllerUri).build();\n-        } else {\n+           return buildClientConfig(controllerUri, false);\n+    }\n+\n+    public static ClientConfig buildClientConfig(URI controllerUri, boolean enableTls) {\n+        if (TLS_ENABLED || enableTls) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852739281fbab4ed0c1321a368ac8bf3f11fc849"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTc2MDczOnYy", "diffSide": "RIGHT", "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNToxNDozNVrOHFU4OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNToxNDozNVrOHFU4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0NzAwMA==", "bodyText": "The name of this variable doesn't reflect the intent well. Could you please rename it? What does it represent?", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r475347000", "createdAt": "2020-08-24T05:14:35Z", "author": {"login": "ravisharda"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "diffHunk": "@@ -79,6 +89,8 @@\n     static final String CUSTOM_RESOURCE_KIND_PRAVEGA = \"PravegaCluster\";\n     static final String PRAVEGA_CONTROLLER_LABEL = \"pravega-controller\";\n     static final String PRAVEGA_SEGMENTSTORE_LABEL = \"pravega-segmentstore\";\n+    static final String PRAVEGA_CONTROLLER_CONFIG_MAP = \"pravega-pravega-controller\";\n+    static final String SELFSIGNED_CERT_TLS = \"selfsigned-cert-tls\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852739281fbab4ed0c1321a368ac8bf3f11fc849"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTc2MzE3OnYy", "diffSide": "RIGHT", "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNToxNTozOVrOHFU5kQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNToxNTozOVrOHFU5kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0NzM0NQ==", "bodyText": "Should it be called WEBHOOK_CERT_GENERATE to reflect the intent better?", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r475347345", "createdAt": "2020-08-24T05:15:39Z", "author": {"login": "ravisharda"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "diffHunk": "@@ -91,6 +103,7 @@\n     private static final String TIER2_NFS = \"nfs\";\n     private static final String TIER2_TYPE = System.getProperty(\"tier2Type\", TIER2_NFS);\n     private static final boolean IS_OPERATOR_VERSION_ABOVE_040 = isOperatorVersionAbove040();\n+    private static final String WEBHOOK_GENERATE = \"webhookCert.generate\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852739281fbab4ed0c1321a368ac8bf3f11fc849"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTc2NDM4OnYy", "diffSide": "RIGHT", "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNToxNjoyOVrOHFU6RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNToxNjoyOVrOHFU6RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0NzUyNA==", "bodyText": "Please use a single flag only. Since this a class member, ideally it shouldn't depend on a static member.", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r475347524", "createdAt": "2020-08-24T05:16:29Z", "author": {"login": "ravisharda"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "diffHunk": "@@ -106,13 +119,19 @@ public String getID() {\n     }\n \n     CompletableFuture<Object> deployPravegaUsingOperator(final URI zkUri, int controllerCount, int segmentStoreCount, int bookieCount, ImmutableMap<String, String> props) {\n-    return k8sClient.createCRD(getPravegaCRD())\n+        return deployPravegaUsingOperator(zkUri, controllerCount, segmentStoreCount, bookieCount, props, false);\n+    }\n+\n+    CompletableFuture<Object> deployPravegaUsingOperator(final URI zkUri, int controllerCount, int segmentStoreCount, int bookieCount, ImmutableMap<String, String> props, boolean enableTls) {\n+\n+    return registerTLSSecret()\n+                        .thenCompose(v -> k8sClient.createCRD(getPravegaCRD()))\n                         .thenCompose(v -> k8sClient.createRole(NAMESPACE, getPravegaOperatorRole()))\n                         .thenCompose(v -> k8sClient.createClusterRole(getPravegaOperatorClusterRole()))\n                         .thenCompose(v -> k8sClient.createRoleBinding(NAMESPACE, getPravegaOperatorRoleBinding()))\n                         .thenCompose(v -> k8sClient.createClusterRoleBinding(getPravegaOperatorClusterRoleBinding()))\n                         //deploy pravega operator.\n-                        .thenCompose(v -> k8sClient.createDeployment(NAMESPACE, getPravegaOperatorDeployment()))\n+                        .thenCompose(v -> k8sClient.createDeployment(NAMESPACE, getPravegaOperatorDeployment(enableTls || Utils.TLS_ENABLED)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852739281fbab4ed0c1321a368ac8bf3f11fc849"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTc2NzI5OnYy", "diffSide": "RIGHT", "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNToxODoxOFrOHFU8AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNToxODoxOFrOHFU8AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM0Nzk2OA==", "bodyText": "A better name for the SELFSIGNED_CERT_TLS variable be CONTROLLER_SECRET and  or a SEGMENTSTORE_SECRET in my view. If you want to use the same, just a slightly more abstract SERVER_SECRET'd do.", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r475347968", "createdAt": "2020-08-24T05:18:18Z", "author": {"login": "ravisharda"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "diffHunk": "@@ -166,11 +185,20 @@ public String getID() {\n                 .put(\"tier2\", tier2Spec())\n                 .build();\n \n+        final Map<String, Object> staticTlsSpec = ImmutableMap.<String, Object>builder()\n+                .put(\"controllerSecret\", SELFSIGNED_CERT_TLS)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852739281fbab4ed0c1321a368ac8bf3f11fc849"}, "originalPosition": 100}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTk1NzIyOnYy", "diffSide": "RIGHT", "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNjo0OToyNlrOHFWqhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNjo0OToyNlrOHFWqhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM3NjI2MQ==", "bodyText": "The debug message is misleading, as both Auth and TLS are disabled.", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r475376261", "createdAt": "2020-08-24T06:49:26Z", "author": {"login": "ravisharda"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "diffHunk": "@@ -149,18 +162,32 @@ public static Service createPravegaSegmentStoreService(final URI zkUri, final UR\n     }\n \n     public static ClientConfig buildClientConfig(URI controllerUri) {\n-        if (!AUTH_ENABLED) {\n-            log.debug(\"Generating config with auth disabled.\");\n-            return ClientConfig.builder().controllerURI(controllerUri).build();\n-        } else {\n+           return buildClientConfig(controllerUri, false);\n+    }\n+\n+    public static ClientConfig buildClientConfig(URI controllerUri, boolean enableTls) {\n+        if (TLS_ENABLED || enableTls) {\n+            String certPath = enableTls ? \"/opt/pravega/conf/server-cert.crt\" : DEFAULT_TRUSTSTORE_PATH;\n+            log.debug(\"Generating config with tls enabled.\");\n+            return ClientConfig.builder()\n+                               // TLS-related client-side configuration\n+                               .trustStore(certPath)\n+                               .validateHostName(VALIDATE_HOSTNAME)\n+                               // auth\n+                               .credentials(new DefaultCredentials(\"1111_aaaa\", \"admin\"))\n+                               .controllerURI(controllerUri)\n+                               .build();\n+        } else if (AUTH_ENABLED) {\n             log.debug(\"Generating config with auth enabled.\");\n             return ClientConfig.builder()\n                                // auth\n                                .credentials(new DefaultCredentials(\"1111_aaaa\", \"admin\"))\n                                .controllerURI(controllerUri)\n                                .build();\n+        } else {\n+            log.debug(\"Generating config with auth disabled.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852739281fbab4ed0c1321a368ac8bf3f11fc849"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTk2MjU4OnYy", "diffSide": "RIGHT", "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNjo1MToyNVrOHFWtxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNjo1MToyNVrOHFWtxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM3NzA5NA==", "bodyText": "The exception itself is eaten up here. This should be throwing an exception or handle it so that the flow below doesn't execute.", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r475377094", "createdAt": "2020-08-24T06:51:25Z", "author": {"login": "ravisharda"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "diffHunk": "@@ -317,6 +345,36 @@ private V1beta1CustomResourceDefinition getPravegaCRD() {\n \n     }\n \n+    private static V1Secret getTLSSecret() {\n+        String data = \"\";\n+        String yamlInputPath = \"secret.yaml\";\n+        try (InputStream inputStream = Utils.class.getClassLoader().getResourceAsStream(yamlInputPath)) {\n+            data = IOUtils.toString(inputStream, StandardCharsets.UTF_8);\n+        } catch (IOException e) {\n+            log.error(\"Could not read from: {}, data:{}\", yamlInputPath, data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852739281fbab4ed0c1321a368ac8bf3f11fc849"}, "originalPosition": 161}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTk2OTk2OnYy", "diffSide": "RIGHT", "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNjo1NDoyN1rOHFWyWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNjo1NDoyN1rOHFWyWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM3ODI2Nw==", "bodyText": "If the server cert is signed by a CA, using the CA's certificate as the truststore is better as that'd reflect real-world scenarios better.", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r475378267", "createdAt": "2020-08-24T06:54:27Z", "author": {"login": "ravisharda"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/services/kubernetes/AbstractService.java", "diffHunk": "@@ -428,6 +496,24 @@ private V1Deployment getPravegaOperatorDeployment() {\n                                         .build();\n     }\n \n+    public CompletableFuture<V1ConfigMap> setupTLS() {\n+            V1ConfigMap configMap = Futures.getThrowingException(k8sClient.getConfigMap(PRAVEGA_CONTROLLER_CONFIG_MAP, NAMESPACE));\n+            return k8sClient.deleteConfigMap(PRAVEGA_CONTROLLER_CONFIG_MAP, NAMESPACE)\n+                        .thenCompose(v -> k8sClient.createConfigMap(NAMESPACE, addDefaultTlsConfiguration(configMap)));\n+    }\n+\n+    private V1ConfigMap addDefaultTlsConfiguration(V1ConfigMap configMap) {\n+            return configMap\n+                        .putDataItem(\"TLS_ENABLED\", \"true\")\n+                        .putDataItem(\"TLS_KEY_FILE\", \"/opt/pravega/conf/server-key.key\")\n+                        .putDataItem(\"TLS_CERT_FILE\", \"/opt/pravega/conf/server-cert.crt\")\n+                        .putDataItem(\"TLS_TRUST_STORE\", \"/opt/pravega/conf/server-cert.crt\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852739281fbab4ed0c1321a368ac8bf3f11fc849"}, "originalPosition": 231}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTk3NjY0OnYy", "diffSide": "RIGHT", "path": "test/system/src/test/resources/pravega_withTLS.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNjo1Njo1M1rOHFW2aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNjo1Njo1M1rOHFW2aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM3OTMwNQ==", "bodyText": "This is old property. Use controller.security.tls.server.keyStore.location instead.", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r475379305", "createdAt": "2020-08-24T06:56:53Z", "author": {"login": "ravisharda"}, "path": "test/system/src/test/resources/pravega_withTLS.properties", "diffHunk": "@@ -0,0 +1,41 @@\n+# Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+autoScale.mute.time.seconds=120\n+autoScale.cooldown.time.seconds=120\n+autoScale.cache.expiry.seconds=120\n+autoScale.cache.cleanUp.interval.seconds=120\n+curator-default-session-timeout=10000\n+bookkeeper.ack.quorum.size=3\n+controller.transaction.lease.count.max=120000\n+controller.retention.frequency.minutes=2\n+log.level=DEBUG\n+hdfs.replaceDataNodesOnFailure.enable=false\n+controller.security.auth.enable=true\n+controller.security.pwdAuthHandler.accountsDb.location=/opt/pravega/conf/passwd\n+controller.security.auth.delegationToken.signingKey.basis=secret\n+autoscale.controller.connect.security.auth.enable=true\n+autoscale.security.auth.token.signingKey.basis=secret\n+#4GB of cache.\n+pravegaservice.cache.size.max=4294967296\n+#4GB of cache + a buffer for whatever else Netty might need it for.\n+io.netty.maxDirectMemory=5368709120\n+pravega.client.auth.token=YWRtaW46MTExMV9hYWFh\n+pravega.client.auth.method=Basic\n+# tls.crt \n+controller.security.tls.enable=true\n+controller.security.tls.trustStore.location=/etc/secret-volume/tls.crt\n+controller.security.tls.server.certificate.location=/etc/secret-volume/tls.crt\n+controller.security.tls.server.privateKey.location=/etc/secret-volume/tls.key\n+controller.security.tls.server.keyStore.location=/opt/pravega/conf/server.keystore.jks\n+controller.security.tls.server.keyStore.pwd.location=/opt/pravega/conf/server.keystore.jks.passwd\n+controller.rest.tlsKeyStoreFile=/opt/pravega/conf/server.keystore.jks", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852739281fbab4ed0c1321a368ac8bf3f11fc849"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTk3ODEzOnYy", "diffSide": "RIGHT", "path": "test/system/src/test/resources/pravega_withTLS.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNjo1NzoyN1rOHFW3RQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNjo1NzoyN1rOHFW3RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM3OTUyNQ==", "bodyText": "This too is an old property. Use controller.security.tls.server.keyStore.pwd.location instead.", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r475379525", "createdAt": "2020-08-24T06:57:27Z", "author": {"login": "ravisharda"}, "path": "test/system/src/test/resources/pravega_withTLS.properties", "diffHunk": "@@ -0,0 +1,41 @@\n+# Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+autoScale.mute.time.seconds=120\n+autoScale.cooldown.time.seconds=120\n+autoScale.cache.expiry.seconds=120\n+autoScale.cache.cleanUp.interval.seconds=120\n+curator-default-session-timeout=10000\n+bookkeeper.ack.quorum.size=3\n+controller.transaction.lease.count.max=120000\n+controller.retention.frequency.minutes=2\n+log.level=DEBUG\n+hdfs.replaceDataNodesOnFailure.enable=false\n+controller.security.auth.enable=true\n+controller.security.pwdAuthHandler.accountsDb.location=/opt/pravega/conf/passwd\n+controller.security.auth.delegationToken.signingKey.basis=secret\n+autoscale.controller.connect.security.auth.enable=true\n+autoscale.security.auth.token.signingKey.basis=secret\n+#4GB of cache.\n+pravegaservice.cache.size.max=4294967296\n+#4GB of cache + a buffer for whatever else Netty might need it for.\n+io.netty.maxDirectMemory=5368709120\n+pravega.client.auth.token=YWRtaW46MTExMV9hYWFh\n+pravega.client.auth.method=Basic\n+# tls.crt \n+controller.security.tls.enable=true\n+controller.security.tls.trustStore.location=/etc/secret-volume/tls.crt\n+controller.security.tls.server.certificate.location=/etc/secret-volume/tls.crt\n+controller.security.tls.server.privateKey.location=/etc/secret-volume/tls.key\n+controller.security.tls.server.keyStore.location=/opt/pravega/conf/server.keystore.jks\n+controller.security.tls.server.keyStore.pwd.location=/opt/pravega/conf/server.keystore.jks.passwd\n+controller.rest.tlsKeyStoreFile=/opt/pravega/conf/server.keystore.jks\n+controller.rest.tlsKeyStorePasswordFile=/opt/pravega/conf/server.keystore.jks.passwd", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852739281fbab4ed0c1321a368ac8bf3f11fc849"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTk4MTU3OnYy", "diffSide": "RIGHT", "path": "test/system/src/test/resources/pravega_withTLS.properties", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNjo1ODo0NlrOHFW5bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQwODo0NDowN1rOHOS9hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM4MDA3OA==", "bodyText": "Properties from lime 38 to 41 are also old properties. Replace them with the new properties. The mapping between old and new properties can be found here: https://github.com/pravega/pravega/wiki/Configuration-Name-Changes.", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r475380078", "createdAt": "2020-08-24T06:58:46Z", "author": {"login": "ravisharda"}, "path": "test/system/src/test/resources/pravega_withTLS.properties", "diffHunk": "@@ -0,0 +1,41 @@\n+# Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+autoScale.mute.time.seconds=120\n+autoScale.cooldown.time.seconds=120\n+autoScale.cache.expiry.seconds=120\n+autoScale.cache.cleanUp.interval.seconds=120\n+curator-default-session-timeout=10000\n+bookkeeper.ack.quorum.size=3\n+controller.transaction.lease.count.max=120000\n+controller.retention.frequency.minutes=2\n+log.level=DEBUG\n+hdfs.replaceDataNodesOnFailure.enable=false\n+controller.security.auth.enable=true\n+controller.security.pwdAuthHandler.accountsDb.location=/opt/pravega/conf/passwd\n+controller.security.auth.delegationToken.signingKey.basis=secret\n+autoscale.controller.connect.security.auth.enable=true\n+autoscale.security.auth.token.signingKey.basis=secret\n+#4GB of cache.\n+pravegaservice.cache.size.max=4294967296\n+#4GB of cache + a buffer for whatever else Netty might need it for.\n+io.netty.maxDirectMemory=5368709120\n+pravega.client.auth.token=YWRtaW46MTExMV9hYWFh\n+pravega.client.auth.method=Basic\n+# tls.crt \n+controller.security.tls.enable=true\n+controller.security.tls.trustStore.location=/etc/secret-volume/tls.crt\n+controller.security.tls.server.certificate.location=/etc/secret-volume/tls.crt\n+controller.security.tls.server.privateKey.location=/etc/secret-volume/tls.key\n+controller.security.tls.server.keyStore.location=/opt/pravega/conf/server.keystore.jks\n+controller.security.tls.server.keyStore.pwd.location=/opt/pravega/conf/server.keystore.jks.passwd\n+controller.rest.tlsKeyStoreFile=/opt/pravega/conf/server.keystore.jks\n+controller.rest.tlsKeyStorePasswordFile=/opt/pravega/conf/server.keystore.jks.passwd\n+pravegaservice.certFile=/etc/secret-volume/tls.crt", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "852739281fbab4ed0c1321a368ac8bf3f11fc849"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDc1Mjc3NA==", "bodyText": "@ravibeta config lines from lies 36 to 39 still use old names, but the comment is marked resolved. Can you please fix them?\n\n  \n    \n      pravega/test/system/src/test/resources/pravega_withTLS.properties\n    \n    \n        Lines 38 to 41\n      in\n      8527392\n    \n    \n    \n    \n\n        \n          \n           pravegaservice.certFile=/etc/secret-volume/tls.crt \n        \n\n        \n          \n           pravegaservice.enableTls=false \n        \n\n        \n          \n           pravegaservice.keyFile=/etc/secret-volume/tls.key \n        \n\n        \n          \n           pravegaservice.secureZK=false", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r484752774", "createdAt": "2020-09-08T08:44:07Z", "author": {"login": "ravisharda"}, "path": "test/system/src/test/resources/pravega_withTLS.properties", "diffHunk": "@@ -0,0 +1,41 @@\n+# Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+#\n+# Licensed under the Apache License, Version 2.0 (the \"License\");\n+# you may not use this file except in compliance with the License.\n+# You may obtain a copy of the License at\n+#\n+#    http://www.apache.org/licenses/LICENSE-2.0\n+autoScale.mute.time.seconds=120\n+autoScale.cooldown.time.seconds=120\n+autoScale.cache.expiry.seconds=120\n+autoScale.cache.cleanUp.interval.seconds=120\n+curator-default-session-timeout=10000\n+bookkeeper.ack.quorum.size=3\n+controller.transaction.lease.count.max=120000\n+controller.retention.frequency.minutes=2\n+log.level=DEBUG\n+hdfs.replaceDataNodesOnFailure.enable=false\n+controller.security.auth.enable=true\n+controller.security.pwdAuthHandler.accountsDb.location=/opt/pravega/conf/passwd\n+controller.security.auth.delegationToken.signingKey.basis=secret\n+autoscale.controller.connect.security.auth.enable=true\n+autoscale.security.auth.token.signingKey.basis=secret\n+#4GB of cache.\n+pravegaservice.cache.size.max=4294967296\n+#4GB of cache + a buffer for whatever else Netty might need it for.\n+io.netty.maxDirectMemory=5368709120\n+pravega.client.auth.token=YWRtaW46MTExMV9hYWFh\n+pravega.client.auth.method=Basic\n+# tls.crt \n+controller.security.tls.enable=true\n+controller.security.tls.trustStore.location=/etc/secret-volume/tls.crt\n+controller.security.tls.server.certificate.location=/etc/secret-volume/tls.crt\n+controller.security.tls.server.privateKey.location=/etc/secret-volume/tls.key\n+controller.security.tls.server.keyStore.location=/opt/pravega/conf/server.keystore.jks\n+controller.security.tls.server.keyStore.pwd.location=/opt/pravega/conf/server.keystore.jks.passwd\n+controller.rest.tlsKeyStoreFile=/opt/pravega/conf/server.keystore.jks\n+controller.rest.tlsKeyStorePasswordFile=/opt/pravega/conf/server.keystore.jks.passwd\n+pravegaservice.certFile=/etc/secret-volume/tls.crt", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM4MDA3OA=="}, "originalCommit": {"oid": "852739281fbab4ed0c1321a368ac8bf3f11fc849"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MjA2OTY4OnYy", "diffSide": "RIGHT", "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMjo1NTo0NlrOHG563A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwMzoxMToyOFrOHG6LJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwMjQ2MA==", "bodyText": "Please modify this log message too to say both TLS and auth are enabled", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r477002460", "createdAt": "2020-08-26T02:55:46Z", "author": {"login": "ravisharda"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "diffHunk": "@@ -149,18 +157,27 @@ public static Service createPravegaSegmentStoreService(final URI zkUri, final UR\n     }\n \n     public static ClientConfig buildClientConfig(URI controllerUri) {\n-        if (!AUTH_ENABLED) {\n-            log.debug(\"Generating config with auth disabled.\");\n-            return ClientConfig.builder().controllerURI(controllerUri).build();\n-        } else {\n+        if (TLS_AND_AUTH_ENABLED) {\n+            log.debug(\"Generating config with tls enabled.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bdcec78a38fa97bda75e05be40bd4c4851e28ca8"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwNjYyOA==", "bodyText": "Yes Ravi", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r477006628", "createdAt": "2020-08-26T03:11:28Z", "author": {"login": "ravibeta"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "diffHunk": "@@ -149,18 +157,27 @@ public static Service createPravegaSegmentStoreService(final URI zkUri, final UR\n     }\n \n     public static ClientConfig buildClientConfig(URI controllerUri) {\n-        if (!AUTH_ENABLED) {\n-            log.debug(\"Generating config with auth disabled.\");\n-            return ClientConfig.builder().controllerURI(controllerUri).build();\n-        } else {\n+        if (TLS_AND_AUTH_ENABLED) {\n+            log.debug(\"Generating config with tls enabled.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzAwMjQ2MA=="}, "originalCommit": {"oid": "bdcec78a38fa97bda75e05be40bd4c4851e28ca8"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxMTYxNDU4OnYy", "diffSide": "RIGHT", "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwNDoxNDoyNFrOHLVlNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTowNTowM1rOHL-P_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY0OTk3NQ==", "bodyText": "@ravisharda, is it possible to have only TLS enabled why AUTH is disabled? It looks a bit odd that both must be enabled or at least TLS cannot be enabled alone. I was told that there is something in the current design that forces so, could you please clarify a bit? Thanks", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r481649975", "createdAt": "2020-09-02T04:14:24Z", "author": {"login": "medvedevigorek"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "diffHunk": "@@ -149,18 +157,27 @@ public static Service createPravegaSegmentStoreService(final URI zkUri, final UR\n     }\n \n     public static ClientConfig buildClientConfig(URI controllerUri) {\n-        if (!AUTH_ENABLED) {\n-            log.debug(\"Generating config with auth disabled.\");\n-            return ClientConfig.builder().controllerURI(controllerUri).build();\n-        } else {\n+        if (TLS_AND_AUTH_ENABLED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e587416e462e0dd808949278da9599184d89f06"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY2NTk3OA==", "bodyText": "@medvedevigorek technically both can be enabled/disabled independently of each other. So, you could have a config where TLS is enabled, but auth is disabled, just like you can have auth enabled with TLS disabled. However, in practical use, both shall be enabled in most cases.\nThe older flag in the system tests Jenkins job that represented \"security enabled\" only turned on auth, but not TLS, due to some of the inherent gaps that we had with the system tests configuration. With @ravibeta's changes, we can now have it enable both auth and tls.\nWith that background, as well as what the specific code in question does, it looks appropriate to call it TLS_AND_AUTH_ENABLED as opposed to just TLS_ENABLED.\nHope that clarifies.", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r481665978", "createdAt": "2020-09-02T04:30:26Z", "author": {"login": "ravisharda"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "diffHunk": "@@ -149,18 +157,27 @@ public static Service createPravegaSegmentStoreService(final URI zkUri, final UR\n     }\n \n     public static ClientConfig buildClientConfig(URI controllerUri) {\n-        if (!AUTH_ENABLED) {\n-            log.debug(\"Generating config with auth disabled.\");\n-            return ClientConfig.builder().controllerURI(controllerUri).build();\n-        } else {\n+        if (TLS_AND_AUTH_ENABLED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY0OTk3NQ=="}, "originalCommit": {"oid": "3e587416e462e0dd808949278da9599184d89f06"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMwNTkxNA==", "bodyText": "okay, getting even more confused now.\nI get the part that in most cases auth  and tls are enabled together as it doesn't really make sense to have auth without tls. However there could be valid cases where auth is not required by tls is required.\nIf in the current state we say that we always want to have both enabled then we have a bit confusing configuration:\nsecurityEnabled - enables only auth part\ntlsEnabled - enables tls and auth (this is what confuses me)\nWe need either\n(a) securityEnabled - enables both auth and tls. And don't introduce tlsEnabled property at all\n(b) Have both properties present and require both to be enabled or none. But tlsEnabled shouldn't change auth state.\nWhat do you think?", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r482305914", "createdAt": "2020-09-02T18:53:54Z", "author": {"login": "medvedevigorek"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "diffHunk": "@@ -149,18 +157,27 @@ public static Service createPravegaSegmentStoreService(final URI zkUri, final UR\n     }\n \n     public static ClientConfig buildClientConfig(URI controllerUri) {\n-        if (!AUTH_ENABLED) {\n-            log.debug(\"Generating config with auth disabled.\");\n-            return ClientConfig.builder().controllerURI(controllerUri).build();\n-        } else {\n+        if (TLS_AND_AUTH_ENABLED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY0OTk3NQ=="}, "originalCommit": {"oid": "3e587416e462e0dd808949278da9599184d89f06"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxNjI4NA==", "bodyText": "Yes Igor, it is too big a change for these system tests. May I please address it separately ? The issue is that pravega-operator deploys pravega cluster with the admin username and password and this can be fixed outside pravega repository first and accomodated in SDP. Thanks,", "url": "https://github.com/pravega/pravega/pull/5059#discussion_r482316284", "createdAt": "2020-09-02T19:05:03Z", "author": {"login": "ravibeta"}, "path": "test/system/src/main/java/io/pravega/test/system/framework/Utils.java", "diffHunk": "@@ -149,18 +157,27 @@ public static Service createPravegaSegmentStoreService(final URI zkUri, final UR\n     }\n \n     public static ClientConfig buildClientConfig(URI controllerUri) {\n-        if (!AUTH_ENABLED) {\n-            log.debug(\"Generating config with auth disabled.\");\n-            return ClientConfig.builder().controllerURI(controllerUri).build();\n-        } else {\n+        if (TLS_AND_AUTH_ENABLED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTY0OTk3NQ=="}, "originalCommit": {"oid": "3e587416e462e0dd808949278da9599184d89f06"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4864, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}