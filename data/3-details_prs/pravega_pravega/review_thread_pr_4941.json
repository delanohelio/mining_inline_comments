{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3ODQwMjU1", "number": 4941, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjoyNjoyMVrOENkLBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzo1Mzo1M1rOEO89vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU5NTg5OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/Transaction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjoyNjoyMVrOGwRrdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo1MDoxNlrOGyzs6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDQ4NA==", "bodyText": "This comment does not add value. Can you please explain in which case, as an example, this method will throw this exception?", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274484", "createdAt": "2020-07-12T06:26:21Z", "author": {"login": "eolivelli"}, "path": "client/src/main/java/io/pravega/client/stream/Transaction.java", "diffHunk": "@@ -92,13 +92,16 @@\n \n     /**\n      * Drops the transaction, causing all events written to it to be deleted.\n+     *\n+     * @throws TxnFailedException Error aborting transaction: FAILURE\n      */\n-    void abort();\n+    void abort() throws TxnFailedException;\n \n     /**\n      * Gets the status of the transaction.\n      *\n+     *  @throws TxnFailedException This exception could be thrown on checkStatus", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyOTA2NQ==", "bodyText": "Yes Enrico it does not throw TxnFailedException anymore.", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455929065", "createdAt": "2020-07-16T16:50:16Z", "author": {"login": "ravibeta"}, "path": "client/src/main/java/io/pravega/client/stream/Transaction.java", "diffHunk": "@@ -92,13 +92,16 @@\n \n     /**\n      * Drops the transaction, causing all events written to it to be deleted.\n+     *\n+     * @throws TxnFailedException Error aborting transaction: FAILURE\n      */\n-    void abort();\n+    void abort() throws TxnFailedException;\n \n     /**\n      * Gets the status of the transaction.\n      *\n+     *  @throws TxnFailedException This exception could be thrown on checkStatus", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDQ4NA=="}, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU5NjIxOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/Transaction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjoyNjo1OFrOGwRrqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMzo1ODo0OFrOGw-9cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDUzNw==", "bodyText": "This is weird from the user point of view.\nTxnFailedException sounds like the transaction is broken or you broke it by calling this method.\nHere I would expect some new TxNotValidException", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274537", "createdAt": "2020-07-12T06:26:58Z", "author": {"login": "eolivelli"}, "path": "client/src/main/java/io/pravega/client/stream/Transaction.java", "diffHunk": "@@ -92,13 +92,16 @@\n \n     /**\n      * Drops the transaction, causing all events written to it to be deleted.\n+     *\n+     * @throws TxnFailedException Error aborting transaction: FAILURE\n      */\n-    void abort();\n+    void abort() throws TxnFailedException;\n \n     /**\n      * Gets the status of the transaction.\n      *\n+     *  @throws TxnFailedException This exception could be thrown on checkStatus\n      *  @return Current status of the transaction\n      */\n-    Status checkStatus();\n+    Status checkStatus() throws TxnFailedException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNjM3MA==", "bodyText": "Yes Status includes aborted.", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r454016370", "createdAt": "2020-07-13T23:58:48Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/stream/Transaction.java", "diffHunk": "@@ -92,13 +92,16 @@\n \n     /**\n      * Drops the transaction, causing all events written to it to be deleted.\n+     *\n+     * @throws TxnFailedException Error aborting transaction: FAILURE\n      */\n-    void abort();\n+    void abort() throws TxnFailedException;\n \n     /**\n      * Gets the status of the transaction.\n      *\n+     *  @throws TxnFailedException This exception could be thrown on checkStatus\n      *  @return Current status of the transaction\n      */\n-    Status checkStatus();\n+    Status checkStatus() throws TxnFailedException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDUzNw=="}, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU5NjUzOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjoyNzozMlrOGwRrzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo1MDozOFrOGyzt5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDU3Mw==", "bodyText": "This kind of comments are not useful to the user", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274573", "createdAt": "2020-07-12T06:27:32Z", "author": {"login": "eolivelli"}, "path": "client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java", "diffHunk": "@@ -26,17 +26,19 @@\n      * Start a new transaction on this stream. This allows events written to the transaction be written an committed atomically.\n      * Note that transactions can only be open for {@link EventWriterConfig#transactionTimeoutTime}.\n      * \n+     * @throws TxnFailedException This exception could be thrown on beginTxn", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyOTMxNw==", "bodyText": "Yes Enrico", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455929317", "createdAt": "2020-07-16T16:50:38Z", "author": {"login": "ravibeta"}, "path": "client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java", "diffHunk": "@@ -26,17 +26,19 @@\n      * Start a new transaction on this stream. This allows events written to the transaction be written an committed atomically.\n      * Note that transactions can only be open for {@link EventWriterConfig#transactionTimeoutTime}.\n      * \n+     * @throws TxnFailedException This exception could be thrown on beginTxn", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDU3Mw=="}, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU5NzI3OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjoyODo0MlrOGwRsKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo1Mzo0NlrOGyz1pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDY2Nw==", "bodyText": "How can a transaction that does not exist can fail?\nMaybe it is fine to have this error here but it deserves a little explanation in javadocs", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274667", "createdAt": "2020-07-12T06:28:42Z", "author": {"login": "eolivelli"}, "path": "client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java", "diffHunk": "@@ -26,17 +26,19 @@\n      * Start a new transaction on this stream. This allows events written to the transaction be written an committed atomically.\n      * Note that transactions can only be open for {@link EventWriterConfig#transactionTimeoutTime}.\n      * \n+     * @throws TxnFailedException This exception could be thrown on beginTxn\n      * @return A transaction through which multiple events can be written atomically.\n      */\n-    Transaction<Type> beginTxn();\n+    Transaction<Type> beginTxn() throws TxnFailedException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkzMTMwMA==", "bodyText": "Yes Enrico", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455931300", "createdAt": "2020-07-16T16:53:46Z", "author": {"login": "ravibeta"}, "path": "client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java", "diffHunk": "@@ -26,17 +26,19 @@\n      * Start a new transaction on this stream. This allows events written to the transaction be written an committed atomically.\n      * Note that transactions can only be open for {@link EventWriterConfig#transactionTimeoutTime}.\n      * \n+     * @throws TxnFailedException This exception could be thrown on beginTxn\n      * @return A transaction through which multiple events can be written atomically.\n      */\n-    Transaction<Type> beginTxn();\n+    Transaction<Type> beginTxn() throws TxnFailedException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDY2Nw=="}, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU5ODA0OnYy", "diffSide": "RIGHT", "path": "test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjozMDowMVrOGwRsjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo0ODoyMFrOGyzoOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDc2Ng==", "bodyText": "Methods that return a CP should not throw but return a failed CompletableFuture", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274766", "createdAt": "2020-07-12T06:30:01Z", "author": {"login": "eolivelli"}, "path": "test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java", "diffHunk": "@@ -81,10 +82,18 @@ protected void doStart() {\n         notifyStarted();\n         this.runTask = Futures\n                 .delayedFuture(INITIAL_DELAY, this.executorService)\n-                .thenCompose(v -> run());\n+                .thenCompose(v -> runWithException());\n         this.runTask.whenComplete((r, ex) -> stopAsync());\n     }\n \n+    private CompletableFuture<Void> runWithException() {\n+        try {\n+            return run();\n+        } catch (TxnFailedException ex) {\n+            throw new RuntimeException(ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNzg2Nw==", "bodyText": "Yes Enrico, these comments are outdated.", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455927867", "createdAt": "2020-07-16T16:48:20Z", "author": {"login": "ravibeta"}, "path": "test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java", "diffHunk": "@@ -81,10 +82,18 @@ protected void doStart() {\n         notifyStarted();\n         this.runTask = Futures\n                 .delayedFuture(INITIAL_DELAY, this.executorService)\n-                .thenCompose(v -> run());\n+                .thenCompose(v -> runWithException());\n         this.runTask.whenComplete((r, ex) -> stopAsync());\n     }\n \n+    private CompletableFuture<Void> runWithException() {\n+        try {\n+            return run();\n+        } catch (TxnFailedException ex) {\n+            throw new RuntimeException(ex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDc2Ng=="}, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU5ODQ1OnYy", "diffSide": "RIGHT", "path": "test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjozMDoyMVrOGwRsvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo0ODowOFrOGyzn1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDgxMg==", "bodyText": "The same here", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274812", "createdAt": "2020-07-12T06:30:21Z", "author": {"login": "eolivelli"}, "path": "test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java", "diffHunk": "@@ -119,7 +128,7 @@ protected void doStop() {\n     /**\n      * Executes the role of this Actor.\n      */\n-    protected abstract CompletableFuture<Void> run();\n+    protected abstract CompletableFuture<Void> run() throws TxnFailedException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNzc2NQ==", "bodyText": "Yes Enrico", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455927765", "createdAt": "2020-07-16T16:48:08Z", "author": {"login": "ravibeta"}, "path": "test/integration/src/main/java/io/pravega/test/integration/selftest/Actor.java", "diffHunk": "@@ -119,7 +128,7 @@ protected void doStop() {\n     /**\n      * Executes the role of this Actor.\n      */\n-    protected abstract CompletableFuture<Void> run();\n+    protected abstract CompletableFuture<Void> run() throws TxnFailedException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDgxMg=="}, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjU5OTAwOnYy", "diffSide": "RIGHT", "path": "test/integration/src/main/java/io/pravega/test/integration/selftest/StreamProducerDataSource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQwNjozMDo1NVrOGwRs-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo0Nzo1NlrOGyznZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDg3NQ==", "bodyText": "return a failed future  here and in other points", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r453274875", "createdAt": "2020-07-12T06:30:55Z", "author": {"login": "eolivelli"}, "path": "test/integration/src/main/java/io/pravega/test/integration/selftest/StreamProducerDataSource.java", "diffHunk": "@@ -258,5 +261,13 @@ private void postStreamDeletion(String name) {\n         this.state.recordDeletedStream(name);\n     }\n \n+    private CompletableFuture<Void> deleteStreamThrowing(String name, Duration timeout) {\n+        try {\n+            return this.store.deleteStream(name, this.config.getTimeout());\n+        } catch (TxnFailedException ex) {\n+            throw new CompletionException(ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNzY1NA==", "bodyText": "Yes Enrico", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455927654", "createdAt": "2020-07-16T16:47:56Z", "author": {"login": "ravibeta"}, "path": "test/integration/src/main/java/io/pravega/test/integration/selftest/StreamProducerDataSource.java", "diffHunk": "@@ -258,5 +261,13 @@ private void postStreamDeletion(String name) {\n         this.state.recordDeletedStream(name);\n     }\n \n+    private CompletableFuture<Void> deleteStreamThrowing(String name, Duration timeout) {\n+        try {\n+            return this.store.deleteStream(name, this.config.getTimeout());\n+        } catch (TxnFailedException ex) {\n+            throw new CompletionException(ex);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzI3NDg3NQ=="}, "originalCommit": {"oid": "664e756ebd2f79ba9ab3d0cb3815a0061d3713fa"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTY0NzA3OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/Transaction.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMzo1Nzo0OFrOGw-8Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMzo1Nzo0OFrOGw-8Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNjA5MQ==", "bodyText": "This is a bit confusing. If failing the transaction fails it throws TxnFailedException but this is exactly the opposite of what happened. If the transaction has failed then this should return successfully.", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r454016091", "createdAt": "2020-07-13T23:57:48Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/stream/Transaction.java", "diffHunk": "@@ -92,13 +92,16 @@\n \n     /**\n      * Drops the transaction, causing all events written to it to be deleted.\n+     *\n+     * @throws TxnFailedException Error aborting transaction: FAILURE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTY1NDQ0OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMDowMToyN1rOGw_Aww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMDowMToyN1rOGw_Aww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNzIxOQ==", "bodyText": "I don't think we want this behavior.\nIt seems legitimate to me to do:\ngetTxn(id).checkStatus()\n\nIn this case I would expect the result to return whatever the status was even if it is not OPEN.\nIf the code doesn't work this way. we should open an issue.", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r454017219", "createdAt": "2020-07-14T00:01:27Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/stream/TransactionalEventStreamWriter.java", "diffHunk": "@@ -26,17 +26,19 @@\n      * Start a new transaction on this stream. This allows events written to the transaction be written an committed atomically.\n      * Note that transactions can only be open for {@link EventWriterConfig#transactionTimeoutTime}.\n      * \n+     * @throws TxnFailedException The Transaction is no longer in state {@link Transaction.Status#OPEN}\n      * @return A transaction through which multiple events can be written atomically.\n      */\n-    Transaction<Type> beginTxn();\n+    Transaction<Type> beginTxn() throws TxnFailedException;\n \n     /**\n      * Returns a previously created transaction.\n      * \n      * @param transactionId The result retained from calling {@link Transaction#getTxnId()}\n+     * @throws TxnFailedException The Transaction is no longer in state {@link Transaction.Status#OPEN}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTY1NjY1OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMDowMjozM1rOGw_CBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMDowMjozM1rOGw_CBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNzU0MA==", "bodyText": "I think what we really want if for the controller client to dictate the exception type.\nSo instead of converting this, I think we should instead call getThrowingException which will just pass up whatever the underlying error was.", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r454017540", "createdAt": "2020-07-14T00:02:33Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "diffHunk": "@@ -144,15 +144,15 @@ public void abort() {\n                         log.debug(\"Got exception while writing to transaction on abort: {}\", e.getMessage());\n                     }\n                 }\n-                getAndHandleExceptions(controller.abortTransaction(stream, txId), RuntimeException::new);\n+                getAndHandleExceptions(controller.abortTransaction(stream, txId), TxnFailedException::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTY1NzExOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMDowMjo0NFrOGw_CRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMDowMjo0NFrOGw_CRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNzYwNQ==", "bodyText": "Same here", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r454017605", "createdAt": "2020-07-14T00:02:44Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "diffHunk": "@@ -176,9 +176,9 @@ private void throwIfClosed() throws TxnFailedException {\n     }\n \n     @Override\n-    public Transaction<Type> beginTxn() {\n+    public Transaction<Type> beginTxn() throws TxnFailedException {\n         TxnSegments txnSegments = getAndHandleExceptions(controller.createTransaction(stream, config.getTransactionTimeoutTime()),\n-                RuntimeException::new);\n+                TxnFailedException::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTY1ODE5OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMDowMzoyN1rOGw_C-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMDowMzoyN1rOGw_C-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAxNzc4NQ==", "bodyText": "same here", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r454017785", "createdAt": "2020-07-14T00:03:27Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "diffHunk": "@@ -198,16 +198,16 @@ private void throwIfClosed() throws TxnFailedException {\n     }\n \n     @Override\n-    public Transaction<Type> getTxn(UUID txId) {\n+    public Transaction<Type> getTxn(UUID txId) throws TxnFailedException {\n         // check if the transaction is open.\n-        Status status = getAndHandleExceptions(controller.checkTransactionStatus(stream, txId), RuntimeException::new);\n+        Status status = getAndHandleExceptions(controller.checkTransactionStatus(stream, txId), TxnFailedException::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22b4ebe8fbee8c92bf0c0dcc72d19780a489b4a8"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTE0MTE5OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzo1MjoxMlrOGyZJNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo0NDozM1rOGyzfDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5Mzk0MQ==", "bodyText": "Observation : The abort Transaction operations on the controller are idempotent, hence calling an abortTransaction() successively will not throw an error.(TnxFailedException or any other error).\nThe controller client will throw a TxnFailedException if the txn id is not found by the controller during abort().", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455493941", "createdAt": "2020-07-16T03:52:12Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "diffHunk": "@@ -145,15 +144,15 @@ public void abort() {\n                         log.debug(\"Got exception while writing to transaction on abort: {}\", e.getMessage());\n                     }\n                 }\n-                getAndHandleExceptions(controller.abortTransaction(stream, txId), RuntimeException::new);\n+                Futures.getThrowingException(controller.abortTransaction(stream, txId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c8ee1458493fe05c04b0c60732f48d2c131d8b4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNTUxNg==", "bodyText": "Yes Sandeep", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455925516", "createdAt": "2020-07-16T16:44:33Z", "author": {"login": "ravibeta"}, "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "diffHunk": "@@ -145,15 +144,15 @@ public void abort() {\n                         log.debug(\"Got exception while writing to transaction on abort: {}\", e.getMessage());\n                     }\n                 }\n-                getAndHandleExceptions(controller.abortTransaction(stream, txId), RuntimeException::new);\n+                Futures.getThrowingException(controller.abortTransaction(stream, txId));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5Mzk0MQ=="}, "originalCommit": {"oid": "7c8ee1458493fe05c04b0c60732f48d2c131d8b4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTE0MzY0OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwMzo1Mzo1M1rOGyZKpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjo0NDowM1rOGyzd4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NDMwOA==", "bodyText": "checkTransactionStatus will never throw a TxnFailedException ; as I understand the intent here is to remove redundant RuntimeException wrapping.", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455494308", "createdAt": "2020-07-16T03:53:53Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "diffHunk": "@@ -145,15 +144,15 @@ public void abort() {\n                         log.debug(\"Got exception while writing to transaction on abort: {}\", e.getMessage());\n                     }\n                 }\n-                getAndHandleExceptions(controller.abortTransaction(stream, txId), RuntimeException::new);\n+                Futures.getThrowingException(controller.abortTransaction(stream, txId));\n                 closed.set(true);\n             }\n         }\n \n         @Override\n         public Status checkStatus() {\n             log.info(\"Check transaction status {}\", txId);\n-            return getAndHandleExceptions(controller.checkTransactionStatus(stream, txId), RuntimeException::new);\n+            return Futures.getThrowingException(controller.checkTransactionStatus(stream, txId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c8ee1458493fe05c04b0c60732f48d2c131d8b4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkyNTIxNw==", "bodyText": "Yes Sandeep", "url": "https://github.com/pravega/pravega/pull/4941#discussion_r455925217", "createdAt": "2020-07-16T16:44:03Z", "author": {"login": "ravibeta"}, "path": "client/src/main/java/io/pravega/client/stream/impl/TransactionalEventStreamWriterImpl.java", "diffHunk": "@@ -145,15 +144,15 @@ public void abort() {\n                         log.debug(\"Got exception while writing to transaction on abort: {}\", e.getMessage());\n                     }\n                 }\n-                getAndHandleExceptions(controller.abortTransaction(stream, txId), RuntimeException::new);\n+                Futures.getThrowingException(controller.abortTransaction(stream, txId));\n                 closed.set(true);\n             }\n         }\n \n         @Override\n         public Status checkStatus() {\n             log.info(\"Check transaction status {}\", txId);\n-            return getAndHandleExceptions(controller.checkTransactionStatus(stream, txId), RuntimeException::new);\n+            return Futures.getThrowingException(controller.checkTransactionStatus(stream, txId));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQ5NDMwOA=="}, "originalCommit": {"oid": "7c8ee1458493fe05c04b0c60732f48d2c131d8b4"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4791, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}