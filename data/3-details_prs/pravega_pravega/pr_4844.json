{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3ODQ1NTgz", "number": 4844, "title": "Issue 4845: StreamInfo should indicate if the Stream is sealed.", "bodyText": "Change log description\nStreamInfo obtained via io.pravega.client.admin.impl.StreamManagerImpl#getStreamInfo(java.lang.String, java.lang.String)\nshould indicate if the Stream is sealed.\nPurpose of the change\nFixes #4845\nWhat the code does\nio.pravega.client.admin.impl.StreamManagerImpl#getStreamInfo(java.lang.String, java.lang.String)\nnow indicates if the Stream is sealed.\nController.getCurrentSegments() returns an empty list if the Stream is sealed. The code uses this behavior to check if the Stream is sealed.\nHow to verify it\nAll the existing and newly added tests should pass.", "createdAt": "2020-06-04T13:36:57Z", "url": "https://github.com/pravega/pravega/pull/4844", "merged": true, "mergeCommit": {"oid": "977c6fd9e29c8cf2a06f945863740dab4a8a7da8"}, "closed": true, "closedAt": "2020-06-05T08:41:08Z", "author": {"login": "shrids"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcn-DJmgH2gAyNDI3ODQ1NTgzOjA3MWRjZWM5NzVlZWQyNzgyMWMzN2UwYTM2ZDllODhhNmI0YWZlODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoOirUAFqTQyNTEwNjY2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "071dcec975eed27821c37e0a36d9e88a6b4afe87", "author": {"user": {"login": "shrids", "name": "Sandeep"}}, "url": "https://github.com/pravega/pravega/commit/071dcec975eed27821c37e0a36d9e88a6b4afe87", "committedDate": "2020-06-04T13:26:41Z", "message": "Enable Sealed Stream status.\n\nSigned-off-by: Sandeep <sandeep.shridhar@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6410222f4dcf34fc2a11660ba2e29b60b372936b", "author": {"user": {"login": "shrids", "name": "Sandeep"}}, "url": "https://github.com/pravega/pravega/commit/6410222f4dcf34fc2a11660ba2e29b60b372936b", "committedDate": "2020-06-04T13:35:12Z", "message": "Java docs.\n\nSigned-off-by: Sandeep <sandeep.shridhar@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41bfe3a76ecd6e436c1f146ebbcf970bf22fbbe3", "author": {"user": {"login": "shrids", "name": "Sandeep"}}, "url": "https://github.com/pravega/pravega/commit/41bfe3a76ecd6e436c1f146ebbcf970bf22fbbe3", "committedDate": "2020-06-04T15:57:14Z", "message": "Merge branch 'master' into issue-sealedStream"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NjQ0NjAw", "url": "https://github.com/pravega/pravega/pull/4844#pullrequestreview-424644600", "createdAt": "2020-06-04T16:52:26Z", "commit": {"oid": "41bfe3a76ecd6e436c1f146ebbcf970bf22fbbe3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjo1MjoyNlrOGfPCEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjo1MjoyNlrOGfPCEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQwNTMzMQ==", "bodyText": "I wouldn't say \"stream state\". Maybe at this point sealed is the only way to describe a Stream's state, but maybe in the future we want to add some other info. I would keep this simple. For example: \"Indicates whether the Stream is sealed (true) or not (false). If a stream is sealed, the no further Events can be written to it.\" ( <-- feel free to include any other operations that will be denied)", "url": "https://github.com/pravega/pravega/pull/4844#discussion_r435405331", "createdAt": "2020-06-04T16:52:26Z", "author": {"login": "andreipaduroiu"}, "path": "client/src/main/java/io/pravega/client/admin/StreamInfo.java", "diffHunk": "@@ -45,4 +46,9 @@\n      * {@link StreamCut} representing the current HEAD of the stream.\n      */\n     private final StreamCut headStreamCut;\n+\n+    /**\n+     * Represents the stream state. It is set to True if the stream is Sealed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41bfe3a76ecd6e436c1f146ebbcf970bf22fbbe3"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NzY3MDIx", "url": "https://github.com/pravega/pravega/pull/4844#pullrequestreview-424767021", "createdAt": "2020-06-04T19:34:32Z", "commit": {"oid": "41bfe3a76ecd6e436c1f146ebbcf970bf22fbbe3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0Nzg2Mzk4", "url": "https://github.com/pravega/pravega/pull/4844#pullrequestreview-424786398", "createdAt": "2020-06-04T20:03:05Z", "commit": {"oid": "41bfe3a76ecd6e436c1f146ebbcf970bf22fbbe3"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDowMzowNVrOGfV2hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDowMzowNVrOGfV2hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUxNzA2MA==", "bodyText": "What about calling getStreamInfo before sealStream and verify that info.isSealed() returns false?", "url": "https://github.com/pravega/pravega/pull/4844#discussion_r435517060", "createdAt": "2020-06-04T20:03:05Z", "author": {"login": "eolivelli"}, "path": "client/src/test/java/io/pravega/client/admin/impl/StreamManagerImplTest.java", "diffHunk": "@@ -127,9 +132,75 @@ public Void answer(InvocationOnMock invocation) throws Throwable {\n         assertNotNull(info.getHeadStreamCut());\n         assertEquals(stream, info.getHeadStreamCut().asImpl().getStream());\n         assertEquals(3, info.getHeadStreamCut().asImpl().getPositions().size());\n+        assertFalse(info.isSealed());\n     }\n-    \n-    @Test//(timeout = 10000) \n+\n+    @Test(timeout = 10000)\n+    public void testSealedStream() {\n+        final String streamName = \"stream\";\n+        final Stream stream = new StreamImpl(defaultScope, streamName);\n+\n+        // Setup Mocks\n+        MockConnectionFactoryImpl connectionFactory = new MockConnectionFactoryImpl();\n+        ClientConnection connection = mock(ClientConnection.class);\n+        PravegaNodeUri location = new PravegaNodeUri(\"localhost\", 0);\n+        Mockito.doAnswer(new Answer<Void>() {\n+            @Override\n+            public Void answer(InvocationOnMock invocation) throws Throwable {\n+                WireCommands.CreateSegment request = (WireCommands.CreateSegment) invocation.getArgument(0);\n+                connectionFactory.getProcessor(location)\n+                                 .process(new WireCommands.SegmentCreated(request.getRequestId(), request.getSegment()));\n+                return null;\n+            }\n+        }).when(connection).sendAsync(Mockito.any(WireCommands.CreateSegment.class),\n+                Mockito.any(ClientConnection.CompletedCallback.class));\n+\n+        Mockito.doAnswer(new Answer<Void>() {\n+            @Override\n+            public Void answer(InvocationOnMock invocation) throws Throwable {\n+                WireCommands.GetStreamSegmentInfo request = (WireCommands.GetStreamSegmentInfo) invocation.getArgument(0);\n+                connectionFactory.getProcessor(location)\n+                                 .process(new WireCommands.StreamSegmentInfo(request.getRequestId(), request.getSegmentName(), true,\n+                                         false, false, 0, 0, 0));\n+                return null;\n+            }\n+        }).when(connection).sendAsync(Mockito.any(WireCommands.GetStreamSegmentInfo.class),\n+                Mockito.any(ClientConnection.CompletedCallback.class));\n+        connectionFactory.provideConnection(location, connection);\n+        MockController mockController = spy(new MockController(location.getEndpoint(), location.getPort(),\n+                connectionFactory, true));\n+\n+        doReturn(CompletableFuture.completedFuture(true)).when(mockController).sealStream(defaultScope, streamName);\n+        StreamSegments empty = new StreamSegments(new TreeMap<>(), \"\");\n+        doReturn(CompletableFuture.completedFuture(empty) ).when(mockController).getCurrentSegments(defaultScope, streamName);\n+\n+        // Create a StreamManager\n+        @Cleanup\n+        final StreamManager streamManager = new StreamManagerImpl(mockController, connectionFactory);\n+\n+        // Create a scope and stream and seal it.\n+        streamManager.createScope(defaultScope);\n+        streamManager.createStream(defaultScope, streamName, StreamConfiguration.builder()\n+                                                                                .scalingPolicy(ScalingPolicy.fixed(3))\n+                                                                                .build());\n+        streamManager.sealStream(defaultScope, streamName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41bfe3a76ecd6e436c1f146ebbcf970bf22fbbe3"}, "originalPosition": 82}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "549ed96643e11840683ebbd0bec6bbcbcf6b1eeb", "author": {"user": {"login": "shrids", "name": "Sandeep"}}, "url": "https://github.com/pravega/pravega/commit/549ed96643e11840683ebbd0bec6bbcbcf6b1eeb", "committedDate": "2020-06-05T02:32:33Z", "message": "CR Changes: Improve assertions and javadoc.\n\nSigned-off-by: Sandeep <sandeep.shridhar@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MDAzNTAx", "url": "https://github.com/pravega/pravega/pull/4844#pullrequestreview-425003501", "createdAt": "2020-06-05T05:23:28Z", "commit": {"oid": "549ed96643e11840683ebbd0bec6bbcbcf6b1eeb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1MTA2NjYx", "url": "https://github.com/pravega/pravega/pull/4844#pullrequestreview-425106661", "createdAt": "2020-06-05T08:39:36Z", "commit": {"oid": "549ed96643e11840683ebbd0bec6bbcbcf6b1eeb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3519, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}