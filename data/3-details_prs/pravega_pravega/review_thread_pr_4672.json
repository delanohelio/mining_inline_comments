{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMDkyNTM0", "number": 4672, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowNDowMVrODvqCNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzozNToxMFrODv_vZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjk4MzU3OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/PositionImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzowNDowMVrOGCNb0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOTo0NDoyNVrOGCnb-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MDQ1MA==", "bodyText": "This will break backward compatibility. Old code does not know how to deal with version 1.\nDo this using a revision.", "url": "https://github.com/pravega/pravega/pull/4672#discussion_r404970450", "createdAt": "2020-04-07T17:04:01Z", "author": {"login": "andreipaduroiu"}, "path": "client/src/main/java/io/pravega/client/stream/impl/PositionImpl.java", "diffHunk": "@@ -118,13 +118,14 @@ protected PositionBuilder newBuilder() {\n \n         @Override\n         protected byte getWriteVersion() {\n-            return 0;\n+            return 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3b6ef25359c60698811bc00c985c319c15d29b64"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTI0Nzk5Ng==", "bodyText": "This bug prevents serialization with the older version of the client for -1L.\nI used a new version number since the serializing via RevisionDataOutput#writeCompactSignedLong (new change) cannot be deserialized via RevisionedDataOutput#readCompactLong (old change).\nI have also added a test to verify if serialization via version 0 can be deserialized via version 1.", "url": "https://github.com/pravega/pravega/pull/4672#discussion_r405247996", "createdAt": "2020-04-08T04:14:05Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/stream/impl/PositionImpl.java", "diffHunk": "@@ -118,13 +118,14 @@ protected PositionBuilder newBuilder() {\n \n         @Override\n         protected byte getWriteVersion() {\n-            return 0;\n+            return 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MDQ1MA=="}, "originalCommit": {"oid": "3b6ef25359c60698811bc00c985c319c15d29b64"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM5NjQ3Mg==", "bodyText": "Done, I have updated the PR to ensure it is compatible either ways by using revision.", "url": "https://github.com/pravega/pravega/pull/4672#discussion_r405396472", "createdAt": "2020-04-08T09:44:25Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/stream/impl/PositionImpl.java", "diffHunk": "@@ -118,13 +118,14 @@ protected PositionBuilder newBuilder() {\n \n         @Override\n         protected byte getWriteVersion() {\n-            return 0;\n+            return 1;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk3MDQ1MA=="}, "originalCommit": {"oid": "3b6ef25359c60698811bc00c985c319c15d29b64"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNjUzOTg4OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/PositionImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzozNToxMFrOGCvi3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzozNToxMFrOGCvi3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUyOTMwOQ==", "bodyText": "TIP: you can use a syntactic shortcut like RevisionDataOutput::writeCompactSignedLong", "url": "https://github.com/pravega/pravega/pull/4672#discussion_r405529309", "createdAt": "2020-04-08T13:35:10Z", "author": {"login": "andreipaduroiu"}, "path": "client/src/main/java/io/pravega/client/stream/impl/PositionImpl.java", "diffHunk": "@@ -147,7 +157,20 @@ private void write01(PositionImpl position, RevisionDataOutput revisionDataOutpu\n             Map<Segment, Range> map = position.segmentRanges;\n             revisionDataOutput.writeMap(map, (out, s) -> out.writeUTF(s.getScopedName()), PositionSerializer::writeRange);\n         }\n-        \n+\n+        private void write02(PositionImpl position, RevisionDataOutput revisionDataOutput) throws IOException {\n+            // serialize offset segment again as CompactSignedLong ensure serialization\n+            Map<Segment, Long> map = position.getOwnedSegmentsWithOffsets();\n+            revisionDataOutput.writeMap(map, (out, s) -> out.writeUTF(s.getScopedName()),\n+                    (out, offset) -> out.writeCompactSignedLong(offset));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5496cf015ef07d98096cc110ea7cd30de8468316"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4483, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}