{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg0NjA2NDA0", "number": 5175, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMzo1MTo0MlrOEiXxUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDowNDoyMFrOEiX5HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDc2NDk5OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/admin/impl/StreamManagerImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMzo1MTo0MlrOHQNVYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwMzo1MTo0MlrOHQNVYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc1NzczMA==", "bodyText": "Can we update the java doc too? The user would need to catch this exception while deleting a stream and he can choose to retry deleting the scope.", "url": "https://github.com/pravega/pravega/pull/5175#discussion_r486757730", "createdAt": "2020-09-11T03:51:42Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/admin/impl/StreamManagerImpl.java", "diffHunk": "@@ -158,8 +160,16 @@ public boolean deleteScope(String scopeName, boolean deleteStreams) {\n                 Stream stream = iterator.next();\n                 // If the stream was removed by another request while we attempted to seal it, we could get InvalidStreamException. \n                 Futures.getThrowingException(Futures.exceptionallyExpecting(controller.sealStream(stream.getScope(), stream.getStreamName()),\n-                          e -> Exceptions.unwrap(e) instanceof InvalidStreamException, null));\n-                Futures.getThrowingException(controller.deleteStream(stream.getScope(), stream.getStreamName()));\n+                        e -> {\n+                            Throwable unwrap = Exceptions.unwrap(e);\n+                            // ignore failures if the stream doesnt exist or we are unable to seal it. \n+                            return unwrap instanceof InvalidStreamException || unwrap instanceof ControllerFailureException;\n+                        }, false)\n+                        .thenCompose(sealed -> controller.deleteStream(stream.getScope(), stream.getStreamName())\n+                                                         .exceptionally(e -> {\n+                                                             String message = String.format(\"Failed to seal and delete stream %s\", stream.getStreamName());\n+                                                             throw new DeleteScopeFailedException(message, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e53dd03c028389a538185acb1ddb145ed1b8dc94"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0NDc4NDkyOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/DeleteScopeFailedException.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDowNDoyMFrOHQNhDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQwNDowNDoyMFrOHQNhDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Njc2MDcxOA==", "bodyText": "A checked exception would make this more clear to the user right?", "url": "https://github.com/pravega/pravega/pull/5175#discussion_r486760718", "createdAt": "2020-09-11T04:04:20Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/stream/DeleteScopeFailedException.java", "diffHunk": "@@ -0,0 +1,30 @@\n+/**\n+  * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.client.stream;\n+\n+/**\n+ * Delete scope failed, typically because we failed to seal and delete the streams. \n+ */\n+public class DeleteScopeFailedException extends RuntimeException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e53dd03c028389a538185acb1ddb145ed1b8dc94"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4687, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}