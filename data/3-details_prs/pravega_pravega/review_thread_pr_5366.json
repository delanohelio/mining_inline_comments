{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MDg1NjU1", "number": 5366, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNjo1OTozMFrOE_eimg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzowNzo1N1rOE_erTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTk2MTIyOnYy", "diffSide": "RIGHT", "path": "shared/security/src/main/java/io/pravega/shared/security/auth/AuthorizationResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNjo1OTozMFrOH9M42Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwOTo1NjowN1rOH9S_JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkzNjM0NQ==", "bodyText": "Since only 'scope' is taken as arg to this method, please remove 'kvtname' from javadoc", "url": "https://github.com/pravega/pravega/pull/5366#discussion_r533936345", "createdAt": "2020-12-02T06:59:30Z", "author": {"login": "pbelgundi"}, "path": "shared/security/src/main/java/io/pravega/shared/security/auth/AuthorizationResource.java", "diffHunk": "@@ -90,6 +90,16 @@\n      */\n     String ofReaderGroupInScope(String scopeName, String readerGroupName);\n \n+    /**\n+     * Creates a resource representation for use in authorization of actions pertaining to the collection of Key-Value\n+     * tables within the specified scope.\n+     *\n+     * @param scopeName the name of the scope\n+     * @throws NullPointerException if {@code scopeName} or {@code kvtName} are null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2484c4184543f064d6109915dcc3dd07277bd0af"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAzNjI2MQ==", "bodyText": "Sure, I've fixed it in the latest commit.", "url": "https://github.com/pravega/pravega/pull/5366#discussion_r534036261", "createdAt": "2020-12-02T09:56:07Z", "author": {"login": "ravisharda"}, "path": "shared/security/src/main/java/io/pravega/shared/security/auth/AuthorizationResource.java", "diffHunk": "@@ -90,6 +90,16 @@\n      */\n     String ofReaderGroupInScope(String scopeName, String readerGroupName);\n \n+    /**\n+     * Creates a resource representation for use in authorization of actions pertaining to the collection of Key-Value\n+     * tables within the specified scope.\n+     *\n+     * @param scopeName the name of the scope\n+     * @throws NullPointerException if {@code scopeName} or {@code kvtName} are null", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkzNjM0NQ=="}, "originalCommit": {"oid": "2484c4184543f064d6109915dcc3dd07277bd0af"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0OTk4MzQ4OnYy", "diffSide": "RIGHT", "path": "controller/src/main/java/io/pravega/controller/server/rpc/grpc/v1/ControllerServiceImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzowNzo1N1rOH9NFpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxMDoyOTo1M1rOH9UaJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkzOTYyMg==", "bodyText": "Not just create but listKeyValueTablesInScope also needs to look at \"scope\" permissions instead of \"scope + kvt\" permissions", "url": "https://github.com/pravega/pravega/pull/5366#discussion_r533939622", "createdAt": "2020-12-02T07:07:57Z", "author": {"login": "pbelgundi"}, "path": "controller/src/main/java/io/pravega/controller/server/rpc/grpc/v1/ControllerServiceImpl.java", "diffHunk": "@@ -146,7 +146,7 @@ public void createKeyValueTable(KeyValueTableConfig request, StreamObserver<Crea\n                 scope, kvt);\n         log.info(requestTag.getRequestId(), \"createKeyValueTable called for KVTable {}/{}.\", scope, kvt);\n         authenticateExecuteAndProcessResults(() -> this.grpcAuthHelper.checkAuthorizationAndCreateToken(\n-                authorizationResource.ofKeyValueTableInScope(scope, kvt), AuthHandler.Permissions.READ_UPDATE),\n+                authorizationResource.ofKeyValueTablesInScope(scope), AuthHandler.Permissions.READ_UPDATE),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2484c4184543f064d6109915dcc3dd07277bd0af"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk0NzIxMQ==", "bodyText": "I see that lisStreamsInScope (ControllerServiceImpl) uses authorizationResource.ofStreamInScope(scopeName, x)\nwhere as StreamMetadataResourceImpl.listStreams uses authorizationResource.ofStreamsInScope(scopeName)...\nI believe create/list operations should be based on permissions for parent resource - scope (in case of Streams/KVTs)", "url": "https://github.com/pravega/pravega/pull/5366#discussion_r533947211", "createdAt": "2020-12-02T07:25:56Z", "author": {"login": "pbelgundi"}, "path": "controller/src/main/java/io/pravega/controller/server/rpc/grpc/v1/ControllerServiceImpl.java", "diffHunk": "@@ -146,7 +146,7 @@ public void createKeyValueTable(KeyValueTableConfig request, StreamObserver<Crea\n                 scope, kvt);\n         log.info(requestTag.getRequestId(), \"createKeyValueTable called for KVTable {}/{}.\", scope, kvt);\n         authenticateExecuteAndProcessResults(() -> this.grpcAuthHelper.checkAuthorizationAndCreateToken(\n-                authorizationResource.ofKeyValueTableInScope(scope, kvt), AuthHandler.Permissions.READ_UPDATE),\n+                authorizationResource.ofKeyValueTablesInScope(scope), AuthHandler.Permissions.READ_UPDATE),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkzOTYyMg=="}, "originalCommit": {"oid": "2484c4184543f064d6109915dcc3dd07277bd0af"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDAzMzk2Mg==", "bodyText": "listKeyValueTablesInScope appears to be using the same model that we have applied in other listing operations like listScopes and listStreamsInScope, and looks OK to me. The general rule for applying authorization in listing operations is:\n\nRequire READ permission on the parent resource. (to check whether the user is allowed to invoke the listing operation in the first place)\nFilter in objects for which the user explicitly has READ access on. (so that only authorized objects are returned among the population of all objects).\n\nTo illustrate the general rule, taking an example of listStreamsInScope operation, say:\n\nuser1 has been assigned READ permission on scope1 and scope1/stream2.\nuser2 has been assigned READ on scope1.\nuser3 has been assigned READ on scope2`.\nThe system has 3 streams under the scope - say, scope1/stream1,  scope1/stream2 and  scope1/stream3\n\nThe listStreamsInScope will return:\n\nA list containing a single stream stream2 for user1`\nAn empty list for user2\nAn authorization exception for user3.\n\nA similar rule seems to have been applied for Key-Value tables listing, which looks good to me.\nNow, switching to StreamMetadataResourceImpl.listStreams, it has a similar rule too, which is correct:\n\nIt first checks if the user has read access:\n\n  \n    \n      pravega/controller/src/main/java/io/pravega/controller/server/rest/resources/StreamMetadataResourceImpl.java\n    \n    \n        Lines 530 to 531\n      in\n      0e77c81\n    \n    \n    \n    \n\n        \n          \n           restAuthHelper.authorize(authHeader, \n        \n\n        \n          \n                   authorizationResource.ofStreamsInScope(scopeName), principal, READ); \n        \n    \n  \n\n\nIt then adds only authorized streams into the list of returned items:\n\n  \n    \n      pravega/controller/src/main/java/io/pravega/controller/server/rest/resources/StreamMetadataResourceImpl.java\n    \n    \n        Lines 545 to 546\n      in\n      0e77c81\n    \n    \n    \n    \n\n        \n          \n           if (restAuthHelper.isAuthorized(authHeader, authorizationResource.ofStreamInScope(scopeName, stream), \n        \n\n        \n          \n                   principal, READ)) { \n        \n    \n  \n\n\n\nSo, the behaviors of the listing operations look OK to me. Am I missing something?", "url": "https://github.com/pravega/pravega/pull/5366#discussion_r534033962", "createdAt": "2020-12-02T09:53:01Z", "author": {"login": "ravisharda"}, "path": "controller/src/main/java/io/pravega/controller/server/rpc/grpc/v1/ControllerServiceImpl.java", "diffHunk": "@@ -146,7 +146,7 @@ public void createKeyValueTable(KeyValueTableConfig request, StreamObserver<Crea\n                 scope, kvt);\n         log.info(requestTag.getRequestId(), \"createKeyValueTable called for KVTable {}/{}.\", scope, kvt);\n         authenticateExecuteAndProcessResults(() -> this.grpcAuthHelper.checkAuthorizationAndCreateToken(\n-                authorizationResource.ofKeyValueTableInScope(scope, kvt), AuthHandler.Permissions.READ_UPDATE),\n+                authorizationResource.ofKeyValueTablesInScope(scope), AuthHandler.Permissions.READ_UPDATE),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkzOTYyMg=="}, "originalCommit": {"oid": "2484c4184543f064d6109915dcc3dd07277bd0af"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDA1OTU1Nw==", "bodyText": "Thanks for explaining. It looks fine to me.", "url": "https://github.com/pravega/pravega/pull/5366#discussion_r534059557", "createdAt": "2020-12-02T10:29:53Z", "author": {"login": "pbelgundi"}, "path": "controller/src/main/java/io/pravega/controller/server/rpc/grpc/v1/ControllerServiceImpl.java", "diffHunk": "@@ -146,7 +146,7 @@ public void createKeyValueTable(KeyValueTableConfig request, StreamObserver<Crea\n                 scope, kvt);\n         log.info(requestTag.getRequestId(), \"createKeyValueTable called for KVTable {}/{}.\", scope, kvt);\n         authenticateExecuteAndProcessResults(() -> this.grpcAuthHelper.checkAuthorizationAndCreateToken(\n-                authorizationResource.ofKeyValueTableInScope(scope, kvt), AuthHandler.Permissions.READ_UPDATE),\n+                authorizationResource.ofKeyValueTablesInScope(scope), AuthHandler.Permissions.READ_UPDATE),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzkzOTYyMg=="}, "originalCommit": {"oid": "2484c4184543f064d6109915dcc3dd07277bd0af"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4553, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}