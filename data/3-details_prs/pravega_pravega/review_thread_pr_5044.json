{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NTY0NTQx", "number": 5044, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDozNzo1MVrOEYFYdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDozODoyOFrOEYFZbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjg5NDYzOnYy", "diffSide": "RIGHT", "path": "controller/src/main/java/io/pravega/controller/server/eventProcessor/ControllerEventProcessors.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDozNzo1MlrOHAOmWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNjowMDoyNlrOHASHfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwMTI0MA==", "bodyText": "You need to add a check inside truncate to verify if isRunning() == true. Otherwise we can stop this service, but since this still has a 10-second delay, it will execute one call of truncate and then cancel it. This may not be the intended behavior.", "url": "https://github.com/pravega/pravega/pull/5044#discussion_r470001240", "createdAt": "2020-08-13T14:37:52Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/main/java/io/pravega/controller/server/eventProcessor/ControllerEventProcessors.java", "diffHunk": "@@ -288,9 +300,67 @@ public boolean isReady() {\n             streamMetadataTasks.initializeStreamWriters(clientFactory, config.getRequestStreamName());\n             streamTransactionMetadataTasks.initializeStreamWriters(clientFactory, config);\n             tableMetadataTasks.initializeStreamWriters(clientFactory, config.getKvtStreamName());\n+\n+            long delay = truncationInterval.get();\n+            Futures.loop(this::isRunning, () -> Futures.delayedFuture(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14ca9d91ad5526d803c06403ba42063258c9a05d"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDA1ODg3OA==", "bodyText": "Added a Precondition on truncate method.\nAlthough its not really going to cause any incorrect behaviour even if an extra truncation ran (and would run until the executor is shutdown or curator is shutdown), as it is equivalent to us being in the middle of truncation when the service shutdown.", "url": "https://github.com/pravega/pravega/pull/5044#discussion_r470058878", "createdAt": "2020-08-13T16:00:26Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/eventProcessor/ControllerEventProcessors.java", "diffHunk": "@@ -288,9 +300,67 @@ public boolean isReady() {\n             streamMetadataTasks.initializeStreamWriters(clientFactory, config.getRequestStreamName());\n             streamTransactionMetadataTasks.initializeStreamWriters(clientFactory, config);\n             tableMetadataTasks.initializeStreamWriters(clientFactory, config.getKvtStreamName());\n+\n+            long delay = truncationInterval.get();\n+            Futures.loop(this::isRunning, () -> Futures.delayedFuture(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwMTI0MA=="}, "originalCommit": {"oid": "14ca9d91ad5526d803c06403ba42063258c9a05d"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjg5NzExOnYy", "diffSide": "RIGHT", "path": "controller/src/test/java/io/pravega/controller/server/eventProcessor/ControllerEventProcessorsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDozODoyOFrOHAOn-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDozODoyOFrOHAOn-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwMTY1Nw==", "bodyText": "Why don't you inherit from ThreadPoolTestBase which will manage the executor for you?", "url": "https://github.com/pravega/pravega/pull/5044#discussion_r470001657", "createdAt": "2020-08-13T14:38:28Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/test/java/io/pravega/controller/server/eventProcessor/ControllerEventProcessorsTest.java", "diffHunk": "@@ -50,18 +59,14 @@\n import static org.junit.Assert.assertTrue;\n import static org.mockito.ArgumentMatchers.any;\n import static org.mockito.ArgumentMatchers.anyString;\n-import static org.mockito.Mockito.doAnswer;\n-import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.times;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.*;\n \n public class ControllerEventProcessorsTest {\n     ScheduledExecutorService executor;\n \n     @Before\n     public void setUp() {\n-        executor = Executors.newSingleThreadScheduledExecutor();\n+        executor = Executors.newScheduledThreadPool(10);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14ca9d91ad5526d803c06403ba42063258c9a05d"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4851, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}