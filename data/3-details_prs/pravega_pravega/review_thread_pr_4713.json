{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NTUwMjU1", "number": 4713, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNzoxMDowM1rOD5sceg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwOTozMDoxNVrOEBTVNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxODIzNjEwOnYy", "diffSide": "RIGHT", "path": "config/config.properties", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQwNzoxMDowM1rOGRGf2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNTozNzo1N1rOGaPPRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4NTQzNQ==", "bodyText": "write here seems to refer to an IO write, should it be writer instead? Also, is it related to the previous configuration option above such that we need to add .noOp. there too?", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r420585435", "createdAt": "2020-05-06T07:10:03Z", "author": {"login": "fpj"}, "path": "config/config.properties", "diffHunk": "@@ -29,82 +29,82 @@\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n # activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.size=30\n \n # Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.storageThreadPool.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n # DataLog implementation for Tier 1 storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n # Storage implementation for Tier 2 storage.\n # Valid values: HDFS, FILESYSTEM, EXTENDEDS3, INMEMORY.\n # Default value: HDFS\n-# pravegaservice.storageImplementation=HDFS\n+# pravegaservice.storage.impl.name=HDFS\n \n # Storage NO-OP Mode: in No-Op mode, user stream segment writing is no-oped; user stream segment reading is not supported.\n # This mode is used to avoid storage interference in testing while still keep the system functioning as usual.\n # NOTE: pravegaservice.storageImplementation is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n # WARNING: Do NOT set NO-OP Mode to true in production environment! Data loss will happen!\n # Valid values: true, false\n # Default value: false\n-#storageextra.storageNoOpMode=false\n+#storageextra.noOpMode.enable=false\n \n # When Storage NO-OP Mode is true, storageWriteNoOpModeLatencyMillis is applied to write operation.\n # It is used to compensate the supposed latency if the storage is in operation, in order to make the test as real as possible.\n # This latency has no effect if storage is not in No-Op mode.\n # Valid values: non-negative integer\n # Default vale: 20 (milliseconds)\n-#storageextra.storageWriteNoOpLatencyMillis=20\n+#storageextra.write.noOp.latency.milliseconds=20", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ed200680e48f4508cea94923f0597efc3cda7c5"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg1NzE1OQ==", "bodyText": "@andreipaduroiu could you please clarify the purpose of this configuration item? Could you also suggest a better name for this (according to the new configuration guidelines referenced in the description)?", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r420857159", "createdAt": "2020-05-06T14:55:05Z", "author": {"login": "ravisharda"}, "path": "config/config.properties", "diffHunk": "@@ -29,82 +29,82 @@\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n # activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.size=30\n \n # Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.storageThreadPool.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n # DataLog implementation for Tier 1 storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n # Storage implementation for Tier 2 storage.\n # Valid values: HDFS, FILESYSTEM, EXTENDEDS3, INMEMORY.\n # Default value: HDFS\n-# pravegaservice.storageImplementation=HDFS\n+# pravegaservice.storage.impl.name=HDFS\n \n # Storage NO-OP Mode: in No-Op mode, user stream segment writing is no-oped; user stream segment reading is not supported.\n # This mode is used to avoid storage interference in testing while still keep the system functioning as usual.\n # NOTE: pravegaservice.storageImplementation is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n # WARNING: Do NOT set NO-OP Mode to true in production environment! Data loss will happen!\n # Valid values: true, false\n # Default value: false\n-#storageextra.storageNoOpMode=false\n+#storageextra.noOpMode.enable=false\n \n # When Storage NO-OP Mode is true, storageWriteNoOpModeLatencyMillis is applied to write operation.\n # It is used to compensate the supposed latency if the storage is in operation, in order to make the test as real as possible.\n # This latency has no effect if storage is not in No-Op mode.\n # Valid values: non-negative integer\n # Default vale: 20 (milliseconds)\n-#storageextra.storageWriteNoOpLatencyMillis=20\n+#storageextra.write.noOp.latency.milliseconds=20", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4NTQzNQ=="}, "originalCommit": {"oid": "1ed200680e48f4508cea94923f0597efc3cda7c5"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2ODE4Mg==", "bodyText": "@kevinhan88 wrote this thing. I would drop the write and just emphasize `noOp.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422168182", "createdAt": "2020-05-08T14:15:47Z", "author": {"login": "andreipaduroiu"}, "path": "config/config.properties", "diffHunk": "@@ -29,82 +29,82 @@\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n # activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.size=30\n \n # Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.storageThreadPool.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n # DataLog implementation for Tier 1 storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n # Storage implementation for Tier 2 storage.\n # Valid values: HDFS, FILESYSTEM, EXTENDEDS3, INMEMORY.\n # Default value: HDFS\n-# pravegaservice.storageImplementation=HDFS\n+# pravegaservice.storage.impl.name=HDFS\n \n # Storage NO-OP Mode: in No-Op mode, user stream segment writing is no-oped; user stream segment reading is not supported.\n # This mode is used to avoid storage interference in testing while still keep the system functioning as usual.\n # NOTE: pravegaservice.storageImplementation is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n # WARNING: Do NOT set NO-OP Mode to true in production environment! Data loss will happen!\n # Valid values: true, false\n # Default value: false\n-#storageextra.storageNoOpMode=false\n+#storageextra.noOpMode.enable=false\n \n # When Storage NO-OP Mode is true, storageWriteNoOpModeLatencyMillis is applied to write operation.\n # It is used to compensate the supposed latency if the storage is in operation, in order to make the test as real as possible.\n # This latency has no effect if storage is not in No-Op mode.\n # Valid values: non-negative integer\n # Default vale: 20 (milliseconds)\n-#storageextra.storageWriteNoOpLatencyMillis=20\n+#storageextra.write.noOp.latency.milliseconds=20", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4NTQzNQ=="}, "originalCommit": {"oid": "1ed200680e48f4508cea94923f0597efc3cda7c5"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3MDc2Nw==", "bodyText": "Actually, please be consistent with the above property. You use noOpMode and here you use noOp.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422170767", "createdAt": "2020-05-08T14:20:17Z", "author": {"login": "andreipaduroiu"}, "path": "config/config.properties", "diffHunk": "@@ -29,82 +29,82 @@\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n # activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.size=30\n \n # Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.storageThreadPool.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n # DataLog implementation for Tier 1 storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n # Storage implementation for Tier 2 storage.\n # Valid values: HDFS, FILESYSTEM, EXTENDEDS3, INMEMORY.\n # Default value: HDFS\n-# pravegaservice.storageImplementation=HDFS\n+# pravegaservice.storage.impl.name=HDFS\n \n # Storage NO-OP Mode: in No-Op mode, user stream segment writing is no-oped; user stream segment reading is not supported.\n # This mode is used to avoid storage interference in testing while still keep the system functioning as usual.\n # NOTE: pravegaservice.storageImplementation is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n # WARNING: Do NOT set NO-OP Mode to true in production environment! Data loss will happen!\n # Valid values: true, false\n # Default value: false\n-#storageextra.storageNoOpMode=false\n+#storageextra.noOpMode.enable=false\n \n # When Storage NO-OP Mode is true, storageWriteNoOpModeLatencyMillis is applied to write operation.\n # It is used to compensate the supposed latency if the storage is in operation, in order to make the test as real as possible.\n # This latency has no effect if storage is not in No-Op mode.\n # Valid values: non-negative integer\n # Default vale: 20 (milliseconds)\n-#storageextra.storageWriteNoOpLatencyMillis=20\n+#storageextra.write.noOp.latency.milliseconds=20", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4NTQzNQ=="}, "originalCommit": {"oid": "1ed200680e48f4508cea94923f0597efc3cda7c5"}, "originalPosition": 95}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE2NTgyOQ==", "bodyText": "Fixed. Also, I left the write in the name as it is apparently referring to write latency.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r430165829", "createdAt": "2020-05-26T05:37:57Z", "author": {"login": "ravisharda"}, "path": "config/config.properties", "diffHunk": "@@ -29,82 +29,82 @@\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n # activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.size=30\n \n # Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.storageThreadPool.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n # DataLog implementation for Tier 1 storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n # Storage implementation for Tier 2 storage.\n # Valid values: HDFS, FILESYSTEM, EXTENDEDS3, INMEMORY.\n # Default value: HDFS\n-# pravegaservice.storageImplementation=HDFS\n+# pravegaservice.storage.impl.name=HDFS\n \n # Storage NO-OP Mode: in No-Op mode, user stream segment writing is no-oped; user stream segment reading is not supported.\n # This mode is used to avoid storage interference in testing while still keep the system functioning as usual.\n # NOTE: pravegaservice.storageImplementation is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n # WARNING: Do NOT set NO-OP Mode to true in production environment! Data loss will happen!\n # Valid values: true, false\n # Default value: false\n-#storageextra.storageNoOpMode=false\n+#storageextra.noOpMode.enable=false\n \n # When Storage NO-OP Mode is true, storageWriteNoOpModeLatencyMillis is applied to write operation.\n # It is used to compensate the supposed latency if the storage is in operation, in order to make the test as real as possible.\n # This latency has no effect if storage is not in No-Op mode.\n # Valid values: non-negative integer\n # Default vale: 20 (milliseconds)\n-#storageextra.storageWriteNoOpLatencyMillis=20\n+#storageextra.write.noOp.latency.milliseconds=20", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDU4NTQzNQ=="}, "originalCommit": {"oid": "1ed200680e48f4508cea94923f0597efc3cda7c5"}, "originalPosition": 95}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODMyMTMwOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/util/Property.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoxNjo0NFrOGSnIog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODoyNDo1M1rOGXCtrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2ODczOA==", "bodyText": "Javadoc", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422168738", "createdAt": "2020-05-08T14:16:44Z", "author": {"login": "andreipaduroiu"}, "path": "common/src/main/java/io/pravega/common/util/Property.java", "diffHunk": "@@ -45,7 +47,11 @@\n      * @return A new instance of the Property class with the given default value.\n      */\n     public static <T> Property<T> named(String name, T defaultValue) {\n-        return new Property<>(name, defaultValue);\n+        return new Property<>(name, defaultValue, null);\n+    }\n+\n+    public static <T> Property<T> named(String name, T defaultValue, String legacyName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxNDg5Mw==", "bodyText": "Done.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r426814893", "createdAt": "2020-05-18T18:24:53Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/util/Property.java", "diffHunk": "@@ -45,7 +47,11 @@\n      * @return A new instance of the Property class with the given default value.\n      */\n     public static <T> Property<T> named(String name, T defaultValue) {\n-        return new Property<>(name, defaultValue);\n+        return new Property<>(name, defaultValue, null);\n+    }\n+\n+    public static <T> Property<T> named(String name, T defaultValue, String legacyName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2ODczOA=="}, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODMyMjAwOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/util/Property.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoxNjo1OFrOGSnJDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODoyNToxMVrOGXCuUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2ODg0NQ==", "bodyText": "Javadoc", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422168845", "createdAt": "2020-05-08T14:16:58Z", "author": {"login": "andreipaduroiu"}, "path": "common/src/main/java/io/pravega/common/util/Property.java", "diffHunk": "@@ -55,6 +61,10 @@ boolean hasDefaultValue() {\n         return this.defaultValue != null;\n     }\n \n+    boolean hasLegacyName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxNTA1OQ==", "bodyText": "Added.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r426815059", "createdAt": "2020-05-18T18:25:11Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/util/Property.java", "diffHunk": "@@ -55,6 +61,10 @@ boolean hasDefaultValue() {\n         return this.defaultValue != null;\n     }\n \n+    boolean hasLegacyName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2ODg0NQ=="}, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODMyNTU5OnYy", "diffSide": "RIGHT", "path": "config/config.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoxODowMFrOGSnLUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODoyNDoxN1rOGXCsdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2OTQyNA==", "bodyText": "pravegaservice.threadPool.storage.size", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422169424", "createdAt": "2020-05-08T14:18:00Z", "author": {"login": "andreipaduroiu"}, "path": "config/config.properties", "diffHunk": "@@ -29,82 +29,82 @@\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n # activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.size=30\n \n # Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.storageThreadPool.size=200", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxNDU4Mw==", "bodyText": "Done.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r426814583", "createdAt": "2020-05-18T18:24:17Z", "author": {"login": "ravisharda"}, "path": "config/config.properties", "diffHunk": "@@ -29,82 +29,82 @@\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n # activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.size=30\n \n # Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.storageThreadPool.size=200", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2OTQyNA=="}, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODMyNjI2OnYy", "diffSide": "RIGHT", "path": "config/config.properties", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoxODoxMVrOGSnLvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoxODoxMVrOGSnLvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE2OTUzMw==", "bodyText": "pravegaservice.threadPool.core.size", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422169533", "createdAt": "2020-05-08T14:18:11Z", "author": {"login": "andreipaduroiu"}, "path": "config/config.properties", "diffHunk": "@@ -29,82 +29,82 @@\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n # activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.size=30", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODMzMTQxOnYy", "diffSide": "RIGHT", "path": "config/config.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoxOTozMFrOGSnO2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNTozODozMFrOGaPP0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3MDMyOQ==", "bodyText": "Since you are editing this file, can you please replace Tier 2 with Long Term Storage here and Tier 1 with DurableDataLog. We have recently consolidated our naming to follow what is in the code.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422170329", "createdAt": "2020-05-08T14:19:30Z", "author": {"login": "andreipaduroiu"}, "path": "config/config.properties", "diffHunk": "@@ -29,82 +29,82 @@\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n # activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.size=30\n \n # Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.storageThreadPool.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n # DataLog implementation for Tier 1 storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n # Storage implementation for Tier 2 storage.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE2NTk3MQ==", "bodyText": "I made the changes in the comments everywhere in this file, as suggested.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r430165971", "createdAt": "2020-05-26T05:38:30Z", "author": {"login": "ravisharda"}, "path": "config/config.properties", "diffHunk": "@@ -29,82 +29,82 @@\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n # activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.size=30\n \n # Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.storageThreadPool.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n # DataLog implementation for Tier 1 storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n # Storage implementation for Tier 2 storage.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3MDMyOQ=="}, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODMzMjYzOnYy", "diffSide": "RIGHT", "path": "config/config.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoxOTo1MlrOGSnPog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNTo0NDoyMFrOGaPV8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3MDUzMA==", "bodyText": "Did you fix this reference? There may be others, so please check this file for references in the comments.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422170530", "createdAt": "2020-05-08T14:19:52Z", "author": {"login": "andreipaduroiu"}, "path": "config/config.properties", "diffHunk": "@@ -29,82 +29,82 @@\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n # activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.size=30\n \n # Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.storageThreadPool.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n # DataLog implementation for Tier 1 storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n # Storage implementation for Tier 2 storage.\n # Valid values: HDFS, FILESYSTEM, EXTENDEDS3, INMEMORY.\n # Default value: HDFS\n-# pravegaservice.storageImplementation=HDFS\n+# pravegaservice.storage.impl.name=HDFS\n \n # Storage NO-OP Mode: in No-Op mode, user stream segment writing is no-oped; user stream segment reading is not supported.\n # This mode is used to avoid storage interference in testing while still keep the system functioning as usual.\n # NOTE: pravegaservice.storageImplementation is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDE2NzUzNg==", "bodyText": "Fixed.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r430167536", "createdAt": "2020-05-26T05:44:20Z", "author": {"login": "ravisharda"}, "path": "config/config.properties", "diffHunk": "@@ -29,82 +29,82 @@\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n # activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.size=30\n \n # Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.storageThreadPool.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n # DataLog implementation for Tier 1 storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n # Storage implementation for Tier 2 storage.\n # Valid values: HDFS, FILESYSTEM, EXTENDEDS3, INMEMORY.\n # Default value: HDFS\n-# pravegaservice.storageImplementation=HDFS\n+# pravegaservice.storage.impl.name=HDFS\n \n # Storage NO-OP Mode: in No-Op mode, user stream segment writing is no-oped; user stream segment reading is not supported.\n # This mode is used to avoid storage interference in testing while still keep the system functioning as usual.\n # NOTE: pravegaservice.storageImplementation is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3MDUzMA=="}, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 82}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODM0NjExOnYy", "diffSide": "RIGHT", "path": "config/config.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoyMzozOFrOGSnXog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODoyMzoyOVrOGXCrHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3MjU3OA==", "bodyText": "index.page should be one word.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422172578", "createdAt": "2020-05-08T14:23:38Z", "author": {"login": "andreipaduroiu"}, "path": "config/config.properties", "diffHunk": "@@ -542,12 +542,12 @@ extendeds3.configUri=http://localhost:9020?identity=user&secretKey=password\n # Recommended values: 16KB. Various load tests showed that this maximum page size produces the smallest B+Tree index\n # segment when loaded with either sequential values (very rare) or arbitrary values in arbitrary order (most common); this\n # value also produces the best balance between read/write performance and index fragmentation.\n-#attributeindex.maxIndexPageSizeBytes=32767\n+#attributeindex.index.page.size.bytes.max=32767", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 484}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgxNDIzOA==", "bodyText": "Done.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r426814238", "createdAt": "2020-05-18T18:23:29Z", "author": {"login": "ravisharda"}, "path": "config/config.properties", "diffHunk": "@@ -542,12 +542,12 @@ extendeds3.configUri=http://localhost:9020?identity=user&secretKey=password\n # Recommended values: 16KB. Various load tests showed that this maximum page size produces the smallest B+Tree index\n # segment when loaded with either sequential values (very rare) or arbitrary values in arbitrary order (most common); this\n # value also produces the best balance between read/write performance and index fragmentation.\n-#attributeindex.maxIndexPageSizeBytes=32767\n+#attributeindex.index.page.size.bytes.max=32767", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3MjU3OA=="}, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 484}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODM1NTU0OnYy", "diffSide": "LEFT", "path": "docker/compose/docker-compose.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoyNTo1NVrOGSndDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMzowMzowOFrOGS4DNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3Mzk2Nw==", "bodyText": "Please do not sneak in changes like this. If you want to upgrade dependencies, do it in another PR.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422173967", "createdAt": "2020-05-08T14:25:55Z", "author": {"login": "andreipaduroiu"}, "path": "docker/compose/docker-compose.yml", "diffHunk": "@@ -7,10 +7,10 @@\n #\n #     http://www.apache.org/licenses/LICENSE-2.0\n #\n-version: '2'\n+version: '3'\n services:\n   zookeeper:\n-    image: zookeeper:3.5.4-beta", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ0NTg3Nw==", "bodyText": "The Zookeeper operator for K8s upgraded Zookeeper to 3.5.5 in Oct 2019: pravega/zookeeper-operator#83. I noticed this anomaly where these Compose files still refer to an older/beta version of Zookeeper, and so I made this change. If you guys prefer, I can raise another PR.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422445877", "createdAt": "2020-05-09T03:03:08Z", "author": {"login": "ravisharda"}, "path": "docker/compose/docker-compose.yml", "diffHunk": "@@ -7,10 +7,10 @@\n #\n #     http://www.apache.org/licenses/LICENSE-2.0\n #\n-version: '2'\n+version: '3'\n services:\n   zookeeper:\n-    image: zookeeper:3.5.4-beta", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3Mzk2Nw=="}, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODM1NjU4OnYy", "diffSide": "LEFT", "path": "docker/compose/docker-compose.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoyNjoxMVrOGSnduw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMjozMzowNlrOGS355w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3NDEzOQ==", "bodyText": "Why did you remove this?", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422174139", "createdAt": "2020-05-08T14:26:11Z", "author": {"login": "andreipaduroiu"}, "path": "docker/compose/docker-compose.yml", "diffHunk": "@@ -72,8 +72,7 @@ services:\n       ZK_URL: zookeeper:2181\n       REST_SERVER_PORT: 10080\n       JAVA_OPTS: |\n-        -Dcontroller.service.port=9090\n-        -Dconfig.controller.metricenableCSVReporter=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ0MzQ5NQ==", "bodyText": "Here's the reason:\n\nI didn't find config.controller.metricenableCSVReporter config param anywhere. So, I assume this is not used.\ncontroller.service.port is replaced by controller.service.rpc.listener.port.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422443495", "createdAt": "2020-05-09T02:33:06Z", "author": {"login": "ravisharda"}, "path": "docker/compose/docker-compose.yml", "diffHunk": "@@ -72,8 +72,7 @@ services:\n       ZK_URL: zookeeper:2181\n       REST_SERVER_PORT: 10080\n       JAVA_OPTS: |\n-        -Dcontroller.service.port=9090\n-        -Dconfig.controller.metricenableCSVReporter=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3NDEzOQ=="}, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyODM1NzY2OnYy", "diffSide": "LEFT", "path": "docker/compose/docker-compose.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoyNjozMVrOGSneeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMjozNTowNFrOGS36fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3NDMzMA==", "bodyText": "and this?", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422174330", "createdAt": "2020-05-08T14:26:31Z", "author": {"login": "andreipaduroiu"}, "path": "docker/compose/docker-compose.yml", "diffHunk": "@@ -96,11 +95,10 @@ services:\n       ZK_URL: zookeeper:2181\n       CONTROLLER_URL: tcp://${HOST_IP}:9090\n       JAVA_OPTS: |\n-        -Dmetrics.enableCSVReporter=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ0MzY0NA==", "bodyText": "I don't see metrics.enableCSVReporter in MetricsConfig. So, I am assuming this is unused.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r422443644", "createdAt": "2020-05-09T02:35:04Z", "author": {"login": "ravisharda"}, "path": "docker/compose/docker-compose.yml", "diffHunk": "@@ -96,11 +95,10 @@ services:\n       ZK_URL: zookeeper:2181\n       CONTROLLER_URL: tcp://${HOST_IP}:9090\n       JAVA_OPTS: |\n-        -Dmetrics.enableCSVReporter=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3NDMzMA=="}, "originalCommit": {"oid": "394d86efe232b01d9bac3e95595ea0ff8ca18555"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Nzk4Mjc0OnYy", "diffSide": "RIGHT", "path": "config/config.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwOToyMDo1M1rOGdEH9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwMzo1NDozMlrOGeLLMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyOTQ2Mw==", "bodyText": "Since this was introduced, I think that this could me more understandable as pravegaservice.storage.noOp.mode.enable.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r433129463", "createdAt": "2020-06-01T09:20:53Z", "author": {"login": "RaulGracia"}, "path": "config/config.properties", "diffHunk": "@@ -20,162 +20,162 @@\n #    values for those settings based on desired use cases.\n #\n # Each of these settings can be overridden from the command like by specifying a Java System Property.\n-# Example: setting 'pravegaservice.listeningPort' has a default value of 12345, but it can be overridden to a different\n+# Example: setting 'pravegaservice.service.listener.port' has a default value of 12345, but it can be overridden to a different\n #          value via the command-line:\n-#                java -Dpravegaservice.listeningPort=5689 ...\n+#                java -Dpravegaservice.service.listener.port=5689 ...\n #          which will set the value for that setting to 5689, regardless of what this file contains.\n \n ##region General Segment Store Settings\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n-# activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n+# activities, except Netty-related tasks and Long Term Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.core.size=30\n \n-# Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n+# Maximum number of threads in the Thread Pool used for Long Term Storage tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.threadPool.storage.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n-# DataLog implementation for Tier 1 storage.\n+# DataLog implementation for Durable Data Log Storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n-# Storage implementation for Tier 2 storage.\n+# Storage implementation for Long-Term Storage.\n # Valid values: HDFS, FILESYSTEM, EXTENDEDS3, INMEMORY.\n # Default value: HDFS\n-# pravegaservice.storageImplementation=HDFS\n+# pravegaservice.storage.impl.name=HDFS\n \n # Storage NO-OP Mode: in No-Op mode, user stream segment writing is no-oped; user stream segment reading is not supported.\n # This mode is used to avoid storage interference in testing while still keep the system functioning as usual.\n-# NOTE: pravegaservice.storageImplementation is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n+# NOTE: pravegaservice.storage.impl.name is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n # WARNING: Do NOT set NO-OP Mode to true in production environment! Data loss will happen!\n # Valid values: true, false\n # Default value: false\n-#storageextra.storageNoOpMode=false\n+#storageextra.noOp.mode.enable=false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b052e95e03bf2ad27ca2bf409df2dc650dc0123"}, "originalPosition": 103}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5MzU1Mg==", "bodyText": "This config property is defined in StorageExtraConfig.java that has a component code storageextra, which is resulting in the storageextra prefix. Refactoring it to bring it under pravegservice (ServiceConfig.java) would require kind of changes that are out-of-scope of this PR. We only intend to change configuration property keys/names here, and that too in a backward compatible manner.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r434293552", "createdAt": "2020-06-03T03:54:32Z", "author": {"login": "ravisharda"}, "path": "config/config.properties", "diffHunk": "@@ -20,162 +20,162 @@\n #    values for those settings based on desired use cases.\n #\n # Each of these settings can be overridden from the command like by specifying a Java System Property.\n-# Example: setting 'pravegaservice.listeningPort' has a default value of 12345, but it can be overridden to a different\n+# Example: setting 'pravegaservice.service.listener.port' has a default value of 12345, but it can be overridden to a different\n #          value via the command-line:\n-#                java -Dpravegaservice.listeningPort=5689 ...\n+#                java -Dpravegaservice.service.listener.port=5689 ...\n #          which will set the value for that setting to 5689, regardless of what this file contains.\n \n ##region General Segment Store Settings\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n-# activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n+# activities, except Netty-related tasks and Long Term Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.core.size=30\n \n-# Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n+# Maximum number of threads in the Thread Pool used for Long Term Storage tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.threadPool.storage.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n-# DataLog implementation for Tier 1 storage.\n+# DataLog implementation for Durable Data Log Storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n-# Storage implementation for Tier 2 storage.\n+# Storage implementation for Long-Term Storage.\n # Valid values: HDFS, FILESYSTEM, EXTENDEDS3, INMEMORY.\n # Default value: HDFS\n-# pravegaservice.storageImplementation=HDFS\n+# pravegaservice.storage.impl.name=HDFS\n \n # Storage NO-OP Mode: in No-Op mode, user stream segment writing is no-oped; user stream segment reading is not supported.\n # This mode is used to avoid storage interference in testing while still keep the system functioning as usual.\n-# NOTE: pravegaservice.storageImplementation is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n+# NOTE: pravegaservice.storage.impl.name is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n # WARNING: Do NOT set NO-OP Mode to true in production environment! Data loss will happen!\n # Valid values: true, false\n # Default value: false\n-#storageextra.storageNoOpMode=false\n+#storageextra.noOp.mode.enable=false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEyOTQ2Mw=="}, "originalCommit": {"oid": "0b052e95e03bf2ad27ca2bf409df2dc650dc0123"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Nzk4NjI4OnYy", "diffSide": "RIGHT", "path": "config/config.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwOToyMjoyMlrOGdEKZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNDoxODo1NlrOGeLfdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEzMDA4NA==", "bodyText": "Why this does not have the same structure as the previous property? It refers to the same, so I think the structure should be the same: storageextra.noOp.write.latency.milliseconds (unless you replace storageextra -> pravegaservice.storage, which I think it is easier to understand)", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r433130084", "createdAt": "2020-06-01T09:22:22Z", "author": {"login": "RaulGracia"}, "path": "config/config.properties", "diffHunk": "@@ -20,162 +20,162 @@\n #    values for those settings based on desired use cases.\n #\n # Each of these settings can be overridden from the command like by specifying a Java System Property.\n-# Example: setting 'pravegaservice.listeningPort' has a default value of 12345, but it can be overridden to a different\n+# Example: setting 'pravegaservice.service.listener.port' has a default value of 12345, but it can be overridden to a different\n #          value via the command-line:\n-#                java -Dpravegaservice.listeningPort=5689 ...\n+#                java -Dpravegaservice.service.listener.port=5689 ...\n #          which will set the value for that setting to 5689, regardless of what this file contains.\n \n ##region General Segment Store Settings\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n-# activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n+# activities, except Netty-related tasks and Long Term Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.core.size=30\n \n-# Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n+# Maximum number of threads in the Thread Pool used for Long Term Storage tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.threadPool.storage.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n-# DataLog implementation for Tier 1 storage.\n+# DataLog implementation for Durable Data Log Storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n-# Storage implementation for Tier 2 storage.\n+# Storage implementation for Long-Term Storage.\n # Valid values: HDFS, FILESYSTEM, EXTENDEDS3, INMEMORY.\n # Default value: HDFS\n-# pravegaservice.storageImplementation=HDFS\n+# pravegaservice.storage.impl.name=HDFS\n \n # Storage NO-OP Mode: in No-Op mode, user stream segment writing is no-oped; user stream segment reading is not supported.\n # This mode is used to avoid storage interference in testing while still keep the system functioning as usual.\n-# NOTE: pravegaservice.storageImplementation is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n+# NOTE: pravegaservice.storage.impl.name is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n # WARNING: Do NOT set NO-OP Mode to true in production environment! Data loss will happen!\n # Valid values: true, false\n # Default value: false\n-#storageextra.storageNoOpMode=false\n+#storageextra.noOp.mode.enable=false\n \n # When Storage NO-OP Mode is true, storageWriteNoOpModeLatencyMillis is applied to write operation.\n # It is used to compensate the supposed latency if the storage is in operation, in order to make the test as real as possible.\n # This latency has no effect if storage is not in No-Op mode.\n # Valid values: non-negative integer\n # Default vale: 20 (milliseconds)\n-#storageextra.storageWriteNoOpLatencyMillis=20\n+#noOp.write.latency.milliseconds=20", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b052e95e03bf2ad27ca2bf409df2dc650dc0123"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk3MTIxMg==", "bodyText": "This smells like a bug. This value won't be picked up by the code.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r433971212", "createdAt": "2020-06-02T15:37:50Z", "author": {"login": "andreipaduroiu"}, "path": "config/config.properties", "diffHunk": "@@ -20,162 +20,162 @@\n #    values for those settings based on desired use cases.\n #\n # Each of these settings can be overridden from the command like by specifying a Java System Property.\n-# Example: setting 'pravegaservice.listeningPort' has a default value of 12345, but it can be overridden to a different\n+# Example: setting 'pravegaservice.service.listener.port' has a default value of 12345, but it can be overridden to a different\n #          value via the command-line:\n-#                java -Dpravegaservice.listeningPort=5689 ...\n+#                java -Dpravegaservice.service.listener.port=5689 ...\n #          which will set the value for that setting to 5689, regardless of what this file contains.\n \n ##region General Segment Store Settings\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n-# activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n+# activities, except Netty-related tasks and Long Term Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.core.size=30\n \n-# Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n+# Maximum number of threads in the Thread Pool used for Long Term Storage tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.threadPool.storage.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n-# DataLog implementation for Tier 1 storage.\n+# DataLog implementation for Durable Data Log Storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n-# Storage implementation for Tier 2 storage.\n+# Storage implementation for Long-Term Storage.\n # Valid values: HDFS, FILESYSTEM, EXTENDEDS3, INMEMORY.\n # Default value: HDFS\n-# pravegaservice.storageImplementation=HDFS\n+# pravegaservice.storage.impl.name=HDFS\n \n # Storage NO-OP Mode: in No-Op mode, user stream segment writing is no-oped; user stream segment reading is not supported.\n # This mode is used to avoid storage interference in testing while still keep the system functioning as usual.\n-# NOTE: pravegaservice.storageImplementation is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n+# NOTE: pravegaservice.storage.impl.name is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n # WARNING: Do NOT set NO-OP Mode to true in production environment! Data loss will happen!\n # Valid values: true, false\n # Default value: false\n-#storageextra.storageNoOpMode=false\n+#storageextra.noOp.mode.enable=false\n \n # When Storage NO-OP Mode is true, storageWriteNoOpModeLatencyMillis is applied to write operation.\n # It is used to compensate the supposed latency if the storage is in operation, in order to make the test as real as possible.\n # This latency has no effect if storage is not in No-Op mode.\n # Valid values: non-negative integer\n # Default vale: 20 (milliseconds)\n-#storageextra.storageWriteNoOpLatencyMillis=20\n+#noOp.write.latency.milliseconds=20", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEzMDA4NA=="}, "originalCommit": {"oid": "0b052e95e03bf2ad27ca2bf409df2dc650dc0123"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5ODc0Mw==", "bodyText": "Yes, that's indeed a bug. I've fixed it now. Thanks for spotting it in this commit.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r434298743", "createdAt": "2020-06-03T04:18:56Z", "author": {"login": "ravisharda"}, "path": "config/config.properties", "diffHunk": "@@ -20,162 +20,162 @@\n #    values for those settings based on desired use cases.\n #\n # Each of these settings can be overridden from the command like by specifying a Java System Property.\n-# Example: setting 'pravegaservice.listeningPort' has a default value of 12345, but it can be overridden to a different\n+# Example: setting 'pravegaservice.service.listener.port' has a default value of 12345, but it can be overridden to a different\n #          value via the command-line:\n-#                java -Dpravegaservice.listeningPort=5689 ...\n+#                java -Dpravegaservice.service.listener.port=5689 ...\n #          which will set the value for that setting to 5689, regardless of what this file contains.\n \n ##region General Segment Store Settings\n \n # Name of the cluster to which this instance of the SegmentStore belongs.\n # Required.\n-pravegaservice.clusterName=pravega-cluster\n+pravegaservice.cluster.name=pravega-cluster\n \n # Number of Segment Containers in the system. This value must be the same across all SegmentStore instances in this cluster.\n # This value cannot be changed dynamically, it will require special administrative tasks when changing. See documentation\n # for details.\n # Valid values: Positive integer.\n # Required.\n-pravegaservice.containerCount=4\n+pravegaservice.container.count=4\n \n # Maximum number of threads in the Core SegmentStore Thread Pool. This pool is used for all SegmentStore-related\n-# activities, except Netty-related tasks and Tier2 Storage activities. Examples include: handling inbound requests,\n+# activities, except Netty-related tasks and Long Term Storage activities. Examples include: handling inbound requests,\n # processing reads, background maintenance operations and background operation processing.\n # Valid values: Positive integer.\n # Recommended setting: 2 * Number of containers per node, minimum 20.\n-#pravegaservice.threadPoolSize=30\n+#pravegaservice.threadPool.core.size=30\n \n-# Maximum number of threads in the Thread Pool used for Tier2 tasks (reading, writing, create, delete, etc.).\n+# Maximum number of threads in the Thread Pool used for Long Term Storage tasks (reading, writing, create, delete, etc.).\n # Valid values: Positive integer.\n # Recommended setting: reasonably large number which does not cause thrashing, minimum 20, recommended value 200.\n-#pravegaservice.storageThreadPoolSize=200\n+#pravegaservice.threadPool.storage.size=200\n \n # TCP port where the SegmentStore will be listening for incoming requests.\n # Valid values: Positive integer in the valid TCP port ranges.\n-pravegaservice.listeningPort=12345\n+pravegaservice.service.listener.port=12345\n \n # Full URL (host:port) where to find a ZooKeeper that can be used for coordinating this Pravega Cluster.\n # Required.\n-pravegaservice.zkURL=localhost:2181\n+pravegaservice.zk.connect.uri=localhost:2181\n \n # Number of milliseconds to wait between ZooKeeper retries.\n # Valid values: Positive integer.\n # Recommended values: Between 5000 and 10000 (too high will cause failover delays).\n-#pravegaservice.zkRetrySleepMs=5000\n+#pravegaservice.zk.connect.retries.interval.milliseconds=5000\n \n # Number of times to retry a failed attempt to contact ZooKeeper.\n # Valid values: Positive integer.\n # Recommended values: Between 3 and 5.\n-#pravegaservice.zkRetryCount=5\n+#pravegaservice.zk.connect.retries.count.max=5\n \n # Session timeout for ZooKeeper.\n # Valid values: Positive integer.\n-#pravegaservice.zkSessionTimeoutMs=10000\n+#pravegaservice.zk.connect.sessionTimeout.milliseconds=10000\n \n # Enable security for the ZK client.\n-#pravegaservice.secureZK=false\n+#pravegaservice.zk.connect.security.enable=false\n \n # Location of trust store for secure connection to ZK.\n-#pravegaservice.zkTrustStore=\n+#pravegaservice.zk.connect.security.tls.trustStore.location=\n \n #Location of password file to access the trust store.\n-#pravegaservice.zkTrustStorePasswordPath=\n+#pravegaservice.zk.connect.security.tls.trustStore.pwd.location=\n \n-# DataLog implementation for Tier 1 storage.\n+# DataLog implementation for Durable Data Log Storage.\n # Valid values: BOOKKEEPER, INMEMORY.\n # Default value: BOOKKEEPER\n-pravegaservice.dataLogImplementation=BOOKKEEPER\n+pravegaservice.dataLog.impl.name=BOOKKEEPER\n \n-# Storage implementation for Tier 2 storage.\n+# Storage implementation for Long-Term Storage.\n # Valid values: HDFS, FILESYSTEM, EXTENDEDS3, INMEMORY.\n # Default value: HDFS\n-# pravegaservice.storageImplementation=HDFS\n+# pravegaservice.storage.impl.name=HDFS\n \n # Storage NO-OP Mode: in No-Op mode, user stream segment writing is no-oped; user stream segment reading is not supported.\n # This mode is used to avoid storage interference in testing while still keep the system functioning as usual.\n-# NOTE: pravegaservice.storageImplementation is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n+# NOTE: pravegaservice.storage.impl.name is still used to store metadata and system segments, which are required for the functioning of the Pravega Cluster.\n # WARNING: Do NOT set NO-OP Mode to true in production environment! Data loss will happen!\n # Valid values: true, false\n # Default value: false\n-#storageextra.storageNoOpMode=false\n+#storageextra.noOp.mode.enable=false\n \n # When Storage NO-OP Mode is true, storageWriteNoOpModeLatencyMillis is applied to write operation.\n # It is used to compensate the supposed latency if the storage is in operation, in order to make the test as real as possible.\n # This latency has no effect if storage is not in No-Op mode.\n # Valid values: non-negative integer\n # Default vale: 20 (milliseconds)\n-#storageextra.storageWriteNoOpLatencyMillis=20\n+#noOp.write.latency.milliseconds=20", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEzMDA4NA=="}, "originalCommit": {"oid": "0b052e95e03bf2ad27ca2bf409df2dc650dc0123"}, "originalPosition": 111}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5Nzk5MTQ4OnYy", "diffSide": "RIGHT", "path": "config/config.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwOToyNDozM1rOGdENrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNDoyMDowN1rOGeLgnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEzMDkyNA==", "bodyText": "I'm aware that is better to replace Tier 2 -> Long Term Storage for clarity. But I'm not sure whether making Tier 1 to disappear as well is making things clearer or not (is an open question).", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r433130924", "createdAt": "2020-06-01T09:24:33Z", "author": {"login": "RaulGracia"}, "path": "config/config.properties", "diffHunk": "@@ -469,13 +469,13 @@ extendeds3.configUri=http://localhost:9020?identity=user&secretKey=password\n \n ##region DurableLog Settings\n \n-# A Metadata Checkpoint is a special internal write inside the DurableLog (persisted to Tier1 DurableDataLog) that takes\n+# A Metadata Checkpoint is a special internal write inside the DurableLog (persisted to Durable Data Log) that takes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b052e95e03bf2ad27ca2bf409df2dc650dc0123"}, "originalPosition": 468}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk3MDg3Ng==", "bodyText": "We've agreed to eliminate the Tier 1 term as well. DurableLog/DurableDataLog is the term to use to be consistent with the code.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r433970876", "createdAt": "2020-06-02T15:37:24Z", "author": {"login": "andreipaduroiu"}, "path": "config/config.properties", "diffHunk": "@@ -469,13 +469,13 @@ extendeds3.configUri=http://localhost:9020?identity=user&secretKey=password\n \n ##region DurableLog Settings\n \n-# A Metadata Checkpoint is a special internal write inside the DurableLog (persisted to Tier1 DurableDataLog) that takes\n+# A Metadata Checkpoint is a special internal write inside the DurableLog (persisted to Durable Data Log) that takes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEzMDkyNA=="}, "originalCommit": {"oid": "0b052e95e03bf2ad27ca2bf409df2dc650dc0123"}, "originalPosition": 468}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5OTAzNw==", "bodyText": "So, I'm leaving it as is. @RaulGracia / @andreipaduroiu hope that is OK.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r434299037", "createdAt": "2020-06-03T04:20:07Z", "author": {"login": "ravisharda"}, "path": "config/config.properties", "diffHunk": "@@ -469,13 +469,13 @@ extendeds3.configUri=http://localhost:9020?identity=user&secretKey=password\n \n ##region DurableLog Settings\n \n-# A Metadata Checkpoint is a special internal write inside the DurableLog (persisted to Tier1 DurableDataLog) that takes\n+# A Metadata Checkpoint is a special internal write inside the DurableLog (persisted to Durable Data Log) that takes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEzMDkyNA=="}, "originalCommit": {"oid": "0b052e95e03bf2ad27ca2bf409df2dc650dc0123"}, "originalPosition": 468}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODAwMjkyOnYy", "diffSide": "LEFT", "path": "controller/src/test/resources/controller.config.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwOToyODoyNlrOGdEUwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNDoxMDozNlrOGeLYZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEzMjczNg==", "bodyText": "Now that you are addressing the configuration of Pravega, I ask the following: could we get rid of this file completely? I mean, I have always wondered why are there 2 separate files for configuration, one for the Segment Store and another for the Controller. Would it be better to have a single file with different \"sections\"? Maybe this is something to discuss with @shiveshr and @andreipaduroiu, but from an usability perspective, I don't know if doubling the number of configuration files is going to make things better for users.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r433132736", "createdAt": "2020-06-01T09:28:26Z", "author": {"login": "RaulGracia"}, "path": "controller/src/test/resources/controller.config.properties", "diffHunk": "@@ -12,38 +12,38 @@\n # The commented out settings are not different than the hardcoded defaults in Config.java.\n \n \n-controller.containerCount=4", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b052e95e03bf2ad27ca2bf409df2dc650dc0123"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5NjkzMg==", "bodyText": "At the outset, I think its a good idea to have a single config file. I've created a separate issue #4843 for this item, as I don't think its in the scope of this PR.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r434296932", "createdAt": "2020-06-03T04:10:36Z", "author": {"login": "ravisharda"}, "path": "controller/src/test/resources/controller.config.properties", "diffHunk": "@@ -12,38 +12,38 @@\n # The commented out settings are not different than the hardcoded defaults in Config.java.\n \n \n-controller.containerCount=4", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEzMjczNg=="}, "originalCommit": {"oid": "0b052e95e03bf2ad27ca2bf409df2dc650dc0123"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5ODAwNzU2OnYy", "diffSide": "LEFT", "path": "controller/src/conf/controller.config.properties", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQwOTozMDoxNVrOGdEXtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNDoxMTozNVrOGeLZKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEzMzQ5Mg==", "bodyText": "Same here as in the previous comment related to split controller and Segment Store config in different files.", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r433133492", "createdAt": "2020-06-01T09:30:15Z", "author": {"login": "RaulGracia"}, "path": "controller/src/conf/controller.config.properties", "diffHunk": "@@ -18,49 +18,52 @@\n #                java -Dcontroller.service.port=5689 ...\n #          which will set the value for that setting to 5689, regardless of what this file contains.\n \n+controller.cluster.name=${CLUSTER_NAME}\n+controller.container.count=${CONTAINER_COUNT}\n+controller.hostMonitor.enable=${HOST_MONITOR_ENABLE}\n+controller.rebalance.interval.seconds.min=${CLUSTER_MIN_REBALANCE_INTERVAL}\n \n-controller.containerCount=${CONTAINER_COUNT}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b052e95e03bf2ad27ca2bf409df2dc650dc0123"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI5NzEzMQ==", "bodyText": "#4713 (comment)", "url": "https://github.com/pravega/pravega/pull/4713#discussion_r434297131", "createdAt": "2020-06-03T04:11:35Z", "author": {"login": "ravisharda"}, "path": "controller/src/conf/controller.config.properties", "diffHunk": "@@ -18,49 +18,52 @@\n #                java -Dcontroller.service.port=5689 ...\n #          which will set the value for that setting to 5689, regardless of what this file contains.\n \n+controller.cluster.name=${CLUSTER_NAME}\n+controller.container.count=${CONTAINER_COUNT}\n+controller.hostMonitor.enable=${HOST_MONITOR_ENABLE}\n+controller.rebalance.interval.seconds.min=${CLUSTER_MIN_REBALANCE_INTERVAL}\n \n-controller.containerCount=${CONTAINER_COUNT}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzEzMzQ5Mg=="}, "originalCommit": {"oid": "0b052e95e03bf2ad27ca2bf409df2dc650dc0123"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4274, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}