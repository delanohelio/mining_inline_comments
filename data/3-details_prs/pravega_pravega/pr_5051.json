{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MzY5NzY3", "number": 5051, "title": "Issue 5035: New Resource String Format for Authorization", "bodyText": "Change log description\nReplace the old resource string format with the new resource string format defined by PDP-42.\nPurpose of the change\nImplements #5035 (PDP-42).\nWhat the code does\nThe main changes made in this PR are:\n\nUse the new resource string format for authorization.\nModify the Password Auth Handler to interpret resource strings and patterns specified according to the new format.\n\nHere are the ancillary changes:\n\nAdd unit tests for some of the existing code. Use the same tests to verify workings after the changes were made.\nAdd unit tests for newly added code.\nRefactor (rename, reorganize) some of the existing auth related code to make it easier to understand and make the required changes changes.\n\nHow to verify it\nAll unit, integration and system tests must pass with and without auth.", "createdAt": "2020-08-10T09:00:02Z", "url": "https://github.com/pravega/pravega/pull/5051", "merged": true, "mergeCommit": {"oid": "9c6f28f1dc2375f48808e1f500ef17bbcb573499"}, "closed": true, "closedAt": "2020-09-16T14:07:36Z", "author": {"login": "ravisharda"}, "timelineItems": {"totalCount": 53, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4_Y-CAH2gAyNDY1MzY5NzY3OmRmNzQ2MzNiMTM0NDQ0NDgyYTRkYjJjYmJkNTIxNTM5MThmYTI0NTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJc9MSAFqTQ4OTY2MzAyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "df74633b134444482a4db2cbbd52153918fa2453", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/df74633b134444482a4db2cbbd52153918fa2453", "committedDate": "2020-07-27T10:37:08Z", "message": "Refactor PasswordAuthHandler for unit testing\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9036ad8f7d3d5a5d695306096317355b66eea3a", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/e9036ad8f7d3d5a5d695306096317355b66eea3a", "committedDate": "2020-07-27T10:37:37Z", "message": "Add unit tests for PasswordAuthHandler\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "854d652dc4c73de8d11d1290d53d5916bd044711", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/854d652dc4c73de8d11d1290d53d5916bd044711", "committedDate": "2020-07-27T11:24:42Z", "message": "Add initial set of authorization-related tests\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7afb4ac3b243eb0b6c6c031e279d54ac80f4f058", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/7afb4ac3b243eb0b6c6c031e279d54ac80f4f058", "committedDate": "2020-08-04T05:56:38Z", "message": "Refactoring and reorganization of Handler code\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77f0f0fbb45612e5c4a0c12be3a99df1f3e9ada2", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/77f0f0fbb45612e5c4a0c12be3a99df1f3e9ada2", "committedDate": "2020-08-05T03:00:43Z", "message": "Refactoring and reorganization\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee4d55a3632383bd0e8db92d2b876271e0815e75", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/ee4d55a3632383bd0e8db92d2b876271e0815e75", "committedDate": "2020-08-05T10:18:04Z", "message": "Save partial work\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "195becc1608d80b07ae2aabf7b926bf574194a33", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/195becc1608d80b07ae2aabf7b926bf574194a33", "committedDate": "2020-08-06T10:49:55Z", "message": "Remove support for old format in Auth Handler\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c32f1c94ea4259526cbae0b859caba520cda83c", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/4c32f1c94ea4259526cbae0b859caba520cda83c", "committedDate": "2020-08-07T08:34:11Z", "message": "Finish up new ACL implmenetation and tests\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82284afff3044a9ed791891213cef0b34de8e83a", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/82284afff3044a9ed791891213cef0b34de8e83a", "committedDate": "2020-08-07T09:10:48Z", "message": "Update Controller API tests to use new ACL format\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a74dc5050a3cd3569214a6aaa622c89fccefd3b", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/2a74dc5050a3cd3569214a6aaa622c89fccefd3b", "committedDate": "2020-08-10T04:08:29Z", "message": "Fix for tests and a bug in TestAuthhandler service config\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfba3a80baeb2df930e05d34f5a0bdfd3d4eb581", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/dfba3a80baeb2df930e05d34f5a0bdfd3d4eb581", "committedDate": "2020-08-10T08:43:09Z", "message": "Fix Auth manager tests\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fd4e727cf05edf44d3877c7a16c2282f96e2223", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/3fd4e727cf05edf44d3877c7a16c2282f96e2223", "committedDate": "2020-08-10T08:53:42Z", "message": "Use structured utility method to compose an auth file entry\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcd6c4a25f8070bd9406765bf93f00d5b37c0698", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/bcd6c4a25f8070bd9406765bf93f00d5b37c0698", "committedDate": "2020-08-10T10:48:04Z", "message": "Merge branch 'master' into auth-resources-permissions\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d1a69534502e32b62778b39ed2961cc558e076c", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/8d1a69534502e32b62778b39ed2961cc558e076c", "committedDate": "2020-08-11T04:33:25Z", "message": "Fix compilation issues after merge\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7217a5d504041f7d3e4d5d5657983cefef06eb33", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/7217a5d504041f7d3e4d5d5657983cefef06eb33", "committedDate": "2020-08-12T01:26:55Z", "message": "Modify claimKey to match Segment Store format\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab1b9e67d62d420ca7fbf3ba368dd68217c4b9a5", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/ab1b9e67d62d420ca7fbf3ba368dd68217c4b9a5", "committedDate": "2020-08-12T01:27:27Z", "message": "Revert standalone mode config\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e64317b94f2b9c90d7fb6d4fdede50d06522bc2f", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/e64317b94f2b9c90d7fb6d4fdede50d06522bc2f", "committedDate": "2020-08-12T03:23:27Z", "message": "Modify remaining test classes to use new resource format\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8dbfc683ed78b4c1104a06078a04402a159f8dd", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/b8dbfc683ed78b4c1104a06078a04402a159f8dd", "committedDate": "2020-08-12T04:43:44Z", "message": "Modify remaining test classes to use new resource format\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee2ff0ef331b55d718f8378f135328ad5ac942b4", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/ee2ff0ef331b55d718f8378f135328ad5ac942b4", "committedDate": "2020-08-12T09:57:19Z", "message": "Cleanup and add tests\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MDMxNjY0", "url": "https://github.com/pravega/pravega/pull/5051#pullrequestreview-467031664", "createdAt": "2020-08-13T18:36:16Z", "commit": {"oid": "ee2ff0ef331b55d718f8378f135328ad5ac942b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODozNjoxNlrOHAYmzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODozNjoxNlrOHAYmzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE2NTE5Ng==", "bodyText": "Just curious, is prn::* equivalent to prn::/*", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r470165196", "createdAt": "2020-08-13T18:36:16Z", "author": {"login": "sarlaccpit"}, "path": "controller/src/test/java/io/pravega/controller/rest/v1/SecureStreamMetaDataTests.java", "diffHunk": "@@ -11,40 +11,50 @@\n \n import io.grpc.ServerBuilder;\n import io.pravega.test.common.SecurityConfigDefaults;\n-import io.pravega.controller.server.rpc.auth.AuthHandlerManager;\n-import io.pravega.controller.server.rpc.auth.StrongPasswordProcessor;\n+import io.pravega.controller.server.security.auth.handler.AuthHandlerManager;\n+import io.pravega.controller.server.security.auth.StrongPasswordProcessor;\n import io.pravega.controller.server.rpc.grpc.impl.GRPCServerConfigImpl;\n import io.pravega.test.common.TestUtils;\n import javax.ws.rs.client.Invocation;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MultivaluedHashMap;\n import javax.ws.rs.core.MultivaluedMap;\n-import org.junit.Before;\n-\n import java.io.File;\n import java.io.FileWriter;\n+import java.util.Arrays;\n+import org.junit.Before;\n+\n+import static io.pravega.controller.auth.AuthFileUtils.addAuthFileEntry;\n \n public class SecureStreamMetaDataTests extends  StreamMetaDataTests {\n+\n     @Override\n     @Before\n     public void setup() throws Exception {\n-        File file = File.createTempFile(\"passwd\", \".txt\");\n-\n+        File file = File.createTempFile(\"SecureStreamMetaDataTests\", \".txt\");\n         StrongPasswordProcessor passwordEncryptor = StrongPasswordProcessor.builder().build();\n \n         try (FileWriter writer = new FileWriter(file.getAbsolutePath())) {\n             String passwd = passwordEncryptor.encryptPassword(\"1111_aaaa\");\n \n             // Admin has READ_WRITE permission to everything\n-            writer.write(\"admin:\" + passwd + \":*,READ_UPDATE\\n\");\n+            addAuthFileEntry(writer, \"admin\", passwd, Arrays.asList(\"prn::*,READ_UPDATE\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee2ff0ef331b55d718f8378f135328ad5ac942b4"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MDUxNTI0", "url": "https://github.com/pravega/pravega/pull/5051#pullrequestreview-467051524", "createdAt": "2020-08-13T19:04:08Z", "commit": {"oid": "ee2ff0ef331b55d718f8378f135328ad5ac942b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTowNDowOFrOHAZqzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOTowNDowOFrOHAZqzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE4MjYwNw==", "bodyText": "This is just to confirm my understanding:   the fact that the delegation token deals with resource strings that are in the same format as what goes on in the controller side authorization is just a coincidence, correct?\nMeaning, in theory what goes on in the delegation token could have been completely different (though why re-invent the wheel basically).  is that correct?", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r470182607", "createdAt": "2020-08-13T19:04:08Z", "author": {"login": "sarlaccpit"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/delegationtoken/TokenVerifierImpl.java", "diffHunk": "@@ -75,6 +75,14 @@ public JsonWebToken verifyToken(@NonNull String resource, String token, @NonNull\n      * @return\n      */\n     private boolean resourceMatchesClaimKey(String claimKey, String resource) {\n+        log.trace(\"claimKey = {}, resourceKey = {}\", claimKey, resource);\n+        if (claimKey.startsWith(\"prn::\")) {\n+            claimKey = claimKey.replace(\"prn::/\", \"\")\n+                    .replace(\"prn::\", \"\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee2ff0ef331b55d718f8378f135328ad5ac942b4"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MDU4MzM3", "url": "https://github.com/pravega/pravega/pull/5051#pullrequestreview-467058337", "createdAt": "2020-08-13T19:14:41Z", "commit": {"oid": "ee2ff0ef331b55d718f8378f135328ad5ac942b4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOToxNDo0MVrOHAaAlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxOToxNDo0MVrOHAaAlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE4ODE4Mw==", "bodyText": "Just curious where the toggle is to use the LegacyAuthorizationImpl() ?\nMight be useful to implementors of the auth handler interface could take the new Pravega code and have a way to stick to the old format while they're updating their implementation to handle the new format ( else they'll break right away once Pravega starts asking about \"prn://scope:scope1\" and they really only understand  \"/scope1\" right ?).\nI saw there IS a purposely implemented LegacyAuthorizationResourceImpl class but other than in tests, I didn't see it getting used (there are a lot of files in this PR though so I might have missed a subtlety somewhere :))", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r470188183", "createdAt": "2020-08-13T19:14:41Z", "author": {"login": "sarlaccpit"}, "path": "controller/src/main/java/io/pravega/controller/server/rest/resources/StreamMetadataResourceImpl.java", "diffHunk": "@@ -75,6 +76,7 @@\n     private final RESTAuthHelper restAuthHelper;\n     private final LocalController localController;\n     private final ConnectionFactory connectionFactory;\n+    private final AuthorizationResource authorizationResource = new AuthorizationResourceImpl();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee2ff0ef331b55d718f8378f135328ad5ac942b4"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a000a66776c32c3e475cfd7671eca45a1fbb5b69", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/a000a66776c32c3e475cfd7671eca45a1fbb5b69", "committedDate": "2020-08-14T09:13:04Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NjUyMzIx", "url": "https://github.com/pravega/pravega/pull/5051#pullrequestreview-467652321", "createdAt": "2020-08-14T15:06:30Z", "commit": {"oid": "a000a66776c32c3e475cfd7671eca45a1fbb5b69"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NjUyNDQ2", "url": "https://github.com/pravega/pravega/pull/5051#pullrequestreview-467652446", "createdAt": "2020-08-14T15:06:39Z", "commit": {"oid": "a000a66776c32c3e475cfd7671eca45a1fbb5b69"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNTowNjozOVrOHA4MBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNToxODoyN1rOHA4l7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4MjYyOA==", "bodyText": "Why do you have this copyright in here?", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r470682628", "createdAt": "2020-08-14T15:06:39Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/main/java/io/pravega/controller/server/rpc/grpc/v1/ControllerServiceImpl.java", "diffHunk": "@@ -101,9 +102,19 @@\n     private final boolean replyWithStackTraceOnError;\n \n     private final Supplier<Long> requestIdGenerator = RandomFactory.create()::nextLong;\n-\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a000a66776c32c3e475cfd7671eca45a1fbb5b69"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4MzkwOA==", "bodyText": "You're doing a double-lookup here. Get the index of \"::\" and check for negative values, then reuse it in your substring call.", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r470683908", "createdAt": "2020-08-14T15:09:00Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/handler/impl/AclAuthorizerImpl.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth.handler.impl;\n+\n+import io.pravega.auth.AuthHandler;\n+import lombok.NonNull;\n+\n+class AclAuthorizerImpl extends AclAuthorizer {\n+\n+    @Override\n+    public AuthHandler.Permissions authorize(@NonNull AccessControlList accessControlList, @NonNull String resource) {\n+        AuthHandler.Permissions result = AuthHandler.Permissions.NONE;\n+\n+        String resourceDomain;\n+        if (resource.indexOf(\"::\") > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a000a66776c32c3e475cfd7671eca45a1fbb5b69"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4NDg2OA==", "bodyText": "The code inside the for loop does a lot of regex pattern compilation and matching, which is relatively expensive to process. Anyway we can simplify this? Can we precompute something (here or in AccessControlEntry)?", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r470684868", "createdAt": "2020-08-14T15:10:40Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/handler/impl/AclAuthorizerImpl.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth.handler.impl;\n+\n+import io.pravega.auth.AuthHandler;\n+import lombok.NonNull;\n+\n+class AclAuthorizerImpl extends AclAuthorizer {\n+\n+    @Override\n+    public AuthHandler.Permissions authorize(@NonNull AccessControlList accessControlList, @NonNull String resource) {\n+        AuthHandler.Permissions result = AuthHandler.Permissions.NONE;\n+\n+        String resourceDomain;\n+        if (resource.indexOf(\"::\") > 0) {\n+            resourceDomain = resource.substring(0, resource.indexOf(\"::\"));\n+        } else {\n+            resourceDomain = \"prn\"; // default\n+        }\n+\n+        for (AccessControlEntry accessControlEntry : accessControlList.getEntries()) {\n+            // Replaces any `*` with `.*`, if it's not already preceded by `.`, for regex processing.\n+            // So, `pravega:://*` becomes `pravega:://.*` and `pravega:://scope:*` becomes `pravega:://scope:.*`\n+            String aclResourcePattern = accessControlEntry.getResourcePattern().replaceAll(\"(?!=.)\\\\*\", \".*\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a000a66776c32c3e475cfd7671eca45a1fbb5b69"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4NjI4NQ==", "bodyText": "String.join?\nor aceStrings.stream().collect(Collectors.joining(...))?", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r470686285", "createdAt": "2020-08-14T15:13:04Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/test/java/io/pravega/controller/auth/AuthFileUtils.java", "diffHunk": "@@ -23,4 +28,26 @@ public static String credentialsAndAclAsString(String username, String password,\n         // This will return a string that looks like this:\"<username>:<pasword>:acl\\n\"\n         return String.format(\"%s:%s:%s%n\", username, password, acl);\n     }\n+\n+    public static String createAclString(@NonNull List<String> aceStrings) {\n+        StringBuilder builder = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a000a66776c32c3e475cfd7671eca45a1fbb5b69"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4NjczMw==", "bodyText": "For this simple case it's probably easier to do a direct string concatenation. StringBuilder won't help much.", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r470686733", "createdAt": "2020-08-14T15:13:50Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/test/java/io/pravega/controller/auth/AuthFileUtils.java", "diffHunk": "@@ -23,4 +28,26 @@ public static String credentialsAndAclAsString(String username, String password,\n         // This will return a string that looks like this:\"<username>:<pasword>:acl\\n\"\n         return String.format(\"%s:%s:%s%n\", username, password, acl);\n     }\n+\n+    public static String createAclString(@NonNull List<String> aceStrings) {\n+        StringBuilder builder = new StringBuilder();\n+        for (String aceString: aceStrings) {\n+            builder.append(aceString).append(\";\");\n+        }\n+        return builder.toString();\n+    }\n+\n+    @SneakyThrows\n+    public static void addAuthFileEntry(@NonNull FileWriter writer, @NonNull String entryAsString) {\n+        StringBuilder builder = new StringBuilder(entryAsString);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a000a66776c32c3e475cfd7671eca45a1fbb5b69"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4NzAyOA==", "bodyText": "Recommend using String.format. Easier to read.", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r470687028", "createdAt": "2020-08-14T15:14:21Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/test/java/io/pravega/controller/auth/AuthFileUtils.java", "diffHunk": "@@ -23,4 +28,26 @@ public static String credentialsAndAclAsString(String username, String password,\n         // This will return a string that looks like this:\"<username>:<pasword>:acl\\n\"\n         return String.format(\"%s:%s:%s%n\", username, password, acl);\n     }\n+\n+    public static String createAclString(@NonNull List<String> aceStrings) {\n+        StringBuilder builder = new StringBuilder();\n+        for (String aceString: aceStrings) {\n+            builder.append(aceString).append(\";\");\n+        }\n+        return builder.toString();\n+    }\n+\n+    @SneakyThrows\n+    public static void addAuthFileEntry(@NonNull FileWriter writer, @NonNull String entryAsString) {\n+        StringBuilder builder = new StringBuilder(entryAsString);\n+        writer.write(builder.append(\"\\n\").toString());\n+    }\n+\n+    @SneakyThrows\n+    public static void addAuthFileEntry(@NonNull FileWriter writer, @NonNull String username,\n+                                           @NonNull String hashedPwd, @NonNull List<String> aceStrings) {\n+        StringBuilder builder = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a000a66776c32c3e475cfd7671eca45a1fbb5b69"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4NzY3OA==", "bodyText": "Arrays.asList -> Collections.singletonList", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r470687678", "createdAt": "2020-08-14T15:15:32Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/test/java/io/pravega/controller/rest/v1/SecureStreamMetaDataTests.java", "diffHunk": "@@ -11,40 +11,50 @@\n \n import io.grpc.ServerBuilder;\n import io.pravega.test.common.SecurityConfigDefaults;\n-import io.pravega.controller.server.rpc.auth.AuthHandlerManager;\n-import io.pravega.controller.server.rpc.auth.StrongPasswordProcessor;\n+import io.pravega.controller.server.security.auth.handler.AuthHandlerManager;\n+import io.pravega.controller.server.security.auth.StrongPasswordProcessor;\n import io.pravega.controller.server.rpc.grpc.impl.GRPCServerConfigImpl;\n import io.pravega.test.common.TestUtils;\n import javax.ws.rs.client.Invocation;\n import javax.ws.rs.core.HttpHeaders;\n import javax.ws.rs.core.MultivaluedHashMap;\n import javax.ws.rs.core.MultivaluedMap;\n-import org.junit.Before;\n-\n import java.io.File;\n import java.io.FileWriter;\n+import java.util.Arrays;\n+import org.junit.Before;\n+\n+import static io.pravega.controller.auth.AuthFileUtils.addAuthFileEntry;\n \n public class SecureStreamMetaDataTests extends  StreamMetaDataTests {\n+\n     @Override\n     @Before\n     public void setup() throws Exception {\n-        File file = File.createTempFile(\"passwd\", \".txt\");\n-\n+        File file = File.createTempFile(\"SecureStreamMetaDataTests\", \".txt\");\n         StrongPasswordProcessor passwordEncryptor = StrongPasswordProcessor.builder().build();\n \n         try (FileWriter writer = new FileWriter(file.getAbsolutePath())) {\n             String passwd = passwordEncryptor.encryptPassword(\"1111_aaaa\");\n \n             // Admin has READ_WRITE permission to everything\n-            writer.write(\"admin:\" + passwd + \":*,READ_UPDATE\\n\");\n+            addAuthFileEntry(writer, \"admin\", passwd, Arrays.asList(\"prn::*,READ_UPDATE\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a000a66776c32c3e475cfd7671eca45a1fbb5b69"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY4OTI2Mg==", "bodyText": "Since you know your replaced string is at the beginning, use substring. Much faster to process.", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r470689262", "createdAt": "2020-08-14T15:18:27Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/delegationtoken/TokenVerifierImpl.java", "diffHunk": "@@ -75,6 +75,14 @@ public JsonWebToken verifyToken(@NonNull String resource, String token, @NonNull\n      * @return\n      */\n     private boolean resourceMatchesClaimKey(String claimKey, String resource) {\n+        log.trace(\"claimKey = {}, resourceKey = {}\", claimKey, resource);\n+        if (claimKey.startsWith(\"prn::\")) {\n+            claimKey = claimKey.replace(\"prn::/\", \"\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a000a66776c32c3e475cfd7671eca45a1fbb5b69"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e2196ae352b37497b658da5cc725918172aa82f", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/4e2196ae352b37497b658da5cc725918172aa82f", "committedDate": "2020-08-17T02:11:14Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a459ca0275089b845832c1aac7460f9241ed1462", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/a459ca0275089b845832c1aac7460f9241ed1462", "committedDate": "2020-08-17T08:13:55Z", "message": "Address review comments\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63b6c65df46adc77db50e1d6da80799adb8a503a", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/63b6c65df46adc77db50e1d6da80799adb8a503a", "committedDate": "2020-08-17T08:15:12Z", "message": "Merge remote-tracking branch 'origin/auth-resources-permissions' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "060e8d6546291991fc7b6d66970687de9f25cfd3", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/060e8d6546291991fc7b6d66970687de9f25cfd3", "committedDate": "2020-08-18T02:40:58Z", "message": "Push replacement of `*` with `.*` in resource patterns from authorization time to ACE construction time\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97d507b9b025950730d0fd61a05d25e793b65207", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/97d507b9b025950730d0fd61a05d25e793b65207", "committedDate": "2020-08-19T03:34:49Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "095cfed037b8bef930c5d8dc939bc495de4623c5", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/095cfed037b8bef930c5d8dc939bc495de4623c5", "committedDate": "2020-08-19T06:06:50Z", "message": "Optimize resource parts replacement\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a12909f647b3af7c6759d4560211165b38a3c8b", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/1a12909f647b3af7c6759d4560211165b38a3c8b", "committedDate": "2020-08-19T06:27:03Z", "message": "Merge remote-tracking branch 'origin/auth-resources-permissions' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/436cfc6991f01911098c1f2860b620734d5f65af", "committedDate": "2020-08-21T04:50:41Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMTQyNDI3", "url": "https://github.com/pravega/pravega/pull/5051#pullrequestreview-472142427", "createdAt": "2020-08-21T04:50:17Z", "commit": {"oid": "1a12909f647b3af7c6759d4560211165b38a3c8b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNDo1MDoxN1rOHEbfiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMTo0NjoyOVrOHFgyRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQwNjc5NQ==", "bodyText": "should we make the format a constant?", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r474406795", "createdAt": "2020-08-21T04:50:17Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/AuthorizationResourceImpl.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth;\n+\n+import io.pravega.common.Exceptions;\n+\n+/**\n+ * The main implementation of the {@link AuthorizationResource} class.\n+ */\n+public class AuthorizationResourceImpl implements AuthorizationResource {\n+    public static final String DOMAIN_PART_SUFFIX = \"prn::\";\n+    private static final String TAG_SCOPE = \"scope\";\n+    private static final String TAG_STREAM = \"stream\";\n+    private static final String TAG_READERGROUP = \"reader-group\";\n+    private static final String TAG_KEYVALUETABLE = \"key-value-table\";\n+\n+    private static final String ROOT_RESOURCE = String.format(\"%s/\", DOMAIN_PART_SUFFIX);\n+\n+    @Override\n+    public String ofScopes() {\n+        return ROOT_RESOURCE;\n+    }\n+\n+    @Override\n+    public String ofScope(String scopeName) {\n+        Exceptions.checkNotNullOrEmpty(scopeName, \"scopeName\");\n+        return String.format(\"%s/%s:%s\", DOMAIN_PART_SUFFIX, TAG_SCOPE, scopeName);\n+    }\n+\n+    @Override\n+    public String ofStreamsInScope(String scopeName) {\n+        return ofScope(scopeName);\n+    }\n+\n+    @Override\n+    public String ofStreamInScope(String scopeName, String streamName) {\n+        Exceptions.checkNotNullOrEmpty(scopeName, \"scopeName\");\n+        Exceptions.checkNotNullOrEmpty(streamName, \"streamName\");\n+        return String.format(\"%s/%s:%s\", ofScope(scopeName), TAG_STREAM, streamName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a12909f647b3af7c6759d4560211165b38a3c8b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMTQxNw==", "bodyText": "same here and elsewhere", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r475521417", "createdAt": "2020-08-24T11:02:54Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/LegacyAuthorizationResourceImpl.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth;\n+\n+import io.pravega.common.Exceptions;\n+\n+/**\n+ * A legacy implementation that constructs resource strings in the old format.\n+ */\n+public final class LegacyAuthorizationResourceImpl implements AuthorizationResource {\n+\n+    public String ofScopes() {\n+        return \"/\";\n+    }\n+\n+    public String ofScope(String scopeName) {\n+        Exceptions.checkNotNullOrEmpty(scopeName, \"scopeName\");\n+        return scopeName;\n+    }\n+\n+    public String ofStreamsInScope(String scopeName) {\n+        return Exceptions.checkNotNullOrEmpty(scopeName, \"scopeName\");\n+    }\n+\n+    public String ofStreamInScope(String scopeName, String streamName) {\n+        Exceptions.checkNotNullOrEmpty(streamName, \"streamName\");\n+        return String.format(\"%s/%s\", ofStreamsInScope(scopeName), streamName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMjA2MQ==", "bodyText": "Should this class be in controller or be moved to \"auth\" module.\nThis has nothing specific to controller's auth.", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r475522061", "createdAt": "2020-08-24T11:04:17Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/StrongPasswordProcessor.java", "diffHunk": "@@ -7,7 +7,7 @@\n  *\n  *     http://www.apache.org/licenses/LICENSE-2.0\n  */\n-package io.pravega.controller.server.rpc.auth;\n+package io.pravega.controller.server.security.auth;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyMzA4OQ==", "bodyText": "same comment here - should we take the opportunity to move this to auth module as this is generic User Principal which is serializable.", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r475523089", "createdAt": "2020-08-24T11:06:23Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/UserPrincipal.java", "diffHunk": "@@ -7,7 +7,7 @@\n  *\n  *     http://www.apache.org/licenses/LICENSE-2.0\n  */\n-package io.pravega.controller.server.rpc.auth;\n+package io.pravega.controller.server.security.auth;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyNDMxNw==", "bodyText": "so legacy pattern here does not have the \"domain\". and we do not have .* there. right?\nso in the new pattern, why do we allow for pravega:://scope:* at all if this is the new pattern and we want \".*\"", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r475524317", "createdAt": "2020-08-24T11:09:12Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/handler/impl/AccessControlEntry.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth.handler.impl;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.base.Strings;\n+import io.pravega.auth.AuthHandler;\n+import lombok.AccessLevel;\n+import lombok.Getter;\n+import lombok.NonNull;\n+\n+import java.util.regex.Pattern;\n+\n+/**\n+ * An entry of an {@link AccessControlList}.\n+ */\n+class AccessControlEntry {\n+    private static final Pattern PATTERN_STAR_NOT_PRECEDED_BY_DOT = Pattern.compile(\"(?!=.)\\\\*\");\n+\n+    @Getter(AccessLevel.PACKAGE)\n+    private final String resourcePattern;\n+\n+    @Getter(AccessLevel.PACKAGE)\n+    private final AuthHandler.Permissions permissions;\n+\n+    @VisibleForTesting\n+    AccessControlEntry(@NonNull String aceResource, @NonNull AuthHandler.Permissions permissions) {\n+        this(aceResource, permissions, false);\n+    }\n+\n+    @VisibleForTesting\n+    AccessControlEntry(@NonNull String aceResource, @NonNull AuthHandler.Permissions permissions, boolean isLegacyFormat) {\n+        // Replaces any `*` with `.*`, if it's not already preceded by `.`, for regex processing.\n+        // So, `pravega:://*` becomes `pravega:://.*` and `pravega:://scope:*` becomes `pravega:://scope:.*`\n+        this.resourcePattern = isLegacyFormat ?  aceResource :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyNDg4Ng==", "bodyText": "in which situations can \"ace\" split not be of length 2? and is that an illegal argument or is ace = null legit if the number of tokens in it are 3 or 1?", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r475524886", "createdAt": "2020-08-24T11:10:27Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/handler/impl/AccessControlEntry.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth.handler.impl;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.base.Strings;\n+import io.pravega.auth.AuthHandler;\n+import lombok.AccessLevel;\n+import lombok.Getter;\n+import lombok.NonNull;\n+\n+import java.util.regex.Pattern;\n+\n+/**\n+ * An entry of an {@link AccessControlList}.\n+ */\n+class AccessControlEntry {\n+    private static final Pattern PATTERN_STAR_NOT_PRECEDED_BY_DOT = Pattern.compile(\"(?!=.)\\\\*\");\n+\n+    @Getter(AccessLevel.PACKAGE)\n+    private final String resourcePattern;\n+\n+    @Getter(AccessLevel.PACKAGE)\n+    private final AuthHandler.Permissions permissions;\n+\n+    @VisibleForTesting\n+    AccessControlEntry(@NonNull String aceResource, @NonNull AuthHandler.Permissions permissions) {\n+        this(aceResource, permissions, false);\n+    }\n+\n+    @VisibleForTesting\n+    AccessControlEntry(@NonNull String aceResource, @NonNull AuthHandler.Permissions permissions, boolean isLegacyFormat) {\n+        // Replaces any `*` with `.*`, if it's not already preceded by `.`, for regex processing.\n+        // So, `pravega:://*` becomes `pravega:://.*` and `pravega:://scope:*` becomes `pravega:://scope:.*`\n+        this.resourcePattern = isLegacyFormat ?  aceResource :\n+                PATTERN_STAR_NOT_PRECEDED_BY_DOT.matcher(aceResource).replaceAll(\".*\");\n+        this.permissions = permissions;\n+    }\n+\n+    static AccessControlEntry fromString(String ace) {\n+        String[] splits = null;\n+        if (Strings.isNullOrEmpty(ace) || (splits = ace.split(\",\")).length != 2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyNTkzMA==", "bodyText": "is it possible that some ACLs are defined in legacy format while others are in new format? or is it expected to be consistent for all ACLs?", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r475525930", "createdAt": "2020-08-24T11:12:39Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/handler/impl/AclAuthorizer.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth.handler.impl;\n+\n+import io.pravega.auth.AuthHandler;\n+\n+/**\n+ * Authorizes resources based on supplied ACLs.\n+ */\n+abstract class AclAuthorizer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU0MDQ0NQ==", "bodyText": "what is the reason to use ::// instead of :// ?", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r475540445", "createdAt": "2020-08-24T11:42:47Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/handler/impl/AclAuthorizerImpl.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth.handler.impl;\n+\n+import io.pravega.auth.AuthHandler;\n+import lombok.NonNull;\n+\n+class AclAuthorizerImpl extends AclAuthorizer {\n+\n+    @Override\n+    public AuthHandler.Permissions authorize(@NonNull AccessControlList accessControlList, @NonNull String resource) {\n+        AuthHandler.Permissions result = AuthHandler.Permissions.NONE;\n+\n+        String resourceDomain;\n+        int indexOfPartsSeparator = resource.indexOf(\"::\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU0MDc1OA==", "bodyText": "and should you simply split it by \":://\" ?", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r475540758", "createdAt": "2020-08-24T11:43:32Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/handler/impl/AclAuthorizerImpl.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth.handler.impl;\n+\n+import io.pravega.auth.AuthHandler;\n+import lombok.NonNull;\n+\n+class AclAuthorizerImpl extends AclAuthorizer {\n+\n+    @Override\n+    public AuthHandler.Permissions authorize(@NonNull AccessControlList accessControlList, @NonNull String resource) {\n+        AuthHandler.Permissions result = AuthHandler.Permissions.NONE;\n+\n+        String resourceDomain;\n+        int indexOfPartsSeparator = resource.indexOf(\"::\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU0MDQ0NQ=="}, "originalCommit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU0MTEyNQ==", "bodyText": "when we are using the new authorization scheme, then should we even allow for resource domain to be unspecified?", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r475541125", "createdAt": "2020-08-24T11:44:22Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/handler/impl/AclAuthorizerImpl.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth.handler.impl;\n+\n+import io.pravega.auth.AuthHandler;\n+import lombok.NonNull;\n+\n+class AclAuthorizerImpl extends AclAuthorizer {\n+\n+    @Override\n+    public AuthHandler.Permissions authorize(@NonNull AccessControlList accessControlList, @NonNull String resource) {\n+        AuthHandler.Permissions result = AuthHandler.Permissions.NONE;\n+\n+        String resourceDomain;\n+        int indexOfPartsSeparator = resource.indexOf(\"::\");\n+        if (indexOfPartsSeparator > 0) {\n+            resourceDomain = resource.substring(0, indexOfPartsSeparator);\n+        } else {\n+            resourceDomain = \"prn\"; // default", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU0MTM2MQ==", "bodyText": "nit: two nested if conditions. can it be simplified?", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r475541361", "createdAt": "2020-08-24T11:44:51Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/handler/impl/AclAuthorizerImpl.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth.handler.impl;\n+\n+import io.pravega.auth.AuthHandler;\n+import lombok.NonNull;\n+\n+class AclAuthorizerImpl extends AclAuthorizer {\n+\n+    @Override\n+    public AuthHandler.Permissions authorize(@NonNull AccessControlList accessControlList, @NonNull String resource) {\n+        AuthHandler.Permissions result = AuthHandler.Permissions.NONE;\n+\n+        String resourceDomain;\n+        int indexOfPartsSeparator = resource.indexOf(\"::\");\n+        if (indexOfPartsSeparator > 0) {\n+            resourceDomain = resource.substring(0, indexOfPartsSeparator);\n+        } else {\n+            resourceDomain = \"prn\"; // default\n+        }\n+\n+        for (AccessControlEntry accessControlEntry : accessControlList.getEntries()) {\n+            // You could have a null ACE in the ACL if you had a malformed entry such as `prn::/scope:readresource`\n+            // having no permissions set.\n+            if (accessControlEntry != null && accessControlEntry.resourceStartsWith(resourceDomain)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTU0MjA4Ng==", "bodyText": "Should we move this class to a common module like \"auth\" such that schema registry and other services can leverage the auth module", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r475542086", "createdAt": "2020-08-24T11:46:29Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/handler/impl/AclAuthorizerImpl.java", "diffHunk": "@@ -0,0 +1,41 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth.handler.impl;\n+\n+import io.pravega.auth.AuthHandler;\n+import lombok.NonNull;\n+\n+class AclAuthorizerImpl extends AclAuthorizer {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6f00e86ff45a164bac6615c23c5091ddc43bde9", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/d6f00e86ff45a164bac6615c23c5091ddc43bde9", "committedDate": "2020-08-26T15:28:04Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1051184bd9337e3f27d10f3a4a551a4c1fa0cb8", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/a1051184bd9337e3f27d10f3a4a551a4c1fa0cb8", "committedDate": "2020-08-27T10:09:10Z", "message": "Address review comments\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f432d3f5b2890a47bfd4ac57c58a39583639f839", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/f432d3f5b2890a47bfd4ac57c58a39583639f839", "committedDate": "2020-08-31T03:42:26Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fcc6f35ff16b9fb62e3ecaa4c7cf7b00b6bf7353", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/fcc6f35ff16b9fb62e3ecaa4c7cf7b00b6bf7353", "committedDate": "2020-09-02T05:46:27Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f868b5acf8b7c5462ac5092c9fe3ef32a36f1b5", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/9f868b5acf8b7c5462ac5092c9fe3ef32a36f1b5", "committedDate": "2020-09-02T08:15:54Z", "message": "Changes to fix compilation issues after merge from master\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNTk4OTQ0", "url": "https://github.com/pravega/pravega/pull/5051#pullrequestreview-480598944", "createdAt": "2020-09-02T08:31:13Z", "commit": {"oid": "9f868b5acf8b7c5462ac5092c9fe3ef32a36f1b5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODozMToxM1rOHLj-Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQwODo0NDo1NlrOHLkuIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg4NTcwMg==", "bodyText": "I suppose we are deprecating the previous format, how are we going to indicate that it is deprecated? Via documentation? We can certainly annotate this class, but that's not visible to users.", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r481885702", "createdAt": "2020-09-02T08:31:13Z", "author": {"login": "fpj"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/LegacyAuthorizationResourceImpl.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth;\n+\n+import io.pravega.common.Exceptions;\n+\n+/**\n+ * A legacy implementation that constructs resource strings in the old format.\n+ */\n+public final class LegacyAuthorizationResourceImpl implements AuthorizationResource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f868b5acf8b7c5462ac5092c9fe3ef32a36f1b5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg5ODAxOQ==", "bodyText": "A minor point, but shouldn't it be an exception rather returning null? We expect a valid string, and if the string is not valid, then I'd say it is an exception.", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r481898019", "createdAt": "2020-09-02T08:44:56Z", "author": {"login": "fpj"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/handler/impl/AccessControlEntry.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth.handler.impl;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import com.google.common.base.Strings;\n+import io.pravega.auth.AuthHandler;\n+import lombok.AccessLevel;\n+import lombok.Getter;\n+import lombok.NonNull;\n+\n+import java.util.regex.Pattern;\n+\n+/**\n+ * An entry of an {@link AccessControlList}.\n+ */\n+class AccessControlEntry {\n+    private static final Pattern PATTERN_STAR_NOT_PRECEDED_BY_DOT = Pattern.compile(\"(?!=.)\\\\*\");\n+\n+    @Getter(AccessLevel.PACKAGE)\n+    private final String resourcePattern;\n+\n+    @Getter(AccessLevel.PACKAGE)\n+    private final AuthHandler.Permissions permissions;\n+\n+    @VisibleForTesting\n+    AccessControlEntry(@NonNull String aceResource, @NonNull AuthHandler.Permissions permissions) {\n+        this(aceResource, permissions, false);\n+    }\n+\n+    @VisibleForTesting\n+    AccessControlEntry(@NonNull String aceResource, @NonNull AuthHandler.Permissions permissions, boolean isLegacyFormat) {\n+        // Replaces any `*` with `.*`, if it's not already preceded by `.`, for regex processing.\n+        // So, `pravega:://*` becomes `pravega:://.*` and `pravega:://scope:*` becomes `pravega:://scope:.*`\n+        this.resourcePattern = isLegacyFormat ?  aceResource :\n+                PATTERN_STAR_NOT_PRECEDED_BY_DOT.matcher(aceResource).replaceAll(\".*\");\n+        this.permissions = permissions;\n+    }\n+\n+    static AccessControlEntry fromString(String ace) {\n+        String[] splits = null;\n+        if (Strings.isNullOrEmpty(ace) || (splits = ace.split(\",\")).length != 2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyNDg4Ng=="}, "originalCommit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNDk1NjQ2", "url": "https://github.com/pravega/pravega/pull/5051#pullrequestreview-481495646", "createdAt": "2020-09-03T05:08:08Z", "commit": {"oid": "9f868b5acf8b7c5462ac5092c9fe3ef32a36f1b5"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNTowODowOFrOHMWGoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNToyNDowMFrOHMWXGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcwNzEwNA==", "bodyText": "nit: the comment \"Returns\" for an interface seems odd. unless its a functional interface, which it is not.", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r482707104", "createdAt": "2020-09-03T05:08:08Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/AuthorizationResource.java", "diffHunk": "@@ -7,12 +7,10 @@\n  *\n  *     http://www.apache.org/licenses/LICENSE-2.0\n  */\n-package io.pravega.controller.server;\n-\n-import io.pravega.common.Exceptions;\n+package io.pravega.controller.server.security.auth;\n \n /**\n- * A utility class with methods for preparing string representations of auth-protected resources.\n+ * Returns string representations of auth-protected resources.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f868b5acf8b7c5462ac5092c9fe3ef32a36f1b5"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcwODMyMg==", "bodyText": "in that case, if this class is not being used at all, should this even be included in the code? or should we simply remove it entirely and cover the differences in the PR description (and its already present in PDP)", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r482708322", "createdAt": "2020-09-03T05:12:46Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/LegacyAuthorizationResourceImpl.java", "diffHunk": "@@ -0,0 +1,51 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth;\n+\n+import io.pravega.common.Exceptions;\n+\n+/**\n+ * A legacy implementation that constructs resource strings in the old format.\n+ */\n+public final class LegacyAuthorizationResourceImpl implements AuthorizationResource {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTg4NTcwMg=="}, "originalCommit": {"oid": "9f868b5acf8b7c5462ac5092c9fe3ef32a36f1b5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxMDc3Mg==", "bodyText": "So while upgrading from 0.8 to 0.9 admins will need to rewrite their acls in the new format before doing the upgrade.. right?", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r482710772", "createdAt": "2020-09-03T05:21:54Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/handler/impl/AclAuthorizer.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth.handler.impl;\n+\n+import io.pravega.auth.AuthHandler;\n+\n+/**\n+ * Authorizes resources based on supplied ACLs.\n+ */\n+abstract class AclAuthorizer {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTUyNTkzMA=="}, "originalCommit": {"oid": "436cfc6991f01911098c1f2860b620734d5f65af"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcxMTMyMA==", "bodyText": "so if the code for legacy auth instance is only for comparison sake, should we even have a method to instantiate it?", "url": "https://github.com/pravega/pravega/pull/5051#discussion_r482711320", "createdAt": "2020-09-03T05:24:00Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/security/auth/handler/impl/AclAuthorizer.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.security.auth.handler.impl;\n+\n+import io.pravega.auth.AuthHandler;\n+\n+/**\n+ * Authorizes resources based on supplied ACLs.\n+ */\n+abstract class AclAuthorizer {\n+\n+    private final static AclAuthorizerImpl AUTHORIZER_FOR_NEW_FORMAT = new AclAuthorizerImpl();\n+    private final static LegacyAclAuthorizerImpl AUTHORIZER_FOR_LEGACY_FORMAT = new LegacyAclAuthorizerImpl();\n+\n+    /**\n+     * Returns a cached instance of the legacy implementation.\n+     *\n+     * @return an instance\n+     */\n+    static AclAuthorizer legacyAuthorizerInstance() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f868b5acf8b7c5462ac5092c9fe3ef32a36f1b5"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f053512c0254879d25e866a2917344c7f3c995cc", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/f053512c0254879d25e866a2917344c7f3c995cc", "committedDate": "2020-09-04T03:34:56Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22d0368582a8a1af06280f78aae24c4b8ff63498", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/22d0368582a8a1af06280f78aae24c4b8ff63498", "committedDate": "2020-09-08T09:46:28Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MzA5NTc2", "url": "https://github.com/pravega/pravega/pull/5051#pullrequestreview-484309576", "createdAt": "2020-09-08T16:30:54Z", "commit": {"oid": "22d0368582a8a1af06280f78aae24c4b8ff63498"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc25cd9f06ce657f73e40bb535395cdeff55ce1c", "author": {"user": {"login": "shiveshr", "name": "shivesh ranjan"}}, "url": "https://github.com/pravega/pravega/commit/cc25cd9f06ce657f73e40bb535395cdeff55ce1c", "committedDate": "2020-09-09T07:18:04Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88be4769834ebaedd19446d31cfee7764f26afeb", "author": {"user": {"login": "shiveshr", "name": "shivesh ranjan"}}, "url": "https://github.com/pravega/pravega/commit/88be4769834ebaedd19446d31cfee7764f26afeb", "committedDate": "2020-09-09T07:58:24Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0086b5173f6b624e9a3d55d98d7bd23440c3d93", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/c0086b5173f6b624e9a3d55d98d7bd23440c3d93", "committedDate": "2020-09-10T03:54:33Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a195a3244b8ad8a0f5bbe8ec57439ad610b19145", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/a195a3244b8ad8a0f5bbe8ec57439ad610b19145", "committedDate": "2020-09-11T04:49:52Z", "message": "Address review comments\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0942c4ba4e056b81136c4cecda07d3dcd4c5307f", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/0942c4ba4e056b81136c4cecda07d3dcd4c5307f", "committedDate": "2020-09-11T04:50:13Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72b8f820f8e15f542949055eeb0c67cc14cd3236", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/72b8f820f8e15f542949055eeb0c67cc14cd3236", "committedDate": "2020-09-11T10:35:59Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "224f3629bff24dcb9533c3d9295dda149139282f", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/224f3629bff24dcb9533c3d9295dda149139282f", "committedDate": "2020-09-16T03:14:53Z", "message": "Merge branch 'master' into auth-resources-permissions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68ee7ac189d6d86bc9613fa61ea016d061043257", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/68ee7ac189d6d86bc9613fa61ea016d061043257", "committedDate": "2020-09-16T09:59:11Z", "message": "Address review comments\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5NjYzMDI3", "url": "https://github.com/pravega/pravega/pull/5051#pullrequestreview-489663027", "createdAt": "2020-09-16T14:06:44Z", "commit": {"oid": "68ee7ac189d6d86bc9613fa61ea016d061043257"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4023, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}