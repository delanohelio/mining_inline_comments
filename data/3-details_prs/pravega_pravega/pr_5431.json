{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMDIxNTk1", "number": 5431, "title": "Issue 5430: Resource leak in Data Reovery CLI Tool Implementation", "bodyText": "Change log description\nInstead of using close from AutoClosable, using @CleanUp to clean up the resources. Instead of creating a thread pool, using thread from the command state.\nPurpose of the change\nFixes #5430 #5428\nWhat the code does\nUsing lombok @CleanUp to clean up the resources in DurableLogRecoveryCommand & StorageListSegmentsCommand implementation.\nHow to verify it\nBuild shall pass.", "createdAt": "2020-12-16T09:31:24Z", "url": "https://github.com/pravega/pravega/pull/5431", "merged": true, "mergeCommit": {"oid": "42be8280d1d824e77e16d85d7a8e035ce7f4546c"}, "closed": true, "closedAt": "2020-12-16T22:12:56Z", "author": {"login": "ManishKumarKeshri"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmrTdmAH2gAyNTQxMDIxNTk1OjI1MmM2NTg1M2Q4ZjlmOGNkYTllOWRkNTYzOWU4NGMzYjk1MjQxMTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdm0uCDAFqTU1NDA0NjQzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "252c65853d8f9f8cda9e9dd5639e84c3b9524118", "author": {"user": null}, "url": "https://github.com/pravega/pravega/commit/252c65853d8f9f8cda9e9dd5639e84c3b9524118", "committedDate": "2020-12-16T09:13:32Z", "message": "Removing AutoClosable.\n\nSigned-off-by: ManishKumarKeshri <manish.keshri562@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNzAyMzI0", "url": "https://github.com/pravega/pravega/pull/5431#pullrequestreview-553702324", "createdAt": "2020-12-16T13:50:08Z", "commit": {"oid": "252c65853d8f9f8cda9e9dd5639e84c3b9524118"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNzE2OTUy", "url": "https://github.com/pravega/pravega/pull/5431#pullrequestreview-553716952", "createdAt": "2020-12-16T14:06:22Z", "commit": {"oid": "252c65853d8f9f8cda9e9dd5639e84c3b9524118"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07a10964bc78557a222b78b105ad791d7281dbd9", "author": {"user": null}, "url": "https://github.com/pravega/pravega/commit/07a10964bc78557a222b78b105ad791d7281dbd9", "committedDate": "2020-12-16T15:54:53Z", "message": "Already tagged with @Cleanup, so no need to closed with catched exceeption.\n\nSigned-off-by: ManishKumarKeshri <manish.keshri562@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MDQ2NDM2", "url": "https://github.com/pravega/pravega/pull/5431#pullrequestreview-554046436", "createdAt": "2020-12-16T20:11:41Z", "commit": {"oid": "07a10964bc78557a222b78b105ad791d7281dbd9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDoxMTo0MlrOIHXN1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMDoxMTo0MlrOIHXN1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU5MTMxNg==", "bodyText": "zkClient and dataLogFactory need not to be closed, as they are initialized with @CleanUp tag. In case of an exception, it will be popped up and cleanUp will clean these variables.", "url": "https://github.com/pravega/pravega/pull/5431#discussion_r544591316", "createdAt": "2020-12-16T20:11:42Z", "author": {"login": "ManishKumarKeshri"}, "path": "cli/admin/src/main/java/io/pravega/cli/admin/dataRecovery/DurableLogRecoveryCommand.java", "diffHunk": "@@ -91,55 +85,43 @@\n     public DurableLogRecoveryCommand(CommandArgs args) {\n         super(args);\n         this.containerCount = getServiceConfig().getContainerCount();\n-        this.storageFactory = createStorageFactory(executorService);\n-        this.storage = this.storageFactory.createStorageAdapter();\n-        this.zkClient = createZKClient();\n+        this.storageFactory = createStorageFactory(this.executorService);\n+    }\n+\n+    @Override\n+    public void execute() throws Exception {\n+        @Cleanup\n+        Storage storage = this.storageFactory.createStorageAdapter();\n+        @Cleanup\n+        val zkClient = createZKClient();\n \n         val bkConfig = getCommandArgs().getState().getConfigBuilder()\n                 .include(BookKeeperConfig.builder().with(BookKeeperConfig.ZK_ADDRESS, getServiceConfig().getZkURL()))\n                 .build().getConfig(BookKeeperConfig::builder);\n-        this.dataLogFactory = new BookKeeperLogFactory(bkConfig, this.zkClient, executorService);\n-    }\n-\n-    @Override\n-    public void close() throws Exception {\n-        if (this.dataLogFactory != null) {\n-            this.dataLogFactory.close();\n-        }\n-        this.zkClient.close();\n-        this.storage.close();\n-        ExecutorServiceHelpers.shutdown(Duration.ofSeconds(2), executorService);\n-    }\n+        @Cleanup\n+        val dataLogFactory = new BookKeeperLogFactory(bkConfig, zkClient, executorService);\n \n-    @Override\n-    public void execute() throws Exception {\n         outputInfo(\"Container Count = %d\", this.containerCount);\n \n-        try {\n-            this.dataLogFactory.initialize();\n-        } catch (DurableDataLogException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07a10964bc78557a222b78b105ad791d7281dbd9"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3803, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}