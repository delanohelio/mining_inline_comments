{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2OTQ4Mzg4", "number": 4935, "title": "Issue 4933: (Key-Value Tables) Enforcing Key and Value serialization limits", "bodyText": "Change log description\n\nEnforcing the maximum Key Length, maximum Value Length and maximum Key Family Length for all KeyValueTable operations.\n\nMax Key Length is 4KB, Max Value Length is 1MB-1KB, Max Key Family Length is 2KB.\n\n\nEnsuring no KeyValueTable wire command exceeds the maximum wire command size.\n\nPurpose of the change\nFixes #4933.\nWhat the code does\n\nKeyValueTable\n\nExposed constants that define the maximum key length and maximum value length\nExposed a constant that defines the maximum number of items that can be updated, removed or retrieved at any given time.\nExposed a constant that defines the maximum serialization size for any multi-key operations (even though each key and value are subject to their own constraints, we enforce that a batch of these will not exceed pre-set limits).\n\nThis value is required so that we do not exceed the maximum Wire Command size and inherently the Netty frame size.\n\n\n\n\nTableSegment\n\nIf a Get request exceeds a predefined number of keys (calculated to around 15, which ensures that no response exceeds the max wire command size), then that get request is split into non-overlapping sub-requests (of at most 15 keys) and issued in parallel to the Segment Store.\nThe requests are \"throttled\" on the client side by ensuring no more than 5 concurrent calls per request can execute at any given time.\nThe response is compiled and returned to the upstream code as if no split happened.\n\n\nOrderedProcessor\n\nRenamed from OrderedItemProcessor and moved to a new package (where it belongs)\nSince this was no longer used by anything else, I repurposed it to the needs of the TableSegmentImpl, by simplifying its behavior.\nIt now acts as a simple \"capacity limiter\" that only allows a certain number of tasks to execute concurrently and queues the rest.\n\n\n\nHow to verify it\nAll unit and integration tests must pass. New tests have been added to verify these limits and new TableSegmentImpl.get behavior.", "createdAt": "2020-07-09T15:52:24Z", "url": "https://github.com/pravega/pravega/pull/4935", "merged": true, "mergeCommit": {"oid": "2a94228bb18df5511406094ed04c8d7893085954"}, "closed": true, "closedAt": "2020-07-10T22:15:25Z", "author": {"login": "andreipaduroiu"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczDJ-lAH2gAyNDQ2OTQ4Mzg4OmFlMWU3OWU5M2IwNzA1MDg0YTRmODNhNjI3ODY1NDA0NjAzNmU3ZjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczbksQAH2gAyNDQ2OTQ4Mzg4OjYxNDAzODEyNWIyZDJkNWFiODY3YmM1Yjc2YWQ1NmFkZDBlYzI1N2Y=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ae1e79e93b0705084a4f83a6278654046036e7f3", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/ae1e79e93b0705084a4f83a6278654046036e7f3", "committedDate": "2020-07-08T23:36:50Z", "message": "KeyFamilySerializer: Max Key Family Length is 2KB.\nTableSegment: Enforcing max key length, max value length; defined max batch count and size.\nKeyValueTable: Defined and enforcing max serialized key length (4KB).\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5e9fec7b0e5ff497667d4cc0e1d69a0406b589b", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/a5e9fec7b0e5ff497667d4cc0e1d69a0406b589b", "committedDate": "2020-07-09T15:36:44Z", "message": "PravegaRequestProcessor.readTable: truncating result if it exceeds maximum response size.\nTableSegmentImpl.get: handling truncated result and issuing subsequent requests in that case.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26765396a37378714f430060f1fc639b164f2a9e", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/26765396a37378714f430060f1fc639b164f2a9e", "committedDate": "2020-07-09T15:55:54Z", "message": "Merge branch 'master' into issue-4933-kvt-limits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3d1d054723ec53b1949853cefe2a023f1c07128", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/b3d1d054723ec53b1949853cefe2a023f1c07128", "committedDate": "2020-07-09T15:58:05Z", "message": "typo\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e5d5445a0761b168134bcfff3af01c74572a64e", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/7e5d5445a0761b168134bcfff3af01c74572a64e", "committedDate": "2020-07-09T15:59:38Z", "message": "typo\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODAyMDcz", "url": "https://github.com/pravega/pravega/pull/4935#pullrequestreview-445802073", "createdAt": "2020-07-09T16:57:31Z", "commit": {"oid": "7e5d5445a0761b168134bcfff3af01c74572a64e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNjo1NzozMVrOGvZ2sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNzoyMzoyMFrOGvaw5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM1OTg1Nw==", "bodyText": "FYI this is not 2Kb.", "url": "https://github.com/pravega/pravega/pull/4935#discussion_r452359857", "createdAt": "2020-07-09T16:57:31Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/tables/impl/KeyFamilySerializer.java", "diffHunk": "@@ -24,8 +24,17 @@\n  * Serializer for Key-Value Table Key Families.\n  */\n class KeyFamilySerializer {\n+    /**\n+     * Maximum length for a Key Family serialization using {@link #ENCODING}.\n+     * If this value is changed, care must be taken such that the sum of it, {@link #PREFIX_LENGTH} and\n+     * {@link TableSegment#MAXIMUM_KEY_LENGTH} do not exceed the server-side limits.\n+     */\n     @VisibleForTesting\n-    static final int MAX_KEY_FAMILY_LENGTH = 1024; // It can't be longer than TableSegment.MAX_KEY_LENGTH\n+    static final int MAX_KEY_FAMILY_LENGTH = 2096;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e5d5445a0761b168134bcfff3af01c74572a64e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM3NDc1OA==", "bodyText": "This seems particularly inefficient. Supposing there are N items to be retrieved and a fixed number fit in a batch this is O(n^2) because the first call gets all N and throws all but the first batch away. The second fetches N-batch and throws all but the next batch away etc.\nWe should figure out a way to pass down a limit to the get call, even if it is not exact. It's better to reply with more smaller messages which are efficient than maximizing our wirecommand size out in the reply.", "url": "https://github.com/pravega/pravega/pull/4935#discussion_r452374758", "createdAt": "2020-07-09T17:23:20Z", "author": {"login": "tkaitchuck"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/PravegaRequestProcessor.java", "diffHunk": "@@ -710,8 +717,11 @@ public void readTable(final WireCommands.ReadTable readTable) {\n         val timer = new Timer();\n         tableStore.get(segment, keys, TIMEOUT)\n                 .thenAccept(values -> {\n-                    connection.send(new WireCommands.TableRead(readTable.getRequestId(), segment, getTableEntriesCommand(keys, values)));\n-                    this.tableStatsRecorder.getKeys(readTable.getSegment(), keys.size(), timer.getElapsed());\n+                    // NOTE: getTableEntriesCommand will truncate the result to prevent it from exceeding MAX_TABLE_RESPONSE_SIZE.\n+                    // In such a situation, not all requested items will be returned to the caller; only the head of the list will.\n+                    WireCommands.TableEntries response = getTableEntriesCommand(readTable.getRequestId(), keys, values);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e5d5445a0761b168134bcfff3af01c74572a64e"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bbce08f67d1a02bdacc3cbb6c2a68fbd74a2c442", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/bbce08f67d1a02bdacc3cbb6c2a68fbd74a2c442", "committedDate": "2020-07-09T17:31:58Z", "message": "Code review feedback.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84ff956689b018eebd4176106c09e7d6941913c3", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/84ff956689b018eebd4176106c09e7d6941913c3", "committedDate": "2020-07-09T17:34:54Z", "message": "Merge branch 'master' into issue-4933-kvt-limits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4abf67b83a16531dd4472e670c4bbbd2d4c11856", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/4abf67b83a16531dd4472e670c4bbbd2d4c11856", "committedDate": "2020-07-09T23:46:12Z", "message": "PravegaRequestProcessor: rolled back all changes.\nOrderedProcessor: renamed from OrderedItemProcessor and moved to concurrent package. Changed to adapt to new requirements (no prior usages).\nTableSegmentImpl: splitting large get requests into smaller batches and issuing them in parallel, subject to a max concurrency (using OrderedProcessor).\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd6015b378a081f9c06b1f128d9077be8cdeab4f", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/dd6015b378a081f9c06b1f128d9077be8cdeab4f", "committedDate": "2020-07-09T23:52:49Z", "message": "Rolled back unnecessary changes.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MDQyMTUy", "url": "https://github.com/pravega/pravega/pull/4935#pullrequestreview-446042152", "createdAt": "2020-07-09T23:57:11Z", "commit": {"oid": "dd6015b378a081f9c06b1f128d9077be8cdeab4f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzo1NzoxMVrOGvllfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQyMzo1NzoxMVrOGvllfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU1MjA2Mg==", "bodyText": "remove?", "url": "https://github.com/pravega/pravega/pull/4935#discussion_r452552062", "createdAt": "2020-07-09T23:57:11Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/tables/impl/TableSegmentImpl.java", "diffHunk": "@@ -138,11 +145,37 @@ public void close() {\n     @Override\n     public CompletableFuture<List<TableSegmentEntry>> get(@NonNull Iterator<ByteBuf> keys) {\n         val wireKeys = rawKeysToWireCommand(keys);\n+        val resultBuilder = new GetResultBuilder(wireKeys);\n+        CompletableFuture<Void> result;\n+        if (wireKeys.size() <= MAX_GET_KEY_BATCH_SIZE) {\n+            // The entire request can be satisfied using a single call.\n+            result = fetchSlice(resultBuilder);\n+        } else {\n+            // The request has to be split into multiple calls and then combined.\n+            val processor = new OrderedProcessor<Void>(MAX_GET_CONCURRENT_REQUESTS, this.connectionFactory.getInternalExecutor());\n+            val futures = new ArrayList<CompletableFuture<Void>>();\n+            int index = 0;\n+            while (index < wireKeys.size()) {\n+                final int sliceStart = index;\n+                final int sliceLength = Math.min(MAX_GET_KEY_BATCH_SIZE, wireKeys.size() - sliceStart);\n+                futures.add(processor.execute(() -> fetchSlice(resultBuilder.slice(sliceStart, sliceStart + sliceLength))));\n+                //futures.add(fetchSlice(resultBuilder.slice(index, index + sliceLength)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd6015b378a081f9c06b1f128d9077be8cdeab4f"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67c94b3f7658287209d54a42223b9670f526449d", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/67c94b3f7658287209d54a42223b9670f526449d", "committedDate": "2020-07-10T03:57:07Z", "message": "Build fix and code review feedback.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "614038125b2d2d5ab867bc5b76ad56add0ec257f", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/614038125b2d2d5ab867bc5b76ad56add0ec257f", "committedDate": "2020-07-10T04:03:44Z", "message": "Reworked test to use less memory.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3953, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}