{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNjUzMDU3", "number": 4579, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOTo0MzowM1rODjZNEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjo0MjoxMlrODjhyeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDM5Njk3OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOTo0MzowM1rOFvLUNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODo1NDowN1rOFvdLTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAxMjc5MQ==", "bodyText": "My understanding of this change is as follows.\n\" The segment Reader is null in case all the EventSegmentReaders for the streams are not ready. In such a scenario, EventStreamReader waits for 1000ms until any one of the EventSegmentReader receives data semaphore.release() on receiving data. \"", "url": "https://github.com/pravega/pravega/pull/4579#discussion_r385012791", "createdAt": "2020-02-27T09:43:03Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "diffHunk": "@@ -127,7 +131,8 @@\n             }\n             EventSegmentReader segmentReader = orderer.nextSegment(readers);\n             if (segmentReader == null) {\n-                Exceptions.handleInterrupted(() -> Thread.sleep(firstByteTimeoutMillis));\n+                blockFor(firstByteTimeoutMillis);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4b3d8a73a8f5c8af3e01b1a95bbaae136d4ae6"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMwNTQyMQ==", "bodyText": "yes", "url": "https://github.com/pravega/pravega/pull/4579#discussion_r385305421", "createdAt": "2020-02-27T18:54:07Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "diffHunk": "@@ -127,7 +131,8 @@\n             }\n             EventSegmentReader segmentReader = orderer.nextSegment(readers);\n             if (segmentReader == null) {\n-                Exceptions.handleInterrupted(() -> Thread.sleep(firstByteTimeoutMillis));\n+                blockFor(firstByteTimeoutMillis);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAxMjc5MQ=="}, "originalCommit": {"oid": "7f4b3d8a73a8f5c8af3e01b1a95bbaae136d4ae6"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDQxMjEwOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwOTo0NzowOVrOFvLdmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODo1NDo1MFrOFvdMtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAxNTE5NA==", "bodyText": "It can so happen that segmentWithData.release() is invoked post invocation of segmentsWithData.drainPermits(). This would cause the permit counter to increment. Wouldn't this prevent the blocking next time around ?", "url": "https://github.com/pravega/pravega/pull/4579#discussion_r385015194", "createdAt": "2020-02-27T09:47:09Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "diffHunk": "@@ -127,7 +131,8 @@\n             }\n             EventSegmentReader segmentReader = orderer.nextSegment(readers);\n             if (segmentReader == null) {\n-                Exceptions.handleInterrupted(() -> Thread.sleep(firstByteTimeoutMillis));\n+                blockFor(firstByteTimeoutMillis);\n+                segmentsWithData.drainPermits();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4b3d8a73a8f5c8af3e01b1a95bbaae136d4ae6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMwNTc4MA==", "bodyText": "yes (and that's a good thing)", "url": "https://github.com/pravega/pravega/pull/4579#discussion_r385305780", "createdAt": "2020-02-27T18:54:50Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "diffHunk": "@@ -127,7 +131,8 @@\n             }\n             EventSegmentReader segmentReader = orderer.nextSegment(readers);\n             if (segmentReader == null) {\n-                Exceptions.handleInterrupted(() -> Thread.sleep(firstByteTimeoutMillis));\n+                blockFor(firstByteTimeoutMillis);\n+                segmentsWithData.drainPermits();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAxNTE5NA=="}, "originalCommit": {"oid": "7f4b3d8a73a8f5c8af3e01b1a95bbaae136d4ae6"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDQ4ODU1OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDowNjo1NFrOFvMLgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODo1NTo1MVrOFvdO-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAyNjk0NA==", "bodyText": "This change would cause to complete checkpointing of all the pending silent checkpoints for this reader. In the older code the application would have to invoke readNextEvent() again to clear this, right ?", "url": "https://github.com/pravega/pravega/pull/4579#discussion_r385026944", "createdAt": "2020-02-27T10:06:54Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "diffHunk": "@@ -201,20 +213,19 @@ private String updateGroupStateIfNeeded() throws ReaderNotInReaderGroupException\n                     releaseSegmentsIfNeeded(position);\n                     atCheckpoint = null;\n                 }\n-                return null;\n+                checkpoint = groupState.getCheckpoint();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4b3d8a73a8f5c8af3e01b1a95bbaae136d4ae6"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMwNjM2Mg==", "bodyText": "yes", "url": "https://github.com/pravega/pravega/pull/4579#discussion_r385306362", "createdAt": "2020-02-27T18:55:51Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "diffHunk": "@@ -201,20 +213,19 @@ private String updateGroupStateIfNeeded() throws ReaderNotInReaderGroupException\n                     releaseSegmentsIfNeeded(position);\n                     atCheckpoint = null;\n                 }\n-                return null;\n+                checkpoint = groupState.getCheckpoint();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAyNjk0NA=="}, "originalCommit": {"oid": "7f4b3d8a73a8f5c8af3e01b1a95bbaae136d4ae6"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDUwMDczOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxMDoxMDozOFrOFvMTOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxODo1OTowMlrOFvdV9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAyODkyMQ==", "bodyText": "The waiting time is now increased from 10ms to 1000ms .Any specific reason for this ?", "url": "https://github.com/pravega/pravega/pull/4579#discussion_r385028921", "createdAt": "2020-02-27T10:10:38Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "diffHunk": "@@ -59,7 +61,7 @@\n public class EventStreamReaderImpl<Type> implements EventStreamReader<Type> {\n \n     // Base waiting time for a reader on an idle segment waiting for new data to be read.\n-    private static final long BASE_READER_WAITING_TIME_MS = 10;\n+    private static final long BASE_READER_WAITING_TIME_MS = ReaderGroupStateManager.TIME_UNIT.toMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4b3d8a73a8f5c8af3e01b1a95bbaae136d4ae6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTMwODE0OQ==", "bodyText": "Originally it was 1000ms and we used futures to wake up the blocked thread. However futures created the issue linked above, so we changed it to 10ms so that while it would not wakeup in response to data being available, it least it would check every 10ms. Now that we have a wakeup again I am restoring it to 1000ms. This is fine because it will awake in response to data. We still need to wake up eventually though, the source of the timeout shows why, even if there is no data, there might be an update to the group state, which we pull in updates for every 1000ms.", "url": "https://github.com/pravega/pravega/pull/4579#discussion_r385308149", "createdAt": "2020-02-27T18:59:02Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "diffHunk": "@@ -59,7 +61,7 @@\n public class EventStreamReaderImpl<Type> implements EventStreamReader<Type> {\n \n     // Base waiting time for a reader on an idle segment waiting for new data to be read.\n-    private static final long BASE_READER_WAITING_TIME_MS = 10;\n+    private static final long BASE_READER_WAITING_TIME_MS = ReaderGroupStateManager.TIME_UNIT.toMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTAyODkyMQ=="}, "originalCommit": {"oid": "7f4b3d8a73a8f5c8af3e01b1a95bbaae136d4ae6"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTcxMzc0OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/segment/impl/SegmentInputStreamFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoyMToyM1rOFvXx4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjoyMToyM1rOFvXx4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIxNjk5NA==", "bodyText": "semaphore", "url": "https://github.com/pravega/pravega/pull/4579#discussion_r385216994", "createdAt": "2020-02-27T16:21:23Z", "author": {"login": "andreipaduroiu"}, "path": "client/src/main/java/io/pravega/client/segment/impl/SegmentInputStreamFactory.java", "diffHunk": "@@ -48,10 +49,11 @@\n      * does not exist.\n      *\n      * @param segment The segment to create an input for.\n+     * @param hasData A semephore that will have `release` called when data is available.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4b3d8a73a8f5c8af3e01b1a95bbaae136d4ae6"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NTgwMzQ1OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjo0MjoxMlrOFvYoKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNjo0MjoxMlrOFvYoKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTIzMDg5MA==", "bodyText": "Typo", "url": "https://github.com/pravega/pravega/pull/4579#discussion_r385230890", "createdAt": "2020-02-27T16:42:12Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/stream/impl/EventStreamReaderImpl.java", "diffHunk": "@@ -155,6 +160,13 @@\n                                    new EventPointerImpl(segment, offset, length), null);\n     }\n \n+    private void blockFor(long timeoutMs) {\n+        Exceptions.handleInterrupted(() -> {\n+            @SuppressWarnings(\"unused\")\n+            boolean aquired = segmentsWithData.tryAcquire(timeoutMs, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f4b3d8a73a8f5c8af3e01b1a95bbaae136d4ae6"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4435, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}