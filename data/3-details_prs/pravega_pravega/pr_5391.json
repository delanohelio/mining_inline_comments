{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNjcyMTQ5", "number": 5391, "title": "Issue 5390: (SLTS) Handle InvalidOffsetException in concat using appends mode and disable that mode when inapplicable.", "bodyText": "Change log description\n\nConcat small source objects using append mode now correctly handles possible failures with InvalidOffsetException\nDo not enable use of appends for concat of small objects when appends are disabled\n\nPurpose of the change\nFixes #5390\n\nWhen \"concat small source objects using append\" mode is active and previous concat operation fails to commit, it may leave partially concatenated target object which has larger length on LTS than in metadata. This causes InvalidOffsetException. This exception is \"sticky\" and the system can not make progress anymore.\n\nWhat the code does\n\nSkip over chunk that has larger length on LTS than in metadata.\nDo not enable use of appends for concat of small objects when appends are disabled\n\nHow to verify it\nTests should pass.", "createdAt": "2020-12-02T01:09:16Z", "url": "https://github.com/pravega/pravega/pull/5391", "merged": true, "mergeCommit": {"oid": "6f01d86bc3e55592aab014565e4d0e83e3fe4c03"}, "closed": true, "closedAt": "2020-12-11T17:28:50Z", "author": {"login": "sachin-j-joshi"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiDhHmgH2gAyNTMwNjcyMTQ5OmJjOWZlYzE3YTNhZjA4MDYyZjA0MWEyYTljMWRmZDMyOTkwYzBmMGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdlDR7kAFqTU0OTg3MzI2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bc9fec17a3af08062f041a2a9c1dfd32990c0f0d", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/bc9fec17a3af08062f041a2a9c1dfd32990c0f0d", "committedDate": "2020-12-02T00:36:33Z", "message": "Issue 5390: SLTS - Do not enable use of appends for concat of small objects when appends are disabled.\n\nSigned-off-by: Sachin Joshi <sachin.joshi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abf7587c7c638ce4cec922316e133f02616aca39", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/abf7587c7c638ce4cec922316e133f02616aca39", "committedDate": "2020-12-02T00:56:10Z", "message": "Issue 5390: SLTS - Correctly handle InvalidOffsetException during concat using append mode.\n\nSigned-off-by: Sachin Joshi <sachin.joshi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd184163d1bd8bf67b0029a98a72e6fde751de94", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/dd184163d1bd8bf67b0029a98a72e6fde751de94", "committedDate": "2020-12-02T21:12:04Z", "message": "Merge branch 'master' of https://github.com/pravega/pravega into issue-5390-handle-invalid-offset-in-concat-using-appends"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NTAxNDQ1", "url": "https://github.com/pravega/pravega/pull/5391#pullrequestreview-544501445", "createdAt": "2020-12-03T22:21:20Z", "commit": {"oid": "dd184163d1bd8bf67b0029a98a72e6fde751de94"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjoyMToyMFrOH-3sRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjoyMTo1NVrOH-3tiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY4NjIxMw==", "bodyText": "Why v and not vv?", "url": "https://github.com/pravega/pravega/pull/5391#discussion_r535686213", "createdAt": "2020-12-03T22:21:20Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/storage/src/main/java/io/pravega/segmentstore/storage/chunklayer/DefragmentOperation.java", "diffHunk": "@@ -144,11 +147,29 @@\n                             CompletableFuture<Void> f;\n                             if (chunksToConcat.size() > 1) {\n                                 // Concat\n-                                f = concatChunks();\n+                                f = concatChunks()\n+                                .handleAsync((vv, ex) -> {\n+                                    if (null != ex) {\n+                                        ex = Exceptions.unwrap(ex);\n+                                        if (ex instanceof InvalidOffsetException) {\n+                                            // Skip ahead by 1 chunk.\n+                                            targetChunkName = chunksToConcat.get(1).getName();\n+                                            chunksToConcat.clear();\n+                                            skipFailed.set(true);\n+                                            return null;\n+                                        }\n+                                        throw new CompletionException(ex);\n+                                    }\n+                                    return v;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd184163d1bd8bf67b0029a98a72e6fde751de94"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY4NjQxMQ==", "bodyText": "You do not need Async here", "url": "https://github.com/pravega/pravega/pull/5391#discussion_r535686411", "createdAt": "2020-12-03T22:21:40Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/storage/src/main/java/io/pravega/segmentstore/storage/chunklayer/DefragmentOperation.java", "diffHunk": "@@ -144,11 +147,29 @@\n                             CompletableFuture<Void> f;\n                             if (chunksToConcat.size() > 1) {\n                                 // Concat\n-                                f = concatChunks();\n+                                f = concatChunks()\n+                                .handleAsync((vv, ex) -> {\n+                                    if (null != ex) {\n+                                        ex = Exceptions.unwrap(ex);\n+                                        if (ex instanceof InvalidOffsetException) {\n+                                            // Skip ahead by 1 chunk.\n+                                            targetChunkName = chunksToConcat.get(1).getName();\n+                                            chunksToConcat.clear();\n+                                            skipFailed.set(true);\n+                                            return null;\n+                                        }\n+                                        throw new CompletionException(ex);\n+                                    }\n+                                    return v;\n+                                }, chunkedSegmentStorage.getExecutor());\n                             } else {\n                                 f = CompletableFuture.completedFuture(null);\n                             }\n                             return f.thenRunAsync(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd184163d1bd8bf67b0029a98a72e6fde751de94"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY4NjUzNg==", "bodyText": "skipFailed.compareAndSet(true, false)", "url": "https://github.com/pravega/pravega/pull/5391#discussion_r535686536", "createdAt": "2020-12-03T22:21:55Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/storage/src/main/java/io/pravega/segmentstore/storage/chunklayer/DefragmentOperation.java", "diffHunk": "@@ -144,11 +147,29 @@\n                             CompletableFuture<Void> f;\n                             if (chunksToConcat.size() > 1) {\n                                 // Concat\n-                                f = concatChunks();\n+                                f = concatChunks()\n+                                .handleAsync((vv, ex) -> {\n+                                    if (null != ex) {\n+                                        ex = Exceptions.unwrap(ex);\n+                                        if (ex instanceof InvalidOffsetException) {\n+                                            // Skip ahead by 1 chunk.\n+                                            targetChunkName = chunksToConcat.get(1).getName();\n+                                            chunksToConcat.clear();\n+                                            skipFailed.set(true);\n+                                            return null;\n+                                        }\n+                                        throw new CompletionException(ex);\n+                                    }\n+                                    return v;\n+                                }, chunkedSegmentStorage.getExecutor());\n                             } else {\n                                 f = CompletableFuture.completedFuture(null);\n                             }\n                             return f.thenRunAsync(() -> {\n+                                if (skipFailed.get()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd184163d1bd8bf67b0029a98a72e6fde751de94"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1e991c577b0a21c0803bcbf31c5a1667c4fa757", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/c1e991c577b0a21c0803bcbf31c5a1667c4fa757", "committedDate": "2020-12-04T01:30:25Z", "message": "Issue 5390: SLTS - Address review comments.\n\nSigned-off-by: Sachin Joshi <sachin.joshi@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MzY4MTUw", "url": "https://github.com/pravega/pravega/pull/5391#pullrequestreview-548368150", "createdAt": "2020-12-09T16:30:25Z", "commit": {"oid": "a4d0a3615323b5edb0dd98b493157b3c36e5d5ba"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjozMDoyNVrOICdyXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjozMDoyNVrOICdyXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1NjA5Mw==", "bodyText": "Please modify TestContext to implement AutoCloseable, and close any resources it uses in the close method. Then update all usages of this class to clean up (decorate with @Cleanup).", "url": "https://github.com/pravega/pravega/pull/5391#discussion_r539456093", "createdAt": "2020-12-09T16:30:25Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/storage/src/test/java/io/pravega/segmentstore/storage/chunklayer/ChunkedSegmentStorageTests.java", "diffHunk": "@@ -1317,6 +1317,101 @@ public void testBaseConcatWithDefragWithMinMaxLimits() throws Exception {\n                 new long[]{10, 15});\n     }\n \n+    /**\n+     * Test Concat after repeated failure when concat using append mode is on.\n+     *\n+     * @throws Exception Exception if any.\n+     */\n+    @Test\n+    public void testConcatUsingAppendsAfterWriteFailure() throws Exception {\n+        long maxRollingSize = 20;\n+        // Last chunk of target in these tests always has garbage at end which can not be overwritten.\n+        testConcatUsingAppendsAfterWriteFailure(maxRollingSize,\n+                new long[] {5},\n+                new long[] {1, 2, 3, 4},\n+                new int[] {},\n+                new long[] {5, 10},\n+                15);\n+\n+        // First chunk in source has garbage at the end.\n+        testConcatUsingAppendsAfterWriteFailure(maxRollingSize,\n+                new long[] {5},\n+                new long[] {1, 2, 3, 4},\n+                new int[]  {0}, // add garbage to these chunks\n+                new long[] {5, 1, 9},\n+                15);\n+\n+        // First two chunk in source has garbage at the end.\n+        testConcatUsingAppendsAfterWriteFailure(maxRollingSize,\n+                new long[] {5},\n+                new long[] {1, 2, 3, 4},\n+                new int[]  {0, 1},  // add garbage to these chunks\n+                new long[] {5, 1, 2, 7},\n+                15);\n+\n+        // First three chunks in source has garbage at the end.\n+        testConcatUsingAppendsAfterWriteFailure(maxRollingSize,\n+                new long[] {5},\n+                new long[] {1, 2, 3, 4},\n+                new int[]  {0, 1, 2},  // add garbage to these chunks\n+                new long[] {5, 1, 2, 3, 4},\n+                15);\n+\n+        // All chunks in source has garbage at the end.\n+        testConcatUsingAppendsAfterWriteFailure(maxRollingSize,\n+                new long[] {5},\n+                new long[] {1, 2, 3, 4},\n+                new int[]  {0, 1, 2, 3},  // add garbage to these chunks\n+                new long[] {5, 1, 2, 3, 4},\n+                15);\n+    }\n+\n+    private void testConcatUsingAppendsAfterWriteFailure(long maxRollingSize,\n+                                                         long[] targetLayoutBefore,\n+                                                         long[] sourceLayout,\n+                                                         int[] chunksWithGarbageIndex,\n+                                                         long[] targetLayoutAfter,\n+                                                         long expectedLength) throws Exception {\n+        String targetSegmentName = \"target\";\n+        String sourceSegmentName = \"source\";\n+        SegmentRollingPolicy policy = new SegmentRollingPolicy(maxRollingSize); // Force rollover after every 20 byte.\n+        ChunkedSegmentStorageConfig config = ChunkedSegmentStorageConfig.DEFAULT_CONFIG.toBuilder()\n+                .maxSizeLimitForConcat(100)\n+                .minSizeLimitForConcat(100)\n+                .build();\n+\n+        TestContext testContext = getTestContext(config);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4d0a3615323b5edb0dd98b493157b3c36e5d5ba"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "725af3a921a27b3b0e1748c4feba8c64796df022", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/725af3a921a27b3b0e1748c4feba8c64796df022", "committedDate": "2020-12-09T23:18:36Z", "message": "Merge branch 'master' of https://github.com/pravega/pravega into issue-5390-handle-invalid-offset-in-concat-using-appends"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "917f96a82199d4a4c2e7bc8b7f938bf3afe8a506", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/917f96a82199d4a4c2e7bc8b7f938bf3afe8a506", "committedDate": "2020-12-09T21:21:01Z", "message": "Issue 5390: SLTS - Cleanup in tests.\n\nSigned-off-by: Sachin Joshi <sachin.joshi@emc.com>"}, "afterCommit": {"oid": "725af3a921a27b3b0e1748c4feba8c64796df022", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/725af3a921a27b3b0e1748c4feba8c64796df022", "committedDate": "2020-12-09T23:18:36Z", "message": "Merge branch 'master' of https://github.com/pravega/pravega into issue-5390-handle-invalid-offset-in-concat-using-appends"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4aa039566bd560eb561210e1023547605bc47826", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/4aa039566bd560eb561210e1023547605bc47826", "committedDate": "2020-12-10T04:21:55Z", "message": "Merge branch 'master' of https://github.com/pravega/pravega into issue-5390-handle-invalid-offset-in-concat-using-appends"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3b6419bad8b6c6b49c688e848029f4a8120bc74", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/e3b6419bad8b6c6b49c688e848029f4a8120bc74", "committedDate": "2020-12-10T04:29:34Z", "message": "Issue 5390: SLTS - Cleanup in tests.\n\nSigned-off-by: Sachin Joshi <sachin.joshi@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4OTc2MDQx", "url": "https://github.com/pravega/pravega/pull/5391#pullrequestreview-548976041", "createdAt": "2020-12-10T08:59:10Z", "commit": {"oid": "e3b6419bad8b6c6b49c688e848029f4a8120bc74"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwODo1OToxMFrOIC-TAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOTowNToxMFrOIC-jDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk4ODczOA==", "bodyText": "I would like to get a bit more of context about this exception handling and what it really implies for the system. So, in which circumstances this InvalidOffsetException can be thrown? As this defragmentation process is revisiting the chunks written some time back, would it be a synonym of a DataCorruptionException in Tier 2? For instance, related to chunks partially written? Because if this InvalidOffsetException is a symptom of a real problem with LTS data, maybe we could use this offline process to alert that something is wrong with Tier 2 data and stop IO in Pravega until the problem is fixed. Without this kind of audit or verification, could we get InvalidOffsetException (or other exceptions of the sort) from LTS chunks and Pravega would continue processing data, right?", "url": "https://github.com/pravega/pravega/pull/5391#discussion_r539988738", "createdAt": "2020-12-10T08:59:10Z", "author": {"login": "RaulGracia"}, "path": "segmentstore/storage/src/main/java/io/pravega/segmentstore/storage/chunklayer/DefragmentOperation.java", "diffHunk": "@@ -144,11 +147,28 @@\n                             CompletableFuture<Void> f;\n                             if (chunksToConcat.size() > 1) {\n                                 // Concat\n-                                f = concatChunks();\n+                                f = concatChunks()\n+                                .handleAsync((vv, ex) -> {\n+                                    if (null != ex) {\n+                                        ex = Exceptions.unwrap(ex);\n+                                        if (ex instanceof InvalidOffsetException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b6419bad8b6c6b49c688e848029f4a8120bc74"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk5MTY5NA==", "bodyText": "Is this validating the InvalidOffsetException, right? As it is not validating that such exception is thrown, it means that the  defragmentation will continue working as usual, skipping any number of such failures.", "url": "https://github.com/pravega/pravega/pull/5391#discussion_r539991694", "createdAt": "2020-12-10T09:03:28Z", "author": {"login": "RaulGracia"}, "path": "segmentstore/storage/src/test/java/io/pravega/segmentstore/storage/chunklayer/ChunkedSegmentStorageTests.java", "diffHunk": "@@ -1371,6 +1371,102 @@ public void testBaseConcatWithDefragWithMinMaxLimits() throws Exception {\n                 new long[]{10, 15});\n     }\n \n+    /**\n+     * Test Concat after repeated failure when concat using append mode is on.\n+     *\n+     * @throws Exception Exception if any.\n+     */\n+    @Test\n+    public void testConcatUsingAppendsAfterWriteFailure() throws Exception {\n+        long maxRollingSize = 20;\n+        // Last chunk of target in these tests always has garbage at end which can not be overwritten.\n+        testConcatUsingAppendsAfterWriteFailure(maxRollingSize,\n+                new long[] {5},\n+                new long[] {1, 2, 3, 4},\n+                new int[] {},\n+                new long[] {5, 10},\n+                15);\n+\n+        // First chunk in source has garbage at the end.\n+        testConcatUsingAppendsAfterWriteFailure(maxRollingSize,\n+                new long[] {5},\n+                new long[] {1, 2, 3, 4},\n+                new int[]  {0}, // add garbage to these chunks\n+                new long[] {5, 1, 9},\n+                15);\n+\n+        // First two chunk in source has garbage at the end.\n+        testConcatUsingAppendsAfterWriteFailure(maxRollingSize,\n+                new long[] {5},\n+                new long[] {1, 2, 3, 4},\n+                new int[]  {0, 1},  // add garbage to these chunks\n+                new long[] {5, 1, 2, 7},\n+                15);\n+\n+        // First three chunks in source has garbage at the end.\n+        testConcatUsingAppendsAfterWriteFailure(maxRollingSize,\n+                new long[] {5},\n+                new long[] {1, 2, 3, 4},\n+                new int[]  {0, 1, 2},  // add garbage to these chunks\n+                new long[] {5, 1, 2, 3, 4},\n+                15);\n+\n+        // All chunks in source has garbage at the end.\n+        testConcatUsingAppendsAfterWriteFailure(maxRollingSize,\n+                new long[] {5},\n+                new long[] {1, 2, 3, 4},\n+                new int[]  {0, 1, 2, 3},  // add garbage to these chunks\n+                new long[] {5, 1, 2, 3, 4},\n+                15);\n+    }\n+\n+    private void testConcatUsingAppendsAfterWriteFailure(long maxRollingSize,\n+                                                         long[] targetLayoutBefore,\n+                                                         long[] sourceLayout,\n+                                                         int[] chunksWithGarbageIndex,\n+                                                         long[] targetLayoutAfter,\n+                                                         long expectedLength) throws Exception {\n+        String targetSegmentName = \"target\";\n+        String sourceSegmentName = \"source\";\n+        SegmentRollingPolicy policy = new SegmentRollingPolicy(maxRollingSize); // Force rollover after every 20 byte.\n+        ChunkedSegmentStorageConfig config = ChunkedSegmentStorageConfig.DEFAULT_CONFIG.toBuilder()\n+                .maxSizeLimitForConcat(100)\n+                .minSizeLimitForConcat(100)\n+                .build();\n+\n+        @Cleanup\n+        TestContext testContext = getTestContext(config);\n+        ((AbstractInMemoryChunkStorage) testContext.chunkStorage).setShouldSupportConcat(true);\n+\n+        // Create target\n+        testContext.insertMetadata(targetSegmentName, maxRollingSize, 1, targetLayoutBefore);\n+\n+        // Create source\n+        testContext.insertMetadata(sourceSegmentName, maxRollingSize, 1, sourceLayout);\n+        val hSource = testContext.chunkedSegmentStorage.openWrite(sourceSegmentName).get();\n+        testContext.chunkedSegmentStorage.seal(hSource, null).get();\n+\n+        // Add some garbage data at the end of last chunk\n+        val lastChunkMetadata = TestUtils.getChunkMetadata(testContext.metadataStore,\n+                TestUtils.getSegmentMetadata(testContext.metadataStore, targetSegmentName).getLastChunk());\n+        testContext.chunkStorage.write(ChunkHandle.writeHandle(lastChunkMetadata.getName()), lastChunkMetadata.getLength(), 1, new ByteArrayInputStream(new byte[1]));\n+\n+        // Write some garbage at the end.\n+        val sourceList = TestUtils.getChunkList(testContext.metadataStore, sourceSegmentName);\n+        for (int i : chunksWithGarbageIndex) {\n+            // Append some data to the last chunk to simulate partial write during failure\n+            val chunkMetadata = TestUtils.getChunkMetadata(testContext.metadataStore, sourceList.get(i).getName());\n+            testContext.chunkStorage.write(ChunkHandle.writeHandle(chunkMetadata.getName()), chunkMetadata.getLength(), 1, new ByteArrayInputStream(new byte[1]));\n+        }\n+        val hTarget = testContext.chunkedSegmentStorage.openWrite(targetSegmentName).get();\n+        testContext.chunkedSegmentStorage.concat(hTarget, 5, sourceSegmentName, null).join();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b6419bad8b6c6b49c688e848029f4a8120bc74"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk5Mjg0Nw==", "bodyText": "What other types of exceptions are expected here and why they are bubbled up (conversely to InvalidOffsetException)?", "url": "https://github.com/pravega/pravega/pull/5391#discussion_r539992847", "createdAt": "2020-12-10T09:05:10Z", "author": {"login": "RaulGracia"}, "path": "segmentstore/storage/src/main/java/io/pravega/segmentstore/storage/chunklayer/DefragmentOperation.java", "diffHunk": "@@ -144,11 +147,28 @@\n                             CompletableFuture<Void> f;\n                             if (chunksToConcat.size() > 1) {\n                                 // Concat\n-                                f = concatChunks();\n+                                f = concatChunks()\n+                                .handleAsync((vv, ex) -> {\n+                                    if (null != ex) {\n+                                        ex = Exceptions.unwrap(ex);\n+                                        if (ex instanceof InvalidOffsetException) {\n+                                            // Skip ahead by 1 chunk.\n+                                            targetChunkName = chunksToConcat.get(1).getName();\n+                                            chunksToConcat.clear();\n+                                            skipFailed.set(true);\n+                                            return null;\n+                                        }\n+                                        throw new CompletionException(ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b6419bad8b6c6b49c688e848029f4a8120bc74"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4OTgyNzEx", "url": "https://github.com/pravega/pravega/pull/5391#pullrequestreview-548982711", "createdAt": "2020-12-10T09:07:11Z", "commit": {"oid": "e3b6419bad8b6c6b49c688e848029f4a8120bc74"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOTowNzoxMlrOIC-orQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwOTowNzoxMlrOIC-orQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTk5NDI4NQ==", "bodyText": "Do we need to add logs reporting that this exception has been captured? Otherwise, how are we going to realize that the defragmentation process is getting InvalidOffsetException?", "url": "https://github.com/pravega/pravega/pull/5391#discussion_r539994285", "createdAt": "2020-12-10T09:07:12Z", "author": {"login": "RaulGracia"}, "path": "segmentstore/storage/src/main/java/io/pravega/segmentstore/storage/chunklayer/DefragmentOperation.java", "diffHunk": "@@ -144,11 +147,28 @@\n                             CompletableFuture<Void> f;\n                             if (chunksToConcat.size() > 1) {\n                                 // Concat\n-                                f = concatChunks();\n+                                f = concatChunks()\n+                                .handleAsync((vv, ex) -> {\n+                                    if (null != ex) {\n+                                        ex = Exceptions.unwrap(ex);\n+                                        if (ex instanceof InvalidOffsetException) {\n+                                            // Skip ahead by 1 chunk.\n+                                            targetChunkName = chunksToConcat.get(1).getName();\n+                                            chunksToConcat.clear();\n+                                            skipFailed.set(true);\n+                                            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3b6419bad8b6c6b49c688e848029f4a8120bc74"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ef86e5d94d8186fd7e43e4214879f0832ae1622", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/4ef86e5d94d8186fd7e43e4214879f0832ae1622", "committedDate": "2020-12-10T13:53:03Z", "message": "Issue 5390: SLTS - log that we are skipping.\n\nSigned-off-by: Sachin Joshi <sachin.joshi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "899cb2e80172ba0fd9f8cd8902b439ee581f190c", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/899cb2e80172ba0fd9f8cd8902b439ee581f190c", "committedDate": "2020-12-10T18:28:19Z", "message": "Merge branch 'master' of https://github.com/pravega/pravega into issue-5390-handle-invalid-offset-in-concat-using-appends"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ee15f4e5db976c99ebeec1780f67893bc8fa691", "author": {"user": {"login": "RaulGracia", "name": "Ra\u00fal Gracia"}}, "url": "https://github.com/pravega/pravega/commit/8ee15f4e5db976c99ebeec1780f67893bc8fa691", "committedDate": "2020-12-10T15:14:39Z", "message": "Merge branch 'master' into issue-5390-handle-invalid-offset-in-concat-using-appends"}, "afterCommit": {"oid": "899cb2e80172ba0fd9f8cd8902b439ee581f190c", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/899cb2e80172ba0fd9f8cd8902b439ee581f190c", "committedDate": "2020-12-10T18:28:19Z", "message": "Merge branch 'master' of https://github.com/pravega/pravega into issue-5390-handle-invalid-offset-in-concat-using-appends"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5ODczMjY3", "url": "https://github.com/pravega/pravega/pull/5391#pullrequestreview-549873267", "createdAt": "2020-12-11T08:01:44Z", "commit": {"oid": "899cb2e80172ba0fd9f8cd8902b439ee581f190c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3772, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}