{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxMDAzNDgy", "number": 5149, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzoxOTozNVrOEgxI2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzoxOTozNVrOEgxI2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzk0OTcxOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/admin/impl/StreamManagerImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwMzoxOTozNVrOHNvALQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QwNDoyNjoyM1rOHNvxlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2MzYyOQ==", "bodyText": "If a \"seal\" or \"deleteStream\" operation fails for a single stream should'nt we continue deleting the other streams?", "url": "https://github.com/pravega/pravega/pull/5149#discussion_r484163629", "createdAt": "2020-09-07T03:19:35Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/admin/impl/StreamManagerImpl.java", "diffHunk": "@@ -141,12 +141,27 @@ public boolean checkStreamExists(String scopeName, String streamName) {\n     }\n \n     @Override\n+    @Deprecated\n     public boolean deleteScope(String scopeName) {\n+        return deleteScope(scopeName, false);\n+    }\n+\n+    @Override\n+    public boolean deleteScope(String scopeName, boolean deleteStreams) {\n         NameUtils.validateUserScopeName(scopeName);\n         log.info(\"Deleting scope: {}\", scopeName);\n-        return  Futures.getThrowingException(controller.deleteScope(scopeName));\n+        \n+        if (deleteStreams) {\n+            Iterator<Stream> iterator = listStreams(scopeName);\n+            while (iterator.hasNext()) {\n+                Stream stream = iterator.next();\n+                Futures.getThrowingException(controller.sealStream(stream.getScope(), stream.getStreamName()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c95f498fe69343993fea7d0ffd321a74dfb6644"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE3NjI3Ng==", "bodyText": "Well, even if we opportunistically delete other streams, the scope can not be deleted if a single stream's seal and delete failed. So we should throw the error back to the user so that they can decide on how to handle it.\na subsequent attempt to delete the scope using this api will iterate over all available streams and attemp to delete them.", "url": "https://github.com/pravega/pravega/pull/5149#discussion_r484176276", "createdAt": "2020-09-07T04:26:23Z", "author": {"login": "shiveshr"}, "path": "client/src/main/java/io/pravega/client/admin/impl/StreamManagerImpl.java", "diffHunk": "@@ -141,12 +141,27 @@ public boolean checkStreamExists(String scopeName, String streamName) {\n     }\n \n     @Override\n+    @Deprecated\n     public boolean deleteScope(String scopeName) {\n+        return deleteScope(scopeName, false);\n+    }\n+\n+    @Override\n+    public boolean deleteScope(String scopeName, boolean deleteStreams) {\n         NameUtils.validateUserScopeName(scopeName);\n         log.info(\"Deleting scope: {}\", scopeName);\n-        return  Futures.getThrowingException(controller.deleteScope(scopeName));\n+        \n+        if (deleteStreams) {\n+            Iterator<Stream> iterator = listStreams(scopeName);\n+            while (iterator.hasNext()) {\n+                Stream stream = iterator.next();\n+                Futures.getThrowingException(controller.sealStream(stream.getScope(), stream.getStreamName()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDE2MzYyOQ=="}, "originalCommit": {"oid": "4c95f498fe69343993fea7d0ffd321a74dfb6644"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4680, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}