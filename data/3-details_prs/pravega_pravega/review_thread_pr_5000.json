{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4Nzg3OTgy", "number": 5000, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo0OTowOFrOETemgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMToxMjoyN1rOET2J3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODU5Nzc4OnYy", "diffSide": "RIGHT", "path": "config/logback.xml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo0OTowOFrOG5PJcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxODoxODozM1rOG6Rv4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3MDE5NQ==", "bodyText": "The idea with this change was to bring forward two things: readiness of various services (zookeeper, controller, segmentstore, etc) and highlight the configuration options of those services. It was separated from normal logging (which now is directed towards standalone.log) to ensure visibility of these things.", "url": "https://github.com/pravega/pravega/pull/5000#discussion_r462670195", "createdAt": "2020-07-30T00:49:08Z", "author": {"login": "co-jo"}, "path": "config/logback.xml", "diffHunk": "@@ -11,14 +11,35 @@ You may obtain a copy of the License at\n <configuration scan=\"true\" scanPeriod=\"30 seconds\">\n     <logger name=\"org.apache.zookeeper\" level=\"WARN\"/>\n \n+    <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\n+        <file>standalone.log</file>\n+        <encoder>\n+            <charset>UTF-8</charset>\n+            <Pattern>%d %-4relative [%thread] %-5level %logger{35} - %msg%n</Pattern>\n+        </encoder>\n+    </appender>\n+\n     <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n         <encoder>\n             <charset>UTF-8</charset>\n             <Pattern>%d %-4relative [%thread] %-5level %logger{35} - %msg%n</Pattern>\n         </encoder>\n     </appender>\n \n-    <root level=\"DEBUG\">\n+    <logger name=\"io.pravega.local\" level=\"INFO\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b46fe8845d54835e94077680ca16d36e0f95c2"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzIwNzU2NA==", "bodyText": "Wouldn't be better to define all the necessary changes to logging for standalone in logback-standalone.xml file and use it whenever Standalone starts (like in a gradle file)?\notherwise these changes will be taking an effect in production as well and I am not sure how they fit K8s environments", "url": "https://github.com/pravega/pravega/pull/5000#discussion_r463207564", "createdAt": "2020-07-30T19:00:39Z", "author": {"login": "medvedevigorek"}, "path": "config/logback.xml", "diffHunk": "@@ -11,14 +11,35 @@ You may obtain a copy of the License at\n <configuration scan=\"true\" scanPeriod=\"30 seconds\">\n     <logger name=\"org.apache.zookeeper\" level=\"WARN\"/>\n \n+    <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\n+        <file>standalone.log</file>\n+        <encoder>\n+            <charset>UTF-8</charset>\n+            <Pattern>%d %-4relative [%thread] %-5level %logger{35} - %msg%n</Pattern>\n+        </encoder>\n+    </appender>\n+\n     <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n         <encoder>\n             <charset>UTF-8</charset>\n             <Pattern>%d %-4relative [%thread] %-5level %logger{35} - %msg%n</Pattern>\n         </encoder>\n     </appender>\n \n-    <root level=\"DEBUG\">\n+    <logger name=\"io.pravega.local\" level=\"INFO\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3MDE5NQ=="}, "originalCommit": {"oid": "36b46fe8845d54835e94077680ca16d36e0f95c2"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI1NTIzMQ==", "bodyText": "Good point. There are a number of different logback files spread throughout our codebase. We have to be sure that the correct one is picked up by Logback at runtime. We should also make sure this change doesn't get picked up when we publish the production jars for releases.", "url": "https://github.com/pravega/pravega/pull/5000#discussion_r463255231", "createdAt": "2020-07-30T20:34:27Z", "author": {"login": "andreipaduroiu"}, "path": "config/logback.xml", "diffHunk": "@@ -11,14 +11,35 @@ You may obtain a copy of the License at\n <configuration scan=\"true\" scanPeriod=\"30 seconds\">\n     <logger name=\"org.apache.zookeeper\" level=\"WARN\"/>\n \n+    <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\n+        <file>standalone.log</file>\n+        <encoder>\n+            <charset>UTF-8</charset>\n+            <Pattern>%d %-4relative [%thread] %-5level %logger{35} - %msg%n</Pattern>\n+        </encoder>\n+    </appender>\n+\n     <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n         <encoder>\n             <charset>UTF-8</charset>\n             <Pattern>%d %-4relative [%thread] %-5level %logger{35} - %msg%n</Pattern>\n         </encoder>\n     </appender>\n \n-    <root level=\"DEBUG\">\n+    <logger name=\"io.pravega.local\" level=\"INFO\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3MDE5NQ=="}, "originalCommit": {"oid": "36b46fe8845d54835e94077680ca16d36e0f95c2"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc2MTM3Nw==", "bodyText": "I thought that production environments use the logback.xml from dist/conf/? Although it does seem good to have a more explicitly named logback.xml file.", "url": "https://github.com/pravega/pravega/pull/5000#discussion_r463761377", "createdAt": "2020-07-31T18:18:33Z", "author": {"login": "co-jo"}, "path": "config/logback.xml", "diffHunk": "@@ -11,14 +11,35 @@ You may obtain a copy of the License at\n <configuration scan=\"true\" scanPeriod=\"30 seconds\">\n     <logger name=\"org.apache.zookeeper\" level=\"WARN\"/>\n \n+    <appender name=\"FILE\" class=\"ch.qos.logback.core.FileAppender\">\n+        <file>standalone.log</file>\n+        <encoder>\n+            <charset>UTF-8</charset>\n+            <Pattern>%d %-4relative [%thread] %-5level %logger{35} - %msg%n</Pattern>\n+        </encoder>\n+    </appender>\n+\n     <appender name=\"STDOUT\" class=\"ch.qos.logback.core.ConsoleAppender\">\n         <encoder>\n             <charset>UTF-8</charset>\n             <Pattern>%d %-4relative [%thread] %-5level %logger{35} - %msg%n</Pattern>\n         </encoder>\n     </appender>\n \n-    <root level=\"DEBUG\">\n+    <logger name=\"io.pravega.local\" level=\"INFO\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3MDE5NQ=="}, "originalCommit": {"oid": "36b46fe8845d54835e94077680ca16d36e0f95c2"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODYwMjA0OnYy", "diffSide": "RIGHT", "path": "standalone/src/main/java/io/pravega/local/LocalPravegaEmulator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo1MToyOVrOG5PL-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwMDo1MToyOVrOG5PL-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjY3MDg0Mw==", "bodyText": "A change that is less needed with the changes performed in logback.xml but this further brings attention to pravega-standalone is in a ready state.", "url": "https://github.com/pravega/pravega/pull/5000#discussion_r462670843", "createdAt": "2020-07-30T00:51:29Z", "author": {"login": "co-jo"}, "path": "standalone/src/main/java/io/pravega/local/LocalPravegaEmulator.java", "diffHunk": "@@ -125,12 +126,12 @@ public void run() {\n \n             log.info(\"Starting Pravega Emulator with ports: ZK port {}, controllerPort {}, SegmentStorePort {}\",\n                     conf.getZkPort(), conf.getControllerPort(), conf.getSegmentStorePort());\n-\n             localPravega.start();\n-\n-            System.out.println(\n-                    String.format(\"Pravega Sandbox is running locally now. You could access it at %s:%d\", \"127.0.0.1\",\n-                            conf.getControllerPort()));\n+            String msg = String.format(\"# Pravega Sandbox is running locally now. You could access it at %s:%d. #\", \"127.0.0.1\", conf.getControllerPort());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b46fe8845d54835e94077680ca16d36e0f95c2"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MTkyNTkyOnYy", "diffSide": "RIGHT", "path": "standalone/src/main/java/io/pravega/local/LocalPravegaEmulator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODoyNzoyOVrOG5u34Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxODoyNzoyOVrOG5u34Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzE4OTk4NQ==", "bodyText": "You don't need to do String format here. the log.info method takes an arg that is a formatted string. Use {} instead of %s.", "url": "https://github.com/pravega/pravega/pull/5000#discussion_r463189985", "createdAt": "2020-07-30T18:27:29Z", "author": {"login": "andreipaduroiu"}, "path": "standalone/src/main/java/io/pravega/local/LocalPravegaEmulator.java", "diffHunk": "@@ -125,12 +126,11 @@ public void run() {\n \n             log.info(\"Starting Pravega Emulator with ports: ZK port {}, controllerPort {}, SegmentStorePort {}\",\n                     conf.getZkPort(), conf.getControllerPort(), conf.getSegmentStorePort());\n-\n             localPravega.start();\n-\n-            System.out.println(\n-                    String.format(\"Pravega Sandbox is running locally now. You could access it at %s:%d\", \"127.0.0.1\",\n-                            conf.getControllerPort()));\n+            log.info(\"\");\n+            log.info(\"Pravega Sandbox is running locally now. You could access it at {}:{}.\", \"127.0.0.1\", conf.getControllerPort());\n+            log.info(\"For more detailed logs, see: {}\", String.format(\"%s/%s\", System.getProperty(\"user.dir\"), \"standalone/standalone.log\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef7c832bab2fca6d79d8968baeb960d9d8ca1498"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjQ1NjYxOnYy", "diffSide": "RIGHT", "path": "standalone/src/main/java/io/pravega/local/InProcPravegaCluster.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMToxMjoyN1rOG50ApA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOTo0ODoyMFrOG6UJbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3NDE0OA==", "bodyText": "If this is a directory on disk, can we write an absolute path?", "url": "https://github.com/pravega/pravega/pull/5000#discussion_r463274148", "createdAt": "2020-07-30T21:12:27Z", "author": {"login": "eolivelli"}, "path": "standalone/src/main/java/io/pravega/local/InProcPravegaCluster.java", "diffHunk": "@@ -238,7 +238,9 @@ private void cleanUpZK() {\n     }\n \n     private void startLocalHDFS() throws IOException {\n-        localHdfs = LocalHDFSEmulator.newBuilder().baseDirName(\"temp\").build();\n+        String baseDir = \"temp\";\n+        log.info(\"Starting HDFS Emulator @ {}/\", baseDir);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef7c832bab2fca6d79d8968baeb960d9d8ca1498"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwMDY4NQ==", "bodyText": "The baseDir is used within the context of a temp file so it should be absolute. I will alter the log message to make this clear.", "url": "https://github.com/pravega/pravega/pull/5000#discussion_r463800685", "createdAt": "2020-07-31T19:48:20Z", "author": {"login": "co-jo"}, "path": "standalone/src/main/java/io/pravega/local/InProcPravegaCluster.java", "diffHunk": "@@ -238,7 +238,9 @@ private void cleanUpZK() {\n     }\n \n     private void startLocalHDFS() throws IOException {\n-        localHdfs = LocalHDFSEmulator.newBuilder().baseDirName(\"temp\").build();\n+        String baseDir = \"temp\";\n+        log.info(\"Starting HDFS Emulator @ {}/\", baseDir);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI3NDE0OA=="}, "originalCommit": {"oid": "ef7c832bab2fca6d79d8968baeb960d9d8ca1498"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4834, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}