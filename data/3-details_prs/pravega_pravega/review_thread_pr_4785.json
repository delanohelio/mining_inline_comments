{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2OTA0NzY3", "number": 4785, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDozNzo1MVrOD8AhKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzozNToxNFrOD9rDVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjQ5NjQzOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/netty/impl/ClientConnectionImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDozNzo1MVrOGUrqkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDozNzo1MVrOGUrqkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM0MDExNQ==", "bodyText": "We can directly invoke io.pravega.client.netty.impl.ClientConnectionImpl#close here.", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r424340115", "createdAt": "2020-05-13T10:37:51Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/netty/impl/ClientConnectionImpl.java", "diffHunk": "@@ -89,9 +90,17 @@ public void operationComplete(ChannelFuture future) {\n         });\n         // Work around for https://github.com/netty/netty/issues/3246\n         eventLoop.execute(() -> {\n-            channel.write(cmd, promise);\n+            try {\n+                if (!closed.get()) {\n+                    channel.write(cmd, promise);\n+                }\n+            } catch (Exception e) {\n+                throttle.release(dataLength);\n+                channel.pipeline().fireExceptionCaught(e);\n+                channel.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af14d17166782bbcf44b6e5b4e1d0c4def9e7a2"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjUxMjk5OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/netty/impl/ClientConnectionImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDo0MzoxM1rOGUr1Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDo0MzoxM1rOGUr1Ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDM0MjgwMw==", "bodyText": "same as above.", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r424342803", "createdAt": "2020-05-13T10:43:13Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/netty/impl/ClientConnectionImpl.java", "diffHunk": "@@ -109,7 +118,14 @@ public void operationComplete(ChannelFuture future) {\n         });\n         // Work around for https://github.com/netty/netty/issues/3246\n         eventLoop.execute(() -> {\n-            channel.write(cmd, promise);\n+            try {\n+                if (!closed.get()) {\n+                    channel.write(cmd, promise);\n+                }\n+            } catch (Exception e) {\n+                channel.pipeline().fireExceptionCaught(e);\n+                channel.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af14d17166782bbcf44b6e5b4e1d0c4def9e7a2"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzQ4OTIwOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/netty/impl/ClientConnectionImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDo1MjoxNVrOGU1fWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDo1MjoxNVrOGU1fWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUwMTA4Mw==", "bodyText": "unblocked", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r424501083", "createdAt": "2020-05-13T14:52:15Z", "author": {"login": "andreipaduroiu"}, "path": "client/src/main/java/io/pravega/client/netty/impl/ClientConnectionImpl.java", "diffHunk": "@@ -167,6 +183,7 @@ public void sendAsync(List<Append> appends, CompletedCallback callback) {\n     public void close() {\n         if (!closed.getAndSet(true)) {\n             nettyHandler.closeFlow(this);\n+            throttle.release(Integer.MAX_VALUE >> 1); //Makes sure that any blocked threads are unbloced.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5af14d17166782bbcf44b6e5b4e1d0c4def9e7a2"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODIyODI1OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/netty/impl/FlowHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjoyMzozOFrOGVkQGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNjoyMzozOFrOGVkQGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTI2NzIyNA==", "bodyText": "If an Append/event is greater than MAX_BATCH_SIZE then the CommandEncoder is the one which will split it. But since the number of permits in the throttle is bounded by MAX_BATCH_SIZE the thread would indefinitely wait when the append size > MAX_BATCH_SIZE, causing the CommandEncoder in the subsequent pipeline stage to be never invoked.\nThis caused an issue with io.pravega.test.integration.ByteStreamTest#readLargeWrite", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r425267224", "createdAt": "2020-05-14T16:23:38Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/netty/impl/FlowHandler.java", "diffHunk": "@@ -57,6 +59,8 @@\n     private final ConcurrentHashMap<Integer, AppendBatchSizeTracker> flowIDBatchSizeTrackerMap = new ConcurrentHashMap<>();\n \n     private final AtomicBoolean disableFlow = new AtomicBoolean(false);\n+    \n+    private final Semaphore throttle = new Semaphore(AppendBatchSizeTracker.MAX_BATCH_SIZE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adda753962087b2c2cac86748df6d8e94ff25ba7"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTUyOTcxOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/netty/impl/ClientConnectionImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNDoyODo1N1rOGXPbTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyNToyNFrOGXxTLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAyMzE4Mg==", "bodyText": "nettyHandler.setRecentMessage(); should be set here.", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r427023182", "createdAt": "2020-05-19T04:28:57Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/netty/impl/ClientConnectionImpl.java", "diffHunk": "@@ -103,13 +107,18 @@ private void write(WireCommand cmd) throws ConnectionFailedException {\n             public void operationComplete(ChannelFuture future) {\n                 if (!future.isSuccess()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d44fb7fa46ec43ada173cc28074dde46e9d6bee1"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3ODE1OQ==", "bodyText": "Done", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r427578159", "createdAt": "2020-05-19T20:25:24Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/netty/impl/ClientConnectionImpl.java", "diffHunk": "@@ -103,13 +107,18 @@ private void write(WireCommand cmd) throws ConnectionFailedException {\n             public void operationComplete(ChannelFuture future) {\n                 if (!future.isSuccess()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAyMzE4Mg=="}, "originalCommit": {"oid": "d44fb7fa46ec43ada173cc28074dde46e9d6bee1"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTUzNzE2OnYy", "diffSide": "LEFT", "path": "client/src/main/java/io/pravega/client/netty/impl/ClientConnectionImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNDozNDowNVrOGXPf4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyNTowOFrOGXxStQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAyNDM1Mg==", "bodyText": "callback.complete() below should invoke nettyHandler.setRecentMessage() right ?", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r427024352", "createdAt": "2020-05-19T04:34:05Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/netty/impl/ClientConnectionImpl.java", "diffHunk": "@@ -144,7 +152,6 @@ public void sendAsync(List<Append> appends, CompletedCallback callback) {\n         Channel ch;\n         try {\n             checkClientConnectionClosed();\n-            nettyHandler.setRecentMessage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d44fb7fa46ec43ada173cc28074dde46e9d6bee1"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3ODAzNw==", "bodyText": "Done", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r427578037", "createdAt": "2020-05-19T20:25:08Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/netty/impl/ClientConnectionImpl.java", "diffHunk": "@@ -144,7 +152,6 @@ public void sendAsync(List<Append> appends, CompletedCallback callback) {\n         Channel ch;\n         try {\n             checkClientConnectionClosed();\n-            nettyHandler.setRecentMessage();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAyNDM1Mg=="}, "originalCommit": {"oid": "d44fb7fa46ec43ada173cc28074dde46e9d6bee1"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTU4MDc2OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/netty/impl/FlowHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNTowMTozN1rOGXP7AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDowNjozMVrOGXwsAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzMTI5Nw==", "bodyText": "These are the two changes in client behavior, right?\n\nThis change implies keep-alive is sent every 20 seconds even if the connection is healthy.\nIf there is a connection stall for more than 20 seconds then the connection is closed.", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r427031297", "createdAt": "2020-05-19T05:01:37Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/netty/impl/FlowHandler.java", "diffHunk": "@@ -313,14 +318,28 @@ public void close() {\n     }\n \n     private final class KeepAliveTask implements Runnable {\n+        \n+        private final ChannelFutureListener listener = new ChannelFutureListener() {\n+            @Override\n+            public void operationComplete(ChannelFuture future) throws Exception {\n+                recentMessage.set(true);\n+                if (!future.isSuccess()) {\n+                    future.channel().pipeline().fireExceptionCaught(future.cause());\n+                }\n+            }\n+        };\n+        \n         @Override\n         public void run() {\n-            try {\n-                if (!recentMessage.getAndSet(false)) {\n-                    getChannel().writeAndFlush(new WireCommands.KeepAlive()).addListener(ChannelFutureListener.FIRE_EXCEPTION_ON_FAILURE);\n+            if (recentMessage.getAndSet(false)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d44fb7fa46ec43ada173cc28074dde46e9d6bee1"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU2ODEzMA==", "bodyText": "Yes", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r427568130", "createdAt": "2020-05-19T20:06:31Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/netty/impl/FlowHandler.java", "diffHunk": "@@ -313,14 +318,28 @@ public void close() {\n     }\n \n     private final class KeepAliveTask implements Runnable {\n+        \n+        private final ChannelFutureListener listener = new ChannelFutureListener() {\n+            @Override\n+            public void operationComplete(ChannelFuture future) throws Exception {\n+                recentMessage.set(true);\n+                if (!future.isSuccess()) {\n+                    future.channel().pipeline().fireExceptionCaught(future.cause());\n+                }\n+            }\n+        };\n+        \n         @Override\n         public void run() {\n-            try {\n-                if (!recentMessage.getAndSet(false)) {\n-                    getChannel().writeAndFlush(new WireCommands.KeepAlive()).addListener(ChannelFutureListener.FIRE_EXCEPTION_ON_FAILURE);\n+            if (recentMessage.getAndSet(false)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzMTI5Nw=="}, "originalCommit": {"oid": "d44fb7fa46ec43ada173cc28074dde46e9d6bee1"}, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTU4MjgzOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/netty/impl/FlowHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNTowMjo1MlrOGXP8WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyNDo1NVrOGXxSNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzMTY0MA==", "bodyText": "Can we log indicating that sending a keep-alive failed here?", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r427031640", "createdAt": "2020-05-19T05:02:52Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/netty/impl/FlowHandler.java", "diffHunk": "@@ -313,14 +318,28 @@ public void close() {\n     }\n \n     private final class KeepAliveTask implements Runnable {\n+        \n+        private final ChannelFutureListener listener = new ChannelFutureListener() {\n+            @Override\n+            public void operationComplete(ChannelFuture future) throws Exception {\n+                recentMessage.set(true);\n+                if (!future.isSuccess()) {\n+                    future.channel().pipeline().fireExceptionCaught(future.cause());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d44fb7fa46ec43ada173cc28074dde46e9d6bee1"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3NzkxMA==", "bodyText": "Done", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r427577910", "createdAt": "2020-05-19T20:24:55Z", "author": {"login": "tkaitchuck"}, "path": "client/src/main/java/io/pravega/client/netty/impl/FlowHandler.java", "diffHunk": "@@ -313,14 +318,28 @@ public void close() {\n     }\n \n     private final class KeepAliveTask implements Runnable {\n+        \n+        private final ChannelFutureListener listener = new ChannelFutureListener() {\n+            @Override\n+            public void operationComplete(ChannelFuture future) throws Exception {\n+                recentMessage.set(true);\n+                if (!future.isSuccess()) {\n+                    future.channel().pipeline().fireExceptionCaught(future.cause());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzAzMTY0MA=="}, "originalCommit": {"oid": "d44fb7fa46ec43ada173cc28074dde46e9d6bee1"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1OTk1MDkzOnYy", "diffSide": "RIGHT", "path": "test/integration/src/test/java/io/pravega/test/integration/AppendTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzozNToxNFrOGXTfhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQyMDoyNDo0NlrOGXxR7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA4OTc5Nw==", "bodyText": "this test causes the InMemoryDurableDataLog to go OOM on my dev box...", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r427089797", "createdAt": "2020-05-19T07:35:14Z", "author": {"login": "shrids"}, "path": "test/integration/src/test/java/io/pravega/test/integration/AppendTest.java", "diffHunk": "@@ -303,6 +308,35 @@ public void appendThroughStreamingClient() throws InterruptedException, Executio\n         ack.get(5, TimeUnit.SECONDS);\n     }\n     \n+    \n+    @Test(timeout = 100000)\n+    public void appendALotOfData() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d44fb7fa46ec43ada173cc28074dde46e9d6bee1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQxOTIwMg==", "bodyText": "Looks like you're sending in 1000 x 1MB buffers for a total of 1GB. That is a bit too extreme.\nIf you do want to keep this test as it is, may I recommend truncating the segment after every few writes you're sending? That should help clear memory pressure.", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r427419202", "createdAt": "2020-05-19T16:03:35Z", "author": {"login": "andreipaduroiu"}, "path": "test/integration/src/test/java/io/pravega/test/integration/AppendTest.java", "diffHunk": "@@ -303,6 +308,35 @@ public void appendThroughStreamingClient() throws InterruptedException, Executio\n         ack.get(5, TimeUnit.SECONDS);\n     }\n     \n+    \n+    @Test(timeout = 100000)\n+    public void appendALotOfData() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA4OTc5Nw=="}, "originalCommit": {"oid": "d44fb7fa46ec43ada173cc28074dde46e9d6bee1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzU3NzgzOA==", "bodyText": "Done", "url": "https://github.com/pravega/pravega/pull/4785#discussion_r427577838", "createdAt": "2020-05-19T20:24:46Z", "author": {"login": "tkaitchuck"}, "path": "test/integration/src/test/java/io/pravega/test/integration/AppendTest.java", "diffHunk": "@@ -303,6 +308,35 @@ public void appendThroughStreamingClient() throws InterruptedException, Executio\n         ack.get(5, TimeUnit.SECONDS);\n     }\n     \n+    \n+    @Test(timeout = 100000)\n+    public void appendALotOfData() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA4OTc5Nw=="}, "originalCommit": {"oid": "d44fb7fa46ec43ada173cc28074dde46e9d6bee1"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4329, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}