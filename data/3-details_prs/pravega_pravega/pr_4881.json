{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NDQ4NDky", "number": 4881, "title": "Issue 4879: (KeyValueTables) List and Delete API for Key Value Tables on Controller", "bodyText": "Signed-off-by: pbelgundi prajakta.belgundi@emc.com\nChange log description\nThis PR has code to support List and Delete APIs on KeyValueTables in Pravega Controller.\nFor details please refer https://github.com/pravega/pravega/wiki/PDP-39-Key-Value-Tables\nPurpose of the change\nFixes #4879\nWhat the code does\nAdds listKeyValueTablesInScope() API and deleteKeyValueTable() API to Controller, that enables client to list all KeyValueTables in the given scope, in a paginated fashion and API to delete a KeyValueTable.\nHow to verify it\nAll Unit and Integration Tests should pass.", "createdAt": "2020-06-18T12:45:17Z", "url": "https://github.com/pravega/pravega/pull/4881", "merged": true, "mergeCommit": {"oid": "d9fa620cc3d467ba1d47b49af5609989eb35fc82"}, "closed": true, "closedAt": "2020-07-02T13:29:01Z", "author": {"login": "pbelgundi"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsdzYRgH2gAyNDM2NDQ4NDkyOjE1YzQzNjhjOWM5NmE5MDUzNTFhZmQ4YjIwODFlMjRkMTY0ZWE5NGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcw7n1EgH2gAyNDM2NDQ4NDkyOmUyYmViNmI2ZDNmNGZjZTA1YjEzZjU4ZTEwYzM5ZWQ2YzEyNzM2OTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "15c4368c9c96a905351afd8b2081e24d164ea94e", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/15c4368c9c96a905351afd8b2081e24d164ea94e", "committedDate": "2020-06-18T12:42:07Z", "message": "listKeyValueTables API\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMzk4MDM5", "url": "https://github.com/pravega/pravega/pull/4881#pullrequestreview-433398039", "createdAt": "2020-06-18T15:26:20Z", "commit": {"oid": "15c4368c9c96a905351afd8b2081e24d164ea94e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNToyNjoyMFrOGl0kmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNToyNjoyMFrOGl0kmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxMTgzNQ==", "bodyText": "this doesnt need to be public", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r442311835", "createdAt": "2020-06-18T15:26:20Z", "author": {"login": "shiveshr"}, "path": "client/src/main/java/io/pravega/client/control/impl/ControllerImpl.java", "diffHunk": "@@ -1411,5 +1447,11 @@ public void createKeyValueTable(KeyValueTableConfig kvtConfig, RPCAsyncCallback<\n             clientStub.withDeadlineAfter(timeoutMillis, TimeUnit.MILLISECONDS)\n                     .createKeyValueTable(kvtConfig, callback);\n         }\n+\n+        public void listKeyValueTables(KVTablesInScopeRequest request,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15c4368c9c96a905351afd8b2081e24d164ea94e"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDAwMjk0", "url": "https://github.com/pravega/pravega/pull/4881#pullrequestreview-433400294", "createdAt": "2020-06-18T15:28:41Z", "commit": {"oid": "15c4368c9c96a905351afd8b2081e24d164ea94e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNToyODo0MVrOGl0rEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNToyODo0MVrOGl0rEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxMzQ4OA==", "bodyText": "you shouldnt add the suffix here. This is the authorization resource against which the auth rules will be set outside of pravega.\nthe resource name being scope/tablename is sufficient.", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r442313488", "createdAt": "2020-06-18T15:28:41Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/AuthResourceRepresentation.java", "diffHunk": "@@ -120,6 +120,6 @@ public static String ofReaderGroupInScope(String scopeName, String readerGroupNa\n      */\n     public static String ofKeyValueTableInScope(String scopeName, String kvtName) {\n         Exceptions.checkNotNullOrEmpty(kvtName, \"KeyValueTableName\");\n-        return String.format(\"%s/%s\", ofStreamsInScope(scopeName), kvtName);\n+        return String.format(\"%s/%s_kvt\", ofStreamsInScope(scopeName), kvtName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15c4368c9c96a905351afd8b2081e24d164ea94e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDAwOTQ4", "url": "https://github.com/pravega/pravega/pull/4881#pullrequestreview-433400948", "createdAt": "2020-06-18T15:29:23Z", "commit": {"oid": "15c4368c9c96a905351afd8b2081e24d164ea94e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNToyOToyM1rOGl0s5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNToyOToyM1rOGl0s5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxMzk1Ng==", "bodyText": "revert this class", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r442313956", "createdAt": "2020-06-18T15:29:23Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/eventProcessor/LocalController.java", "diffHunk": "@@ -466,10 +466,10 @@ public String retrieveDelegationToken() {\n             }\n         });\n     }\n-\n+    \n     @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15c4368c9c96a905351afd8b2081e24d164ea94e"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDA1NTA4", "url": "https://github.com/pravega/pravega/pull/4881#pullrequestreview-433405508", "createdAt": "2020-06-18T15:34:22Z", "commit": {"oid": "15c4368c9c96a905351afd8b2081e24d164ea94e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNTozNDoyMlrOGl06aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNTozNDoyMlrOGl06aA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxNzQxNg==", "bodyText": "There is one problem with the logic here. And i realize this same problem is present for streams too.\nIf we filter out unauthorized tables, then the response we send back may endup being empty while there may still be more records to be read from the continuation token.\nSo any such filtering should invoke the call with filtered-out elements and keep doing it until we have collected limit number of elements or have nothing to read anymore.", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r442317416", "createdAt": "2020-06-18T15:34:22Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/rpc/grpc/v1/ControllerServiceImpl.java", "diffHunk": "@@ -144,6 +144,66 @@ public void getCurrentSegmentsKeyValueTable(KeyValueTableInfo request, StreamObs\n                 responseObserver);\n     }\n \n+    @Override\n+    public void listKeyValueTablesInScope(Controller.KVTablesInScopeRequest request, StreamObserver<Controller.KVTablesInScopeResponse> responseObserver) {\n+\n+        String scopeName = request.getScope().getScope();\n+        RequestTag requestTag = requestTracker.initializeAndTrackRequestTag(requestIdGenerator.get(),\n+                \"listKeyValueTables\", scopeName);\n+        log.info(requestTag.getRequestId(), \"listKeyValueTables called for scope {}.\", scopeName);\n+\n+        final AuthContext ctx;\n+        if (this.grpcAuthHelper.isAuthEnabled()) {\n+            ctx = AuthContext.current();\n+        } else {\n+            ctx = null;\n+        }\n+\n+        authenticateExecuteAndProcessResults(\n+                () -> {\n+                    String result = this.grpcAuthHelper.checkAuthorization(\n+                            AuthResourceRepresentation.ofScope(scopeName),\n+                            AuthHandler.Permissions.READ,\n+                            ctx);\n+                    log.debug(\"Result of authorization for [{}] and READ permission is: [{}]\",\n+                            AuthResourceRepresentation.ofScope(scopeName), result);\n+                    return result;\n+                },\n+                delegationToken -> controllerService\n+                        .listKeyValueTables(scopeName, request.getContinuationToken().getToken(), listStreamsInScopeLimit)\n+                        .handle((response, ex) -> {\n+                            if (ex != null) {\n+                                if (Exceptions.unwrap(ex) instanceof StoreException.DataNotFoundException) {\n+                                    return Controller.KVTablesInScopeResponse.newBuilder().setStatus(Controller.KVTablesInScopeResponse.Status.SCOPE_NOT_FOUND).build();\n+                                } else {\n+                                    throw new CompletionException(ex);\n+                                }\n+                            } else {\n+                                log.debug(\"All KeyValueTables in scope with continuation token: {}\", response);\n+                                List<KeyValueTableInfo> kvtables = response", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15c4368c9c96a905351afd8b2081e24d164ea94e"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDA3ODIz", "url": "https://github.com/pravega/pravega/pull/4881#pullrequestreview-433407823", "createdAt": "2020-06-18T15:36:50Z", "commit": {"oid": "15c4368c9c96a905351afd8b2081e24d164ea94e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cad6437d6a9828537551a76c19089aaafe8c73a8", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/cad6437d6a9828537551a76c19089aaafe8c73a8", "committedDate": "2020-06-19T04:35:07Z", "message": "fix tests add basic integration test\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7712679c412da6fb48f9a00d5674bda6b1a0e179", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/7712679c412da6fb48f9a00d5674bda6b1a0e179", "committedDate": "2020-06-19T13:06:03Z", "message": "code review comments\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfa4729fde53e900e0ffb5f2fd32b84a34c7e065", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/cfa4729fde53e900e0ffb5f2fd32b84a34c7e065", "committedDate": "2020-06-23T11:14:06Z", "message": "unit tests for list API\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44109e92692992177f713bad7cf21b03c93551ef", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/44109e92692992177f713bad7cf21b03c93551ef", "committedDate": "2020-06-24T05:30:47Z", "message": "test fix\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17723e7f1d48b55fb10a5b928d8dc1a821e7e2ca", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/17723e7f1d48b55fb10a5b928d8dc1a821e7e2ca", "committedDate": "2020-06-24T09:29:25Z", "message": "more tests for coverage\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b15de1134d3a11b56a18281c40e7dc19b058f332", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/b15de1134d3a11b56a18281c40e7dc19b058f332", "committedDate": "2020-06-24T10:15:36Z", "message": "spotbugsfix\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2ODQ5NDY0", "url": "https://github.com/pravega/pravega/pull/4881#pullrequestreview-436849464", "createdAt": "2020-06-24T17:15:55Z", "commit": {"oid": "b15de1134d3a11b56a18281c40e7dc19b058f332"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzoxNTo1NVrOGoboWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxNzoxNjozN1rOGobp-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0ODkyMg==", "bodyText": "\"kvtables\" -> \"Key-Value Tables\"\nSame below.", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r445048922", "createdAt": "2020-06-24T17:15:55Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/main/java/io/pravega/controller/store/Scope.java", "diffHunk": "@@ -67,6 +67,18 @@\n      */\n     void refresh();\n \n+    /**\n+     * A paginated api on the scope to get requested number of kvtables from under the scope", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b15de1134d3a11b56a18281c40e7dc19b058f332"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTA0OTMzOA==", "bodyText": "When are we fixing the test?", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r445049338", "createdAt": "2020-06-24T17:16:37Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/test/java/io/pravega/controller/server/v1/ZKControllerServiceImplTest.java", "diffHunk": "@@ -238,4 +238,10 @@ public void getCurrentSegmentsKeyValueTableTest() {\n         //TODO: Place holder till we fix the test\n         assertTrue(true);\n     }\n+\n+    @Test\n+    public void kvtablesInScopeTest() {\n+        //TODO: Place holder till we fix the test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b15de1134d3a11b56a18281c40e7dc19b058f332"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f56b9cdeb7e54c7cad75904a265fdbd621544b7a", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/f56b9cdeb7e54c7cad75904a265fdbd621544b7a", "committedDate": "2020-06-25T18:19:05Z", "message": "Added Delete API\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8c078d732d0d7306d6979c9643350f48ab96ca2", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/e8c078d732d0d7306d6979c9643350f48ab96ca2", "committedDate": "2020-06-29T10:06:35Z", "message": "DeleteAPI fixes\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0948dbbfe7e2a0916d9615e41fe245e1efb8027a", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/0948dbbfe7e2a0916d9615e41fe245e1efb8027a", "committedDate": "2020-06-29T12:33:21Z", "message": "Unit tests for DeleteAPI\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46285eb23bd20de8815410d94a030885a46c2403", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/46285eb23bd20de8815410d94a030885a46c2403", "committedDate": "2020-06-29T13:31:28Z", "message": "merge from upstream\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ee7dddab7d4be8d46039706f3d26aea5af492a5", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/6ee7dddab7d4be8d46039706f3d26aea5af492a5", "committedDate": "2020-06-29T17:00:23Z", "message": "tests fix\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMjgzMzAz", "url": "https://github.com/pravega/pravega/pull/4881#pullrequestreview-440283303", "createdAt": "2020-06-30T18:32:34Z", "commit": {"oid": "6ee7dddab7d4be8d46039706f3d26aea5af492a5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODozMjozNFrOGrJbZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxODozNDoyMlrOGrJe4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg5NjQyMA==", "bodyText": "Please fix the license header.", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r447896420", "createdAt": "2020-06-30T18:32:34Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/main/java/io/pravega/controller/server/eventProcessor/requesthandlers/kvtable/DeleteTableTask.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ee7dddab7d4be8d46039706f3d26aea5af492a5"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg5NzA1Mw==", "bodyText": "Is this change needed?", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r447897053", "createdAt": "2020-06-30T18:33:51Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/test/java/io/pravega/controller/task/KeyValueTable/TableMetadataTasksTest.java", "diffHunk": "@@ -58,7 +59,7 @@\n     protected KVTableMetadataStore kvtStore;\n     protected TableMetadataTasks kvtMetadataTasks;\n     protected SegmentHelper segmentHelperMock;\n-    protected final ScheduledExecutorService executor = Executors.newScheduledThreadPool(10);\n+    protected final ScheduledExecutorService executor = Executors.newScheduledThreadPool(30);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ee7dddab7d4be8d46039706f3d26aea5af492a5"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Nzg5NzMxNQ==", "bodyText": "license header", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r447897315", "createdAt": "2020-06-30T18:34:22Z", "author": {"login": "andreipaduroiu"}, "path": "shared/controller-api/src/main/java/io/pravega/shared/controller/event/kvtable/DeleteTableEvent.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ee7dddab7d4be8d46039706f3d26aea5af492a5"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28db6370264f44fcc0db9ee6717672817882d73a", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/28db6370264f44fcc0db9ee6717672817882d73a", "committedDate": "2020-07-01T04:15:40Z", "message": "Fixed UTs\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTQ0MTYz", "url": "https://github.com/pravega/pravega/pull/4881#pullrequestreview-440544163", "createdAt": "2020-07-01T04:51:31Z", "commit": {"oid": "28db6370264f44fcc0db9ee6717672817882d73a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDo1MTozMVrOGrWs7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDo1MTozMVrOGrWs7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExMzkwMg==", "bodyText": "\"delete operation on table stream\"", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r448113902", "createdAt": "2020-07-01T04:51:31Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/eventProcessor/requesthandlers/kvtable/DeleteTableTask.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ * <p>\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.eventProcessor.requesthandlers.kvtable;\n+\n+import com.google.common.base.Preconditions;\n+import io.pravega.common.Exceptions;\n+import io.pravega.common.concurrent.Futures;\n+import io.pravega.controller.retryable.RetryableException;\n+import io.pravega.controller.store.kvtable.KVTableMetadataStore;\n+import io.pravega.controller.store.kvtable.KVTOperationContext;\n+import io.pravega.controller.store.kvtable.KeyValueTable;\n+import io.pravega.controller.store.stream.StoreException;\n+import io.pravega.controller.task.KeyValueTable.TableMetadataTasks;\n+import io.pravega.controller.util.RetryHelper;\n+import io.pravega.shared.controller.event.kvtable.DeleteTableEvent;\n+import lombok.extern.slf4j.Slf4j;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ScheduledExecutorService;\n+\n+/**\n+ * Request handler for performing scale operations received from requeststream.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28db6370264f44fcc0db9ee6717672817882d73a"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTQ0MzY3", "url": "https://github.com/pravega/pravega/pull/4881#pullrequestreview-440544367", "createdAt": "2020-07-01T04:52:16Z", "commit": {"oid": "28db6370264f44fcc0db9ee6717672817882d73a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDo1MjoxNlrOGrWtmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDo1MjoxNlrOGrWtmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExNDA3Mg==", "bodyText": "please log that this workflow completed because of this condition.", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r448114072", "createdAt": "2020-07-01T04:52:16Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/eventProcessor/requesthandlers/kvtable/DeleteTableTask.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ * <p>\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.eventProcessor.requesthandlers.kvtable;\n+\n+import com.google.common.base.Preconditions;\n+import io.pravega.common.Exceptions;\n+import io.pravega.common.concurrent.Futures;\n+import io.pravega.controller.retryable.RetryableException;\n+import io.pravega.controller.store.kvtable.KVTableMetadataStore;\n+import io.pravega.controller.store.kvtable.KVTOperationContext;\n+import io.pravega.controller.store.kvtable.KeyValueTable;\n+import io.pravega.controller.store.stream.StoreException;\n+import io.pravega.controller.task.KeyValueTable.TableMetadataTasks;\n+import io.pravega.controller.util.RetryHelper;\n+import io.pravega.shared.controller.event.kvtable.DeleteTableEvent;\n+import lombok.extern.slf4j.Slf4j;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ScheduledExecutorService;\n+\n+/**\n+ * Request handler for performing scale operations received from requeststream.\n+ */\n+@Slf4j\n+public class DeleteTableTask implements TableTask<DeleteTableEvent> {\n+\n+    private final KVTableMetadataStore kvtMetadataStore;\n+    private final TableMetadataTasks kvtMetadataTasks;\n+    private final ScheduledExecutorService executor;\n+\n+    public DeleteTableTask(final KVTableMetadataStore kvtMetaStore,\n+                           final TableMetadataTasks kvtMetaTasks,\n+                           final ScheduledExecutorService executor) {\n+        Preconditions.checkNotNull(kvtMetaStore);\n+        Preconditions.checkNotNull(kvtMetaTasks);\n+        Preconditions.checkNotNull(executor);\n+        this.kvtMetadataStore = kvtMetaStore;\n+        this.kvtMetadataTasks = kvtMetaTasks;\n+        this.executor = executor;\n+    }\n+\n+    @Override\n+    public CompletableFuture<Void> execute(final DeleteTableEvent request) {\n+        String scope = request.getScope();\n+        String kvt = request.getKvtName();\n+        long requestId = request.getRequestId();\n+        String kvTableId = request.getTableId().toString();\n+\n+        return RetryHelper.withRetriesAsync(() -> getKeyValueTable(scope, kvt)\n+                .thenCompose(table -> table.getId()).thenCompose(id -> {\n+            if (!id.equals(kvTableId)) {\n+                return CompletableFuture.completedFuture(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28db6370264f44fcc0db9ee6717672817882d73a"}, "originalPosition": 59}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTQ2NTQ4", "url": "https://github.com/pravega/pravega/pull/4881#pullrequestreview-440546548", "createdAt": "2020-07-01T04:59:37Z", "commit": {"oid": "28db6370264f44fcc0db9ee6717672817882d73a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDo1OTozOFrOGrW0gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNDo1OTozOFrOGrW0gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODExNTg0MQ==", "bodyText": "there only seems to be one future.. why CompletableFuture.allOf?", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r448115841", "createdAt": "2020-07-01T04:59:38Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/kvtable/PravegaTablesKVTable.java", "diffHunk": "@@ -191,11 +191,14 @@ private String getMetadataTableName(String id) {\n \n     @Override\n     CompletableFuture<Void> createKVTableMetadata() {\n-        return getId().thenCompose(id -> {\n-            String metadataTable = getMetadataTableName(id);\n-            return CompletableFuture.allOf(storeHelper.createTable(metadataTable))\n-                    .thenAccept(v -> log.debug(\"kvtable {}/{} metadata table {} created\", getScopeName(), getName(), metadataTable));\n-        });\n+        return getId().thenCompose(id -> CompletableFuture.allOf(storeHelper.createTable(getMetadataTableName(id)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28db6370264f44fcc0db9ee6717672817882d73a"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNTQ3NzA0", "url": "https://github.com/pravega/pravega/pull/4881#pullrequestreview-440547704", "createdAt": "2020-07-01T05:03:29Z", "commit": {"oid": "28db6370264f44fcc0db9ee6717672817882d73a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3c2c9edea3357c64dcc88f08c6960a20f02dfa9", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/c3c2c9edea3357c64dcc88f08c6960a20f02dfa9", "committedDate": "2020-07-01T08:07:16Z", "message": "code review comments\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f030ab73516bdf45f0a50112ec06729435605e5", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/1f030ab73516bdf45f0a50112ec06729435605e5", "committedDate": "2020-07-01T09:50:02Z", "message": "more UTs for coverage\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a415b81c20cc4ca20135f6d7b64adaa4211d5655", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/a415b81c20cc4ca20135f6d7b64adaa4211d5655", "committedDate": "2020-07-01T15:07:29Z", "message": "test fixes\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMDc1MjQ2", "url": "https://github.com/pravega/pravega/pull/4881#pullrequestreview-441075246", "createdAt": "2020-07-01T17:42:57Z", "commit": {"oid": "a415b81c20cc4ca20135f6d7b64adaa4211d5655"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d36c925fa527dc66f954d352ffefb919c4ef910a", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/d36c925fa527dc66f954d352ffefb919c4ef910a", "committedDate": "2020-07-02T04:16:50Z", "message": "Improve Code Coverage\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNDk1MjMz", "url": "https://github.com/pravega/pravega/pull/4881#pullrequestreview-441495233", "createdAt": "2020-07-02T09:12:19Z", "commit": {"oid": "d36c925fa527dc66f954d352ffefb919c4ef910a"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOToxMjoyMFrOGsEY0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOToyMDoyNlrOGsErVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg2MjQxNg==", "bodyText": "Please, remove thins kind of console prints from the code.", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r448862416", "createdAt": "2020-07-02T09:12:20Z", "author": {"login": "RaulGracia"}, "path": "client/src/test/java/io/pravega/client/control/impl/ControllerImplTest.java", "diffHunk": "@@ -955,6 +957,71 @@ public void getCurrentSegmentsKeyValueTable(Controller.KeyValueTableInfo request\n                     responseObserver.onError(Status.INTERNAL.withDescription(\"Server error\").asRuntimeException());\n                 }\n             }\n+\n+            @Override\n+            public void listKeyValueTablesInScope(Controller.KVTablesInScopeRequest request,\n+                                                  StreamObserver<Controller.KVTablesInScopeResponse> responseObserver) {\n+                if (request.getScope().getScope().equals(NON_EXISTENT)) {\n+                    responseObserver.onNext(Controller.KVTablesInScopeResponse\n+                            .newBuilder().setStatus(Controller.KVTablesInScopeResponse.Status.SCOPE_NOT_FOUND)\n+                            .build());\n+                    responseObserver.onCompleted();\n+                } else if (request.getScope().getScope().equals(\"deadline\")) {\n+                    // dont send any response\n+                    System.err.println(\"i am here\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36c925fa527dc66f954d352ffefb919c4ef910a"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg2MzEyNw==", "bodyText": "Please, use single line imports as it was before.", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r448863127", "createdAt": "2020-07-02T09:13:33Z", "author": {"login": "RaulGracia"}, "path": "controller/src/main/java/io/pravega/controller/metrics/StreamMetrics.java", "diffHunk": "@@ -14,31 +14,7 @@\n import java.time.Duration;\n import java.util.concurrent.atomic.AtomicReference;\n \n-import static io.pravega.shared.MetricsNames.CREATE_STREAM;\n-import static io.pravega.shared.MetricsNames.CREATE_STREAM_FAILED;\n-import static io.pravega.shared.MetricsNames.CREATE_STREAM_LATENCY;\n-import static io.pravega.shared.MetricsNames.DELETE_STREAM;\n-import static io.pravega.shared.MetricsNames.DELETE_STREAM_FAILED;\n-import static io.pravega.shared.MetricsNames.DELETE_STREAM_LATENCY;\n-import static io.pravega.shared.MetricsNames.OPEN_TRANSACTIONS;\n-import static io.pravega.shared.MetricsNames.RETENTION_FREQUENCY;\n-import static io.pravega.shared.MetricsNames.SEAL_STREAM;\n-import static io.pravega.shared.MetricsNames.SEAL_STREAM_FAILED;\n-import static io.pravega.shared.MetricsNames.SEAL_STREAM_LATENCY;\n-import static io.pravega.shared.MetricsNames.SEGMENTS_COUNT;\n-import static io.pravega.shared.MetricsNames.SEGMENTS_MERGES;\n-import static io.pravega.shared.MetricsNames.SEGMENTS_SPLITS;\n-import static io.pravega.shared.MetricsNames.TRUNCATE_STREAM;\n-import static io.pravega.shared.MetricsNames.TRUNCATE_STREAM_FAILED;\n-import static io.pravega.shared.MetricsNames.TRUNCATE_STREAM_LATENCY;\n-import static io.pravega.shared.MetricsNames.UPDATE_STREAM;\n-import static io.pravega.shared.MetricsNames.UPDATE_STREAM_FAILED;\n-import static io.pravega.shared.MetricsNames.UPDATE_STREAM_LATENCY;\n-import static io.pravega.shared.MetricsNames.CREATE_KVTABLE_LATENCY;\n-import static io.pravega.shared.MetricsNames.CREATE_KVTABLE;\n-import static io.pravega.shared.MetricsNames.KVTABLE_SEGMENTS_COUNT;\n-import static io.pravega.shared.MetricsNames.CREATE_KVTABLE_FAILED;\n-import static io.pravega.shared.MetricsNames.globalMetricName;\n+import static io.pravega.shared.MetricsNames.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36c925fa527dc66f954d352ffefb919c4ef910a"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg2NDQ3NA==", "bodyText": "with Is what does it mean?", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r448864474", "createdAt": "2020-07-02T09:15:48Z", "author": {"login": "RaulGracia"}, "path": "controller/src/main/java/io/pravega/controller/server/eventProcessor/requesthandlers/kvtable/DeleteTableTask.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ * <p>\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * <p>\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.controller.server.eventProcessor.requesthandlers.kvtable;\n+\n+import com.google.common.base.Preconditions;\n+import io.pravega.common.Exceptions;\n+import io.pravega.common.concurrent.Futures;\n+import io.pravega.controller.retryable.RetryableException;\n+import io.pravega.controller.store.kvtable.KVTableMetadataStore;\n+import io.pravega.controller.store.kvtable.KVTOperationContext;\n+import io.pravega.controller.store.kvtable.KeyValueTable;\n+import io.pravega.controller.store.stream.StoreException;\n+import io.pravega.controller.task.KeyValueTable.TableMetadataTasks;\n+import io.pravega.controller.util.RetryHelper;\n+import io.pravega.shared.controller.event.kvtable.DeleteTableEvent;\n+import lombok.extern.slf4j.Slf4j;\n+\n+import java.util.concurrent.CompletableFuture;\n+import java.util.concurrent.ScheduledExecutorService;\n+\n+/**\n+ * Request handler for executing a delete operation for a KeyValueTable.\n+ */\n+@Slf4j\n+public class DeleteTableTask implements TableTask<DeleteTableEvent> {\n+\n+    private final KVTableMetadataStore kvtMetadataStore;\n+    private final TableMetadataTasks kvtMetadataTasks;\n+    private final ScheduledExecutorService executor;\n+\n+    public DeleteTableTask(final KVTableMetadataStore kvtMetaStore,\n+                           final TableMetadataTasks kvtMetaTasks,\n+                           final ScheduledExecutorService executor) {\n+        Preconditions.checkNotNull(kvtMetaStore);\n+        Preconditions.checkNotNull(kvtMetaTasks);\n+        Preconditions.checkNotNull(executor);\n+        this.kvtMetadataStore = kvtMetaStore;\n+        this.kvtMetadataTasks = kvtMetaTasks;\n+        this.executor = executor;\n+    }\n+\n+    @Override\n+    public CompletableFuture<Void> execute(final DeleteTableEvent request) {\n+        String scope = request.getScope();\n+        String kvt = request.getKvtName();\n+        long requestId = request.getRequestId();\n+        String kvTableId = request.getTableId().toString();\n+\n+        return RetryHelper.withRetriesAsync(() -> getKeyValueTable(scope, kvt)\n+                .thenCompose(table -> table.getId()).thenCompose(id -> {\n+            if (!id.equals(kvTableId)) {\n+                log.debug(\"Skipped processing delete event for KeyValueTable {}/{} with Is:{} as UUIDs did not match.\", scope, kvt, id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36c925fa527dc66f954d352ffefb919c4ef910a"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg2NTIzMg==", "bodyText": "This can be simplified in a one-liner: final AuthContext ctx = (this.grpcAuthHelper.isAuthEnabled()) ? AuthContext.current() : null;", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r448865232", "createdAt": "2020-07-02T09:17:06Z", "author": {"login": "RaulGracia"}, "path": "controller/src/main/java/io/pravega/controller/server/rpc/grpc/v1/ControllerServiceImpl.java", "diffHunk": "@@ -144,6 +146,67 @@ public void getCurrentSegmentsKeyValueTable(KeyValueTableInfo request, StreamObs\n                 responseObserver);\n     }\n \n+    @Override\n+    public void listKeyValueTablesInScope(Controller.KVTablesInScopeRequest request, StreamObserver<Controller.KVTablesInScopeResponse> responseObserver) {\n+        String scopeName = request.getScope().getScope();\n+        RequestTag requestTag = requestTracker.initializeAndTrackRequestTag(requestIdGenerator.get(),\n+                \"listKeyValueTables\", scopeName);\n+        log.info(requestTag.getRequestId(), \"listKeyValueTables called for scope {}.\", scopeName);\n+\n+        final AuthContext ctx;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36c925fa527dc66f954d352ffefb919c4ef910a"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg2NjE2Mw==", "bodyText": "Do we have a consistent structure for the logging related to KV tables in controller? If not, it may be a good idea, so we can apply reggex expressions with grep when looking into the logs.", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r448866163", "createdAt": "2020-07-02T09:18:43Z", "author": {"login": "RaulGracia"}, "path": "controller/src/main/java/io/pravega/controller/server/rpc/grpc/v1/ControllerServiceImpl.java", "diffHunk": "@@ -144,6 +146,67 @@ public void getCurrentSegmentsKeyValueTable(KeyValueTableInfo request, StreamObs\n                 responseObserver);\n     }\n \n+    @Override\n+    public void listKeyValueTablesInScope(Controller.KVTablesInScopeRequest request, StreamObserver<Controller.KVTablesInScopeResponse> responseObserver) {\n+        String scopeName = request.getScope().getScope();\n+        RequestTag requestTag = requestTracker.initializeAndTrackRequestTag(requestIdGenerator.get(),\n+                \"listKeyValueTables\", scopeName);\n+        log.info(requestTag.getRequestId(), \"listKeyValueTables called for scope {}.\", scopeName);\n+\n+        final AuthContext ctx;\n+        if (this.grpcAuthHelper.isAuthEnabled()) {\n+            ctx = AuthContext.current();\n+        } else {\n+            ctx = null;\n+        }\n+\n+        authenticateExecuteAndProcessResults(\n+                () -> {\n+                    String result = this.grpcAuthHelper.checkAuthorization(\n+                            AuthResourceRepresentation.ofScope(scopeName),\n+                            AuthHandler.Permissions.READ,\n+                            ctx);\n+                    log.debug(\"Result of authorization for [{}] and READ permission is: [{}]\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36c925fa527dc66f954d352ffefb919c4ef910a"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg2NzE1Ng==", "bodyText": "This can be simplified in a one-liner: end = ((start + limit) >= sortedKVTablesList.size()) ? sortedKVTablesList.size() : start + limit;", "url": "https://github.com/pravega/pravega/pull/4881#discussion_r448867156", "createdAt": "2020-07-02T09:20:26Z", "author": {"login": "RaulGracia"}, "path": "controller/src/main/java/io/pravega/controller/store/InMemoryScope.java", "diffHunk": "@@ -147,4 +151,32 @@ public String getName() {\n     @Override\n     public void refresh() {\n     }\n+\n+    @Override\n+    public CompletableFuture<Pair<List<String>, String>> listKeyValueTables(int limit, String continuationToken, Executor executor) {\n+        if (kvTablesMap == null) {\n+            return Futures.failedFuture(StoreException.create(StoreException.Type.DATA_NOT_FOUND, this.scopeName));\n+        }\n+        List<String> sortedKVTablesList = kvTablesMap.keySet().stream().collect(Collectors.toList());\n+        int start = 0, end = 0;\n+        if (!continuationToken.isEmpty()) {\n+            start = Integer.parseInt(continuationToken);\n+        }\n+\n+        if ((start + limit) >= sortedKVTablesList.size()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d36c925fa527dc66f954d352ffefb919c4ef910a"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2beb6b6d3f4fce05b13f58e10c39ed6c1273692", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/e2beb6b6d3f4fce05b13f58e10c39ed6c1273692", "committedDate": "2020-07-02T09:42:21Z", "message": "minor review comments\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3929, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}