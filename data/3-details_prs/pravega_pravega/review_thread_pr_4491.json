{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNTU0NTYw", "number": 4491, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDozNDowOFrODYhd3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNjoyNTo1NFrODYuZGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MDQwNzM0OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/batch/impl/BatchClientFactoryImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNlQxNDozNDowOFrOFebYxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwMjowMDo0NFrOFes9MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ1MDMwOA==", "bodyText": "The DelegationTokenProvider implementation holds the DelegationToken under an AtomicReference. So wrapping the provider using an AtomicReference is redundant here, and should be removed.\n\n  \n    \n      pravega/client/src/main/java/io/pravega/client/security/auth/JwtTokenProviderImpl.java\n    \n    \n         Line 71\n      in\n      ad9260d\n    \n    \n    \n    \n\n        \n          \n           private final AtomicReference<DelegationToken> delegationToken = new AtomicReference<>();", "url": "https://github.com/pravega/pravega/pull/4491#discussion_r367450308", "createdAt": "2020-01-16T14:34:08Z", "author": {"login": "ravisharda"}, "path": "client/src/main/java/io/pravega/client/batch/impl/BatchClientFactoryImpl.java", "diffHunk": "@@ -46,25 +46,22 @@\n \n @Beta\n @Slf4j\n-@SuppressWarnings(\"deprecation\")\n public class BatchClientFactoryImpl implements BatchClientFactory {\n \n     private final Controller controller;\n     private final ConnectionFactory connectionFactory;\n     private final SegmentInputStreamFactory inputStreamFactory;\n     private final SegmentMetadataClientFactory segmentMetadataClientFactory;\n     private final StreamCutHelper streamCutHelper;\n-\n-    @GuardedBy(\"this\")\n-    private final AtomicReference<String> latestDelegationToken;\n+    private final AtomicReference<DelegationTokenProvider> delegationTokenProvider;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9eb7bbc7f05553a64a4e66273b7f6be8f1c1fed8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzczODE2MA==", "bodyText": "Fixed it. Removed the redundant AtomicReference.", "url": "https://github.com/pravega/pravega/pull/4491#discussion_r367738160", "createdAt": "2020-01-17T02:00:44Z", "author": {"login": "shrids"}, "path": "client/src/main/java/io/pravega/client/batch/impl/BatchClientFactoryImpl.java", "diffHunk": "@@ -46,25 +46,22 @@\n \n @Beta\n @Slf4j\n-@SuppressWarnings(\"deprecation\")\n public class BatchClientFactoryImpl implements BatchClientFactory {\n \n     private final Controller controller;\n     private final ConnectionFactory connectionFactory;\n     private final SegmentInputStreamFactory inputStreamFactory;\n     private final SegmentMetadataClientFactory segmentMetadataClientFactory;\n     private final StreamCutHelper streamCutHelper;\n-\n-    @GuardedBy(\"this\")\n-    private final AtomicReference<String> latestDelegationToken;\n+    private final AtomicReference<DelegationTokenProvider> delegationTokenProvider;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzQ1MDMwOA=="}, "originalCommit": {"oid": "9eb7bbc7f05553a64a4e66273b7f6be8f1c1fed8"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MjQyMzM5OnYy", "diffSide": "RIGHT", "path": "client/src/test/java/io/pravega/client/batch/impl/BatchClientImplTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNTowMTozNFrOFeu5yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNTowOTo1M1rOFeu_pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc3MDA1Ng==", "bodyText": "Since the passed object is not a real object, using a spy() seems unnecessary here. We can use mockController directly.", "url": "https://github.com/pravega/pravega/pull/4491#discussion_r367770056", "createdAt": "2020-01-17T05:01:34Z", "author": {"login": "ravisharda"}, "path": "client/src/test/java/io/pravega/client/batch/impl/BatchClientImplTest.java", "diffHunk": "@@ -100,6 +109,33 @@ public void testGetSegmentsWithNullStreamCut() throws Exception {\n         assertFalse(segments.hasNext());\n     }\n \n+    @Test(timeout = 5000)\n+    public void testGetSegmentsWithMultipleSegments() throws Exception {\n+\n+        PravegaNodeUri location = new PravegaNodeUri(\"localhost\", 0);\n+        MockConnectionFactoryImpl connectionFactory = getMockConnectionFactory(location);\n+        MockController mockController = new MockController(location.getEndpoint(), location\n+                .getPort(), connectionFactory, false);\n+        MockController stubbedController = spy(mockController);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdc431f3b5877605bd7b2c621d38495cb1ed525c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc3MDcwMw==", "bodyText": "The mockController used here is not a @mock but a test implmentation for the controller.", "url": "https://github.com/pravega/pravega/pull/4491#discussion_r367770703", "createdAt": "2020-01-17T05:05:42Z", "author": {"login": "shrids"}, "path": "client/src/test/java/io/pravega/client/batch/impl/BatchClientImplTest.java", "diffHunk": "@@ -100,6 +109,33 @@ public void testGetSegmentsWithNullStreamCut() throws Exception {\n         assertFalse(segments.hasNext());\n     }\n \n+    @Test(timeout = 5000)\n+    public void testGetSegmentsWithMultipleSegments() throws Exception {\n+\n+        PravegaNodeUri location = new PravegaNodeUri(\"localhost\", 0);\n+        MockConnectionFactoryImpl connectionFactory = getMockConnectionFactory(location);\n+        MockController mockController = new MockController(location.getEndpoint(), location\n+                .getPort(), connectionFactory, false);\n+        MockController stubbedController = spy(mockController);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc3MDA1Ng=="}, "originalCommit": {"oid": "fdc431f3b5877605bd7b2c621d38495cb1ed525c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc3MTU1Nw==", "bodyText": "I see. :)", "url": "https://github.com/pravega/pravega/pull/4491#discussion_r367771557", "createdAt": "2020-01-17T05:09:53Z", "author": {"login": "ravisharda"}, "path": "client/src/test/java/io/pravega/client/batch/impl/BatchClientImplTest.java", "diffHunk": "@@ -100,6 +109,33 @@ public void testGetSegmentsWithNullStreamCut() throws Exception {\n         assertFalse(segments.hasNext());\n     }\n \n+    @Test(timeout = 5000)\n+    public void testGetSegmentsWithMultipleSegments() throws Exception {\n+\n+        PravegaNodeUri location = new PravegaNodeUri(\"localhost\", 0);\n+        MockConnectionFactoryImpl connectionFactory = getMockConnectionFactory(location);\n+        MockController mockController = new MockController(location.getEndpoint(), location\n+                .getPort(), connectionFactory, false);\n+        MockController stubbedController = spy(mockController);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc3MDA1Ng=="}, "originalCommit": {"oid": "fdc431f3b5877605bd7b2c621d38495cb1ed525c"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3MjUyNTA0OnYy", "diffSide": "RIGHT", "path": "test/integration/src/test/java/io/pravega/test/integration/DelegationTokenTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNjoyNTo1NFrOFev1kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwNjozMDoyN1rOFev5FA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc4NTM2Mw==", "bodyText": "nit: timeouts", "url": "https://github.com/pravega/pravega/pull/4491#discussion_r367785363", "createdAt": "2020-01-17T06:25:54Z", "author": {"login": "ravisharda"}, "path": "test/integration/src/test/java/io/pravega/test/integration/DelegationTokenTest.java", "diffHunk": "@@ -200,4 +184,96 @@ public void testDelegationTokenGetsRenewedAfterExpiry() throws InterruptedExcept\n             pravegaCluster.close();\n         }\n     }\n+\n+    /**\n+     * This test verifies that a batch client continues to read events as a result of automatic delegation token\n+     * renewal, after the initial delegation token it uses expires.\n+     * <p>\n+     * We use an extraordinarily high test timeout and read time outs to account for any inordinate delays that may be", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1526c2e6fa2e6c7a673f8ab929ca054d2664acc9"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc4NjI2MA==", "bodyText": "fixed it.", "url": "https://github.com/pravega/pravega/pull/4491#discussion_r367786260", "createdAt": "2020-01-17T06:30:27Z", "author": {"login": "shrids"}, "path": "test/integration/src/test/java/io/pravega/test/integration/DelegationTokenTest.java", "diffHunk": "@@ -200,4 +184,96 @@ public void testDelegationTokenGetsRenewedAfterExpiry() throws InterruptedExcept\n             pravegaCluster.close();\n         }\n     }\n+\n+    /**\n+     * This test verifies that a batch client continues to read events as a result of automatic delegation token\n+     * renewal, after the initial delegation token it uses expires.\n+     * <p>\n+     * We use an extraordinarily high test timeout and read time outs to account for any inordinate delays that may be", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzc4NTM2Mw=="}, "originalCommit": {"oid": "1526c2e6fa2e6c7a673f8ab929ca054d2664acc9"}, "originalPosition": 88}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4392, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}