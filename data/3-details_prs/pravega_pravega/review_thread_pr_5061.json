{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2OTI0MTYy", "number": 5061, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDozNDo0OFrOEYfigw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjo0ODo0NFrOEZH-pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTE4MDE5OnYy", "diffSide": "RIGHT", "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDozNDo0OFrOHA250w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDo1MTozMlrOHA3pQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2MTU4Nw==", "bodyText": "Invoking join here will eventually lead to a thread pool exhaustion.", "url": "https://github.com/pravega/pravega/pull/5061#discussion_r470661587", "createdAt": "2020-08-14T14:34:48Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "diffHunk": "@@ -161,14 +163,32 @@ public void setupAppend(SetupAppend setupAppend) {\n                 .whenComplete((attributes, u) -> {\n                     try {\n                         if (u != null) {\n+                            if (u instanceof StreamSegmentSealedException) {\n+                                throw u;\n+                            }\n                             handleException(writer, setupAppend.getRequestId(), newSegment, \"setting up append\", u);\n                         } else {\n+                            SegmentProperties sp = this.store.getStreamSegmentInfo(newSegment, TIMEOUT).join();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "033902e3ea9d2dba29d2607400b150674237d82c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2MTg0OA==", "bodyText": "Also why are you doing this for successful operations?", "url": "https://github.com/pravega/pravega/pull/5061#discussion_r470661848", "createdAt": "2020-08-14T14:35:12Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "diffHunk": "@@ -161,14 +163,32 @@ public void setupAppend(SetupAppend setupAppend) {\n                 .whenComplete((attributes, u) -> {\n                     try {\n                         if (u != null) {\n+                            if (u instanceof StreamSegmentSealedException) {\n+                                throw u;\n+                            }\n                             handleException(writer, setupAppend.getRequestId(), newSegment, \"setting up append\", u);\n                         } else {\n+                            SegmentProperties sp = this.store.getStreamSegmentInfo(newSegment, TIMEOUT).join();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2MTU4Nw=="}, "originalCommit": {"oid": "033902e3ea9d2dba29d2607400b150674237d82c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY3MzczMQ==", "bodyText": "Yes Andrei, I could not find SegmentSealed exception raised until here.", "url": "https://github.com/pravega/pravega/pull/5061#discussion_r470673731", "createdAt": "2020-08-14T14:51:32Z", "author": {"login": "ravibeta"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "diffHunk": "@@ -161,14 +163,32 @@ public void setupAppend(SetupAppend setupAppend) {\n                 .whenComplete((attributes, u) -> {\n                     try {\n                         if (u != null) {\n+                            if (u instanceof StreamSegmentSealedException) {\n+                                throw u;\n+                            }\n                             handleException(writer, setupAppend.getRequestId(), newSegment, \"setting up append\", u);\n                         } else {\n+                            SegmentProperties sp = this.store.getStreamSegmentInfo(newSegment, TIMEOUT).join();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2MTU4Nw=="}, "originalCommit": {"oid": "033902e3ea9d2dba29d2607400b150674237d82c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTE4NjY3OnYy", "diffSide": "RIGHT", "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDozNjozN1rOHA29uQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDo1MjowN1rOHA3qng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2MjU4NQ==", "bodyText": "This is an inelegant way of handling this. Please use an exceptionally clause before the whenComplete to do this.\nBetter yet, use Futures.exceptionallyComposeExpecting with StreamSegmentSealedException.class as its expected exception and add your special handling code in the callback.", "url": "https://github.com/pravega/pravega/pull/5061#discussion_r470662585", "createdAt": "2020-08-14T14:36:37Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "diffHunk": "@@ -161,14 +163,32 @@ public void setupAppend(SetupAppend setupAppend) {\n                 .whenComplete((attributes, u) -> {\n                     try {\n                         if (u != null) {\n+                            if (u instanceof StreamSegmentSealedException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "033902e3ea9d2dba29d2607400b150674237d82c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY3NDA3OA==", "bodyText": "Yes Andrei", "url": "https://github.com/pravega/pravega/pull/5061#discussion_r470674078", "createdAt": "2020-08-14T14:52:07Z", "author": {"login": "ravibeta"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "diffHunk": "@@ -161,14 +163,32 @@ public void setupAppend(SetupAppend setupAppend) {\n                 .whenComplete((attributes, u) -> {\n                     try {\n                         if (u != null) {\n+                            if (u instanceof StreamSegmentSealedException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2MjU4NQ=="}, "originalCommit": {"oid": "033902e3ea9d2dba29d2607400b150674237d82c"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTE5MTQ2OnYy", "diffSide": "RIGHT", "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDozNzo1N1rOHA3Alg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDo1MjoyMFrOHA3rEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2MzMxOA==", "bodyText": "This should not be info.\n\"disabling caching of attribute value\" is misleading. We are not disabling anything, just passing an arg to a method. Disabling may be perceived as \"disabling across the board\".\n\nI do not see the value of this log message here since the segment store logs its calls with all args.", "url": "https://github.com/pravega/pravega/pull/5061#discussion_r470663318", "createdAt": "2020-08-14T14:37:57Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "diffHunk": "@@ -161,14 +163,32 @@ public void setupAppend(SetupAppend setupAppend) {\n                 .whenComplete((attributes, u) -> {\n                     try {\n                         if (u != null) {\n+                            if (u instanceof StreamSegmentSealedException) {\n+                                throw u;\n+                            }\n                             handleException(writer, setupAppend.getRequestId(), newSegment, \"setting up append\", u);\n                         } else {\n+                            SegmentProperties sp = this.store.getStreamSegmentInfo(newSegment, TIMEOUT).join();\n+                            if (sp.isSealed()) {\n+                                throw new StreamSegmentSealedException(newSegment);\n+                            }\n                             long eventNumber = attributes.getOrDefault(writer, Attributes.NULL_ATTRIBUTE_VALUE);\n                             this.writerStates.putIfAbsent(Pair.of(newSegment, writer), new WriterState(eventNumber));\n                             connection.send(new AppendSetup(setupAppend.getRequestId(), newSegment, writer, eventNumber));\n                         }\n                     } catch (Throwable e) {\n-                        handleException(writer, setupAppend.getRequestId(), newSegment, \"handling setupAppend result\", e);\n+                        if (e instanceof StreamSegmentSealedException || e.getCause() instanceof StreamSegmentSealedException) {\n+                            log.info(\"Segment '{}' is sealed and {} cannot perform append, disabling caching of attribute value...\", newSegment, writer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "033902e3ea9d2dba29d2607400b150674237d82c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY3NDE5Mw==", "bodyText": "Yes Andrei", "url": "https://github.com/pravega/pravega/pull/5061#discussion_r470674193", "createdAt": "2020-08-14T14:52:20Z", "author": {"login": "ravibeta"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "diffHunk": "@@ -161,14 +163,32 @@ public void setupAppend(SetupAppend setupAppend) {\n                 .whenComplete((attributes, u) -> {\n                     try {\n                         if (u != null) {\n+                            if (u instanceof StreamSegmentSealedException) {\n+                                throw u;\n+                            }\n                             handleException(writer, setupAppend.getRequestId(), newSegment, \"setting up append\", u);\n                         } else {\n+                            SegmentProperties sp = this.store.getStreamSegmentInfo(newSegment, TIMEOUT).join();\n+                            if (sp.isSealed()) {\n+                                throw new StreamSegmentSealedException(newSegment);\n+                            }\n                             long eventNumber = attributes.getOrDefault(writer, Attributes.NULL_ATTRIBUTE_VALUE);\n                             this.writerStates.putIfAbsent(Pair.of(newSegment, writer), new WriterState(eventNumber));\n                             connection.send(new AppendSetup(setupAppend.getRequestId(), newSegment, writer, eventNumber));\n                         }\n                     } catch (Throwable e) {\n-                        handleException(writer, setupAppend.getRequestId(), newSegment, \"handling setupAppend result\", e);\n+                        if (e instanceof StreamSegmentSealedException || e.getCause() instanceof StreamSegmentSealedException) {\n+                            log.info(\"Segment '{}' is sealed and {} cannot perform append, disabling caching of attribute value...\", newSegment, writer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2MzMxOA=="}, "originalCommit": {"oid": "033902e3ea9d2dba29d2607400b150674237d82c"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTE5MTc5OnYy", "diffSide": "RIGHT", "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDozODowNVrOHA3Azg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDo1MzowM1rOHA3szw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2MzM3NA==", "bodyText": "Again, you are using join", "url": "https://github.com/pravega/pravega/pull/5061#discussion_r470663374", "createdAt": "2020-08-14T14:38:05Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "diffHunk": "@@ -161,14 +163,32 @@ public void setupAppend(SetupAppend setupAppend) {\n                 .whenComplete((attributes, u) -> {\n                     try {\n                         if (u != null) {\n+                            if (u instanceof StreamSegmentSealedException) {\n+                                throw u;\n+                            }\n                             handleException(writer, setupAppend.getRequestId(), newSegment, \"setting up append\", u);\n                         } else {\n+                            SegmentProperties sp = this.store.getStreamSegmentInfo(newSegment, TIMEOUT).join();\n+                            if (sp.isSealed()) {\n+                                throw new StreamSegmentSealedException(newSegment);\n+                            }\n                             long eventNumber = attributes.getOrDefault(writer, Attributes.NULL_ATTRIBUTE_VALUE);\n                             this.writerStates.putIfAbsent(Pair.of(newSegment, writer), new WriterState(eventNumber));\n                             connection.send(new AppendSetup(setupAppend.getRequestId(), newSegment, writer, eventNumber));\n                         }\n                     } catch (Throwable e) {\n-                        handleException(writer, setupAppend.getRequestId(), newSegment, \"handling setupAppend result\", e);\n+                        if (e instanceof StreamSegmentSealedException || e.getCause() instanceof StreamSegmentSealedException) {\n+                            log.info(\"Segment '{}' is sealed and {} cannot perform append, disabling caching of attribute value...\", newSegment, writer);\n+                            Map<UUID, Long> newAttributes = store.getAttributes(newSegment, Collections.singleton(writer), false, TIMEOUT).join();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "033902e3ea9d2dba29d2607400b150674237d82c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY3NDYzOQ==", "bodyText": "Yes Andrei.", "url": "https://github.com/pravega/pravega/pull/5061#discussion_r470674639", "createdAt": "2020-08-14T14:53:03Z", "author": {"login": "ravibeta"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "diffHunk": "@@ -161,14 +163,32 @@ public void setupAppend(SetupAppend setupAppend) {\n                 .whenComplete((attributes, u) -> {\n                     try {\n                         if (u != null) {\n+                            if (u instanceof StreamSegmentSealedException) {\n+                                throw u;\n+                            }\n                             handleException(writer, setupAppend.getRequestId(), newSegment, \"setting up append\", u);\n                         } else {\n+                            SegmentProperties sp = this.store.getStreamSegmentInfo(newSegment, TIMEOUT).join();\n+                            if (sp.isSealed()) {\n+                                throw new StreamSegmentSealedException(newSegment);\n+                            }\n                             long eventNumber = attributes.getOrDefault(writer, Attributes.NULL_ATTRIBUTE_VALUE);\n                             this.writerStates.putIfAbsent(Pair.of(newSegment, writer), new WriterState(eventNumber));\n                             connection.send(new AppendSetup(setupAppend.getRequestId(), newSegment, writer, eventNumber));\n                         }\n                     } catch (Throwable e) {\n-                        handleException(writer, setupAppend.getRequestId(), newSegment, \"handling setupAppend result\", e);\n+                        if (e instanceof StreamSegmentSealedException || e.getCause() instanceof StreamSegmentSealedException) {\n+                            log.info(\"Segment '{}' is sealed and {} cannot perform append, disabling caching of attribute value...\", newSegment, writer);\n+                            Map<UUID, Long> newAttributes = store.getAttributes(newSegment, Collections.singleton(writer), false, TIMEOUT).join();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2MzM3NA=="}, "originalCommit": {"oid": "033902e3ea9d2dba29d2607400b150674237d82c"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0MTE5NDg0OnYy", "diffSide": "RIGHT", "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDozOTowNlrOHA3C3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxNDo1MzoxMVrOHA3tGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2MzkwMQ==", "bodyText": "This code looks copy pasted from above. If you use my suggestion above, you will not need this duplication.", "url": "https://github.com/pravega/pravega/pull/5061#discussion_r470663901", "createdAt": "2020-08-14T14:39:06Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "diffHunk": "@@ -161,14 +163,32 @@ public void setupAppend(SetupAppend setupAppend) {\n                 .whenComplete((attributes, u) -> {\n                     try {\n                         if (u != null) {\n+                            if (u instanceof StreamSegmentSealedException) {\n+                                throw u;\n+                            }\n                             handleException(writer, setupAppend.getRequestId(), newSegment, \"setting up append\", u);\n                         } else {\n+                            SegmentProperties sp = this.store.getStreamSegmentInfo(newSegment, TIMEOUT).join();\n+                            if (sp.isSealed()) {\n+                                throw new StreamSegmentSealedException(newSegment);\n+                            }\n                             long eventNumber = attributes.getOrDefault(writer, Attributes.NULL_ATTRIBUTE_VALUE);\n                             this.writerStates.putIfAbsent(Pair.of(newSegment, writer), new WriterState(eventNumber));\n                             connection.send(new AppendSetup(setupAppend.getRequestId(), newSegment, writer, eventNumber));\n                         }\n                     } catch (Throwable e) {\n-                        handleException(writer, setupAppend.getRequestId(), newSegment, \"handling setupAppend result\", e);\n+                        if (e instanceof StreamSegmentSealedException || e.getCause() instanceof StreamSegmentSealedException) {\n+                            log.info(\"Segment '{}' is sealed and {} cannot perform append, disabling caching of attribute value...\", newSegment, writer);\n+                            Map<UUID, Long> newAttributes = store.getAttributes(newSegment, Collections.singleton(writer), false, TIMEOUT).join();\n+                            long eventNumber = Attributes.NULL_ATTRIBUTE_VALUE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "033902e3ea9d2dba29d2607400b150674237d82c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY3NDcxMw==", "bodyText": "Yes Andrei.", "url": "https://github.com/pravega/pravega/pull/5061#discussion_r470674713", "createdAt": "2020-08-14T14:53:11Z", "author": {"login": "ravibeta"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "diffHunk": "@@ -161,14 +163,32 @@ public void setupAppend(SetupAppend setupAppend) {\n                 .whenComplete((attributes, u) -> {\n                     try {\n                         if (u != null) {\n+                            if (u instanceof StreamSegmentSealedException) {\n+                                throw u;\n+                            }\n                             handleException(writer, setupAppend.getRequestId(), newSegment, \"setting up append\", u);\n                         } else {\n+                            SegmentProperties sp = this.store.getStreamSegmentInfo(newSegment, TIMEOUT).join();\n+                            if (sp.isSealed()) {\n+                                throw new StreamSegmentSealedException(newSegment);\n+                            }\n                             long eventNumber = attributes.getOrDefault(writer, Attributes.NULL_ATTRIBUTE_VALUE);\n                             this.writerStates.putIfAbsent(Pair.of(newSegment, writer), new WriterState(eventNumber));\n                             connection.send(new AppendSetup(setupAppend.getRequestId(), newSegment, writer, eventNumber));\n                         }\n                     } catch (Throwable e) {\n-                        handleException(writer, setupAppend.getRequestId(), newSegment, \"handling setupAppend result\", e);\n+                        if (e instanceof StreamSegmentSealedException || e.getCause() instanceof StreamSegmentSealedException) {\n+                            log.info(\"Segment '{}' is sealed and {} cannot perform append, disabling caching of attribute value...\", newSegment, writer);\n+                            Map<UUID, Long> newAttributes = store.getAttributes(newSegment, Collections.singleton(writer), false, TIMEOUT).join();\n+                            long eventNumber = Attributes.NULL_ATTRIBUTE_VALUE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDY2MzkwMQ=="}, "originalCommit": {"oid": "033902e3ea9d2dba29d2607400b150674237d82c"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzgwNTgxOnYy", "diffSide": "RIGHT", "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjo0ODo0NFrOHBwqLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjo0ODo0NFrOHBwqLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYwNzg1NA==", "bodyText": "This looks good, however I want some way of logging that we are indeed running into some sealed segment. At the same time, I do not want to pollute the logs with useless messages. Looking through this class, it seems that a subsequent append via this connection-writer will stumble across a sealed segment which will take care of some logging and cleanup (OK - nothing to do there).\nI just took a look at the getAttributes call inside the Segment Store and it turns out we are not logging the cache argument. Would you mind editing line 933 in StreamSegmentContainer.java and add the cache parameter to that logRequest call please? That way we will be able to see the first and the second call in the logs with proper args.", "url": "https://github.com/pravega/pravega/pull/5061#discussion_r471607854", "createdAt": "2020-08-17T16:48:44Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/server/host/src/main/java/io/pravega/segmentstore/server/host/handler/AppendProcessor.java", "diffHunk": "@@ -157,20 +157,22 @@ public void setupAppend(SetupAppend setupAppend) {\n \n         // Get the last Event Number for this writer from the Store. This operation (cache=true) will automatically put\n         // the value in the Store's cache so it's faster to access later.\n-        store.getAttributes(newSegment, Collections.singleton(writer), true, TIMEOUT)\n-                .whenComplete((attributes, u) -> {\n-                    try {\n-                        if (u != null) {\n-                            handleException(writer, setupAppend.getRequestId(), newSegment, \"setting up append\", u);\n-                        } else {\n-                            long eventNumber = attributes.getOrDefault(writer, Attributes.NULL_ATTRIBUTE_VALUE);\n-                            this.writerStates.putIfAbsent(Pair.of(newSegment, writer), new WriterState(eventNumber));\n-                            connection.send(new AppendSetup(setupAppend.getRequestId(), newSegment, writer, eventNumber));\n-                        }\n-                    } catch (Throwable e) {\n-                        handleException(writer, setupAppend.getRequestId(), newSegment, \"handling setupAppend result\", e);\n-                    }\n-                });\n+        Futures.exceptionallyComposeExpecting(\n+                store.getAttributes(newSegment, Collections.singleton(writer), true, TIMEOUT),\n+                e -> e instanceof StreamSegmentSealedException, () -> store.getAttributes(newSegment, Collections.singleton(writer), false, TIMEOUT))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85bb2352ad4e154524658b6ff13eedc6f7a26995"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4868, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}