{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzM2ODg5", "number": 4798, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDo0OTowMlrOD91YvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODoxMTozNlrOD-3bwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTY0NDEyOnYy", "diffSide": "RIGHT", "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/LogReader.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDo0OTowMlrOGXkMlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNzo0NjozMVrOGX_OvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM2MzQ3OQ==", "bodyText": "Why did you remove the try-catch here but not below (at 237)?", "url": "https://github.com/pravega/pravega/pull/4798#discussion_r427363479", "createdAt": "2020-05-19T14:49:02Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/LogReader.java", "diffHunk": "@@ -75,12 +77,7 @@\n     public void close() {\n         if (!this.closed.getAndSet(true)) {\n             if (this.currentLedger != null) {\n-                try {\n-                    Ledgers.close(this.currentLedger.handle);\n-                } catch (DurableDataLogException bkEx) {\n-                    log.error(\"Unable to close LedgerHandle for Ledger {}.\", this.currentLedger.handle.getId(), bkEx);\n-                }\n-\n+                this.currentLedger.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d045a0aebca1c25b7d1dcbeb360ba6349f597bd0"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgwNjM5Ng==", "bodyText": "@andreipaduroiu\nbecause at line 237 we have\nLedgers.close(xxx)\nthat may throw an exception, and it is actually not possible that it happens\nhere we are using currentLedger.close(); (LogReader#close)) that calls exactly the code at line 237, and there is not need to add a catch clause.", "url": "https://github.com/pravega/pravega/pull/4798#discussion_r427806396", "createdAt": "2020-05-20T07:46:31Z", "author": {"login": "eolivelli"}, "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/LogReader.java", "diffHunk": "@@ -75,12 +77,7 @@\n     public void close() {\n         if (!this.closed.getAndSet(true)) {\n             if (this.currentLedger != null) {\n-                try {\n-                    Ledgers.close(this.currentLedger.handle);\n-                } catch (DurableDataLogException bkEx) {\n-                    log.error(\"Unable to close LedgerHandle for Ledger {}.\", this.currentLedger.handle.getId(), bkEx);\n-                }\n-\n+                this.currentLedger.close();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM2MzQ3OQ=="}, "originalCommit": {"oid": "d045a0aebca1c25b7d1dcbeb360ba6349f597bd0"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjM4ODgwOnYy", "diffSide": "RIGHT", "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/DebugLogWrapper.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwNzo0NDowNFrOGZNxYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxMjozNDoyOFrOGZpLmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5MzIxNg==", "bodyText": "I see that codecov is complaining about not all code paths here being exercised. I see a couple of options:\n1- Craft a set of candidate ledgers that force all paths here be exercised via reconcileLedgers.\n2- Increase the visibility of this method and test it in isolation by passing different handles.\n@andreipaduroiu what do you think?", "url": "https://github.com/pravega/pravega/pull/4798#discussion_r429093216", "createdAt": "2020-05-22T07:44:04Z", "author": {"login": "fpj"}, "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/DebugLogWrapper.java", "diffHunk": "@@ -243,6 +230,18 @@ public boolean reconcileLedgers(List<LedgerHandle> candidateLedgers) throws Dura\n \n         return changed;\n     }\n+    \n+    private static long getHandleLength(Handle handle) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEwODM4OA==", "bodyText": "it is because in theory this method can be called with a ReadHandle in a test, but actually it isn't\nI feel it is safe to leave this form.\nI will send a patch to BK in order to have getLength() available on Handle class, but it will happen on 4.11.0 since it is a public API  change", "url": "https://github.com/pravega/pravega/pull/4798#discussion_r429108388", "createdAt": "2020-05-22T08:17:56Z", "author": {"login": "eolivelli"}, "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/DebugLogWrapper.java", "diffHunk": "@@ -243,6 +230,18 @@ public boolean reconcileLedgers(List<LedgerHandle> candidateLedgers) throws Dura\n \n         return changed;\n     }\n+    \n+    private static long getHandleLength(Handle handle) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5MzIxNg=="}, "originalCommit": null, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU0MDQ2Nw==", "bodyText": "I have double checked and WriteHandle is a subclass of ReadHandle. So code can be simpler", "url": "https://github.com/pravega/pravega/pull/4798#discussion_r429540467", "createdAt": "2020-05-23T12:10:25Z", "author": {"login": "eolivelli"}, "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/DebugLogWrapper.java", "diffHunk": "@@ -243,6 +230,18 @@ public boolean reconcileLedgers(List<LedgerHandle> candidateLedgers) throws Dura\n \n         return changed;\n     }\n+    \n+    private static long getHandleLength(Handle handle) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5MzIxNg=="}, "originalCommit": null, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU0MjI5Ng==", "bodyText": "Basically I have dropped this method", "url": "https://github.com/pravega/pravega/pull/4798#discussion_r429542296", "createdAt": "2020-05-23T12:34:28Z", "author": {"login": "eolivelli"}, "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/DebugLogWrapper.java", "diffHunk": "@@ -243,6 +230,18 @@ public boolean reconcileLedgers(List<LedgerHandle> candidateLedgers) throws Dura\n \n         return changed;\n     }\n+    \n+    private static long getHandleLength(Handle handle) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTA5MzIxNg=="}, "originalCommit": null, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3MjQ2NTI5OnYy", "diffSide": "RIGHT", "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/Ledgers.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODoxMTozNlrOGZOhdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxMjoxMDozM1rOGZpEgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEwNTUyNw==", "bodyText": "According to codecov, this path is not being exercised. Could we test this handler directly to exercise all code paths?", "url": "https://github.com/pravega/pravega/pull/4798#discussion_r429105527", "createdAt": "2020-05-22T08:11:36Z", "author": {"login": "fpj"}, "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/Ledgers.java", "diffHunk": "@@ -35,13 +41,27 @@\n     static final String PROPERTY_VALUE_APPLICATION = \"Pravega\";\n     static final String PROPERTY_LOG_ID = \"BookKeeperLogId\";\n     static final int NO_LOG_ID = -1;\n-    static final long NO_LEDGER_ID = LedgerHandle.INVALID_LEDGER_ID;\n-    static final long NO_ENTRY_ID = LedgerHandle.INVALID_ENTRY_ID;\n+    static final long NO_LEDGER_ID = -1; // LedgerHandle.INVALID_LEDGER_ID\n+    static final long NO_ENTRY_ID = -1; // LedgerHandle.INVALID_ENTRY_ID\n     /**\n      * How many ledgers to fence out (from the end of the list) when acquiring lock.\n      */\n     static final int MIN_FENCE_LEDGER_COUNT = 2;\n \n+    /**\n+     * Converts exceptions to BKException. Fallback to BKUnexpectedConditionException\n+     * for non BookKeeper exceptions.\n+     */\n+    private static final Function<Throwable, BKException> BK_EXCEPTION_HANDLER = cause -> {\n+        if (cause instanceof BKException) {\n+            return (BKException) cause;\n+        } else {\n+            BKUnexpectedConditionException wrapper = new BKUnexpectedConditionException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEwODYyMg==", "bodyText": "sure, will do", "url": "https://github.com/pravega/pravega/pull/4798#discussion_r429108622", "createdAt": "2020-05-22T08:18:31Z", "author": {"login": "eolivelli"}, "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/Ledgers.java", "diffHunk": "@@ -35,13 +41,27 @@\n     static final String PROPERTY_VALUE_APPLICATION = \"Pravega\";\n     static final String PROPERTY_LOG_ID = \"BookKeeperLogId\";\n     static final int NO_LOG_ID = -1;\n-    static final long NO_LEDGER_ID = LedgerHandle.INVALID_LEDGER_ID;\n-    static final long NO_ENTRY_ID = LedgerHandle.INVALID_ENTRY_ID;\n+    static final long NO_LEDGER_ID = -1; // LedgerHandle.INVALID_LEDGER_ID\n+    static final long NO_ENTRY_ID = -1; // LedgerHandle.INVALID_ENTRY_ID\n     /**\n      * How many ledgers to fence out (from the end of the list) when acquiring lock.\n      */\n     static final int MIN_FENCE_LEDGER_COUNT = 2;\n \n+    /**\n+     * Converts exceptions to BKException. Fallback to BKUnexpectedConditionException\n+     * for non BookKeeper exceptions.\n+     */\n+    private static final Function<Throwable, BKException> BK_EXCEPTION_HANDLER = cause -> {\n+        if (cause instanceof BKException) {\n+            return (BKException) cause;\n+        } else {\n+            BKUnexpectedConditionException wrapper = new BKUnexpectedConditionException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEwNTUyNw=="}, "originalCommit": null, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU0MDQ4Mw==", "bodyText": "done", "url": "https://github.com/pravega/pravega/pull/4798#discussion_r429540483", "createdAt": "2020-05-23T12:10:33Z", "author": {"login": "eolivelli"}, "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/Ledgers.java", "diffHunk": "@@ -35,13 +41,27 @@\n     static final String PROPERTY_VALUE_APPLICATION = \"Pravega\";\n     static final String PROPERTY_LOG_ID = \"BookKeeperLogId\";\n     static final int NO_LOG_ID = -1;\n-    static final long NO_LEDGER_ID = LedgerHandle.INVALID_LEDGER_ID;\n-    static final long NO_ENTRY_ID = LedgerHandle.INVALID_ENTRY_ID;\n+    static final long NO_LEDGER_ID = -1; // LedgerHandle.INVALID_LEDGER_ID\n+    static final long NO_ENTRY_ID = -1; // LedgerHandle.INVALID_ENTRY_ID\n     /**\n      * How many ledgers to fence out (from the end of the list) when acquiring lock.\n      */\n     static final int MIN_FENCE_LEDGER_COUNT = 2;\n \n+    /**\n+     * Converts exceptions to BKException. Fallback to BKUnexpectedConditionException\n+     * for non BookKeeper exceptions.\n+     */\n+    private static final Function<Throwable, BKException> BK_EXCEPTION_HANDLER = cause -> {\n+        if (cause instanceof BKException) {\n+            return (BKException) cause;\n+        } else {\n+            BKUnexpectedConditionException wrapper = new BKUnexpectedConditionException();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEwNTUyNw=="}, "originalCommit": null, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4342, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}