{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MDIwODUz", "number": 4510, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOToyODozM1rODZ8xNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMzo1MzowNlrODaBAUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTM2NjMwOnYy", "diffSide": "RIGHT", "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOToyODozM1rOFgoQQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTo0NDoyMVrOFgouEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1ODI3Mg==", "bodyText": "elapsed.toMillis. Otherwise this will print out some weird string.\nExtra space between \"Read\" and \"segment\"", "url": "https://github.com/pravega/pravega/pull/4510#discussion_r369758272", "createdAt": "2020-01-22T19:28:33Z", "author": {"login": "andreipaduroiu"}, "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "diffHunk": "@@ -228,6 +231,13 @@ private int doRead(SegmentHandle handle, long offset, byte[] buffer, int bufferO\n \n             int bytesRead = StreamHelpers.readAll(reader, buffer, bufferOffset, length);\n \n+            Duration elapsed = timer.getElapsed();\n+\n+            ExtendedS3Metrics.READ_LATENCY.reportSuccessEvent(elapsed);\n+            ExtendedS3Metrics.READ_BYTES.add(length);\n+\n+            log.debug(\"Read  segment={} offset={} bytesWritten={} latency={}.\", handle.getSegmentName(), offset, length, elapsed);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff59f435665d870d24aab3c69237e59bcffc1166"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2NTkwNA==", "bodyText": "Good catch. Thanks.\nFixed.", "url": "https://github.com/pravega/pravega/pull/4510#discussion_r369765904", "createdAt": "2020-01-22T19:44:21Z", "author": {"login": "sachin-j-joshi"}, "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "diffHunk": "@@ -228,6 +231,13 @@ private int doRead(SegmentHandle handle, long offset, byte[] buffer, int bufferO\n \n             int bytesRead = StreamHelpers.readAll(reader, buffer, bufferOffset, length);\n \n+            Duration elapsed = timer.getElapsed();\n+\n+            ExtendedS3Metrics.READ_LATENCY.reportSuccessEvent(elapsed);\n+            ExtendedS3Metrics.READ_BYTES.add(length);\n+\n+            log.debug(\"Read  segment={} offset={} bytesWritten={} latency={}.\", handle.getSegmentName(), offset, length, elapsed);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1ODI3Mg=="}, "originalCommit": {"oid": "ff59f435665d870d24aab3c69237e59bcffc1166"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTM2NzY0OnYy", "diffSide": "RIGHT", "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOToyOTowMFrOFgoRLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTo0NDo0MlrOFgourQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1ODUxMQ==", "bodyText": "here too\nPlus you are missing an arg for the segment.", "url": "https://github.com/pravega/pravega/pull/4510#discussion_r369758511", "createdAt": "2020-01-22T19:29:00Z", "author": {"login": "andreipaduroiu"}, "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "diffHunk": "@@ -310,13 +322,20 @@ private SegmentHandle doCreate(String streamSegmentName) throws StreamSegmentExi\n         }\n         client.putObject(request);\n \n+        Duration elapsed = timer.getElapsed();\n+\n+        ExtendedS3Metrics.CREATE_LATENCY.reportSuccessEvent(elapsed);\n+        ExtendedS3Metrics.CREATE_COUNT.inc();\n+\n+        log.debug(\"Create  segment={} latency={}.\", elapsed);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff59f435665d870d24aab3c69237e59bcffc1166"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2NjA2MQ==", "bodyText": "Good catch. Thanks.\nFixed.", "url": "https://github.com/pravega/pravega/pull/4510#discussion_r369766061", "createdAt": "2020-01-22T19:44:42Z", "author": {"login": "sachin-j-joshi"}, "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "diffHunk": "@@ -310,13 +322,20 @@ private SegmentHandle doCreate(String streamSegmentName) throws StreamSegmentExi\n         }\n         client.putObject(request);\n \n+        Duration elapsed = timer.getElapsed();\n+\n+        ExtendedS3Metrics.CREATE_LATENCY.reportSuccessEvent(elapsed);\n+        ExtendedS3Metrics.CREATE_COUNT.inc();\n+\n+        log.debug(\"Create  segment={} latency={}.\", elapsed);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1ODUxMQ=="}, "originalCommit": {"oid": "ff59f435665d870d24aab3c69237e59bcffc1166"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTM2ODI1OnYy", "diffSide": "RIGHT", "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOToyOToxNFrOFgoRmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTo0NDozNlrOFgoufQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1ODYxOA==", "bodyText": "and here", "url": "https://github.com/pravega/pravega/pull/4510#discussion_r369758618", "createdAt": "2020-01-22T19:29:14Z", "author": {"login": "andreipaduroiu"}, "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "diffHunk": "@@ -331,6 +350,14 @@ private Void doWrite(SegmentHandle handle, long offset, InputStream data, int le\n \n         client.putObject(this.config.getBucket(), this.config.getRoot() + handle.getSegmentName(),\n                 Range.fromOffsetLength(offset, length), data);\n+\n+        Duration elapsed = timer.getElapsed();\n+\n+        ExtendedS3Metrics.WRITE_LATENCY.reportSuccessEvent(elapsed);\n+        ExtendedS3Metrics.WRITE_BYTES.add(length);\n+\n+        log.debug(\"Write  segment={} offset={} bytesWritten={} latency={}.\", handle.getSegmentName(), offset, length, elapsed);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff59f435665d870d24aab3c69237e59bcffc1166"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2NjAxMw==", "bodyText": "Fixed.", "url": "https://github.com/pravega/pravega/pull/4510#discussion_r369766013", "createdAt": "2020-01-22T19:44:36Z", "author": {"login": "sachin-j-joshi"}, "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "diffHunk": "@@ -331,6 +350,14 @@ private Void doWrite(SegmentHandle handle, long offset, InputStream data, int le\n \n         client.putObject(this.config.getBucket(), this.config.getRoot() + handle.getSegmentName(),\n                 Range.fromOffsetLength(offset, length), data);\n+\n+        Duration elapsed = timer.getElapsed();\n+\n+        ExtendedS3Metrics.WRITE_LATENCY.reportSuccessEvent(elapsed);\n+        ExtendedS3Metrics.WRITE_BYTES.add(length);\n+\n+        log.debug(\"Write  segment={} offset={} bytesWritten={} latency={}.\", handle.getSegmentName(), offset, length, elapsed);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1ODYxOA=="}, "originalCommit": {"oid": "ff59f435665d870d24aab3c69237e59bcffc1166"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTM2ODY4OnYy", "diffSide": "RIGHT", "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOToyOToyM1rOFgoR5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTo0NTo0OVrOFgowpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1ODY5Mg==", "bodyText": "here too", "url": "https://github.com/pravega/pravega/pull/4510#discussion_r369758692", "createdAt": "2020-01-22T19:29:23Z", "author": {"login": "andreipaduroiu"}, "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "diffHunk": "@@ -416,13 +443,31 @@ private Void doConcat(SegmentHandle targetHandle, long offset, String sourceSegm\n                 targetPath, uploadId).withParts(partEtags));\n \n         client.deleteObject(config.getBucket(), config.getRoot() + sourceSegment);\n+        Duration elapsed = timer.getElapsed();\n+\n+        log.debug(\"Concat  target={} source={} offset={} bytesWritten={} latency={}.\", targetHandle.getSegmentName(), sourceSegment, offset, si.getLength(), elapsed);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff59f435665d870d24aab3c69237e59bcffc1166"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2NjU2Ng==", "bodyText": "fixed", "url": "https://github.com/pravega/pravega/pull/4510#discussion_r369766566", "createdAt": "2020-01-22T19:45:49Z", "author": {"login": "sachin-j-joshi"}, "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "diffHunk": "@@ -416,13 +443,31 @@ private Void doConcat(SegmentHandle targetHandle, long offset, String sourceSegm\n                 targetPath, uploadId).withParts(partEtags));\n \n         client.deleteObject(config.getBucket(), config.getRoot() + sourceSegment);\n+        Duration elapsed = timer.getElapsed();\n+\n+        log.debug(\"Concat  target={} source={} offset={} bytesWritten={} latency={}.\", targetHandle.getSegmentName(), sourceSegment, offset, si.getLength(), elapsed);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1ODY5Mg=="}, "originalCommit": {"oid": "ff59f435665d870d24aab3c69237e59bcffc1166"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NTM3MDI1OnYy", "diffSide": "RIGHT", "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOToyOTo1M1rOFgoS4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxOTo0NjowMVrOFgow_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1ODk0Nw==", "bodyText": "here too\n\nadd segment name.", "url": "https://github.com/pravega/pravega/pull/4510#discussion_r369758947", "createdAt": "2020-01-22T19:29:53Z", "author": {"login": "andreipaduroiu"}, "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "diffHunk": "@@ -416,13 +443,31 @@ private Void doConcat(SegmentHandle targetHandle, long offset, String sourceSegm\n                 targetPath, uploadId).withParts(partEtags));\n \n         client.deleteObject(config.getBucket(), config.getRoot() + sourceSegment);\n+        Duration elapsed = timer.getElapsed();\n+\n+        log.debug(\"Concat  target={} source={} offset={} bytesWritten={} latency={}.\", targetHandle.getSegmentName(), sourceSegment, offset, si.getLength(), elapsed);\n+\n+        ExtendedS3Metrics.CONCAT_LATENCY.reportSuccessEvent(elapsed);\n+        ExtendedS3Metrics.CONCAT_BYTES.add(si.getLength());\n+        ExtendedS3Metrics.CONCAT_COUNT.inc();\n+\n         LoggerHelpers.traceLeave(log, \"concat\", traceId);\n \n         return null;\n     }\n \n     private Void doDelete(SegmentHandle handle) {\n+        long traceId = LoggerHelpers.traceEnter(log, \"delete\", handle.getSegmentName());\n+        Timer timer = new Timer();\n         client.deleteObject(config.getBucket(), config.getRoot() + handle.getSegmentName());\n+        Duration elapsed = timer.getElapsed();\n+\n+        ExtendedS3Metrics.DELETE_LATENCY.reportSuccessEvent(elapsed);\n+        ExtendedS3Metrics.DELETE_COUNT.inc();\n+\n+        log.debug(\"Delete  segment={} latency={}.\", elapsed);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff59f435665d870d24aab3c69237e59bcffc1166"}, "originalPosition": 119}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc2NjY1Mg==", "bodyText": "fixed.", "url": "https://github.com/pravega/pravega/pull/4510#discussion_r369766652", "createdAt": "2020-01-22T19:46:01Z", "author": {"login": "sachin-j-joshi"}, "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Storage.java", "diffHunk": "@@ -416,13 +443,31 @@ private Void doConcat(SegmentHandle targetHandle, long offset, String sourceSegm\n                 targetPath, uploadId).withParts(partEtags));\n \n         client.deleteObject(config.getBucket(), config.getRoot() + sourceSegment);\n+        Duration elapsed = timer.getElapsed();\n+\n+        log.debug(\"Concat  target={} source={} offset={} bytesWritten={} latency={}.\", targetHandle.getSegmentName(), sourceSegment, offset, si.getLength(), elapsed);\n+\n+        ExtendedS3Metrics.CONCAT_LATENCY.reportSuccessEvent(elapsed);\n+        ExtendedS3Metrics.CONCAT_BYTES.add(si.getLength());\n+        ExtendedS3Metrics.CONCAT_COUNT.inc();\n+\n         LoggerHelpers.traceLeave(log, \"concat\", traceId);\n \n         return null;\n     }\n \n     private Void doDelete(SegmentHandle handle) {\n+        long traceId = LoggerHelpers.traceEnter(log, \"delete\", handle.getSegmentName());\n+        Timer timer = new Timer();\n         client.deleteObject(config.getBucket(), config.getRoot() + handle.getSegmentName());\n+        Duration elapsed = timer.getElapsed();\n+\n+        ExtendedS3Metrics.DELETE_LATENCY.reportSuccessEvent(elapsed);\n+        ExtendedS3Metrics.DELETE_COUNT.inc();\n+\n+        log.debug(\"Delete  segment={} latency={}.\", elapsed);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTc1ODk0Nw=="}, "originalCommit": {"oid": "ff59f435665d870d24aab3c69237e59bcffc1166"}, "originalPosition": 119}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4NjA2MDM1OnYy", "diffSide": "RIGHT", "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Metrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMzo1MzowNlrOFgvAjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQyMzo1MzowNlrOFgvAjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTg2ODk0MQ==", "bodyText": "Pleas do not name this ECS? This is for \"Extended S3\"", "url": "https://github.com/pravega/pravega/pull/4510#discussion_r369868941", "createdAt": "2020-01-22T23:53:06Z", "author": {"login": "andreipaduroiu"}, "path": "bindings/src/main/java/io/pravega/storage/extendeds3/ExtendedS3Metrics.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/**\n+ * Copyright (c) Dell Inc., or its subsidiaries. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package io.pravega.storage.extendeds3;\n+\n+import io.pravega.shared.MetricsNames;\n+import io.pravega.shared.metrics.Counter;\n+import io.pravega.shared.metrics.MetricsProvider;\n+import io.pravega.shared.metrics.OpStatsLogger;\n+import io.pravega.shared.metrics.StatsLogger;\n+\n+/**\n+ * Defines all Metrics used by the ExtendedS3Storage class.\n+ */\n+final class ExtendedS3Metrics {\n+    private static final StatsLogger ECS_LOGGER = MetricsProvider.createStatsLogger(\"ecs\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2eaa3b70efbaf8fe4f409d24c17b1dd1c3e475c"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4403, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}