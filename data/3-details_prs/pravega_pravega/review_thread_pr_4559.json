{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NDk5MzA2", "number": 4559, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMToxMzo1NlrODfVaWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyMzozMVrODfqzyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MTgzMjU5OnYy", "diffSide": "RIGHT", "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/BookKeeperConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMToxMzo1NlrOFo-w9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMjoxODoxNlrOFpAl6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxNTcwMw==", "bodyText": "Instead of using this string, can we use BookKeeper.DigestType.CRC32C.name()?", "url": "https://github.com/pravega/pravega/pull/4559#discussion_r378515703", "createdAt": "2020-02-12T21:13:56Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/BookKeeperConfig.java", "diffHunk": "@@ -48,6 +49,7 @@\n     public static final Property<Integer> BK_MIN_NUM_RACKS_PER_WRITE_QUORUM = Property.named(\"minNumRacksPerWriteQuorum\", 2);\n     public static final Property<String> BK_NETWORK_TOPOLOGY_SCRIPT_FILE_NAME = Property.named(\"networkTopologyScriptFileName\",\n             \"/opt/pravega/scripts/sample-bookkeeper-topology.sh\");\n+    public static final Property<String> BK_DIGEST_TYPE = Property.named(\"digestType\", \"CRC32C\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d913652be24c82928a126609eda97194f4a3988"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU0NTY0Mg==", "bodyText": "Done.", "url": "https://github.com/pravega/pravega/pull/4559#discussion_r378545642", "createdAt": "2020-02-12T22:18:16Z", "author": {"login": "RaulGracia"}, "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/BookKeeperConfig.java", "diffHunk": "@@ -48,6 +49,7 @@\n     public static final Property<Integer> BK_MIN_NUM_RACKS_PER_WRITE_QUORUM = Property.named(\"minNumRacksPerWriteQuorum\", 2);\n     public static final Property<String> BK_NETWORK_TOPOLOGY_SCRIPT_FILE_NAME = Property.named(\"networkTopologyScriptFileName\",\n             \"/opt/pravega/scripts/sample-bookkeeper-topology.sh\");\n+    public static final Property<String> BK_DIGEST_TYPE = Property.named(\"digestType\", \"CRC32C\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUxNTcwMw=="}, "originalCommit": {"oid": "0d913652be24c82928a126609eda97194f4a3988"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTMzODM1OnYy", "diffSide": "RIGHT", "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/Ledgers.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyMzozMVrOFpghdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxOToyMzozMVrOFpghdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTA2ODc5MQ==", "bodyText": "I suggest to enable digestTypeAutodetection so you don't  need to care about it on the reader side and your code will be compatible with rolling upgrades", "url": "https://github.com/pravega/pravega/pull/4559#discussion_r379068791", "createdAt": "2020-02-13T19:23:31Z", "author": {"login": "eolivelli"}, "path": "segmentstore/storage/impl/src/main/java/io/pravega/segmentstore/storage/impl/bookkeeper/Ledgers.java", "diffHunk": "@@ -88,7 +88,7 @@ static LedgerHandle openFence(long ledgerId, BookKeeper bookKeeper, BookKeeperCo\n     static LedgerHandle openRead(long ledgerId, BookKeeper bookKeeper, BookKeeperConfig config) throws DurableDataLogException {\n         try {\n             return Exceptions.handleInterruptedCall(\n-                    () -> bookKeeper.openLedgerNoRecovery(ledgerId, LEDGER_DIGEST_TYPE, config.getBKPassword()));\n+                    () -> bookKeeper.openLedgerNoRecovery(ledgerId, config.getDigestType(), config.getBKPassword()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8230bb469e970d83319d9999b2448c7ea26add3"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4424, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}