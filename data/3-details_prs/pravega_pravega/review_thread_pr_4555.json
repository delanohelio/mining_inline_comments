{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMTI1OTI0", "number": 4555, "reviewThreads": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxNDoxMVrODecqgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTowMzo0NFrODe1n_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjUzNTA2OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxNDoxMVrOFnliZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwMzo1MToxN1rOFn86Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1Mzc5Ng==", "bodyText": "io.pravega.segmentstore.server.host.handler.AppendProcessor javadoc refers to AppendProcessorBuilder generated using lombok. So we need to delombok before javadoc step.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377053796", "createdAt": "2020-02-10T13:14:11Z", "author": {"login": "bibinss"}, "path": "build.gradle", "diffHunk": "@@ -445,6 +445,13 @@ project('segmentstore:server:host') {\n     applicationDistribution.into(\"bin\") {\n         from(createAppWithGCLogging)\n     }\n+\n+    javadoc {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzNjcxOA==", "bodyText": "Sounds good.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377436718", "createdAt": "2020-02-11T03:51:17Z", "author": {"login": "ravisharda"}, "path": "build.gradle", "diffHunk": "@@ -445,6 +445,13 @@ project('segmentstore:server:host') {\n     applicationDistribution.into(\"bin\") {\n         from(createAppWithGCLogging)\n     }\n+\n+    javadoc {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1Mzc5Ng=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjUzNjI4OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/admin/ReaderGroupManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxNDozM1rOFnljGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxNDozM1rOFnljGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1Mzk3OA==", "bodyText": "ClientFactory is no more present in the codebase", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377053978", "createdAt": "2020-02-10T13:14:33Z", "author": {"login": "bibinss"}, "path": "client/src/main/java/io/pravega/client/admin/ReaderGroupManager.java", "diffHunk": "@@ -49,7 +49,7 @@ public static ReaderGroupManager withScope(String scope, ClientConfig clientConf\n      * Creates a new ReaderGroup.\n      *\n      * Readers will be able to join the group by calling\n-     * {@link ClientFactory#createReader(String, String, Serializer, ReaderConfig)}\n+     * {@link io.pravega.client.EventStreamClientFactory#createReader(String, String, Serializer, ReaderConfig)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjUzNzE1OnYy", "diffSide": "LEFT", "path": "client/src/main/java/io/pravega/client/admin/impl/StreamManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxNDo1MFrOFnljmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxNDo1MFrOFnljmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1NDEwNw==", "bodyText": "BatchClient is already removed", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377054107", "createdAt": "2020-02-10T13:14:50Z", "author": {"login": "bibinss"}, "path": "client/src/main/java/io/pravega/client/admin/impl/StreamManagerImpl.java", "diffHunk": "@@ -138,13 +138,11 @@ public StreamInfo getStreamInfo(String scopeName, String streamName) {\n \n     /**\n      * Fetch the {@link StreamInfo} for a given stream.\n-     * Note: The access level of this method can be reduced once the deprecated method\n-     * {@link io.pravega.client.batch.BatchClient#getStreamInfo(Stream)} is removed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjU0NDg3OnYy", "diffSide": "RIGHT", "path": "shared/authplugin/src/main/java/io/pravega/auth/AuthHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxNzoxMVrOFnloMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDo0NDozM1rOFn9YCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1NTI4MA==", "bodyText": "PasswordAuthHandler is part of the controller module. shared/authplugin doesn't have a dependency on controller module, so javadoc can't refer to PasswordAuthHandler. So I have used @code tag here instead of @link.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377055280", "createdAt": "2020-02-10T13:17:11Z", "author": {"login": "bibinss"}, "path": "shared/authplugin/src/main/java/io/pravega/auth/AuthHandler.java", "diffHunk": "@@ -14,7 +14,7 @@\n /**\n  * Custom authorization/authentication handlers implement this interface.\n  * The implementations are loaded from the classpath using `ServiceLoader` (https://docs.oracle.com/javase/7/docs/api/java/util/ServiceLoader.html)\n- * Pravega controller also implements this interface through {@link io.pravega.controller.server.rpc.auth.PasswordAuthHandler}.\n+ * Pravega controller also implements this interface through {@code io.pravega.controller.server.rpc.auth.PasswordAuthHandler}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0NDM2Mw==", "bodyText": "Sounds good.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377444363", "createdAt": "2020-02-11T04:44:33Z", "author": {"login": "ravisharda"}, "path": "shared/authplugin/src/main/java/io/pravega/auth/AuthHandler.java", "diffHunk": "@@ -14,7 +14,7 @@\n /**\n  * Custom authorization/authentication handlers implement this interface.\n  * The implementations are loaded from the classpath using `ServiceLoader` (https://docs.oracle.com/javase/7/docs/api/java/util/ServiceLoader.html)\n- * Pravega controller also implements this interface through {@link io.pravega.controller.server.rpc.auth.PasswordAuthHandler}.\n+ * Pravega controller also implements this interface through {@code io.pravega.controller.server.rpc.auth.PasswordAuthHandler}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1NTI4MA=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjU1Mjk4OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/tables/impl/TableSegment.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzoxOTozMVrOFnltDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo0NDoyNFrOFoETxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1NjUyNw==", "bodyText": "My understanding is that javadoc @link doesn't support method chaining. So to fix the issue, I have moved out #getVersion() from @link. Though not the right fix, I hope it is better than existing.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377056527", "createdAt": "2020-02-10T13:19:31Z", "author": {"login": "bibinss"}, "path": "client/src/main/java/io/pravega/client/tables/impl/TableSegment.java", "diffHunk": "@@ -37,7 +37,7 @@\n \n     /**\n      * Inserts or updates an existing Table Entry into this Table Segment.\n-     * @param entry The Entry to insert or update. If {@link TableEntry#getKey()#getVersion()} is null, this will perform\n+     * @param entry The Entry to insert or update. If {@link TableEntry#getKey()}#getVersion() is null, this will perform", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MjY2Mw==", "bodyText": "Sure, that looks better. Should we use something like {@link TableEntry#getKey()} {@link TableEntry#getVersion(...)} instead? I think that'd clarify even better. What do you say?", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377442663", "createdAt": "2020-02-11T04:32:56Z", "author": {"login": "ravisharda"}, "path": "client/src/main/java/io/pravega/client/tables/impl/TableSegment.java", "diffHunk": "@@ -37,7 +37,7 @@\n \n     /**\n      * Inserts or updates an existing Table Entry into this Table Segment.\n-     * @param entry The Entry to insert or update. If {@link TableEntry#getKey()#getVersion()} is null, this will perform\n+     * @param entry The Entry to insert or update. If {@link TableEntry#getKey()}#getVersion() is null, this will perform", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1NjUyNw=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU1Nzk1Nw==", "bodyText": "yeah.. that might be better. changed to {@link TableEntry#getKey()}{@link TableKey#getVersion()}", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377557957", "createdAt": "2020-02-11T10:44:24Z", "author": {"login": "bibinss"}, "path": "client/src/main/java/io/pravega/client/tables/impl/TableSegment.java", "diffHunk": "@@ -37,7 +37,7 @@\n \n     /**\n      * Inserts or updates an existing Table Entry into this Table Segment.\n-     * @param entry The Entry to insert or update. If {@link TableEntry#getKey()#getVersion()} is null, this will perform\n+     * @param entry The Entry to insert or update. If {@link TableEntry#getKey()}#getVersion() is null, this will perform", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA1NjUyNw=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDk4Nzc4OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/ReaderGroup.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDowODoxNVrOFn9EOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo0NTo1N1rOFoEWqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzOTI4OA==", "bodyText": "Exceeds max line length. Please wrap the line.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377439288", "createdAt": "2020-02-11T04:08:15Z", "author": {"login": "ravisharda"}, "path": "client/src/main/java/io/pravega/client/stream/ReaderGroup.java", "diffHunk": "@@ -22,7 +22,7 @@\n  * to only one reader.\n  *\n  * The readers in the group may change over time. Readers are added to the group by calling\n- * {@link ClientFactory#createReader(String, String, Serializer, ReaderConfig)} and are removed by\n+ * {@link io.pravega.client.EventStreamClientFactory#createReader(String, String, Serializer, ReaderConfig)} and are removed by", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU1ODY5OA==", "bodyText": "done", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377558698", "createdAt": "2020-02-11T10:45:57Z", "author": {"login": "bibinss"}, "path": "client/src/main/java/io/pravega/client/stream/ReaderGroup.java", "diffHunk": "@@ -22,7 +22,7 @@\n  * to only one reader.\n  *\n  * The readers in the group may change over time. Readers are added to the group by calling\n- * {@link ClientFactory#createReader(String, String, Serializer, ReaderConfig)} and are removed by\n+ * {@link io.pravega.client.EventStreamClientFactory#createReader(String, String, Serializer, ReaderConfig)} and are removed by", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzOTI4OA=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDk4OTIwOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/ReaderGroup.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDowOTozMlrOFn9E9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo0NjowM1rOFoEW8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzOTQ3OQ==", "bodyText": "Please wrap this line as it exceeds max length.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377439479", "createdAt": "2020-02-11T04:09:32Z", "author": {"login": "ravisharda"}, "path": "client/src/main/java/io/pravega/client/stream/ReaderGroup.java", "diffHunk": "@@ -83,7 +83,7 @@\n      * <p>- To reset a reader group to a given StreamCut use\n      * {@link ReaderGroupConfig.ReaderGroupConfigBuilder#startFromStreamCuts(Map)}.</p>\n      *\n-     * All existing readers will have to call {@link ClientFactory#createReader(String, String, Serializer, ReaderConfig)}.\n+     * All existing readers will have to call {@link io.pravega.client.EventStreamClientFactory#createReader(String, String, Serializer, ReaderConfig)}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU1ODc2OQ==", "bodyText": "done", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377558769", "createdAt": "2020-02-11T10:46:03Z", "author": {"login": "bibinss"}, "path": "client/src/main/java/io/pravega/client/stream/ReaderGroup.java", "diffHunk": "@@ -83,7 +83,7 @@\n      * <p>- To reset a reader group to a given StreamCut use\n      * {@link ReaderGroupConfig.ReaderGroupConfigBuilder#startFromStreamCuts(Map)}.</p>\n      *\n-     * All existing readers will have to call {@link ClientFactory#createReader(String, String, Serializer, ReaderConfig)}.\n+     * All existing readers will have to call {@link io.pravega.client.EventStreamClientFactory#createReader(String, String, Serializer, ReaderConfig)}.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzOTQ3OQ=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNDk4OTM4OnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/ReaderGroup.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDowOTo1NVrOFn9FHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo0NjoxM1rOFoEXSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzOTUxNw==", "bodyText": "This needs wrapping as well.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377439517", "createdAt": "2020-02-11T04:09:55Z", "author": {"login": "ravisharda"}, "path": "client/src/main/java/io/pravega/client/stream/ReaderGroup.java", "diffHunk": "@@ -106,7 +106,7 @@\n \n     /**\n      * Returns a set of readerIds for the readers that are considered to be online by the group.\n-     * i.e. {@link ClientFactory#createReader(String, String, Serializer, ReaderConfig)} was called but\n+     * i.e. {@link io.pravega.client.EventStreamClientFactory#createReader(String, String, Serializer, ReaderConfig)} was called but", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU1ODg1OQ==", "bodyText": "done", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377558859", "createdAt": "2020-02-11T10:46:13Z", "author": {"login": "bibinss"}, "path": "client/src/main/java/io/pravega/client/stream/ReaderGroup.java", "diffHunk": "@@ -106,7 +106,7 @@\n \n     /**\n      * Returns a set of readerIds for the readers that are considered to be online by the group.\n-     * i.e. {@link ClientFactory#createReader(String, String, Serializer, ReaderConfig)} was called but\n+     * i.e. {@link io.pravega.client.EventStreamClientFactory#createReader(String, String, Serializer, ReaderConfig)} was called but", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQzOTUxNw=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxMTIyOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/tables/impl/TableSegment.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDozMzoxMlrOFn9RjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo0Njo0M1rOFoEYVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MjcwMA==", "bodyText": "Same as earlier.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377442700", "createdAt": "2020-02-11T04:33:12Z", "author": {"login": "ravisharda"}, "path": "client/src/main/java/io/pravega/client/tables/impl/TableSegment.java", "diffHunk": "@@ -52,7 +52,7 @@\n      * Inserts new or updates existing Table Entries into this Table Segment.\n      *\n      * @param entries A Collection of entries to insert or update. If for at least one such entry,\n-     *                {@link TableEntry#getKey()#getVersion()} returns a non-null value, this will perform an atomic\n+     *                {@link TableEntry#getKey()}#getVersion() returns a non-null value, this will perform an atomic", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU1OTEyNA==", "bodyText": "changed to {@link TableEntry#getKey()}{@link TableKey#getVersion()}", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377559124", "createdAt": "2020-02-11T10:46:43Z", "author": {"login": "bibinss"}, "path": "client/src/main/java/io/pravega/client/tables/impl/TableSegment.java", "diffHunk": "@@ -52,7 +52,7 @@\n      * Inserts new or updates existing Table Entries into this Table Segment.\n      *\n      * @param entries A Collection of entries to insert or update. If for at least one such entry,\n-     *                {@link TableEntry#getKey()#getVersion()} returns a non-null value, this will perform an atomic\n+     *                {@link TableEntry#getKey()}#getVersion() returns a non-null value, this will perform an atomic", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MjcwMA=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxMjY3OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/io/serialization/RevisionDataOutput.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDozNDozNlrOFn9SVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo0NzoxNFrOFoEZSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MjkwMA==", "bodyText": "Please break the line here, as it exceeds max line length.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377442900", "createdAt": "2020-02-11T04:34:36Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/io/serialization/RevisionDataOutput.java", "diffHunk": "@@ -63,7 +63,7 @@\n     int UUID_BYTES = 2 * Long.BYTES;\n \n     /**\n-     * Gets a value indicating whether this instance of a RevisionDataOutput requires {@link #length) to be called prior to writing\n+     * Gets a value indicating whether this instance of a RevisionDataOutput requires {@link #length} to be called prior to writing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU1OTM2OA==", "bodyText": "done", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377559368", "createdAt": "2020-02-11T10:47:14Z", "author": {"login": "bibinss"}, "path": "common/src/main/java/io/pravega/common/io/serialization/RevisionDataOutput.java", "diffHunk": "@@ -63,7 +63,7 @@\n     int UUID_BYTES = 2 * Long.BYTES;\n \n     /**\n-     * Gets a value indicating whether this instance of a RevisionDataOutput requires {@link #length) to be called prior to writing\n+     * Gets a value indicating whether this instance of a RevisionDataOutput requires {@link #length} to be called prior to writing", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MjkwMA=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxMzc4OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDozNTo1MVrOFn9TEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo0NzozNFrOFoEZ-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MzA4OA==", "bodyText": "Please wrap the line.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377443088", "createdAt": "2020-02-11T04:35:51Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -52,8 +52,8 @@\n  * * Are incremental on top of the previous ones, can be added on the fly, and can be used to make format changes\n  * without breaking backward or forward compatibility.\n  * * Older code will read as many revisions as it knows about, so even if newer code encodes B revisions, older code that\n- * only knows about A < B revisions will only read the first A revisions, ignoring the rest. Similarly, newer code that\n- * knows about B revisions will be able to handle A < B revisions by reading as much as is available.\n+ * only knows about {@literal A < B} revisions will only read the first A revisions, ignoring the rest. Similarly, newer code that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU1OTU0Nw==", "bodyText": "done", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377559547", "createdAt": "2020-02-11T10:47:34Z", "author": {"login": "bibinss"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -52,8 +52,8 @@\n  * * Are incremental on top of the previous ones, can be added on the fly, and can be used to make format changes\n  * without breaking backward or forward compatibility.\n  * * Older code will read as many revisions as it knows about, so even if newer code encodes B revisions, older code that\n- * only knows about A < B revisions will only read the first A revisions, ignoring the rest. Similarly, newer code that\n- * knows about B revisions will be able to handle A < B revisions by reading as much as is available.\n+ * only knows about {@literal A < B} revisions will only read the first A revisions, ignoring the rest. Similarly, newer code that", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MzA4OA=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxNzM5OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDozOTozM1rOFn9VNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo0OToxNVrOFoEdLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MzYzNw==", "bodyText": "&lt; and &gt; might be more appropriate here instead of the literal tag in this case, as the text Segment is part of the signature like the rest of the string.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377443637", "createdAt": "2020-02-11T04:39:33Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -420,7 +420,7 @@ void deserializeContents(InputStream stream, ReaderType target) throws IOExcepti\n      * <code>\n      * class Segment { ... }\n      *\n-     * class SegmentSerializer extends VersionedSerializer.Direct<Segment> {\n+     * class SegmentSerializer extends VersionedSerializer.Direct{@literal <Segment>} {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU2MDM2NA==", "bodyText": "yeah I thought of that initially but felt that using &lt; and &gt; makes it less readable for the devs. For now, I replaced @literal with @code. does that make it better?", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377560364", "createdAt": "2020-02-11T10:49:15Z", "author": {"login": "bibinss"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -420,7 +420,7 @@ void deserializeContents(InputStream stream, ReaderType target) throws IOExcepti\n      * <code>\n      * class Segment { ... }\n      *\n-     * class SegmentSerializer extends VersionedSerializer.Direct<Segment> {\n+     * class SegmentSerializer extends VersionedSerializer.Direct{@literal <Segment>} {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MzYzNw=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxODA3OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDo0MDoyMFrOFn9VsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo0OTo0MVrOFoEeCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mzc2MA==", "bodyText": "Same comment as the last comment.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377443760", "createdAt": "2020-02-11T04:40:20Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -481,10 +481,10 @@ void deserializeContents(InputStream stream, ReaderType target) throws IOExcepti\n      *    private final Long lastUsed;\n      *\n      *    // Attribute class is immutable; it has a builder that helps create new instances (this can be generated with Lombok).\n-     *    static class AttributeBuilder implements ObjectBuilder<Attribute> { ... }\n+     *    static class AttributeBuilder implements ObjectBuilder{@literal <Attribute>} { ... }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU2MDU4Ng==", "bodyText": "replaced @literal with @code. does that make it better?", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377560586", "createdAt": "2020-02-11T10:49:41Z", "author": {"login": "bibinss"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -481,10 +481,10 @@ void deserializeContents(InputStream stream, ReaderType target) throws IOExcepti\n      *    private final Long lastUsed;\n      *\n      *    // Attribute class is immutable; it has a builder that helps create new instances (this can be generated with Lombok).\n-     *    static class AttributeBuilder implements ObjectBuilder<Attribute> { ... }\n+     *    static class AttributeBuilder implements ObjectBuilder{@literal <Attribute>} { ... }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mzc2MA=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxODE4OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDo0MDoyOFrOFn9VwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo0OTo0N1rOFoEeNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mzc3Nw==", "bodyText": "Same comment as the last comment.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377443777", "createdAt": "2020-02-11T04:40:28Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -481,10 +481,10 @@ void deserializeContents(InputStream stream, ReaderType target) throws IOExcepti\n      *    private final Long lastUsed;\n      *\n      *    // Attribute class is immutable; it has a builder that helps create new instances (this can be generated with Lombok).\n-     *    static class AttributeBuilder implements ObjectBuilder<Attribute> { ... }\n+     *    static class AttributeBuilder implements ObjectBuilder{@literal <Attribute>} { ... }\n      * }\n      *\n-     * class AttributeSerializer extends VersionedSerializer.WithBuilder<Attribute, Attribute.AttributeBuilder> {\n+     * class AttributeSerializer extends VersionedSerializer.WithBuilder{@literal <Attribute, Attribute.AttributeBuilder>} {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU2MDYzMA==", "bodyText": "replaced @literal with @code. does that make it better?", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377560630", "createdAt": "2020-02-11T10:49:47Z", "author": {"login": "bibinss"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -481,10 +481,10 @@ void deserializeContents(InputStream stream, ReaderType target) throws IOExcepti\n      *    private final Long lastUsed;\n      *\n      *    // Attribute class is immutable; it has a builder that helps create new instances (this can be generated with Lombok).\n-     *    static class AttributeBuilder implements ObjectBuilder<Attribute> { ... }\n+     *    static class AttributeBuilder implements ObjectBuilder{@literal <Attribute>} { ... }\n      * }\n      *\n-     * class AttributeSerializer extends VersionedSerializer.WithBuilder<Attribute, Attribute.AttributeBuilder> {\n+     * class AttributeSerializer extends VersionedSerializer.WithBuilder{@literal <Attribute, Attribute.AttributeBuilder>} {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mzc3Nw=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxODI5OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDo0MDo0MFrOFn9V1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo0OTo1NVrOFoEecQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mzc5Nw==", "bodyText": "Same comment as the last comment.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377443797", "createdAt": "2020-02-11T04:40:40Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU2MDY4OQ==", "bodyText": "replaced @literal with @code. does that make it better?", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377560689", "createdAt": "2020-02-11T10:49:55Z", "author": {"login": "bibinss"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mzc5Nw=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxODM2OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDo0MDo0NFrOFn9V3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo1MDowNFrOFoEetQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MzgwNQ==", "bodyText": "Same comment as the last comment.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377443805", "createdAt": "2020-02-11T04:40:44Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }\n+     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder{@literal <SubType1, SubType1Builder>} { ... }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU2MDc1Nw==", "bodyText": "replaced @literal with @code. does that make it better?", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377560757", "createdAt": "2020-02-11T10:50:04Z", "author": {"login": "bibinss"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }\n+     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder{@literal <SubType1, SubType1Builder>} { ... }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MzgwNQ=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxODU5OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDo0MDo1M1rOFn9V-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo1MDoxMVrOFoEe5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MzgzNQ==", "bodyText": "Same comment as the last comment.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377443835", "createdAt": "2020-02-11T04:40:53Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }\n+     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder{@literal <SubType1, SubType1Builder>} { ... }\n      * }\n      *\n      * class SubType11 extends SubType1 {\n-     *     static class SubType11Builder implements ObjectBuilder<SubType11> { ... }\n-     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder<SubType11, SubType11Builder> { ... }\n+     *     static class SubType11Builder implements ObjectBuilder{@literal <SubType11>} { ... }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU2MDgwNw==", "bodyText": "replaced @literal with @code. does that make it better?", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377560807", "createdAt": "2020-02-11T10:50:11Z", "author": {"login": "bibinss"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }\n+     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder{@literal <SubType1, SubType1Builder>} { ... }\n      * }\n      *\n      * class SubType11 extends SubType1 {\n-     *     static class SubType11Builder implements ObjectBuilder<SubType11> { ... }\n-     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder<SubType11, SubType11Builder> { ... }\n+     *     static class SubType11Builder implements ObjectBuilder{@literal <SubType11>} { ... }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MzgzNQ=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxODgxOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDo0MTowMlrOFn9WGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo1MDoyMFrOFoEfPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mzg2Ng==", "bodyText": "Same comment as the last comment.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377443866", "createdAt": "2020-02-11T04:41:02Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }\n+     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder{@literal <SubType1, SubType1Builder>} { ... }\n      * }\n      *\n      * class SubType11 extends SubType1 {\n-     *     static class SubType11Builder implements ObjectBuilder<SubType11> { ... }\n-     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder<SubType11, SubType11Builder> { ... }\n+     *     static class SubType11Builder implements ObjectBuilder{@literal <SubType11>} { ... }\n+     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder{@literal <SubType11, SubType11Builder>} { ... }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU2MDg5Mw==", "bodyText": "replaced @literal with @code. does that make it better?", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377560893", "createdAt": "2020-02-11T10:50:20Z", "author": {"login": "bibinss"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }\n+     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder{@literal <SubType1, SubType1Builder>} { ... }\n      * }\n      *\n      * class SubType11 extends SubType1 {\n-     *     static class SubType11Builder implements ObjectBuilder<SubType11> { ... }\n-     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder<SubType11, SubType11Builder> { ... }\n+     *     static class SubType11Builder implements ObjectBuilder{@literal <SubType11>} { ... }\n+     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder{@literal <SubType11, SubType11Builder>} { ... }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mzg2Ng=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxODk2OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDo0MTowOVrOFn9WLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo1MDoyN1rOFoEfdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mzg4NA==", "bodyText": "Same comment as the last comment.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377443884", "createdAt": "2020-02-11T04:41:09Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }\n+     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder{@literal <SubType1, SubType1Builder>} { ... }\n      * }\n      *\n      * class SubType11 extends SubType1 {\n-     *     static class SubType11Builder implements ObjectBuilder<SubType11> { ... }\n-     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder<SubType11, SubType11Builder> { ... }\n+     *     static class SubType11Builder implements ObjectBuilder{@literal <SubType11>} { ... }\n+     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder{@literal <SubType11, SubType11Builder>} { ... }\n      * }\n      *\n      * class SubType2 extends BaseType {\n-     *     static class SubType2Builder implements ObjectBuilder<SubType2> { ... }\n-     *     static class SubType2Serializer extends VersionedSerializer.WithBuilder<SubType2, SubType2Builder> { ... }\n+     *     static class SubType2Builder implements ObjectBuilder{@literal <SubType2>} { ... }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU2MDk0OQ==", "bodyText": "replaced @literal with @code. does that make it better?", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377560949", "createdAt": "2020-02-11T10:50:27Z", "author": {"login": "bibinss"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }\n+     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder{@literal <SubType1, SubType1Builder>} { ... }\n      * }\n      *\n      * class SubType11 extends SubType1 {\n-     *     static class SubType11Builder implements ObjectBuilder<SubType11> { ... }\n-     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder<SubType11, SubType11Builder> { ... }\n+     *     static class SubType11Builder implements ObjectBuilder{@literal <SubType11>} { ... }\n+     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder{@literal <SubType11, SubType11Builder>} { ... }\n      * }\n      *\n      * class SubType2 extends BaseType {\n-     *     static class SubType2Builder implements ObjectBuilder<SubType2> { ... }\n-     *     static class SubType2Serializer extends VersionedSerializer.WithBuilder<SubType2, SubType2Builder> { ... }\n+     *     static class SubType2Builder implements ObjectBuilder{@literal <SubType2>} { ... }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mzg4NA=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxOTA0OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDo0MToxNFrOFn9WOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo1MDozNFrOFoEftw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mzg5Ng==", "bodyText": "Same comment as the last comment.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377443896", "createdAt": "2020-02-11T04:41:14Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }\n+     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder{@literal <SubType1, SubType1Builder>} { ... }\n      * }\n      *\n      * class SubType11 extends SubType1 {\n-     *     static class SubType11Builder implements ObjectBuilder<SubType11> { ... }\n-     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder<SubType11, SubType11Builder> { ... }\n+     *     static class SubType11Builder implements ObjectBuilder{@literal <SubType11>} { ... }\n+     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder{@literal <SubType11, SubType11Builder>} { ... }\n      * }\n      *\n      * class SubType2 extends BaseType {\n-     *     static class SubType2Builder implements ObjectBuilder<SubType2> { ... }\n-     *     static class SubType2Serializer extends VersionedSerializer.WithBuilder<SubType2, SubType2Builder> { ... }\n+     *     static class SubType2Builder implements ObjectBuilder{@literal <SubType2>} { ... }\n+     *     static class SubType2Serializer extends VersionedSerializer.WithBuilder{@literal <SubType2, SubType2Builder>} { ... }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU2MTAxNQ==", "bodyText": "replaced @literal with @code. does that make it better?", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377561015", "createdAt": "2020-02-11T10:50:34Z", "author": {"login": "bibinss"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }\n+     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder{@literal <SubType1, SubType1Builder>} { ... }\n      * }\n      *\n      * class SubType11 extends SubType1 {\n-     *     static class SubType11Builder implements ObjectBuilder<SubType11> { ... }\n-     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder<SubType11, SubType11Builder> { ... }\n+     *     static class SubType11Builder implements ObjectBuilder{@literal <SubType11>} { ... }\n+     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder{@literal <SubType11, SubType11Builder>} { ... }\n      * }\n      *\n      * class SubType2 extends BaseType {\n-     *     static class SubType2Builder implements ObjectBuilder<SubType2> { ... }\n-     *     static class SubType2Serializer extends VersionedSerializer.WithBuilder<SubType2, SubType2Builder> { ... }\n+     *     static class SubType2Builder implements ObjectBuilder{@literal <SubType2>} { ... }\n+     *     static class SubType2Serializer extends VersionedSerializer.WithBuilder{@literal <SubType2, SubType2Builder>} { ... }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0Mzg5Ng=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAxOTA5OnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDo0MToyMFrOFn9WRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo1MDo0OFrOFoEgMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MzkwOA==", "bodyText": "Same comment as the last comment.", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377443908", "createdAt": "2020-02-11T04:41:20Z", "author": {"login": "ravisharda"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }\n+     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder{@literal <SubType1, SubType1Builder>} { ... }\n      * }\n      *\n      * class SubType11 extends SubType1 {\n-     *     static class SubType11Builder implements ObjectBuilder<SubType11> { ... }\n-     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder<SubType11, SubType11Builder> { ... }\n+     *     static class SubType11Builder implements ObjectBuilder{@literal <SubType11>} { ... }\n+     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder{@literal <SubType11, SubType11Builder>} { ... }\n      * }\n      *\n      * class SubType2 extends BaseType {\n-     *     static class SubType2Builder implements ObjectBuilder<SubType2> { ... }\n-     *     static class SubType2Serializer extends VersionedSerializer.WithBuilder<SubType2, SubType2Builder> { ... }\n+     *     static class SubType2Builder implements ObjectBuilder{@literal <SubType2>} { ... }\n+     *     static class SubType2Serializer extends VersionedSerializer.WithBuilder{@literal <SubType2, SubType2Builder>} { ... }\n      * }\n      *\n-     * class BaseTypeSerializer extends VersionedSerializer.MultiType<BaseType> {\n+     * class BaseTypeSerializer extends VersionedSerializer.MultiType{@literal <BaseType>} {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU2MTA2Mw==", "bodyText": "replaced @literal with @code. does that make it better?", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377561063", "createdAt": "2020-02-11T10:50:40Z", "author": {"login": "bibinss"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }\n+     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder{@literal <SubType1, SubType1Builder>} { ... }\n      * }\n      *\n      * class SubType11 extends SubType1 {\n-     *     static class SubType11Builder implements ObjectBuilder<SubType11> { ... }\n-     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder<SubType11, SubType11Builder> { ... }\n+     *     static class SubType11Builder implements ObjectBuilder{@literal <SubType11>} { ... }\n+     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder{@literal <SubType11, SubType11Builder>} { ... }\n      * }\n      *\n      * class SubType2 extends BaseType {\n-     *     static class SubType2Builder implements ObjectBuilder<SubType2> { ... }\n-     *     static class SubType2Serializer extends VersionedSerializer.WithBuilder<SubType2, SubType2Builder> { ... }\n+     *     static class SubType2Builder implements ObjectBuilder{@literal <SubType2>} { ... }\n+     *     static class SubType2Serializer extends VersionedSerializer.WithBuilder{@literal <SubType2, SubType2Builder>} { ... }\n      * }\n      *\n-     * class BaseTypeSerializer extends VersionedSerializer.MultiType<BaseType> {\n+     * class BaseTypeSerializer extends VersionedSerializer.MultiType{@literal <BaseType>} {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MzkwOA=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU2MTEzOA==", "bodyText": "replaced @literal with @code. does that make it better?", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377561138", "createdAt": "2020-02-11T10:50:48Z", "author": {"login": "bibinss"}, "path": "common/src/main/java/io/pravega/common/io/serialization/VersionedSerializer.java", "diffHunk": "@@ -596,21 +596,21 @@ TargetType deserializeContents(InputStream stream) throws IOException {\n      * class BaseType { ... }\n      *\n      * class SubType1 extends BaseType {\n-     *     static class SubType1Builder implements ObjectBuilder<SubType1> { ... }\n-     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder<SubType1, SubType1Builder> { ... }\n+     *     static class SubType1Builder implements ObjectBuilder{@literal <SubType1>} { ... }\n+     *     static class SubType1Serializer extends VersionedSerializer.WithBuilder{@literal <SubType1, SubType1Builder>} { ... }\n      * }\n      *\n      * class SubType11 extends SubType1 {\n-     *     static class SubType11Builder implements ObjectBuilder<SubType11> { ... }\n-     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder<SubType11, SubType11Builder> { ... }\n+     *     static class SubType11Builder implements ObjectBuilder{@literal <SubType11>} { ... }\n+     *     static class SubType11Serializer extends VersionedSerializer.WithBuilder{@literal <SubType11, SubType11Builder>} { ... }\n      * }\n      *\n      * class SubType2 extends BaseType {\n-     *     static class SubType2Builder implements ObjectBuilder<SubType2> { ... }\n-     *     static class SubType2Serializer extends VersionedSerializer.WithBuilder<SubType2, SubType2Builder> { ... }\n+     *     static class SubType2Builder implements ObjectBuilder{@literal <SubType2>} { ... }\n+     *     static class SubType2Serializer extends VersionedSerializer.WithBuilder{@literal <SubType2, SubType2Builder>} { ... }\n      * }\n      *\n-     * class BaseTypeSerializer extends VersionedSerializer.MultiType<BaseType> {\n+     * class BaseTypeSerializer extends VersionedSerializer.MultiType{@literal <BaseType>} {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0MzkwOA=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNTAyMjYwOnYy", "diffSide": "RIGHT", "path": "shared/protocol/src/main/java/io/pravega/shared/NameUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNDo0NTozOVrOFn9Yng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMDo1MDo1N1rOFoEghg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0NDUxMA==", "bodyText": "Please add a colon : too: ... format: {", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377444510", "createdAt": "2020-02-11T04:45:39Z", "author": {"login": "ravisharda"}, "path": "shared/protocol/src/main/java/io/pravega/shared/NameUtils.java", "diffHunk": "@@ -341,7 +341,7 @@ private static StringBuffer getScopedStreamNameInternal(String scope, String str\n \n     /**\n      * Method to generate Fully Qualified table name using scope, and other tokens to be used to compose the table name.\n-     * The composed name has following format \\<scope\\>/_tables/\\<tokens[0]\\>/\\<tokens[1]\\>...\n+     * The composed name has following format {@literal <scope>/_tables/<tokens[0]>/<tokens[1]>...}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU2MTIyMg==", "bodyText": "done", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377561222", "createdAt": "2020-02-11T10:50:57Z", "author": {"login": "bibinss"}, "path": "shared/protocol/src/main/java/io/pravega/shared/NameUtils.java", "diffHunk": "@@ -341,7 +341,7 @@ private static StringBuffer getScopedStreamNameInternal(String scope, String str\n \n     /**\n      * Method to generate Fully Qualified table name using scope, and other tokens to be used to compose the table name.\n-     * The composed name has following format \\<scope\\>/_tables/\\<tokens[0]\\>/\\<tokens[1]\\>...\n+     * The composed name has following format {@literal <scope>/_tables/<tokens[0]>/<tokens[1]>...}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ0NDUxMA=="}, "originalCommit": {"oid": "86f2a45acb71b5995b8ee84644c805c8169f9fbd"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNjYyNDYzOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/tables/impl/TableSegment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTowMzo0NFrOFoMbDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxNTowMzo0NFrOFoMbDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzY5MDg5Mg==", "bodyText": "nice", "url": "https://github.com/pravega/pravega/pull/4555#discussion_r377690892", "createdAt": "2020-02-11T15:03:44Z", "author": {"login": "andreipaduroiu"}, "path": "client/src/main/java/io/pravega/client/tables/impl/TableSegment.java", "diffHunk": "@@ -52,9 +52,10 @@\n      * Inserts new or updates existing Table Entries into this Table Segment.\n      *\n      * @param entries A Collection of entries to insert or update. If for at least one such entry,\n-     *                {@link TableEntry#getKey()#getVersion()} returns a non-null value, this will perform an atomic\n-     *                Conditional Update where all the entries either get applied or none will; otherwise a Unconditional\n-     *                Update will be performed. See {@link TableSegment} doc for more details on Types of Updates.\n+     *                {@link TableEntry#getKey()}{@link TableKey#getVersion()} returns a non-null value,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f82fb971efe1809eb48435b5bc8bca6f1570dfa0"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4421, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}