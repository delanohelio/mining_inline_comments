{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMzYxNDAy", "number": 5343, "title": "Issue 5341: Fix thread leak in controller", "bodyText": "Signed-off-by: Shivesh Ranjan shivesh.ranjan@gmail.com\nChange log description\nFixes thread leak in Periodic watermarking where we create client factory object for each new revisioned client that we create, but when we close the client we do not close the factory which leaks a thread that it had created internally.\nPurpose of the change\nFixes #5341\nWhat the code does\nCloses the factory as part of closing the watermark client.\nHow to verify it\nUnit test added", "createdAt": "2020-11-17T12:10:02Z", "url": "https://github.com/pravega/pravega/pull/5343", "merged": true, "mergeCommit": {"oid": "04cb90a2b4520c828714f676483e89cad8d8dab3"}, "closed": true, "closedAt": "2020-11-18T10:15:17Z", "author": {"login": "shiveshr"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddYYc0AH2gAyNTIyMzYxNDAyOmRlMzQ4YmNjMWY4OTU0NTY0YzQzNjZmZjBhOGZlNTVkZTE1NDRmZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddontggH2gAyNTIyMzYxNDAyOmNlZWJlZWI5YmU1ODlmMWMyMjEyNzMyYjQ2Y2FhYmE1OGIzNWVhMmM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "de348bcc1f8954564c4366ff0a8fe55de1544fea", "author": {"user": {"login": "shiveshr", "name": "shivesh ranjan"}}, "url": "https://github.com/pravega/pravega/commit/de348bcc1f8954564c4366ff0a8fe55de1544fea", "committedDate": "2020-11-17T12:05:28Z", "message": "Issue 5341: Fix thread leak in controller\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMzMwODk3", "url": "https://github.com/pravega/pravega/pull/5343#pullrequestreview-532330897", "createdAt": "2020-11-17T12:54:29Z", "commit": {"oid": "de348bcc1f8954564c4366ff0a8fe55de1544fea"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMjo1NDoyOVrOH0zeZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxMzowNzo1MVrOH0z9OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEzMTM2Ng==", "bodyText": "Precondition check to verify that it is not null.", "url": "https://github.com/pravega/pravega/pull/5343#discussion_r525131366", "createdAt": "2020-11-17T12:54:29Z", "author": {"login": "shrids"}, "path": "controller/src/main/java/io/pravega/controller/server/bucket/PeriodicWatermarking.java", "diffHunk": "@@ -387,14 +391,28 @@ boolean checkExistsInCache(Stream stream) {\n         private final ConcurrentHashMap<String, Long> inactiveWriters;\n         \n         WatermarkClient(Stream stream, ClientConfig clientConfig) {\n-            this(stream, SynchronizerClientFactory.withScope(stream.getScope(), clientConfig));\n+            this(stream, SynchronizerClientFactory.withScope(stream.getScope(), clientConfig), true);\n         }\n         \n         @VisibleForTesting\n         WatermarkClient(Stream stream, SynchronizerClientFactory clientFactory) {\n-            this.client = clientFactory.createRevisionedStreamClient(\n-                    NameUtils.getMarkStreamForStream(stream.getStreamName()), \n-                    new WatermarkSerializer(), SynchronizerConfig.builder().build());\n+            this(stream, clientFactory, false);\n+        }\n+        \n+        @VisibleForTesting\n+        WatermarkClient(Stream stream, SynchronizerClientFactory clientFactory, boolean closeClientFactory) {\n+            this.synchronizerClientFactory = clientFactory;\n+            this.closeClientFactory = closeClientFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de348bcc1f8954564c4366ff0a8fe55de1544fea"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEzNjAwNg==", "bodyText": "closeClientFactory is set to false only for tests. Hence we could remove the condition at line 411 below.", "url": "https://github.com/pravega/pravega/pull/5343#discussion_r525136006", "createdAt": "2020-11-17T13:02:27Z", "author": {"login": "shrids"}, "path": "controller/src/main/java/io/pravega/controller/server/bucket/PeriodicWatermarking.java", "diffHunk": "@@ -387,14 +391,28 @@ boolean checkExistsInCache(Stream stream) {\n         private final ConcurrentHashMap<String, Long> inactiveWriters;\n         \n         WatermarkClient(Stream stream, ClientConfig clientConfig) {\n-            this(stream, SynchronizerClientFactory.withScope(stream.getScope(), clientConfig));\n+            this(stream, SynchronizerClientFactory.withScope(stream.getScope(), clientConfig), true);\n         }\n         \n         @VisibleForTesting\n         WatermarkClient(Stream stream, SynchronizerClientFactory clientFactory) {\n-            this.client = clientFactory.createRevisionedStreamClient(\n-                    NameUtils.getMarkStreamForStream(stream.getStreamName()), \n-                    new WatermarkSerializer(), SynchronizerConfig.builder().build());\n+            this(stream, clientFactory, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de348bcc1f8954564c4366ff0a8fe55de1544fea"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTEzOTI1Ng==", "bodyText": "Can we avoid creating a new SynchronizerClientFactory for every WatermarkClient? Every factory creates an new thread pool.", "url": "https://github.com/pravega/pravega/pull/5343#discussion_r525139256", "createdAt": "2020-11-17T13:07:51Z", "author": {"login": "shrids"}, "path": "controller/src/main/java/io/pravega/controller/server/bucket/PeriodicWatermarking.java", "diffHunk": "@@ -387,14 +391,28 @@ boolean checkExistsInCache(Stream stream) {\n         private final ConcurrentHashMap<String, Long> inactiveWriters;\n         \n         WatermarkClient(Stream stream, ClientConfig clientConfig) {\n-            this(stream, SynchronizerClientFactory.withScope(stream.getScope(), clientConfig));\n+            this(stream, SynchronizerClientFactory.withScope(stream.getScope(), clientConfig), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de348bcc1f8954564c4366ff0a8fe55de1544fea"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6006408b359e4a91bc78a7ea3725ceba118c921e", "author": {"user": {"login": "shiveshr", "name": "shivesh ranjan"}}, "url": "https://github.com/pravega/pravega/commit/6006408b359e4a91bc78a7ea3725ceba118c921e", "committedDate": "2020-11-17T14:30:57Z", "message": "PR comments\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36ab59db2110265371f77b792bc99c53501fad7c", "author": {"user": {"login": "shiveshr", "name": "shivesh ranjan"}}, "url": "https://github.com/pravega/pravega/commit/36ab59db2110265371f77b792bc99c53501fad7c", "committedDate": "2020-11-17T14:34:46Z", "message": "update unit test\n\nSigned-off-by: Shivesh Ranjan <shivesh.ranjan@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyNzA0MDY4", "url": "https://github.com/pravega/pravega/pull/5343#pullrequestreview-532704068", "createdAt": "2020-11-17T19:10:54Z", "commit": {"oid": "36ab59db2110265371f77b792bc99c53501fad7c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMDgyMjE3", "url": "https://github.com/pravega/pravega/pull/5343#pullrequestreview-533082217", "createdAt": "2020-11-18T03:41:58Z", "commit": {"oid": "36ab59db2110265371f77b792bc99c53501fad7c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ceebeeb9be589f1c2212732b46caaba58b35ea2c", "author": {"user": {"login": "shiveshr", "name": "shivesh ranjan"}}, "url": "https://github.com/pravega/pravega/commit/ceebeeb9be589f1c2212732b46caaba58b35ea2c", "committedDate": "2020-11-18T07:00:37Z", "message": "Merge branch 'master' into issue5341"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3741, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}