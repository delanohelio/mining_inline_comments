{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2Mzk5NjI4", "number": 5368, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNjo0ODozMFrOE81Arw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwODo1MToxN1rOE-jOdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMyMjE4NTQzOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/stream/RetentionPolicy.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNjo0ODozMFrOH5L2WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQwNzo1OToxMFrOH6PhHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTcyNTAxNg==", "bodyText": "please dont change the name of the variable otherwise anyone using retention policy in their application would have to recompile their code.", "url": "https://github.com/pravega/pravega/pull/5368#discussion_r529725016", "createdAt": "2020-11-24T16:48:30Z", "author": {"login": "shiveshr"}, "path": "client/src/main/java/io/pravega/client/stream/RetentionPolicy.java", "diffHunk": "@@ -33,18 +32,13 @@\n         /**\n          * Set retention based on the total size of the data in the stream in bytes.\n          */\n-        SIZE,\n-\n-        /**\n-         * Set retention policy based on Consumption.\n-         * Also see: {@link ReaderGroupConfig.StreamDataRetention}\n-         */\n-        CONSUMPTION\n+        SIZE\n     }\n \n     private final RetentionType retentionType;\n-    private final long retentionParam;\n-    private final ConsumptionLimits consumptionLimits;\n+    private final long retentionMin;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fabaad3fba2b3907213c2558e3221c90037f5a7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTcyNTg5NQ==", "bodyText": "in fact to ensure that this change is backward compatible and we dont break the application, perhaps we can simply have a getter with the original name which returns the min.", "url": "https://github.com/pravega/pravega/pull/5368#discussion_r529725895", "createdAt": "2020-11-24T16:49:42Z", "author": {"login": "shiveshr"}, "path": "client/src/main/java/io/pravega/client/stream/RetentionPolicy.java", "diffHunk": "@@ -33,18 +32,13 @@\n         /**\n          * Set retention based on the total size of the data in the stream in bytes.\n          */\n-        SIZE,\n-\n-        /**\n-         * Set retention policy based on Consumption.\n-         * Also see: {@link ReaderGroupConfig.StreamDataRetention}\n-         */\n-        CONSUMPTION\n+        SIZE\n     }\n \n     private final RetentionType retentionType;\n-    private final long retentionParam;\n-    private final ConsumptionLimits consumptionLimits;\n+    private final long retentionMin;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTcyNTAxNg=="}, "originalCommit": {"oid": "4fabaad3fba2b3907213c2558e3221c90037f5a7"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDgzMzY5NQ==", "bodyText": "Fixed.", "url": "https://github.com/pravega/pravega/pull/5368#discussion_r530833695", "createdAt": "2020-11-26T07:59:10Z", "author": {"login": "pbelgundi"}, "path": "client/src/main/java/io/pravega/client/stream/RetentionPolicy.java", "diffHunk": "@@ -33,18 +32,13 @@\n         /**\n          * Set retention based on the total size of the data in the stream in bytes.\n          */\n-        SIZE,\n-\n-        /**\n-         * Set retention policy based on Consumption.\n-         * Also see: {@link ReaderGroupConfig.StreamDataRetention}\n-         */\n-        CONSUMPTION\n+        SIZE\n     }\n \n     private final RetentionType retentionType;\n-    private final long retentionParam;\n-    private final ConsumptionLimits consumptionLimits;\n+    private final long retentionMin;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTcyNTAxNg=="}, "originalCommit": {"oid": "4fabaad3fba2b3907213c2558e3221c90037f5a7"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzNjA1NTUwOnYy", "diffSide": "RIGHT", "path": "controller/src/main/java/io/pravega/controller/server/rest/ModelHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQwNDoxMToxNFrOH7M08Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwNzowMjoyNFrOH7uCQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgzODE5Mw==", "bodyText": "this should also take max and set it. same for size based.", "url": "https://github.com/pravega/pravega/pull/5368#discussion_r531838193", "createdAt": "2020-11-28T04:11:14Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/rest/ModelHelper.java", "diffHunk": "@@ -67,9 +66,6 @@ public static final StreamConfiguration getCreateStreamConfig(final CreateStream\n                     retentionPolicy = getRetentionPolicy(createStreamRequest.getRetentionPolicy().getTimeBasedRetention(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ec0077201566144038ceba5fe4858af1f4f9328"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjM4MjI3Mw==", "bodyText": "Fixed", "url": "https://github.com/pravega/pravega/pull/5368#discussion_r532382273", "createdAt": "2020-11-30T07:02:24Z", "author": {"login": "pbelgundi"}, "path": "controller/src/main/java/io/pravega/controller/server/rest/ModelHelper.java", "diffHunk": "@@ -67,9 +66,6 @@ public static final StreamConfiguration getCreateStreamConfig(final CreateStream\n                     retentionPolicy = getRetentionPolicy(createStreamRequest.getRetentionPolicy().getTimeBasedRetention(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTgzODE5Mw=="}, "originalCommit": {"oid": "7ec0077201566144038ceba5fe4858af1f4f9328"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MDI0MzA4OnYy", "diffSide": "RIGHT", "path": "controller/src/main/java/io/pravega/controller/server/rest/ModelHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwODo1MToxN1rOH7xCZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQwOTo1Nzo0NVrOH7ziDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzMTQ2Mw==", "bodyText": "shouldnt this check simply be:\ncreateStreamRequest.getRetentionPolicy().getMaxTimeBasedRetention() != null)\n\notherwise this access attempt itself can throw NPE.\nNote: this is json derialization happening here, so the maxTimeBasedRetention will be defaulted to null if its not specified in the json payload.", "url": "https://github.com/pravega/pravega/pull/5368#discussion_r532431463", "createdAt": "2020-11-30T08:51:17Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/server/rest/ModelHelper.java", "diffHunk": "@@ -60,15 +59,29 @@ public static final StreamConfiguration getCreateStreamConfig(final CreateStream\n         if (createStreamRequest.getRetentionPolicy() != null) {\n             switch (createStreamRequest.getRetentionPolicy().getType()) {\n                 case LIMITED_SIZE_MB:\n-                    retentionPolicy = RetentionPolicy.bySizeBytes(\n-                            createStreamRequest.getRetentionPolicy().getValue() * 1024 * 1024);\n+                    if (createStreamRequest.getRetentionPolicy().getMaxValue() == 0) {\n+                        // max value is not specified\n+                        retentionPolicy = RetentionPolicy.bySizeBytes(\n+                                createStreamRequest.getRetentionPolicy().getValue() * MB_TO_BYTES);\n+                    } else {\n+                        retentionPolicy = RetentionPolicy.bySizeBytes(\n+                                createStreamRequest.getRetentionPolicy().getValue() * MB_TO_BYTES,\n+                                createStreamRequest.getRetentionPolicy().getMaxValue() * MB_TO_BYTES);\n+                    }\n                     break;\n                 case LIMITED_DAYS:\n-                    retentionPolicy = getRetentionPolicy(createStreamRequest.getRetentionPolicy().getTimeBasedRetention(),\n-                            createStreamRequest.getRetentionPolicy().getValue());\n-                    break;\n-                case CONSUMPTION:\n-                    retentionPolicy = getConsumptionRetentionPolicy(createStreamRequest.getRetentionPolicy().getConsumptionLimits());\n+                    if (createStreamRequest.getRetentionPolicy().getMaxValue() == 0\n+                        && createStreamRequest.getRetentionPolicy().getMaxTimeBasedRetention().getDays() == 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1d9ddbedc23a273c22aef1eb1dfff71dae048c7"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQ3MjMzNA==", "bodyText": "Fixed & also added tests to cover max Limit validation", "url": "https://github.com/pravega/pravega/pull/5368#discussion_r532472334", "createdAt": "2020-11-30T09:57:45Z", "author": {"login": "pbelgundi"}, "path": "controller/src/main/java/io/pravega/controller/server/rest/ModelHelper.java", "diffHunk": "@@ -60,15 +59,29 @@ public static final StreamConfiguration getCreateStreamConfig(final CreateStream\n         if (createStreamRequest.getRetentionPolicy() != null) {\n             switch (createStreamRequest.getRetentionPolicy().getType()) {\n                 case LIMITED_SIZE_MB:\n-                    retentionPolicy = RetentionPolicy.bySizeBytes(\n-                            createStreamRequest.getRetentionPolicy().getValue() * 1024 * 1024);\n+                    if (createStreamRequest.getRetentionPolicy().getMaxValue() == 0) {\n+                        // max value is not specified\n+                        retentionPolicy = RetentionPolicy.bySizeBytes(\n+                                createStreamRequest.getRetentionPolicy().getValue() * MB_TO_BYTES);\n+                    } else {\n+                        retentionPolicy = RetentionPolicy.bySizeBytes(\n+                                createStreamRequest.getRetentionPolicy().getValue() * MB_TO_BYTES,\n+                                createStreamRequest.getRetentionPolicy().getMaxValue() * MB_TO_BYTES);\n+                    }\n                     break;\n                 case LIMITED_DAYS:\n-                    retentionPolicy = getRetentionPolicy(createStreamRequest.getRetentionPolicy().getTimeBasedRetention(),\n-                            createStreamRequest.getRetentionPolicy().getValue());\n-                    break;\n-                case CONSUMPTION:\n-                    retentionPolicy = getConsumptionRetentionPolicy(createStreamRequest.getRetentionPolicy().getConsumptionLimits());\n+                    if (createStreamRequest.getRetentionPolicy().getMaxValue() == 0\n+                        && createStreamRequest.getRetentionPolicy().getMaxTimeBasedRetention().getDays() == 0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjQzMTQ2Mw=="}, "originalCommit": {"oid": "b1d9ddbedc23a273c22aef1eb1dfff71dae048c7"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4556, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}