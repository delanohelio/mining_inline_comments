{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1MDc2MTMw", "number": 4958, "title": "Issue 4927 deleteKeyValueTableTest fails for InMemoryKVTableStore when using KVTOperationContext", "bodyText": "Change log description\nThe root cause was that in case of InMemoryKVTableMetadataStore, when KVTOperationContext was used to get a reference to the KeyValueTable, it kept pointing to a deleted KVTable object. As a result, the state of the KVTable never changed from DELETING to UNKNOWN as was expected after a deleteKVTable operation.\nPurpose of the change\nFixes #4927, #4960\nWhat the code does\nIn case of an InMemoryKVTableMetadataStore, using KVTOperationContext is unnecessary as all data is already stored in Memory. Removed use of KVTOperationContext in getKVTable() method of InMemoryKVTableMetadataStore and now the test works as expected.\nHow to verify it\nAll Unit and Integration tests should pass.", "createdAt": "2020-07-22T12:05:47Z", "url": "https://github.com/pravega/pravega/pull/4958", "merged": true, "mergeCommit": {"oid": "fcc04a8aa092077fb771eb185db2fdaa3e80ef46"}, "closed": true, "closedAt": "2020-08-06T10:53:12Z", "author": {"login": "pbelgundi"}, "timelineItems": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3ZcijgH2gAyNDU1MDc2MTMwOmY1NDE2ZTIwYjlhODBlOGZiZDdmNzVmNThmYjc3NzFjYmVmYWM4NGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8MV5bgH2gAyNDU1MDc2MTMwOjk3NGE0OTY0MzlmZTNkYjk2Y2E5ODI5YTQwZGIwNjBjMTE4OTIyOGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f5416e20b9a80e8fbd7f75f58fb7771cbefac84c", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/f5416e20b9a80e8fbd7f75f58fb7771cbefac84c", "committedDate": "2020-07-22T11:50:43Z", "message": "fix for InMemoryKVTMetadataStore\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b376c253ae7eb4edf6a5a2cff5ebcf4cfede41e", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/5b376c253ae7eb4edf6a5a2cff5ebcf4cfede41e", "committedDate": "2020-07-22T11:54:07Z", "message": "Merge remote-tracking branch 'upstream/master' into issue-4927-deletekvtabletest-fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMjYxMjQ3", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-453261247", "createdAt": "2020-07-22T12:19:17Z", "commit": {"oid": "5b376c253ae7eb4edf6a5a2cff5ebcf4cfede41e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMjoxOToxOFrOG1f0-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMjoyMTowNFrOG1f4jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc0OTE3OQ==", "bodyText": "why is this being changed? what was wrong with taking the kvt from the context?", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r458749179", "createdAt": "2020-07-22T12:19:18Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/kvtable/InMemoryKVTMetadataStore.java", "diffHunk": "@@ -57,20 +51,12 @@ KeyValueTable newKeyValueTable(String scope, String kvTableName) {\n \n     @Override\n     public KeyValueTable getKVTable(String scope, final String name, KVTOperationContext context) {\n-        KeyValueTable kvt;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b376c253ae7eb4edf6a5a2cff5ebcf4cfede41e"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc0OTc3Mw==", "bodyText": "why is the check on scopes?\nshouldnt the check be on table.. if the table doesnt exist, create it.. else return an already created table.. and this should be concurrency protected.", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r458749773", "createdAt": "2020-07-22T12:20:22Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/kvtable/InMemoryKVTMetadataStore.java", "diffHunk": "@@ -57,20 +51,12 @@ KeyValueTable newKeyValueTable(String scope, String kvTableName) {\n \n     @Override\n     public KeyValueTable getKVTable(String scope, final String name, KVTOperationContext context) {\n-        KeyValueTable kvt;\n-        if (context != null) {\n-            kvt = context.getKvTable();\n-            assert kvt.getScopeName().equals(scope);\n-            assert kvt.getName().equals(name);\n-        } else {\n-            if (!scopes.containsKey(scope)) {\n-                return new InMemoryKVTable(scope, name);\n-            }\n-            InMemoryScope kvtScope = scopes.get(scope);\n-            Optional<InMemoryKVTable> kvTable = kvtScope.getKVTableFromScope(name);\n-            kvt = kvTable.orElse(new InMemoryKVTable(scope, name));\n+        if (!scopes.containsKey(scope)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b376c253ae7eb4edf6a5a2cff5ebcf4cfede41e"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc1MDA5Mg==", "bodyText": "and why are we creating kvt object if the scope doesnt exist?\nthis logic seems incorrect.", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r458750092", "createdAt": "2020-07-22T12:21:04Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/kvtable/InMemoryKVTMetadataStore.java", "diffHunk": "@@ -57,20 +51,12 @@ KeyValueTable newKeyValueTable(String scope, String kvTableName) {\n \n     @Override\n     public KeyValueTable getKVTable(String scope, final String name, KVTOperationContext context) {\n-        KeyValueTable kvt;\n-        if (context != null) {\n-            kvt = context.getKvTable();\n-            assert kvt.getScopeName().equals(scope);\n-            assert kvt.getName().equals(name);\n-        } else {\n-            if (!scopes.containsKey(scope)) {\n-                return new InMemoryKVTable(scope, name);\n-            }\n-            InMemoryScope kvtScope = scopes.get(scope);\n-            Optional<InMemoryKVTable> kvTable = kvtScope.getKVTableFromScope(name);\n-            kvt = kvTable.orElse(new InMemoryKVTable(scope, name));\n+        if (!scopes.containsKey(scope)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc0OTc3Mw=="}, "originalCommit": {"oid": "5b376c253ae7eb4edf6a5a2cff5ebcf4cfede41e"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMzkwOTIx", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-453390921", "createdAt": "2020-07-22T14:46:14Z", "commit": {"oid": "5b376c253ae7eb4edf6a5a2cff5ebcf4cfede41e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDo0NjoxNFrOG1l48g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNDo0NjoxNFrOG1l48g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg0ODQ5OA==", "bodyText": "Remove executor from the argument list.", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r458848498", "createdAt": "2020-07-22T14:46:14Z", "author": {"login": "andreipaduroiu"}, "path": "controller/src/main/java/io/pravega/controller/store/kvtable/InMemoryKVTMetadataStore.java", "diffHunk": "@@ -40,14 +39,9 @@\n     @GuardedBy(\"$lock\")\n     private Map<String, InMemoryScope> scopes = new HashMap<>();\n \n-    private final AtomicInt96 counter;\n-\n-    private final Executor executor;\n \n     public InMemoryKVTMetadataStore(Executor executor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b376c253ae7eb4edf6a5a2cff5ebcf4cfede41e"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c91dd2d4ff9a113b86bfad2c116064cd210e0c1c", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/c91dd2d4ff9a113b86bfad2c116064cd210e0c1c", "committedDate": "2020-07-23T14:32:25Z", "message": "code review comments fix\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94f21fb22c65430122a37fb87f6c6c2fe9f325cd", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/94f21fb22c65430122a37fb87f6c6c2fe9f325cd", "committedDate": "2020-07-27T16:23:46Z", "message": "fix for 4960\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80cd37e34be7f190c263f4740f600050eda8ea30", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/80cd37e34be7f190c263f4740f600050eda8ea30", "committedDate": "2020-07-27T16:25:07Z", "message": "removed commented code\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a123a491187d8bc8ecd80a7e656653c74f4d444", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/4a123a491187d8bc8ecd80a7e656653c74f4d444", "committedDate": "2020-07-28T09:52:55Z", "message": "merge from master\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MTkyOTAw", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-457192900", "createdAt": "2020-07-29T04:53:21Z", "commit": {"oid": "4a123a491187d8bc8ecd80a7e656653c74f4d444"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1MzoyMVrOG4og5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1MzoyMVrOG4og5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzNzIyMA==", "bodyText": "streamstore.getScopes is returning a map which is not synchronization protected in its access here..\ninstead expose a syncrhonized method on the stream store for getting the scope.", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r462037220", "createdAt": "2020-07-29T04:53:21Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/kvtable/InMemoryKVTMetadataStore.java", "diffHunk": "@@ -36,48 +36,44 @@\n     @GuardedBy(\"$lock\")\n     private final Map<String, Integer> deletedKVTables = new HashMap<>();\n \n-    @Setter\n-    @GuardedBy(\"$lock\")\n-    private Map<String, InMemoryScope> scopes = new HashMap<>();\n-\n-    private final AtomicInt96 counter;\n-\n-    private final Executor executor;\n+    private final InMemoryStreamMetadataStore streamStore;\n+    private final ScheduledExecutorService executor;\n \n-    public InMemoryKVTMetadataStore(Executor executor) {\n+    public InMemoryKVTMetadataStore(StreamMetadataStore streamStore, ScheduledExecutorService executor) {\n         super(new InMemoryHostIndex());\n+        this.streamStore = (InMemoryStreamMetadataStore) streamStore;\n         this.executor = executor;\n-        this.counter = new AtomicInt96();\n     }\n \n     @Override\n-    KeyValueTable newKeyValueTable(String scope, String kvTableName) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public KeyValueTable getKVTable(String scope, final String name, KVTOperationContext context) {\n-        KeyValueTable kvt;\n-        if (context != null) {\n-            kvt = context.getKvTable();\n-            assert kvt.getScopeName().equals(scope);\n-            assert kvt.getName().equals(name);\n-        } else {\n-            if (!scopes.containsKey(scope)) {\n-                return new InMemoryKVTable(scope, name);\n+    @Synchronized\n+    KeyValueTable newKeyValueTable(String scope, String name) {\n+        if (this.streamStore.getScopes().containsKey(scope)) {\n+            InMemoryScope kvtScope = this.streamStore.getScopes().get(scope);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a123a491187d8bc8ecd80a7e656653c74f4d444"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MTkzMDM0", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-457193034", "createdAt": "2020-07-29T04:53:44Z", "commit": {"oid": "4a123a491187d8bc8ecd80a7e656653c74f4d444"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1Mzo0NVrOG4ohYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1Mzo0NVrOG4ohYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzNzM0Nw==", "bodyText": "same here.", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r462037347", "createdAt": "2020-07-29T04:53:45Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/kvtable/InMemoryKVTMetadataStore.java", "diffHunk": "@@ -36,48 +36,44 @@\n     @GuardedBy(\"$lock\")\n     private final Map<String, Integer> deletedKVTables = new HashMap<>();\n \n-    @Setter\n-    @GuardedBy(\"$lock\")\n-    private Map<String, InMemoryScope> scopes = new HashMap<>();\n-\n-    private final AtomicInt96 counter;\n-\n-    private final Executor executor;\n+    private final InMemoryStreamMetadataStore streamStore;\n+    private final ScheduledExecutorService executor;\n \n-    public InMemoryKVTMetadataStore(Executor executor) {\n+    public InMemoryKVTMetadataStore(StreamMetadataStore streamStore, ScheduledExecutorService executor) {\n         super(new InMemoryHostIndex());\n+        this.streamStore = (InMemoryStreamMetadataStore) streamStore;\n         this.executor = executor;\n-        this.counter = new AtomicInt96();\n     }\n \n     @Override\n-    KeyValueTable newKeyValueTable(String scope, String kvTableName) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public KeyValueTable getKVTable(String scope, final String name, KVTOperationContext context) {\n-        KeyValueTable kvt;\n-        if (context != null) {\n-            kvt = context.getKvTable();\n-            assert kvt.getScopeName().equals(scope);\n-            assert kvt.getName().equals(name);\n-        } else {\n-            if (!scopes.containsKey(scope)) {\n-                return new InMemoryKVTable(scope, name);\n+    @Synchronized\n+    KeyValueTable newKeyValueTable(String scope, String name) {\n+        if (this.streamStore.getScopes().containsKey(scope)) {\n+            InMemoryScope kvtScope = this.streamStore.getScopes().get(scope);\n+            if (kvtScope.checkTableExists(name)) {\n+                return kvtScope.getKeyValueTable(name);\n             }\n-            InMemoryScope kvtScope = scopes.get(scope);\n-            Optional<InMemoryKVTable> kvTable = kvtScope.getKVTableFromScope(name);\n-            kvt = kvTable.orElse(new InMemoryKVTable(scope, name));\n         }\n-        return kvt;\n+       return new InMemoryKVTable(scope, name);\n     }\n \n     @Override\n     public Scope newScope(String scopeName) {\n         return getScope(scopeName);\n     }\n \n+    @Override\n+    @Synchronized\n+    public KeyValueTable getKVTable(String scope, final String name, KVTOperationContext context) {\n+        if (this.streamStore.getScopes().containsKey(scope)) {\n+            InMemoryScope kvtScope = this.streamStore.getScopes().get(scope);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a123a491187d8bc8ecd80a7e656653c74f4d444"}, "originalPosition": 86}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MTkzNTI4", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-457193528", "createdAt": "2020-07-29T04:55:14Z", "commit": {"oid": "4a123a491187d8bc8ecd80a7e656653c74f4d444"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1NToxNFrOG4ojAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1NToxNFrOG4ojAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzNzc2Mg==", "bodyText": "you dont need to do CompletableFuture.completedFuture().thenApply.\nInstead you can compute the value and then do CompletableFuture.completedFuture(value)", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r462037762", "createdAt": "2020-07-29T04:55:14Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/kvtable/InMemoryKVTMetadataStore.java", "diffHunk": "@@ -98,20 +94,26 @@ public Scope newScope(String scopeName) {\n     @Override\n     @Synchronized\n     public CompletableFuture<Boolean> checkScopeExists(String scope) {\n-        return CompletableFuture.completedFuture(scopes.containsKey(scope));\n+        return Futures.completeOn(CompletableFuture.completedFuture(this.streamStore.getScopes().containsKey(scope)), executor);\n     }\n \n     @Override\n     @Synchronized\n     public CompletableFuture<Boolean> checkTableExists(String scopeName, String kvt) {\n-        return CompletableFuture.completedFuture((InMemoryScope) getScope(scopeName)).thenApply(scope -> scope.checkTableExists(kvt));\n+        return Futures.completeOn(checkScopeExists(scopeName).thenCompose(exists -> {\n+            if (exists) {\n+                return CompletableFuture.completedFuture((InMemoryScope) getScope(scopeName))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a123a491187d8bc8ecd80a7e656653c74f4d444"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MTkzNjgz", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-457193683", "createdAt": "2020-07-29T04:55:45Z", "commit": {"oid": "4a123a491187d8bc8ecd80a7e656653c74f4d444"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1NTo0NlrOG4ojkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNDo1NTo0NlrOG4ojkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzNzkwNA==", "bodyText": "isnt scope.checkTableExists returning a future?\nif so, shouldnt this be thenCompose?", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r462037904", "createdAt": "2020-07-29T04:55:46Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/kvtable/InMemoryKVTMetadataStore.java", "diffHunk": "@@ -98,20 +94,26 @@ public Scope newScope(String scopeName) {\n     @Override\n     @Synchronized\n     public CompletableFuture<Boolean> checkScopeExists(String scope) {\n-        return CompletableFuture.completedFuture(scopes.containsKey(scope));\n+        return Futures.completeOn(CompletableFuture.completedFuture(this.streamStore.getScopes().containsKey(scope)), executor);\n     }\n \n     @Override\n     @Synchronized\n     public CompletableFuture<Boolean> checkTableExists(String scopeName, String kvt) {\n-        return CompletableFuture.completedFuture((InMemoryScope) getScope(scopeName)).thenApply(scope -> scope.checkTableExists(kvt));\n+        return Futures.completeOn(checkScopeExists(scopeName).thenCompose(exists -> {\n+            if (exists) {\n+                return CompletableFuture.completedFuture((InMemoryScope) getScope(scopeName))\n+                        .thenApply(scope -> scope.checkTableExists(kvt));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a123a491187d8bc8ecd80a7e656653c74f4d444"}, "originalPosition": 112}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2bc05f980ed3b6a9b17eea3dfa368b7fc2a1e1d0", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/2bc05f980ed3b6a9b17eea3dfa368b7fc2a1e1d0", "committedDate": "2020-07-30T10:11:54Z", "message": "code review comments addressed\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab57828de594eda65479e05fae1f2e82d04f04f4", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/ab57828de594eda65479e05fae1f2e82d04f04f4", "committedDate": "2020-07-30T10:19:58Z", "message": "Merge remote-tracking branch 'upstream/master' into issue-4927-deletekvtabletest-fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzAwMjA5", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-458300209", "createdAt": "2020-07-30T11:04:47Z", "commit": {"oid": "ab57828de594eda65479e05fae1f2e82d04f04f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTowNDo0N1rOG5eaTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTowNDo0N1rOG5eaTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkyMDI3MA==", "bodyText": "this can be reverted.", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r462920270", "createdAt": "2020-07-30T11:04:47Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/InMemoryScope.java", "diffHunk": "@@ -41,7 +41,7 @@\n     private HashMap<String, Integer> streamsPositionMap;\n \n     @GuardedBy(\"$lock\")\n-    private TreeMap<String, InMemoryKVTable> kvTablesMap;\n+    private final TreeMap<String, InMemoryKVTable> kvTablesMap =  new TreeMap<String, InMemoryKVTable>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab57828de594eda65479e05fae1f2e82d04f04f4"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzAwNTA5", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-458300509", "createdAt": "2020-07-30T11:05:15Z", "commit": {"oid": "ab57828de594eda65479e05fae1f2e82d04f04f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTowNToxNVrOG5ebVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTowNToxNVrOG5ebVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkyMDUzMg==", "bodyText": "it is more consistent to initialize this in the contructor as all other fields are also initialized in the constructor.", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r462920532", "createdAt": "2020-07-30T11:05:15Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/InMemoryScope.java", "diffHunk": "@@ -57,7 +57,6 @@ public String getName() {\n     public CompletableFuture<Void> createScope() {\n         this.sortedStreamsInScope = new TreeMap<>(Integer::compare);\n         this.streamsPositionMap = new HashMap<>();\n-        this.kvTablesMap =  new TreeMap<String, InMemoryKVTable>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab57828de594eda65479e05fae1f2e82d04f04f4"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzAxODIw", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-458301820", "createdAt": "2020-07-30T11:07:40Z", "commit": {"oid": "ab57828de594eda65479e05fae1f2e82d04f04f4"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTowNzo0MVrOG5effw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTowOTozOFrOG5eivA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkyMTU5OQ==", "bodyText": "also, all other fields are non final. as we set them to null in deleteScope. though logically that doesnt really give us anything. but since that is the pattern being used for all other objects, i would suggest we keep the same pattern for this field too.", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r462921599", "createdAt": "2020-07-30T11:07:41Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/InMemoryScope.java", "diffHunk": "@@ -57,7 +57,6 @@ public String getName() {\n     public CompletableFuture<Void> createScope() {\n         this.sortedStreamsInScope = new TreeMap<>(Integer::compare);\n         this.streamsPositionMap = new HashMap<>();\n-        this.kvTablesMap =  new TreeMap<String, InMemoryKVTable>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkyMDUzMg=="}, "originalCommit": {"oid": "ab57828de594eda65479e05fae1f2e82d04f04f4"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkyMjQyOA==", "bodyText": "actually i dont see you returning an immutable map.\nimmutable map is one in which you cannot add/remove/replace any entries.\nsetting the field as final doesnt make it immutable, it just means that field cannot be assigned a different value. but the object that the field refers to can still be immutable, as is the case here.", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r462922428", "createdAt": "2020-07-30T11:09:38Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/kvtable/InMemoryKVTMetadataStore.java", "diffHunk": "@@ -36,48 +36,44 @@\n     @GuardedBy(\"$lock\")\n     private final Map<String, Integer> deletedKVTables = new HashMap<>();\n \n-    @Setter\n-    @GuardedBy(\"$lock\")\n-    private Map<String, InMemoryScope> scopes = new HashMap<>();\n-\n-    private final AtomicInt96 counter;\n-\n-    private final Executor executor;\n+    private final InMemoryStreamMetadataStore streamStore;\n+    private final ScheduledExecutorService executor;\n \n-    public InMemoryKVTMetadataStore(Executor executor) {\n+    public InMemoryKVTMetadataStore(StreamMetadataStore streamStore, ScheduledExecutorService executor) {\n         super(new InMemoryHostIndex());\n+        this.streamStore = (InMemoryStreamMetadataStore) streamStore;\n         this.executor = executor;\n-        this.counter = new AtomicInt96();\n     }\n \n     @Override\n-    KeyValueTable newKeyValueTable(String scope, String kvTableName) {\n-        throw new UnsupportedOperationException();\n-    }\n-\n-    @Override\n-    public KeyValueTable getKVTable(String scope, final String name, KVTOperationContext context) {\n-        KeyValueTable kvt;\n-        if (context != null) {\n-            kvt = context.getKvTable();\n-            assert kvt.getScopeName().equals(scope);\n-            assert kvt.getName().equals(name);\n-        } else {\n-            if (!scopes.containsKey(scope)) {\n-                return new InMemoryKVTable(scope, name);\n+    @Synchronized\n+    KeyValueTable newKeyValueTable(String scope, String name) {\n+        if (this.streamStore.getScopes().containsKey(scope)) {\n+            InMemoryScope kvtScope = this.streamStore.getScopes().get(scope);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjAzNzIyMA=="}, "originalCommit": {"oid": "4a123a491187d8bc8ecd80a7e656653c74f4d444"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzEzMjA2", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-458313206", "createdAt": "2020-07-30T11:27:30Z", "commit": {"oid": "ab57828de594eda65479e05fae1f2e82d04f04f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMToyNzozMFrOG5fDiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMToyNzozMFrOG5fDiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkzMDgyNw==", "bodyText": "kvTablesMap is guarded by $lock so add synchronized annotation for this method", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r462930827", "createdAt": "2020-07-30T11:27:30Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/InMemoryScope.java", "diffHunk": "@@ -175,4 +165,7 @@ public void refresh() {\n         return CompletableFuture.completedFuture(null);\n     }\n \n+    public KeyValueTable getKeyValueTable(String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab57828de594eda65479e05fae1f2e82d04f04f4"}, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MzE3MjQ0", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-458317244", "createdAt": "2020-07-30T11:34:25Z", "commit": {"oid": "ab57828de594eda65479e05fae1f2e82d04f04f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTozNDoyNVrOG5fQJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMTozNDoyNVrOG5fQJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjkzNDA1Mg==", "bodyText": "please add synchronized here as well as this is reading the scopes map which is concurrency protected.", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r462934052", "createdAt": "2020-07-30T11:34:25Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/stream/InMemoryStreamMetadataStore.java", "diffHunk": "@@ -74,7 +75,7 @@ public InMemoryStreamMetadataStore(Executor executor) {\n     }\n \n     public Map<String, InMemoryScope> getScopes() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab57828de594eda65479e05fae1f2e82d04f04f4"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6a42fac35a7e205b9024a0b1ba2e29ec167c565", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/b6a42fac35a7e205b9024a0b1ba2e29ec167c565", "committedDate": "2020-07-30T12:28:53Z", "message": "code review changes\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae5d9c2a0ff1769615524ade0d1c743c1e630f18", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/ae5d9c2a0ff1769615524ade0d1c743c1e630f18", "committedDate": "2020-07-30T16:11:03Z", "message": "typo fix\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "915eabb6926a77a92107fd931fe9b2a05ae9ce90", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/915eabb6926a77a92107fd931fe9b2a05ae9ce90", "committedDate": "2020-07-30T16:43:56Z", "message": "fix test failure\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64d1c0d1ee5732346046613d742ba9c43acf942e", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/64d1c0d1ee5732346046613d742ba9c43acf942e", "committedDate": "2020-07-30T16:50:17Z", "message": "checkstyle fix\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5OTQ4NjUz", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-459948653", "createdAt": "2020-08-03T11:22:33Z", "commit": {"oid": "64d1c0d1ee5732346046613d742ba9c43acf942e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToyMjozM1rOG61yxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wM1QxMToyMjozM1rOG61yxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDM1MTk0MA==", "bodyText": "is there a check that ensures that \"create\" is called on the scope object before it is used.\nthis is returning the scope object, but where does it get added to the store?", "url": "https://github.com/pravega/pravega/pull/4958#discussion_r464351940", "createdAt": "2020-08-03T11:22:33Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/store/kvtable/InMemoryKVTMetadataStore.java", "diffHunk": "@@ -98,20 +97,25 @@ public Scope newScope(String scopeName) {\n     @Override\n     @Synchronized\n     public CompletableFuture<Boolean> checkScopeExists(String scope) {\n-        return CompletableFuture.completedFuture(scopes.containsKey(scope));\n+        return Futures.completeOn(CompletableFuture.completedFuture(this.streamStore.scopeExists(scope)), executor);\n     }\n \n     @Override\n     @Synchronized\n     public CompletableFuture<Boolean> checkTableExists(String scopeName, String kvt) {\n-        return CompletableFuture.completedFuture((InMemoryScope) getScope(scopeName)).thenApply(scope -> scope.checkTableExists(kvt));\n+        return Futures.completeOn(checkScopeExists(scopeName).thenCompose(exists -> {\n+            if (exists) {\n+                return CompletableFuture.completedFuture(((InMemoryScope) getScope(scopeName)).checkTableExists(kvt));\n+            }\n+            return CompletableFuture.completedFuture(Boolean.FALSE);\n+        }), executor);\n     }\n \n     @Override\n     @Synchronized\n     public Scope getScope(final String scopeName) {\n-        if (scopes.containsKey(scopeName)) {\n-            return scopes.get(scopeName);\n+        if (this.streamStore.scopeExists(scopeName)) {\n+            return this.streamStore.getScope(scopeName);\n         } else {\n             return new InMemoryScope(scopeName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64d1c0d1ee5732346046613d742ba9c43acf942e"}, "originalPosition": 127}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwNTE1ODU3", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-460515857", "createdAt": "2020-08-04T05:58:30Z", "commit": {"oid": "64d1c0d1ee5732346046613d742ba9c43acf942e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63a05891611f084a80cd3cd9d1e8a0bbffb161d8", "author": {"user": {"login": "shiveshr", "name": "shivesh ranjan"}}, "url": "https://github.com/pravega/pravega/commit/63a05891611f084a80cd3cd9d1e8a0bbffb161d8", "committedDate": "2020-08-04T05:58:38Z", "message": "Merge branch 'master' into issue-4927-deletekvtabletest-fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwOTkxMTk3", "url": "https://github.com/pravega/pravega/pull/4958#pullrequestreview-460991197", "createdAt": "2020-08-04T16:46:43Z", "commit": {"oid": "63a05891611f084a80cd3cd9d1e8a0bbffb161d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "274225aeacca58430f15c4ec75e3d03ce8ae5a2e", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/274225aeacca58430f15c4ec75e3d03ce8ae5a2e", "committedDate": "2020-08-05T02:04:49Z", "message": "Merge branch 'master' into issue-4927-deletekvtabletest-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "feeaa0f246343c68fc7af44226facbf2a15105b5", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/feeaa0f246343c68fc7af44226facbf2a15105b5", "committedDate": "2020-08-06T09:02:19Z", "message": "Merge remote-tracking branch 'upstream/master' into issue-4927-deletekvtabletest-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "711770abe1e7da3cf98290cec3f7cf9923271c0b", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/711770abe1e7da3cf98290cec3f7cf9923271c0b", "committedDate": "2020-08-06T09:07:46Z", "message": "code coverage\n\nSigned-off-by: pbelgundi <prajakta.belgundi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "974a496439fe3db96ca9829a40db060c1189228c", "author": {"user": {"login": "pbelgundi", "name": "Prajakta Belgundi"}}, "url": "https://github.com/pravega/pravega/commit/974a496439fe3db96ca9829a40db060c1189228c", "committedDate": "2020-08-06T09:24:19Z", "message": "Merge branch 'issue-4927-deletekvtabletest-fix' of https://github.com/pbelgundi/pravega into issue-4927-deletekvtabletest-fix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3968, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}