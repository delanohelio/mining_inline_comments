{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMzExNjA1", "number": 5156, "title": "Issue 5155: (SegmentStore) Enabling copy-on-read for all Segment Reads", "bodyText": "Change log description\n\nEnabling copy-on-read for all Segment Reads from the client.\nEnabling copy-on-read for all Segment Reads as a result of Table Segment Entry reads (TableBucketReader calls).\n\nPurpose of the change\nFixes #5155.\nWhat the code does\n\nPlease see #5155 for a description of the bug being resolved that includes the scenario that can lead to it.\nPR #4841 has reduced the number of memory copies that were performed on the read path from a segment, however it has eliminated one too many such copies.\n#5119 and #5120 have introduced a mechanism that tells the Read Index to return a pointer to a copy of the data in the cache instead of a direct view of the cache data. This would prevent the scenario described in #5155 from happening (i.e., a subsequent eviction of those blocks and reallocation may cause it to read the wrong data), however it has not been applied for all read paths.\nThis PR enables this functionality for all Segment Reads. This includes:\n\nClient reads\nTable Segment Key/Entry reads.\n\n\nThis ensures that the data returned is a single, immutable buffer that will not be modified by any background process.\n\nHow to verify it\nUnit tests updated to verify the flag is being set.\nThe actual scenario described in #5155 cannot be reliably tested directly via unit tests, but #5120  did add a new unit test to verify that the copy-on-read works as expected.", "createdAt": "2020-09-08T21:39:35Z", "url": "https://github.com/pravega/pravega/pull/5156", "merged": true, "mergeCommit": {"oid": "272828b39d80942b2ac7ef0544a800ba246a2991"}, "closed": true, "closedAt": "2020-09-09T07:28:32Z", "author": {"login": "andreipaduroiu"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG-ipGAH2gAyNDgyMzExNjA1OmIzNmVjYzc1ZjliOWRlM2Y3YTdmYWI4NmUwNmYyNzlhYzk0OTViNWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHG9rJAFqTQ4NDcyNjM3Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b36ecc75f9b9de3f7a7fab86e06f279ac9495b5e", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/b36ecc75f9b9de3f7a7fab86e06f279ac9495b5e", "committedDate": "2020-09-08T21:32:44Z", "message": "Enabling copy-on-read for all Segment Reads.\n\nSigned-off-by: Andrei Paduroiu <andrei.paduroiu@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NTcxNzA4", "url": "https://github.com/pravega/pravega/pull/5156#pullrequestreview-484571708", "createdAt": "2020-09-09T00:04:26Z", "commit": {"oid": "b36ecc75f9b9de3f7a7fab86e06f279ac9495b5e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NjY4OTA0", "url": "https://github.com/pravega/pravega/pull/5156#pullrequestreview-484668904", "createdAt": "2020-09-09T05:22:38Z", "commit": {"oid": "b36ecc75f9b9de3f7a7fab86e06f279ac9495b5e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNToyMjozOFrOHO3HMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNToyMjozOFrOHO3HMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0NTA3Mw==", "bodyText": "probably you can drop expectedCopyOnReadCount variable", "url": "https://github.com/pravega/pravega/pull/5156#discussion_r485345073", "createdAt": "2020-09-09T05:22:38Z", "author": {"login": "eolivelli"}, "path": "segmentstore/server/src/test/java/io/pravega/segmentstore/server/tables/TableCompactorTests.java", "diffHunk": "@@ -273,9 +273,6 @@ private void testCompaction(int readLength) {\n         // In the real world, the IndexWriter will readjust this number as appropriate when reindexing these values.\n         Assert.assertEquals(\"Expecting TOTAL_ENTRY_COUNT to be 0 after a full compaction.\",\n                 0, context.indexWriter.getTotalEntryCount(context.segmentMetadata));\n-\n-        Assert.assertEquals(\"Unexpected number of candidate reads from the segment with copy-on-read enabled.\",\n-                expectedCopyOnReadCount, context.segment.getCopyOnReadCount());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b36ecc75f9b9de3f7a7fab86e06f279ac9495b5e"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzI2Mzcz", "url": "https://github.com/pravega/pravega/pull/5156#pullrequestreview-484726373", "createdAt": "2020-09-09T07:21:30Z", "commit": {"oid": "b36ecc75f9b9de3f7a7fab86e06f279ac9495b5e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3855, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}