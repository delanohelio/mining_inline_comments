{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzMzIxMzkw", "number": 5032, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMToxNDoxNFrOEWv-yg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToxMzo1OVrOEW1ilA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjkwMjUwOnYy", "diffSide": "RIGHT", "path": "test/system/src/test/java/io/pravega/test/system/AbstractReadWriteTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMToxNDoxNFrOG-KXaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxMToyOToyM1rOG-Kycg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgzNDczMQ==", "bodyText": "As I understand the reason for this change is that io.netty.util.internal.ConcurrentSet is deprecated ?", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r467834731", "createdAt": "2020-08-10T11:14:14Z", "author": {"login": "shrids"}, "path": "test/system/src/test/java/io/pravega/test/system/AbstractReadWriteTest.java", "diffHunk": "@@ -92,8 +92,8 @@\n         final CompletableFuture<Void> newWritersComplete = new CompletableFuture<>();\n         final CompletableFuture<Void> readersComplete = new CompletableFuture<>();\n         final List<CompletableFuture<Void>> txnStatusFutureList = synchronizedList(new ArrayList<>());\n-        final ConcurrentSet<UUID> committingTxn = new ConcurrentSet<>();\n-        final ConcurrentSet<UUID> abortedTxn = new ConcurrentSet<>();\n+        final ConcurrentSkipListSet<UUID> committingTxn = new ConcurrentSkipListSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzg0MTY1MA==", "bodyText": "Yes, correct.", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r467841650", "createdAt": "2020-08-10T11:29:23Z", "author": {"login": "RaulGracia"}, "path": "test/system/src/test/java/io/pravega/test/system/AbstractReadWriteTest.java", "diffHunk": "@@ -92,8 +92,8 @@\n         final CompletableFuture<Void> newWritersComplete = new CompletableFuture<>();\n         final CompletableFuture<Void> readersComplete = new CompletableFuture<>();\n         final List<CompletableFuture<Void>> txnStatusFutureList = synchronizedList(new ArrayList<>());\n-        final ConcurrentSet<UUID> committingTxn = new ConcurrentSet<>();\n-        final ConcurrentSet<UUID> abortedTxn = new ConcurrentSet<>();\n+        final ConcurrentSkipListSet<UUID> committingTxn = new ConcurrentSkipListSet<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzgzNDczMQ=="}, "originalCommit": null, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzc5OTUyOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/ClientConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToxMDo0NFrOG-Szmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToyMToyMFrOG-TPyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3MzAxOQ==", "bodyText": "Why do you need @param and @return for fields?", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r467973019", "createdAt": "2020-08-10T15:10:44Z", "author": {"login": "andreipaduroiu"}, "path": "client/src/main/java/io/pravega/client/ClientConfig.java", "diffHunk": "@@ -42,31 +42,46 @@\n \n \n     /** controllerURI The controller rpc URI. This can be of 2 types\n-     1. tcp://ip1:port1,ip2:port2,...\n-        This is used if the controller endpoints are static and can be directly accessed.\n-     2. pravega://ip1:port1,ip2:port2,...\n-        This is used to autodiscovery the controller endpoints from an initial controller list.\n+     * 1. tcp://ip1:port1,ip2:port2,...\n+     *    This is used if the controller endpoints are static and can be directly accessed.\n+     * 2. pravega://ip1:port1,ip2:port2,...\n+     *   This is used to autodiscovery the controller endpoints from an initial controller list.\n+     *\n+     * @param controllerURI The controller RPC URI.\n+     * @return The controller RPC URI.\n     */\n     private final URI controllerURI;\n \n     /**\n      * Credentials to be passed on to the Pravega controller for authentication and authorization.\n+     *\n+     * @param credentials Pravega controller credentials for authentication and authorization.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3MzUzMA==", "bodyText": "Is this because of Lombok? Isn't there a setting in Lombok to sort this out?", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r467973530", "createdAt": "2020-08-10T15:11:29Z", "author": {"login": "andreipaduroiu"}, "path": "client/src/main/java/io/pravega/client/ClientConfig.java", "diffHunk": "@@ -42,31 +42,46 @@\n \n \n     /** controllerURI The controller rpc URI. This can be of 2 types\n-     1. tcp://ip1:port1,ip2:port2,...\n-        This is used if the controller endpoints are static and can be directly accessed.\n-     2. pravega://ip1:port1,ip2:port2,...\n-        This is used to autodiscovery the controller endpoints from an initial controller list.\n+     * 1. tcp://ip1:port1,ip2:port2,...\n+     *    This is used if the controller endpoints are static and can be directly accessed.\n+     * 2. pravega://ip1:port1,ip2:port2,...\n+     *   This is used to autodiscovery the controller endpoints from an initial controller list.\n+     *\n+     * @param controllerURI The controller RPC URI.\n+     * @return The controller RPC URI.\n     */\n     private final URI controllerURI;\n \n     /**\n      * Credentials to be passed on to the Pravega controller for authentication and authorization.\n+     *\n+     * @param credentials Pravega controller credentials for authentication and authorization.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3MzAxOQ=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk4MDIzMg==", "bodyText": "Yes and this seems to be the only workaround available at this point. Please look at this comment: #3373 (comment)", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r467980232", "createdAt": "2020-08-10T15:21:20Z", "author": {"login": "RaulGracia"}, "path": "client/src/main/java/io/pravega/client/ClientConfig.java", "diffHunk": "@@ -42,31 +42,46 @@\n \n \n     /** controllerURI The controller rpc URI. This can be of 2 types\n-     1. tcp://ip1:port1,ip2:port2,...\n-        This is used if the controller endpoints are static and can be directly accessed.\n-     2. pravega://ip1:port1,ip2:port2,...\n-        This is used to autodiscovery the controller endpoints from an initial controller list.\n+     * 1. tcp://ip1:port1,ip2:port2,...\n+     *    This is used if the controller endpoints are static and can be directly accessed.\n+     * 2. pravega://ip1:port1,ip2:port2,...\n+     *   This is used to autodiscovery the controller endpoints from an initial controller list.\n+     *\n+     * @param controllerURI The controller RPC URI.\n+     * @return The controller RPC URI.\n     */\n     private final URI controllerURI;\n \n     /**\n      * Credentials to be passed on to the Pravega controller for authentication and authorization.\n+     *\n+     * @param credentials Pravega controller credentials for authentication and authorization.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3MzAxOQ=="}, "originalCommit": null, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzgwODkyOnYy", "diffSide": "RIGHT", "path": "client/src/main/java/io/pravega/client/tables/KeyValueTable.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToxMjo1MlrOG-S5Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxNjo0NlrOG_mEoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NDQ4Nw==", "bodyText": "This should be link, not code.", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r467974487", "createdAt": "2020-08-10T15:12:52Z", "author": {"login": "andreipaduroiu"}, "path": "client/src/main/java/io/pravega/client/tables/KeyValueTable.java", "diffHunk": "@@ -142,7 +142,7 @@\n      * into this {@link KeyValueTable}. All changes are performed atomically (either all or none will be accepted).\n      *\n      * @param keyFamily The Key Family for the all provided Table Entries.\n-     * @param entries   An {@link Iterable} of {@link Map.Entry} instances to insert or update.\n+     * @param entries   An {@link Iterable} of {@code Map.Entry} instances to insert or update.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk4MTY1Mg==", "bodyText": "The problem is that using @link here throws a warning (the same as in the other point in which this change is done). I suspect that is related to the visibility of that inner class.", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r467981652", "createdAt": "2020-08-10T15:23:29Z", "author": {"login": "RaulGracia"}, "path": "client/src/main/java/io/pravega/client/tables/KeyValueTable.java", "diffHunk": "@@ -142,7 +142,7 @@\n      * into this {@link KeyValueTable}. All changes are performed atomically (either all or none will be accepted).\n      *\n      * @param keyFamily The Key Family for the all provided Table Entries.\n-     * @param entries   An {@link Iterable} of {@link Map.Entry} instances to insert or update.\n+     * @param entries   An {@link Iterable} of {@code Map.Entry} instances to insert or update.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NDQ4Nw=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2OTAwMg==", "bodyText": "That is a public nested interface in the JDK. It's not a private class.", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r468069002", "createdAt": "2020-08-10T17:38:19Z", "author": {"login": "andreipaduroiu"}, "path": "client/src/main/java/io/pravega/client/tables/KeyValueTable.java", "diffHunk": "@@ -142,7 +142,7 @@\n      * into this {@link KeyValueTable}. All changes are performed atomically (either all or none will be accepted).\n      *\n      * @param keyFamily The Key Family for the all provided Table Entries.\n-     * @param entries   An {@link Iterable} of {@link Map.Entry} instances to insert or update.\n+     * @param entries   An {@link Iterable} of {@code Map.Entry} instances to insert or update.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NDQ4Nw=="}, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzNzI0OQ==", "bodyText": "Fixed by adding the complete name to the class.", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r469337249", "createdAt": "2020-08-12T15:16:46Z", "author": {"login": "RaulGracia"}, "path": "client/src/main/java/io/pravega/client/tables/KeyValueTable.java", "diffHunk": "@@ -142,7 +142,7 @@\n      * into this {@link KeyValueTable}. All changes are performed atomically (either all or none will be accepted).\n      *\n      * @param keyFamily The Key Family for the all provided Table Entries.\n-     * @param entries   An {@link Iterable} of {@link Map.Entry} instances to insert or update.\n+     * @param entries   An {@link Iterable} of {@code Map.Entry} instances to insert or update.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NDQ4Nw=="}, "originalCommit": null, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzgxMzMyOnYy", "diffSide": "RIGHT", "path": "common/src/main/java/io/pravega/common/util/AbstractBufferView.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNToxMzo1OVrOG-S8DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDozNTowNVrOG_kMwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NTE4MQ==", "bodyText": "These should all be @link.", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r467975181", "createdAt": "2020-08-10T15:13:59Z", "author": {"login": "andreipaduroiu"}, "path": "common/src/main/java/io/pravega/common/util/AbstractBufferView.java", "diffHunk": "@@ -79,7 +79,7 @@ public boolean equals(BufferView other) {\n     protected static abstract class AbstractReader implements BufferView.Reader {\n         /**\n          * {@inheritDoc}\n-         * Default implementation for {@link Reader#readInt()}. Derived classes should make every effort to override this\n+         * Default implementation for {@code Reader#readInt()}. Derived classes should make every effort to override this", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk4MjM0Ng==", "bodyText": "The problem is that using @link here throws a warning. I will investigate a bit more what alternatives we have here.", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r467982346", "createdAt": "2020-08-10T15:24:34Z", "author": {"login": "RaulGracia"}, "path": "common/src/main/java/io/pravega/common/util/AbstractBufferView.java", "diffHunk": "@@ -79,7 +79,7 @@ public boolean equals(BufferView other) {\n     protected static abstract class AbstractReader implements BufferView.Reader {\n         /**\n          * {@inheritDoc}\n-         * Default implementation for {@link Reader#readInt()}. Derived classes should make every effort to override this\n+         * Default implementation for {@code Reader#readInt()}. Derived classes should make every effort to override this", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NTE4MQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2OTE1NQ==", "bodyText": "What does the warning say?", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r468069155", "createdAt": "2020-08-10T17:38:33Z", "author": {"login": "andreipaduroiu"}, "path": "common/src/main/java/io/pravega/common/util/AbstractBufferView.java", "diffHunk": "@@ -79,7 +79,7 @@ public boolean equals(BufferView other) {\n     protected static abstract class AbstractReader implements BufferView.Reader {\n         /**\n          * {@inheritDoc}\n-         * Default implementation for {@link Reader#readInt()}. Derived classes should make every effort to override this\n+         * Default implementation for {@code Reader#readInt()}. Derived classes should make every effort to override this", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NTE4MQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA2OTQwNA==", "bodyText": "Reader is the parent interface of this class and readInt is a method on it.", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r468069404", "createdAt": "2020-08-10T17:39:04Z", "author": {"login": "andreipaduroiu"}, "path": "common/src/main/java/io/pravega/common/util/AbstractBufferView.java", "diffHunk": "@@ -79,7 +79,7 @@ public boolean equals(BufferView other) {\n     protected static abstract class AbstractReader implements BufferView.Reader {\n         /**\n          * {@inheritDoc}\n-         * Default implementation for {@link Reader#readInt()}. Derived classes should make every effort to override this\n+         * Default implementation for {@code Reader#readInt()}. Derived classes should make every effort to override this", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NTE4MQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwMjAxMw==", "bodyText": "pravega/common/build/delombok/io/pravega/common/util/AbstractBufferView.java:86: warning - Tag @link: reference not found: Reader#readInt()\n\nI have also tried to use @see, but it seems that cannot be used in inline documentation (another warning).", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r469302013", "createdAt": "2020-08-12T14:28:45Z", "author": {"login": "RaulGracia"}, "path": "common/src/main/java/io/pravega/common/util/AbstractBufferView.java", "diffHunk": "@@ -79,7 +79,7 @@ public boolean equals(BufferView other) {\n     protected static abstract class AbstractReader implements BufferView.Reader {\n         /**\n          * {@inheritDoc}\n-         * Default implementation for {@link Reader#readInt()}. Derived classes should make every effort to override this\n+         * Default implementation for {@code Reader#readInt()}. Derived classes should make every effort to override this", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NTE4MQ=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMwNjU2MQ==", "bodyText": "Found the issue, it should be written as: {@link BufferView.Reader#readInt()}", "url": "https://github.com/pravega/pravega/pull/5032#discussion_r469306561", "createdAt": "2020-08-12T14:35:05Z", "author": {"login": "RaulGracia"}, "path": "common/src/main/java/io/pravega/common/util/AbstractBufferView.java", "diffHunk": "@@ -79,7 +79,7 @@ public boolean equals(BufferView other) {\n     protected static abstract class AbstractReader implements BufferView.Reader {\n         /**\n          * {@inheritDoc}\n-         * Default implementation for {@link Reader#readInt()}. Derived classes should make every effort to override this\n+         * Default implementation for {@code Reader#readInt()}. Derived classes should make every effort to override this", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk3NTE4MQ=="}, "originalCommit": null, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4846, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}