{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMzExNjA1", "number": 5156, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNToyMjozOFrOEhgrMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNToyMjozOFrOEhgrMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNTczODA4OnYy", "diffSide": "LEFT", "path": "segmentstore/server/src/test/java/io/pravega/segmentstore/server/tables/TableCompactorTests.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNToyMjozOFrOHO3HMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzo0NDoyNVrOHO6xkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0NTA3Mw==", "bodyText": "probably you can drop expectedCopyOnReadCount variable", "url": "https://github.com/pravega/pravega/pull/5156#discussion_r485345073", "createdAt": "2020-09-09T05:22:38Z", "author": {"login": "eolivelli"}, "path": "segmentstore/server/src/test/java/io/pravega/segmentstore/server/tables/TableCompactorTests.java", "diffHunk": "@@ -273,9 +273,6 @@ private void testCompaction(int readLength) {\n         // In the real world, the IndexWriter will readjust this number as appropriate when reindexing these values.\n         Assert.assertEquals(\"Expecting TOTAL_ENTRY_COUNT to be 0 after a full compaction.\",\n                 0, context.indexWriter.getTotalEntryCount(context.segmentMetadata));\n-\n-        Assert.assertEquals(\"Unexpected number of candidate reads from the segment with copy-on-read enabled.\",\n-                expectedCopyOnReadCount, context.segment.getCopyOnReadCount());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b36ecc75f9b9de3f7a7fab86e06f279ac9495b5e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQwMzY2Mg==", "bodyText": "Thanks @eolivelli, we couldn't address this comment as we received instructions to cut the 0.8 RC branch in the next hours (the PR author is not likely to be able to address that within this time frame). We will address your comment anyway in 0.9, if this works for you.", "url": "https://github.com/pravega/pravega/pull/5156#discussion_r485403662", "createdAt": "2020-09-09T07:41:55Z", "author": {"login": "RaulGracia"}, "path": "segmentstore/server/src/test/java/io/pravega/segmentstore/server/tables/TableCompactorTests.java", "diffHunk": "@@ -273,9 +273,6 @@ private void testCompaction(int readLength) {\n         // In the real world, the IndexWriter will readjust this number as appropriate when reindexing these values.\n         Assert.assertEquals(\"Expecting TOTAL_ENTRY_COUNT to be 0 after a full compaction.\",\n                 0, context.indexWriter.getTotalEntryCount(context.segmentMetadata));\n-\n-        Assert.assertEquals(\"Unexpected number of candidate reads from the segment with copy-on-read enabled.\",\n-                expectedCopyOnReadCount, context.segment.getCopyOnReadCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0NTA3Mw=="}, "originalCommit": {"oid": "b36ecc75f9b9de3f7a7fab86e06f279ac9495b5e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQwNTA3Mw==", "bodyText": "@RaulGracia\nGood for me. it is not a big deal to leave or drop such useless variable.\nIt is also weird that spotbugs did not catch the dead local store.\nI thought we were running spotbugs even against tests.", "url": "https://github.com/pravega/pravega/pull/5156#discussion_r485405073", "createdAt": "2020-09-09T07:44:25Z", "author": {"login": "eolivelli"}, "path": "segmentstore/server/src/test/java/io/pravega/segmentstore/server/tables/TableCompactorTests.java", "diffHunk": "@@ -273,9 +273,6 @@ private void testCompaction(int readLength) {\n         // In the real world, the IndexWriter will readjust this number as appropriate when reindexing these values.\n         Assert.assertEquals(\"Expecting TOTAL_ENTRY_COUNT to be 0 after a full compaction.\",\n                 0, context.indexWriter.getTotalEntryCount(context.segmentMetadata));\n-\n-        Assert.assertEquals(\"Unexpected number of candidate reads from the segment with copy-on-read enabled.\",\n-                expectedCopyOnReadCount, context.segment.getCopyOnReadCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM0NTA3Mw=="}, "originalCommit": {"oid": "b36ecc75f9b9de3f7a7fab86e06f279ac9495b5e"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4683, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}