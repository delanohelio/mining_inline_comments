{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4Mzk1OTg1", "number": 4991, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjoxMDoxNVrOETOYUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjoxMDoxNVrOETOYUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NTk0MDAxOnYy", "diffSide": "RIGHT", "path": "controller/src/main/java/io/pravega/controller/task/Stream/StreamMetadataTasks.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjoxMDoxNVrOG41gOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxMjozMjo1NVrOG42Q0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI1MDA0Mw==", "bodyText": "nit: Could not find truncation record seems negative.\nI would reword it to something along the lines of - No suitable truncation record was found that satisfied retention policy.", "url": "https://github.com/pravega/pravega/pull/4991#discussion_r462250043", "createdAt": "2020-07-29T12:10:15Z", "author": {"login": "shiveshr"}, "path": "controller/src/main/java/io/pravega/controller/task/Stream/StreamMetadataTasks.java", "diffHunk": "@@ -321,27 +321,32 @@ public void initializeStreamWriters(final EventStreamClientFactory clientFactory\n \n     private CompletableFuture<Void> truncate(String scope, String stream, RetentionPolicy policy, OperationContext context,\n                                              RetentionSet retentionSet, StreamCutRecord newRecord, long recordingTime, long requestId) {\n-        return findTruncationRecord(policy, retentionSet, newRecord, recordingTime)\n-                .map(record -> streamMetadataStore.getStreamCutRecord(scope, stream, record, context, executor)\n-                        .thenCompose(streamCutRecord -> startTruncation(scope, stream, streamCutRecord.getStreamCut(), context, requestId))\n-                        .thenCompose(started -> {\n-                            if (started) {\n-                                return streamMetadataStore.deleteStreamCutBefore(scope, stream, record, context, executor);\n+        Optional<StreamCutReferenceRecord> truncationRecord = findTruncationRecord(policy, retentionSet, newRecord, recordingTime);\n+        if (!truncationRecord.isPresent()) {\n+            log.info(\"Could not find truncation record for stream {}/{}\", scope, stream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fdc6300668e8b86dadf4b5f3732114360827231"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI2MjQ4Mw==", "bodyText": "Ok.", "url": "https://github.com/pravega/pravega/pull/4991#discussion_r462262483", "createdAt": "2020-07-29T12:32:55Z", "author": {"login": "pbelgundi"}, "path": "controller/src/main/java/io/pravega/controller/task/Stream/StreamMetadataTasks.java", "diffHunk": "@@ -321,27 +321,32 @@ public void initializeStreamWriters(final EventStreamClientFactory clientFactory\n \n     private CompletableFuture<Void> truncate(String scope, String stream, RetentionPolicy policy, OperationContext context,\n                                              RetentionSet retentionSet, StreamCutRecord newRecord, long recordingTime, long requestId) {\n-        return findTruncationRecord(policy, retentionSet, newRecord, recordingTime)\n-                .map(record -> streamMetadataStore.getStreamCutRecord(scope, stream, record, context, executor)\n-                        .thenCompose(streamCutRecord -> startTruncation(scope, stream, streamCutRecord.getStreamCut(), context, requestId))\n-                        .thenCompose(started -> {\n-                            if (started) {\n-                                return streamMetadataStore.deleteStreamCutBefore(scope, stream, record, context, executor);\n+        Optional<StreamCutReferenceRecord> truncationRecord = findTruncationRecord(policy, retentionSet, newRecord, recordingTime);\n+        if (!truncationRecord.isPresent()) {\n+            log.info(\"Could not find truncation record for stream {}/{}\", scope, stream);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI1MDA0Mw=="}, "originalCommit": {"oid": "9fdc6300668e8b86dadf4b5f3732114360827231"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4823, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}