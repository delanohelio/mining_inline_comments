{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMDk4ODY3", "number": 4812, "title": "Issue 4811: Replace object-json mapping library for JWT", "bodyText": "Change log description\nReplaces Gson with Jackson Databind, in order to avoid mysterious version conflicts caused by explicitly added Gson dependency and implicitly brought in transitively by third-party libraries.\nPurpose of the change\nFixes #4811\nWhat the code does\nReplaces usage of Gson with Jackson Databind.\nHow to verify it\nAll unit, integration, and system tests pass.", "createdAt": "2020-05-26T09:45:52Z", "url": "https://github.com/pravega/pravega/pull/4812", "merged": true, "mergeCommit": {"oid": "37614da10725e0172ff0d3b8bc2e9ea81795258a"}, "closed": true, "closedAt": "2020-05-27T06:16:34Z", "author": {"login": "ravisharda"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclBa5lAH2gAyNDIzMDk4ODY3OmQ2NzYxMzBmNDdmOGNhNGRhNmRjZGJiZTFhMDAzMDhmMGJlYTJmMGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABclQ4_ygFqTQxODgzNjI5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d676130f47f8ca4da6dcdbbe1a00308f0bea2f0f", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/d676130f47f8ca4da6dcdbbe1a00308f0bea2f0f", "committedDate": "2020-05-26T09:40:34Z", "message": "Replace Gson with Jackson\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MTY2NTMw", "url": "https://github.com/pravega/pravega/pull/4812#pullrequestreview-418166530", "createdAt": "2020-05-26T10:26:16Z", "commit": {"oid": "d676130f47f8ca4da6dcdbbe1a00308f0bea2f0f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDoyNjoxNlrOGaYHYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMDoyNjoxNlrOGaYHYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDMxMTI2NQ==", "bodyText": "I suggest  you to give a try to https://github.com/FasterXML/jackson-jr\njackson-databind is full of CVEs due to the richness of features.\nin ZooKeeper community we are evaluating to drop it, as many times we have to perform upgrades.\nI don't know if in Pravega project there are automatic checks about CVEs but as far as I know many open source project consumers take great care of this stuff\npersonally I have never tried jackson-jr, but it may be worth to take a look", "url": "https://github.com/pravega/pravega/pull/4812#discussion_r430311265", "createdAt": "2020-05-26T10:26:16Z", "author": {"login": "eolivelli"}, "path": "build.gradle", "diffHunk": "@@ -268,7 +268,7 @@ project('test:testcommon') {\n         compile group: 'commons-io', name: 'commons-io', version: commonsioVersion\n         compile group: 'io.netty', name: 'netty-all', version: nettyVersion\n         compile group: 'org.apache.curator', name: 'curator-test', version: apacheCuratorVersion, withoutLogger\n-        compile group: 'com.google.code.gson', name: 'gson', version: gsonVersion\n+        compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jacksonVersion", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d676130f47f8ca4da6dcdbbe1a00308f0bea2f0f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "023537f0a445c403c8ec3fb4242228f7c351c2ba", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/023537f0a445c403c8ec3fb4242228f7c351c2ba", "committedDate": "2020-05-26T11:21:25Z", "message": "Fix a test, and prevent non-null properties from getting serialized\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4MjY0NzM4", "url": "https://github.com/pravega/pravega/pull/4812#pullrequestreview-418264738", "createdAt": "2020-05-26T12:51:31Z", "commit": {"oid": "023537f0a445c403c8ec3fb4242228f7c351c2ba"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMjo1MTozMVrOGacwtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxMzowMToxNlrOGadJJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4NzM4Mg==", "bodyText": "ObjectMapper can be a singleton, you will save a few allocations and CPU cycles, as ObjectMapper caches metadata\nprivate static final ObjectMapper MAPPER = new ObjectMapper();", "url": "https://github.com/pravega/pravega/pull/4812#discussion_r430387382", "createdAt": "2020-05-26T12:51:31Z", "author": {"login": "eolivelli"}, "path": "test/testcommon/src/main/java/io/pravega/test/common/JwtBody.java", "diffHunk": "@@ -9,44 +9,62 @@\n  */\n package io.pravega.test.common;\n \n-import com.google.gson.annotations.SerializedName;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n import lombok.Builder;\n import lombok.Getter;\n import lombok.Setter;\n+import lombok.SneakyThrows;\n+\n+import java.io.StringReader;\n \n /**\n  * Represents a JWT body for serialization/deserialization purposes.\n  */\n @Builder\n @Getter\n @Setter\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n public class JwtBody {\n \n     // See https://tools.ietf.org/html/rfc7519#page-9 for additional details about these fields.\n \n     /**\n      * The \"sub\" (for subject) claim of the JWT body.\n      */\n-    @SerializedName(\"sub\")\n+    @JsonProperty(\"sub\")\n     private final String subject;\n \n     /**\n      * The \"aud\" (for audience) claim of the JWT body.\n      */\n-    @SerializedName(\"aud\")\n+    @JsonProperty(\"aud\")\n     private final String audience;\n \n     /**\n      * The \"iat\" (for issued at) claim of the JWT body.\n      */\n-    @SerializedName(\"iat\")\n+    @JsonProperty(\"iat\")\n     private final Long issuedAtTime;\n \n     /**\n      * The \"exp\" (for expiration time) claim of the JWT body. It identifies the time on or after which the JWT must not\n      * be accepted for processing. The value represents seconds past 1970-01-01 00:00:00Z.\n      */\n-    @SerializedName(\"exp\")\n+    @JsonProperty(\"exp\")\n     private final Long expirationTime;\n-}\n \n+    @SneakyThrows\n+    @Override\n+    public String toString() {\n+        return new ObjectMapper().writeValueAsString(this);\n+    }\n+\n+    @SneakyThrows\n+    public static JwtBody fromJson(String json) {\n+        try (StringReader jsonReader = new StringReader(json)) {\n+            return new ObjectMapper().readValue(jsonReader, JwtBody.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023537f0a445c403c8ec3fb4242228f7c351c2ba"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4ODIyMA==", "bodyText": "nit (this is only a test):\njwtBody.toString().getBytes(StandardCharsets.US_ASCII)", "url": "https://github.com/pravega/pravega/pull/4812#discussion_r430388220", "createdAt": "2020-05-26T12:52:54Z", "author": {"login": "eolivelli"}, "path": "common/src/test/java/io/pravega/common/security/JwtUtilsTest.java", "diffHunk": "@@ -29,8 +31,9 @@ public void testExtractExpirationTimeReturnsNullIfExpInBodyIsNotSet() {\n         //        \"aud\": \"segmentstore\",\n         //        \"iat\": 1516239022\n         //     }\n+        JwtBody jwtBody = JwtBody.builder().subject(\"1234567890\").audience(\"segmentstore\").issuedAtTime(1516239022L).build();\n         String token = String.format(\"%s.%s.%s\", \"base64-encoded-header\",\n-                JwtBody.builder().subject(\"1234567890\").audience(\"segmentstore\").issuedAtTime(1516239022L).build(),\n+                Base64.getEncoder().encodeToString(jwtBody.toString().getBytes()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023537f0a445c403c8ec3fb4242228f7c351c2ba"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM4OTIwNA==", "bodyText": "what about:\njson.getBytes(StandardCharsets-UTF-8)", "url": "https://github.com/pravega/pravega/pull/4812#discussion_r430389204", "createdAt": "2020-05-26T12:54:28Z", "author": {"login": "eolivelli"}, "path": "test/testcommon/src/main/java/io/pravega/test/common/JwtTestUtils.java", "diffHunk": "@@ -26,7 +24,7 @@\n      * @return a Base64 encoded JSON representing the specified {@code jwtBodyPart}\n      */\n     public static String toCompact(JwtBody jwtBodyPart) {\n-        String json = new Gson().toJson(jwtBodyPart);\n+        String json = jwtBodyPart.toString();\n         return Base64.getEncoder().encodeToString(json.getBytes());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023537f0a445c403c8ec3fb4242228f7c351c2ba"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM5MzE1Nw==", "bodyText": "no need for a StringReader", "url": "https://github.com/pravega/pravega/pull/4812#discussion_r430393157", "createdAt": "2020-05-26T13:00:33Z", "author": {"login": "eolivelli"}, "path": "test/testcommon/src/main/java/io/pravega/test/common/JwtBody.java", "diffHunk": "@@ -9,44 +9,62 @@\n  */\n package io.pravega.test.common;\n \n-import com.google.gson.annotations.SerializedName;\n+import com.fasterxml.jackson.annotation.JsonInclude;\n+import com.fasterxml.jackson.annotation.JsonProperty;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n import lombok.Builder;\n import lombok.Getter;\n import lombok.Setter;\n+import lombok.SneakyThrows;\n+\n+import java.io.StringReader;\n \n /**\n  * Represents a JWT body for serialization/deserialization purposes.\n  */\n @Builder\n @Getter\n @Setter\n+@JsonInclude(JsonInclude.Include.NON_NULL)\n public class JwtBody {\n \n     // See https://tools.ietf.org/html/rfc7519#page-9 for additional details about these fields.\n \n     /**\n      * The \"sub\" (for subject) claim of the JWT body.\n      */\n-    @SerializedName(\"sub\")\n+    @JsonProperty(\"sub\")\n     private final String subject;\n \n     /**\n      * The \"aud\" (for audience) claim of the JWT body.\n      */\n-    @SerializedName(\"aud\")\n+    @JsonProperty(\"aud\")\n     private final String audience;\n \n     /**\n      * The \"iat\" (for issued at) claim of the JWT body.\n      */\n-    @SerializedName(\"iat\")\n+    @JsonProperty(\"iat\")\n     private final Long issuedAtTime;\n \n     /**\n      * The \"exp\" (for expiration time) claim of the JWT body. It identifies the time on or after which the JWT must not\n      * be accepted for processing. The value represents seconds past 1970-01-01 00:00:00Z.\n      */\n-    @SerializedName(\"exp\")\n+    @JsonProperty(\"exp\")\n     private final Long expirationTime;\n-}\n \n+    @SneakyThrows\n+    @Override\n+    public String toString() {\n+        return new ObjectMapper().writeValueAsString(this);\n+    }\n+\n+    @SneakyThrows\n+    public static JwtBody fromJson(String json) {\n+        try (StringReader jsonReader = new StringReader(json)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023537f0a445c403c8ec3fb4242228f7c351c2ba"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDM5MzYzNw==", "bodyText": "can this 'toString()' return a null value ?", "url": "https://github.com/pravega/pravega/pull/4812#discussion_r430393637", "createdAt": "2020-05-26T13:01:16Z", "author": {"login": "eolivelli"}, "path": "test/testcommon/src/test/java/io/pravega/test/common/JwtBodyTest.java", "diffHunk": "@@ -25,15 +24,13 @@ public void testSerialize() {\n                 .issuedAtTime(Instant.now().getEpochSecond())\n                 .expirationTime(Instant.now().plusSeconds(50).getEpochSecond())\n                 .build();\n-\n-        String json = new Gson().toJson(jwtBody);\n-        assertNotNull(json);\n+        assertNotNull(jwtBody.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "023537f0a445c403c8ec3fb4242228f7c351c2ba"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27f2b04a7dcc913c347c13fff2fbf626bf118183", "author": {"user": {"login": "ravisharda", "name": "Ravi Sharda"}}, "url": "https://github.com/pravega/pravega/commit/27f2b04a7dcc913c347c13fff2fbf626bf118183", "committedDate": "2020-05-26T15:55:01Z", "message": "Address review comments\n\nSigned-off-by: Ravi Sharda <ravi.sharda@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4NDY4NTk2", "url": "https://github.com/pravega/pravega/pull/4812#pullrequestreview-418468596", "createdAt": "2020-05-26T16:24:19Z", "commit": {"oid": "27f2b04a7dcc913c347c13fff2fbf626bf118183"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4ODMyMjQy", "url": "https://github.com/pravega/pravega/pull/4812#pullrequestreview-418832242", "createdAt": "2020-05-27T03:26:23Z", "commit": {"oid": "27f2b04a7dcc913c347c13fff2fbf626bf118183"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMzoyNjoyM1rOGa4MVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yN1QwMzoyNjoyM1rOGa4MVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDgzNjgyMQ==", "bodyText": "StandardCharsets.UTF8", "url": "https://github.com/pravega/pravega/pull/4812#discussion_r430836821", "createdAt": "2020-05-27T03:26:23Z", "author": {"login": "shrids"}, "path": "common/src/test/java/io/pravega/common/security/JwtUtilsTest.java", "diffHunk": "@@ -29,8 +32,9 @@ public void testExtractExpirationTimeReturnsNullIfExpInBodyIsNotSet() {\n         //        \"aud\": \"segmentstore\",\n         //        \"iat\": 1516239022\n         //     }\n+        JwtBody jwtBody = JwtBody.builder().subject(\"1234567890\").audience(\"segmentstore\").issuedAtTime(1516239022L).build();\n         String token = String.format(\"%s.%s.%s\", \"base64-encoded-header\",\n-                JwtBody.builder().subject(\"1234567890\").audience(\"segmentstore\").issuedAtTime(1516239022L).build(),\n+                Base64.getEncoder().encodeToString(jwtBody.toString().getBytes(StandardCharsets.US_ASCII)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "27f2b04a7dcc913c347c13fff2fbf626bf118183"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE4ODM2Mjkx", "url": "https://github.com/pravega/pravega/pull/4812#pullrequestreview-418836291", "createdAt": "2020-05-27T03:42:01Z", "commit": {"oid": "27f2b04a7dcc913c347c13fff2fbf626bf118183"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3497, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}