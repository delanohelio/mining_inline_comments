{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODE4NTIw", "number": 4602, "title": "Issue 4601: (RollingStorage/ExtendedS3) S3 client consumes whole InputStream and causes java.lang.IllegalArgumentException", "bodyText": "Change log description\nS3 client consumes whole InputStream and causes java.lang.IllegalArgumentException.\nWith this change, RollingStorage.write sends in BoundedInputStream to storage adapters to prevent reading more data.\nAlso, S3 client mocks simulate this InvalidRange behavior to match how real ECS bahaves.\nPurpose of the change\nFixes #4601\nWhat the code does\nRollingStorage.write sends in BoundedInputStream to storage adapters to prevent reading more data.\nS3 client mocks simulate this range behavior to match how real ECS bahaves.\nHow to verify it\n(Optional: steps to verify that the changes are effective)", "createdAt": "2020-03-09T21:06:06Z", "url": "https://github.com/pravega/pravega/pull/4602", "merged": true, "mergeCommit": {"oid": "ec428ff982d31e08637b14fe1eddb8b118df6db8"}, "closed": true, "closedAt": "2020-03-10T01:20:30Z", "author": {"login": "sachin-j-joshi"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMCSJIAH2gAyMzg1ODE4NTIwOjM1NTllNmE1YjEwNjZhNTcxNDE5NGI3MzBlNWNlZGVhYWVlODJjNzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcMGw5qgH2gAyMzg1ODE4NTIwOmU5NzJiY2E1YmUwOTE3Yjc3NTUzYWNkZmFhN2I1ODk4ODFiNTFlNzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3559e6a5b1066a5714194b730e5cedeaaee82c79", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/3559e6a5b1066a5714194b730e5cedeaaee82c79", "committedDate": "2020-03-09T18:32:48Z", "message": "Issue 4601 - RollingStorage now sends a BoundedInputStream for write because S3Client consumes entire InputStream.\n\nSigned-off-by: Sachin Joshi <sachin.joshi@emc.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7bc1d0882e339cb681d5d1ba945b3b70d66294d6", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/7bc1d0882e339cb681d5d1ba945b3b70d66294d6", "committedDate": "2020-03-09T20:37:32Z", "message": "Issue 4601 - Fix S3ProxyImpl to match ECS bahavior for InvalidRange.\n\nSigned-off-by: Sachin Joshi <sachin.joshi@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTMxMzAx", "url": "https://github.com/pravega/pravega/pull/4602#pullrequestreview-371531301", "createdAt": "2020-03-09T21:10:11Z", "commit": {"oid": "7bc1d0882e339cb681d5d1ba945b3b70d66294d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMToxMDoxMVrOFz5exw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMToxMDoxMVrOFz5exw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2MzQ2Mw==", "bodyText": "Why remove this? This is exactly what we were trying to test for...", "url": "https://github.com/pravega/pravega/pull/4602#discussion_r389963463", "createdAt": "2020-03-09T21:10:11Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/storage/src/test/java/io/pravega/segmentstore/storage/StorageTestBase.java", "diffHunk": "@@ -406,8 +406,7 @@ private String getSegmentName(int id, String context) {\n             for (int j = 0; j < APPENDS_PER_SEGMENT; j++) {\n                 byte[] writeData = String.format(APPEND_FORMAT, segmentName, j).getBytes();\n \n-                // Append some garbage at the end to make sure we only write as much as instructed, and not the whole InputStream.\n-                val dataStream = new SequenceInputStream(new ByteArrayInputStream(writeData), new ByteArrayInputStream(extraData));\n+                val dataStream = new ByteArrayInputStream(writeData);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bc1d0882e339cb681d5d1ba945b3b70d66294d6"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTQ4Mzgw", "url": "https://github.com/pravega/pravega/pull/4602#pullrequestreview-371548380", "createdAt": "2020-03-09T21:40:34Z", "commit": {"oid": "7bc1d0882e339cb681d5d1ba945b3b70d66294d6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo0MDozNFrOFz6VAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo0MDozNFrOFz6VAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk3NzM0Nw==", "bodyText": "Given that these classes will get rewritten anyway with PDP-34 and that even right now, nobody accesses them directly except via RollingStorage, I think we should be fine with this change.", "url": "https://github.com/pravega/pravega/pull/4602#discussion_r389977347", "createdAt": "2020-03-09T21:40:34Z", "author": {"login": "andreipaduroiu"}, "path": "segmentstore/storage/src/test/java/io/pravega/segmentstore/storage/StorageTestBase.java", "diffHunk": "@@ -406,8 +406,7 @@ private String getSegmentName(int id, String context) {\n             for (int j = 0; j < APPENDS_PER_SEGMENT; j++) {\n                 byte[] writeData = String.format(APPEND_FORMAT, segmentName, j).getBytes();\n \n-                // Append some garbage at the end to make sure we only write as much as instructed, and not the whole InputStream.\n-                val dataStream = new SequenceInputStream(new ByteArrayInputStream(writeData), new ByteArrayInputStream(extraData));\n+                val dataStream = new ByteArrayInputStream(writeData);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2MzQ2Mw=="}, "originalCommit": {"oid": "7bc1d0882e339cb681d5d1ba945b3b70d66294d6"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTUzNTA4", "url": "https://github.com/pravega/pravega/pull/4602#pullrequestreview-371553508", "createdAt": "2020-03-09T21:50:31Z", "commit": {"oid": "7bc1d0882e339cb681d5d1ba945b3b70d66294d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1MDozMVrOFz6mGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1MDozMVrOFz6mGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4MTcyMQ==", "bodyText": "Here we have BoundedInputStream and the Length of Inputstream (or length to be written) - both are used to control the boundary? Not very clear about the relationship between the two - who's taking priority if the two values conflicting?", "url": "https://github.com/pravega/pravega/pull/4602#discussion_r389981721", "createdAt": "2020-03-09T21:50:31Z", "author": {"login": "kevinhan88"}, "path": "segmentstore/storage/src/main/java/io/pravega/segmentstore/storage/rolling/RollingStorage.java", "diffHunk": "@@ -321,7 +324,13 @@ public void write(SegmentHandle handle, long offset, InputStream data, int lengt\n             int writeLength = (int) Math.min(length - bytesWritten, h.getRollingPolicy().getMaxLength() - last.getLength());\n             assert writeLength > 0 : \"non-positive write length\";\n             long chunkOffset = offset + bytesWritten - last.getStartOffset();\n-            this.baseStorage.write(h.getActiveChunkHandle(), chunkOffset, data, writeLength);\n+\n+            // Use a BoundedInputStream to ensure that the underlying storage does not try to read more (or less) data\n+            // than we instructed it to. Invoking BoundedInputStream.close() will throw an IOException if baseStorage.write()\n+            // has not read all the bytes it was supposed to.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bc1d0882e339cb681d5d1ba945b3b70d66294d6"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTU3Mjg4", "url": "https://github.com/pravega/pravega/pull/4602#pullrequestreview-371557288", "createdAt": "2020-03-09T21:57:54Z", "commit": {"oid": "7bc1d0882e339cb681d5d1ba945b3b70d66294d6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1Nzo1NFrOFz6yOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1Nzo1NFrOFz6yOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4NDgyNA==", "bodyText": "Can the 3 rollovers be reflected in the test code?", "url": "https://github.com/pravega/pravega/pull/4602#discussion_r389984824", "createdAt": "2020-03-09T21:57:54Z", "author": {"login": "kevinhan88"}, "path": "segmentstore/storage/src/test/java/io/pravega/segmentstore/storage/rolling/RollingStorageTestBase.java", "diffHunk": "@@ -123,6 +124,37 @@ public void testWriteAfterHeaderMerge() throws Exception {\n         Assert.assertEquals(\"Unexpected number of chunks created.\", 1, readHandle.chunks().size());\n     }\n \n+    @Test\n+    public void testWriteOnRollOverBoundary() throws Exception {\n+        final String segmentName = \"Segment\";\n+        final int maxLength = 3; // Really small rolling length.\n+\n+        val seq1 = \"01234\";\n+        val seq2 = \"56789\";\n+        val totalWriteLength = seq1.length() + seq2.length();\n+\n+        @Cleanup\n+        val s = createStorage();\n+        s.initialize(1);\n+\n+        val writeHandle = s.create(segmentName, new SegmentRollingPolicy(maxLength), TIMEOUT)\n+                .thenCompose(v -> s.openWrite(segmentName)).join();\n+\n+        val byteInputStream1 = new ByteArrayInputStream(seq1.getBytes());\n+        val byteInputStream2 = new ByteArrayInputStream(seq2.getBytes());\n+\n+        val sequenceInputStream = new SequenceInputStream(byteInputStream1, byteInputStream2);\n+\n+        // This write should cause 3 rollovers.\n+        s.write(writeHandle, 0, sequenceInputStream, totalWriteLength, TIMEOUT).join();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bc1d0882e339cb681d5d1ba945b3b70d66294d6"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f83d454ccea823e45e3cebba71096f30b9f07892", "author": {"user": {"login": "sachin-j-joshi", "name": "Sachin Jayant Joshi"}}, "url": "https://github.com/pravega/pravega/commit/f83d454ccea823e45e3cebba71096f30b9f07892", "committedDate": "2020-03-09T22:49:46Z", "message": "Issue 4601 - Additional checks in unit tests to check proper rollover during test.\n\nSigned-off-by: Sachin Joshi <sachin.joshi@emc.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNTgxNDc2", "url": "https://github.com/pravega/pravega/pull/4602#pullrequestreview-371581476", "createdAt": "2020-03-09T22:55:47Z", "commit": {"oid": "f83d454ccea823e45e3cebba71096f30b9f07892"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e972bca5be0917b77553acdfaa7b589881b51e76", "author": {"user": {"login": "andreipaduroiu", "name": "Andrei Paduroiu"}}, "url": "https://github.com/pravega/pravega/commit/e972bca5be0917b77553acdfaa7b589881b51e76", "committedDate": "2020-03-09T23:46:01Z", "message": "Merge branch 'master' into issue-4601-S3-Client-consumes-entire-inputstream"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3621, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}