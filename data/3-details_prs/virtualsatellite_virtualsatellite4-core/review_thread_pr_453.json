{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMjY3MzY4", "number": 453, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDoxMzoyMFrODtjSjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjoyNjoyNlrODt7dbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDkwNzAwOnYy", "diffSide": "RIGHT", "path": "maven/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDoxMzoyMFrOF_Cnkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTowNTo0OVrOF_FEnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0NzUwNw==", "bodyText": "Do these Versions comply with the version used in our Eclipse IDE?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401647507", "createdAt": "2020-04-01T14:13:20Z", "author": {"login": "PhilMFischer"}, "path": "maven/pom.xml", "diffHunk": "@@ -98,17 +98,18 @@\n \t\t\t\t\t<plugin>\r\n \t\t\t\t\t\t<groupId>com.github.spotbugs</groupId>\r\n \t\t\t\t\t\t<artifactId>spotbugs-maven-plugin</artifactId>\r\n-\t\t\t\t\t\t<version>3.1.3</version>\r\n+\t\t\t\t\t\t<version>3.1.12.2</version>\r\n \t\t\t\t\t\t<dependencies>\r\n \t\t\t\t\t\t\t<dependency>\r\n \t\t\t\t\t\t\t\t<groupId>com.github.spotbugs</groupId>\r\n \t\t\t\t\t\t\t\t<artifactId>spotbugs</artifactId>\r\n-\t\t\t\t\t\t\t\t<version>3.1.3</version>\r\n+\t\t\t\t\t\t\t\t<version>4.0.1</version>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4NzcwOQ==", "bodyText": "Yes, assuming one has the newest built eclipse ide.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401687709", "createdAt": "2020-04-01T15:05:49Z", "author": {"login": "SaMuellerDLR"}, "path": "maven/pom.xml", "diffHunk": "@@ -98,17 +98,18 @@\n \t\t\t\t\t<plugin>\r\n \t\t\t\t\t\t<groupId>com.github.spotbugs</groupId>\r\n \t\t\t\t\t\t<artifactId>spotbugs-maven-plugin</artifactId>\r\n-\t\t\t\t\t\t<version>3.1.3</version>\r\n+\t\t\t\t\t\t<version>3.1.12.2</version>\r\n \t\t\t\t\t\t<dependencies>\r\n \t\t\t\t\t\t\t<dependency>\r\n \t\t\t\t\t\t\t\t<groupId>com.github.spotbugs</groupId>\r\n \t\t\t\t\t\t\t\t<artifactId>spotbugs</artifactId>\r\n-\t\t\t\t\t\t\t\t<version>3.1.3</version>\r\n+\t\t\t\t\t\t\t\t<version>4.0.1</version>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY0NzUwNw=="}, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDk1OTAxOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.uiengine.ui/src/de/dlr/sc/virsat/uiengine/ui/editor/snippets/AUiSnippetGenericTable.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDoyNDo0M1rOF_DIyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTowNjoyMFrOF_FGEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY1NjAxMA==", "bodyText": "// Please add a comment why the instanceof check is not needed anymore", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401656010", "createdAt": "2020-04-01T14:24:43Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.uiengine.ui/src/de/dlr/sc/virsat/uiengine/ui/editor/snippets/AUiSnippetGenericTable.java", "diffHunk": "@@ -715,7 +715,7 @@ private CategoryAssignment getSelectedCategoryAssigment(Object selectedObject) {\n \t\t\tComposedPropertyInstance selectedCpi = (ComposedPropertyInstance) selectedObject;\r\n \t\t\tATypeInstance referencedTypeInstance = selectedCpi.getTypeInstance();\r\n \r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4ODA4MQ==", "bodyText": "Instead simplified the code further since no check at all is needed here.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401688081", "createdAt": "2020-04-01T15:06:20Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.uiengine.ui/src/de/dlr/sc/virsat/uiengine/ui/editor/snippets/AUiSnippetGenericTable.java", "diffHunk": "@@ -715,7 +715,7 @@ private CategoryAssignment getSelectedCategoryAssigment(Object selectedObject) {\n \t\t\tComposedPropertyInstance selectedCpi = (ComposedPropertyInstance) selectedObject;\r\n \t\t\tATypeInstance referencedTypeInstance = selectedCpi.getTypeInstance();\r\n \r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY1NjAxMA=="}, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTAwODM2OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model/src/de/dlr/sc/virsat/model/dvlm/qudv/util/QudvUnitHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDozNDo1MlrOF_DoLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTowNjo0N1rOF_FHfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2NDA0Ng==", "bodyText": "Maybe better use try with?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401664046", "createdAt": "2020-04-01T14:34:52Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model/src/de/dlr/sc/virsat/model/dvlm/qudv/util/QudvUnitHelper.java", "diffHunk": "@@ -1231,8 +1231,11 @@ public void exportModeltoFile(SystemOfUnits systemOfUnits, String destination) t\n \t\tResource resource = new XMLResourceImpl();\r\n \t\tresource.getContents().add(systemOfUnits);\r\n \t\tFileOutputStream fileOut = new FileOutputStream(destination);\r\n-\t\tresource.save(fileOut, WRITE_OPTIONS);\r\n-\t\tfileOut.close();\r\n+\t\ttry {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4ODQ0NQ==", "bodyText": "Good idea.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401688445", "createdAt": "2020-04-01T15:06:47Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model/src/de/dlr/sc/virsat/model/dvlm/qudv/util/QudvUnitHelper.java", "diffHunk": "@@ -1231,8 +1231,11 @@ public void exportModeltoFile(SystemOfUnits systemOfUnits, String destination) t\n \t\tResource resource = new XMLResourceImpl();\r\n \t\tresource.getContents().add(systemOfUnits);\r\n \t\tFileOutputStream fileOut = new FileOutputStream(destination);\r\n-\t\tresource.save(fileOut, WRITE_OPTIONS);\r\n-\t\tfileOut.close();\r\n+\t\ttry {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2NDA0Ng=="}, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTAxMDYyOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model/src/de/dlr/sc/virsat/model/dvlm/structural/util/StructuralElementInstanceHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDozNToyMlrOF_DppA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTowOTo0NFrOF_FQYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2NDQyMA==", "bodyText": "Is it really that simple now? Why did we have so much more complicated before?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401664420", "createdAt": "2020-04-01T14:35:22Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model/src/de/dlr/sc/virsat/model/dvlm/structural/util/StructuralElementInstanceHelper.java", "diffHunk": "@@ -44,13 +44,12 @@ public StructuralElementInstanceHelper(StructuralElementInstance sei) {\n \t * \r\n \t * @return the structural element instance as the root\r\n \t */\r\n-\tpublic  ICategoryAssignmentContainer getRoot() {\r\n-\r\n-\t\tStructuralElementInstance eContainer = sei.getParent();\r\n-\t\twhile ((eContainer != null) && (eContainer.getParent() != null) && (eContainer.getParent() instanceof StructuralElementInstance)) {\r\n-\t\t\teContainer = eContainer.getParent();\r\n+\tpublic ICategoryAssignmentContainer getRoot() {\r\n+\t\tStructuralElementInstance root = sei;\r\n+\t\twhile (root.getParent() != null) {\r\n+\t\t\troot = root.getParent();\r\n \t\t}\t\r\n-\t\treturn (ICategoryAssignmentContainer) ((eContainer ==  null) ? sei : eContainer);\r\n+\t\treturn root;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY5MDcyMw==", "bodyText": "It is. As for why it was so complicated before: I guess maybe in the past getParent of a StructuralElementInstance didnt give a SEI but an ICategoryAssignmentContainer. In that case, the old implementation makes sense because some type checking is needed. But since getParent gives a SEI, removing all the type checking logic gives the simple implementation", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401690723", "createdAt": "2020-04-01T15:09:44Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model/src/de/dlr/sc/virsat/model/dvlm/structural/util/StructuralElementInstanceHelper.java", "diffHunk": "@@ -44,13 +44,12 @@ public StructuralElementInstanceHelper(StructuralElementInstance sei) {\n \t * \r\n \t * @return the structural element instance as the root\r\n \t */\r\n-\tpublic  ICategoryAssignmentContainer getRoot() {\r\n-\r\n-\t\tStructuralElementInstance eContainer = sei.getParent();\r\n-\t\twhile ((eContainer != null) && (eContainer.getParent() != null) && (eContainer.getParent() instanceof StructuralElementInstance)) {\r\n-\t\t\teContainer = eContainer.getParent();\r\n+\tpublic ICategoryAssignmentContainer getRoot() {\r\n+\t\tStructuralElementInstance root = sei;\r\n+\t\twhile (root.getParent() != null) {\r\n+\t\t\troot = root.getParent();\r\n \t\t}\t\r\n-\t\treturn (ICategoryAssignmentContainer) ((eContainer ==  null) ? sei : eContainer);\r\n+\t\treturn root;\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2NDQyMA=="}, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTAzODA5OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.extension.visualisation.ui/src/de/dlr/sc/virsat/model/extension/visualisation/ui/handler/ColorMapPropertyHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo0MTozMlrOF_D7Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTowMjowOVrOF_E5jg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2ODg5MA==", "bodyText": "Is the upfront cast in line 58 and 59 already ensuring that there is no null pointer sneaking into the IF scope?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401668890", "createdAt": "2020-04-01T14:41:32Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.extension.visualisation.ui/src/de/dlr/sc/virsat/model/extension/visualisation/ui/handler/ColorMapPropertyHandler.java", "diffHunk": "@@ -63,7 +63,7 @@ public Object execute(ExecutionEvent event) throws ExecutionException {\n \t\t\t\t\r\n \t\t\t\tif (dialog.open() == Window.OK) {\r\n \t\t\t\t\tString propertyFQN = dialog.getComparisonProjectPropertyFQN(); \r\n-\t\t\t\t\tif (vsBaseProject != null && propertyFQN != null) {\r\n+\t\t\t\t\tif (propertyFQN != null) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4NDg3OA==", "bodyText": "Yes, null instanceof SomeClass always returns false.\nhttps://stackoverflow.com/questions/2950319/is-null-check-needed-before-calling-instanceof", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401684878", "createdAt": "2020-04-01T15:02:09Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.visualisation.ui/src/de/dlr/sc/virsat/model/extension/visualisation/ui/handler/ColorMapPropertyHandler.java", "diffHunk": "@@ -63,7 +63,7 @@ public Object execute(ExecutionEvent event) throws ExecutionException {\n \t\t\t\t\r\n \t\t\t\tif (dialog.open() == Window.OK) {\r\n \t\t\t\t\tString propertyFQN = dialog.getComparisonProjectPropertyFQN(); \r\n-\t\t\t\t\tif (vsBaseProject != null && propertyFQN != null) {\r\n+\t\t\t\t\tif (propertyFQN != null) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY2ODg5MA=="}, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTA3NDg2OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.calculation.test/src/de/dlr/sc/virsat/model/calculation/compute/AEquationTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo0OToxOFrOF_ESyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNToxNDozMVrOF_FelQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDk1NQ==", "bodyText": "The super user should always be deactivated after each test. Why is it removed here?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401674955", "createdAt": "2020-04-01T14:49:18Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.calculation.test/src/de/dlr/sc/virsat/model/calculation/compute/AEquationTest.java", "diffHunk": "@@ -57,34 +43,16 @@\n \tprotected EquationSectionVirSatAwareXtextResourceSet esResourceSet;\r\n \tprotected EquationSectionXtextResource esResource;\r\n \tprotected List<EObject> contents;\r\n-\tprotected EditingDomain editingDomain;\r\n-\t\r\n \t\r\n \t@Before \r\n \tpublic void setUp() throws Exception {\r\n \t\tcontents = new ArrayList<>();\r\n-\t\t\r\n \t\tUserRegistry.getInstance().setSuperUser(true);\r\n-\t\t\r\n-\t\tComposedAdapterFactory adapterFactory = new ComposedAdapterFactory(ComposedAdapterFactory.Descriptor.Registry.INSTANCE);\r\n-\t\tadapterFactory.addAdapterFactory(new DVLMResourceItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new DVLMDVLMItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new DVLMStructuralItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new GeneralItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new ConceptsItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new DVLMCategoriesItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new PropertydefinitionsItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new PropertyinstancesItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new ReflectiveItemProviderAdapterFactory());\r\n-\t\tBasicCommandStack commandStack = new BasicCommandStack() {\r\n-\t\t\t@Override\r\n-\t\t\tpublic void execute(Command command) {\r\n-\t\t\t\tcommand.execute();\r\n-\t\t\t}\r\n-\t\t};\r\n-\t\t\r\n-\t\teditingDomain = new AdapterFactoryEditingDomain(adapterFactory, commandStack, new HashMap<Resource, Boolean>());\r\n+\t}\r\n \t\r\n+\t@After\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4MzU1Nw==", "bodyText": "Also agree here, which is why I added the tearDown method to set the super user to false.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401683557", "createdAt": "2020-04-01T15:00:22Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.calculation.test/src/de/dlr/sc/virsat/model/calculation/compute/AEquationTest.java", "diffHunk": "@@ -57,34 +43,16 @@\n \tprotected EquationSectionVirSatAwareXtextResourceSet esResourceSet;\r\n \tprotected EquationSectionXtextResource esResource;\r\n \tprotected List<EObject> contents;\r\n-\tprotected EditingDomain editingDomain;\r\n-\t\r\n \t\r\n \t@Before \r\n \tpublic void setUp() throws Exception {\r\n \t\tcontents = new ArrayList<>();\r\n-\t\t\r\n \t\tUserRegistry.getInstance().setSuperUser(true);\r\n-\t\t\r\n-\t\tComposedAdapterFactory adapterFactory = new ComposedAdapterFactory(ComposedAdapterFactory.Descriptor.Registry.INSTANCE);\r\n-\t\tadapterFactory.addAdapterFactory(new DVLMResourceItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new DVLMDVLMItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new DVLMStructuralItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new GeneralItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new ConceptsItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new DVLMCategoriesItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new PropertydefinitionsItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new PropertyinstancesItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new ReflectiveItemProviderAdapterFactory());\r\n-\t\tBasicCommandStack commandStack = new BasicCommandStack() {\r\n-\t\t\t@Override\r\n-\t\t\tpublic void execute(Command command) {\r\n-\t\t\t\tcommand.execute();\r\n-\t\t\t}\r\n-\t\t};\r\n-\t\t\r\n-\t\teditingDomain = new AdapterFactoryEditingDomain(adapterFactory, commandStack, new HashMap<Resource, Boolean>());\r\n+\t}\r\n \t\r\n+\t@After\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDk1NQ=="}, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY5NDM1Nw==", "bodyText": "Oh yes i see. it god added \ud83d\ude48 .", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401694357", "createdAt": "2020-04-01T15:14:31Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.calculation.test/src/de/dlr/sc/virsat/model/calculation/compute/AEquationTest.java", "diffHunk": "@@ -57,34 +43,16 @@\n \tprotected EquationSectionVirSatAwareXtextResourceSet esResourceSet;\r\n \tprotected EquationSectionXtextResource esResource;\r\n \tprotected List<EObject> contents;\r\n-\tprotected EditingDomain editingDomain;\r\n-\t\r\n \t\r\n \t@Before \r\n \tpublic void setUp() throws Exception {\r\n \t\tcontents = new ArrayList<>();\r\n-\t\t\r\n \t\tUserRegistry.getInstance().setSuperUser(true);\r\n-\t\t\r\n-\t\tComposedAdapterFactory adapterFactory = new ComposedAdapterFactory(ComposedAdapterFactory.Descriptor.Registry.INSTANCE);\r\n-\t\tadapterFactory.addAdapterFactory(new DVLMResourceItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new DVLMDVLMItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new DVLMStructuralItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new GeneralItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new ConceptsItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new DVLMCategoriesItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new PropertydefinitionsItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new PropertyinstancesItemProviderAdapterFactory());\r\n-\t\tadapterFactory.addAdapterFactory(new ReflectiveItemProviderAdapterFactory());\r\n-\t\tBasicCommandStack commandStack = new BasicCommandStack() {\r\n-\t\t\t@Override\r\n-\t\t\tpublic void execute(Command command) {\r\n-\t\t\t\tcommand.execute();\r\n-\t\t\t}\r\n-\t\t};\r\n-\t\t\r\n-\t\teditingDomain = new AdapterFactoryEditingDomain(adapterFactory, commandStack, new HashMap<Resource, Boolean>());\r\n+\t}\r\n \t\r\n+\t@After\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NDk1NQ=="}, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MTA3ODgxOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.calculation.test/src/de/dlr/sc/virsat/model/calculation/compute/AEquationBuilderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNDo1MDowOFrOF_EVTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNTowMDowMlrOF_EzYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NTU5OA==", "bodyText": "Should still be here to set the super user to false, after a test case has been executed.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401675598", "createdAt": "2020-04-01T14:50:08Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.calculation.test/src/de/dlr/sc/virsat/model/calculation/compute/AEquationBuilderTest.java", "diffHunk": "@@ -115,6 +115,7 @@ public void setUp() throws Exception {\n \r\n \t@After\r\n \tpublic void tearDown() throws Exception {\r\n+\t\tsuper.tearDown();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4MzI5OA==", "bodyText": "I agree, which is why I added the super.tearDown().\nIts not removed. Its added.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r401683298", "createdAt": "2020-04-01T15:00:02Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.calculation.test/src/de/dlr/sc/virsat/model/calculation/compute/AEquationBuilderTest.java", "diffHunk": "@@ -115,6 +115,7 @@ public void setUp() throws Exception {\n \r\n \t@After\r\n \tpublic void tearDown() throws Exception {\r\n+\t\tsuper.tearDown();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY3NTU5OA=="}, "originalCommit": {"oid": "aaf5d29764bdafbec0f3d8d0b50ded0a0e9c9cb3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDQzOTU5OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.build.ui/src/de/dlr/sc/virsat/build/marker/ui/MarkerImageProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDoxODoyM1rOF_kqiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDoxODoyM1rOF_kqiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwNTMyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\ttoolTipText.append(\"\\r\\n\");\n          \n          \n            \n            \t\t\t\ttoolTipText.append(System.lineSeparator());", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r402205320", "createdAt": "2020-04-02T10:18:23Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.build.ui/src/de/dlr/sc/virsat/build/marker/ui/MarkerImageProvider.java", "diffHunk": "@@ -175,16 +175,15 @@ public Image getOkImage() {\n \t * @return tooltip text\r\n \t */\r\n \tprotected String getToolTipForMarkers(Set<IMarker> markers) {\r\n-\t\tString toolTipText = \"\";\r\n-\r\n+\t\tStringBuilder toolTipText = new StringBuilder();\r\n \t\tfor (IMarker marker : markers) {\r\n \t\t\tString markerText = (String) marker.getAttribute(IMarker.MESSAGE, \"\");\r\n-\t\t\tif (!toolTipText.isEmpty() && !markerText.isEmpty()) {\r\n-\t\t\t\ttoolTipText = toolTipText + \"\\r\\n\";\r\n+\t\t\tif (toolTipText.length() != 0 && !markerText.isEmpty()) {\r\n+\t\t\t\ttoolTipText.append(\"\\r\\n\");\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6955535f9b6015eeabb84201a56f3163cf2208c3"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDU1ODgyOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.graphiti.ui/src/de/dlr/sc/virsat/graphiti/ui/diagram/feature/VirsatCategoryAssignmentOpenEditorFeature.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDo1Mzo0OVrOF_l0yQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMzoxMjoyMFrOF_qgIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyNDMyOQ==", "bodyText": "Let's maybe just leave it as a CategoryAssignment which is already an IInstance and throw away casting?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r402224329", "createdAt": "2020-04-02T10:53:49Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.graphiti.ui/src/de/dlr/sc/virsat/graphiti/ui/diagram/feature/VirsatCategoryAssignmentOpenEditorFeature.java", "diffHunk": "@@ -93,8 +93,8 @@ public void execute(ICustomContext context) {\n         \t\t\tIWorkbench workbench = PlatformUI.getWorkbench();\r\n         \t\t\tIWorkbenchWindow workbenchWindow = workbench.getActiveWorkbenchWindow();\r\n         \t\t\tIWorkbenchPage workbenchPage = workbenchWindow.getActivePage();\r\n-        \t\t\tif (ie.getTypeInstance() instanceof IInstance) {\r\n-        \t\t\t\tIInstance iInstance = (IInstance) ie.getTypeInstance();\r\n+        \t\t\tIInstance iInstance = (IInstance) ie.getTypeInstance();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6955535f9b6015eeabb84201a56f3163cf2208c3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMwMDk2Mg==", "bodyText": "Nice catch!", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r402300962", "createdAt": "2020-04-02T13:12:20Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.graphiti.ui/src/de/dlr/sc/virsat/graphiti/ui/diagram/feature/VirsatCategoryAssignmentOpenEditorFeature.java", "diffHunk": "@@ -93,8 +93,8 @@ public void execute(ICustomContext context) {\n         \t\t\tIWorkbench workbench = PlatformUI.getWorkbench();\r\n         \t\t\tIWorkbenchWindow workbenchWindow = workbench.getActiveWorkbenchWindow();\r\n         \t\t\tIWorkbenchPage workbenchPage = workbenchWindow.getActivePage();\r\n-        \t\t\tif (ie.getTypeInstance() instanceof IInstance) {\r\n-        \t\t\t\tIInstance iInstance = (IInstance) ie.getTypeInstance();\r\n+        \t\t\tIInstance iInstance = (IInstance) ie.getTypeInstance();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIyNDMyOQ=="}, "originalCommit": {"oid": "6955535f9b6015eeabb84201a56f3163cf2208c3"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDc0MTkxOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.test/src/de/dlr/sc/virsat/model/dvlm/inheritance/InheritanceCopierTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo1MTozM1rOF_nlMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMTo1MTozM1rOF_nlMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI1MzEwNg==", "bodyText": "Shall we move checkstyle on directly after the magic numbers?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r402253106", "createdAt": "2020-04-02T11:51:33Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.model.test/src/de/dlr/sc/virsat/model/dvlm/inheritance/InheritanceCopierTest.java", "diffHunk": "@@ -387,33 +386,30 @@ public void testInheritOverrideReferencePropertyInstance() {\n \t\t//CHECKSTYLE:ON\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6955535f9b6015eeabb84201a56f3163cf2208c3"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDg1ODIyOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/RepositoryConfigurationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjoyNDoxNVrOF_otKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMzoxMjoyOVrOF_qgjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI3MTUzMQ==", "bodyText": "This will be conflicting with changes in #550\nI suggest we merge that one first", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r402271531", "createdAt": "2020-04-02T12:24:15Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/RepositoryConfigurationTest.java", "diffHunk": "@@ -46,16 +46,17 @@ public void testLoadProperties() throws IOException, URISyntaxException {\n \t\t\t\t+ RepositoryConfiguration.FUNCTIONAL_ACCOUNT_NAME_KEY + \":\" + TEST_USER + \"\\n\" \r\n \t\t\t\t+ RepositoryConfiguration.LOCAL_PATH_KEY + \":\" + TEST_PATH + \"\\n\" \r\n \t\t\t\t+ RepositoryConfiguration.FUNCTIONAL_ACCOUNT_PASSWORD_KEY + \":\" + TEST_PASSWORD;\r\n-\t\tInputStream inputStream = new ByteArrayInputStream(testConfigFileString.getBytes(StandardCharsets.UTF_8));\r\n \t\t\r\n-\t\t// Check that all values are loaded\r\n-\t\tRepositoryConfiguration configuration = new RepositoryConfiguration(inputStream);\r\n-\t\tassertEquals(\"Remote loaded\", TEST_REMOTE, configuration.getRemoteUri());\r\n-\t\tassertEquals(\"Backend loaded\", VersionControlSystem.GIT, configuration.getBackend());\r\n-\t\tassertEquals(\"Users loaded\", TEST_USER, configuration.getFunctionalAccountName());\r\n-\t\tassertEquals(\"Password loaded\",\tTEST_PASSWORD, configuration.getFunctionalAccountPassword());\r\n-\t\tassertEquals(\"Project loaded\",\tTEST_PROJECT, configuration.getProjectName());\r\n-\t\tassertEquals(\"Path loaded\", TEST_PATH, configuration.getLocalPath());\r\n+\t\ttry (InputStream inputStream = new ByteArrayInputStream(testConfigFileString.getBytes(StandardCharsets.UTF_8))) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6955535f9b6015eeabb84201a56f3163cf2208c3"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMwMTA2OA==", "bodyText": "Ok.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r402301068", "createdAt": "2020-04-02T13:12:29Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/configuration/RepositoryConfigurationTest.java", "diffHunk": "@@ -46,16 +46,17 @@ public void testLoadProperties() throws IOException, URISyntaxException {\n \t\t\t\t+ RepositoryConfiguration.FUNCTIONAL_ACCOUNT_NAME_KEY + \":\" + TEST_USER + \"\\n\" \r\n \t\t\t\t+ RepositoryConfiguration.LOCAL_PATH_KEY + \":\" + TEST_PATH + \"\\n\" \r\n \t\t\t\t+ RepositoryConfiguration.FUNCTIONAL_ACCOUNT_PASSWORD_KEY + \":\" + TEST_PASSWORD;\r\n-\t\tInputStream inputStream = new ByteArrayInputStream(testConfigFileString.getBytes(StandardCharsets.UTF_8));\r\n \t\t\r\n-\t\t// Check that all values are loaded\r\n-\t\tRepositoryConfiguration configuration = new RepositoryConfiguration(inputStream);\r\n-\t\tassertEquals(\"Remote loaded\", TEST_REMOTE, configuration.getRemoteUri());\r\n-\t\tassertEquals(\"Backend loaded\", VersionControlSystem.GIT, configuration.getBackend());\r\n-\t\tassertEquals(\"Users loaded\", TEST_USER, configuration.getFunctionalAccountName());\r\n-\t\tassertEquals(\"Password loaded\",\tTEST_PASSWORD, configuration.getFunctionalAccountPassword());\r\n-\t\tassertEquals(\"Project loaded\",\tTEST_PROJECT, configuration.getProjectName());\r\n-\t\tassertEquals(\"Path loaded\", TEST_PATH, configuration.getLocalPath());\r\n+\t\ttry (InputStream inputStream = new ByteArrayInputStream(testConfigFileString.getBytes(StandardCharsets.UTF_8))) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI3MTUzMQ=="}, "originalCommit": {"oid": "6955535f9b6015eeabb84201a56f3163cf2208c3"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDg2NzAxOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/util/SwtBotDebugHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjoyNjoyNlrOF_oyZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMzoxMzoxNlrOF_qiig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI3Mjg3MQ==", "bodyText": "Shouldn't it be s%n like in other places?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r402272871", "createdAt": "2020-04-02T12:26:26Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/util/SwtBotDebugHelper.java", "diffHunk": "@@ -103,34 +103,34 @@ public static String printListOfThreads() {\n \t\t\tString format;\r\n \t\t\t// Now print the infos depending on if there is a lock or not\r\n \t\t\tif (threadLockInfo == null) {\r\n-\t\t\t\tformat = \"Thread <%1$-\" + THREAD_NAME_COLUMN_WIDTH + \"s> State <%2$-13s> @ %3$s\\n\";\r\n+\t\t\t\tformat = \"Thread <%1$-\" + THREAD_NAME_COLUMN_WIDTH + \"s> State <%2$-13s> @ %3$s%n\";\r\n \t\t\t\tstringBuilder.append(String.format(format, threadName, threadState, threadCodeLine));\r\n \t\t\t} else {\r\n \t\t\t\tString lockOwnerName = threadInfo.getLockOwnerName();\r\n-\t\t\t\tformat = \"Thread <%1$-\" + THREAD_NAME_COLUMN_WIDTH + \"s> State <%2$-13s> @ Lock <%3$s> Lock Owner<%4$s>: \\n\";\r\n+\t\t\t\tformat = \"Thread <%1$-\" + THREAD_NAME_COLUMN_WIDTH + \"s> State <%2$-13s> @ Lock <%3$s> Lock Owner<%4$s>: %n\";\r\n \t\t\t\tstringBuilder.append(String.format(format, threadName, threadState, threadLockClassName, lockOwnerName));\r\n \t\t\t}\r\n \t\r\n \t\t\tfor (StackTraceElement ste : threadStes) {\r\n \t\t\t\tthreadCodeLine = (threadStes.length == 0) ? \"unknown\" : ste.toString();\r\n-\t\t\t\tformat = \" -- Trace        : %1$s\\n\";\r\n+\t\t\t\tformat = \" -- Trace        : %1$sn\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6955535f9b6015eeabb84201a56f3163cf2208c3"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjMwMTU3OA==", "bodyText": "Yes.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/453#discussion_r402301578", "createdAt": "2020-04-02T13:13:16Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/util/SwtBotDebugHelper.java", "diffHunk": "@@ -103,34 +103,34 @@ public static String printListOfThreads() {\n \t\t\tString format;\r\n \t\t\t// Now print the infos depending on if there is a lock or not\r\n \t\t\tif (threadLockInfo == null) {\r\n-\t\t\t\tformat = \"Thread <%1$-\" + THREAD_NAME_COLUMN_WIDTH + \"s> State <%2$-13s> @ %3$s\\n\";\r\n+\t\t\t\tformat = \"Thread <%1$-\" + THREAD_NAME_COLUMN_WIDTH + \"s> State <%2$-13s> @ %3$s%n\";\r\n \t\t\t\tstringBuilder.append(String.format(format, threadName, threadState, threadCodeLine));\r\n \t\t\t} else {\r\n \t\t\t\tString lockOwnerName = threadInfo.getLockOwnerName();\r\n-\t\t\t\tformat = \"Thread <%1$-\" + THREAD_NAME_COLUMN_WIDTH + \"s> State <%2$-13s> @ Lock <%3$s> Lock Owner<%4$s>: \\n\";\r\n+\t\t\t\tformat = \"Thread <%1$-\" + THREAD_NAME_COLUMN_WIDTH + \"s> State <%2$-13s> @ Lock <%3$s> Lock Owner<%4$s>: %n\";\r\n \t\t\t\tstringBuilder.append(String.format(format, threadName, threadState, threadLockClassName, lockOwnerName));\r\n \t\t\t}\r\n \t\r\n \t\t\tfor (StackTraceElement ste : threadStes) {\r\n \t\t\t\tthreadCodeLine = (threadStes.length == 0) ? \"unknown\" : ste.toString();\r\n-\t\t\t\tformat = \" -- Trace        : %1$s\\n\";\r\n+\t\t\t\tformat = \" -- Trace        : %1$sn\";\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI3Mjg3MQ=="}, "originalCommit": {"oid": "6955535f9b6015eeabb84201a56f3163cf2208c3"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 674, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}