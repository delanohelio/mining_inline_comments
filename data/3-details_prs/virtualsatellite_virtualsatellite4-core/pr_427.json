{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMTE2MzE2", "number": 427, "title": "DND Override functionality for navigator", "bodyText": "Added extension point to navigator to provide concept based overrides for DragAndDrop\n Refactored navigator to deal with provided drop adapters\n Still need to write unit tests\n May provide swtbot tests for drag and drop\n\nRefactored AProjectTestCase to have some more simple API to setup test cases. Adjusted all test cases in project to comply with these changes now.\nSWTBOT tests only provided for Drag And Drop Move operations. Copy and Link not yet supported by SWTBOT API.", "createdAt": "2020-01-15T12:36:58Z", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427", "merged": true, "mergeCommit": {"oid": "fe4752e0a28f0b538ec88a0591cd570964707c30"}, "closed": true, "closedAt": "2020-01-24T10:54:57Z", "author": {"login": "PhilMFischer"}, "timelineItems": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6hGc3gH2gAyMzYzMTE2MzE2OmNlZDM5MjA2ODhjZDkxZjZjMzgwNTcxNGYzMjljZDM4NWRiOWIyNzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9bleqgH2gAyMzYzMTE2MzE2OjM0ODk5MWRkMWYzZDg3OTAxYWY2NjZhNDcwNjVjOTI3ZWEwYzBhZWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ced3920688cd91f6c3805714f329cd385db9b271", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/ced3920688cd91f6c3805714f329cd385db9b271", "committedDate": "2020-01-15T08:16:27Z", "message": "Added API for delegated drop adapters - (Task #74)\n\n- Added drop adapter to navigator which is capable of redirecting drag\nand drop operations to different drop handlers.\n- Added extension point to register new drop adapters for individual\nconcepts.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22593841e82aa1cf6087839249f42b22618f00c2", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/22593841e82aa1cf6087839249f42b22618f00c2", "committedDate": "2020-01-15T09:53:30Z", "message": "Added Empty Implementation for PS Drop Adapter - (Task #74)\n\n- Added concept specific dropa dapter to Product structure model\nextension\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4db03be95323457f54372e42f8f17216f8f85caa", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4db03be95323457f54372e42f8f17216f8f85caa", "committedDate": "2020-01-15T13:56:06Z", "message": "Merge remote-tracking branch 'origin/development' into feature/task_74-Override_DND_functiona"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5b8d7a218211de589f9a6c9676bb4d6ee276c69", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d5b8d7a218211de589f9a6c9676bb4d6ee276c69", "committedDate": "2020-01-15T15:02:47Z", "message": "Implemented first Product Structure related dropAdapter - (Task #74)\n\n- Renamed extension point schema.\n- Fixed code to load delegation drop adapter from registration\n- Implemented first drop adapter to replace typing of a given\nstructuralelementinstance.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e3350506877917a67068e45a19a028ea3982bb1", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4e3350506877917a67068e45a19a028ea3982bb1", "committedDate": "2020-01-15T16:11:36Z", "message": "Refactored Command Checks - (Task #74)\n\n- Now checking if object can be inherited from, otherwise a command will\nbe set to be unexecutable.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edcf1bae842339363d86cff4dad431f02999efd5", "author": {"user": {"login": "SaMuellerDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/edcf1bae842339363d86cff4dad431f02999efd5", "committedDate": "2020-01-15T16:37:23Z", "message": "Added test case for inheritance case - (Task #74)\n\n- Added test case to test that the applicability check is correct when\nusing the inheritance feature\n- Renamed test cases to distinguish between the cases: adding child seis\nor adding super seis.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b81486970ad6eef37a7080209c1f636daec3509", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/6b81486970ad6eef37a7080209c1f636daec3509", "committedDate": "2020-01-16T13:05:28Z", "message": "moved implementation for typing to project - (Task #74)\n\n- Inheritance is in general an extension independant functionality,\ntherefore it has been moved to project.\n- will implement PS specific inheritance drop to also create new\nelements.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "790d9c9d3cc5ac31d2cf1516ac96443b0852b432", "author": {"user": null}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/790d9c9d3cc5ac31d2cf1516ac96443b0852b432", "committedDate": "2020-01-16T13:05:45Z", "message": "Merge branch 'feature/task_74-Override_DND_functiona' of https://github.com/virtualsatellite/VirtualSatellite4-Core.git into feature/task_74-Override_DND_functiona"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea9b77880e7c08e4d2fd21924b37526a41c4d00a", "author": {"user": null}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/ea9b77880e7c08e4d2fd21924b37526a41c4d00a", "committedDate": "2020-01-16T15:42:19Z", "message": "Implemented all functionality for PS drag and drop - (Task #74)\n\n- Added functionality to create new PS element when pressing ALT with\nDND operation.\n- Also adjusting discipline and names when creating drop.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d63c6efbb58233dbc0be973da37f2d65dd996f9b", "author": {"user": null}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d63c6efbb58233dbc0be973da37f2d65dd996f9b", "committedDate": "2020-01-16T16:31:03Z", "message": "Cleaned up code - (Task #74)\n\n- Removed all warnings\n- Prepared test cases\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84498799ecd2f0c66eec78a0f947a806e4634bce", "author": {"user": null}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/84498799ecd2f0c66eec78a0f947a806e4634bce", "committedDate": "2020-01-17T08:19:31Z", "message": "Write a Heading here - (Task #74)\n\n- Added further hamcrest dependency to test plugin so that the\nhamcrest.collections matchers are available.\n- Implemented test cases for VirSatInheritance Drop Adapter\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NDE1MDI4", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#pullrequestreview-344415028", "createdAt": "2020-01-17T08:08:20Z", "commit": {"oid": "d63c6efbb58233dbc0be973da37f2d65dd996f9b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODowODoyMVrOFexYaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QwODoyMjo0MFrOFexqKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxMDY2NQ==", "bodyText": "Is this really just an info and not an error?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r367810665", "createdAt": "2020-01-17T08:08:21Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.ps/src/de/dlr/sc/virsat/model/extension/ps/dnd/ProductStructureDragAndDropInheritanceCommandHelper.java", "diffHunk": "@@ -0,0 +1,165 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.ps.dnd;\r\n+\r\n+import java.lang.reflect.Constructor;\r\n+import java.lang.reflect.InvocationTargetException;\r\n+import java.util.Collection;\r\n+import java.util.Collections;\r\n+import java.util.HashMap;\r\n+import java.util.Map;\r\n+\r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.common.command.CompoundCommand;\r\n+import org.eclipse.emf.common.command.UnexecutableCommand;\r\n+import de.dlr.sc.virsat.model.concept.types.factory.BeanStructuralElementInstanceFactory;\r\n+import de.dlr.sc.virsat.model.concept.types.structural.IBeanStructuralElementInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.Repository;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.util.ActiveConceptHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.roles.Discipline;\r\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.util.DVLMCopiedNameHelper;\r\n+import de.dlr.sc.virsat.model.extension.ps.Activator;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.AssemblyTree;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementOccurence;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementRealization;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ProductStorageDomain;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+import de.dlr.sc.virsat.project.editingDomain.commands.dnd.VirSatDragAndDropInheritanceCommandHelper;\r\n+import de.dlr.sc.virsat.project.editingDomain.commands.dnd.VirSatDragAndDropInheritanceCommandHelper.DndOperation;\r\n+import de.dlr.sc.virsat.project.resources.VirSatResourceSet;\r\n+import de.dlr.sc.virsat.project.structure.command.CreateAddSeiWithFileStructureCommand;\r\n+\r\n+/**\r\n+ * This is a helper class to create the correct command for replacing an inheritance\r\n+ * of a SEI with another SEI.\r\n+ */\r\n+public class ProductStructureDragAndDropInheritanceCommandHelper {\r\n+\r\n+\tprotected Map<Class<? extends IBeanStructuralElementInstance>, Class<? extends IBeanStructuralElementInstance>> mapDropBeanToCreateBean;\r\n+\t\r\n+\t/**\r\n+\t * Constructor\r\n+\t */\r\n+\tpublic ProductStructureDragAndDropInheritanceCommandHelper() {\r\n+\t\t\r\n+\t\t// Populate map with information about which Bean to create for which drop target\r\n+\t\tmapDropBeanToCreateBean = new HashMap<>();\r\n+\t\t\r\n+\t\tmapDropBeanToCreateBean.put(ConfigurationTree.class, ElementConfiguration.class);\r\n+\t\tmapDropBeanToCreateBean.put(ElementConfiguration.class, ElementConfiguration.class);\r\n+\r\n+\t\tmapDropBeanToCreateBean.put(AssemblyTree.class, ElementOccurence.class);\r\n+\t\tmapDropBeanToCreateBean.put(ElementOccurence.class, ElementOccurence.class);\r\n+\r\n+\t\tmapDropBeanToCreateBean.put(ProductStorageDomain.class, ElementRealization.class);\r\n+\t\tmapDropBeanToCreateBean.put(ElementRealization.class, ElementRealization.class);\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Call this method to create a command to add or replace the SEI in the list of superSEIs\r\n+\t * @param ed The editing domain for which the command should be created\r\n+\t * @param dragObject the object which is dragged and shall be used for replacing\r\n+\t * @param dropOperation the kind of operation\r\n+\t * @param dropSei the SEI where the superSEIs should be changed\r\n+\t * @return The command to add or replace a superSEI\r\n+\t */\r\n+\tpublic Command createDropCommand(VirSatTransactionalEditingDomain ed, Collection<Object> dragObjects, StructuralElementInstance dropSei) {\r\n+\t\tIBeanStructuralElementInstance createSeiBean = createBeanStructuralElementInstanceForDrop(ed, dragObjects, dropSei);\r\n+\t\t\r\n+\t\tif (createSeiBean != null) {\r\n+\t\t\tStructuralElementInstance createSei = createSeiBean.getStructuralElementInstance();\r\n+\t\t\tCommand addSeiCommand = CreateAddSeiWithFileStructureCommand.create(\r\n+\t\t\t\t\ted,\r\n+\t\t\t\t\tdropSei,\r\n+\t\t\t\t\tcreateSei\r\n+\t\t\t);\r\n+\t\t\tCommand setInheritanceCommand = VirSatDragAndDropInheritanceCommandHelper.createDropCommand(\r\n+\t\t\t\t\ted,\r\n+\t\t\t\t\tdragObjects,\r\n+\t\t\t\t\tDndOperation.ADD_INHERITANCE,\r\n+\t\t\t\t\tcreateSei\r\n+\t\t\t);\r\n+\t\t\t\r\n+\t\t\tCompoundCommand commandCreateSeiAndSetInheritance = new CompoundCommand();\r\n+\t\t\tcommandCreateSeiAndSetInheritance.append(addSeiCommand);\r\n+\t\t\tcommandCreateSeiAndSetInheritance.append(setInheritanceCommand);\r\n+\r\n+\t\t\treturn commandCreateSeiAndSetInheritance;\r\n+\t\t}\r\n+\t\t\r\n+\t\treturn UnexecutableCommand.INSTANCE;\r\n+\t}\t\r\n+\t\r\n+\t/**\r\n+\t * Call this method to create a BeanSei for a given drop Target SEI\r\n+\t * @param ed The editing domain in which the object will be dropped\r\n+\t * @param dragObjects The objects preferably SEIs which are dragged\r\n+\t * @param dropSei the SEI to which the objects shall get dropped\r\n+\t * @return A BeanSEI with corresponding to the drop target with correct name and discipline\r\n+\t */\r\n+\tpublic IBeanStructuralElementInstance createBeanStructuralElementInstanceForDrop(VirSatTransactionalEditingDomain ed, Collection<Object> dragObjects, StructuralElementInstance dropSei) {\r\n+\t\t// When creating a new object and setting the inheritance link at the same time\r\n+\t\t// then there should be only one element in the list anyway, so get the first one.\r\n+\t\tObject dragObject = dragObjects.iterator().next();\r\n+\t\t\r\n+\t\ttry {\r\n+\t\t\tif (dragObject instanceof StructuralElementInstance) {\r\n+\t\t\t\t// Identify the concept\r\n+\t\t\t\tVirSatResourceSet virSatResourceSet = ed.getResourceSet();\r\n+\t\t\t\tRepository currentRepository = virSatResourceSet.getRepository();\r\n+\t\t\t\tConcept concept = new ActiveConceptHelper(currentRepository).getConcept(Activator.getPluginId());\r\n+\t\t\t\t\r\n+\t\t\t\t// Create a bean for the given dropSEI\r\n+\t\t\t\tBeanStructuralElementInstanceFactory bsf = new BeanStructuralElementInstanceFactory();\r\n+\t\t\t\tIBeanStructuralElementInstance dropBeanSei = bsf.getInstanceFor(dropSei);\r\n+\t\t\t\t\r\n+\t\t\t\t// Use the created bean to decide which type of bean should be created for adding to the dropSEI\r\n+\t\t\t\tClass<? extends IBeanStructuralElementInstance> dropBeanSeiClass = dropBeanSei.getClass();\r\n+\t\t\t\tClass<? extends IBeanStructuralElementInstance> createBeanSeiClass = mapDropBeanToCreateBean.get(dropBeanSeiClass);\r\n+\t\t\t\t\r\n+\t\t\t\t// If there is a suggestion to it and if it was successful to identify the concept\r\n+\t\t\t\t// Then it it is possible to create a new BeanSei and to set it up correctly\r\n+\t\t\t\tif (createBeanSeiClass != null && concept != null) {\r\n+\t\t\t\t\tConstructor<? extends IBeanStructuralElementInstance> createBeanSeiConstructor = createBeanSeiClass.getDeclaredConstructor(Concept.class);\r\n+\t\t\t\t\tIBeanStructuralElementInstance createBeanSei = (IBeanStructuralElementInstance) createBeanSeiConstructor.newInstance(concept);\r\n+\t\t\t\t\tStructuralElementInstance createSei = createBeanSei.getStructuralElementInstance();\r\n+\t\t\t\t\t\r\n+\t\t\t\t\t// Now copy the name and the disciplines accordingly\r\n+\t\t\t\t\tStructuralElementInstance dragSei = (StructuralElementInstance) dragObject;\r\n+\t\t\t\t\tDiscipline discipline = dropSei.getAssignedDiscipline(); \r\n+\t\t\t\t\tcreateSei.setAssignedDiscipline(discipline);\r\n+\t\t\t\t\tString name = dragSei.getName(); \r\n+\t\t\t\t\tcreateSei.setName(name);\r\n+\t\t\t\t\t\r\n+\t\t\t\t\t// Now fix naming clashes\r\n+\t\t\t\t\tDVLMCopiedNameHelper dcnh = new DVLMCopiedNameHelper();\r\n+\t\t\t\t\tdcnh.updateCopiedNames(dropSei.getChildren(), Collections.singleton(createSei));\r\n+\t\r\n+\t\t\t\t\treturn createBeanSei;\r\n+\t\t\t\t}\r\n+\t\t\t}\r\n+\t\t} catch (CoreException | NoSuchMethodException | SecurityException | InstantiationException | IllegalAccessException | IllegalArgumentException | InvocationTargetException e) {\r\n+\t\t\tActivator.getDefault().getLog().log(new Status(\r\n+\t\t\t\t\tStatus.INFO,\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d63c6efbb58233dbc0be973da37f2d65dd996f9b"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxMzA1MA==", "bodyText": "The first with can be removed", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r367813050", "createdAt": "2020-01-17T08:15:57Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.ps/src/de/dlr/sc/virsat/model/extension/ps/dnd/ProductStructureDragAndDropInheritanceCommandHelper.java", "diffHunk": "@@ -0,0 +1,165 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.ps.dnd;\r\n+\r\n+import java.lang.reflect.Constructor;\r\n+import java.lang.reflect.InvocationTargetException;\r\n+import java.util.Collection;\r\n+import java.util.Collections;\r\n+import java.util.HashMap;\r\n+import java.util.Map;\r\n+\r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.common.command.CompoundCommand;\r\n+import org.eclipse.emf.common.command.UnexecutableCommand;\r\n+import de.dlr.sc.virsat.model.concept.types.factory.BeanStructuralElementInstanceFactory;\r\n+import de.dlr.sc.virsat.model.concept.types.structural.IBeanStructuralElementInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.Repository;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.util.ActiveConceptHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.roles.Discipline;\r\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.util.DVLMCopiedNameHelper;\r\n+import de.dlr.sc.virsat.model.extension.ps.Activator;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.AssemblyTree;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementOccurence;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementRealization;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ProductStorageDomain;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+import de.dlr.sc.virsat.project.editingDomain.commands.dnd.VirSatDragAndDropInheritanceCommandHelper;\r\n+import de.dlr.sc.virsat.project.editingDomain.commands.dnd.VirSatDragAndDropInheritanceCommandHelper.DndOperation;\r\n+import de.dlr.sc.virsat.project.resources.VirSatResourceSet;\r\n+import de.dlr.sc.virsat.project.structure.command.CreateAddSeiWithFileStructureCommand;\r\n+\r\n+/**\r\n+ * This is a helper class to create the correct command for replacing an inheritance\r\n+ * of a SEI with another SEI.\r\n+ */\r\n+public class ProductStructureDragAndDropInheritanceCommandHelper {\r\n+\r\n+\tprotected Map<Class<? extends IBeanStructuralElementInstance>, Class<? extends IBeanStructuralElementInstance>> mapDropBeanToCreateBean;\r\n+\t\r\n+\t/**\r\n+\t * Constructor\r\n+\t */\r\n+\tpublic ProductStructureDragAndDropInheritanceCommandHelper() {\r\n+\t\t\r\n+\t\t// Populate map with information about which Bean to create for which drop target\r\n+\t\tmapDropBeanToCreateBean = new HashMap<>();\r\n+\t\t\r\n+\t\tmapDropBeanToCreateBean.put(ConfigurationTree.class, ElementConfiguration.class);\r\n+\t\tmapDropBeanToCreateBean.put(ElementConfiguration.class, ElementConfiguration.class);\r\n+\r\n+\t\tmapDropBeanToCreateBean.put(AssemblyTree.class, ElementOccurence.class);\r\n+\t\tmapDropBeanToCreateBean.put(ElementOccurence.class, ElementOccurence.class);\r\n+\r\n+\t\tmapDropBeanToCreateBean.put(ProductStorageDomain.class, ElementRealization.class);\r\n+\t\tmapDropBeanToCreateBean.put(ElementRealization.class, ElementRealization.class);\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Call this method to create a command to add or replace the SEI in the list of superSEIs\r\n+\t * @param ed The editing domain for which the command should be created\r\n+\t * @param dragObject the object which is dragged and shall be used for replacing\r\n+\t * @param dropOperation the kind of operation\r\n+\t * @param dropSei the SEI where the superSEIs should be changed\r\n+\t * @return The command to add or replace a superSEI\r\n+\t */\r\n+\tpublic Command createDropCommand(VirSatTransactionalEditingDomain ed, Collection<Object> dragObjects, StructuralElementInstance dropSei) {\r\n+\t\tIBeanStructuralElementInstance createSeiBean = createBeanStructuralElementInstanceForDrop(ed, dragObjects, dropSei);\r\n+\t\t\r\n+\t\tif (createSeiBean != null) {\r\n+\t\t\tStructuralElementInstance createSei = createSeiBean.getStructuralElementInstance();\r\n+\t\t\tCommand addSeiCommand = CreateAddSeiWithFileStructureCommand.create(\r\n+\t\t\t\t\ted,\r\n+\t\t\t\t\tdropSei,\r\n+\t\t\t\t\tcreateSei\r\n+\t\t\t);\r\n+\t\t\tCommand setInheritanceCommand = VirSatDragAndDropInheritanceCommandHelper.createDropCommand(\r\n+\t\t\t\t\ted,\r\n+\t\t\t\t\tdragObjects,\r\n+\t\t\t\t\tDndOperation.ADD_INHERITANCE,\r\n+\t\t\t\t\tcreateSei\r\n+\t\t\t);\r\n+\t\t\t\r\n+\t\t\tCompoundCommand commandCreateSeiAndSetInheritance = new CompoundCommand();\r\n+\t\t\tcommandCreateSeiAndSetInheritance.append(addSeiCommand);\r\n+\t\t\tcommandCreateSeiAndSetInheritance.append(setInheritanceCommand);\r\n+\r\n+\t\t\treturn commandCreateSeiAndSetInheritance;\r\n+\t\t}\r\n+\t\t\r\n+\t\treturn UnexecutableCommand.INSTANCE;\r\n+\t}\t\r\n+\t\r\n+\t/**\r\n+\t * Call this method to create a BeanSei for a given drop Target SEI\r\n+\t * @param ed The editing domain in which the object will be dropped\r\n+\t * @param dragObjects The objects preferably SEIs which are dragged\r\n+\t * @param dropSei the SEI to which the objects shall get dropped\r\n+\t * @return A BeanSEI with corresponding to the drop target with correct name and discipline\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d63c6efbb58233dbc0be973da37f2d65dd996f9b"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzgxNTIwOQ==", "bodyText": "I think we should also pass the stack trace to the logger.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r367815209", "createdAt": "2020-01-17T08:22:40Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/DVLMObjectDropAdapterAssistant.java", "diffHunk": "@@ -9,98 +9,176 @@\n  *******************************************************************************/\r\n package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n \r\n-import java.util.Collection;\r\n+import java.util.HashMap;\r\n+import java.util.Map;\r\n+import java.util.function.Function;\r\n \r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.IConfigurationElement;\r\n import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Platform;\r\n import org.eclipse.core.runtime.Status;\r\n-import org.eclipse.emf.common.command.Command;\r\n-import org.eclipse.emf.ecore.EObject;\r\n-import org.eclipse.jface.util.LocalSelectionTransfer;\r\n-import org.eclipse.jface.viewers.ISelection;\r\n import org.eclipse.jface.viewers.IStructuredSelection;\r\n-import org.eclipse.jface.viewers.StructuredSelection;\r\n-import org.eclipse.swt.dnd.DND;\r\n import org.eclipse.swt.dnd.DropTargetEvent;\r\n import org.eclipse.swt.dnd.TransferData;\r\n-import org.eclipse.ui.PlatformUI;\r\n import org.eclipse.ui.navigator.CommonDropAdapter;\r\n import org.eclipse.ui.navigator.CommonDropAdapterAssistant;\r\n-import org.eclipse.ui.navigator.CommonViewer;\r\n-\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatEditingDomainClipBoard.ClipboardState;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatPasteFromClipboardCommand;\r\n-import de.dlr.sc.virsat.project.ui.navigator.VirSatNavigator;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.ATypeInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.util.ActiveConceptHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\r\n+import de.dlr.sc.virsat.project.Activator;\r\n \r\n /**\r\n- * VirSat Drop Assitant to copy and paste SEIs and CAs in the Navigator\r\n- * @author fisc_ph\r\n- *\r\n+ * Drop Assistant for VirSat Navigator that delegates calls to concept specific drop assistants\r\n  */\r\n public class DVLMObjectDropAdapterAssistant extends CommonDropAdapterAssistant {\r\n \r\n+\tprotected Map<String, CommonDropAdapterAssistant> mapConceptIdToDelegateDropAdapter;\r\n+\t\r\n+\tprotected CommonDropAdapterAssistant defaultCopyPasteDropAdapter;\r\n+\tprotected CommonDropAdapterAssistant defaultInheritanceDropAdapter;\r\n+\t\r\n+\tpublic static final String EXTENSION_POINT_NAVIGATOR = \"de.dlr.sc.virsat.project.ui.navigator\";\r\n+\tpublic static final String EXTENSION_POINT_DROP_ASSISTANT_CONTRIBUTION = \"DVLMConceptDropAssistant\";\r\n+\t\r\n+\tpublic static final String EXTENSION_POINT_DROP_ASSISTANT_CONCEPT_ID = \"conceptId\";\r\n+\tpublic static final String EXTENSION_POINT_DROP_ASSISTANT_IMPLEMENTATION = \"class\";\r\n+\t\r\n+\t@Override\r\n+\tprotected void doInit() {\r\n+\t\tinitDropAssistantMap();\r\n+\t\t\r\n+\t\tdefaultCopyPasteDropAdapter = new DVLMDefaultCopyAndPasteDropAdapterAssistant();\r\n+\t\tdefaultInheritanceDropAdapter = new DVLMDefaultInheritanceDropAdapterAssistant();\r\n+\t\tdefaultCopyPasteDropAdapter.init(getContentService());\r\n+\t}\r\n+\r\n \t/**\r\n-\t * Method to create a Drop Command based on the Copy Paste functionality\r\n-\t * @param target The object to witch to drop to\r\n-\t * @param operation the type of DND operation\r\n-\t * @return the ccommand if it is creatable or null in case it could not be created\r\n+\t * Reads out the extension point to initialize the map of\r\n+\t * concept ids vs. drop adapters\r\n \t */\r\n-\tprivate Command createDropCommand(Object target, int operation) {\r\n-\t\tCommand dropCommand = null;\r\n-\t\t\r\n-\t\tif (target instanceof EObject) {\r\n-\t\t\tEObject eObject = (EObject) target;\r\n-\t\t\tVirSatTransactionalEditingDomain virSatEd = VirSatEditingDomainRegistry.INSTANCE.getEd(eObject);\r\n-\t\t\tISelection selection = LocalSelectionTransfer.getTransfer().getSelection();\r\n-\t\t\t\r\n-\t\t\tif (selection instanceof IStructuredSelection) {\r\n-\t\t\t\tIStructuredSelection structerdSelection = (IStructuredSelection) selection;\r\n-\t\t\t\t\r\n-\t\t\t\t@SuppressWarnings(\"unchecked\")\r\n-\t\t\t\tCollection<Object> dndObjects = structerdSelection.toList();\r\n-\t\t\t\t\t\r\n-\t\t\t\tif (operation == DND.DROP_COPY) {\r\n-\t\t\t\t\tdropCommand = VirSatPasteFromClipboardCommand.create(virSatEd, eObject, dndObjects, ClipboardState.COPY);\r\n-\t\t\t\t} else if (operation == DND.DROP_MOVE) {\r\n-\t\t\t\t\tdropCommand = VirSatPasteFromClipboardCommand.create(virSatEd, eObject, dndObjects, ClipboardState.CUT);\r\n+\tprotected void initDropAssistantMap() {\r\n+\t\t// Re initialize the map of drop assistants\r\n+\t\tmapConceptIdToDelegateDropAdapter = new HashMap<>();\r\n+\t\r\n+\t\t// Now start looping over all Navigator extensions to find the possible registered drop assistants\r\n+\t\tIConfigurationElement[] navigatorExtensions = Platform.getExtensionRegistry().getConfigurationElementsFor(EXTENSION_POINT_NAVIGATOR);\r\n+\t\tfor (IConfigurationElement navigatorExtension : navigatorExtensions) {\r\n+\t\t\tif (EXTENSION_POINT_DROP_ASSISTANT_CONTRIBUTION.equals(navigatorExtension.getName())) {\r\n+\t\t\t\tString conceptId = navigatorExtension.getAttribute(EXTENSION_POINT_DROP_ASSISTANT_CONCEPT_ID);\r\n+\t\t\t\tCommonDropAdapterAssistant dropAdapter;\r\n+\t\t\t\ttry {\r\n+\t\t\t\t\tdropAdapter = (CommonDropAdapterAssistant) navigatorExtension.createExecutableExtension(EXTENSION_POINT_DROP_ASSISTANT_IMPLEMENTATION);\r\n+\t\t\t\t\tdropAdapter.init(getContentService());\r\n+\t\t\t\t\tif (!mapConceptIdToDelegateDropAdapter.containsKey(conceptId)) {\r\n+\t\t\t\t\t\tmapConceptIdToDelegateDropAdapter.put(conceptId, dropAdapter);\r\n+\t\t\t\t\t} else {\r\n+\t\t\t\t\t\tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(), \"Cannot register two drop adapter for the same concept: \" + conceptId));\r\n+\t\t\t\t\t}\r\n+\t\t\t\t} catch (CoreException e) {\r\n+\t\t\t\t\tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(), \"Failed to create executable extension for drop adapter in concept: \" + navigatorExtension.getContributor() + \"->\" + conceptId + \" because: \" + e.getMessage()));\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d63c6efbb58233dbc0be973da37f2d65dd996f9b"}, "originalPosition": 112}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e78a6b6b417a29b69017c47830e8b282fed64067", "author": {"user": null}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/e78a6b6b417a29b69017c47830e8b282fed64067", "committedDate": "2020-01-17T09:16:42Z", "message": "Simplified concept test case setup - (Task #74)\n\n- Added method to easily execute tests as a command in the editing\ndomain.\n\n- Removed some further warnings.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a2f95f0eca5cb1a0dfa7b18dca347bd3b587ccb", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8a2f95f0eca5cb1a0dfa7b18dca347bd3b587ccb", "committedDate": "2020-01-17T10:46:22Z", "message": "Refactored execute function in project test case  - (Task #74)\n\n- Added a second method to execute code as recording command in the ED.\nBut this time the method does not hand back results.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2b764506ced62e7c4d01d055112ba2cd21b6aff", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f2b764506ced62e7c4d01d055112ba2cd21b6aff", "committedDate": "2020-01-17T13:00:29Z", "message": "Implemented Test cases for PS inheritance commands - (Task #74)\n\n- Refatcored command helper to mainly use PS bean elements where\npossible\n- Added test cases\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b85c004a664389cca7d095d075cd35b4c2bfef4a", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/b85c004a664389cca7d095d075cd35b4c2bfef4a", "committedDate": "2020-01-17T14:40:52Z", "message": "Refactored all project tests - (Task #74)\n\n- Refactored due to changes in AProjectTest case\n- Unified setup and tear down of all project unit tests.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f76d8dcea7b8bbde7cad675c8c10d78706d51ebf", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f76d8dcea7b8bbde7cad675c8c10d78706d51ebf", "committedDate": "2020-01-17T15:42:29Z", "message": "Merge remote-tracking branch 'origin/feature/task_430-Use_https_based_addre' into feature/task_74-Override_DND_functiona"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b960b3f71adde2262d0ef6e711ff6903d523c835", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/b960b3f71adde2262d0ef6e711ff6903d523c835", "committedDate": "2020-01-20T13:10:29Z", "message": "Improved SWT Bot tests with drag and drop - (Task #74)\n\n- Added DND testcase for moving a SEI\n- Added DND testcase for moving a CA\n- Added DND testcase for setting inheritance\n- Added hamcrest library to dependencies for better hamcrest assert\nstatements on collections etc.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a792358b95a4d63363b602381f27fd8f69000ba", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/7a792358b95a4d63363b602381f27fd8f69000ba", "committedDate": "2020-01-20T13:38:42Z", "message": "Minor fixes due to review - (Task #74)\n\n- changed some log statements from info to warning level.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c97c674e1ecd320e0951fd7102a3cc565060a4af", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/c97c674e1ecd320e0951fd7102a3cc565060a4af", "committedDate": "2020-01-20T14:02:35Z", "message": "Fixing test case on jenkins - (Task #74)\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0f4ad03a372bd7f1c2d833d57b5e093c200c901", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/c0f4ad03a372bd7f1c2d833d57b5e093c200c901", "committedDate": "2020-01-20T14:27:37Z", "message": "Integrated old test case - (Task #74)\n\n- Old test case for project builder was not added to all tests.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffd29fd8cfb5ccb7000a0aaba18e4d7a81bbb36b", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/ffd29fd8cfb5ccb7000a0aaba18e4d7a81bbb36b", "committedDate": "2020-01-20T14:44:10Z", "message": "Fixing SWT Bot dependencies - (Task #74)\n\n- Added all concept plugins.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad5c507102d6cf01ab226486081447cf26c62c26", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/ad5c507102d6cf01ab226486081447cf26c62c26", "committedDate": "2020-01-20T16:29:35Z", "message": "Merge remote-tracking branch 'origin/development' into feature/task_74-Override_DND_functiona"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NjgxMDUx", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#pullrequestreview-345681051", "createdAt": "2020-01-21T07:44:11Z", "commit": {"oid": "ad5c507102d6cf01ab226486081447cf26c62c26"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwNzo0NDoxMVrOFfwwTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQwNzo1Njo1NFrOFfw_gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg0ODk3Mw==", "bodyText": "I think we can make these private.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r368848973", "createdAt": "2020-01-21T07:44:11Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.ps.test/src/de/dlr/sc/virsat/model/extension/ps/util/test/ProductStructureHelperTest.java", "diffHunk": "@@ -37,14 +33,12 @@\n \r\n /**\r\n  * Test Case for Generating Tree\r\n- * @author bell_er\r\n  *\r\n  */\r\n public class ProductStructureHelperTest extends AConceptProjectTestCase {\r\n-\tprivate static final String CONCEPT_ID_EGSCC = de.dlr.sc.virsat.model.extension.ps.Activator.getPluginId();\r\n-\tprivate static final String EXTENSION_ID = \"de.dlr.sc.virsat.model.Concept\";\r\n-\r\n-\tprivate static final int THREE = 3;\r\n+\tprivate static final String CONCEPT_ID_PS = Activator.getPluginId();\r\n+\t\r\n+\tprivate static final int AMOUNT_CT_SUBSYTEMS = 3;\r\n \r\n \tElementDefinition ed;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5c507102d6cf01ab226486081447cf26c62c26"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg0OTYyMQ==", "bodyText": "Maybe a short comment why its overwritten.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r368849621", "createdAt": "2020-01-21T07:46:31Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.project.test/src/de/dlr/sc/virsat/project/structure/VirSatProjectCommonsTest.java", "diffHunk": "@@ -65,6 +65,10 @@\n \t@Rule\r\n \tpublic final ExpectedException expectedException = ExpectedException.none();\r\n \t\r\n+\t@Override\r\n+\tprotected void addProjectFileStructure() {\r\n+\t}\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5c507102d6cf01ab226486081447cf26c62c26"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg1MDA0OA==", "bodyText": "I dont think we need an empty constructor.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r368850048", "createdAt": "2020-01-21T07:48:01Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/ADVLMDropAdapaterAssistant.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n+\r\n+import java.util.Collection;\r\n+\r\n+import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+import org.eclipse.swt.dnd.DropTargetEvent;\r\n+import org.eclipse.swt.dnd.TransferData;\r\n+import org.eclipse.ui.navigator.CommonDropAdapter;\r\n+import org.eclipse.ui.navigator.CommonDropAdapterAssistant;\r\n+\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+\r\n+/**\r\n+ * Generic functionality to implement a DVLMDropAdapterAssitant\r\n+ *\r\n+ */\r\n+public abstract class ADVLMDropAdapaterAssistant extends CommonDropAdapterAssistant {\r\n+\r\n+\tpublic ADVLMDropAdapaterAssistant() {\r\n+\t\tsuper();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5c507102d6cf01ab226486081447cf26c62c26"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg1MDM2NA==", "bodyText": "Do we need this commented out code?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r368850364", "createdAt": "2020-01-21T07:49:10Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/InheritanceTest.java", "diffHunk": "@@ -139,6 +140,40 @@ public void singleLevelInheritancePropagationUITest() {\n \t\twaitForAllBuildersAndUiThread();\r\n \t\tassertEquals(\"newDocName\", bot.tableWithId(\"tableDocument\").cell(0, Document.PROPERTY_DOCUMENTNAME));\r\n \t\tassertEquals(\"overriden note\", bot.tableWithId(\"tableDocument\").cell(0, Document.PROPERTY_NOTE));\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void inheritanceTypingDragAndDrop() {\r\n+\t\trename(elementConfiguration, \"ec_1\");\r\n+\t\tSWTBotTreeItem elementConfiguration2 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\r\n+\t\trename(elementConfiguration2, \"ec_2\");\r\n+\t\t\r\n+\t\tSWTBotTreeItem documentEc1 = addElement(Document.class, conceptPs, elementConfiguration);\r\n+\t\tSWTBotTreeItem documentEc2 = addElement(Document.class, conceptPs, elementConfiguration2);\r\n+\r\n+\t\topenEditor(documentEc1);\r\n+\t\tsetText(Document.PROPERTY_DOCUMENTNAME, \"docFromEc1\");\r\n+\r\n+\t\topenEditor(documentEc2);\r\n+\t\tsetText(Document.PROPERTY_DOCUMENTNAME, \"docFromEc2\");\r\n+\t\t\r\n+\t\t// There are no documents yet with the ElementOccurrence\r\n+\t\tassertThat(\"There is only the documents folder\", elementOccurence.getItems(), arrayWithSize(1));\r\n+\t\t\r\n+\t\t// Now drag the first inheritance\r\n+\t\telementConfiguration.dragAndDrop(elementOccurence);\r\n+\t\twaitForAllBuildersAndUiThread();\r\n+\t\t\r\n+\t\topenEditor(elementOccurence);\r\n+\t\t//waitForAllBuildersAndUiThread();\r\n+\t\tassertEquals(\"Received override from EC1\", \"docFromEc1\", bot.tableWithId(\"tableDocument\").cell(0, Document.PROPERTY_DOCUMENTNAME));\r\n+\t\t\r\n+\t\t// now drag the other and verify\r\n+\t\telementConfiguration2.dragAndDrop(elementOccurence);\r\n+\t\twaitForAllBuildersAndUiThread();\r\n \t\t\r\n+\t\topenEditor(elementOccurence);\r\n+\t\t//waitForAllBuildersAndUiThread();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5c507102d6cf01ab226486081447cf26c62c26"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODg1Mjg2NA==", "bodyText": "I guess this Store class is introduced to avoid the effectivly final requirement since you want to save the result from the doExecute call?\nYou may disagree, but I would prefer using final List<T> objects = new ArrayList<>(); and then objects.add(supplier.get()) simple since it avoids introducing some new magic class.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r368852864", "createdAt": "2020-01-21T07:56:54Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.project.test/src/de/dlr/sc/virsat/project/test/AProjectTestCase.java", "diffHunk": "@@ -160,4 +164,47 @@ protected void addEditingDomainAndRepository() {\n \tprotected String getProjectName() {\r\n \t\treturn TEST_PROJECT_NAME + \"_\" + this.getClass().getSimpleName();\r\n \t}\r\n+\t\r\n+\t\r\n+\t/**\r\n+\t * Simple method to execute code as part of a recording command\r\n+\t * @param runnable the lambda to be executed with no parameters and no return value. \r\n+\t */\r\n+\tprotected <T> void executeAsCommand(Runnable runnable) {\r\n+\t\t// Now wrap the lambda into a recording command and execute it\r\n+\t\teditingDomain.getVirSatCommandStack().execute(new RecordingCommand(editingDomain) {\r\n+\t\t\t@Override\r\n+\t\t\tprotected void doExecute() {\r\n+\t\t\t\trunnable.run();\r\n+\t\t\t}\r\n+\t\t});\r\n+\t}\r\n+\t\t\r\n+\t/**\r\n+\t * Simple method to execute code as part of a recording command\r\n+\t * @param supplier the lambda to be executed with no parameters. \r\n+\t * @return the result of the executed lambda\r\n+\t */\r\n+\tprotected <T> T executeAsCommand(Supplier<T> supplier) {\r\n+\t\t\r\n+\t\t// Simple class to store object of the given generic type T\r\n+\t\tclass Store {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5c507102d6cf01ab226486081447cf26c62c26"}, "originalPosition": 114}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f8edcea338ca5f6f23ad3de87f4936a00a891f1", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/0f8edcea338ca5f6f23ad3de87f4936a00a891f1", "committedDate": "2020-01-21T08:40:30Z", "message": "Fixes due to review comments - (Task #74)\n\n- Major change, using vector to store object from the execute method\nlambda expression.\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf", "author": {"user": null}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/1e298c6683e3bc1933d65998b3c4c03378692eaf", "committedDate": "2020-01-23T09:32:27Z", "message": "Added some comments as requested by Review - (Task #74)\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdf3a38d8ac8f2f597c877e1a6cae0fa63054604", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/bdf3a38d8ac8f2f597c877e1a6cae0fa63054604", "committedDate": "2020-01-23T15:02:40Z", "message": "Fixes due to review - (Task #74)\n\n- made variables private and removed them due to \"unused\"\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MzcyODI5", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#pullrequestreview-347372829", "createdAt": "2020-01-23T15:11:56Z", "commit": {"oid": "bdf3a38d8ac8f2f597c877e1a6cae0fa63054604"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MTY4Nzc5", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#pullrequestreview-347168779", "createdAt": "2020-01-23T09:48:26Z", "commit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QwOTo0ODoyNlrOFg4K3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNjozMzo0NVrOFhEyzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDAxOTAzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            W */\n          \n          \n            \n             */", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370019036", "createdAt": "2020-01-23T09:48:26Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project.test/src/de/dlr/sc/virsat/project/editingDomain/commands/VirSatClipboardCommandHelperTest.java", "diffHunk": "@@ -31,19 +29,9 @@\n \r\n /**\r\n  * Test Cases for the ClipBoard Command Helper\r\n- * @author fisc_ph\r\n- *\r\n- */\r\n+W */\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDA0ODgzOA==", "bodyText": "Is this comment still correct?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370048838", "createdAt": "2020-01-23T10:49:04Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/util/DVLMCommandParameterApplicableForCheck.java", "diffHunk": "@@ -9,22 +9,34 @@\n  *******************************************************************************/\r\n package de.dlr.sc.virsat.model.dvlm.util;\r\n \r\n+import org.eclipse.emf.ecore.EReference;\r\n import org.eclipse.emf.edit.command.CommandParameter;\r\n \r\n+import de.dlr.sc.virsat.model.dvlm.inheritance.InheritancePackage;\r\n+\r\n \r\n /**\r\n  * This class extends the ApplicableFor checks to be used with EMF CommandParameters\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEyMTUxMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\ted = VirSatEditingDomainRegistry.INSTANCE.getEd((EObject) dropObject);\n          \n          \n            \n            \t\t\ted = VirSatEditingDomainRegistry.INSTANCE.getEd(validatedDropObject);", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370121512", "createdAt": "2020-01-23T13:40:13Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/ADVLMDropAdapaterAssistant.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n+\r\n+import java.util.Collection;\r\n+\r\n+import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+import org.eclipse.swt.dnd.DropTargetEvent;\r\n+import org.eclipse.swt.dnd.TransferData;\r\n+import org.eclipse.ui.navigator.CommonDropAdapter;\r\n+import org.eclipse.ui.navigator.CommonDropAdapterAssistant;\r\n+\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+\r\n+/**\r\n+ * Generic functionality to implement a DVLMDropAdapterAssitant\r\n+ *\r\n+ */\r\n+public abstract class ADVLMDropAdapaterAssistant extends CommonDropAdapterAssistant {\r\n+\r\n+\tprotected VirSatTransactionalEditingDomain ed;\r\n+\tprotected Command validatedDropCommand;\r\n+\tprotected EObject validatedDropObject;\r\n+\tprotected Collection<Object> validatedDragObjects;\r\n+\r\n+\t/**\r\n+\t * Method to create the command which will be used for the validate and handle drop\r\n+\t * @param ed The editing domain for which to create the command\r\n+\t * @param dragObjects the objects which are dragged\r\n+\t * @param operation the type of operation complying with DND\r\n+\t * @param dropObject the object to which the drag operation is supposed to be dropped\r\n+\t * @return the command for executing the drag and drop operation\r\n+\t */\r\n+\tprotected abstract Command createDropCommand(VirSatTransactionalEditingDomain ed, Collection<Object> dragObjects, int operation, EObject dropObject);\r\n+\r\n+\t/**\r\n+\t * Method to determine which objects have been selected by the drag and drop operation\r\n+\t * @return a Collection containing the objects which are dragged\r\n+\t */\r\n+\tprotected abstract Collection<Object> getSelectedDragObjects();\r\n+\r\n+\t@Override\r\n+\tpublic IStatus validateDrop(Object dropObject, int operation, TransferData transferType) {\r\n+\t\tif (dropObject instanceof EObject) {\r\n+\t\t\tvalidatedDragObjects = getSelectedDragObjects();\r\n+\t\t\tvalidatedDropObject = (EObject) dropObject;\r\n+\t\t\ted = VirSatEditingDomainRegistry.INSTANCE.getEd((EObject) dropObject);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEyMzUwNg==", "bodyText": "Shall we maybe rename \"validatedDragObjects\" into just \"dragObjects\"? Or where are they validated?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370123506", "createdAt": "2020-01-23T13:43:57Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/ADVLMDropAdapaterAssistant.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n+\r\n+import java.util.Collection;\r\n+\r\n+import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+import org.eclipse.swt.dnd.DropTargetEvent;\r\n+import org.eclipse.swt.dnd.TransferData;\r\n+import org.eclipse.ui.navigator.CommonDropAdapter;\r\n+import org.eclipse.ui.navigator.CommonDropAdapterAssistant;\r\n+\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+\r\n+/**\r\n+ * Generic functionality to implement a DVLMDropAdapterAssitant\r\n+ *\r\n+ */\r\n+public abstract class ADVLMDropAdapaterAssistant extends CommonDropAdapterAssistant {\r\n+\r\n+\tprotected VirSatTransactionalEditingDomain ed;\r\n+\tprotected Command validatedDropCommand;\r\n+\tprotected EObject validatedDropObject;\r\n+\tprotected Collection<Object> validatedDragObjects;\r\n+\r\n+\t/**\r\n+\t * Method to create the command which will be used for the validate and handle drop\r\n+\t * @param ed The editing domain for which to create the command\r\n+\t * @param dragObjects the objects which are dragged\r\n+\t * @param operation the type of operation complying with DND\r\n+\t * @param dropObject the object to which the drag operation is supposed to be dropped\r\n+\t * @return the command for executing the drag and drop operation\r\n+\t */\r\n+\tprotected abstract Command createDropCommand(VirSatTransactionalEditingDomain ed, Collection<Object> dragObjects, int operation, EObject dropObject);\r\n+\r\n+\t/**\r\n+\t * Method to determine which objects have been selected by the drag and drop operation\r\n+\t * @return a Collection containing the objects which are dragged\r\n+\t */\r\n+\tprotected abstract Collection<Object> getSelectedDragObjects();\r\n+\r\n+\t@Override\r\n+\tpublic IStatus validateDrop(Object dropObject, int operation, TransferData transferType) {\r\n+\t\tif (dropObject instanceof EObject) {\r\n+\t\t\tvalidatedDragObjects = getSelectedDragObjects();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDEyNDEwMA==", "bodyText": "Eclipse formatter wouldn't have liked it \ud83d\ude04", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370124100", "createdAt": "2020-01-23T13:45:07Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/ADVLMDropAdapaterAssistant.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n+\r\n+import java.util.Collection;\r\n+\r\n+import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+import org.eclipse.swt.dnd.DropTargetEvent;\r\n+import org.eclipse.swt.dnd.TransferData;\r\n+import org.eclipse.ui.navigator.CommonDropAdapter;\r\n+import org.eclipse.ui.navigator.CommonDropAdapterAssistant;\r\n+\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+\r\n+/**\r\n+ * Generic functionality to implement a DVLMDropAdapterAssitant\r\n+ *\r\n+ */\r\n+public abstract class ADVLMDropAdapaterAssistant extends CommonDropAdapterAssistant {\r\n+\r\n+\tprotected VirSatTransactionalEditingDomain ed;\r\n+\tprotected Command validatedDropCommand;\r\n+\tprotected EObject validatedDropObject;\r\n+\tprotected Collection<Object> validatedDragObjects;\r\n+\r\n+\t/**\r\n+\t * Method to create the command which will be used for the validate and handle drop\r\n+\t * @param ed The editing domain for which to create the command\r\n+\t * @param dragObjects the objects which are dragged\r\n+\t * @param operation the type of operation complying with DND\r\n+\t * @param dropObject the object to which the drag operation is supposed to be dropped\r\n+\t * @return the command for executing the drag and drop operation\r\n+\t */\r\n+\tprotected abstract Command createDropCommand(VirSatTransactionalEditingDomain ed, Collection<Object> dragObjects, int operation, EObject dropObject);\r\n+\r\n+\t/**\r\n+\t * Method to determine which objects have been selected by the drag and drop operation\r\n+\t * @return a Collection containing the objects which are dragged\r\n+\t */\r\n+\tprotected abstract Collection<Object> getSelectedDragObjects();\r\n+\r\n+\t@Override\r\n+\tpublic IStatus validateDrop(Object dropObject, int operation, TransferData transferType) {\r\n+\t\tif (dropObject instanceof EObject) {\r\n+\t\t\tvalidatedDragObjects = getSelectedDragObjects();\r\n+\t\t\tvalidatedDropObject = (EObject) dropObject;\r\n+\t\t\ted = VirSatEditingDomainRegistry.INSTANCE.getEd((EObject) dropObject);\r\n+\t\t\tvalidatedDropCommand = createDropCommand(\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0NjExMg==", "bodyText": "I am wondering, does eclipse guarantee to have the same class instance process validate and handle without interference of other DND operations? (in this case we can just save the command and remove this if, and other fields).\nAnyhow, is command creation so expensive that we want to cache it? Or does it have side effects? Let's maybe create the command again and simplify the whole class?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370146112", "createdAt": "2020-01-23T14:24:05Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/ADVLMDropAdapaterAssistant.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n+\r\n+import java.util.Collection;\r\n+\r\n+import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+import org.eclipse.swt.dnd.DropTargetEvent;\r\n+import org.eclipse.swt.dnd.TransferData;\r\n+import org.eclipse.ui.navigator.CommonDropAdapter;\r\n+import org.eclipse.ui.navigator.CommonDropAdapterAssistant;\r\n+\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+\r\n+/**\r\n+ * Generic functionality to implement a DVLMDropAdapterAssitant\r\n+ *\r\n+ */\r\n+public abstract class ADVLMDropAdapaterAssistant extends CommonDropAdapterAssistant {\r\n+\r\n+\tprotected VirSatTransactionalEditingDomain ed;\r\n+\tprotected Command validatedDropCommand;\r\n+\tprotected EObject validatedDropObject;\r\n+\tprotected Collection<Object> validatedDragObjects;\r\n+\r\n+\t/**\r\n+\t * Method to create the command which will be used for the validate and handle drop\r\n+\t * @param ed The editing domain for which to create the command\r\n+\t * @param dragObjects the objects which are dragged\r\n+\t * @param operation the type of operation complying with DND\r\n+\t * @param dropObject the object to which the drag operation is supposed to be dropped\r\n+\t * @return the command for executing the drag and drop operation\r\n+\t */\r\n+\tprotected abstract Command createDropCommand(VirSatTransactionalEditingDomain ed, Collection<Object> dragObjects, int operation, EObject dropObject);\r\n+\r\n+\t/**\r\n+\t * Method to determine which objects have been selected by the drag and drop operation\r\n+\t * @return a Collection containing the objects which are dragged\r\n+\t */\r\n+\tprotected abstract Collection<Object> getSelectedDragObjects();\r\n+\r\n+\t@Override\r\n+\tpublic IStatus validateDrop(Object dropObject, int operation, TransferData transferType) {\r\n+\t\tif (dropObject instanceof EObject) {\r\n+\t\t\tvalidatedDragObjects = getSelectedDragObjects();\r\n+\t\t\tvalidatedDropObject = (EObject) dropObject;\r\n+\t\t\ted = VirSatEditingDomainRegistry.INSTANCE.getEd((EObject) dropObject);\r\n+\t\t\tvalidatedDropCommand = createDropCommand(\r\n+\t\t\t\ted,\r\n+\t\t\t\tvalidatedDragObjects,\r\n+\t\t\t\toperation,\r\n+\t\t\t\tvalidatedDropObject\r\n+\t\t\t);\r\n+\t\t\t\r\n+\t\t\t\r\n+\t\t\treturn validatedDropCommand.canExecute() ? Status.OK_STATUS : Status.CANCEL_STATUS;\r\n+\t\t}\r\n+\t\treturn Status.CANCEL_STATUS;\r\n+\t}\r\n+\r\n+\t@Override\r\n+\tpublic IStatus handleDrop(CommonDropAdapter aDropAdapter, DropTargetEvent aDropTargetEvent, Object handleDropObject) {\r\n+\t\tCollection<Object> handleDragObjects = getSelectedDragObjects();\r\n+\t\tif (handleDropObject == validatedDropObject && handleDragObjects.equals(validatedDragObjects)) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0OTA4MA==", "bodyText": "Why do we need to set the selection to drop target?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370149080", "createdAt": "2020-01-23T14:28:58Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/DVLMDefaultCopyAndPasteDropAdapterAssistant.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n+\r\n+import java.util.Collection;\r\n+import java.util.Collections;\r\n+\r\n+import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.common.command.UnexecutableCommand;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+import org.eclipse.jface.util.LocalSelectionTransfer;\r\n+import org.eclipse.jface.viewers.ISelection;\r\n+import org.eclipse.jface.viewers.IStructuredSelection;\r\n+import org.eclipse.jface.viewers.StructuredSelection;\r\n+import org.eclipse.swt.dnd.DND;\r\n+import org.eclipse.swt.dnd.DropTargetEvent;\r\n+import org.eclipse.ui.PlatformUI;\r\n+import org.eclipse.ui.navigator.CommonDropAdapter;\r\n+import org.eclipse.ui.navigator.CommonViewer;\r\n+\r\n+import de.dlr.sc.virsat.project.editingDomain.commands.VirSatEditingDomainClipBoard.ClipboardState;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+import de.dlr.sc.virsat.project.editingDomain.commands.VirSatPasteFromClipboardCommand;\r\n+import de.dlr.sc.virsat.project.ui.navigator.VirSatNavigator;\r\n+\r\n+/**\r\n+ * VirSat Drop Assistant to copy and paste SEIs and CAs in the Navigator\r\n+ *\r\n+ */\r\n+public class DVLMDefaultCopyAndPasteDropAdapterAssistant extends ADVLMDropAdapaterAssistant {\r\n+\t\r\n+\t@Override\r\n+\tpublic IStatus handleDrop(CommonDropAdapter aDropAdapter, DropTargetEvent aDropTargetEvent, Object aTarget) {\r\n+\t\tIStatus superStatus = super.handleDrop(aDropAdapter, aDropTargetEvent, aTarget);\r\n+\t\t\r\n+\t\tif (superStatus.isOK()) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE0OTUzMQ==", "bodyText": "I suggest we move the selection setting to its own method", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370149531", "createdAt": "2020-01-23T14:29:43Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/DVLMDefaultCopyAndPasteDropAdapterAssistant.java", "diffHunk": "@@ -0,0 +1,81 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n+\r\n+import java.util.Collection;\r\n+import java.util.Collections;\r\n+\r\n+import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.common.command.UnexecutableCommand;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+import org.eclipse.jface.util.LocalSelectionTransfer;\r\n+import org.eclipse.jface.viewers.ISelection;\r\n+import org.eclipse.jface.viewers.IStructuredSelection;\r\n+import org.eclipse.jface.viewers.StructuredSelection;\r\n+import org.eclipse.swt.dnd.DND;\r\n+import org.eclipse.swt.dnd.DropTargetEvent;\r\n+import org.eclipse.ui.PlatformUI;\r\n+import org.eclipse.ui.navigator.CommonDropAdapter;\r\n+import org.eclipse.ui.navigator.CommonViewer;\r\n+\r\n+import de.dlr.sc.virsat.project.editingDomain.commands.VirSatEditingDomainClipBoard.ClipboardState;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+import de.dlr.sc.virsat.project.editingDomain.commands.VirSatPasteFromClipboardCommand;\r\n+import de.dlr.sc.virsat.project.ui.navigator.VirSatNavigator;\r\n+\r\n+/**\r\n+ * VirSat Drop Assistant to copy and paste SEIs and CAs in the Navigator\r\n+ *\r\n+ */\r\n+public class DVLMDefaultCopyAndPasteDropAdapterAssistant extends ADVLMDropAdapaterAssistant {\r\n+\t\r\n+\t@Override\r\n+\tpublic IStatus handleDrop(CommonDropAdapter aDropAdapter, DropTargetEvent aDropTargetEvent, Object aTarget) {\r\n+\t\tIStatus superStatus = super.handleDrop(aDropAdapter, aDropTargetEvent, aTarget);\r\n+\t\t\r\n+\t\tif (superStatus.isOK()) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE2NDI1MA==", "bodyText": "Do we need to init copy-paste adapter, but not inheritance?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370164250", "createdAt": "2020-01-23T14:53:41Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/DVLMObjectDropAdapterAssistant.java", "diffHunk": "@@ -9,98 +9,176 @@\n  *******************************************************************************/\r\n package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n \r\n-import java.util.Collection;\r\n+import java.util.HashMap;\r\n+import java.util.Map;\r\n+import java.util.function.Function;\r\n \r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.IConfigurationElement;\r\n import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Platform;\r\n import org.eclipse.core.runtime.Status;\r\n-import org.eclipse.emf.common.command.Command;\r\n-import org.eclipse.emf.ecore.EObject;\r\n-import org.eclipse.jface.util.LocalSelectionTransfer;\r\n-import org.eclipse.jface.viewers.ISelection;\r\n import org.eclipse.jface.viewers.IStructuredSelection;\r\n-import org.eclipse.jface.viewers.StructuredSelection;\r\n-import org.eclipse.swt.dnd.DND;\r\n import org.eclipse.swt.dnd.DropTargetEvent;\r\n import org.eclipse.swt.dnd.TransferData;\r\n-import org.eclipse.ui.PlatformUI;\r\n import org.eclipse.ui.navigator.CommonDropAdapter;\r\n import org.eclipse.ui.navigator.CommonDropAdapterAssistant;\r\n-import org.eclipse.ui.navigator.CommonViewer;\r\n-\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatEditingDomainClipBoard.ClipboardState;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatPasteFromClipboardCommand;\r\n-import de.dlr.sc.virsat.project.ui.navigator.VirSatNavigator;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.ATypeInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.util.ActiveConceptHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\r\n+import de.dlr.sc.virsat.project.Activator;\r\n \r\n /**\r\n- * VirSat Drop Assitant to copy and paste SEIs and CAs in the Navigator\r\n- * @author fisc_ph\r\n- *\r\n+ * Drop Assistant for VirSat Navigator that delegates calls to concept specific drop assistants\r\n  */\r\n public class DVLMObjectDropAdapterAssistant extends CommonDropAdapterAssistant {\r\n \r\n+\tprotected Map<String, CommonDropAdapterAssistant> mapConceptIdToDelegateDropAdapter;\r\n+\t\r\n+\tprotected CommonDropAdapterAssistant defaultCopyPasteDropAdapter;\r\n+\tprotected CommonDropAdapterAssistant defaultInheritanceDropAdapter;\r\n+\t\r\n+\tpublic static final String EXTENSION_POINT_NAVIGATOR = \"de.dlr.sc.virsat.project.ui.navigator\";\r\n+\tpublic static final String EXTENSION_POINT_DROP_ASSISTANT_CONTRIBUTION = \"DVLMConceptDropAssistant\";\r\n+\t\r\n+\tpublic static final String EXTENSION_POINT_DROP_ASSISTANT_CONCEPT_ID = \"conceptId\";\r\n+\tpublic static final String EXTENSION_POINT_DROP_ASSISTANT_IMPLEMENTATION = \"class\";\r\n+\t\r\n+\t@Override\r\n+\tprotected void doInit() {\r\n+\t\tinitDropAssistantMap();\r\n+\t\t\r\n+\t\tdefaultCopyPasteDropAdapter = new DVLMDefaultCopyAndPasteDropAdapterAssistant();\r\n+\t\tdefaultInheritanceDropAdapter = new DVLMDefaultInheritanceDropAdapterAssistant();\r\n+\t\tdefaultCopyPasteDropAdapter.init(getContentService());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE3MDIyMg==", "bodyText": "Let's move this to the top to the other fields", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370170222", "createdAt": "2020-01-23T15:03:08Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/DVLMObjectDropAdapterAssistant.java", "diffHunk": "@@ -9,98 +9,176 @@\n  *******************************************************************************/\r\n package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n \r\n-import java.util.Collection;\r\n+import java.util.HashMap;\r\n+import java.util.Map;\r\n+import java.util.function.Function;\r\n \r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.IConfigurationElement;\r\n import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Platform;\r\n import org.eclipse.core.runtime.Status;\r\n-import org.eclipse.emf.common.command.Command;\r\n-import org.eclipse.emf.ecore.EObject;\r\n-import org.eclipse.jface.util.LocalSelectionTransfer;\r\n-import org.eclipse.jface.viewers.ISelection;\r\n import org.eclipse.jface.viewers.IStructuredSelection;\r\n-import org.eclipse.jface.viewers.StructuredSelection;\r\n-import org.eclipse.swt.dnd.DND;\r\n import org.eclipse.swt.dnd.DropTargetEvent;\r\n import org.eclipse.swt.dnd.TransferData;\r\n-import org.eclipse.ui.PlatformUI;\r\n import org.eclipse.ui.navigator.CommonDropAdapter;\r\n import org.eclipse.ui.navigator.CommonDropAdapterAssistant;\r\n-import org.eclipse.ui.navigator.CommonViewer;\r\n-\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatEditingDomainClipBoard.ClipboardState;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatPasteFromClipboardCommand;\r\n-import de.dlr.sc.virsat.project.ui.navigator.VirSatNavigator;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.ATypeInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.util.ActiveConceptHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\r\n+import de.dlr.sc.virsat.project.Activator;\r\n \r\n /**\r\n- * VirSat Drop Assitant to copy and paste SEIs and CAs in the Navigator\r\n- * @author fisc_ph\r\n- *\r\n+ * Drop Assistant for VirSat Navigator that delegates calls to concept specific drop assistants\r\n  */\r\n public class DVLMObjectDropAdapterAssistant extends CommonDropAdapterAssistant {\r\n \r\n+\tprotected Map<String, CommonDropAdapterAssistant> mapConceptIdToDelegateDropAdapter;\r\n+\t\r\n+\tprotected CommonDropAdapterAssistant defaultCopyPasteDropAdapter;\r\n+\tprotected CommonDropAdapterAssistant defaultInheritanceDropAdapter;\r\n+\t\r\n+\tpublic static final String EXTENSION_POINT_NAVIGATOR = \"de.dlr.sc.virsat.project.ui.navigator\";\r\n+\tpublic static final String EXTENSION_POINT_DROP_ASSISTANT_CONTRIBUTION = \"DVLMConceptDropAssistant\";\r\n+\t\r\n+\tpublic static final String EXTENSION_POINT_DROP_ASSISTANT_CONCEPT_ID = \"conceptId\";\r\n+\tpublic static final String EXTENSION_POINT_DROP_ASSISTANT_IMPLEMENTATION = \"class\";\r\n+\t\r\n+\t@Override\r\n+\tprotected void doInit() {\r\n+\t\tinitDropAssistantMap();\r\n+\t\t\r\n+\t\tdefaultCopyPasteDropAdapter = new DVLMDefaultCopyAndPasteDropAdapterAssistant();\r\n+\t\tdefaultInheritanceDropAdapter = new DVLMDefaultInheritanceDropAdapterAssistant();\r\n+\t\tdefaultCopyPasteDropAdapter.init(getContentService());\r\n+\t}\r\n+\r\n \t/**\r\n-\t * Method to create a Drop Command based on the Copy Paste functionality\r\n-\t * @param target The object to witch to drop to\r\n-\t * @param operation the type of DND operation\r\n-\t * @return the ccommand if it is creatable or null in case it could not be created\r\n+\t * Reads out the extension point to initialize the map of\r\n+\t * concept ids vs. drop adapters\r\n \t */\r\n-\tprivate Command createDropCommand(Object target, int operation) {\r\n-\t\tCommand dropCommand = null;\r\n-\t\t\r\n-\t\tif (target instanceof EObject) {\r\n-\t\t\tEObject eObject = (EObject) target;\r\n-\t\t\tVirSatTransactionalEditingDomain virSatEd = VirSatEditingDomainRegistry.INSTANCE.getEd(eObject);\r\n-\t\t\tISelection selection = LocalSelectionTransfer.getTransfer().getSelection();\r\n-\t\t\t\r\n-\t\t\tif (selection instanceof IStructuredSelection) {\r\n-\t\t\t\tIStructuredSelection structerdSelection = (IStructuredSelection) selection;\r\n-\t\t\t\t\r\n-\t\t\t\t@SuppressWarnings(\"unchecked\")\r\n-\t\t\t\tCollection<Object> dndObjects = structerdSelection.toList();\r\n-\t\t\t\t\t\r\n-\t\t\t\tif (operation == DND.DROP_COPY) {\r\n-\t\t\t\t\tdropCommand = VirSatPasteFromClipboardCommand.create(virSatEd, eObject, dndObjects, ClipboardState.COPY);\r\n-\t\t\t\t} else if (operation == DND.DROP_MOVE) {\r\n-\t\t\t\t\tdropCommand = VirSatPasteFromClipboardCommand.create(virSatEd, eObject, dndObjects, ClipboardState.CUT);\r\n+\tprotected void initDropAssistantMap() {\r\n+\t\t// Re initialize the map of drop assistants\r\n+\t\tmapConceptIdToDelegateDropAdapter = new HashMap<>();\r\n+\t\r\n+\t\t// Now start looping over all Navigator extensions to find the possible registered drop assistants\r\n+\t\tIConfigurationElement[] navigatorExtensions = Platform.getExtensionRegistry().getConfigurationElementsFor(EXTENSION_POINT_NAVIGATOR);\r\n+\t\tfor (IConfigurationElement navigatorExtension : navigatorExtensions) {\r\n+\t\t\tif (EXTENSION_POINT_DROP_ASSISTANT_CONTRIBUTION.equals(navigatorExtension.getName())) {\r\n+\t\t\t\tString conceptId = navigatorExtension.getAttribute(EXTENSION_POINT_DROP_ASSISTANT_CONCEPT_ID);\r\n+\t\t\t\tCommonDropAdapterAssistant dropAdapter;\r\n+\t\t\t\ttry {\r\n+\t\t\t\t\tdropAdapter = (CommonDropAdapterAssistant) navigatorExtension.createExecutableExtension(EXTENSION_POINT_DROP_ASSISTANT_IMPLEMENTATION);\r\n+\t\t\t\t\tdropAdapter.init(getContentService());\r\n+\t\t\t\t\tif (!mapConceptIdToDelegateDropAdapter.containsKey(conceptId)) {\r\n+\t\t\t\t\t\tmapConceptIdToDelegateDropAdapter.put(conceptId, dropAdapter);\r\n+\t\t\t\t\t} else {\r\n+\t\t\t\t\t\tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(), \"Cannot register two drop adapter for the same concept: \" + conceptId));\r\n+\t\t\t\t\t}\r\n+\t\t\t\t} catch (CoreException e) {\r\n+\t\t\t\t\tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(), \"Failed to create executable extension for drop adapter in concept: \" + navigatorExtension.getContributor() + \"->\" + conceptId + \" because: \" + e.getMessage()));\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n-\t\treturn dropCommand;\r\n \t}\r\n+\r\n+\t/**\r\n+\t * Call this method to get a drop adapter for a given object.\r\n+\t * The method checks if the object belongs to a concept and hands\r\n+\t * back the drop adapter which is in the map if it exists\r\n+\t * @param object the object for which to find a specialized drop adapter \r\n+\t * @return null in case there is no specific drop adapter for the given object.\r\n+\t */\r\n+\tprotected CommonDropAdapterAssistant getDelegateDropAdapter(Object object) {\r\n+\t\t// To call a concept drop assistant the object where to drop at needs\r\n+\t\t// to be a dvlm instance. Once this is clear it is possible to detect the\r\n+\t\t// type of the object and the concept corresponding to it.\r\n+\t\tConcept concept = null;\r\n+\t\tif (object instanceof StructuralElementInstance) {\r\n+\t\t\tStructuralElementInstance sei = (StructuralElementInstance) object;\r\n+\t\t\tconcept = ActiveConceptHelper.getConcept(sei.getType());\r\n+\t\t} else if (object instanceof ATypeInstance) {\r\n+\t\t\tATypeInstance ti = (ATypeInstance) object;\r\n+\t\t\tconcept = ActiveConceptHelper.getConcept(ti.getType());\r\n+\t\t}\r\n \t\r\n-\t@Override\r\n-\tpublic IStatus validateDrop(Object target, int operation, TransferData transferType) {\t\t\r\n-\t\tCommand dropCommand = createDropCommand(target, operation);\r\n-\t\tif ((dropCommand != null) && (dropCommand.canExecute())) {\r\n-\t\t\treturn Status.OK_STATUS;\r\n-\t\t} else {\r\n-\t\t\treturn Status.CANCEL_STATUS;\r\n+\t\t// In case we found a concept try to get a drop adapter for it\r\n+\t\tif (concept != null) {\r\n+\t\t\t// now ask the map for the drop assistant and hand it back\r\n+\t\t\tString conceptId = concept.getName();\r\n+\t\t\tCommonDropAdapterAssistant dropAdapterAssitant = mapConceptIdToDelegateDropAdapter.get(conceptId);\r\n+\t\t\treturn dropAdapterAssitant;\r\n+\t\t}\r\n+\t\t\r\n+\t\treturn null;\r\n+\t}\r\n+\t\r\n+\tprivate CommonDropAdapterAssistant delegateDropAdapter;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE3MTU0MQ==", "bodyText": "Let's rename it to something like getConceptSpecificDropAdapter", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370171541", "createdAt": "2020-01-23T15:05:14Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/DVLMObjectDropAdapterAssistant.java", "diffHunk": "@@ -9,98 +9,176 @@\n  *******************************************************************************/\r\n package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n \r\n-import java.util.Collection;\r\n+import java.util.HashMap;\r\n+import java.util.Map;\r\n+import java.util.function.Function;\r\n \r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.IConfigurationElement;\r\n import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Platform;\r\n import org.eclipse.core.runtime.Status;\r\n-import org.eclipse.emf.common.command.Command;\r\n-import org.eclipse.emf.ecore.EObject;\r\n-import org.eclipse.jface.util.LocalSelectionTransfer;\r\n-import org.eclipse.jface.viewers.ISelection;\r\n import org.eclipse.jface.viewers.IStructuredSelection;\r\n-import org.eclipse.jface.viewers.StructuredSelection;\r\n-import org.eclipse.swt.dnd.DND;\r\n import org.eclipse.swt.dnd.DropTargetEvent;\r\n import org.eclipse.swt.dnd.TransferData;\r\n-import org.eclipse.ui.PlatformUI;\r\n import org.eclipse.ui.navigator.CommonDropAdapter;\r\n import org.eclipse.ui.navigator.CommonDropAdapterAssistant;\r\n-import org.eclipse.ui.navigator.CommonViewer;\r\n-\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatEditingDomainClipBoard.ClipboardState;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatPasteFromClipboardCommand;\r\n-import de.dlr.sc.virsat.project.ui.navigator.VirSatNavigator;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.ATypeInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.util.ActiveConceptHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\r\n+import de.dlr.sc.virsat.project.Activator;\r\n \r\n /**\r\n- * VirSat Drop Assitant to copy and paste SEIs and CAs in the Navigator\r\n- * @author fisc_ph\r\n- *\r\n+ * Drop Assistant for VirSat Navigator that delegates calls to concept specific drop assistants\r\n  */\r\n public class DVLMObjectDropAdapterAssistant extends CommonDropAdapterAssistant {\r\n \r\n+\tprotected Map<String, CommonDropAdapterAssistant> mapConceptIdToDelegateDropAdapter;\r\n+\t\r\n+\tprotected CommonDropAdapterAssistant defaultCopyPasteDropAdapter;\r\n+\tprotected CommonDropAdapterAssistant defaultInheritanceDropAdapter;\r\n+\t\r\n+\tpublic static final String EXTENSION_POINT_NAVIGATOR = \"de.dlr.sc.virsat.project.ui.navigator\";\r\n+\tpublic static final String EXTENSION_POINT_DROP_ASSISTANT_CONTRIBUTION = \"DVLMConceptDropAssistant\";\r\n+\t\r\n+\tpublic static final String EXTENSION_POINT_DROP_ASSISTANT_CONCEPT_ID = \"conceptId\";\r\n+\tpublic static final String EXTENSION_POINT_DROP_ASSISTANT_IMPLEMENTATION = \"class\";\r\n+\t\r\n+\t@Override\r\n+\tprotected void doInit() {\r\n+\t\tinitDropAssistantMap();\r\n+\t\t\r\n+\t\tdefaultCopyPasteDropAdapter = new DVLMDefaultCopyAndPasteDropAdapterAssistant();\r\n+\t\tdefaultInheritanceDropAdapter = new DVLMDefaultInheritanceDropAdapterAssistant();\r\n+\t\tdefaultCopyPasteDropAdapter.init(getContentService());\r\n+\t}\r\n+\r\n \t/**\r\n-\t * Method to create a Drop Command based on the Copy Paste functionality\r\n-\t * @param target The object to witch to drop to\r\n-\t * @param operation the type of DND operation\r\n-\t * @return the ccommand if it is creatable or null in case it could not be created\r\n+\t * Reads out the extension point to initialize the map of\r\n+\t * concept ids vs. drop adapters\r\n \t */\r\n-\tprivate Command createDropCommand(Object target, int operation) {\r\n-\t\tCommand dropCommand = null;\r\n-\t\t\r\n-\t\tif (target instanceof EObject) {\r\n-\t\t\tEObject eObject = (EObject) target;\r\n-\t\t\tVirSatTransactionalEditingDomain virSatEd = VirSatEditingDomainRegistry.INSTANCE.getEd(eObject);\r\n-\t\t\tISelection selection = LocalSelectionTransfer.getTransfer().getSelection();\r\n-\t\t\t\r\n-\t\t\tif (selection instanceof IStructuredSelection) {\r\n-\t\t\t\tIStructuredSelection structerdSelection = (IStructuredSelection) selection;\r\n-\t\t\t\t\r\n-\t\t\t\t@SuppressWarnings(\"unchecked\")\r\n-\t\t\t\tCollection<Object> dndObjects = structerdSelection.toList();\r\n-\t\t\t\t\t\r\n-\t\t\t\tif (operation == DND.DROP_COPY) {\r\n-\t\t\t\t\tdropCommand = VirSatPasteFromClipboardCommand.create(virSatEd, eObject, dndObjects, ClipboardState.COPY);\r\n-\t\t\t\t} else if (operation == DND.DROP_MOVE) {\r\n-\t\t\t\t\tdropCommand = VirSatPasteFromClipboardCommand.create(virSatEd, eObject, dndObjects, ClipboardState.CUT);\r\n+\tprotected void initDropAssistantMap() {\r\n+\t\t// Re initialize the map of drop assistants\r\n+\t\tmapConceptIdToDelegateDropAdapter = new HashMap<>();\r\n+\t\r\n+\t\t// Now start looping over all Navigator extensions to find the possible registered drop assistants\r\n+\t\tIConfigurationElement[] navigatorExtensions = Platform.getExtensionRegistry().getConfigurationElementsFor(EXTENSION_POINT_NAVIGATOR);\r\n+\t\tfor (IConfigurationElement navigatorExtension : navigatorExtensions) {\r\n+\t\t\tif (EXTENSION_POINT_DROP_ASSISTANT_CONTRIBUTION.equals(navigatorExtension.getName())) {\r\n+\t\t\t\tString conceptId = navigatorExtension.getAttribute(EXTENSION_POINT_DROP_ASSISTANT_CONCEPT_ID);\r\n+\t\t\t\tCommonDropAdapterAssistant dropAdapter;\r\n+\t\t\t\ttry {\r\n+\t\t\t\t\tdropAdapter = (CommonDropAdapterAssistant) navigatorExtension.createExecutableExtension(EXTENSION_POINT_DROP_ASSISTANT_IMPLEMENTATION);\r\n+\t\t\t\t\tdropAdapter.init(getContentService());\r\n+\t\t\t\t\tif (!mapConceptIdToDelegateDropAdapter.containsKey(conceptId)) {\r\n+\t\t\t\t\t\tmapConceptIdToDelegateDropAdapter.put(conceptId, dropAdapter);\r\n+\t\t\t\t\t} else {\r\n+\t\t\t\t\t\tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(), \"Cannot register two drop adapter for the same concept: \" + conceptId));\r\n+\t\t\t\t\t}\r\n+\t\t\t\t} catch (CoreException e) {\r\n+\t\t\t\t\tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(), \"Failed to create executable extension for drop adapter in concept: \" + navigatorExtension.getContributor() + \"->\" + conceptId + \" because: \" + e.getMessage()));\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t}\r\n-\t\treturn dropCommand;\r\n \t}\r\n+\r\n+\t/**\r\n+\t * Call this method to get a drop adapter for a given object.\r\n+\t * The method checks if the object belongs to a concept and hands\r\n+\t * back the drop adapter which is in the map if it exists\r\n+\t * @param object the object for which to find a specialized drop adapter \r\n+\t * @return null in case there is no specific drop adapter for the given object.\r\n+\t */\r\n+\tprotected CommonDropAdapterAssistant getDelegateDropAdapter(Object object) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 126}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE3Nzk4Mw==", "bodyText": "This shoud be named somehow like DelegatedDropAdapterAssistant", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370177983", "createdAt": "2020-01-23T15:15:38Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/DVLMObjectDropAdapterAssistant.java", "diffHunk": "@@ -9,98 +9,176 @@\n  *******************************************************************************/\r\n package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n \r\n-import java.util.Collection;\r\n+import java.util.HashMap;\r\n+import java.util.Map;\r\n+import java.util.function.Function;\r\n \r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.IConfigurationElement;\r\n import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Platform;\r\n import org.eclipse.core.runtime.Status;\r\n-import org.eclipse.emf.common.command.Command;\r\n-import org.eclipse.emf.ecore.EObject;\r\n-import org.eclipse.jface.util.LocalSelectionTransfer;\r\n-import org.eclipse.jface.viewers.ISelection;\r\n import org.eclipse.jface.viewers.IStructuredSelection;\r\n-import org.eclipse.jface.viewers.StructuredSelection;\r\n-import org.eclipse.swt.dnd.DND;\r\n import org.eclipse.swt.dnd.DropTargetEvent;\r\n import org.eclipse.swt.dnd.TransferData;\r\n-import org.eclipse.ui.PlatformUI;\r\n import org.eclipse.ui.navigator.CommonDropAdapter;\r\n import org.eclipse.ui.navigator.CommonDropAdapterAssistant;\r\n-import org.eclipse.ui.navigator.CommonViewer;\r\n-\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatEditingDomainClipBoard.ClipboardState;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatPasteFromClipboardCommand;\r\n-import de.dlr.sc.virsat.project.ui.navigator.VirSatNavigator;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.ATypeInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.util.ActiveConceptHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\r\n+import de.dlr.sc.virsat.project.Activator;\r\n \r\n /**\r\n- * VirSat Drop Assitant to copy and paste SEIs and CAs in the Navigator\r\n- * @author fisc_ph\r\n- *\r\n+ * Drop Assistant for VirSat Navigator that delegates calls to concept specific drop assistants\r\n  */\r\n public class DVLMObjectDropAdapterAssistant extends CommonDropAdapterAssistant {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4NDU1NA==", "bodyText": "To me it looks like this class mostly repeats platform code. Can't we just use the normal navigator dropassistant extension point from concepts? We can make them higher priority to be sure they act before the default ones", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370184554", "createdAt": "2020-01-23T15:25:31Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/DVLMObjectDropAdapterAssistant.java", "diffHunk": "@@ -9,98 +9,176 @@\n  *******************************************************************************/\r\n package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n \r\n-import java.util.Collection;\r\n+import java.util.HashMap;\r\n+import java.util.Map;\r\n+import java.util.function.Function;\r\n \r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.IConfigurationElement;\r\n import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Platform;\r\n import org.eclipse.core.runtime.Status;\r\n-import org.eclipse.emf.common.command.Command;\r\n-import org.eclipse.emf.ecore.EObject;\r\n-import org.eclipse.jface.util.LocalSelectionTransfer;\r\n-import org.eclipse.jface.viewers.ISelection;\r\n import org.eclipse.jface.viewers.IStructuredSelection;\r\n-import org.eclipse.jface.viewers.StructuredSelection;\r\n-import org.eclipse.swt.dnd.DND;\r\n import org.eclipse.swt.dnd.DropTargetEvent;\r\n import org.eclipse.swt.dnd.TransferData;\r\n-import org.eclipse.ui.PlatformUI;\r\n import org.eclipse.ui.navigator.CommonDropAdapter;\r\n import org.eclipse.ui.navigator.CommonDropAdapterAssistant;\r\n-import org.eclipse.ui.navigator.CommonViewer;\r\n-\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatEditingDomainClipBoard.ClipboardState;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatPasteFromClipboardCommand;\r\n-import de.dlr.sc.virsat.project.ui.navigator.VirSatNavigator;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.ATypeInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.util.ActiveConceptHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\r\n+import de.dlr.sc.virsat.project.Activator;\r\n \r\n /**\r\n- * VirSat Drop Assitant to copy and paste SEIs and CAs in the Navigator\r\n- * @author fisc_ph\r\n- *\r\n+ * Drop Assistant for VirSat Navigator that delegates calls to concept specific drop assistants\r\n  */\r\n public class DVLMObjectDropAdapterAssistant extends CommonDropAdapterAssistant {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE3Nzk4Mw=="}, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE4ODY3MQ==", "bodyText": "Also not clear to me why this class is also appears in the plugin.xml of calculation.ui", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370188671", "createdAt": "2020-01-23T15:31:53Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/DVLMObjectDropAdapterAssistant.java", "diffHunk": "@@ -9,98 +9,176 @@\n  *******************************************************************************/\r\n package de.dlr.sc.virsat.project.ui.navigator.dropAssist;\r\n \r\n-import java.util.Collection;\r\n+import java.util.HashMap;\r\n+import java.util.Map;\r\n+import java.util.function.Function;\r\n \r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.IConfigurationElement;\r\n import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.Platform;\r\n import org.eclipse.core.runtime.Status;\r\n-import org.eclipse.emf.common.command.Command;\r\n-import org.eclipse.emf.ecore.EObject;\r\n-import org.eclipse.jface.util.LocalSelectionTransfer;\r\n-import org.eclipse.jface.viewers.ISelection;\r\n import org.eclipse.jface.viewers.IStructuredSelection;\r\n-import org.eclipse.jface.viewers.StructuredSelection;\r\n-import org.eclipse.swt.dnd.DND;\r\n import org.eclipse.swt.dnd.DropTargetEvent;\r\n import org.eclipse.swt.dnd.TransferData;\r\n-import org.eclipse.ui.PlatformUI;\r\n import org.eclipse.ui.navigator.CommonDropAdapter;\r\n import org.eclipse.ui.navigator.CommonDropAdapterAssistant;\r\n-import org.eclipse.ui.navigator.CommonViewer;\r\n-\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n-import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatEditingDomainClipBoard.ClipboardState;\r\n-import de.dlr.sc.virsat.project.editingDomain.commands.VirSatPasteFromClipboardCommand;\r\n-import de.dlr.sc.virsat.project.ui.navigator.VirSatNavigator;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.ATypeInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.util.ActiveConceptHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\r\n+import de.dlr.sc.virsat.project.Activator;\r\n \r\n /**\r\n- * VirSat Drop Assitant to copy and paste SEIs and CAs in the Navigator\r\n- * @author fisc_ph\r\n- *\r\n+ * Drop Assistant for VirSat Navigator that delegates calls to concept specific drop assistants\r\n  */\r\n public class DVLMObjectDropAdapterAssistant extends CommonDropAdapterAssistant {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIwMjA2Ng==", "bodyText": "Unnecessary comment", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370202066", "createdAt": "2020-01-23T15:53:55Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.model.extension.ps/src/de/dlr/sc/virsat/model/extension/ps/dnd/ProductStructureDragAndDropInheritanceCommandHelper.java", "diffHunk": "@@ -0,0 +1,177 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.ps.dnd;\r\n+\r\n+import java.lang.reflect.Constructor;\r\n+import java.lang.reflect.InvocationTargetException;\r\n+import java.util.Collection;\r\n+import java.util.Collections;\r\n+import java.util.HashMap;\r\n+import java.util.Map;\r\n+\r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.common.command.CompoundCommand;\r\n+import org.eclipse.emf.common.command.UnexecutableCommand;\r\n+\r\n+import de.dlr.sc.virsat.model.concept.types.factory.BeanStructuralElementInstanceFactory;\r\n+import de.dlr.sc.virsat.model.concept.types.structural.IBeanStructuralElementInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.util.ActiveConceptHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.roles.Discipline;\r\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.util.DVLMCopiedNameHelper;\r\n+import de.dlr.sc.virsat.model.extension.ps.Activator;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.AssemblyTree;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementOccurence;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementRealization;\r\n+import de.dlr.sc.virsat.model.extension.ps.model.ProductStorageDomain;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+import de.dlr.sc.virsat.project.structure.command.CreateAddSeiWithFileStructureCommand;\r\n+\r\n+/**\r\n+ * This is a helper class to create the correct command for replacing an inheritance\r\n+ * of a SEI with another SEI.\r\n+ */\r\n+public class ProductStructureDragAndDropInheritanceCommandHelper {\r\n+\r\n+\tprotected Map<Class<? extends IBeanStructuralElementInstance>, Class<? extends IBeanStructuralElementInstance>> mapDropBeanToCreateBean;\r\n+\tprotected BeanStructuralElementInstanceFactory bsf;\r\n+\t\r\n+\t/**\r\n+\t * Constructor\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIxODE4Mg==", "bodyText": "Why do we need to add all these dependencies? I don't see them used in the tests", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370218182", "createdAt": "2020-01-23T16:20:57Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.swtbot.test/META-INF/MANIFEST.MF", "diffHunk": "@@ -43,7 +43,20 @@ Require-Bundle: org.eclipse.swt,\n  de.dlr.sc.virsat.uiengine.ui,\r\n  de.dlr.sc.virsat.concept.unittest.util,\r\n  de.dlr.sc.virsat.model.extension.budget.mass,\r\n- de.dlr.sc.virsat.model.extension.budget.mass.ui\r\n+ de.dlr.sc.virsat.model.extension.budget.mass.ui,\r\n+ org.hamcrest.library,\r\n+ de.dlr.sc.virsat.model.extension.budget.power,\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDIyNTg2OQ==", "bodyText": "Let's maybe also check the number of child items after DND?\nAlso can we emulate add and override actions?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#discussion_r370225869", "createdAt": "2020-01-23T16:33:45Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/InheritanceTest.java", "diffHunk": "@@ -139,6 +140,38 @@ public void singleLevelInheritancePropagationUITest() {\n \t\twaitForAllBuildersAndUiThread();\r\n \t\tassertEquals(\"newDocName\", bot.tableWithId(\"tableDocument\").cell(0, Document.PROPERTY_DOCUMENTNAME));\r\n \t\tassertEquals(\"overriden note\", bot.tableWithId(\"tableDocument\").cell(0, Document.PROPERTY_NOTE));\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void inheritanceTypingDragAndDrop() {\r\n+\t\trename(elementConfiguration, \"ec_1\");\r\n+\t\tSWTBotTreeItem elementConfiguration2 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\r\n+\t\trename(elementConfiguration2, \"ec_2\");\r\n+\t\t\r\n+\t\tSWTBotTreeItem documentEc1 = addElement(Document.class, conceptPs, elementConfiguration);\r\n+\t\tSWTBotTreeItem documentEc2 = addElement(Document.class, conceptPs, elementConfiguration2);\r\n+\r\n+\t\topenEditor(documentEc1);\r\n+\t\tsetText(Document.PROPERTY_DOCUMENTNAME, \"docFromEc1\");\r\n+\r\n+\t\topenEditor(documentEc2);\r\n+\t\tsetText(Document.PROPERTY_DOCUMENTNAME, \"docFromEc2\");\r\n+\t\t\r\n+\t\t// There are no documents yet with the ElementOccurrence\r\n+\t\tassertThat(\"There is only the documents folder\", elementOccurence.getItems(), arrayWithSize(1));\r\n+\t\t\r\n+\t\t// Now drag the first inheritance\r\n+\t\telementConfiguration.dragAndDrop(elementOccurence);\r\n+\t\twaitForAllBuildersAndUiThread();\r\n+\t\t\r\n+\t\topenEditor(elementOccurence);\r\n+\t\tassertEquals(\"Received override from EC1\", \"docFromEc1\", bot.tableWithId(\"tableDocument\").cell(0, Document.PROPERTY_DOCUMENTNAME));\r\n+\t\t\r\n+\t\t// now drag the other and verify\r\n+\t\telementConfiguration2.dragAndDrop(elementOccurence);\r\n+\t\twaitForAllBuildersAndUiThread();\r\n \t\t\r\n+\t\topenEditor(elementOccurence);\r\n+\t\tassertEquals(\"Received override from EC2\", \"docFromEc2\", bot.tableWithId(\"tableDocument\").cell(0, Document.PROPERTY_DOCUMENTNAME));\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e298c6683e3bc1933d65998b3c4c03378692eaf"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8802020c59396ce5b6f3f777fdfebc09a6d39309", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8802020c59396ce5b6f3f777fdfebc09a6d39309", "committedDate": "2020-01-24T06:23:57Z", "message": "Update de.dlr.sc.virsat.project.test/src/de/dlr/sc/virsat/project/editingDomain/commands/VirSatClipboardCommandHelperTest.java\n\nCo-Authored-By: andriikovalov-dlr <48556822+andriikovalov-dlr@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "903439e3ec12d9bfbc7a2a06a334de1e1421b615", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/903439e3ec12d9bfbc7a2a06a334de1e1421b615", "committedDate": "2020-01-24T06:25:06Z", "message": "Update de.dlr.sc.virsat.project.ui/src/de/dlr/sc/virsat/project/ui/navigator/dropAssist/ADVLMDropAdapaterAssistant.java\n\nCo-Authored-By: andriikovalov-dlr <48556822+andriikovalov-dlr@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9df21cdafa90accc3ef49854443262aedaceaf0", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f9df21cdafa90accc3ef49854443262aedaceaf0", "committedDate": "2020-01-24T06:53:54Z", "message": "Changes due to review of andrii - (Task #74)\n\n- fixed some comments\n- renamed class\n- renamed some member variables\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3c07e5e3d9768becece2472b2a6b29024cdfc3f", "author": {"user": {"login": "PhilMFischer", "name": "Philipp M. Fischer"}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/c3c07e5e3d9768becece2472b2a6b29024cdfc3f", "committedDate": "2020-01-24T06:56:51Z", "message": "Merge with changes from GitHub Review - (Task #74)\n\n\n---\nTask #74: Override DND functionality in Navigator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3Nzg1MjEy", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#pullrequestreview-347785212", "createdAt": "2020-01-24T07:34:29Z", "commit": {"oid": "c3c07e5e3d9768becece2472b2a6b29024cdfc3f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3ODI0MTc4", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/427#pullrequestreview-347824178", "createdAt": "2020-01-24T09:14:10Z", "commit": {"oid": "c3c07e5e3d9768becece2472b2a6b29024cdfc3f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "348991dd1f3d87901af666a47065c927ea0c0aef", "author": {"user": {"login": "andriikovalov-dlr", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/348991dd1f3d87901af666a47065c927ea0c0aef", "committedDate": "2020-01-24T09:32:41Z", "message": "Removed unused dropAssistant from calculations - (Task #74)\n\n---\nTask #74: Override DND functionality in Navigator"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 576, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}