{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NzYwNDEy", "number": 748, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODowNTowN1rOEyOXVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODoyMzozOVrOEyOxsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMDk5NjA1OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/dataaccess/TransactionalJsonProviderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODowNTowN1rOHovfpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODoyNzo0NVrOHowSKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4MzIzOQ==", "bodyText": "Do we want to print out the messages here?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512483239", "createdAt": "2020-10-27T08:05:07Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/dataaccess/TransactionalJsonProviderTest.java", "diffHunk": "@@ -118,16 +123,52 @@ public void testWriteTo() throws WebApplicationException, IOException {\n \t\twriteToAndAssert();\n \t}\n \t\n+\t/**\n+\t * Open the remote repository and count the commits\n+\t * @return number of commits in remote\n+\t * @throws IOException\n+\t * @throws NoHeadException\n+\t * @throws GitAPIException\n+\t * @throws InterruptedException\n+\t */\n+\tprivate int countCommits() throws IOException, NoHeadException, GitAPIException, InterruptedException {\n+\t\tGit git = Git.open(pathRepoRemote.toFile());\n+\t\tIterator<RevCommit> iterator = git.log().call().iterator();\n+\t\tint commits = 0;\n+\t\twhile (iterator.hasNext()) {\n+\t\t\tSystem.out.println(iterator.next().getFullMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5NjE2OA==", "bodyText": "Nope, I will delete the print statement", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512496168", "createdAt": "2020-10-27T08:27:45Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/dataaccess/TransactionalJsonProviderTest.java", "diffHunk": "@@ -118,16 +123,52 @@ public void testWriteTo() throws WebApplicationException, IOException {\n \t\twriteToAndAssert();\n \t}\n \t\n+\t/**\n+\t * Open the remote repository and count the commits\n+\t * @return number of commits in remote\n+\t * @throws IOException\n+\t * @throws NoHeadException\n+\t * @throws GitAPIException\n+\t * @throws InterruptedException\n+\t */\n+\tprivate int countCommits() throws IOException, NoHeadException, GitAPIException, InterruptedException {\n+\t\tGit git = Git.open(pathRepoRemote.toFile());\n+\t\tIterator<RevCommit> iterator = git.log().call().iterator();\n+\t\tint commits = 0;\n+\t\twhile (iterator.hasNext()) {\n+\t\t\tSystem.out.println(iterator.next().getFullMessage());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4MzIzOQ=="}, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 137}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTAyMTI0OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/dataaccess/TransactionalJsonProvider.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODoxMjowOFrOHovusw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxMjo0NjoxMlrOHo6Ydg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4NzA5MQ==", "bodyText": "Do we still need this if it was just for debugging?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512487091", "createdAt": "2020-10-27T08:12:08Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/dataaccess/TransactionalJsonProvider.java", "diffHunk": "@@ -92,14 +118,30 @@ public void setEd(VirSatTransactionalEditingDomain ed) {\n \tprotected void preWriteTo(Object object, Class<?> type, Type genericType,\n \t\t\tAnnotation[] annotations, MediaType mediaType,\n \t\t\tMultivaluedMap<String, Object> httpHeaders, Marshaller marshaller) throws JAXBException {\n+\t\tsuper.preWriteTo(object, type, genericType, annotations, mediaType, httpHeaders, marshaller);\n \t\tmarshaller.setEventHandler(eventHandler);\n \t}\n-\n+\t\n+\t@Override\n+\tpublic void writeTo(Object object, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,\n+\t\t\tMultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)\n+\t\t\tthrows IOException, WebApplicationException {\n+\t\t// Useful for debugging\n+\t\tsuper.writeTo(object, type, genericType, annotations, mediaType, httpHeaders, entityStream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5Njc2MA==", "bodyText": "I think it would be easier to maintain if we leave it there. But I don't have a strong opinion on it, so we could delete them.\nIn general I think it is not easy to debug beacuse of the huge Moxy/Jaxb stack in the background and we don't have the sources atm. So having this functions where you can easily put a breakpoint makes it a lot easier in my opinion.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512496760", "createdAt": "2020-10-27T08:28:47Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/dataaccess/TransactionalJsonProvider.java", "diffHunk": "@@ -92,14 +118,30 @@ public void setEd(VirSatTransactionalEditingDomain ed) {\n \tprotected void preWriteTo(Object object, Class<?> type, Type genericType,\n \t\t\tAnnotation[] annotations, MediaType mediaType,\n \t\t\tMultivaluedMap<String, Object> httpHeaders, Marshaller marshaller) throws JAXBException {\n+\t\tsuper.preWriteTo(object, type, genericType, annotations, mediaType, httpHeaders, marshaller);\n \t\tmarshaller.setEventHandler(eventHandler);\n \t}\n-\n+\t\n+\t@Override\n+\tpublic void writeTo(Object object, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,\n+\t\t\tMultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)\n+\t\t\tthrows IOException, WebApplicationException {\n+\t\t// Useful for debugging\n+\t\tsuper.writeTo(object, type, genericType, annotations, mediaType, httpHeaders, entityStream);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4NzA5MQ=="}, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjY2MTYyMg==", "bodyText": "Okay.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512661622", "createdAt": "2020-10-27T12:46:12Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/dataaccess/TransactionalJsonProvider.java", "diffHunk": "@@ -92,14 +118,30 @@ public void setEd(VirSatTransactionalEditingDomain ed) {\n \tprotected void preWriteTo(Object object, Class<?> type, Type genericType,\n \t\t\tAnnotation[] annotations, MediaType mediaType,\n \t\t\tMultivaluedMap<String, Object> httpHeaders, Marshaller marshaller) throws JAXBException {\n+\t\tsuper.preWriteTo(object, type, genericType, annotations, mediaType, httpHeaders, marshaller);\n \t\tmarshaller.setEventHandler(eventHandler);\n \t}\n-\n+\t\n+\t@Override\n+\tpublic void writeTo(Object object, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,\n+\t\t\tMultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)\n+\t\t\tthrows IOException, WebApplicationException {\n+\t\t// Useful for debugging\n+\t\tsuper.writeTo(object, type, genericType, annotations, mediaType, httpHeaders, entityStream);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4NzA5MQ=="}, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTAyOTkzOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/resources/ModelAccessResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODoxNDozNVrOHovz-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODozMDo1MFrOHowZKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4ODQ0Mg==", "bodyText": "Can we just use \"List\" on the left hand side?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512488442", "createdAt": "2020-10-27T08:14:35Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/resources/ModelAccessResource.java", "diffHunk": "@@ -226,6 +234,57 @@ public Response getCa(@PathParam(\"caUuid\") String caUuid) {\n \t\tpublic Response putCa(ABeanCategoryAssignment bean) {\r\n \t\t\treturn Response.status(Response.Status.OK).build();\r\n \t\t}\r\n+\t\t\r\n+\t\t/**\r\n+\t\t * Returns a response with a list of the root seis\r\n+\t\t * @return a server response\r\n+\t\t */\r\n+\t\t@GET\r\n+\t\t@Path(ROOT_SEIS)\r\n+\t\t@Produces(MediaType.APPLICATION_JSON)\r\n+\t\tpublic Response getRootSeis() {\r\n+\t\t\ttry {\r\n+\t\t\t\tEList<StructuralElementInstance> rootSeis = repository.getRootEntities();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5Nzk2MA==", "bodyText": "Sure", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512497960", "createdAt": "2020-10-27T08:30:50Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/resources/ModelAccessResource.java", "diffHunk": "@@ -226,6 +234,57 @@ public Response getCa(@PathParam(\"caUuid\") String caUuid) {\n \t\tpublic Response putCa(ABeanCategoryAssignment bean) {\r\n \t\t\treturn Response.status(Response.Status.OK).build();\r\n \t\t}\r\n+\t\t\r\n+\t\t/**\r\n+\t\t * Returns a response with a list of the root seis\r\n+\t\t * @return a server response\r\n+\t\t */\r\n+\t\t@GET\r\n+\t\t@Path(ROOT_SEIS)\r\n+\t\t@Produces(MediaType.APPLICATION_JSON)\r\n+\t\tpublic Response getRootSeis() {\r\n+\t\t\ttry {\r\n+\t\t\t\tEList<StructuralElementInstance> rootSeis = repository.getRootEntities();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4ODQ0Mg=="}, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTAzNjI5OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/resources/ModelAccessResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODoxNjoxNlrOHov3qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODoxNjoxNlrOHov3qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4OTM4Nw==", "bodyText": "Lets break this up a bit so we dont have such a complicated parameter call.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512489387", "createdAt": "2020-10-27T08:16:16Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/resources/ModelAccessResource.java", "diffHunk": "@@ -226,6 +234,57 @@ public Response getCa(@PathParam(\"caUuid\") String caUuid) {\n \t\tpublic Response putCa(ABeanCategoryAssignment bean) {\r\n \t\t\treturn Response.status(Response.Status.OK).build();\r\n \t\t}\r\n+\t\t\r\n+\t\t/**\r\n+\t\t * Returns a response with a list of the root seis\r\n+\t\t * @return a server response\r\n+\t\t */\r\n+\t\t@GET\r\n+\t\t@Path(ROOT_SEIS)\r\n+\t\t@Produces(MediaType.APPLICATION_JSON)\r\n+\t\tpublic Response getRootSeis() {\r\n+\t\t\ttry {\r\n+\t\t\t\tEList<StructuralElementInstance> rootSeis = repository.getRootEntities();\r\n+\t\t\t\tList<ABeanStructuralElementInstance> beans = new ArrayList<ABeanStructuralElementInstance>();\r\n+\t\t\t\t\r\n+\t\t\t\tfor (StructuralElementInstance sei : rootSeis) {\r\n+\t\t\t\t\tbeans.add((ABeanStructuralElementInstance) new BeanStructuralElementInstanceFactory().getInstanceFor(sei));\r\n+\t\t\t\t}\r\n+\t\t\t\t\r\n+\t\t\t\tGenericEntity<List<ABeanStructuralElementInstance>> genericEntityList =\r\n+\t\t\t\t\t\tnew GenericEntity<List<ABeanStructuralElementInstance>>(beans) { };\r\n+\r\n+\t\t\t\treturn Response.ok(genericEntityList).build();\r\n+\t\t\t} catch (CoreException e) {\r\n+\t\t\t\treturn createBadRequestResponse(e.getMessage());\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\t\r\n+\t\t/**\r\n+\t\t * Returns a response with the sei with the seiUuid\r\n+\t\t * @param seiUuid uuid of the sei\r\n+\t\t * @return a server response\r\n+\t\t */\r\n+\t\t@GET\r\n+\t\t@Path(SEI + \"/{seiUuid}\")\r\n+\t\t@Produces(MediaType.APPLICATION_JSON)\r\n+\t\tpublic Response getSei(@PathParam(\"seiUuid\") String seiUuid) {\r\n+\t\t\ttry {\r\n+\t\t\t\treturn Response.ok(\r\n+\t\t\t\t\t\tnew BeanStructuralElementInstanceFactory().getInstanceFor(\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMTA2MzU0OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/dataaccess/TransactionalJsonProviderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODoyMzozOVrOHowIGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODozMzozMlrOHowfgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5MzU5NA==", "bodyText": "Super important: We also have to set this to false after the test case is done because the super user flag is some static object so it gets carried into the next test case.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512493594", "createdAt": "2020-10-27T08:23:39Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/dataaccess/TransactionalJsonProviderTest.java", "diffHunk": "@@ -29,71 +30,75 @@\n import javax.xml.bind.JAXBContext;\n import javax.xml.bind.JAXBException;\n \n-import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.core.runtime.NullProgressMonitor;\n+import org.eclipse.emf.common.command.Command;\n+import org.eclipse.emf.edit.command.AddCommand;\n+import org.eclipse.jgit.api.Git;\n+import org.eclipse.jgit.api.errors.GitAPIException;\n+import org.eclipse.jgit.api.errors.NoHeadException;\n+import org.eclipse.jgit.revwalk.RevCommit;\n import org.junit.Before;\n import org.junit.Test;\n \n import de.dlr.sc.virsat.model.concept.types.property.BeanPropertyInt;\n-import de.dlr.sc.virsat.model.concept.types.property.BeanPropertyString;\n-import de.dlr.sc.virsat.model.dvlm.categories.CategoriesFactory;\n-import de.dlr.sc.virsat.model.dvlm.categories.Category;\n-import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\n-import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.PropertydefinitionsFactory;\n-import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.StringProperty;\n-import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.PropertyinstancesFactory;\n-import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ValuePropertyInstance;\n+import de.dlr.sc.virsat.model.concept.types.structural.BeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.dvlm.DVLMPackage;\n+import de.dlr.sc.virsat.model.dvlm.roles.UserRegistry;\n import de.dlr.sc.virsat.model.dvlm.structural.StructuralElement;\n import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\n import de.dlr.sc.virsat.model.dvlm.structural.StructuralFactory;\n-import de.dlr.sc.virsat.project.test.AProjectTestCase;\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\n+import de.dlr.sc.virsat.project.resources.command.CreateSeiResourceAndFileCommand;\n+import de.dlr.sc.virsat.server.test.AServerRepositoryTest;\n \n-public class TransactionalJsonProviderTest extends AProjectTestCase {\n+public class TransactionalJsonProviderTest extends AServerRepositoryTest {\n \n \tprivate TransactionalJsonProvider provider;\n-\tprivate BeanPropertyString testBean;\n+\tprivate BeanStructuralElementInstance testBean;\n \tprivate Class<?> type;\n \tprivate Set<Class<?>> beanClass = new HashSet<>();\n \tprivate MediaType mediaType;\n \tprivate String testString = \"test\";\n \n \t@Before\n-\tpublic void setUp() throws CoreException {\n+\tpublic void setUp() throws Exception {\n \t\tsuper.setUp();\n-\t\taddEditingDomainAndRepository();\n+\t\t\n+\t\tUserRegistry.getInstance().setSuperUser(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5OTU4NA==", "bodyText": "Yes, sorry I forgot that", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512499584", "createdAt": "2020-10-27T08:33:32Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/dataaccess/TransactionalJsonProviderTest.java", "diffHunk": "@@ -29,71 +30,75 @@\n import javax.xml.bind.JAXBContext;\n import javax.xml.bind.JAXBException;\n \n-import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.core.runtime.NullProgressMonitor;\n+import org.eclipse.emf.common.command.Command;\n+import org.eclipse.emf.edit.command.AddCommand;\n+import org.eclipse.jgit.api.Git;\n+import org.eclipse.jgit.api.errors.GitAPIException;\n+import org.eclipse.jgit.api.errors.NoHeadException;\n+import org.eclipse.jgit.revwalk.RevCommit;\n import org.junit.Before;\n import org.junit.Test;\n \n import de.dlr.sc.virsat.model.concept.types.property.BeanPropertyInt;\n-import de.dlr.sc.virsat.model.concept.types.property.BeanPropertyString;\n-import de.dlr.sc.virsat.model.dvlm.categories.CategoriesFactory;\n-import de.dlr.sc.virsat.model.dvlm.categories.Category;\n-import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\n-import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.PropertydefinitionsFactory;\n-import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.StringProperty;\n-import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.PropertyinstancesFactory;\n-import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ValuePropertyInstance;\n+import de.dlr.sc.virsat.model.concept.types.structural.BeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.dvlm.DVLMPackage;\n+import de.dlr.sc.virsat.model.dvlm.roles.UserRegistry;\n import de.dlr.sc.virsat.model.dvlm.structural.StructuralElement;\n import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\n import de.dlr.sc.virsat.model.dvlm.structural.StructuralFactory;\n-import de.dlr.sc.virsat.project.test.AProjectTestCase;\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\n+import de.dlr.sc.virsat.project.resources.command.CreateSeiResourceAndFileCommand;\n+import de.dlr.sc.virsat.server.test.AServerRepositoryTest;\n \n-public class TransactionalJsonProviderTest extends AProjectTestCase {\n+public class TransactionalJsonProviderTest extends AServerRepositoryTest {\n \n \tprivate TransactionalJsonProvider provider;\n-\tprivate BeanPropertyString testBean;\n+\tprivate BeanStructuralElementInstance testBean;\n \tprivate Class<?> type;\n \tprivate Set<Class<?>> beanClass = new HashSet<>();\n \tprivate MediaType mediaType;\n \tprivate String testString = \"test\";\n \n \t@Before\n-\tpublic void setUp() throws CoreException {\n+\tpublic void setUp() throws Exception {\n \t\tsuper.setUp();\n-\t\taddEditingDomainAndRepository();\n+\t\t\n+\t\tUserRegistry.getInstance().setSuperUser(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5MzU5NA=="}, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 621, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}