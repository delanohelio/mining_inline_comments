{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNTEwODA0", "number": 518, "title": "Migration with new dependencies", "bodyText": "This pull request refactors the activation and migration of conecpt.\nThings done:\n\n\nMove activation of conept to new dedicated class\n\n\nAdded tests for activating concepts\n\n\nFixed some bugs in activating concepts\n\n\nMigration now checks if there are new dependencies beofre migrating\n\n\nMigration of new features activates these features (didn't happen before :O )\n\n\n Done", "createdAt": "2020-03-04T12:00:37Z", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/518", "merged": true, "mergeCommit": {"oid": "875fc12e5c8d97bae3a01b15e301f4ddc22a2b0c"}, "closed": true, "closedAt": "2020-03-20T11:16:05Z", "author": {"login": "franzTobiasDLR"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKFBragH2gAyMzgzNTEwODA0OmYyMmZiMmEzNWQ1NjdjNmU1ZmY4ODk2NTVhMWM0NWU5YTU3NjU4M2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPImEVAH2gAyMzgzNTEwODA0Ojk5NTM1ZGI3YjQ5MTNiYmE4ZTk0ZjY2NzdjMDY1NTQwMzk3NTE2N2U=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f22fb2a35d567c6e5ff889655a1c45e9a576583c", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f22fb2a35d567c6e5ff889655a1c45e9a576583c", "committedDate": "2020-03-03T16:36:41Z", "message": "Move activating concept and handle new dependencies (#465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2f77502f7d71c9c0a1166e85ee70c8384a07c04", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d2f77502f7d71c9c0a1166e85ee70c8384a07c04", "committedDate": "2020-03-04T11:57:34Z", "message": "Add test for getting new depencies - (Task #465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76c3606e5653aa1c0a4b05107dbd4e3e8136b030", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/76c3606e5653aa1c0a4b05107dbd4e3e8136b030", "committedDate": "2020-03-04T12:16:45Z", "message": "Improve documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78e606f453b67a1064efd7acef888781b538e0a6", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/78e606f453b67a1064efd7acef888781b538e0a6", "committedDate": "2020-03-04T12:17:09Z", "message": "Fix compiler problems in test - (Task #465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65de8ed8ec3fbd20de9559ed024287df5c429820", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/65de8ed8ec3fbd20de9559ed024287df5c429820", "committedDate": "2020-03-04T21:06:17Z", "message": "Move concept activation to dedicated class - (Task #101)\n\n(cherry picked from commit 6e7c7a448a598acbb7ea64c60e87646e09f6c988)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e96adaea421e7bed1febca37ee19e8dd81d43b20", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/e96adaea421e7bed1febca37ee19e8dd81d43b20", "committedDate": "2020-03-04T21:06:32Z", "message": "Clean up concept activation - (Task #465)\n\n(cherry picked from commit ffac34510f06c7fa3b2f1bb1825f64ba6081298e)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05014ca90d3b0d1621cde96d024d200beb08a694", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/05014ca90d3b0d1621cde96d024d200beb08a694", "committedDate": "2020-03-04T21:06:51Z", "message": "Refactoring - (Task #465)\n\n(cherry picked from commit 1c30a47a57fc1c2220d379835f82913ce40c0a36)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6c49ab28c2a0583cb76a24e4865efb09930f057", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f6c49ab28c2a0583cb76a24e4865efb09930f057", "committedDate": "2020-03-04T21:14:55Z", "message": "Give functions better names - (Task #465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1baaa12fd326f2267201ad430ede54eb0dd62044", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/1baaa12fd326f2267201ad430ede54eb0dd62044", "committedDate": "2020-03-04T21:21:22Z", "message": "Improve documentation - (Task #465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1666081bb9b905edf76955df9c2acf467ae47ba", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/b1666081bb9b905edf76955df9c2acf467ae47ba", "committedDate": "2020-03-04T22:25:44Z", "message": "Add test for loading concepts - (Task #465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85965b48181010b9427bbbf749e7e9d388442a69", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/85965b48181010b9427bbbf749e7e9d388442a69", "committedDate": "2020-03-04T22:45:01Z", "message": "Fix failing test cases - (Task #465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c1ae254bbf7f2cf9569e998a65e9463b13f093c", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8c1ae254bbf7f2cf9569e998a65e9463b13f093c", "committedDate": "2020-03-05T01:29:17Z", "message": "Add test with activation and migration combined - (Task #465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15c1656377cb97e4f21283757a3aac9fbdbb7c11", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/15c1656377cb97e4f21283757a3aac9fbdbb7c11", "committedDate": "2020-03-05T09:41:50Z", "message": "Add test for concept migration with new dependency - (Task #465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce3a30d5381e38d583dd1c33cfc030f4e0565591", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/ce3a30d5381e38d583dd1c33cfc030f4e0565591", "committedDate": "2020-03-05T09:58:55Z", "message": "Add some style and documentation fixes - (Task #465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8024fa1ea050771dbd187b0cdbb470eeecb483d0", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8024fa1ea050771dbd187b0cdbb470eeecb483d0", "committedDate": "2020-03-05T13:15:12Z", "message": "Fix not getting migrator - (Task #465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d49057dee9bc8c230f2e6795181c122cb4863556", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d49057dee9bc8c230f2e6795181c122cb4863556", "committedDate": "2020-03-05T13:31:00Z", "message": "Remove new activator - (Task #465)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NjQ2NDAx", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/518#pullrequestreview-369646401", "createdAt": "2020-03-05T15:05:59Z", "commit": {"oid": "d49057dee9bc8c230f2e6795181c122cb4863556"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNTowNTo1OVrOFyXLFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzo1MjoyN1rOFydwEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODM1Mjc5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @return a list of new required concepts\n          \n          \n            \n            \t * @return a list of new required concept names", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/518#discussion_r388352790", "createdAt": "2020-03-05T15:05:59Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/migrator/IMigrator.java", "diffHunk": "@@ -21,6 +23,15 @@\n \t\r\n \tString EXTENSION_POINT_ID = \"de.dlr.sc.virsat.model.edit.ConceptMigrator\";\r\n \t\r\n+\t/**\r\n+\t * Returns new dependencies of the new concept version. These have to be activated\r\n+\t * before migration can be done\r\n+\t * @param concept the concept to be migrated\r\n+\t * @param previousMigrator the previously executed migrator, can be null if none was executed before\r\n+\t * @return a list of new required concepts\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d49057dee9bc8c230f2e6795181c122cb4863556"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQzOTI1OA==", "bodyText": "Else throw exception?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/518#discussion_r388439258", "createdAt": "2020-03-05T17:14:01Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/util/ConceptActivationHelper.java", "diffHunk": "@@ -0,0 +1,219 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.concept.util;\r\n+\r\n+import java.util.ArrayList;\r\n+import java.util.HashMap;\r\n+import java.util.HashSet;\r\n+import java.util.List;\r\n+import java.util.Map;\r\n+import java.util.Set;\r\n+\r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.IProgressMonitor;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.ecore.EClass;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+import org.eclipse.emf.ecore.resource.Resource;\r\n+import org.eclipse.emf.ecore.util.EcoreUtil;\r\n+import org.eclipse.emf.edit.domain.EditingDomain;\r\n+import org.eclipse.emf.transaction.TransactionalEditingDomain;\r\n+\r\n+import de.dlr.sc.virsat.commons.datastructures.DependencyTree;\r\n+import de.dlr.sc.virsat.model.concept.migrator.ConceptMigrator;\r\n+import de.dlr.sc.virsat.model.concept.migrator.CreateMigrateConceptToLatestCommand;\r\n+import de.dlr.sc.virsat.model.concept.migrator.IMigrator;\r\n+import de.dlr.sc.virsat.model.dvlm.Repository;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.EReferencePropertyHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.IConceptTypeDefinition;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.registry.ActiveConceptConfigurationElement;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.util.ActiveConceptHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.provider.DVLMEditPlugin;\r\n+\r\n+/**\r\n+ * This class helps activating concepts. Concepts are copied into the \r\n+ * repository. Furthermore, this class redirects references so that these can be \r\n+ * resolved from a platform plugin. References to other concepts are redirected \r\n+ * to their active version within the repository\r\n+ *\r\n+ */\r\n+public class ConceptActivationHelper {\r\n+\t\r\n+\tprivate static final String CONCEPT_PATH = \"/concept/concept.xmi\";\r\n+\tprotected Repository repository;\r\n+\t\r\n+\tpublic ConceptActivationHelper(Repository repository) {\r\n+\t\tthis.repository = repository;\r\n+\t}\r\n+\t\r\n+\tpublic ConceptActivationHelper(Concept concept) {\r\n+\t\tif (concept.eContainer() != null && concept.eContainer() instanceof Repository) {\r\n+\t\t\tthis.repository = ((Repository) concept.eContainer());\r\n+\t\t}\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d49057dee9bc8c230f2e6795181c122cb4863556"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ1MTk5OA==", "bodyText": "Should we maybe also handle the situation when a dependency was removed in one of the concept versions?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/518#discussion_r388451998", "createdAt": "2020-03-05T17:36:49Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/util/ConceptActivationHelper.java", "diffHunk": "@@ -0,0 +1,219 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.concept.util;\r\n+\r\n+import java.util.ArrayList;\r\n+import java.util.HashMap;\r\n+import java.util.HashSet;\r\n+import java.util.List;\r\n+import java.util.Map;\r\n+import java.util.Set;\r\n+\r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.IProgressMonitor;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.emf.common.command.Command;\r\n+import org.eclipse.emf.ecore.EClass;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+import org.eclipse.emf.ecore.resource.Resource;\r\n+import org.eclipse.emf.ecore.util.EcoreUtil;\r\n+import org.eclipse.emf.edit.domain.EditingDomain;\r\n+import org.eclipse.emf.transaction.TransactionalEditingDomain;\r\n+\r\n+import de.dlr.sc.virsat.commons.datastructures.DependencyTree;\r\n+import de.dlr.sc.virsat.model.concept.migrator.ConceptMigrator;\r\n+import de.dlr.sc.virsat.model.concept.migrator.CreateMigrateConceptToLatestCommand;\r\n+import de.dlr.sc.virsat.model.concept.migrator.IMigrator;\r\n+import de.dlr.sc.virsat.model.dvlm.Repository;\r\n+import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.EReferencePropertyHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.IConceptTypeDefinition;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.registry.ActiveConceptConfigurationElement;\r\n+import de.dlr.sc.virsat.model.dvlm.concepts.util.ActiveConceptHelper;\r\n+import de.dlr.sc.virsat.model.dvlm.provider.DVLMEditPlugin;\r\n+\r\n+/**\r\n+ * This class helps activating concepts. Concepts are copied into the \r\n+ * repository. Furthermore, this class redirects references so that these can be \r\n+ * resolved from a platform plugin. References to other concepts are redirected \r\n+ * to their active version within the repository\r\n+ *\r\n+ */\r\n+public class ConceptActivationHelper {\r\n+\t\r\n+\tprivate static final String CONCEPT_PATH = \"/concept/concept.xmi\";\r\n+\tprotected Repository repository;\r\n+\t\r\n+\tpublic ConceptActivationHelper(Repository repository) {\r\n+\t\tthis.repository = repository;\r\n+\t}\r\n+\t\r\n+\tpublic ConceptActivationHelper(Concept concept) {\r\n+\t\tif (concept.eContainer() != null && concept.eContainer() instanceof Repository) {\r\n+\t\t\tthis.repository = ((Repository) concept.eContainer());\r\n+\t\t}\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Activate type by redirecting it to type in the repository\r\n+\t * @param type the type to be activates\r\n+\t * @return the activated type\r\n+\t */\r\n+\tpublic EObject getActiveType(EObject type) {\r\n+\t\t\r\n+\t\t// For EReferences to external EClasses ignore concept \r\n+\t\t// activation and convert URIs instead. The URI needs to be\r\n+\t\t// transformed from a PluginResourceURI to a PlattformPluginURI so \r\n+\t\t// that it can be resolved from the VirSat project in the eclipse runtime\r\n+\t\t// instance.\r\n+\t\t// VirSat does not ensure external model's storage.\r\n+\t\t// We only enable non-containment references.\r\n+\t\tif (type instanceof EClass) {\r\n+\t\t\treturn new EReferencePropertyHelper().activateEClassType((EClass) type);\r\n+\t\t}\r\n+\r\n+\t\t// In case we try to create a reference to an object which was not copied\r\n+\t\t// we should try to redirect that reference to an already active and existing concept\r\n+\t\tif (repository != null && repository.eResource() != null && type instanceof IConceptTypeDefinition) {\r\n+\t\t\tIConceptTypeDefinition typeDefinition = (IConceptTypeDefinition) type;\r\n+\t\r\n+\t\t\t// Get the fragment URI of the concept we want to reference to\r\n+\t\t\tString uriFragment = EcoreUtil.getURI(typeDefinition).fragment();\r\n+\t\t\r\n+\t\t\t// ask the repository if there is such an object with the given URI fragment\r\n+\t\t\tResource repoResource = repository.eResource();\r\n+\t\t\tEObject repoTypeDefinition = repoResource.getEObject(uriFragment);\r\n+\r\n+\t\t\t// If not throw a warning that there is something missing\r\n+\t\t\tif (repoTypeDefinition == null) {\r\n+\t\t\t\tString fqId = ActiveConceptHelper.getFullQualifiedId(typeDefinition);\r\n+\t\t\t\r\n+\t\t\t\tthrow new RuntimeException(\"Install missing concept first! Missing concept: \" + fqId);\r\n+\t\t\t}\r\n+\t\t\treturn repoTypeDefinition;\r\n+\t\t}\r\n+\t\t\r\n+\t\treturn type;\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Handle the activation of concepts from their configuration elements\r\n+\t * @param conceptConfigurationElements an array of concept configurations\r\n+\t * @param editingDomain the editing domain\r\n+\t */\r\n+\tpublic void activateConcepts(Object[] conceptConfigurationElements, EditingDomain editingDomain, IProgressMonitor progressMonitor) {\r\n+\t\t\r\n+\t\tList<Concept> concepts = new ArrayList<Concept>();\r\n+\t\tfor (Object acce : conceptConfigurationElements) {\r\n+\t\t\tif (acce instanceof ActiveConceptConfigurationElement) {\r\n+\t\t\t\tconcepts.add(((ActiveConceptConfigurationElement) acce).loadConceptFromPlugin());\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\tactivateConcepts(concepts, editingDomain, progressMonitor);\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Handle the activation of concepts. Resolves dependencies in correct order. \r\n+\t * @param conceptConfigurationElements a list of concept configurations\r\n+\t * @param editingDomain the editing domain\r\n+\t */\r\n+\tpublic void activateConcepts(List<Concept> concepts, EditingDomain editingDomain, IProgressMonitor progressMonitor) {\r\n+\t\t\r\n+\t\t// Correctly sort the selected concepts depending on their dependencies\r\n+\t\tDependencyTree<String> dependencyTree = new DependencyTree<String>();\r\n+\t\tMap<String, Concept> selectedConcepts = new HashMap<String, Concept>();\r\n+\t\t\r\n+\t\t// Create a map conceptName -> concept and add all concept names to the dependency tree\r\n+\t\tfor (Concept concept : concepts) {\r\n+\t\t\tselectedConcepts.put(concept.getName(), concept);\r\n+\t\t\tdependencyTree.addDependencies(concept.getName(), new String[] {});\r\n+\t\t}\r\n+\t\t\r\n+\t\t// Now create the dependencies using the concept names as identifiers\r\n+\t\tfor (Concept concept : selectedConcepts.values()) {\r\n+\t\t\tList<String> conceptDependencyIds = new ArrayList<>(ActiveConceptHelper.getConceptDependencies(concept));\r\n+\t\t\tdependencyTree.addDependencies(concept.getName(), conceptDependencyIds);\r\n+\t\t}\r\n+\t\t\r\n+\t\tList<String> orderedConcepts = dependencyTree.getLinearOrder();\r\n+\t\t\r\n+\t\t// And then install them by using the ordered list of concept names\r\n+\t\t// and the map of concept names pointing to the already preloaded concepts\r\n+\t\tfor (String conceptName : orderedConcepts) {\r\n+\t\t\tif (selectedConcepts.containsKey(conceptName)) {\r\n+\t\t\t\tactivateConcept(selectedConcepts.get(conceptName), editingDomain, progressMonitor);\r\n+\t\t\t}\r\n+\t\t}\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Prepare a selected concept for activation. Checks if an older version is already in the repository and if so\r\n+\t * migrates it to the latest version, otherwise the concept will be simply added to the active concepts\r\n+\t * @param concept the selected concept\r\n+\t * @param editingDomain the editing domain\r\n+\t */\r\n+\tprotected void activateConcept(Concept concept, EditingDomain editingDomain, IProgressMonitor progressMonitor) {\r\n+\r\n+\t\t// Check if we already have this concept but with a different version added to the repository\r\n+\t\tConcept activeConcept = new ActiveConceptHelper(repository).getConcept(concept.getName());\r\n+\r\n+\t\tboolean conceptIsInRepository = activeConcept != null;\r\n+\t\t\r\n+\t\t// There is a concept of a different version in the repository\r\n+\t\tif (conceptIsInRepository && !activeConcept.getVersion().equals(concept.getVersion())) {\r\n+\t\t\t\t\r\n+\t\t\t//Check if new dependencies have to be added before migration\r\n+\t\t\tif (activeConcept.eContainer() != null && activeConcept.eContainer() instanceof Repository) {\r\n+\t\t\t\tRepository repository = (Repository) activeConcept.eContainer();\r\n+\t\t\t\tnew ConceptActivationHelper(repository).handleNewDependencies(activeConcept, editingDomain, progressMonitor);\r\n+\t\t\t}\r\n+\t\t\t\r\n+\t\t\ttry {\r\n+\t\t\t\tCommand migrateToLatestCommand = CreateMigrateConceptToLatestCommand.create(activeConcept, (TransactionalEditingDomain) editingDomain, progressMonitor);\r\n+\t\t\t\teditingDomain.getCommandStack().execute(migrateToLatestCommand);\r\n+\t\t\t} catch (CoreException e) {\r\n+\t\t\t\tDVLMEditPlugin.getPlugin().getLog().log(new Status(Status.ERROR, DVLMEditPlugin.PLUGIN_ID, \"Failed to do migration on active concept: \" + concept.getDisplayName(), e));\r\n+\t\t\t}\r\n+\t\t\t\r\n+\t\t}\r\n+\t\t\r\n+\t\tif (!conceptIsInRepository) {\r\n+\t\t\tCommand cmd = ActiveConceptConfigurationElement.createCopyConceptToRepository(editingDomain, concept, repository);\r\n+\t\t\teditingDomain.getCommandStack().execute(cmd);\r\n+\t\t}\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Activate new concept dependencies \r\n+\t * @param concept the concept to be prepared for migration\r\n+\t * @param editingDomain the editing domain\r\n+\t */\r\n+\tpublic void handleNewDependencies(Concept concept, EditingDomain editingDomain, IProgressMonitor progressMonitor) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d49057dee9bc8c230f2e6795181c122cb4863556"}, "originalPosition": 198}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ1MzgzMQ==", "bodyText": "According to ther javadoc, previousMigrator can be null, which would result in NPE here", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/518#discussion_r388453831", "createdAt": "2020-03-05T17:39:48Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/migrator/AMigrator.java", "diffHunk": "@@ -204,6 +222,34 @@ protected void removeFromTarget(ReferenceChange diff, boolean rightToLeft) {\n \tprotected void registerOldToNewIds() {\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic Set<String> getNewDependencies(Concept concept, IMigrator previousMigrator) {\r\n+\t\t\r\n+\t\tString conceptId = concept.getFullQualifiedName() + \"/\";\r\n+\t\tConcept conceptPrevious = loadConceptXmi(conceptId + previousMigrator.getResource());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d49057dee9bc8c230f2e6795181c122cb4863556"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ1NTE3OQ==", "bodyText": "Looks like we don't need conceptPrevious", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/518#discussion_r388455179", "createdAt": "2020-03-05T17:42:02Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/migrator/AMigrator.java", "diffHunk": "@@ -204,6 +222,34 @@ protected void removeFromTarget(ReferenceChange diff, boolean rightToLeft) {\n \tprotected void registerOldToNewIds() {\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic Set<String> getNewDependencies(Concept concept, IMigrator previousMigrator) {\r\n+\t\t\r\n+\t\tString conceptId = concept.getFullQualifiedName() + \"/\";\r\n+\t\tConcept conceptPrevious = loadConceptXmi(conceptId + previousMigrator.getResource());\r\n+\t\tConcept conceptNext = loadConceptXmi(conceptId + getResource());\r\n+\t\t\r\n+\t\treturn getNewDependencies(conceptPrevious, concept, conceptNext);\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Return new dependencies of new concept versions\r\n+\t * @param conceptPrevious the previous concept version. A comparison between conceptPrevious\r\n+\t * and the conceptCurrent should not yield any differences.\r\n+\t * @param conceptCurrent the current concept as it is in the repository\r\n+\t * @param conceptNext the next concept version\r\n+\t * @return A set of new concept names\r\n+\t */\r\n+\tpublic Set<String> getNewDependencies(Concept conceptPrevious, Concept conceptCurrent, Concept conceptNext) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d49057dee9bc8c230f2e6795181c122cb4863556"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2MDU2Mg==", "bodyText": "Could you please explain this fragment? When can the migrator be null, why are we returning a new resource set and what does it mean to the calling code?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/518#discussion_r388460562", "createdAt": "2020-03-05T17:52:27Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/migrator/AMigrator.java", "diffHunk": "@@ -608,6 +656,13 @@ public EObject getEObject(URI uri, boolean loadOnDemand) {\n \t\tString nsURI = ReleaseUtils.getNamespaceURI(conceptResourceUri);\r\n \t\tMigrator migrator = MigratorRegistry.getInstance().getMigrator(nsURI);\r\n \t\t\r\n+\t\tif (migrator == null) {\r\n+\t\t\tDVLMEditPlugin.getPlugin().getLog().log(new Status(Status.ERROR, DVLMEditPlugin.PLUGIN_ID, \r\n+\t\t\t\t\t\"Could not get DVLM migrator for concept resource: \" + conceptResourceUri));\r\n+\t\t\t//Check that all dependent concepts and their plugins are available in platform...  \r\n+\t\t\treturn new ResourceSetImpl();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d49057dee9bc8c230f2e6795181c122cb4863556"}, "originalPosition": 103}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd534cafc5394635b244b93313b9a88243f13f14", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/cd534cafc5394635b244b93313b9a88243f13f14", "committedDate": "2020-03-06T08:53:50Z", "message": "Update de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/migrator/IMigrator.java\n\nCo-Authored-By: andriikovalov-dlr <48556822+andriikovalov-dlr@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf6b20803817fdcefa4a6b94f31634b5eb5e4b00", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/cf6b20803817fdcefa4a6b94f31634b5eb5e4b00", "committedDate": "2020-03-06T10:21:07Z", "message": "Update accoring to feedback in review - (Task #465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7f7046f40d5e2fe942197c82d433b1318175fba", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/a7f7046f40d5e2fe942197c82d433b1318175fba", "committedDate": "2020-03-06T10:21:22Z", "message": "Merge branch 'feature/task_465-Migration_with_new_dependencies' of https://github.com/virtualsatellite/VirtualSatellite4-Core.git into feature/task_465-Migration_with_new_dependencies"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxOTM0NDA2", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/518#pullrequestreview-371934406", "createdAt": "2020-03-10T13:10:28Z", "commit": {"oid": "a7f7046f40d5e2fe942197c82d433b1318175fba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb20bd490cb4d29d959349bf99e13bd1a685b3d8", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/bb20bd490cb4d29d959349bf99e13bd1a685b3d8", "committedDate": "2020-03-15T18:50:49Z", "message": "Fix migrator test - (Task #465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b97576cf5f34421692e31b9cbb02defd538920f", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/0b97576cf5f34421692e31b9cbb02defd538920f", "committedDate": "2020-03-15T19:07:49Z", "message": "Merge branch 'development' into feature/task_465-Migration_with_new_dependencies"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDIwMzUx", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/518#pullrequestreview-376020351", "createdAt": "2020-03-17T13:14:41Z", "commit": {"oid": "0b97576cf5f34421692e31b9cbb02defd538920f"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoxNDo0MlrOF3bpYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxMzoxNDo0MlrOF3bpYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzY2ODk2MA==", "bodyText": "Maybe a little hint why the concept has to be placed into the repository?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/518#discussion_r393668960", "createdAt": "2020-03-17T13:14:42Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/concept/migrator/AMigratorTest.java", "diffHunk": "@@ -136,6 +139,8 @@ public void testMigrateAddStructuralElement() {\n \t\tConcept conceptPrevious = ConceptsFactory.eINSTANCE.createConcept();\r\n \t\tConcept conceptCurrent = ConceptsFactory.eINSTANCE.createConcept();\r\n \t\tConcept conceptNext = ConceptsFactory.eINSTANCE.createConcept();\r\n+\t\tRepository repository = DVLMFactory.eINSTANCE.createRepository();\r\n+\t\trepository.getActiveConcepts().add(conceptCurrent);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b97576cf5f34421692e31b9cbb02defd538920f"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f19e577b2c7896a390d3a97b77533b573af27951", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f19e577b2c7896a390d3a97b77533b573af27951", "committedDate": "2020-03-19T09:35:27Z", "message": "Add comments about why concepts have to be in repository - (Task #465)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99535db7b4913bba8e94f6677c0655403975167e", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/99535db7b4913bba8e94f6677c0655403975167e", "committedDate": "2020-03-19T09:35:46Z", "message": "Merge branch 'feature/task_465-Migration_with_new_dependencies' of https://github.com/virtualsatellite/VirtualSatellite4-Core.git into feature/task_465-Migration_with_new_dependencies"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 615, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}