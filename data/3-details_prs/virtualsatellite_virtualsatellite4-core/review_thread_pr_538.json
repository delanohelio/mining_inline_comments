{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNzEzMDIw", "number": 538, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTowNzowOFrODrmFMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo0MToyNVrODrmzgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDM5MjgzOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.team.ui/src/de/dlr/sc/virsat/team/ui/action/git/GitUpdateHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTowNzowOFrOF8BycA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTowNzowOFrOF8BycA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ4ODE3Ng==", "bodyText": "Let's maybe move getting projects from selection into VirSatSelectionHelper to reduce duplication?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/538#discussion_r398488176", "createdAt": "2020-03-26T11:07:08Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.team.ui/src/de/dlr/sc/virsat/team/ui/action/git/GitUpdateHandler.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.team.ui.action.git;\r\n+\r\n+import java.util.ArrayList;\r\n+import java.util.HashSet;\r\n+import java.util.List;\r\n+import java.util.Set;\r\n+\r\n+import org.eclipse.core.commands.AbstractHandler;\r\n+import org.eclipse.core.commands.ExecutionEvent;\r\n+import org.eclipse.core.commands.ExecutionException;\r\n+import org.eclipse.core.resources.IProject;\r\n+import org.eclipse.core.runtime.IProgressMonitor;\r\n+import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.MultiStatus;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.core.runtime.SubMonitor;\r\n+import org.eclipse.core.runtime.jobs.Job;\r\n+import org.eclipse.egit.ui.internal.credentials.EGitCredentialsProvider;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+import org.eclipse.jface.dialogs.ErrorDialog;\r\n+import org.eclipse.jface.viewers.IStructuredSelection;\r\n+import org.eclipse.swt.widgets.Display;\r\n+import org.eclipse.ui.handlers.HandlerUtil;\r\n+\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+import de.dlr.sc.virsat.project.resources.VirSatProjectResource;\r\n+import de.dlr.sc.virsat.team.IVirSatVersionControlBackend;\r\n+import de.dlr.sc.virsat.team.git.VirSatGitVersionControlBackend;\r\n+import de.dlr.sc.virsat.team.ui.Activator;\r\n+\r\n+\r\n+@SuppressWarnings(\"restriction\")\r\n+public class GitUpdateHandler extends AbstractHandler {\r\n+\r\n+\t@Override\r\n+\tpublic Object execute(ExecutionEvent event) throws ExecutionException {\r\n+\t\t\r\n+\t\tIStructuredSelection selection = HandlerUtil.getCurrentStructuredSelection(event);\r\n+\r\n+\t\tSet<IProject> selectedProjects = new HashSet<>();\r\n+\t\tList<IStatus> status = new ArrayList<>();\r\n+\t\t\r\n+\t\t// Get all projects associated with selected resources\r\n+\t\tfor (Object object : selection.toList()) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8871bc0c987a457ca7282acc77e46298e35d1336"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDQzNzY3OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.team.ui/src/de/dlr/sc/virsat/team/ui/action/git/GitUpdateHandler.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMToyMDowNlrOF8COaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMToyMDowNlrOF8COaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQ5NTMzOQ==", "bodyText": "Shall we maybe extract this job into an abstract class like VersionControlJob, where we can have all common code?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/538#discussion_r398495339", "createdAt": "2020-03-26T11:20:06Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.team.ui/src/de/dlr/sc/virsat/team/ui/action/git/GitUpdateHandler.java", "diffHunk": "@@ -0,0 +1,106 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.team.ui.action.git;\r\n+\r\n+import java.util.ArrayList;\r\n+import java.util.HashSet;\r\n+import java.util.List;\r\n+import java.util.Set;\r\n+\r\n+import org.eclipse.core.commands.AbstractHandler;\r\n+import org.eclipse.core.commands.ExecutionEvent;\r\n+import org.eclipse.core.commands.ExecutionException;\r\n+import org.eclipse.core.resources.IProject;\r\n+import org.eclipse.core.runtime.IProgressMonitor;\r\n+import org.eclipse.core.runtime.IStatus;\r\n+import org.eclipse.core.runtime.MultiStatus;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.core.runtime.SubMonitor;\r\n+import org.eclipse.core.runtime.jobs.Job;\r\n+import org.eclipse.egit.ui.internal.credentials.EGitCredentialsProvider;\r\n+import org.eclipse.emf.ecore.EObject;\r\n+import org.eclipse.jface.dialogs.ErrorDialog;\r\n+import org.eclipse.jface.viewers.IStructuredSelection;\r\n+import org.eclipse.swt.widgets.Display;\r\n+import org.eclipse.ui.handlers.HandlerUtil;\r\n+\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatEditingDomainRegistry;\r\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\r\n+import de.dlr.sc.virsat.project.resources.VirSatProjectResource;\r\n+import de.dlr.sc.virsat.team.IVirSatVersionControlBackend;\r\n+import de.dlr.sc.virsat.team.git.VirSatGitVersionControlBackend;\r\n+import de.dlr.sc.virsat.team.ui.Activator;\r\n+\r\n+\r\n+@SuppressWarnings(\"restriction\")\r\n+public class GitUpdateHandler extends AbstractHandler {\r\n+\r\n+\t@Override\r\n+\tpublic Object execute(ExecutionEvent event) throws ExecutionException {\r\n+\t\t\r\n+\t\tIStructuredSelection selection = HandlerUtil.getCurrentStructuredSelection(event);\r\n+\r\n+\t\tSet<IProject> selectedProjects = new HashSet<>();\r\n+\t\tList<IStatus> status = new ArrayList<>();\r\n+\t\t\r\n+\t\t// Get all projects associated with selected resources\r\n+\t\tfor (Object object : selection.toList()) {\r\n+\t\t\tif (object instanceof EObject) {\r\n+\t\t\t\tVirSatTransactionalEditingDomain ed = VirSatEditingDomainRegistry.INSTANCE.getEd((EObject) object);\r\n+\t\t\t\ted.saveAll();\r\n+\t\t\t\tIProject project = ed.getResourceSet().getProject();\r\n+\t\t\t\tselectedProjects.add(project);\r\n+\t\t\t} else if (object instanceof VirSatProjectResource) {\r\n+\t\t\t\t// Project root object\r\n+\t\t\t\tIProject project = ((VirSatProjectResource) object).getWrappedProject();\r\n+\t\t\t\tVirSatTransactionalEditingDomain ed = VirSatEditingDomainRegistry.INSTANCE.getEd(project);\r\n+\t\t\t\ted.saveAll();\r\n+\t\t\t\tselectedProjects.add(project);\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\t\r\n+\t\tIVirSatVersionControlBackend gitBackend = new VirSatGitVersionControlBackend(new EGitCredentialsProvider());\r\n+\t\t\r\n+\t\tJob job = new Job(\"Virtual Satellite Git Update\") {\r\n+\t\t\t\r\n+\t\t\t@Override\r\n+\t\t\tprotected IStatus run(IProgressMonitor monitor) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8871bc0c987a457ca7282acc77e46298e35d1336"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MDUxMTM3OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.team.test/src/de/dlr/sc/virsat/team/test/AVirSatVersionControlBackendTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo0MToyNVrOF8C7ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxMTo0MToyNVrOF8C7ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODUwNjkxNQ==", "bodyText": "Let's move all fields to the top of the class", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/538#discussion_r398506915", "createdAt": "2020-03-26T11:41:25Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.team.test/src/de/dlr/sc/virsat/team/test/AVirSatVersionControlBackendTest.java", "diffHunk": "@@ -0,0 +1,237 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.team.test;\r\n+\r\n+import static org.junit.Assert.assertNull;\r\n+import static org.junit.Assert.assertTrue;\r\n+\r\n+import java.io.File;\r\n+import java.io.IOException;\r\n+import java.net.URI;\r\n+import java.nio.file.Files;\r\n+import java.nio.file.Path;\r\n+import java.util.Comparator;\r\n+\r\n+import org.eclipse.core.internal.resources.Resource;\r\n+import org.eclipse.core.resources.IFile;\r\n+import org.eclipse.core.resources.IProject;\r\n+import org.eclipse.core.resources.IProjectDescription;\r\n+import org.eclipse.core.resources.ResourcesPlugin;\r\n+import org.eclipse.core.runtime.CoreException;\r\n+import org.eclipse.core.runtime.NullProgressMonitor;\r\n+import org.eclipse.core.runtime.Status;\r\n+import org.eclipse.egit.core.project.RepositoryMapping;\r\n+import org.junit.After;\r\n+import org.junit.Before;\r\n+import org.junit.Test;\r\n+\r\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\r\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralFactory;\r\n+import de.dlr.sc.virsat.project.resources.VirSatResourceSet;\r\n+import de.dlr.sc.virsat.project.structure.VirSatProjectCommons;\r\n+import de.dlr.sc.virsat.project.test.AProjectTestCase;\r\n+import de.dlr.sc.virsat.team.Activator;\r\n+import de.dlr.sc.virsat.team.IVirSatVersionControlBackend;\r\n+\r\n+@SuppressWarnings(\"restriction\")\r\n+public abstract class AVirSatVersionControlBackendTest extends AProjectTestCase {\r\n+\r\n+\t/**\r\n+\t * This method is used to create a project \r\n+\t * in a sub folder of a repository at given file system location.\r\n+\t * The project creation waits until the Project is mapped as Repository.\r\n+\t * \r\n+\t * @param projectName    name of the project to be created\r\n+\t * @param fsRepoLocation Path of the repository in the file system\r\n+\t * @return an IProject which is mapped to the repository\r\n+\t * @throws CoreException\r\n+\t */\r\n+\tprotected IProject createTestProject(String projectName, Path fsRepoLocation, boolean waitForMapping) throws CoreException {\r\n+\t\tIProjectDescription projectDescription = ResourcesPlugin.getWorkspace().newProjectDescription(projectName);\r\n+\t\tprojectDescription.setLocationURI(fsRepoLocation.toUri());\r\n+\t\treturn createTestProject(projectName, projectDescription, waitForMapping);\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * This method is used to create a project \r\n+\t * in a sub folder of a repository at the location\r\n+\t * specified by the given project descriptor.\r\n+\t * The project creation waits until the Project is mapped as Repository.\r\n+\t * \r\n+\t * @param projectName        name of the project to be created\r\n+\t * @param projectDescription descriptor pointing to the repository\r\n+\t * @return an IProject which is mapped to the repository\r\n+\t * @throws CoreException\r\n+\t */\r\n+\tprotected IProject createTestProject(String projectName, IProjectDescription projectDescription, boolean waitForMapping) throws CoreException {\r\n+\t\t// Create a new sub folder with the project name in the repository\r\n+\t\tURI uriProjectLocal = projectDescription.getLocationURI().resolve(projectDescription.getName());\r\n+\t\tprojectDescription.setLocationURI(uriProjectLocal);\r\n+\t\t\r\n+\t\t// If the project does not exists already, create it\r\n+\t\tIProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(projectName);\r\n+\t\ttestProjects.add(project);\r\n+\t\tif (!project.exists()) {\r\n+\t\t\tproject.create(projectDescription, null);\r\n+\t\t\tproject.open(null);\r\n+\t\t\tActivator.getDefault().getLog().log(\r\n+\t\t\t\t\tnew Status(Status.INFO, Activator.getPluginId(), \"Created new test project \" + project.getName()));\r\n+\t\t}\r\n+\r\n+\t\t// Wait for the mapping to complete\r\n+\t\tif (waitForMapping) {\r\n+\t\t\twaitForProjectToRepoMapping(project);\r\n+\t\t}\r\n+\t\treturn project;\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Method to ensure the project is mapped to the repository.\r\n+\t * Can be overwritten by the derived classes for specific handling.\r\n+\t * @param project to be mapped\r\n+\t * @throws CoreException\r\n+\t */\r\n+\tprotected void waitForProjectToRepoMapping(IProject project) throws CoreException {\r\n+\t\tproject.refreshLocal(Resource.DEPTH_INFINITE, null);\r\n+\t}\r\n+\r\n+\tprotected Path pathRepoRemote;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8871bc0c987a457ca7282acc77e46298e35d1336"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 704, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}