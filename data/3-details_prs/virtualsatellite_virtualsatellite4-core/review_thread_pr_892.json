{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzNjIwNTUy", "number": 892, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjozMTo0N1rOFBwYJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjozNToyNFrOFBwd6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Mzg1NTExOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.extension.statemachines.ui/src/de/dlr/sc/virsat/model/extension/statemachines/ui/diagram/features/label/MultilineLabelFormatter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjozMTo0N1rOIAkkUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjozMTo0N1rOIAkkUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MDAzMw==", "bodyText": "Maybe its just github but the whitespacing seems off in this method.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/892#discussion_r537470033", "createdAt": "2020-12-07T12:31:47Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.statemachines.ui/src/de/dlr/sc/virsat/model/extension/statemachines/ui/diagram/features/label/MultilineLabelFormatter.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.statemachines.ui.diagram.features.label;\r\n+\r\n+import org.apache.commons.lang.WordUtils;\r\n+\r\n+/**\r\n+ * Formating a multi line label\r\n+ *\r\n+ */\r\n+public class MultilineLabelFormatter {\r\n+\t\r\n+\t\r\n+\t/**\r\n+\t * Formating a multi line label so that it wraps if following the camel case convention\r\n+\t * @param originalLabel the original label\r\n+\t * @return the formatted label\r\n+\t */\r\n+\tpublic String getLabel(String originalLabel) {\r\n+\t\tStringBuilder builder = new StringBuilder();\r\n+\t\toriginalLabel = originalLabel.replace('_', ' ');\r\n+\t\tchar[] charArray = originalLabel.toCharArray();\r\n+        for (int i = 0; i < charArray.length; i++) {\r\n+        \tif (Character.isUpperCase(charArray[i]) && i > 0 && !Character.isUpperCase(charArray[i - 1])) {\r\n+            \tbuilder.append(' ');\r\n+            }\r\n+            builder.append(charArray[i]);\r\n+        }\r\n+\t\treturn WordUtils.wrap(builder.toString(), 1);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f34f8369c90637b27ab64aa38fac8d834006e9e2"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Mzg1OTQ5OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.extension.statemachines.ui/src/de/dlr/sc/virsat/model/extension/statemachines/ui/diagram/features/label/MultilineLabelFormatter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjozMjo1MlrOIAkm2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjozMjo1MlrOIAkm2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MDY4Mg==", "bodyText": "Could we start the for loop with i = 1 and then remove this condition?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/892#discussion_r537470682", "createdAt": "2020-12-07T12:32:52Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.statemachines.ui/src/de/dlr/sc/virsat/model/extension/statemachines/ui/diagram/features/label/MultilineLabelFormatter.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.statemachines.ui.diagram.features.label;\r\n+\r\n+import org.apache.commons.lang.WordUtils;\r\n+\r\n+/**\r\n+ * Formating a multi line label\r\n+ *\r\n+ */\r\n+public class MultilineLabelFormatter {\r\n+\t\r\n+\t\r\n+\t/**\r\n+\t * Formating a multi line label so that it wraps if following the camel case convention\r\n+\t * @param originalLabel the original label\r\n+\t * @return the formatted label\r\n+\t */\r\n+\tpublic String getLabel(String originalLabel) {\r\n+\t\tStringBuilder builder = new StringBuilder();\r\n+\t\toriginalLabel = originalLabel.replace('_', ' ');\r\n+\t\tchar[] charArray = originalLabel.toCharArray();\r\n+        for (int i = 0; i < charArray.length; i++) {\r\n+        \tif (Character.isUpperCase(charArray[i]) && i > 0 && !Character.isUpperCase(charArray[i - 1])) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f34f8369c90637b27ab64aa38fac8d834006e9e2"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Mzg2NjU5OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.extension.statemachines.ui/src/de/dlr/sc/virsat/model/extension/statemachines/ui/diagram/features/label/MultilineLabelFormatter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjozNDo0MFrOIAkq6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjozNDo0MFrOIAkq6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MTcyMg==", "bodyText": "Lets move the formatter to the model plugin, then we can also test it.\nI dont see any UI dependencies.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/892#discussion_r537471722", "createdAt": "2020-12-07T12:34:40Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.statemachines.ui/src/de/dlr/sc/virsat/model/extension/statemachines/ui/diagram/features/label/MultilineLabelFormatter.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.statemachines.ui.diagram.features.label;\r\n+\r\n+import org.apache.commons.lang.WordUtils;\r\n+\r\n+/**\r\n+ * Formating a multi line label\r\n+ *\r\n+ */\r\n+public class MultilineLabelFormatter {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f34f8369c90637b27ab64aa38fac8d834006e9e2"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3Mzg2OTg0OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.extension.statemachines.ui/src/de/dlr/sc/virsat/model/extension/statemachines/ui/diagram/features/label/MultilineLabelFormatter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjozNToyNFrOIAksrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxMjozNToyNFrOIAksrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzQ3MjE3NA==", "bodyText": "Can we define a constant for the second parameter?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/892#discussion_r537472174", "createdAt": "2020-12-07T12:35:24Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.statemachines.ui/src/de/dlr/sc/virsat/model/extension/statemachines/ui/diagram/features/label/MultilineLabelFormatter.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.model.extension.statemachines.ui.diagram.features.label;\r\n+\r\n+import org.apache.commons.lang.WordUtils;\r\n+\r\n+/**\r\n+ * Formating a multi line label\r\n+ *\r\n+ */\r\n+public class MultilineLabelFormatter {\r\n+\t\r\n+\t\r\n+\t/**\r\n+\t * Formating a multi line label so that it wraps if following the camel case convention\r\n+\t * @param originalLabel the original label\r\n+\t * @return the formatted label\r\n+\t */\r\n+\tpublic String getLabel(String originalLabel) {\r\n+\t\tStringBuilder builder = new StringBuilder();\r\n+\t\toriginalLabel = originalLabel.replace('_', ' ');\r\n+\t\tchar[] charArray = originalLabel.toCharArray();\r\n+        for (int i = 0; i < charArray.length; i++) {\r\n+        \tif (Character.isUpperCase(charArray[i]) && i > 0 && !Character.isUpperCase(charArray[i - 1])) {\r\n+            \tbuilder.append(' ');\r\n+            }\r\n+            builder.append(charArray[i]);\r\n+        }\r\n+\t\treturn WordUtils.wrap(builder.toString(), 1);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f34f8369c90637b27ab64aa38fac8d834006e9e2"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 550, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}