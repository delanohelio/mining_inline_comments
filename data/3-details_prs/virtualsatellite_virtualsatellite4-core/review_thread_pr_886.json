{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxODU4MTM5", "number": 886, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoyOTozN1rOFAu9Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoyOTo1M1rOFAu9dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzEzNjE5OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoyOTozN1rOH_KrKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoyOTozN1rOH_KrKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk5NzIyNg==", "bodyText": "1 sentence per line.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/886#discussion_r535997226", "createdAt": "2020-12-04T10:29:37Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "diffHunk": "@@ -158,6 +158,76 @@ Congratulations. You have successfully set up your Git integration!\n \r\n === Virtual Satellite for Concept Developer\r\n \r\n+Following steps describe creation of a new concept.\r\n+\r\n+[%header,cols=\">8,62a,40a\"] \r\n+|===\r\n+\r\n+|Step\r\n+|Task\r\n+|Image\r\n+\r\n+|{counter:step-concept}.\r\n+|Start with clicking menu:File[New > Other...] or kbd:[CTRL+N]. Then from the _new_ dialog select menu:VirSat Model Extension Concept[VirSat Model Extension Concept Wizard] and press btn:[Next>].\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "273b35bc906485fd165901e7adc7b5a17f5ecf96"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzEzNzE2OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoyOTo1M1rOH_Krxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoyOTo1M1rOH_Krxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk5NzM4Mg==", "bodyText": "1 sentence per line.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/886#discussion_r535997382", "createdAt": "2020-12-04T10:29:53Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.docs.feature/src/docs/VirSat_Core_Developer_Manual.adoc", "diffHunk": "@@ -158,6 +158,76 @@ Congratulations. You have successfully set up your Git integration!\n \r\n === Virtual Satellite for Concept Developer\r\n \r\n+Following steps describe creation of a new concept.\r\n+\r\n+[%header,cols=\">8,62a,40a\"] \r\n+|===\r\n+\r\n+|Step\r\n+|Task\r\n+|Image\r\n+\r\n+|{counter:step-concept}.\r\n+|Start with clicking menu:File[New > Other...] or kbd:[CTRL+N]. Then from the _new_ dialog select menu:VirSat Model Extension Concept[VirSat Model Extension Concept Wizard] and press btn:[Next>].\r\n+|image::chapterConceptCreation/concept_wizard_selection.png[Select Concept Wizard]\r\n+\r\n+|{counter:step-concept}.\r\n+|In the concept creation wizard input the future concept name and press btn:[Finish].\r\n+NOTE: Most of the built-in concepts in Virtual Satellite have names starting with `de.dlr.sc.virsat.model.extension`, but external concepts can have a different naming convention.\r\n+|image::chapterConceptCreation/concept_creation.png[Concept Creation]\r\n+\r\n+|{counter:step-concept}.\r\n+|After everything is generated and built, you should have four new plugins in the workspace.\r\n+|image::chapterConceptCreation/generated_plugins.png[Generated Plugins]\r\n+|=== \r\n+\r\n+==== Main concept plugin\r\n+\r\n+The main generated plugin has the same name as the concept, and has the following contents.\r\n+\r\n+image::chapterConceptCreation/main_plugin.png[Main Plugin]\r\n+\r\n+The file *concept.concept* contains the description of the domain elements that can be modeled using this concept.\r\n+See section <<Generic Systems Engineering (Concept) Language>> for the details on how to write this file.\r\n+The default concept file only contains categories _Interface_ and _InterfaceEnd_.\r\n+\r\n+Most of the other code in this and other concept plugins is generated based on the contents of the *condept.concept* file.\r\n+The code in directory `src` is generated once, and can be modified and extended as needed, the code in `src-gen` is regenerated every time the concept file is changed.\r\n+This automatic generation can be toggled with a toolbar button.\r\n+\r\n+image::chapterConceptCreation/button_toggle_generation.png[Toggle Generation]\r\n+\r\n+===== Beans\r\n+\r\n+For every Category and Structural Element in the concept file there is a class with the same name in the package `model`.\r\n+These \"bean\" classes provide a convenient way to programmatically access and manipulate model objects.\r\n+\r\n+===== Validators\r\n+\r\n+Virtual Satellite has a validation builder that runs generic and custom validators against the model data.\r\n+Validators normally check the validity and consistency of the model.\r\n+There is one generated validator as a starting point, but you can add more validators.\r\n+All additional new validators have to be registered in `plugin.xml` in the protected region in the end (this region does not get regenerated).\r\n+\r\n+===== Migrators\r\n+\r\n+As soon as you increase the concept version in `concept.concept`, a new migrator from the previous to the new version will be generated automatically.\r\n+The purpose of the migrator is to migrate data modeled with the older concept version to the new version.\r\n+For most changes the auto-generated migrator is sufficient, however if some custom migration logic is required, it can be added to the migrator class.\r\n+\r\n+==== UI plugin\r\n+\r\n+Auto-generated UI plugin contains UI snippets, commands and handlers that extend Virtual Satellite UI for this concept.\r\n+\r\n+==== Test plugin\r\n+\r\n+Test plugin contains some auto-generated unit tests. You can add more unit tests as you develop your concept.\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "273b35bc906485fd165901e7adc7b5a17f5ecf96"}, "originalPosition": 67}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 541, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}