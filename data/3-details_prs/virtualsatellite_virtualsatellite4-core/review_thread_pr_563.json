{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5MDY4NTkw", "number": 563, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzowMDo0MlrODyD3zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjowOTowNlrODyJHng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzODE4ODI5OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomain.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzowMDo0MlrOGF4i2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMzowMDo0MlrOGF4i2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgyMjQ4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t\t\tif (!dvlmResourcesOnly || (dvlmResourcesOnly && fileIsDVLMResource)) {\n          \n          \n            \n            \t\t\t\t\t\tif (fileIsDVLMResource || !dvlmResourcesOnly) {", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/563#discussion_r408822488", "createdAt": "2020-04-15T13:00:42Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomain.java", "diffHunk": "@@ -357,9 +356,12 @@ public void saveAll(boolean supressRemoveDanglingReferences) {\n \t\t\t\tthis.writeExclusive(() -> {\r\n \t\t\t\t\tList<Resource> resources = new ArrayList<Resource>(virSatResourceSet.getResources());\r\n \t\t\t\t\tfor (Resource resource : resources) {\r\n-\t\t\t\t\t\tsaveResource(resource, supressRemoveDanglingReferences);\r\n-\t\t\t\t\t\tvirSatResourceSet.updateDiagnostic(resource);\r\n-\t\t\t\t\t\tvirSatResourceSet.notifyDiagnosticListeners(resource);\r\n+\t\t\t\t\t\tboolean fileIsDVLMResource = VirSatProjectCommons.FILENAME_EXTENSION.equalsIgnoreCase(resource.getURI().fileExtension());\r\n+\t\t\t\t\t\tif (!dvlmResourcesOnly || (dvlmResourcesOnly && fileIsDVLMResource)) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cdcb9af5ddd69bf76992017481e67b24cd5873b"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTA0Nzk4OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.extension.tests.test/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomainNonDVLMTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjowOTowNlrOGGBECg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjowOTowNlrOGGBECg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk2MjA1OA==", "bodyText": "Let's move repetitive code into a method like doExternalChange()", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/563#discussion_r408962058", "createdAt": "2020-04-15T16:09:06Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.model.extension.tests.test/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomainNonDVLMTest.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.project.editingDomain;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+import static org.junit.Assert.assertTrue;\n+\n+import java.io.IOException;\n+import java.util.Collections;\n+\n+import org.eclipse.core.resources.IFile;\n+import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.emf.ecore.resource.Resource;\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+import org.eclipse.emf.transaction.RecordingCommand;\n+import org.eclipse.emf.transaction.TransactionalEditingDomain;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\n+import de.dlr.sc.virsat.model.extension.tests.model.TestStructuralElement;\n+import de.dlr.sc.virsat.model.extension.tests.test.ATestConceptTestCase;\n+import de.dlr.sc.virsat.model.external.tests.Container;\n+import de.dlr.sc.virsat.model.external.tests.ExternalTestType;\n+import de.dlr.sc.virsat.model.external.tests.TestsFactory;\n+import de.dlr.sc.virsat.project.resources.command.CreateSeiResourceAndFileCommand;\n+\n+public class VirSatTransactionalEditingDomainNonDVLMTest extends ATestConceptTestCase {\n+\t\n+\tprivate static final String EXTERNAL_RESOURCE_NAME = \"test/ExternalModel.etests\";\n+\tprivate Resource externalModelResourceVirSatDomain;\n+\tprivate Container containerVirsatContext;\n+\tprivate IFile modelFile;\n+\t\n+\t\n+\t@Before\n+\tpublic void setUpModel() throws CoreException, IOException {\n+\t\tsuper.setUp();\n+\t\t\n+\t\t// Setup VirSat project context to also respect external changes\n+\t\taddEditingDomainAndRepository(true);\n+\t\texecuteAsCommand(() -> loadConceptAndInstallToRepository(CONCEPT_ID_CORE));\n+\t\texecuteAsCommand(() -> loadTestConcept());\n+\t\tTestStructuralElement tsei = new TestStructuralElement(testConcept);\n+\t\tStructuralElementInstance sei = tsei.getStructuralElementInstance();\n+\t\texecuteAsCommand(() -> repository.getRootEntities().add(sei));\n+\t\teditingDomain.getCommandStack().execute(new CreateSeiResourceAndFileCommand(rs, sei));\n+\t\t\n+\t\t// Create external model resource\n+\t\tmodelFile = testProject.getFile(EXTERNAL_RESOURCE_NAME);\n+\t\texternalModelResourceVirSatDomain = rs.safeGetResource(modelFile, true);\n+\t\t\n+\t\t// Create external model content\n+\t\tcontainerVirsatContext = TestsFactory.eINSTANCE.createContainer();\n+\t\texecuteAsCommand(() -> externalModelResourceVirSatDomain.getContents().add(containerVirsatContext));\n+\t\texternalModelResourceVirSatDomain.save(Collections.emptyMap());\n+\t}\n+\t\n+\t@Test\n+\tpublic void testSaveAll() throws IOException {\n+\t\t// Do some external changes\n+\t\tTransactionalEditingDomain externalEditingDomain = TransactionalEditingDomain.Factory.INSTANCE.createEditingDomain();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9cdcb9af5ddd69bf76992017481e67b24cd5873b"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 720, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}