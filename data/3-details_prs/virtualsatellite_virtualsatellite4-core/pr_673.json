{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwNTk4OTk5", "number": 673, "title": "Feature/task 663 add bean list for bea", "bodyText": "Added missing list of beans for the new BeanPropertyReference and BeanPropertyComposed to GenerateCategoryBeans.\nAdded test cases for the newly added list classes.\n\u26a0\ufe0fAfter we generate all the new files in a seperate ticket, test cases for the new getters should be implemented\nCloses #663", "createdAt": "2020-06-26T13:52:49Z", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673", "merged": true, "mergeCommit": {"oid": "cfcb12026bcfac213fd8cec82546b6d428715061"}, "closed": true, "closedAt": "2020-07-02T10:02:45Z", "author": {"login": "JAmmermann-DLR"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcu_HP0AH2gAyNDQwNTk4OTk5OjU4NjJjYzE5ZmE0YmZkYmE1ZjQxMDQ5NzExMDhlZDVmZGM4MjZlOWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcw76XmAFqTQ0MTUzMzMwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5862cc19fa4bfdba5f4104971108ed5fdc826e9f", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/5862cc19fa4bfdba5f4104971108ed5fdc826e9f", "committedDate": "2020-06-26T08:38:32Z", "message": "Add TypeSafeReferencePropertyBeanList - (Task #663)\n\nIs a TypeSafeArrayInstanceList correctly typed with a\nBeanPropertyReference.\n\n---\nTask #663: Add bean list for BeanPropertyReference and\nBeanPropertyComposed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5c9bcc64acc1661e343e92084c1201699b1acb2", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/d5c9bcc64acc1661e343e92084c1201699b1acb2", "committedDate": "2020-06-26T08:42:45Z", "message": "Merge branch 'development' into feature/task_663-Add_bean_list_for_Bea"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38831d33cbb708e4fc7c94e59fba33e110517c1c", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/38831d33cbb708e4fc7c94e59fba33e110517c1c", "committedDate": "2020-06-26T09:54:37Z", "message": "Add TypeSafeComposedPropertyBeanList and test cases - (Task #663)\n\n---\nTask #663: Add bean list for BeanPropertyReference and\nBeanPropertyComposed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/39d368d33b2c3a9a0b3b7f8b01ba935cc578c562", "committedDate": "2020-06-26T12:37:15Z", "message": "Add lists to GenerateCategoryBeans - (Task #663)\n\n---\nTask #663: Add bean list for BeanPropertyReference and\nBeanPropertyComposed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4MzIzNDQ0", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#pullrequestreview-438323444", "createdAt": "2020-06-26T14:04:25Z", "commit": {"oid": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4OTI0ODEx", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#pullrequestreview-438924811", "createdAt": "2020-06-29T06:46:16Z", "commit": {"oid": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNjo0NjoxNlrOGqG2Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yOVQwNzowMjoyNFrOGqHRJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwNTU3NA==", "bodyText": "sure it should be called \"declareSafeAccessArrayMethodBean\" or \"declareMethodSafeAccessArrayBean\" ?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#discussion_r446805574", "createdAt": "2020-06-29T06:46:16Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.concept/src/de/dlr/sc/virsat/model/concept/generator/beans/GenerateCategoryBeans.xtend", "diffHunk": "@@ -329,6 +331,16 @@ class GenerateCategoryBeans extends AGeneratorGapGenerator<Category> {\n \t\t}\r\n \t}\r\n \t'''\r\n+\t\r\n+\tprotected def declareSafeAccessArrayMethodBean(AProperty property, ImportManager importManager) '''\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwNjk1NA==", "bodyText": "Check for the white spaces. Maybe a clean up is needed here.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#discussion_r446806954", "createdAt": "2020-06-29T06:49:53Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/list/TypeSafeArrayInstanceList.java", "diffHunk": "@@ -44,14 +48,17 @@ public TypeSafeArrayInstanceList(Class<BEAN_TYPE> beanClazz, ArrayInstance ai) {\n \t\tthis.beanClazz = beanClazz;\r\n \t}\r\n \t\r\n-\tprotected Class<BEAN_TYPE> beanClazz;\r\n+\t\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgwOTE0Ng==", "bodyText": "Maybe we could use some mroe documentation on this change. We could explain, that we needed this change for the sub-classes to work as expected.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#discussion_r446809146", "createdAt": "2020-06-29T06:54:57Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/list/TypeSafeArrayInstanceList.java", "diffHunk": "@@ -44,14 +48,17 @@ public TypeSafeArrayInstanceList(Class<BEAN_TYPE> beanClazz, ArrayInstance ai) {\n \t\tthis.beanClazz = beanClazz;\r\n \t}\r\n \t\r\n-\tprotected Class<BEAN_TYPE> beanClazz;\r\n+\t\r\n+\r\n+\tprotected Class<?> beanClazz;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxMTgwNg==", "bodyText": "The section of Instantiating the CA could maybe simplified by usign the CategoryInstantiator.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#discussion_r446811806", "createdAt": "2020-06-29T07:00:47Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/concept/lists/TypeSafeComposedPropertyBeanListTest.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.concept.lists;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.concept.list.TypeSafeComposedPropertyBeanList;\n+import de.dlr.sc.virsat.model.concept.types.category.IBeanCategoryAssignment;\n+import de.dlr.sc.virsat.model.concept.types.property.BeanPropertyComposed;\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoriesFactory;\n+import de.dlr.sc.virsat.model.dvlm.categories.Category;\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.ComposedProperty;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.PropertydefinitionsFactory;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ArrayInstance;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ComposedPropertyInstance;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.PropertyinstancesFactory;\n+import de.dlr.sc.virsat.model.dvlm.categories.util.CategoryAssignmentHelper;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.dvlm.concepts.ConceptsFactory;\n+\n+public class TypeSafeComposedPropertyBeanListTest {\n+\n+\tprivate ComposedProperty testProperty;\n+\tprivate BeanPropertyComposed<IBeanCategoryAssignment> bean;\n+\tprivate ComposedPropertyInstance cpi;\n+\tprivate TypeSafeComposedPropertyBeanList<IBeanCategoryAssignment> beanList;\n+\tprivate static final String PROPERTY_NAME = \"testProperty\";\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tConcept testConcept = ConceptsFactory.eINSTANCE.createConcept();\n+\t\tCategory testCategory = CategoriesFactory.eINSTANCE.createCategory();\n+\t\ttestProperty = PropertydefinitionsFactory.eINSTANCE.createComposedProperty();\n+\t\ttestProperty.setName(PROPERTY_NAME);\n+\t\ttestProperty.setArrayModifier(PropertydefinitionsFactory.eINSTANCE.createDynamicArrayModifier());\n+\t\t\n+\t\ttestConcept.getCategories().add(testCategory);\n+\t\ttestCategory.getProperties().add(testProperty);\n+\t\t\n+\t\tCategoryAssignment testCA = CategoriesFactory.eINSTANCE.createCategoryAssignment();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjgxMjQ1NA==", "bodyText": "Maybe possible to simplify by using the CategoryInstantiator.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#discussion_r446812454", "createdAt": "2020-06-29T07:02:24Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/concept/lists/TypeSafeReferencePropertyBeanListTest.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.concept.lists;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.concept.list.TypeSafeReferencePropertyBeanList;\n+import de.dlr.sc.virsat.model.concept.types.category.IBeanCategoryAssignment;\n+import de.dlr.sc.virsat.model.concept.types.property.BeanPropertyReference;\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoriesFactory;\n+import de.dlr.sc.virsat.model.dvlm.categories.Category;\n+import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.ComposedProperty;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.PropertydefinitionsFactory;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ArrayInstance;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.PropertyinstancesFactory;\n+import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ReferencePropertyInstance;\n+import de.dlr.sc.virsat.model.dvlm.categories.util.CategoryAssignmentHelper;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.dvlm.concepts.ConceptsFactory;\n+\n+public class TypeSafeReferencePropertyBeanListTest {\n+\n+\tprivate ComposedProperty testProperty;\n+\tprivate BeanPropertyReference<IBeanCategoryAssignment> bean;\n+\tprivate ReferencePropertyInstance rpi;\n+\tprivate TypeSafeReferencePropertyBeanList<IBeanCategoryAssignment> beanList;\n+\tprivate static final String PROPERTY_NAME = \"testProperty\";\n+\n+\t@Before\n+\tpublic void setUp() throws Exception {\n+\t\tConcept testConcept = ConceptsFactory.eINSTANCE.createConcept();\n+\t\tCategory testCategory = CategoriesFactory.eINSTANCE.createCategory();\n+\t\ttestProperty = PropertydefinitionsFactory.eINSTANCE.createComposedProperty();\n+\t\ttestProperty.setName(PROPERTY_NAME);\n+\t\ttestProperty.setArrayModifier(PropertydefinitionsFactory.eINSTANCE.createDynamicArrayModifier());\n+\t\t\n+\t\ttestConcept.getCategories().add(testCategory);\n+\t\ttestCategory.getProperties().add(testProperty);\n+\t\t\n+\t\tCategoryAssignment testCA = CategoriesFactory.eINSTANCE.createCategoryAssignment();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39d368d33b2c3a9a0b3b7f8b01ba935cc578c562"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be5f8c2775b6c94797ba911e9b8460115f6cede6", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/be5f8c2775b6c94797ba911e9b8460115f6cede6", "committedDate": "2020-06-29T08:11:59Z", "message": "Changes due to review - (Task #663)\n\n- Renamed declareSafeAccessArrayMethodBean to\ndeclareSafeAccessArrayBeanMethod\n- In TypeSafeArrayInstanceList remove white spaces and add documentation\n- Shorter test setup using caInstantiator\n\n---\nTask #663: Add bean list for BeanPropertyReference and\nBeanPropertyComposed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNTMzMzA5", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/673#pullrequestreview-441533309", "createdAt": "2020-07-02T10:02:36Z", "commit": {"oid": "be5f8c2775b6c94797ba911e9b8460115f6cede6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 508, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}