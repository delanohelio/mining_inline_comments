{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MTU4NTkx", "number": 480, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDowODo0M1rODhFVeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTozOTozMlrODubjlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDE3MDE3OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDowODo0M1rOFrpclA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDowODo0M1rOFrpclA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMxMjE0OA==", "bodyText": "We need some comments here on this method and how it works since it does some crazy reflection stuff.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r381312148", "createdAt": "2020-02-19T14:08:43Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -161,6 +168,77 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * @param item Tree item for which a diagram editor gets opened\r\n+\t * @return Graphiti GEF Editor handle that SWTBot can work on\r\n+\t */\r\n+\tprotected SWTBotGefEditor openDiagramEditorForTreeItem(SWTBotTreeItem item) {\r\n+\t\tSWTGefBot gefBot = new SWTGefBot();\r\n+\t\titem.contextMenu().menu(\"Open Diagram Editor\").click();\r\n+\t\twaitForEditingDomainAndUiThread();\t\t\r\n+\t\tString editorTitle = bot.editors().get(1).getTitle();\t\t\t\t\r\n+\t\tSWTBotGefEditor editor = gefBot.gefEditor(editorTitle);\r\n+\t\treturn editor;\r\n+\t}\r\n+\t\r\n+\t/**\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "594d1210cd57dd63a9ac85ddfe3a846882b0ae2e"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDE3ODQ3OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNDoxMDo0OVrOFrphkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMzoyNDowMFrOFsTGXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMxMzQyNg==", "bodyText": "I am not a 100% sure if we can generalize this so easily.\nThe \"Open Diagram Editor\" handler in FDIR is a custom handler.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r381313426", "createdAt": "2020-02-19T14:10:49Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -161,6 +168,77 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * @param item Tree item for which a diagram editor gets opened\r\n+\t * @return Graphiti GEF Editor handle that SWTBot can work on\r\n+\t */\r\n+\tprotected SWTBotGefEditor openDiagramEditorForTreeItem(SWTBotTreeItem item) {\r\n+\t\tSWTGefBot gefBot = new SWTGefBot();\r\n+\t\titem.contextMenu().menu(\"Open Diagram Editor\").click();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "594d1210cd57dd63a9ac85ddfe3a846882b0ae2e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk5NDU4OQ==", "bodyText": "I'll remove it for now until we come up with a better more generic way", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r381994589", "createdAt": "2020-02-20T13:24:00Z", "author": {"login": "christoph-pietsch-DLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -161,6 +168,77 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * @param item Tree item for which a diagram editor gets opened\r\n+\t * @return Graphiti GEF Editor handle that SWTBot can work on\r\n+\t */\r\n+\tprotected SWTBotGefEditor openDiagramEditorForTreeItem(SWTBotTreeItem item) {\r\n+\t\tSWTGefBot gefBot = new SWTGefBot();\r\n+\t\titem.contextMenu().menu(\"Open Diagram Editor\").click();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTMxMzQyNg=="}, "originalCommit": {"oid": "594d1210cd57dd63a9ac85ddfe3a846882b0ae2e"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2Nzc1MTA3OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODo1NzowNFrOFsvu2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODo1NzowNFrOFsvu2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ2MzcwNw==", "bodyText": "Usually the comments for methods go above the parameter descriptions.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r382463707", "createdAt": "2020-02-21T08:57:04Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -161,6 +167,68 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * @param item Tree item that is beeing dragged\r\n+\t * @param diagramEditor Graphiti diagram editor which the tree item is beeing dragged onto\r\n+\t * \r\n+\t * We can only drop tree items to canvas elements. SWTBotGefViewer's canvas element is not \r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1b57f81ef83bbbe44f65cbcf99bfb3b8e94106a"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2Nzc1Mzk2OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODo1ODowNVrOFsvwqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODo1ODowNVrOFsvwqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ2NDE2OQ==", "bodyText": "Can we at least use IllegalArgumentException | IllegalAccessException e to make this more compact?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r382464169", "createdAt": "2020-02-21T08:58:05Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -161,6 +167,68 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * @param item Tree item that is beeing dragged\r\n+\t * @param diagramEditor Graphiti diagram editor which the tree item is beeing dragged onto\r\n+\t * \r\n+\t * We can only drop tree items to canvas elements. SWTBotGefViewer's canvas element is not \r\n+\t * capable of beeing accessed directly from external classes though. Further more SWTBotGefViewer's \r\n+\t * canvas member gets populated during runtime only. Hence we use reflections to get a hold on it here.\r\n+\t */\r\n+\tprotected void dragTreeItemToDiagramEditor(SWTBotTreeItem item, SWTBotGefEditor diagramEditor) {\r\n+\t\tSWTBotGefViewer viewer = diagramEditor.getSWTBotGefViewer();\r\n+\t\tSWTBotGefFigureCanvas canvas = null;\t\t\r\n+\r\n+\t\tfor (Field f : viewer.getClass().getDeclaredFields()) {\r\n+\t\t    if (\"canvas\".equals(f.getName())) {\r\n+\t\t        f.setAccessible(true);\r\n+\t\t        try {\r\n+\t\t            canvas = (SWTBotGefFigureCanvas) f.get(viewer);\r\n+\t\t        } catch (IllegalArgumentException e) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1b57f81ef83bbbe44f65cbcf99bfb3b8e94106a"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDcwNTIzOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.swtbot.test/META-INF/MANIFEST.MF", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODoyMzoxNlrOFxjsTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODoyMzoxNlrOFxjsTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwOTMyNQ==", "bodyText": "At the moment we do not bind versions in Virtual Satellite when possible. please remove the specific version", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r387509325", "createdAt": "2020-03-04T08:23:16Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.swtbot.test/META-INF/MANIFEST.MF", "diffHunk": "@@ -11,6 +11,7 @@ Require-Bundle: org.eclipse.swt,\n  org.eclipse.swtbot.go,\r\n  org.eclipse.swtbot.junit4_x,\r\n  org.eclipse.swtbot.swt.finder,\r\n+ org.eclipse.swtbot.eclipse.gef.finder;bundle-version=\"2.8.0\",\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3c4c2c8f438f9b9d7d5ecd4805977d7ef633caa"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDcwOTIyOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODoyNDozM1rOFxjuyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODoyNDozM1rOFxjuyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUwOTk2Mw==", "bodyText": "Maybe refactor string to static member variable in TestCase or UtilityClass.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r387509963", "createdAt": "2020-03-04T08:24:33Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -161,6 +167,66 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * We can only drop tree items to canvas elements. SWTBotGefViewer's canvas element is not \r\n+\t * capable of beeing accessed directly from external classes though. Further more SWTBotGefViewer's \r\n+\t * canvas member gets populated during runtime only. Hence we use reflections to get a hold on it here.\r\n+\t * \r\n+\t * @param item Tree item that is beeing dragged\r\n+\t * @param diagramEditor Graphiti diagram editor which the tree item is beeing dragged onto\r\n+\t */\r\n+\tprotected void dragTreeItemToDiagramEditor(SWTBotTreeItem item, SWTBotGefEditor diagramEditor) {\r\n+\t\tSWTBotGefViewer viewer = diagramEditor.getSWTBotGefViewer();\r\n+\t\tSWTBotGefFigureCanvas canvas = null;\t\t\r\n+\r\n+\t\tfor (Field f : viewer.getClass().getDeclaredFields()) {\r\n+\t\t    if (\"canvas\".equals(f.getName())) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3c4c2c8f438f9b9d7d5ecd4805977d7ef633caa"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDcxMjIyOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODoyNTozOVrOFxjwpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwODoyNTozOVrOFxjwpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzUxMDQzOA==", "bodyText": "show error also in log. Log can be accessed via the bundle activators. such as Activator.getLog.log(\u2026)", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r387510438", "createdAt": "2020-03-04T08:25:39Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -161,6 +167,66 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * We can only drop tree items to canvas elements. SWTBotGefViewer's canvas element is not \r\n+\t * capable of beeing accessed directly from external classes though. Further more SWTBotGefViewer's \r\n+\t * canvas member gets populated during runtime only. Hence we use reflections to get a hold on it here.\r\n+\t * \r\n+\t * @param item Tree item that is beeing dragged\r\n+\t * @param diagramEditor Graphiti diagram editor which the tree item is beeing dragged onto\r\n+\t */\r\n+\tprotected void dragTreeItemToDiagramEditor(SWTBotTreeItem item, SWTBotGefEditor diagramEditor) {\r\n+\t\tSWTBotGefViewer viewer = diagramEditor.getSWTBotGefViewer();\r\n+\t\tSWTBotGefFigureCanvas canvas = null;\t\t\r\n+\r\n+\t\tfor (Field f : viewer.getClass().getDeclaredFields()) {\r\n+\t\t    if (\"canvas\".equals(f.getName())) {\r\n+\t\t        f.setAccessible(true);\r\n+\t\t        try {\r\n+\t\t            canvas = (SWTBotGefFigureCanvas) f.get(viewer);\r\n+\t\t        } catch (IllegalArgumentException | IllegalAccessException e) {\r\n+\t\t            e.printStackTrace(); \r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f3c4c2c8f438f9b9d7d5ecd4805977d7ef633caa"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5OTU3NDY2OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzozMDowOFrOGAViIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxMzozNToxMVrOGAVuNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwNTk4Ng==", "bodyText": "If you log it with the Activator you no longer need to print the stacktrace.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r403005986", "createdAt": "2020-04-03T13:30:08Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -198,6 +205,67 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * We can only drop tree items to canvas elements. SWTBotGefViewer's canvas element is not \r\n+\t * capable of beeing accessed directly from external classes though. Further more SWTBotGefViewer's \r\n+\t * canvas member gets populated during runtime only. Hence we use reflections to get a hold on it here.\r\n+\t * \r\n+\t * @param item Tree item that is beeing dragged\r\n+\t * @param diagramEditor Graphiti diagram editor which the tree item is beeing dragged onto\r\n+\t */\r\n+\tprotected void dragTreeItemToDiagramEditor(SWTBotTreeItem item, SWTBotGefEditor diagramEditor) {\r\n+\t\tSWTBotGefViewer viewer = diagramEditor.getSWTBotGefViewer();\r\n+\t\tSWTBotGefFigureCanvas canvas = null;\t\t\r\n+\r\n+\t\tfor (Field f : viewer.getClass().getDeclaredFields()) {\r\n+\t\t    if (SWTBOT_CANVAS_FIELD_REFLECTION_NAME.equals(f.getName())) {\r\n+\t\t        f.setAccessible(true);\r\n+\t\t        try {\r\n+\t\t            canvas = (SWTBotGefFigureCanvas) f.get(viewer);\r\n+\t\t        } catch (IllegalArgumentException | IllegalAccessException e) {\r\n+\t\t        \tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(), Status.ERROR, \"Can not access SWTBotGefViewer element or do a proper cast to canvas type\", e));\r\n+\t\t            e.printStackTrace(); \r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "32c8259494c2ed9bcf21daa008c001317ad870ef"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwODQxNQ==", "bodyText": "Philipp's comment was \"show error also in log\". So I assumed desired behavior was doing both.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r403008415", "createdAt": "2020-04-03T13:34:02Z", "author": {"login": "christoph-pietsch-DLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -198,6 +205,67 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * We can only drop tree items to canvas elements. SWTBotGefViewer's canvas element is not \r\n+\t * capable of beeing accessed directly from external classes though. Further more SWTBotGefViewer's \r\n+\t * canvas member gets populated during runtime only. Hence we use reflections to get a hold on it here.\r\n+\t * \r\n+\t * @param item Tree item that is beeing dragged\r\n+\t * @param diagramEditor Graphiti diagram editor which the tree item is beeing dragged onto\r\n+\t */\r\n+\tprotected void dragTreeItemToDiagramEditor(SWTBotTreeItem item, SWTBotGefEditor diagramEditor) {\r\n+\t\tSWTBotGefViewer viewer = diagramEditor.getSWTBotGefViewer();\r\n+\t\tSWTBotGefFigureCanvas canvas = null;\t\t\r\n+\r\n+\t\tfor (Field f : viewer.getClass().getDeclaredFields()) {\r\n+\t\t    if (SWTBOT_CANVAS_FIELD_REFLECTION_NAME.equals(f.getName())) {\r\n+\t\t        f.setAccessible(true);\r\n+\t\t        try {\r\n+\t\t            canvas = (SWTBotGefFigureCanvas) f.get(viewer);\r\n+\t\t        } catch (IllegalArgumentException | IllegalAccessException e) {\r\n+\t\t        \tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(), Status.ERROR, \"Can not access SWTBotGefViewer element or do a proper cast to canvas type\", e));\r\n+\t\t            e.printStackTrace(); \r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwNTk4Ng=="}, "originalCommit": {"oid": "32c8259494c2ed9bcf21daa008c001317ad870ef"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwOTA3OQ==", "bodyText": "will remove printing then.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r403009079", "createdAt": "2020-04-03T13:35:11Z", "author": {"login": "christoph-pietsch-DLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -198,6 +205,67 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * We can only drop tree items to canvas elements. SWTBotGefViewer's canvas element is not \r\n+\t * capable of beeing accessed directly from external classes though. Further more SWTBotGefViewer's \r\n+\t * canvas member gets populated during runtime only. Hence we use reflections to get a hold on it here.\r\n+\t * \r\n+\t * @param item Tree item that is beeing dragged\r\n+\t * @param diagramEditor Graphiti diagram editor which the tree item is beeing dragged onto\r\n+\t */\r\n+\tprotected void dragTreeItemToDiagramEditor(SWTBotTreeItem item, SWTBotGefEditor diagramEditor) {\r\n+\t\tSWTBotGefViewer viewer = diagramEditor.getSWTBotGefViewer();\r\n+\t\tSWTBotGefFigureCanvas canvas = null;\t\t\r\n+\r\n+\t\tfor (Field f : viewer.getClass().getDeclaredFields()) {\r\n+\t\t    if (SWTBOT_CANVAS_FIELD_REFLECTION_NAME.equals(f.getName())) {\r\n+\t\t        f.setAccessible(true);\r\n+\t\t        try {\r\n+\t\t            canvas = (SWTBotGefFigureCanvas) f.get(viewer);\r\n+\t\t        } catch (IllegalArgumentException | IllegalAccessException e) {\r\n+\t\t        \tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(), Status.ERROR, \"Can not access SWTBotGefViewer element or do a proper cast to canvas type\", e));\r\n+\t\t            e.printStackTrace(); \r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzAwNTk4Ng=="}, "originalCommit": {"oid": "32c8259494c2ed9bcf21daa008c001317ad870ef"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDEyMzA2OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTozODo1NVrOGAa5Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwNzozNjozM1rOGBLL_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5Mzg1NA==", "bodyText": "Whitespacing looks incorrect here.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r403093854", "createdAt": "2020-04-03T15:38:55Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -198,6 +205,66 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * We can only drop tree items to canvas elements. SWTBotGefViewer's canvas element is not \r\n+\t * capable of beeing accessed directly from external classes though. Further more SWTBotGefViewer's \r\n+\t * canvas member gets populated during runtime only. Hence we use reflections to get a hold on it here.\r\n+\t * \r\n+\t * @param item Tree item that is beeing dragged\r\n+\t * @param diagramEditor Graphiti diagram editor which the tree item is beeing dragged onto\r\n+\t */\r\n+\tprotected void dragTreeItemToDiagramEditor(SWTBotTreeItem item, SWTBotGefEditor diagramEditor) {\r\n+\t\tSWTBotGefViewer viewer = diagramEditor.getSWTBotGefViewer();\r\n+\t\tSWTBotGefFigureCanvas canvas = null;\t\t\r\n+\r\n+\t\tfor (Field f : viewer.getClass().getDeclaredFields()) {\r\n+\t\t    if (SWTBOT_CANVAS_FIELD_REFLECTION_NAME.equals(f.getName())) {\r\n+\t\t        f.setAccessible(true);\r\n+\t\t        try {\r\n+\t\t            canvas = (SWTBotGefFigureCanvas) f.get(viewer);\r\n+\t\t        } catch (IllegalArgumentException | IllegalAccessException e) {\r\n+\t\t        \tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(), Status.ERROR, \"Can not access SWTBotGefViewer element or do a proper cast to canvas type\", e));\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94e2fa57dcbdc4dbf2ecf03f9b8cfe2d50fdeab0"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ2MDIxNQ==", "bodyText": "It seems my IDE mixes up tabs and spaces formating regularly, which is hard to spot if displaying whitespaces isnt turned on. Can we add this check to checkstyle globally?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r403460215", "createdAt": "2020-04-04T11:38:31Z", "author": {"login": "christoph-pietsch-DLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -198,6 +205,66 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * We can only drop tree items to canvas elements. SWTBotGefViewer's canvas element is not \r\n+\t * capable of beeing accessed directly from external classes though. Further more SWTBotGefViewer's \r\n+\t * canvas member gets populated during runtime only. Hence we use reflections to get a hold on it here.\r\n+\t * \r\n+\t * @param item Tree item that is beeing dragged\r\n+\t * @param diagramEditor Graphiti diagram editor which the tree item is beeing dragged onto\r\n+\t */\r\n+\tprotected void dragTreeItemToDiagramEditor(SWTBotTreeItem item, SWTBotGefEditor diagramEditor) {\r\n+\t\tSWTBotGefViewer viewer = diagramEditor.getSWTBotGefViewer();\r\n+\t\tSWTBotGefFigureCanvas canvas = null;\t\t\r\n+\r\n+\t\tfor (Field f : viewer.getClass().getDeclaredFields()) {\r\n+\t\t    if (SWTBOT_CANVAS_FIELD_REFLECTION_NAME.equals(f.getName())) {\r\n+\t\t        f.setAccessible(true);\r\n+\t\t        try {\r\n+\t\t            canvas = (SWTBotGefFigureCanvas) f.get(viewer);\r\n+\t\t        } catch (IllegalArgumentException | IllegalAccessException e) {\r\n+\t\t        \tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(), Status.ERROR, \"Can not access SWTBotGefViewer element or do a proper cast to canvas type\", e));\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5Mzg1NA=="}, "originalCommit": {"oid": "94e2fa57dcbdc4dbf2ecf03f9b8cfe2d50fdeab0"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzg4NTA1Mw==", "bodyText": "I think it is possible. We can look into it.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r403885053", "createdAt": "2020-04-06T07:36:33Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -198,6 +205,66 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * We can only drop tree items to canvas elements. SWTBotGefViewer's canvas element is not \r\n+\t * capable of beeing accessed directly from external classes though. Further more SWTBotGefViewer's \r\n+\t * canvas member gets populated during runtime only. Hence we use reflections to get a hold on it here.\r\n+\t * \r\n+\t * @param item Tree item that is beeing dragged\r\n+\t * @param diagramEditor Graphiti diagram editor which the tree item is beeing dragged onto\r\n+\t */\r\n+\tprotected void dragTreeItemToDiagramEditor(SWTBotTreeItem item, SWTBotGefEditor diagramEditor) {\r\n+\t\tSWTBotGefViewer viewer = diagramEditor.getSWTBotGefViewer();\r\n+\t\tSWTBotGefFigureCanvas canvas = null;\t\t\r\n+\r\n+\t\tfor (Field f : viewer.getClass().getDeclaredFields()) {\r\n+\t\t    if (SWTBOT_CANVAS_FIELD_REFLECTION_NAME.equals(f.getName())) {\r\n+\t\t        f.setAccessible(true);\r\n+\t\t        try {\r\n+\t\t            canvas = (SWTBotGefFigureCanvas) f.get(viewer);\r\n+\t\t        } catch (IllegalArgumentException | IllegalAccessException e) {\r\n+\t\t        \tActivator.getDefault().getLog().log(new Status(Status.ERROR, Activator.getPluginId(), Status.ERROR, \"Can not access SWTBotGefViewer element or do a proper cast to canvas type\", e));\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5Mzg1NA=="}, "originalCommit": {"oid": "94e2fa57dcbdc4dbf2ecf03f9b8cfe2d50fdeab0"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMDEyNTY3OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTozOTozM1rOGAa69w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTozOTozM1rOGAa69w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA5NDI2Mw==", "bodyText": "Why do we need to do this? I think a comment would be nice", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/480#discussion_r403094263", "createdAt": "2020-04-03T15:39:33Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/ASwtBotTestCase.java", "diffHunk": "@@ -198,6 +205,66 @@ protected SWTBotTreeItem openEditor(SWTBotTreeItem item) {\n \t\treturn newItem;\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * We can only drop tree items to canvas elements. SWTBotGefViewer's canvas element is not \r\n+\t * capable of beeing accessed directly from external classes though. Further more SWTBotGefViewer's \r\n+\t * canvas member gets populated during runtime only. Hence we use reflections to get a hold on it here.\r\n+\t * \r\n+\t * @param item Tree item that is beeing dragged\r\n+\t * @param diagramEditor Graphiti diagram editor which the tree item is beeing dragged onto\r\n+\t */\r\n+\tprotected void dragTreeItemToDiagramEditor(SWTBotTreeItem item, SWTBotGefEditor diagramEditor) {\r\n+\t\tSWTBotGefViewer viewer = diagramEditor.getSWTBotGefViewer();\r\n+\t\tSWTBotGefFigureCanvas canvas = null;\t\t\r\n+\r\n+\t\tfor (Field f : viewer.getClass().getDeclaredFields()) {\r\n+\t\t    if (SWTBOT_CANVAS_FIELD_REFLECTION_NAME.equals(f.getName())) {\r\n+\t\t        f.setAccessible(true);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94e2fa57dcbdc4dbf2ecf03f9b8cfe2d50fdeab0"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 683, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}