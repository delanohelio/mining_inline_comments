{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NzYwNDEy", "number": 748, "title": "PR #2 Low Level API - Add SEIs", "bodyText": "Second PR for #555\n\u26a0\ufe0f Should be merged after #742 and  #747\n\nIn ModelAccessResource add API for:\n\nAccessing all RootSeis\nAccessing Seis\n\n\nUpdate ModelAccessResourceTest\nIn CustomJsonProvider:\n\nNow the whole repository has to be handed over\nAlso register SEI classes and Adapter classes if needed\nCall syncRepository\n\n\nUpdate CustomJsonProviderTest\n\nCloses #555", "createdAt": "2020-10-05T10:42:11Z", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748", "merged": true, "mergeCommit": {"oid": "164bfba810aee568646f3f9044eb03b3c66b9b16"}, "closed": true, "closedAt": "2020-10-28T15:23:16Z", "author": {"login": "JAmmermann-DLR"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOOkYXgH2gAyNDk3NzYwNDEyOmU3MGJhOGRlMWIzZTM3MDRlYTc3MmZkMzcyODI2MDRkMzdlMWEwM2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdW_OM5AFqTUxODc4NTI0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e70ba8de1b3e3704ea772fd37282604d37e1a03c", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/e70ba8de1b3e3704ea772fd37282604d37e1a03c", "committedDate": "2020-10-01T10:10:35Z", "message": "Merge branch 'feature/task_725-Transform_SEIs,_Conce' into feature/task_555-Add_Seis_to_API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffcfe38f11ea69476706aed315acca52019c270e", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/ffcfe38f11ea69476706aed315acca52019c270e", "committedDate": "2020-10-02T10:50:04Z", "message": "Add Seis to ModelAccessResource - (Task #555)\n\n- Add the following methods to ModelAccessResource:\n  - Get RootSeis\n  - Get and Put Sei\n- Add test cases to ModelAccessResourceTest\n- Update CustomJsonProvider:\n  - Also register Sei classes manually\n  - When unmarshalling the RootSeis only register needed adapter classes\nmanually\n\n---\nTask #555: Add Low Level Data API to access SEIs and CAs to REST server"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a13d615e63fac5ce57f5b5dc075cb134ad63f679", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/a13d615e63fac5ce57f5b5dc075cb134ad63f679", "committedDate": "2020-10-05T08:52:35Z", "message": "Call syncRepository in CustomJsonProvider - (Task #555)\n\nNow the whole repository has to be handed over to the provider.\n\n---\nTask #555: Add Low Level Data API to access SEIs and CAs to REST server"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62a06b620f973f6cc8c9ca61a7f364513f2498a8", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/62a06b620f973f6cc8c9ca61a7f364513f2498a8", "committedDate": "2020-10-05T10:17:38Z", "message": "Fix CustomJsonProviderTest - (Task #555)\n\nAdd missing supper user rights.\n\n---\nTask #555: Add Low Level Data API to access SEIs and CAs to REST server"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5091b06ec0f3d9a20a9adee08b5b9f35718b1d90", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/5091b06ec0f3d9a20a9adee08b5b9f35718b1d90", "committedDate": "2020-10-20T09:42:55Z", "message": "Merge branch 'feature/task_725-Transform_SEIs,_Conce' into feature/task_555-Add_Seis_to_API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0daff01e1f5440d94bd993da01dda54a82fbbd87", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/0daff01e1f5440d94bd993da01dda54a82fbbd87", "committedDate": "2020-10-22T11:17:33Z", "message": "Merge branch 'feature/task_725-Transform_SEIs,_Conce' into feature/task_555-Add_Seis_to_API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ac63e3513bc09273ad730a7f83f1aa76d29653c", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4ac63e3513bc09273ad730a7f83f1aa76d29653c", "committedDate": "2020-10-26T09:08:01Z", "message": "Merge branch 'development' into feature/task_555-Add_Seis_to_API\n\nConflicts:\n\tde.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/dataaccess/CustomJsonProviderTest.java\n\tde.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/test/AServerRepositoryTest.java\n\tde.dlr.sc.virsat.server/META-INF/MANIFEST.MF\n\tde.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/dataaccess/CustomJsonProvider.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/e44a027e530d23939506805d916ffe311b6f70bb", "committedDate": "2020-10-26T11:21:02Z", "message": "Add ModelAccessResourceTest tear down - (Task #555)\n\nResolves an issue with doubled elements in the resource set that caused\ntest errors.\n\n---\nTask #555: Add Low Level Data API to access SEIs and CAs to REST server"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NDMxOTMy", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#pullrequestreview-517431932", "createdAt": "2020-10-27T08:05:07Z", "commit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODowNTowN1rOHovfpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QwODoyMzozOVrOHowIGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4MzIzOQ==", "bodyText": "Do we want to print out the messages here?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512483239", "createdAt": "2020-10-27T08:05:07Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/dataaccess/TransactionalJsonProviderTest.java", "diffHunk": "@@ -118,16 +123,52 @@ public void testWriteTo() throws WebApplicationException, IOException {\n \t\twriteToAndAssert();\n \t}\n \t\n+\t/**\n+\t * Open the remote repository and count the commits\n+\t * @return number of commits in remote\n+\t * @throws IOException\n+\t * @throws NoHeadException\n+\t * @throws GitAPIException\n+\t * @throws InterruptedException\n+\t */\n+\tprivate int countCommits() throws IOException, NoHeadException, GitAPIException, InterruptedException {\n+\t\tGit git = Git.open(pathRepoRemote.toFile());\n+\t\tIterator<RevCommit> iterator = git.log().call().iterator();\n+\t\tint commits = 0;\n+\t\twhile (iterator.hasNext()) {\n+\t\t\tSystem.out.println(iterator.next().getFullMessage());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 137}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4NzA5MQ==", "bodyText": "Do we still need this if it was just for debugging?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512487091", "createdAt": "2020-10-27T08:12:08Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/dataaccess/TransactionalJsonProvider.java", "diffHunk": "@@ -92,14 +118,30 @@ public void setEd(VirSatTransactionalEditingDomain ed) {\n \tprotected void preWriteTo(Object object, Class<?> type, Type genericType,\n \t\t\tAnnotation[] annotations, MediaType mediaType,\n \t\t\tMultivaluedMap<String, Object> httpHeaders, Marshaller marshaller) throws JAXBException {\n+\t\tsuper.preWriteTo(object, type, genericType, annotations, mediaType, httpHeaders, marshaller);\n \t\tmarshaller.setEventHandler(eventHandler);\n \t}\n-\n+\t\n+\t@Override\n+\tpublic void writeTo(Object object, Class<?> type, Type genericType, Annotation[] annotations, MediaType mediaType,\n+\t\t\tMultivaluedMap<String, Object> httpHeaders, OutputStream entityStream)\n+\t\t\tthrows IOException, WebApplicationException {\n+\t\t// Useful for debugging\n+\t\tsuper.writeTo(object, type, genericType, annotations, mediaType, httpHeaders, entityStream);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4ODQ0Mg==", "bodyText": "Can we just use \"List\" on the left hand side?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512488442", "createdAt": "2020-10-27T08:14:35Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/resources/ModelAccessResource.java", "diffHunk": "@@ -226,6 +234,57 @@ public Response getCa(@PathParam(\"caUuid\") String caUuid) {\n \t\tpublic Response putCa(ABeanCategoryAssignment bean) {\r\n \t\t\treturn Response.status(Response.Status.OK).build();\r\n \t\t}\r\n+\t\t\r\n+\t\t/**\r\n+\t\t * Returns a response with a list of the root seis\r\n+\t\t * @return a server response\r\n+\t\t */\r\n+\t\t@GET\r\n+\t\t@Path(ROOT_SEIS)\r\n+\t\t@Produces(MediaType.APPLICATION_JSON)\r\n+\t\tpublic Response getRootSeis() {\r\n+\t\t\ttry {\r\n+\t\t\t\tEList<StructuralElementInstance> rootSeis = repository.getRootEntities();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ4OTM4Nw==", "bodyText": "Lets break this up a bit so we dont have such a complicated parameter call.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512489387", "createdAt": "2020-10-27T08:16:16Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/resources/ModelAccessResource.java", "diffHunk": "@@ -226,6 +234,57 @@ public Response getCa(@PathParam(\"caUuid\") String caUuid) {\n \t\tpublic Response putCa(ABeanCategoryAssignment bean) {\r\n \t\t\treturn Response.status(Response.Status.OK).build();\r\n \t\t}\r\n+\t\t\r\n+\t\t/**\r\n+\t\t * Returns a response with a list of the root seis\r\n+\t\t * @return a server response\r\n+\t\t */\r\n+\t\t@GET\r\n+\t\t@Path(ROOT_SEIS)\r\n+\t\t@Produces(MediaType.APPLICATION_JSON)\r\n+\t\tpublic Response getRootSeis() {\r\n+\t\t\ttry {\r\n+\t\t\t\tEList<StructuralElementInstance> rootSeis = repository.getRootEntities();\r\n+\t\t\t\tList<ABeanStructuralElementInstance> beans = new ArrayList<ABeanStructuralElementInstance>();\r\n+\t\t\t\t\r\n+\t\t\t\tfor (StructuralElementInstance sei : rootSeis) {\r\n+\t\t\t\t\tbeans.add((ABeanStructuralElementInstance) new BeanStructuralElementInstanceFactory().getInstanceFor(sei));\r\n+\t\t\t\t}\r\n+\t\t\t\t\r\n+\t\t\t\tGenericEntity<List<ABeanStructuralElementInstance>> genericEntityList =\r\n+\t\t\t\t\t\tnew GenericEntity<List<ABeanStructuralElementInstance>>(beans) { };\r\n+\r\n+\t\t\t\treturn Response.ok(genericEntityList).build();\r\n+\t\t\t} catch (CoreException e) {\r\n+\t\t\t\treturn createBadRequestResponse(e.getMessage());\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\t\r\n+\t\t/**\r\n+\t\t * Returns a response with the sei with the seiUuid\r\n+\t\t * @param seiUuid uuid of the sei\r\n+\t\t * @return a server response\r\n+\t\t */\r\n+\t\t@GET\r\n+\t\t@Path(SEI + \"/{seiUuid}\")\r\n+\t\t@Produces(MediaType.APPLICATION_JSON)\r\n+\t\tpublic Response getSei(@PathParam(\"seiUuid\") String seiUuid) {\r\n+\t\t\ttry {\r\n+\t\t\t\treturn Response.ok(\r\n+\t\t\t\t\t\tnew BeanStructuralElementInstanceFactory().getInstanceFor(\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjQ5MzU5NA==", "bodyText": "Super important: We also have to set this to false after the test case is done because the super user flag is some static object so it gets carried into the next test case.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#discussion_r512493594", "createdAt": "2020-10-27T08:23:39Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.server.test/src/de/dlr/sc/virsat/server/dataaccess/TransactionalJsonProviderTest.java", "diffHunk": "@@ -29,71 +30,75 @@\n import javax.xml.bind.JAXBContext;\n import javax.xml.bind.JAXBException;\n \n-import org.eclipse.core.runtime.CoreException;\n+import org.eclipse.core.runtime.NullProgressMonitor;\n+import org.eclipse.emf.common.command.Command;\n+import org.eclipse.emf.edit.command.AddCommand;\n+import org.eclipse.jgit.api.Git;\n+import org.eclipse.jgit.api.errors.GitAPIException;\n+import org.eclipse.jgit.api.errors.NoHeadException;\n+import org.eclipse.jgit.revwalk.RevCommit;\n import org.junit.Before;\n import org.junit.Test;\n \n import de.dlr.sc.virsat.model.concept.types.property.BeanPropertyInt;\n-import de.dlr.sc.virsat.model.concept.types.property.BeanPropertyString;\n-import de.dlr.sc.virsat.model.dvlm.categories.CategoriesFactory;\n-import de.dlr.sc.virsat.model.dvlm.categories.Category;\n-import de.dlr.sc.virsat.model.dvlm.categories.CategoryAssignment;\n-import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.PropertydefinitionsFactory;\n-import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.StringProperty;\n-import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.PropertyinstancesFactory;\n-import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ValuePropertyInstance;\n+import de.dlr.sc.virsat.model.concept.types.structural.BeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.dvlm.DVLMPackage;\n+import de.dlr.sc.virsat.model.dvlm.roles.UserRegistry;\n import de.dlr.sc.virsat.model.dvlm.structural.StructuralElement;\n import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\n import de.dlr.sc.virsat.model.dvlm.structural.StructuralFactory;\n-import de.dlr.sc.virsat.project.test.AProjectTestCase;\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\n+import de.dlr.sc.virsat.project.resources.command.CreateSeiResourceAndFileCommand;\n+import de.dlr.sc.virsat.server.test.AServerRepositoryTest;\n \n-public class TransactionalJsonProviderTest extends AProjectTestCase {\n+public class TransactionalJsonProviderTest extends AServerRepositoryTest {\n \n \tprivate TransactionalJsonProvider provider;\n-\tprivate BeanPropertyString testBean;\n+\tprivate BeanStructuralElementInstance testBean;\n \tprivate Class<?> type;\n \tprivate Set<Class<?>> beanClass = new HashSet<>();\n \tprivate MediaType mediaType;\n \tprivate String testString = \"test\";\n \n \t@Before\n-\tpublic void setUp() throws CoreException {\n+\tpublic void setUp() throws Exception {\n \t\tsuper.setUp();\n-\t\taddEditingDomainAndRepository();\n+\t\t\n+\t\tUserRegistry.getInstance().setSuperUser(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e44a027e530d23939506805d916ffe311b6f70bb"}, "originalPosition": 60}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84e91ed23193baa1d02e0066a9e2e7b34c57016f", "author": {"user": {"login": "JAmmermann-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/84e91ed23193baa1d02e0066a9e2e7b34c57016f", "committedDate": "2020-10-27T08:58:07Z", "message": "Changes due to review - (Task #555)\n\n- Use List instead of EList\n- Break up code\n- Delete print\n- setSuperUser to false in tearDown\n\n---\nTask #555: Add Low Level Data API to access SEIs and CAs to REST server"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3NjYyODQ4", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#pullrequestreview-517662848", "createdAt": "2020-10-27T12:47:24Z", "commit": {"oid": "84e91ed23193baa1d02e0066a9e2e7b34c57016f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4Nzg1MjQy", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/748#pullrequestreview-518785242", "createdAt": "2020-10-28T15:23:06Z", "commit": {"oid": "84e91ed23193baa1d02e0066a9e2e7b34c57016f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 539, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}