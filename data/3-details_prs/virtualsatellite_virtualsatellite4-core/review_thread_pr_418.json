{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMDY1NTM4", "number": 418, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMToxNDoxN1rODXfKaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMToxOTo0OFrODXfPuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTU0NDExOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/concepts/registry/ActiveConceptConfigurationElementTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMToxNDoxN1rOFczpnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMzozMzozMFrOFc2-Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc1MDY4NA==", "bodyText": "What about this commented out line?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/418#discussion_r365750684", "createdAt": "2020-01-13T11:14:17Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/concepts/registry/ActiveConceptConfigurationElementTest.java", "diffHunk": "@@ -107,14 +114,8 @@ public void testCreateAddActiveConceptCommand() {\n \t    Repository repository = DVLMFactory.eINSTANCE.createRepository();\r\n \t    resourceRepository.getContents().add(repository);\r\n \t    \r\n-\t\t// Adding Concept B before A will fail\r\n-\t\texpectedException.expect(RuntimeException.class);\r\n-\t\tCommand failCommand = ActiveConceptConfigurationElement.createCopyConceptToRepository(ourEditingDomain, conceptSourceB, repository);\r\n-\t\tfailCommand.execute();\r\n-\t\tassertTrue(\"ActiveConcepts are not present\", repository.getActiveConcepts().isEmpty());\r\n-\t\t\r\n \t\t// Concept A should be added without any trouble\r\n-\t\texpectedException = ExpectedException.none();\r\n+\t\t//expectedException = ExpectedException.none();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7872e3d35eb2c8b3a89c3322a4dff7abff5f9528"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTgwNTE0Ng==", "bodyText": "Has to be removed, it is now expected at the end of the test case.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/418#discussion_r365805146", "createdAt": "2020-01-13T13:33:30Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/concepts/registry/ActiveConceptConfigurationElementTest.java", "diffHunk": "@@ -107,14 +114,8 @@ public void testCreateAddActiveConceptCommand() {\n \t    Repository repository = DVLMFactory.eINSTANCE.createRepository();\r\n \t    resourceRepository.getContents().add(repository);\r\n \t    \r\n-\t\t// Adding Concept B before A will fail\r\n-\t\texpectedException.expect(RuntimeException.class);\r\n-\t\tCommand failCommand = ActiveConceptConfigurationElement.createCopyConceptToRepository(ourEditingDomain, conceptSourceB, repository);\r\n-\t\tfailCommand.execute();\r\n-\t\tassertTrue(\"ActiveConcepts are not present\", repository.getActiveConcepts().isEmpty());\r\n-\t\t\r\n \t\t// Concept A should be added without any trouble\r\n-\t\texpectedException = ExpectedException.none();\r\n+\t\t//expectedException = ExpectedException.none();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc1MDY4NA=="}, "originalCommit": {"oid": "7872e3d35eb2c8b3a89c3322a4dff7abff5f9528"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTU1NzcxOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model/src/de/dlr/sc/virsat/model/dvlm/concepts/util/ActiveConceptHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMToxOTo0OFrOFczx8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMToxOTo0OFrOFczx8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc1MjgxNw==", "bodyText": "Minor typo cleanedConcpetImport -> cleanedConceptImport", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/418#discussion_r365752817", "createdAt": "2020-01-13T11:19:48Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model/src/de/dlr/sc/virsat/model/dvlm/concepts/util/ActiveConceptHelper.java", "diffHunk": "@@ -572,4 +590,32 @@ public static final String getDmfNsUriForConcept(Concept concept) {\n \t\tString conceptName = VirSatEcoreUtil.getNameOfFqn(concept.getName());\r\n \t\treturn MODEL_URI_PREFIX + concept.getVersion() + \"/\" + VirSatEcoreUtil.getNameOfFqn(conceptName);\r\n \t}\r\n+\r\n+\t/**\r\n+\t * The method hands back the ConceptID of an Imported NameSpace. An\r\n+\t * Imported NameSpace always consists of the ConceptID + the ElemenID.\r\n+\t * E.G. de.dlr.testConcept.testCategory\r\n+\t * @param conceptImport The Import Object for importing the NameSpace\r\n+\t * @return the cleaned ID of the concept to be imported\r\n+\t */\r\n+\tpublic static String getConceptFromImport(ConceptImport conceptImport) {\r\n+\t\tString importedNameSpace = conceptImport.getImportedNamespace();\r\n+\t\tint lastIndexOfDot =  importedNameSpace.lastIndexOf(FQID_DELIMITER);\r\n+\t\tString importedConceptId = importedNameSpace.substring(0, lastIndexOfDot);\r\n+\t\treturn importedConceptId;\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * This method hands back the IDs of concepts which are imported\r\n+\t * @param concept the concept for which to get all imported concepts\r\n+\t * @return A set of Strings with all IDs\r\n+\t */\r\n+\tpublic static Set<String> getConceptDependencies(Concept concept) {\r\n+\t\tSet<String> importedConceptIds = new HashSet<>();\r\n+\t\tconcept.getImports().forEach(conceptImport -> {\r\n+\t\t\tString cleanedConcpetImport = getConceptFromImport(conceptImport);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7872e3d35eb2c8b3a89c3322a4dff7abff5f9528"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 652, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}