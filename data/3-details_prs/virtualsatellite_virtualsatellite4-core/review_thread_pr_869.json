{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwODUzNzAz", "number": 869, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMDowNTowNVrOFAIk8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDowNzo1NVrOFBy-dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Njg0ODQ5OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.extension.budget.cost.ui/src/de/dlr/sc/virsat/model/extension/budget/cost/ui/snippet/UiSnippetTableCostEquipment.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMDowNTowNVrOH-QZwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTowNDo0MlrOH-gysg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA0MjQ5Nw==", "bodyText": "Should moved to model code.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r535042497", "createdAt": "2020-12-03T10:05:05Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost.ui/src/de/dlr/sc/virsat/model/extension/budget/cost/ui/snippet/UiSnippetTableCostEquipment.java", "diffHunk": "@@ -23,4 +38,26 @@\n  * \n  */\n public class UiSnippetTableCostEquipment extends AUiSnippetTableCostEquipment {\n+\t@Override\n+\tprotected void createButtons(FormToolkit toolkit, EditingDomain editingDomain, Composite sectionBody) {\n+\t\t\n+\t\tsuper.createButtons(toolkit, editingDomain, sectionBody);\n+\t\tButton addCurrencyButton = toolkit.createButton(sectionBody, \"Add Currencies to Model\", SWT.PUSH);\n+\n+\t\taddCurrencyButton.addSelectionListener(new SelectionListener() {\n+\n+\t\t\t@Override\n+\t\t\tpublic void widgetSelected(SelectionEvent e) {\n+\t\t\t\t\n+\t\t\t\tVirSatTransactionalEditingDomain virSatEd = VirSatEditingDomainRegistry.INSTANCE.getEd(model);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "467faa0b3bbaab551b129839ee58716851f81e1e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA0NzAyMg==", "bodyText": "Right would be an improvement to move this code to a separate helper class in the model code plugin and just call it here.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r535047022", "createdAt": "2020-12-03T10:09:20Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost.ui/src/de/dlr/sc/virsat/model/extension/budget/cost/ui/snippet/UiSnippetTableCostEquipment.java", "diffHunk": "@@ -23,4 +38,26 @@\n  * \n  */\n public class UiSnippetTableCostEquipment extends AUiSnippetTableCostEquipment {\n+\t@Override\n+\tprotected void createButtons(FormToolkit toolkit, EditingDomain editingDomain, Composite sectionBody) {\n+\t\t\n+\t\tsuper.createButtons(toolkit, editingDomain, sectionBody);\n+\t\tButton addCurrencyButton = toolkit.createButton(sectionBody, \"Add Currencies to Model\", SWT.PUSH);\n+\n+\t\taddCurrencyButton.addSelectionListener(new SelectionListener() {\n+\n+\t\t\t@Override\n+\t\t\tpublic void widgetSelected(SelectionEvent e) {\n+\t\t\t\t\n+\t\t\t\tVirSatTransactionalEditingDomain virSatEd = VirSatEditingDomainRegistry.INSTANCE.getEd(model);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA0MjQ5Nw=="}, "originalCommit": {"oid": "467faa0b3bbaab551b129839ee58716851f81e1e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE0ODg0MA==", "bodyText": "Code outsourced in its own method (EuroUnitCreator).\nDuplicate code would now be eliminated by method calls.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r535148840", "createdAt": "2020-12-03T11:44:05Z", "author": {"login": "kempra"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost.ui/src/de/dlr/sc/virsat/model/extension/budget/cost/ui/snippet/UiSnippetTableCostEquipment.java", "diffHunk": "@@ -23,4 +38,26 @@\n  * \n  */\n public class UiSnippetTableCostEquipment extends AUiSnippetTableCostEquipment {\n+\t@Override\n+\tprotected void createButtons(FormToolkit toolkit, EditingDomain editingDomain, Composite sectionBody) {\n+\t\t\n+\t\tsuper.createButtons(toolkit, editingDomain, sectionBody);\n+\t\tButton addCurrencyButton = toolkit.createButton(sectionBody, \"Add Currencies to Model\", SWT.PUSH);\n+\n+\t\taddCurrencyButton.addSelectionListener(new SelectionListener() {\n+\n+\t\t\t@Override\n+\t\t\tpublic void widgetSelected(SelectionEvent e) {\n+\t\t\t\t\n+\t\t\t\tVirSatTransactionalEditingDomain virSatEd = VirSatEditingDomainRegistry.INSTANCE.getEd(model);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA0MjQ5Nw=="}, "originalCommit": {"oid": "467faa0b3bbaab551b129839ee58716851f81e1e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMxMTAyNg==", "bodyText": "Code outsourced in its own method (EuroUnitCreator).", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r535311026", "createdAt": "2020-12-03T15:04:42Z", "author": {"login": "kempra"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost.ui/src/de/dlr/sc/virsat/model/extension/budget/cost/ui/snippet/UiSnippetTableCostEquipment.java", "diffHunk": "@@ -23,4 +38,26 @@\n  * \n  */\n public class UiSnippetTableCostEquipment extends AUiSnippetTableCostEquipment {\n+\t@Override\n+\tprotected void createButtons(FormToolkit toolkit, EditingDomain editingDomain, Composite sectionBody) {\n+\t\t\n+\t\tsuper.createButtons(toolkit, editingDomain, sectionBody);\n+\t\tButton addCurrencyButton = toolkit.createButton(sectionBody, \"Add Currencies to Model\", SWT.PUSH);\n+\n+\t\taddCurrencyButton.addSelectionListener(new SelectionListener() {\n+\n+\t\t\t@Override\n+\t\t\tpublic void widgetSelected(SelectionEvent e) {\n+\t\t\t\t\n+\t\t\t\tVirSatTransactionalEditingDomain virSatEd = VirSatEditingDomainRegistry.INSTANCE.getEd(model);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA0MjQ5Nw=="}, "originalCommit": {"oid": "467faa0b3bbaab551b129839ee58716851f81e1e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Njg4MTA1OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.extension.budget.cost.ui/src/de/dlr/sc/virsat/model/extension/budget/cost/ui/snippet/UiSnippetTableCostSummary.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMDoxMDowN1rOH-QvGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMTo0NDoxNFrOH-W5wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA0Nzk2MA==", "bodyText": "Duplicate code, will go away when externalizing functionality into a spearate helper class", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r535047960", "createdAt": "2020-12-03T10:10:07Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost.ui/src/de/dlr/sc/virsat/model/extension/budget/cost/ui/snippet/UiSnippetTableCostSummary.java", "diffHunk": "@@ -23,4 +38,26 @@\n  * \n  */\n public class UiSnippetTableCostSummary extends AUiSnippetTableCostSummary {\n+\t@Override\n+\tprotected void createButtons(FormToolkit toolkit, EditingDomain editingDomain, Composite sectionBody) {\n+\t\t\n+\t\tsuper.createButtons(toolkit, editingDomain, sectionBody);\n+\t\tButton addCurrencyButton = toolkit.createButton(sectionBody, \"Add Currencies to Model\", SWT.PUSH);\n+\n+\t\taddCurrencyButton.addSelectionListener(new SelectionListener() {\n+\n+\t\t\t@Override\n+\t\t\tpublic void widgetSelected(SelectionEvent e) {\n+\t\t\t\t\n+\t\t\t\tVirSatTransactionalEditingDomain virSatEd = VirSatEditingDomainRegistry.INSTANCE.getEd(model);\n+\t\t\t\tList<SystemOfQuantities> systemOfQuantities = virSatEd.getResourceSet().getUnitManagement().getSystemOfUnit().getSystemOfQuantities();\n+\t\t\t\tAQuantityKind dimensionless = QudvUnitHelper.getInstance().getQuantityKindByName(systemOfQuantities.get(0), \"Dimensionless\");\n+\t\t\t\tQudvUnitHelper.getInstance().createSimpleUnit(\"Euro\", \"\u20ac\", \"European Economic and Monetary Union\", \" \", dimensionless);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "467faa0b3bbaab551b129839ee58716851f81e1e"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTE0ODk5Mw==", "bodyText": "Duplicate code would now be eliminated by method calls.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r535148993", "createdAt": "2020-12-03T11:44:14Z", "author": {"login": "kempra"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost.ui/src/de/dlr/sc/virsat/model/extension/budget/cost/ui/snippet/UiSnippetTableCostSummary.java", "diffHunk": "@@ -23,4 +38,26 @@\n  * \n  */\n public class UiSnippetTableCostSummary extends AUiSnippetTableCostSummary {\n+\t@Override\n+\tprotected void createButtons(FormToolkit toolkit, EditingDomain editingDomain, Composite sectionBody) {\n+\t\t\n+\t\tsuper.createButtons(toolkit, editingDomain, sectionBody);\n+\t\tButton addCurrencyButton = toolkit.createButton(sectionBody, \"Add Currencies to Model\", SWT.PUSH);\n+\n+\t\taddCurrencyButton.addSelectionListener(new SelectionListener() {\n+\n+\t\t\t@Override\n+\t\t\tpublic void widgetSelected(SelectionEvent e) {\n+\t\t\t\t\n+\t\t\t\tVirSatTransactionalEditingDomain virSatEd = VirSatEditingDomainRegistry.INSTANCE.getEd(model);\n+\t\t\t\tList<SystemOfQuantities> systemOfQuantities = virSatEd.getResourceSet().getUnitManagement().getSystemOfUnit().getSystemOfQuantities();\n+\t\t\t\tAQuantityKind dimensionless = QudvUnitHelper.getInstance().getQuantityKindByName(systemOfQuantities.get(0), \"Dimensionless\");\n+\t\t\t\tQudvUnitHelper.getInstance().createSimpleUnit(\"Euro\", \"\u20ac\", \"European Economic and Monetary Union\", \" \", dimensionless);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTA0Nzk2MA=="}, "originalCommit": {"oid": "467faa0b3bbaab551b129839ee58716851f81e1e"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODUxNjg1OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.extension.budget.cost/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo1ODoxNlrOH-ga9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNToyMDo0OVrOH-hnEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMwNDk1MA==", "bodyText": "Superfluous whitespace.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r535304950", "createdAt": "2020-12-03T14:58:16Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreator.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.extension.budget.cost.unit;\n+\n+import java.util.List;\n+\n+import org.eclipse.emf.common.command.Command;\n+\n+import de.dlr.sc.virsat.model.dvlm.qudv.AQuantityKind;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SimpleUnit;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SystemOfQuantities;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvModelCommandFactory;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvUnitHelper;\n+import de.dlr.sc.virsat.model.dvlm.units.UnitManagement;\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\n+\n+public class EuroUnitCreator {\n+\t\n+\tprivate VirSatTransactionalEditingDomain virSatEd;\n+\t\n+\tpublic EuroUnitCreator(VirSatTransactionalEditingDomain virSatEd) {\n+\t\tthis.virSatEd = virSatEd;\n+\t}\n+\t/**\n+\t * The addEuro Method create the Unit (Euro) and put the Unit in the Unit-Management \n+\t */\n+\tpublic void addEuro() {\n+\t\t", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "613a97967ea3947ee689fc107105e1c2c97a4d68"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMyNDQzMg==", "bodyText": "Fixed.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r535324432", "createdAt": "2020-12-03T15:20:49Z", "author": {"login": "kempra"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreator.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.extension.budget.cost.unit;\n+\n+import java.util.List;\n+\n+import org.eclipse.emf.common.command.Command;\n+\n+import de.dlr.sc.virsat.model.dvlm.qudv.AQuantityKind;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SimpleUnit;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SystemOfQuantities;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvModelCommandFactory;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvUnitHelper;\n+import de.dlr.sc.virsat.model.dvlm.units.UnitManagement;\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\n+\n+public class EuroUnitCreator {\n+\t\n+\tprivate VirSatTransactionalEditingDomain virSatEd;\n+\t\n+\tpublic EuroUnitCreator(VirSatTransactionalEditingDomain virSatEd) {\n+\t\tthis.virSatEd = virSatEd;\n+\t}\n+\t/**\n+\t * The addEuro Method create the Unit (Euro) and put the Unit in the Unit-Management \n+\t */\n+\tpublic void addEuro() {\n+\t\t", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMwNDk1MA=="}, "originalCommit": {"oid": "613a97967ea3947ee689fc107105e1c2c97a4d68"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODUyNzQyOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.extension.budget.cost/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNDo1OTozMlrOH-ggyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNToyMToxM1rOH-hoUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMwNjQ0MA==", "bodyText": "Is it really safe to have the special character euro in here?\nIt would probably be safer to use appropriate unicode https://eurosymbol.eu/ascii-code", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r535306440", "createdAt": "2020-12-03T14:59:32Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreator.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.extension.budget.cost.unit;\n+\n+import java.util.List;\n+\n+import org.eclipse.emf.common.command.Command;\n+\n+import de.dlr.sc.virsat.model.dvlm.qudv.AQuantityKind;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SimpleUnit;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SystemOfQuantities;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvModelCommandFactory;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvUnitHelper;\n+import de.dlr.sc.virsat.model.dvlm.units.UnitManagement;\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\n+\n+public class EuroUnitCreator {\n+\t\n+\tprivate VirSatTransactionalEditingDomain virSatEd;\n+\t\n+\tpublic EuroUnitCreator(VirSatTransactionalEditingDomain virSatEd) {\n+\t\tthis.virSatEd = virSatEd;\n+\t}\n+\t/**\n+\t * The addEuro Method create the Unit (Euro) and put the Unit in the Unit-Management \n+\t */\n+\tpublic void addEuro() {\n+\t\t\n+\t\tUnitManagement unitManagement = virSatEd.getResourceSet().getUnitManagement();\n+\t\tList<SystemOfQuantities> systemOfQuantities = unitManagement.getSystemOfUnit().getSystemOfQuantities();\n+\t\tAQuantityKind dimensionless = QudvUnitHelper.getInstance().getQuantityKindByName(systemOfQuantities.get(0), \"Dimensionless\");\n+\t\tSimpleUnit euro = QudvUnitHelper.getInstance().createSimpleUnit(\"Euro\", \"\u20ac\", \"European Economic and Monetary Union\", \" \", dimensionless);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "613a97967ea3947ee689fc107105e1c2c97a4d68"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMyNDc1NA==", "bodyText": "Fixed.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r535324754", "createdAt": "2020-12-03T15:21:13Z", "author": {"login": "kempra"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreator.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.extension.budget.cost.unit;\n+\n+import java.util.List;\n+\n+import org.eclipse.emf.common.command.Command;\n+\n+import de.dlr.sc.virsat.model.dvlm.qudv.AQuantityKind;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SimpleUnit;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SystemOfQuantities;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvModelCommandFactory;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvUnitHelper;\n+import de.dlr.sc.virsat.model.dvlm.units.UnitManagement;\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\n+\n+public class EuroUnitCreator {\n+\t\n+\tprivate VirSatTransactionalEditingDomain virSatEd;\n+\t\n+\tpublic EuroUnitCreator(VirSatTransactionalEditingDomain virSatEd) {\n+\t\tthis.virSatEd = virSatEd;\n+\t}\n+\t/**\n+\t * The addEuro Method create the Unit (Euro) and put the Unit in the Unit-Management \n+\t */\n+\tpublic void addEuro() {\n+\t\t\n+\t\tUnitManagement unitManagement = virSatEd.getResourceSet().getUnitManagement();\n+\t\tList<SystemOfQuantities> systemOfQuantities = unitManagement.getSystemOfUnit().getSystemOfQuantities();\n+\t\tAQuantityKind dimensionless = QudvUnitHelper.getInstance().getQuantityKindByName(systemOfQuantities.get(0), \"Dimensionless\");\n+\t\tSimpleUnit euro = QudvUnitHelper.getInstance().createSimpleUnit(\"Euro\", \"\u20ac\", \"European Economic and Monetary Union\", \" \", dimensionless);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMwNjQ0MA=="}, "originalCommit": {"oid": "613a97967ea3947ee689fc107105e1c2c97a4d68"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzU3ODEyOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.extension.budget.cost/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjoyMzo0MVrOH_On2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMjo1MzoxMlrOH_Poww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA2MTkxMg==", "bodyText": "Would be nice to move the unicode into a constant static variable so the reader knows what this is suppsoed to be.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r536061912", "createdAt": "2020-12-04T12:23:41Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreator.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.extension.budget.cost.unit;\n+\n+import java.util.List;\n+\n+import org.eclipse.emf.common.command.Command;\n+\n+import de.dlr.sc.virsat.model.dvlm.qudv.AQuantityKind;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SimpleUnit;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SystemOfQuantities;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvModelCommandFactory;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvUnitHelper;\n+import de.dlr.sc.virsat.model.dvlm.units.UnitManagement;\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\n+\n+public class EuroUnitCreator {\n+\t\n+\tprivate VirSatTransactionalEditingDomain virSatEd;\n+\t\n+\tpublic EuroUnitCreator(VirSatTransactionalEditingDomain virSatEd) {\n+\t\tthis.virSatEd = virSatEd;\n+\t}\n+\t/**\n+\t * The addEuro Method create the Unit (Euro) and put the Unit in the Unit-Management \n+\t */\n+\tpublic void addEuro() {\n+\t\tUnitManagement unitManagement = virSatEd.getResourceSet().getUnitManagement();\n+\t\tList<SystemOfQuantities> systemOfQuantities = unitManagement.getSystemOfUnit().getSystemOfQuantities();\n+\t\tAQuantityKind dimensionless = QudvUnitHelper.getInstance().getQuantityKindByName(systemOfQuantities.get(0), \"Dimensionless\");\n+\t\tSimpleUnit euro = QudvUnitHelper.getInstance().createSimpleUnit(\"Euro\",\n+\t\t\t\t\"\\u20AC\", \"European Economic and Monetary Union\", \" \", dimensionless);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11a04b590c9cd8fef9118ae7b159eb1dd5c35ee0"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA3ODUzMQ==", "bodyText": "Fixed.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r536078531", "createdAt": "2020-12-04T12:53:12Z", "author": {"login": "kempra"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreator.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.extension.budget.cost.unit;\n+\n+import java.util.List;\n+\n+import org.eclipse.emf.common.command.Command;\n+\n+import de.dlr.sc.virsat.model.dvlm.qudv.AQuantityKind;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SimpleUnit;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SystemOfQuantities;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvModelCommandFactory;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvUnitHelper;\n+import de.dlr.sc.virsat.model.dvlm.units.UnitManagement;\n+import de.dlr.sc.virsat.project.editingDomain.VirSatTransactionalEditingDomain;\n+\n+public class EuroUnitCreator {\n+\t\n+\tprivate VirSatTransactionalEditingDomain virSatEd;\n+\t\n+\tpublic EuroUnitCreator(VirSatTransactionalEditingDomain virSatEd) {\n+\t\tthis.virSatEd = virSatEd;\n+\t}\n+\t/**\n+\t * The addEuro Method create the Unit (Euro) and put the Unit in the Unit-Management \n+\t */\n+\tpublic void addEuro() {\n+\t\tUnitManagement unitManagement = virSatEd.getResourceSet().getUnitManagement();\n+\t\tList<SystemOfQuantities> systemOfQuantities = unitManagement.getSystemOfUnit().getSystemOfQuantities();\n+\t\tAQuantityKind dimensionless = QudvUnitHelper.getInstance().getQuantityKindByName(systemOfQuantities.get(0), \"Dimensionless\");\n+\t\tSimpleUnit euro = QudvUnitHelper.getInstance().createSimpleUnit(\"Euro\",\n+\t\t\t\t\"\\u20AC\", \"European Economic and Monetary Union\", \" \", dimensionless);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA2MTkxMg=="}, "originalCommit": {"oid": "11a04b590c9cd8fef9118ae7b159eb1dd5c35ee0"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MzkwNDU1OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.extension.budget.cost.test/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreatorTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzo0NDo0OVrOH_RgpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOToyMTo1N1rOIAdLOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEwOTIyMQ==", "bodyText": "We could make the constant in EuroUnitCreator public, then we could use it here as well.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r536109221", "createdAt": "2020-12-04T13:44:49Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost.test/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreatorTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.extension.budget.cost.unit;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+import org.eclipse.core.runtime.CoreException;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.dvlm.qudv.AUnit;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SystemOfUnits;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvUnitHelper;\n+import de.dlr.sc.virsat.project.test.AProjectTestCase;\n+\n+public class EuroUnitCreatorTest extends AProjectTestCase {\n+\n+\t@Override\n+\tpublic void setUp() throws CoreException {\n+\t\tsuper.setUp();\n+\t\taddEditingDomainAndRepository();\n+\t}\n+\n+\t@Test\n+\tpublic void testAddEuro() {\n+\t\tSystemOfUnits systemOfUnits = editingDomain.getResourceSet().getUnitManagement().getSystemOfUnit();\n+\t\t// Check is the Unit (Euro) in the Unit-Management\n+\t\tAUnit euro = QudvUnitHelper.getInstance().getUnitByName(systemOfUnits, \"Euro\");\n+\t\t// assertNull because the Unit is NOT in the Unit-Management\n+\t\tassertNull(\"Euro initially dosent exist\", euro);\n+\n+\t\t// Creates the Euro with all Specifications\n+\t\tEuroUnitCreator euroCreator = new EuroUnitCreator(editingDomain);\n+\t\teuroCreator.addEuro();\n+\n+\t\t// Update the Variable (euro)\n+\t\teuro = QudvUnitHelper.getInstance().getUnitByName(systemOfUnits, \"Euro\");\n+\n+\t\t// assertNotNull because the Unit is in the Unit-Management\n+\t\tassertNotNull(\"Euro  is exist\", euro);\n+\t\tassertEquals(\"\\u20AC\", euro.getSymbol());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2989370baec35ff30dfe7a9bbffb523eada6ea2c"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjExODQ5NA==", "bodyText": "Fixed.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r536118494", "createdAt": "2020-12-04T13:59:11Z", "author": {"login": "kempra"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost.test/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreatorTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.extension.budget.cost.unit;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+import org.eclipse.core.runtime.CoreException;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.dvlm.qudv.AUnit;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SystemOfUnits;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvUnitHelper;\n+import de.dlr.sc.virsat.project.test.AProjectTestCase;\n+\n+public class EuroUnitCreatorTest extends AProjectTestCase {\n+\n+\t@Override\n+\tpublic void setUp() throws CoreException {\n+\t\tsuper.setUp();\n+\t\taddEditingDomainAndRepository();\n+\t}\n+\n+\t@Test\n+\tpublic void testAddEuro() {\n+\t\tSystemOfUnits systemOfUnits = editingDomain.getResourceSet().getUnitManagement().getSystemOfUnit();\n+\t\t// Check is the Unit (Euro) in the Unit-Management\n+\t\tAUnit euro = QudvUnitHelper.getInstance().getUnitByName(systemOfUnits, \"Euro\");\n+\t\t// assertNull because the Unit is NOT in the Unit-Management\n+\t\tassertNull(\"Euro initially dosent exist\", euro);\n+\n+\t\t// Creates the Euro with all Specifications\n+\t\tEuroUnitCreator euroCreator = new EuroUnitCreator(editingDomain);\n+\t\teuroCreator.addEuro();\n+\n+\t\t// Update the Variable (euro)\n+\t\teuro = QudvUnitHelper.getInstance().getUnitByName(systemOfUnits, \"Euro\");\n+\n+\t\t// assertNotNull because the Unit is in the Unit-Management\n+\t\tassertNotNull(\"Euro  is exist\", euro);\n+\t\tassertEquals(\"\\u20AC\", euro.getSymbol());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEwOTIyMQ=="}, "originalCommit": {"oid": "2989370baec35ff30dfe7a9bbffb523eada6ea2c"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE1OTc1OQ==", "bodyText": "I dont see the public constant being used here.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r536159759", "createdAt": "2020-12-04T14:59:16Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost.test/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreatorTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.extension.budget.cost.unit;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+import org.eclipse.core.runtime.CoreException;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.dvlm.qudv.AUnit;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SystemOfUnits;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvUnitHelper;\n+import de.dlr.sc.virsat.project.test.AProjectTestCase;\n+\n+public class EuroUnitCreatorTest extends AProjectTestCase {\n+\n+\t@Override\n+\tpublic void setUp() throws CoreException {\n+\t\tsuper.setUp();\n+\t\taddEditingDomainAndRepository();\n+\t}\n+\n+\t@Test\n+\tpublic void testAddEuro() {\n+\t\tSystemOfUnits systemOfUnits = editingDomain.getResourceSet().getUnitManagement().getSystemOfUnit();\n+\t\t// Check is the Unit (Euro) in the Unit-Management\n+\t\tAUnit euro = QudvUnitHelper.getInstance().getUnitByName(systemOfUnits, \"Euro\");\n+\t\t// assertNull because the Unit is NOT in the Unit-Management\n+\t\tassertNull(\"Euro initially dosent exist\", euro);\n+\n+\t\t// Creates the Euro with all Specifications\n+\t\tEuroUnitCreator euroCreator = new EuroUnitCreator(editingDomain);\n+\t\teuroCreator.addEuro();\n+\n+\t\t// Update the Variable (euro)\n+\t\teuro = QudvUnitHelper.getInstance().getUnitByName(systemOfUnits, \"Euro\");\n+\n+\t\t// assertNotNull because the Unit is in the Unit-Management\n+\t\tassertNotNull(\"Euro  is exist\", euro);\n+\t\tassertEquals(\"\\u20AC\", euro.getSymbol());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEwOTIyMQ=="}, "originalCommit": {"oid": "2989370baec35ff30dfe7a9bbffb523eada6ea2c"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM0ODkyMg==", "bodyText": "Fixed.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r537348922", "createdAt": "2020-12-07T09:21:57Z", "author": {"login": "kempra"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost.test/src/de/dlr/sc/virsat/model/extension/budget/cost/unit/EuroUnitCreatorTest.java", "diffHunk": "@@ -0,0 +1,54 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.extension.budget.cost.unit;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertNull;\n+\n+import org.eclipse.core.runtime.CoreException;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.dvlm.qudv.AUnit;\n+import de.dlr.sc.virsat.model.dvlm.qudv.SystemOfUnits;\n+import de.dlr.sc.virsat.model.dvlm.qudv.util.QudvUnitHelper;\n+import de.dlr.sc.virsat.project.test.AProjectTestCase;\n+\n+public class EuroUnitCreatorTest extends AProjectTestCase {\n+\n+\t@Override\n+\tpublic void setUp() throws CoreException {\n+\t\tsuper.setUp();\n+\t\taddEditingDomainAndRepository();\n+\t}\n+\n+\t@Test\n+\tpublic void testAddEuro() {\n+\t\tSystemOfUnits systemOfUnits = editingDomain.getResourceSet().getUnitManagement().getSystemOfUnit();\n+\t\t// Check is the Unit (Euro) in the Unit-Management\n+\t\tAUnit euro = QudvUnitHelper.getInstance().getUnitByName(systemOfUnits, \"Euro\");\n+\t\t// assertNull because the Unit is NOT in the Unit-Management\n+\t\tassertNull(\"Euro initially dosent exist\", euro);\n+\n+\t\t// Creates the Euro with all Specifications\n+\t\tEuroUnitCreator euroCreator = new EuroUnitCreator(editingDomain);\n+\t\teuroCreator.addEuro();\n+\n+\t\t// Update the Variable (euro)\n+\t\teuro = QudvUnitHelper.getInstance().getUnitByName(systemOfUnits, \"Euro\");\n+\n+\t\t// assertNotNull because the Unit is in the Unit-Management\n+\t\tassertNotNull(\"Euro  is exist\", euro);\n+\t\tassertEquals(\"\\u20AC\", euro.getSymbol());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjEwOTIyMQ=="}, "originalCommit": {"oid": "2989370baec35ff30dfe7a9bbffb523eada6ea2c"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDI4MDg2OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.extension.budget.cost.test/src/de/dlr/sc/virsat/model/extension/budget/cost/test/AllTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNDowNzo1NVrOIAoaIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjozNjo0NFrOICSfAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUzMjk2Mg==", "bodyText": "Indentation coulkd be fixed", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r537532962", "createdAt": "2020-12-07T14:07:55Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost.test/src/de/dlr/sc/virsat/model/extension/budget/cost/test/AllTests.java", "diffHunk": "@@ -25,7 +26,7 @@\n  */\n @RunWith(Suite.class)\n \n-@SuiteClasses({\t\t\n+@SuiteClasses({\t\tEuroUnitCreatorTest.class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c1ff442f766577a65a6cd10638ce563a6530d72"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI3MDkxNQ==", "bodyText": "Fixed.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/869#discussion_r539270915", "createdAt": "2020-12-09T12:36:44Z", "author": {"login": "kempra"}, "path": "de.dlr.sc.virsat.model.extension.budget.cost.test/src/de/dlr/sc/virsat/model/extension/budget/cost/test/AllTests.java", "diffHunk": "@@ -25,7 +26,7 @@\n  */\n @RunWith(Suite.class)\n \n-@SuiteClasses({\t\t\n+@SuiteClasses({\t\tEuroUnitCreatorTest.class", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzUzMjk2Mg=="}, "originalCommit": {"oid": "8c1ff442f766577a65a6cd10638ce563a6530d72"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 523, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}