{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwODY4NTEw", "number": 870, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwNzo0Njo0NFrOFP4n5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwNzo0Njo0NFrOFP4n5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUyMjAwNjc5OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/auth/filter/CorsFilter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwNzo0Njo0NFrOIVdIJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwOTo0Njo1MFrOIVhTEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTM2ODIzMA==", "bodyText": "What is the purpose of the comment here?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/870#discussion_r559368230", "createdAt": "2021-01-18T07:46:44Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/auth/filter/CorsFilter.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.server.auth.filter;\n+\n+import java.io.IOException;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerRequestFilter;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.container.PreMatching;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.jetty.http.HttpMethod;\n+\n+/**\n+ * A filter that handles CORS requests\n+ */\n+@PreMatching\n+public class CorsFilter implements ContainerRequestFilter, ContainerResponseFilter {\n+\n+\tpublic static final String AC_ALLOW_CREDENTIALS = \"Access-Control-Allow-Credentials\";\n+\tpublic static final String AC_ALLOW_METHODS = \"Access-Control-Allow-Methods\";\n+\tpublic static final String AC_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";\n+\tpublic static final String AC_ALLOW_ORIGIN = \"Access-Control-Allow-Origin\";\n+\t\n+\tpublic static final String AC_ALLOWED_CREDENTIALS = \"true\";\n+\tpublic static final String AC_ALLOWED_METHODS = \"GET, POST, PUT, DELETE, OPTIONS, HEAD\";\n+\tpublic static final String AC_ALLOWED_HEADERS = \"\"; //\"X-Requested-With, Authorization, Accept-Version, Content-MD5, CSRF-Token, Content-Type\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52fcccfba908e95797e404f9920ef15899b1134d"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQzNjU2MA==", "bodyText": "Ok so these are headers that we possible could/need to support at some point. I don't know if it's actually smart to leave them there or if we should delete them for now. I have no strong opinion on it.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/870#discussion_r559436560", "createdAt": "2021-01-18T09:46:50Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.server/src/de/dlr/sc/virsat/server/auth/filter/CorsFilter.java", "diffHunk": "@@ -0,0 +1,78 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.server.auth.filter;\n+\n+import java.io.IOException;\n+\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.ContainerRequestFilter;\n+import javax.ws.rs.container.ContainerResponseContext;\n+import javax.ws.rs.container.ContainerResponseFilter;\n+import javax.ws.rs.container.PreMatching;\n+import javax.ws.rs.core.Response;\n+\n+import org.eclipse.jetty.http.HttpMethod;\n+\n+/**\n+ * A filter that handles CORS requests\n+ */\n+@PreMatching\n+public class CorsFilter implements ContainerRequestFilter, ContainerResponseFilter {\n+\n+\tpublic static final String AC_ALLOW_CREDENTIALS = \"Access-Control-Allow-Credentials\";\n+\tpublic static final String AC_ALLOW_METHODS = \"Access-Control-Allow-Methods\";\n+\tpublic static final String AC_ALLOW_HEADERS = \"Access-Control-Allow-Headers\";\n+\tpublic static final String AC_ALLOW_ORIGIN = \"Access-Control-Allow-Origin\";\n+\t\n+\tpublic static final String AC_ALLOWED_CREDENTIALS = \"true\";\n+\tpublic static final String AC_ALLOWED_METHODS = \"GET, POST, PUT, DELETE, OPTIONS, HEAD\";\n+\tpublic static final String AC_ALLOWED_HEADERS = \"\"; //\"X-Requested-With, Authorization, Accept-Version, Content-MD5, CSRF-Token, Content-Type\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTM2ODIzMA=="}, "originalCommit": {"oid": "52fcccfba908e95797e404f9920ef15899b1134d"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 525, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}