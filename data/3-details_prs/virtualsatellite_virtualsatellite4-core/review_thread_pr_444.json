{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NTc1NDE4", "number": 444, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjo0Nzo0OVrODa8pkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjo0Nzo0OVrODa8pkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTgzMjQ4OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.uiengine.ui/src/de/dlr/sc/virsat/uiengine/ui/swt/forms/VirSatMouseWheelScrollRedirectListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjo0Nzo0OVrOFiJw4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNjo0Nzo0OVrOFiJw4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM1NTg3NA==", "bodyText": "Shall we maybe put this directly in the constructor or is there any benefit in taking parent initialisation in a separate method?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/444#discussion_r371355874", "createdAt": "2020-01-27T16:47:49Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.uiengine.ui/src/de/dlr/sc/virsat/uiengine/ui/swt/forms/VirSatMouseWheelScrollRedirectListener.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*******************************************************************************\r\n+ * Copyright (c) 2008-2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\r\n+ *\r\n+ * This program and the accompanying materials are made available under the\r\n+ * terms of the Eclipse Public License 2.0 which is available at\r\n+ * http://www.eclipse.org/legal/epl-2.0.\r\n+ *\r\n+ * SPDX-License-Identifier: EPL-2.0\r\n+ *******************************************************************************/\r\n+package de.dlr.sc.virsat.uiengine.ui.swt.forms;\r\n+\r\n+import org.eclipse.swt.events.MouseEvent;\r\n+import org.eclipse.swt.events.MouseWheelListener;\r\n+import org.eclipse.swt.graphics.Point;\r\n+import org.eclipse.swt.widgets.Control;\r\n+import org.eclipse.swt.widgets.ScrollBar;\r\n+import org.eclipse.swt.widgets.Scrollable;\r\n+import org.eclipse.ui.forms.widgets.ScrolledForm;\r\n+\r\n+/**\r\n+ * This class implements an SWT mouse wheel listener.\r\n+ * It redirects scroll actions of a scrollable widget to the\r\n+ * parent ScrolledForm in case the table or tree has been scrolled \r\n+ * to one its ends. \r\n+ *\r\n+ */\r\n+public class VirSatMouseWheelScrollRedirectListener implements MouseWheelListener {\r\n+\r\n+\tprivate Scrollable scrollable;\r\n+\tprivate ScrollBar redirectScrollBar;\r\n+\tprivate ScrolledForm redirectScrolledForm;\r\n+\t\r\n+\t/**\r\n+\t * Constructor that takes the scrollable for which to find the ScrolledForm\r\n+\t * @param scrollable A scrolable such as a tree or table.\r\n+\t */\r\n+\tpublic VirSatMouseWheelScrollRedirectListener(Scrollable scrollable) {\r\n+\t\tthis.scrollable = scrollable;\r\n+\t}\r\n+\t\r\n+\t/**\r\n+\t * Call this to initialize the Listener.\r\n+\t * Calling this method tries to identify the ScrolledForm as well as the ScrollBar\r\n+\t */\r\n+\tpublic void init() {\r\n+\t\tthis.redirectScrolledForm = findNextParentScrolledForm(scrollable);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c97d0121a62080120d8942e41784f06362664db"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 668, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}