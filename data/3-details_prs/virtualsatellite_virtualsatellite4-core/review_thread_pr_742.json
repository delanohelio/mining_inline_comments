{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NTE4NzUw", "number": 742, "reviewThreads": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMToyMDoxMVrOEqRdUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMDoyMzozMVrOEwLbjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzYxNjgzOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMToyMDoxMVrOHcYiqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOToyMDoxMFrOHeVgug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNDI2NQ==", "bodyText": "Why do we need the prop order? I thought the XmlID tag makes the structuralElementInstance property first in line?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r499524265", "createdAt": "2020-10-05T11:20:11Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -38,6 +52,10 @@\n  * @author fisc_ph\r\n  *\r\n  */\r\n+@XmlAccessorType(XmlAccessType.NONE)\r\n+@XmlRootElement\r\n+// Ensure that the sei (by uuid) gets unmarshalled first\r\n+@XmlType(propOrder = {\"structuralElementInstance\", \"name\", \"parentSeiBean\", \"categoryAssignments\", \"children\", \"superSeis\"})\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cac87caf321fd9ea3f775272878fe736680a7745"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDA4MTQwNQ==", "bodyText": "Good question, I know for a fact that it doesn't work if I delete that line atm. But I will investigate it.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r500081405", "createdAt": "2020-10-06T08:04:10Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -38,6 +52,10 @@\n  * @author fisc_ph\r\n  *\r\n  */\r\n+@XmlAccessorType(XmlAccessType.NONE)\r\n+@XmlRootElement\r\n+// Ensure that the sei (by uuid) gets unmarshalled first\r\n+@XmlType(propOrder = {\"structuralElementInstance\", \"name\", \"parentSeiBean\", \"categoryAssignments\", \"children\", \"superSeis\"})\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNDI2NQ=="}, "originalCommit": {"oid": "cac87caf321fd9ea3f775272878fe736680a7745"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTAzMTU2OA==", "bodyText": "Ok so I looked into it and the documentation says nothing about changing the order if using @XmlID, instead it can be used together with @XmlIDREF to model reference and containment.\nSo for testing I uncommented the Annotation in ABeanObject and it didn't have any effect. The reason that it gets unmarshalled first in ABeanObject actually is the naming of the method: \"getATypeInstance\" which is handled as \"aTypeInstance\" field and so is first alphabetically ordered. So we could either rename the method or use the propOrder (for which all properties have to be listed). FYI: the only available order are alphabetically or unordered, so this won't help either.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r501031568", "createdAt": "2020-10-07T13:54:14Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -38,6 +52,10 @@\n  * @author fisc_ph\r\n  *\r\n  */\r\n+@XmlAccessorType(XmlAccessType.NONE)\r\n+@XmlRootElement\r\n+// Ensure that the sei (by uuid) gets unmarshalled first\r\n+@XmlType(propOrder = {\"structuralElementInstance\", \"name\", \"parentSeiBean\", \"categoryAssignments\", \"children\", \"superSeis\"})\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNDI2NQ=="}, "originalCommit": {"oid": "cac87caf321fd9ea3f775272878fe736680a7745"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MTc3MA==", "bodyText": "So i removed the @XmlID annotations", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r501571770", "createdAt": "2020-10-08T09:20:10Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -38,6 +52,10 @@\n  * @author fisc_ph\r\n  *\r\n  */\r\n+@XmlAccessorType(XmlAccessType.NONE)\r\n+@XmlRootElement\r\n+// Ensure that the sei (by uuid) gets unmarshalled first\r\n+@XmlType(propOrder = {\"structuralElementInstance\", \"name\", \"parentSeiBean\", \"categoryAssignments\", \"children\", \"superSeis\"})\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNDI2NQ=="}, "originalCommit": {"oid": "cac87caf321fd9ea3f775272878fe736680a7745"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzYzNzQzOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMToyNTo1OFrOHcYusQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDowMzowN1rOHk0lwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNzM0NQ==", "bodyText": "There seems to be some inconsistency between using the abstract classes and the generic classes.\nE.g. the getChildren uses the abstract class for seis and the getCategoryAssignments uses the generic class.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r499527345", "createdAt": "2020-10-05T11:25:58Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -109,6 +131,34 @@ public Command remove(EditingDomain ed, IBeanCategoryAssignment bca) {\n \t\treturn bcaHelper.getAllBeanCategories(sei, catBeanClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cac87caf321fd9ea3f775272878fe736680a7745"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MTk2Mg==", "bodyText": "I added comments, why we do this", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r501571962", "createdAt": "2020-10-08T09:20:28Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -109,6 +131,34 @@ public Command remove(EditingDomain ed, IBeanCategoryAssignment bca) {\n \t\treturn bcaHelper.getAllBeanCategories(sei, catBeanClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNzM0NQ=="}, "originalCommit": {"oid": "cac87caf321fd9ea3f775272878fe736680a7745"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3MjQxNg==", "bodyText": "I don't see the comments.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508372416", "createdAt": "2020-10-20T10:03:07Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -109,6 +131,34 @@ public Command remove(EditingDomain ed, IBeanCategoryAssignment bca) {\n \t\treturn bcaHelper.getAllBeanCategories(sei, catBeanClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyNzM0NQ=="}, "originalCommit": {"oid": "cac87caf321fd9ea3f775272878fe736680a7745"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzY0MjkzOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMToyNzoyMVrOHcYxsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOToyMDozOFrOHeVh3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyODExNA==", "bodyText": "Maybe just getParent / setParent ?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r499528114", "createdAt": "2020-10-05T11:27:21Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -191,6 +283,8 @@ public String getUuid() {\n \t}\r\n \r\n \t@Override\r\n+\t@XmlElement(name = \"parent\")\r\n+\t@XmlJavaTypeAdapter(ABeanStructuralElementInstanceAdapter.class)\r\n \tpublic BeanStructuralElementInstance getParentSeiBean() {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cac87caf321fd9ea3f775272878fe736680a7745"}, "originalPosition": 165}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MjA2Mg==", "bodyText": "Yes I renamed it", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r501572062", "createdAt": "2020-10-08T09:20:38Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -191,6 +283,8 @@ public String getUuid() {\n \t}\r\n \r\n \t@Override\r\n+\t@XmlElement(name = \"parent\")\r\n+\t@XmlJavaTypeAdapter(ABeanStructuralElementInstanceAdapter.class)\r\n \tpublic BeanStructuralElementInstance getParentSeiBean() {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyODExNA=="}, "originalCommit": {"oid": "cac87caf321fd9ea3f775272878fe736680a7745"}, "originalPosition": 165}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzY0NzkwOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/IBeanStructuralElementInstance.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMToyODozN1rOHcY0dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOToyMDo1N1rOHeVikg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyODgyMg==", "bodyText": "Using the abstract bean class in the interface declaration seems weird to me... Maybe we can consistently use the IBeanStructuralElementInstance everywhere?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r499528822", "createdAt": "2020-10-05T11:28:37Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/IBeanStructuralElementInstance.java", "diffHunk": "@@ -104,6 +105,18 @@\n \t */\r\n \t<SEI_TYPE extends IBeanStructuralElementInstance> List<SEI_TYPE> getChildren(Class<SEI_TYPE> beanSeiClazz);\r\n \t\r\n+\t/**\r\n+\t * This method hands back all child Bean wrapped StructuralElementInstances of the abstract type ABeanStructuralElementInstance\r\n+\t * @return all children which could be found in the current Bean SEI\r\n+\t */\r\n+\tList<ABeanStructuralElementInstance> getChildren();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cac87caf321fd9ea3f775272878fe736680a7745"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MjI0Mg==", "bodyText": "As we talked about, we can't easily", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r501572242", "createdAt": "2020-10-08T09:20:57Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/IBeanStructuralElementInstance.java", "diffHunk": "@@ -104,6 +105,18 @@\n \t */\r\n \t<SEI_TYPE extends IBeanStructuralElementInstance> List<SEI_TYPE> getChildren(Class<SEI_TYPE> beanSeiClazz);\r\n \t\r\n+\t/**\r\n+\t * This method hands back all child Bean wrapped StructuralElementInstances of the abstract type ABeanStructuralElementInstance\r\n+\t * @return all children which could be found in the current Bean SEI\r\n+\t */\r\n+\tList<ABeanStructuralElementInstance> getChildren();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyODgyMg=="}, "originalCommit": {"oid": "cac87caf321fd9ea3f775272878fe736680a7745"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzY1MDE0OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMToyOToxNlrOHcY1tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwOToyMToyOVrOHeVj9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyOTE0Mg==", "bodyText": "WTF since when are there inline codecov warnings :D:D:D:D\nSo apprantly this is not tested.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r499529142", "createdAt": "2020-10-05T11:29:16Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.dvlm.json;\n+\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+\n+import de.dlr.sc.virsat.model.concept.types.structural.ABeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.concept.types.structural.BeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\n+\n+/**\n+ * Adapter for a referenced ABeanStructuralElementInstance from/to a UUID\n+ * that uses the IUuidAdapter\n+ */\n+public class ABeanStructuralElementInstanceAdapter extends XmlAdapter<String, ABeanStructuralElementInstance> {\n+\n+\tprivate ResourceSet resourceSet;\n+\t\n+\tpublic ABeanStructuralElementInstanceAdapter() { };\n+\t\n+\tpublic ABeanStructuralElementInstanceAdapter(ResourceSet resourceSet) {\n+\t\tthis.resourceSet = resourceSet;\n+\t}\n+\t\n+\t@Override\n+\tpublic String marshal(ABeanStructuralElementInstance v) throws Exception {\n+\t\tif (v == null) {\n+\t\t\treturn null;\n+\t\t} else {\n+\t\t\treturn v.getUuid();\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic ABeanStructuralElementInstance unmarshal(String uuid) throws Exception {\n+\t\tif (resourceSet == null) {\n+\t\t\tthrow new NullPointerException(\"No resource set for unmarshalling set in the adapter\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cac87caf321fd9ea3f775272878fe736680a7745"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU3MjU5Nw==", "bodyText": "Thats cool, should be tested now", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r501572597", "createdAt": "2020-10-08T09:21:29Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.dvlm.json;\n+\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+\n+import de.dlr.sc.virsat.model.concept.types.structural.ABeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.concept.types.structural.BeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\n+\n+/**\n+ * Adapter for a referenced ABeanStructuralElementInstance from/to a UUID\n+ * that uses the IUuidAdapter\n+ */\n+public class ABeanStructuralElementInstanceAdapter extends XmlAdapter<String, ABeanStructuralElementInstance> {\n+\n+\tprivate ResourceSet resourceSet;\n+\t\n+\tpublic ABeanStructuralElementInstanceAdapter() { };\n+\t\n+\tpublic ABeanStructuralElementInstanceAdapter(ResourceSet resourceSet) {\n+\t\tthis.resourceSet = resourceSet;\n+\t}\n+\t\n+\t@Override\n+\tpublic String marshal(ABeanStructuralElementInstance v) throws Exception {\n+\t\tif (v == null) {\n+\t\t\treturn null;\n+\t\t} else {\n+\t\t\treturn v.getUuid();\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic ABeanStructuralElementInstance unmarshal(String uuid) throws Exception {\n+\t\tif (resourceSet == null) {\n+\t\t\tthrow new NullPointerException(\"No resource set for unmarshalling set in the adapter\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTUyOTE0Mg=="}, "originalCommit": {"oid": "cac87caf321fd9ea3f775272878fe736680a7745"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDQ2NzUwOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo1MzoyNlrOHk0M7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTowOToxMFrOHk3BQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NjA2MQ==", "bodyText": "Please wwrite some comment to mention what the intention of the test is.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508366061", "createdAt": "2020-10-20T09:53:26Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java", "diffHunk": "@@ -13,32 +13,25 @@\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertThrows;\n \n-import org.eclipse.emf.ecore.resource.Resource;\n-import org.eclipse.emf.ecore.resource.ResourceSet;\n-import org.eclipse.emf.ecore.resource.impl.ResourceImpl;\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+\n import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;\n import org.junit.Before;\n-import org.junit.Test;\n \n import de.dlr.sc.virsat.model.concept.types.ABeanObject;\n import de.dlr.sc.virsat.model.concept.types.property.BeanPropertyString;\n import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.PropertydefinitionsFactory;\n import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.PropertyinstancesFactory;\n import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ValuePropertyInstance;\n-import de.dlr.sc.virsat.model.dvlm.types.impl.VirSatUuid;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQxMjIyNw==", "bodyText": "Sure", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508412227", "createdAt": "2020-10-20T11:09:10Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java", "diffHunk": "@@ -13,32 +13,25 @@\n import static org.junit.Assert.assertNull;\n import static org.junit.Assert.assertThrows;\n \n-import org.eclipse.emf.ecore.resource.Resource;\n-import org.eclipse.emf.ecore.resource.ResourceSet;\n-import org.eclipse.emf.ecore.resource.impl.ResourceImpl;\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+\n import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;\n import org.junit.Before;\n-import org.junit.Test;\n \n import de.dlr.sc.virsat.model.concept.types.ABeanObject;\n import de.dlr.sc.virsat.model.concept.types.property.BeanPropertyString;\n import de.dlr.sc.virsat.model.dvlm.categories.propertydefinitions.PropertydefinitionsFactory;\n import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.PropertyinstancesFactory;\n import de.dlr.sc.virsat.model.dvlm.categories.propertyinstances.ValuePropertyInstance;\n-import de.dlr.sc.virsat.model.dvlm.types.impl.VirSatUuid;\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NjA2MQ=="}, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDQ3NTM0OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo1NToxMFrOHk0Rlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMToxNDoyMlrOHk3NbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NzI1NA==", "bodyText": "They are the same because they are compared by their internal type instance?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508367254", "createdAt": "2020-10-20T09:55:10Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java", "diffHunk": "@@ -47,43 +40,53 @@ public void setUp() throws Exception {\n \t\t\n \t\tbean = new BeanPropertyString(vpi);\n \t\t\n-\t\tadapter = new ABeanObjectAdapter(resourceSet);\n+\t\tadapter = new ABeanObjectAdapter(resourceSet);\t\t\n \t}\n-\n-\t@Test\n-\tpublic void testMarshalABeanObject() throws Exception {\n-\t\tString uuid = adapter.marshal(null);\n+\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+\t@Override\n+\tpublic void testMarshallNull() throws Exception {\n+\t\tString uuid = ((XmlAdapter<String, ABeanObject>) adapter).marshal(null);\n \t\tassertNull(\"No bean returns null\", uuid);\n-\t\t\n-\t\tuuid = adapter.marshal(bean);\n+\t}\n+\n+\t@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+\t@Override\n+\tpublic void testMarhall() throws Exception {\n+\t\tString uuid = ((XmlAdapter<String, ABeanObject>) adapter).marshal(bean);\n \t\tassertEquals(\"The right uuid was returned\", UUID.toString(), uuid);\n \t\t\n \t\tvpi.setUuid(null);\n \t\tassertThrows(\"The type instance should have a uuid\",\n \t\t\tNullPointerException.class, () -> {\n-\t\t\t\tadapter.marshal(bean);\n+\t\t\t\t((XmlAdapter<String, ABeanObject>) adapter).marshal(bean);\n \t\t\t}\n \t\t);\n+\t\t\n+\t}\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\t@Override\n+\tpublic void testUnmarhall() throws Exception {\n+\t\t@SuppressWarnings(\"rawtypes\")\n+\t\tABeanObject unmarshalledBean = ((XmlAdapter<String, ABeanObject>) adapter).unmarshal(UUID.toString());\n+\t\tassertEquals(\"The right bean was returned\", bean, (BeanPropertyString) unmarshalledBean);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQxNTM0MQ==", "bodyText": "Yes indeed", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508415341", "createdAt": "2020-10-20T11:14:22Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java", "diffHunk": "@@ -47,43 +40,53 @@ public void setUp() throws Exception {\n \t\t\n \t\tbean = new BeanPropertyString(vpi);\n \t\t\n-\t\tadapter = new ABeanObjectAdapter(resourceSet);\n+\t\tadapter = new ABeanObjectAdapter(resourceSet);\t\t\n \t}\n-\n-\t@Test\n-\tpublic void testMarshalABeanObject() throws Exception {\n-\t\tString uuid = adapter.marshal(null);\n+\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+\t@Override\n+\tpublic void testMarshallNull() throws Exception {\n+\t\tString uuid = ((XmlAdapter<String, ABeanObject>) adapter).marshal(null);\n \t\tassertNull(\"No bean returns null\", uuid);\n-\t\t\n-\t\tuuid = adapter.marshal(bean);\n+\t}\n+\n+\t@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+\t@Override\n+\tpublic void testMarhall() throws Exception {\n+\t\tString uuid = ((XmlAdapter<String, ABeanObject>) adapter).marshal(bean);\n \t\tassertEquals(\"The right uuid was returned\", UUID.toString(), uuid);\n \t\t\n \t\tvpi.setUuid(null);\n \t\tassertThrows(\"The type instance should have a uuid\",\n \t\t\tNullPointerException.class, () -> {\n-\t\t\t\tadapter.marshal(bean);\n+\t\t\t\t((XmlAdapter<String, ABeanObject>) adapter).marshal(bean);\n \t\t\t}\n \t\t);\n+\t\t\n+\t}\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\t@Override\n+\tpublic void testUnmarhall() throws Exception {\n+\t\t@SuppressWarnings(\"rawtypes\")\n+\t\tABeanObject unmarshalledBean = ((XmlAdapter<String, ABeanObject>) adapter).unmarshal(UUID.toString());\n+\t\tassertEquals(\"The right bean was returned\", bean, (BeanPropertyString) unmarshalledBean);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NzI1NA=="}, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDQ3NzY0OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTo1NTo0NlrOHk0TFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMToxNzowOVrOHk3TxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NzYzOA==", "bodyText": "What does the adapterNoRs stand for?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508367638", "createdAt": "2020-10-20T09:55:46Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java", "diffHunk": "@@ -47,43 +40,53 @@ public void setUp() throws Exception {\n \t\t\n \t\tbean = new BeanPropertyString(vpi);\n \t\t\n-\t\tadapter = new ABeanObjectAdapter(resourceSet);\n+\t\tadapter = new ABeanObjectAdapter(resourceSet);\t\t\n \t}\n-\n-\t@Test\n-\tpublic void testMarshalABeanObject() throws Exception {\n-\t\tString uuid = adapter.marshal(null);\n+\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+\t@Override\n+\tpublic void testMarshallNull() throws Exception {\n+\t\tString uuid = ((XmlAdapter<String, ABeanObject>) adapter).marshal(null);\n \t\tassertNull(\"No bean returns null\", uuid);\n-\t\t\n-\t\tuuid = adapter.marshal(bean);\n+\t}\n+\n+\t@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+\t@Override\n+\tpublic void testMarhall() throws Exception {\n+\t\tString uuid = ((XmlAdapter<String, ABeanObject>) adapter).marshal(bean);\n \t\tassertEquals(\"The right uuid was returned\", UUID.toString(), uuid);\n \t\t\n \t\tvpi.setUuid(null);\n \t\tassertThrows(\"The type instance should have a uuid\",\n \t\t\tNullPointerException.class, () -> {\n-\t\t\t\tadapter.marshal(bean);\n+\t\t\t\t((XmlAdapter<String, ABeanObject>) adapter).marshal(bean);\n \t\t\t}\n \t\t);\n+\t\t\n+\t}\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\t@Override\n+\tpublic void testUnmarhall() throws Exception {\n+\t\t@SuppressWarnings(\"rawtypes\")\n+\t\tABeanObject unmarshalledBean = ((XmlAdapter<String, ABeanObject>) adapter).unmarshal(UUID.toString());\n+\t\tassertEquals(\"The right bean was returned\", bean, (BeanPropertyString) unmarshalledBean);\n \t}\n \t\n-\t@Test\n-\tpublic void testUnmarshalString() throws Exception {\n-\t\tTypeInstanceAdapter adapterNoRs = new TypeInstanceAdapter();\n-\t\tassertThrows(\"A resource set should be set\",\n-\t\t\tNullPointerException.class, () -> {\n-\t\t\t\tadapterNoRs.unmarshal(null);\n-\t\t\t}\n-\t\t);\n-\t\t\n+\t@Override\n+\tpublic void testUnmarshallNull() {\n+\t\tadapterNoRs = new ABeanObjectAdapter();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQxNjk2NQ==", "bodyText": "It means an adapter that is initilized without a resource set. I will rename it to adapterWithoutResourceSet to make it clear", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508416965", "createdAt": "2020-10-20T11:17:09Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/ABeanObjectAdapterTest.java", "diffHunk": "@@ -47,43 +40,53 @@ public void setUp() throws Exception {\n \t\t\n \t\tbean = new BeanPropertyString(vpi);\n \t\t\n-\t\tadapter = new ABeanObjectAdapter(resourceSet);\n+\t\tadapter = new ABeanObjectAdapter(resourceSet);\t\t\n \t}\n-\n-\t@Test\n-\tpublic void testMarshalABeanObject() throws Exception {\n-\t\tString uuid = adapter.marshal(null);\n+\t@SuppressWarnings({ \"rawtypes\", \"unchecked\" })\n+\t@Override\n+\tpublic void testMarshallNull() throws Exception {\n+\t\tString uuid = ((XmlAdapter<String, ABeanObject>) adapter).marshal(null);\n \t\tassertNull(\"No bean returns null\", uuid);\n-\t\t\n-\t\tuuid = adapter.marshal(bean);\n+\t}\n+\n+\t@SuppressWarnings({ \"unchecked\", \"rawtypes\" })\n+\t@Override\n+\tpublic void testMarhall() throws Exception {\n+\t\tString uuid = ((XmlAdapter<String, ABeanObject>) adapter).marshal(bean);\n \t\tassertEquals(\"The right uuid was returned\", UUID.toString(), uuid);\n \t\t\n \t\tvpi.setUuid(null);\n \t\tassertThrows(\"The type instance should have a uuid\",\n \t\t\tNullPointerException.class, () -> {\n-\t\t\t\tadapter.marshal(bean);\n+\t\t\t\t((XmlAdapter<String, ABeanObject>) adapter).marshal(bean);\n \t\t\t}\n \t\t);\n+\t\t\n+\t}\n+\n+\t@SuppressWarnings(\"unchecked\")\n+\t@Override\n+\tpublic void testUnmarhall() throws Exception {\n+\t\t@SuppressWarnings(\"rawtypes\")\n+\t\tABeanObject unmarshalledBean = ((XmlAdapter<String, ABeanObject>) adapter).unmarshal(UUID.toString());\n+\t\tassertEquals(\"The right bean was returned\", bean, (BeanPropertyString) unmarshalledBean);\n \t}\n \t\n-\t@Test\n-\tpublic void testUnmarshalString() throws Exception {\n-\t\tTypeInstanceAdapter adapterNoRs = new TypeInstanceAdapter();\n-\t\tassertThrows(\"A resource set should be set\",\n-\t\t\tNullPointerException.class, () -> {\n-\t\t\t\tadapterNoRs.unmarshal(null);\n-\t\t\t}\n-\t\t);\n-\t\t\n+\t@Override\n+\tpublic void testUnmarshallNull() {\n+\t\tadapterNoRs = new ABeanObjectAdapter();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM2NzYzOA=="}, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDQ5NjU0OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/AUuidAdapterTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDowMDoxMlrOHk0evA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMToxNzoyN1rOHk3UUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3MDYyMA==", "bodyText": "Rs NoRs stands for Adapter with ResourceSet and Adapter without?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508370620", "createdAt": "2020-10-20T10:00:12Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/AUuidAdapterTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.dvlm.json;\n+\n+import static org.junit.Assert.assertThrows;\n+\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+\n+import org.eclipse.emf.ecore.resource.Resource;\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+import org.eclipse.emf.ecore.resource.impl.ResourceImpl;\n+import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.dvlm.types.impl.VirSatUuid;\n+\n+public abstract class AUuidAdapterTest {\n+\n+\tprotected XmlAdapter<?, ?> adapter;\n+\tprotected static final VirSatUuid UUID = new VirSatUuid();\n+\tprotected Resource resourceImpl;\n+\tprotected ResourceSet resourceSet;\n+\tprotected XmlAdapter<?, ?> adapterNoRs;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQxNzEwNg==", "bodyText": "See above", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508417106", "createdAt": "2020-10-20T11:17:27Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit.test/src/de/dlr/sc/virsat/model/dvlm/json/AUuidAdapterTest.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.dvlm.json;\n+\n+import static org.junit.Assert.assertThrows;\n+\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+\n+import org.eclipse.emf.ecore.resource.Resource;\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+import org.eclipse.emf.ecore.resource.impl.ResourceImpl;\n+import org.eclipse.emf.ecore.resource.impl.ResourceSetImpl;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.model.dvlm.types.impl.VirSatUuid;\n+\n+public abstract class AUuidAdapterTest {\n+\n+\tprotected XmlAdapter<?, ?> adapter;\n+\tprotected static final VirSatUuid UUID = new VirSatUuid();\n+\tprotected Resource resourceImpl;\n+\tprotected ResourceSet resourceSet;\n+\tprotected XmlAdapter<?, ?> adapterNoRs;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3MDYyMA=="}, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDUxNzI2OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDowNToyOFrOHk0rtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODozODoxNVrOHlgqsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3Mzk0MA==", "bodyText": "We should be aware, that the list we are handing back, does not allow to directly add a CA to the SEI, since it is realy just a pure List of CAs. I think it is ok in case that we are clear on the API contract.\nDo we want to have it like this, since operations such as Bean.getCategoryAssignments().add(CA) will not add a CA to the Bean.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508373940", "createdAt": "2020-10-20T10:05:28Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -109,6 +129,34 @@ public Command remove(EditingDomain ed, IBeanCategoryAssignment bca) {\n \t\treturn bcaHelper.getAllBeanCategories(sei, catBeanClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\r\n+\t\tArrayList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\r\n+\t\t\r\n+\t\tfor (CategoryAssignment ca : sei.getCategoryAssignments()) {\r\n+\t\t\tBeanCategoryAssignment bean = new BeanCategoryAssignment();\r\n+\t\t\tbean.setTypeInstance(ca);\r\n+\t\t\tbeans.add(bean);\r\n+\t\t}\r\n+\t\t\r\n+\t\treturn beans;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4MDEyMg==", "bodyText": "After discussion with @SaMuellerDLR we think the returned list should be wrapped to an unmodifiable collection if posible. This would be in line with the contract of all the other metods to get all CAs which are internalley calling the BeanStructuralElementInstanceHelper.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508380122", "createdAt": "2020-10-20T10:15:18Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -109,6 +129,34 @@ public Command remove(EditingDomain ed, IBeanCategoryAssignment bca) {\n \t\treturn bcaHelper.getAllBeanCategories(sei, catBeanClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\r\n+\t\tArrayList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\r\n+\t\t\r\n+\t\tfor (CategoryAssignment ca : sei.getCategoryAssignments()) {\r\n+\t\t\tBeanCategoryAssignment bean = new BeanCategoryAssignment();\r\n+\t\t\tbean.setTypeInstance(ca);\r\n+\t\t\tbeans.add(bean);\r\n+\t\t}\r\n+\t\t\r\n+\t\treturn beans;\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3Mzk0MA=="}, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQzMzgwNQ==", "bodyText": "That makes sense I will wrapp it into an unmodifiable collection\nOk so I looked into it and I saw that I also had to break the contract in the other getters (cast the unmodifiable list to an array list). The reason is the following: When unmarshalling JAXB internally calls the getter and then calls add to the list. This doesn't work if the list is unmodifiable. I actually don't see a way to unmarshall these lists without breaking the contract. I think I also had some discussion with @SaMuellerDLR in which we didn't find a solution.\nThis JAXB behavior has already caused a lot problems and the current solution only works because the underlying EList ignore duplicates.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508433805", "createdAt": "2020-10-20T11:47:33Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -109,6 +129,34 @@ public Command remove(EditingDomain ed, IBeanCategoryAssignment bca) {\n \t\treturn bcaHelper.getAllBeanCategories(sei, catBeanClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\r\n+\t\tArrayList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\r\n+\t\t\r\n+\t\tfor (CategoryAssignment ca : sei.getCategoryAssignments()) {\r\n+\t\t\tBeanCategoryAssignment bean = new BeanCategoryAssignment();\r\n+\t\t\tbean.setTypeInstance(ca);\r\n+\t\t\tbeans.add(bean);\r\n+\t\t}\r\n+\t\t\r\n+\t\treturn beans;\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3Mzk0MA=="}, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA5NDU3OQ==", "bodyText": "Now JAXB doesn't use the functions of the interface, but instead some private functions shadowing the behavior. This way the original functions can return unmodifiable lists.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r509094579", "createdAt": "2020-10-21T08:38:15Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -109,6 +129,34 @@ public Command remove(EditingDomain ed, IBeanCategoryAssignment bca) {\n \t\treturn bcaHelper.getAllBeanCategories(sei, catBeanClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\r\n+\t\tArrayList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\r\n+\t\t\r\n+\t\tfor (CategoryAssignment ca : sei.getCategoryAssignments()) {\r\n+\t\t\tBeanCategoryAssignment bean = new BeanCategoryAssignment();\r\n+\t\t\tbean.setTypeInstance(ca);\r\n+\t\t\tbeans.add(bean);\r\n+\t\t}\r\n+\t\t\r\n+\t\treturn beans;\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3Mzk0MA=="}, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDU5MDE0OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoyNDo0NFrOHk1Z0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTozMjozNFrOHk31Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4NTc0NQ==", "bodyText": "Is it neccessary to use EList, would List work as well?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508385745", "createdAt": "2020-10-20T10:24:44Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -131,6 +179,27 @@ public void remove(IBeanStructuralElementInstance bsei) {\n \t\treturn bseiHelper.getAllSubBeanSeis(sei, beanSeiClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<ABeanStructuralElementInstance> getChildren() {\r\n+\t\tBeanStructuralElementInstanceHelper bseiHelper = new BeanStructuralElementInstanceHelper();\r\n+\t\treturn new ArrayList<ABeanStructuralElementInstance>(bseiHelper.getAllSubBeanSeis(sei, ABeanStructuralElementInstance.class));\r\n+\t}\r\n+\t\r\n+\t@Override\r\n+\t@XmlElement\r\n+\tpublic void setChildren(List<ABeanStructuralElementInstance> newBeanSeis) {\r\n+\t\tEList<StructuralElementInstance> currentChildren = sei.getChildren();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQyNTU1OA==", "bodyText": "I will change it to List", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508425558", "createdAt": "2020-10-20T11:32:34Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -131,6 +179,27 @@ public void remove(IBeanStructuralElementInstance bsei) {\n \t\treturn bseiHelper.getAllSubBeanSeis(sei, beanSeiClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<ABeanStructuralElementInstance> getChildren() {\r\n+\t\tBeanStructuralElementInstanceHelper bseiHelper = new BeanStructuralElementInstanceHelper();\r\n+\t\treturn new ArrayList<ABeanStructuralElementInstance>(bseiHelper.getAllSubBeanSeis(sei, ABeanStructuralElementInstance.class));\r\n+\t}\r\n+\t\r\n+\t@Override\r\n+\t@XmlElement\r\n+\tpublic void setChildren(List<ABeanStructuralElementInstance> newBeanSeis) {\r\n+\t\tEList<StructuralElementInstance> currentChildren = sei.getChildren();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4NTc0NQ=="}, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDYwMjk1OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoyODoxMlrOHk1h7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTo0NjozNFrOHk4Tcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4NzgyMQ==", "bodyText": "Isn't it possible to directly use the BeanCategoryAssignmentHelper by calling getAllBeanCategories(sei, ABeanCategoryAssignment.class) here?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508387821", "createdAt": "2020-10-20T10:28:12Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -109,6 +129,34 @@ public Command remove(EditingDomain ed, IBeanCategoryAssignment bca) {\n \t\treturn bcaHelper.getAllBeanCategories(sei, catBeanClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\r\n+\t\tArrayList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\r\n+\t\t\r\n+\t\tfor (CategoryAssignment ca : sei.getCategoryAssignments()) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQzMzI2Ng==", "bodyText": "I don't see the advantage, because we use BeanCategoryAssignment here and not ABeanCategoryAssignment. Or do you want to change the contract to ABeanCategoryAssignment? If I remember correctly we use BeanCategoryAssignment  because there were some problems in the set method when using the abstract class instead.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508433266", "createdAt": "2020-10-20T11:46:34Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -109,6 +129,34 @@ public Command remove(EditingDomain ed, IBeanCategoryAssignment bca) {\n \t\treturn bcaHelper.getAllBeanCategories(sei, catBeanClazz);\r\n \t}\r\n \t\r\n+\t@Override\r\n+\tpublic List<BeanCategoryAssignment> getCategoryAssignments() {\r\n+\t\tArrayList<BeanCategoryAssignment> beans = new ArrayList<BeanCategoryAssignment>();\r\n+\t\t\r\n+\t\tfor (CategoryAssignment ca : sei.getCategoryAssignments()) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4NzgyMQ=="}, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDYwMzk2OnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoyODozMFrOHk1ilQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMTozMjozOVrOHk31hA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4Nzk4OQ==", "bodyText": "Is EList realy needed?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508387989", "createdAt": "2020-10-20T10:28:30Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -173,6 +242,27 @@ public void removeSuperSei(IBeanStructuralElementInstance bsei) {\n \t\treturn bseiHelper.getSuperBeanSeis(sei, beanSeiClazz);\r\n \t}\r\n \r\n+    @Override\r\n+ \tpublic List<ABeanStructuralElementInstance> getSuperSeis() {\r\n+ \t\tBeanStructuralElementInstanceHelper bseiHelper = new BeanStructuralElementInstanceHelper();\r\n+ \t\treturn new ArrayList<ABeanStructuralElementInstance>(bseiHelper.getSuperBeanSeis(sei, ABeanStructuralElementInstance.class));\r\n+ \t}\r\n+ \t\r\n+    @Override\r\n+ \t@XmlElement\r\n+ \tpublic void setSuperSeis(List<ABeanStructuralElementInstance> newBeanSeis) {\r\n+ \t\tEList<StructuralElementInstance> currentSuperSeis = sei.getSuperSeis();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQyNTYwNA==", "bodyText": "I will change it to List", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508425604", "createdAt": "2020-10-20T11:32:39Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/structural/ABeanStructuralElementInstance.java", "diffHunk": "@@ -173,6 +242,27 @@ public void removeSuperSei(IBeanStructuralElementInstance bsei) {\n \t\treturn bseiHelper.getSuperBeanSeis(sei, beanSeiClazz);\r\n \t}\r\n \r\n+    @Override\r\n+ \tpublic List<ABeanStructuralElementInstance> getSuperSeis() {\r\n+ \t\tBeanStructuralElementInstanceHelper bseiHelper = new BeanStructuralElementInstanceHelper();\r\n+ \t\treturn new ArrayList<ABeanStructuralElementInstance>(bseiHelper.getSuperBeanSeis(sei, ABeanStructuralElementInstance.class));\r\n+ \t}\r\n+ \t\r\n+    @Override\r\n+ \t@XmlElement\r\n+ \tpublic void setSuperSeis(List<ABeanStructuralElementInstance> newBeanSeis) {\r\n+ \t\tEList<StructuralElementInstance> currentSuperSeis = sei.getSuperSeis();\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4Nzk4OQ=="}, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDYxOTAyOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDozMjo0MFrOHk1sJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMToyNDoxOVrOHk3i8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM5MDQzNw==", "bodyText": "SInce it is instantiating the IUuidAdadapter the null check on the resourceSet above could be removed, it will be done in the IUuidAdapter anyway, doesn't it?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508390437", "createdAt": "2020-10-20T10:32:40Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.dvlm.json;\n+\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+\n+import de.dlr.sc.virsat.model.concept.types.structural.ABeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.concept.types.structural.BeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\n+\n+/**\n+ * Adapter for a referenced ABeanStructuralElementInstance from/to a UUID\n+ * that uses the IUuidAdapter\n+ */\n+public class ABeanStructuralElementInstanceAdapter extends XmlAdapter<String, ABeanStructuralElementInstance> {\n+\n+\tprivate ResourceSet resourceSet;\n+\t\n+\tpublic ABeanStructuralElementInstanceAdapter() { };\n+\t\n+\tpublic ABeanStructuralElementInstanceAdapter(ResourceSet resourceSet) {\n+\t\tthis.resourceSet = resourceSet;\n+\t}\n+\t\n+\t@Override\n+\tpublic String marshal(ABeanStructuralElementInstance v) throws Exception {\n+\t\tif (v == null) {\n+\t\t\treturn null;\n+\t\t} else {\n+\t\t\treturn v.getUuid();\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic ABeanStructuralElementInstance unmarshal(String uuid) throws Exception {\n+\t\tif (resourceSet == null) {\n+\t\t\tthrow new NullPointerException(\"No resource set for unmarshalling set in the adapter\");\n+\t\t}\n+\t\t\n+\t\t// Get the sei from the uuid\n+\t\tIUuidAdapter typeInstanceAdapter = new IUuidAdapter(resourceSet);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQyMDg1MQ==", "bodyText": "You are right, i will also remove it in ABeanObjectAdapter", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r508420851", "createdAt": "2020-10-20T11:24:19Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/dvlm/json/ABeanStructuralElementInstanceAdapter.java", "diffHunk": "@@ -0,0 +1,56 @@\n+/*******************************************************************************\n+ * Copyright (c) 2020 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.model.dvlm.json;\n+\n+import javax.xml.bind.annotation.adapters.XmlAdapter;\n+\n+import org.eclipse.emf.ecore.resource.ResourceSet;\n+\n+import de.dlr.sc.virsat.model.concept.types.structural.ABeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.concept.types.structural.BeanStructuralElementInstance;\n+import de.dlr.sc.virsat.model.dvlm.structural.StructuralElementInstance;\n+\n+/**\n+ * Adapter for a referenced ABeanStructuralElementInstance from/to a UUID\n+ * that uses the IUuidAdapter\n+ */\n+public class ABeanStructuralElementInstanceAdapter extends XmlAdapter<String, ABeanStructuralElementInstance> {\n+\n+\tprivate ResourceSet resourceSet;\n+\t\n+\tpublic ABeanStructuralElementInstanceAdapter() { };\n+\t\n+\tpublic ABeanStructuralElementInstanceAdapter(ResourceSet resourceSet) {\n+\t\tthis.resourceSet = resourceSet;\n+\t}\n+\t\n+\t@Override\n+\tpublic String marshal(ABeanStructuralElementInstance v) throws Exception {\n+\t\tif (v == null) {\n+\t\t\treturn null;\n+\t\t} else {\n+\t\t\treturn v.getUuid();\n+\t\t}\n+\t}\n+\t\n+\t@Override\n+\tpublic ABeanStructuralElementInstance unmarshal(String uuid) throws Exception {\n+\t\tif (resourceSet == null) {\n+\t\t\tthrow new NullPointerException(\"No resource set for unmarshalling set in the adapter\");\n+\t\t}\n+\t\t\n+\t\t// Get the sei from the uuid\n+\t\tIUuidAdapter typeInstanceAdapter = new IUuidAdapter(resourceSet);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM5MDQzNw=="}, "originalCommit": {"oid": "8e57cdf6d00537efc237ccdbdfde5fefd88e6f57"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4OTU0MzgyOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/util/BeanCategoryAssignmentHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMDoyMzozMVrOHlk6sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxMDoyMzozMVrOHlk6sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTE2NDIwOQ==", "bodyText": "Please provide a test case for this refactored method.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/742#discussion_r509164209", "createdAt": "2020-10-21T10:23:31Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.model.edit/src/de/dlr/sc/virsat/model/concept/types/util/BeanCategoryAssignmentHelper.java", "diffHunk": "@@ -118,6 +119,23 @@\n \t\treturn Collections.unmodifiableList(caBeans);\r\n \t}\r\n \t\r\n+\t/**\r\n+\t * Call this method to hand back the CategoryAssignment wrapped in a BeanCategoryAssignment\r\n+\t * @param caContainer The container where the Category Assignments reside. Usually a StructuralElementInstance\r\n+\t * @return a List of CategoryAssignments which are wrapped into the generic BeanCategoryAssignment\r\n+\t */\r\n+\tpublic List<BeanCategoryAssignment> getAllBeanCategories(ICategoryAssignmentContainer caContainer) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3ee162f7d05090e1b70824e0a0fef2846395c3b"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 615, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}