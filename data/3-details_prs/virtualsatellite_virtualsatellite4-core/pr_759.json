{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NjI2NzE1", "number": 759, "title": "Added PowerSummaryTest - (Task #746)", "bodyText": "Created a power summary above two power equipments in a configuration tree. Compared the\nexpected values with test values.\nAdded PowerSummaryTest to AllTests\n\ncloses #746: SWTBot Test Cases for Power Summary", "createdAt": "2020-10-06T15:13:43Z", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759", "merged": true, "mergeCommit": {"oid": "4bb96a9b19590bf2f953bb763cc0b8232778c139"}, "closed": true, "closedAt": "2020-10-09T11:50:57Z", "author": {"login": "Anna-Lena-DLR"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdP5bM8AH2gAyNDk4NjI2NzE1OjhhMzk0YjhiMzNmNDk1ZjZkNzE3NTBiNjE4NzY1NmY4YWE2MjE1ZDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQz9tTgFqTUwNTU2NjczMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8a394b8b33f495f6d71750b6187656f8aa6215d8", "author": {"user": {"login": "Anna-Lena-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8a394b8b33f495f6d71750b6187656f8aa6215d8", "committedDate": "2020-10-06T14:40:24Z", "message": "Added PowerSummaryTest - (Task #746)\n\nCreated a Power Summary above two Power Equipments. Compared the\nexpected values with test values.\nAdded PowerSummaryTest to AllTests\n\n---\nTask #746: SWTBot Test Cases for Power Summary"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNTk0NzIx", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#pullrequestreview-503594721", "createdAt": "2020-10-07T07:28:55Z", "commit": {"oid": "8a394b8b33f495f6d71750b6187656f8aa6215d8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNzoyODo1NVrOHdmEMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwNzozMzozN1rOHdmOiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NDQxNw==", "bodyText": "We also had to a new concept in another test case and decided to add it in ASwtBotTestCase instead of the concrete test case. Not sure if it makes sense for this concept, because I don't know if there are other UseCases we could run SWT tests for with this concept.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500794417", "createdAt": "2020-10-07T07:28:55Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a394b8b33f495f6d71750b6187656f8aa6215d8"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NTc0Mw==", "bodyText": "Can we remove the empty Strings?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500795743", "createdAt": "2020-10-07T07:31:12Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n+\t\t\n+\t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n+\n+\t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n+\n+\t\telementConfiguration1 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration1, \"AOCS\");\n+\t\t\n+\t\tpowerEquipment1 = addElement(PowerEquipment.class, conceptPower, elementConfiguration1);\n+\t\topenEditor(powerEquipment1);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, AOCS_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, AOCS_DUTYCYCLE + \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a394b8b33f495f6d71750b6187656f8aa6215d8"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NTkyNg==", "bodyText": "Also remove empty Strings", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500795926", "createdAt": "2020-10-07T07:31:34Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n+\t\t\n+\t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n+\n+\t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n+\n+\t\telementConfiguration1 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration1, \"AOCS\");\n+\t\t\n+\t\tpowerEquipment1 = addElement(PowerEquipment.class, conceptPower, elementConfiguration1);\n+\t\topenEditor(powerEquipment1);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, AOCS_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, AOCS_DUTYCYCLE + \"\");\n+\n+\t\telementConfiguration2 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration2, \"DataHandling\");\n+\t\t\n+\t\tpowerEquipment2 = addElement(PowerEquipment.class, conceptPower, elementConfiguration2);\n+\t\topenEditor(powerEquipment2);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a394b8b33f495f6d71750b6187656f8aa6215d8"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5Njk0Nw==", "bodyText": "I think we have a save function in ASwtBotTestCase we could call instead?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500796947", "createdAt": "2020-10-07T07:33:26Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n+\t\t\n+\t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n+\n+\t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n+\n+\t\telementConfiguration1 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration1, \"AOCS\");\n+\t\t\n+\t\tpowerEquipment1 = addElement(PowerEquipment.class, conceptPower, elementConfiguration1);\n+\t\topenEditor(powerEquipment1);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, AOCS_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, AOCS_DUTYCYCLE + \"\");\n+\n+\t\telementConfiguration2 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration2, \"DataHandling\");\n+\t\t\n+\t\tpowerEquipment2 = addElement(PowerEquipment.class, conceptPower, elementConfiguration2);\n+\t\topenEditor(powerEquipment2);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");\n+\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a394b8b33f495f6d71750b6187656f8aa6215d8"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NzA2Nw==", "bodyText": "Same as above", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r500797067", "createdAt": "2020-10-07T07:33:37Z", "author": {"login": "JAmmermann-DLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n+\t\t\n+\t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n+\n+\t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n+\n+\t\telementConfiguration1 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration1, \"AOCS\");\n+\t\t\n+\t\tpowerEquipment1 = addElement(PowerEquipment.class, conceptPower, elementConfiguration1);\n+\t\topenEditor(powerEquipment1);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, AOCS_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, AOCS_DUTYCYCLE + \"\");\n+\n+\t\telementConfiguration2 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration2, \"DataHandling\");\n+\t\t\n+\t\tpowerEquipment2 = addElement(PowerEquipment.class, conceptPower, elementConfiguration2);\n+\t\topenEditor(powerEquipment2);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");\n+\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());\n+\t\t\n+\t\tpowerSummary = addElement(PowerSummary.class, conceptPower, configurationTree);\n+\t\topenEditor(powerSummary);\n+\t\tbuildCounter.executeInterlocked(() -> bot.saveAllEditors());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a394b8b33f495f6d71750b6187656f8aa6215d8"}, "originalPosition": 87}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b93c79111c8439f7c8b97639a697145280de774", "author": {"user": {"login": "Anna-Lena-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4b93c79111c8439f7c8b97639a697145280de774", "committedDate": "2020-10-07T09:15:03Z", "message": "Use save() from ASwtBotTestCase - (Task #746)\n\n\n\n---\nTask #746: SWTBot Test Cases for Power Summary"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzODAzNjUw", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#pullrequestreview-503803650", "createdAt": "2020-10-07T12:02:16Z", "commit": {"oid": "4b93c79111c8439f7c8b97639a697145280de774"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MTk5Nzg0", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#pullrequestreview-504199784", "createdAt": "2020-10-07T19:28:03Z", "commit": {"oid": "4b93c79111c8439f7c8b97639a697145280de774"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOToyODowM1rOHeCVnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxOTozNDo1OFrOHeCkXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI1NzYyOA==", "bodyText": "I actually agree that using + \"\" to convert to String isnt the nicest way.\nI would suggest String.valueOf(AOCS_POWER).  It may be a little bit longer in terms of number of characters, but this makes it really clear for the reader whats being done.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r501257628", "createdAt": "2020-10-07T19:28:03Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n+\t\t\n+\t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n+\n+\t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n+\n+\t\telementConfiguration1 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration1, \"AOCS\");\n+\t\t\n+\t\tpowerEquipment1 = addElement(PowerEquipment.class, conceptPower, elementConfiguration1);\n+\t\topenEditor(powerEquipment1);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, AOCS_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, AOCS_DUTYCYCLE + \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5NTc0Mw=="}, "originalCommit": {"oid": "8a394b8b33f495f6d71750b6187656f8aa6215d8"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI2MDQxMw==", "bodyText": "If we open the powerSummary I think we can use the SWTBot API to do the assertion with something like this:\nassertText(expectedMinPower, bot.textWithLabel(PowerSummary.PROPERTY_MINPOWER));\n(or something similar)\nIn general it looks a bit weird that the before part opens the PowerSummary editor and then this test case opens the configuration tree editor.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r501260413", "createdAt": "2020-10-07T19:33:08Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n+\t\t\n+\t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n+\n+\t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n+\n+\t\telementConfiguration1 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration1, \"AOCS\");\n+\t\t\n+\t\tpowerEquipment1 = addElement(PowerEquipment.class, conceptPower, elementConfiguration1);\n+\t\topenEditor(powerEquipment1);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, AOCS_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, AOCS_DUTYCYCLE + \"\");\n+\n+\t\telementConfiguration2 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration2, \"DataHandling\");\n+\t\t\n+\t\tpowerEquipment2 = addElement(PowerEquipment.class, conceptPower, elementConfiguration2);\n+\t\topenEditor(powerEquipment2);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");\n+\t\tsave();\n+\t\t\n+\t\tpowerSummary = addElement(PowerSummary.class, conceptPower, configurationTree);\n+\t\topenEditor(powerSummary);\n+\t\tsave();\n+\t}\n+\t\n+\t@Test\n+\tpublic void calculationsForPowerSummaryTest() {\n+\t\topenEditor(configurationTree);\n+\t\tSWTBotTable allPropertyTable = getSWTBotTable(configurationTree, \"Section for: PowerSummary\");\n+\t\tString minPower = allPropertyTable.getTableItem(0).getText(2);\n+\t\tfinal String expectedMinPower = AOCS_POWER + DATA_HANDLING_POWER + \"00 [W]\";\n+\t\tassertEquals(expectedMinPower, minPower);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b93c79111c8439f7c8b97639a697145280de774"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI2MTQwNw==", "bodyText": "Why do we need this save here?\nWould it not be sufficient to save at the end of the test setup?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#discussion_r501261407", "createdAt": "2020-10-07T19:34:58Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/PowerSummaryTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTable;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTreeItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import de.dlr.sc.virsat.concept.unittest.util.ConceptXmiLoader;\n+import de.dlr.sc.virsat.model.dvlm.concepts.Concept;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerEquipment;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerState;\n+import de.dlr.sc.virsat.model.extension.budget.power.model.PowerSummary;\n+import de.dlr.sc.virsat.model.extension.ps.model.ConfigurationTree;\n+import de.dlr.sc.virsat.model.extension.ps.model.ElementConfiguration;\n+\n+public class PowerSummaryTest extends ASwtBotTestCase {\n+\tprivate SWTBotTreeItem repositoryNavigatorItem;\n+\t\n+\tprivate SWTBotTreeItem configurationTree;\n+\tprivate SWTBotTreeItem elementConfiguration1;\n+\tprivate SWTBotTreeItem elementConfiguration2;\n+\n+\tprivate static final Double AOCS_POWER = 20.0;\n+\tprivate static final Double AOCS_DUTYCYCLE = 20.0;\n+\t\n+\tprivate static final Double DATA_HANDLING_POWER = 50.0;\n+\tprivate static final Double DATA_HANDLING_DUTYCYCLE = 50.0;\n+\n+\tprivate SWTBotTreeItem powerEquipment1;\n+\tprivate SWTBotTreeItem powerEquipment2;\n+\tprivate SWTBotTreeItem powerSummary;\n+\n+\tprivate Concept conceptPower;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tsuper.before();\n+\t\t//create necessary items for the test\n+\t\tconceptPower = ConceptXmiLoader.loadConceptFromPlugin(de.dlr.sc.virsat.model.extension.budget.power.Activator.getPluginId() + \"/concept/concept.xmi\");\n+\t\t\n+\t\trepositoryNavigatorItem = bot.tree().expandNode(SWTBOT_TEST_PROJECTNAME, \"Repository\");\n+\n+\t\tconfigurationTree = addElement(ConfigurationTree.class, conceptPs, repositoryNavigatorItem);\n+\n+\t\telementConfiguration1 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration1, \"AOCS\");\n+\t\t\n+\t\tpowerEquipment1 = addElement(PowerEquipment.class, conceptPower, elementConfiguration1);\n+\t\topenEditor(powerEquipment1);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, AOCS_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, AOCS_DUTYCYCLE + \"\");\n+\n+\t\telementConfiguration2 = addElement(ElementConfiguration.class, conceptPs, configurationTree);\n+\t\trename(elementConfiguration2, \"DataHandling\");\n+\t\t\n+\t\tpowerEquipment2 = addElement(PowerEquipment.class, conceptPower, elementConfiguration2);\n+\t\topenEditor(powerEquipment2);\n+\n+\t\tbot.button(\"Add PowerState\").click();\n+\t\tbot.table().select(\"powerValues\");\n+\t\tbot.button(\"Drill-Down\").click();\n+\t\t\n+\t\trenameField(PowerState.PROPERTY_POWER, DATA_HANDLING_POWER + \"\");\n+\t\trenameField(PowerState.PROPERTY_DUTYCYCLE, DATA_HANDLING_DUTYCYCLE + \"\");\n+\t\tsave();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b93c79111c8439f7c8b97639a697145280de774"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81cf685f635deec0a78b981f6435ef6862808aa9", "author": {"user": {"login": "Anna-Lena-DLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/81cf685f635deec0a78b981f6435ef6862808aa9", "committedDate": "2020-10-09T07:49:31Z", "message": "Use final variables for table columns - (Task #746)\n\n& get rid of unnecessary code\n\n---\nTask #746: SWTBot Test Cases for Power Summary"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NTY2NzMz", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/759#pullrequestreview-505566733", "createdAt": "2020-10-09T10:52:35Z", "commit": {"oid": "81cf685f635deec0a78b981f6435ef6862808aa9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 550, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}