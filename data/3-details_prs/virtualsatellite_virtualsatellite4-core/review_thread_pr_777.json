{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5OTY0OTMy", "number": 777, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozOTo1OVrOErpaTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozOTo1OVrOErpaTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MjAyNzAwOnYy", "diffSide": "RIGHT", "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/LicenseTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozOTo1OVrOHeh8Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDo0NzozNlrOHeiThA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc3NTQ0Mg==", "bodyText": "Some comment on why we need to press Close twice would be good.\nI guess there are two dialogues open at this stage?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/777#discussion_r501775442", "createdAt": "2020-10-08T14:39:59Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/LicenseTest.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.eclipse.swtbot.eclipse.finder.SWTWorkbenchBot;\n+import org.eclipse.swtbot.eclipse.finder.waits.Conditions;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTableItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class LicenseTest {\n+\n+\tprotected SWTWorkbenchBot bot;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tbot = new SWTWorkbenchBot();\n+\t}\n+\t\n+\t@Test\n+\tpublic void licenseTest() {\n+\t\tfinal String VIRSAT_PACKAGE_PREFIX = \"de.dlr.sc.virsat\";\n+\t\tfinal String EXPECTED_PROVIDER = \"DLR (German Aerospace Center)\";\n+\t\t\n+\t\tfinal int COLUMN_FEATURE_ID = 3;\n+\t\tfinal int COLUMN_PLUGIN_ID = 4;\n+\t\t\n+\t\tbot.menu(\"Help\").menu(\"About VirSat 4 - Core\").click();\n+\t\tbot.button(\"Installation Details\").click();\n+\n+\t\tbot.cTabItem(\"Features\").activate();\n+\n+\t\tassertTrue(\"There is at least one VirSat feature\", bot.table().containsText(EXPECTED_PROVIDER));\n+\t\t\n+\t\tint rowCount = bot.table().rowCount();\n+\t\tfor (int i = 0; i < rowCount; i++) {\n+\t\t\tSWTBotTableItem row = bot.table().getTableItem(i);\n+\t\t\tString featureId = row.getText(COLUMN_FEATURE_ID);\n+\t\t\tif (featureId.startsWith(VIRSAT_PACKAGE_PREFIX)) {\n+\t\t\t\tbot.table().select(i);\n+\t\t\t\tassertEquals(\"Correct provider is set for feature \" + featureId, EXPECTED_PROVIDER, row.getText(0));\n+\t\t\t\tassertTrue(\"Licensing information set for feature \" + featureId, bot.button(\"License\").isEnabled());\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\tbot.cTabItem(\"Plug-ins\").activate();\n+\t\t\n+\t\t// Wait until plugin table is populated\n+\t\tbot.waitWhile(Conditions.tableHasRows(bot.table(), 0), ASwtBotTestCase.MAX_TEST_CASE_TIMEOUT_MILLISECONDS, ASwtBotTestCase.SWTBOT_RETRY_WAIT_TIME);\n+\t\t\n+\t\tassertTrue(\"There is at least one VirSat plugin\", bot.table().containsText(EXPECTED_PROVIDER));\n+\t\t\n+\t\trowCount = bot.table().rowCount();\n+\t\tfor (int i = 0; i < rowCount; i++) {\n+\t\t\tSWTBotTableItem row = bot.table().getTableItem(i);\n+\t\t\tString pluginId = row.getText(COLUMN_PLUGIN_ID);\n+\t\t\tif (pluginId.startsWith(VIRSAT_PACKAGE_PREFIX)) {\n+\t\t\t\tbot.table().select(i);\n+\t\t\t\tassertEquals(\"Correct provider for plugin \" + pluginId, EXPECTED_PROVIDER, row.getText(1));\n+\t\t\t\tassertTrue(\"Licensing information is set for plugin \" + pluginId, bot.button(\"Legal Info\").isEnabled());\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\tbot.button(\"Close\").click();\n+\t\tbot.button(\"Close\").click();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c18987dac38fd778c57687eaeeaa856c5f1f2e4b"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc4MTM4MA==", "bodyText": "Yes, for installation details and about window, added a comment to clarify.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/777#discussion_r501781380", "createdAt": "2020-10-08T14:47:36Z", "author": {"login": "andriikovalov-dlr"}, "path": "de.dlr.sc.virsat.swtbot.test/src/de/dlr/sc/virsat/swtbot/test/LicenseTest.java", "diffHunk": "@@ -0,0 +1,79 @@\n+/*******************************************************************************\n+ * Copyright (c) 2008-2019 German Aerospace Center (DLR), Simulation and Software Technology, Germany.\n+ *\n+ * This program and the accompanying materials are made available under the\n+ * terms of the Eclipse Public License 2.0 which is available at\n+ * http://www.eclipse.org/legal/epl-2.0.\n+ *\n+ * SPDX-License-Identifier: EPL-2.0\n+ *******************************************************************************/\n+package de.dlr.sc.virsat.swtbot.test;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+\n+import org.eclipse.swtbot.eclipse.finder.SWTWorkbenchBot;\n+import org.eclipse.swtbot.eclipse.finder.waits.Conditions;\n+import org.eclipse.swtbot.swt.finder.widgets.SWTBotTableItem;\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+public class LicenseTest {\n+\n+\tprotected SWTWorkbenchBot bot;\n+\n+\t\n+\t@Before\n+\tpublic void before() throws Exception {\n+\t\tbot = new SWTWorkbenchBot();\n+\t}\n+\t\n+\t@Test\n+\tpublic void licenseTest() {\n+\t\tfinal String VIRSAT_PACKAGE_PREFIX = \"de.dlr.sc.virsat\";\n+\t\tfinal String EXPECTED_PROVIDER = \"DLR (German Aerospace Center)\";\n+\t\t\n+\t\tfinal int COLUMN_FEATURE_ID = 3;\n+\t\tfinal int COLUMN_PLUGIN_ID = 4;\n+\t\t\n+\t\tbot.menu(\"Help\").menu(\"About VirSat 4 - Core\").click();\n+\t\tbot.button(\"Installation Details\").click();\n+\n+\t\tbot.cTabItem(\"Features\").activate();\n+\n+\t\tassertTrue(\"There is at least one VirSat feature\", bot.table().containsText(EXPECTED_PROVIDER));\n+\t\t\n+\t\tint rowCount = bot.table().rowCount();\n+\t\tfor (int i = 0; i < rowCount; i++) {\n+\t\t\tSWTBotTableItem row = bot.table().getTableItem(i);\n+\t\t\tString featureId = row.getText(COLUMN_FEATURE_ID);\n+\t\t\tif (featureId.startsWith(VIRSAT_PACKAGE_PREFIX)) {\n+\t\t\t\tbot.table().select(i);\n+\t\t\t\tassertEquals(\"Correct provider is set for feature \" + featureId, EXPECTED_PROVIDER, row.getText(0));\n+\t\t\t\tassertTrue(\"Licensing information set for feature \" + featureId, bot.button(\"License\").isEnabled());\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\tbot.cTabItem(\"Plug-ins\").activate();\n+\t\t\n+\t\t// Wait until plugin table is populated\n+\t\tbot.waitWhile(Conditions.tableHasRows(bot.table(), 0), ASwtBotTestCase.MAX_TEST_CASE_TIMEOUT_MILLISECONDS, ASwtBotTestCase.SWTBOT_RETRY_WAIT_TIME);\n+\t\t\n+\t\tassertTrue(\"There is at least one VirSat plugin\", bot.table().containsText(EXPECTED_PROVIDER));\n+\t\t\n+\t\trowCount = bot.table().rowCount();\n+\t\tfor (int i = 0; i < rowCount; i++) {\n+\t\t\tSWTBotTableItem row = bot.table().getTableItem(i);\n+\t\t\tString pluginId = row.getText(COLUMN_PLUGIN_ID);\n+\t\t\tif (pluginId.startsWith(VIRSAT_PACKAGE_PREFIX)) {\n+\t\t\t\tbot.table().select(i);\n+\t\t\t\tassertEquals(\"Correct provider for plugin \" + pluginId, EXPECTED_PROVIDER, row.getText(1));\n+\t\t\t\tassertTrue(\"Licensing information is set for plugin \" + pluginId, bot.button(\"Legal Info\").isEnabled());\n+\t\t\t}\n+\t\t}\n+\t\t\n+\t\tbot.button(\"Close\").click();\n+\t\tbot.button(\"Close\").click();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc3NTQ0Mg=="}, "originalCommit": {"oid": "c18987dac38fd778c57687eaeeaa856c5f1f2e4b"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 638, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}