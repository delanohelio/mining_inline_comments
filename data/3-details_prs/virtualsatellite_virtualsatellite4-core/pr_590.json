{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNzE3NTg2", "number": 590, "title": "Performance improvements by reducing number of global ResourceSet actions", "bodyText": "We're using global ResourceSet actions guite a lot in Virtual Satellite. Such global actions are performed on all resources in the ResourceSet and even trigger loading resources of referenced objects. While this is intended for DVLM files it is also performed on non-DVLM files and can reduce the performance quite a lot.\nRemoving dangeling references, collecting types on ResourceSet-level and the validation, equation + inthertiance builders currently all resolve all resouces in the ResourceSet. With resources for diagrams and DSLs in the ResourceSet, this triggers long chains of resource events, because also references into diagram infrastucutre and so on are resolved.\nThis PR tries to reduce overhead by using actions on DVLM files only where non-DVLM files are not needed. Such as e.g. getting all SEIs in a project.\nCloses #589", "createdAt": "2020-04-29T13:34:46Z", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/590", "merged": true, "mergeCommit": {"oid": "0d8a62da8f22ed0a64b76801238ce749e1ecf229"}, "closed": true, "closedAt": "2020-07-03T07:58:42Z", "author": {"login": "franzTobiasDLR"}, "timelineItems": {"totalCount": 29, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccMUNnAH2gAyNDEwNzE3NTg2OmVlMWM2MmViOWM0ZDhmOTRjMjUyZjNhMDgyMzQ2ZjE2NmYwMjcxODk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcxOuqygFqTQ0MjIyMDA5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ee1c62eb9c4d8f94c252f3a082346f166f027189", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/ee1c62eb9c4d8f94c252f3a082346f166f027189", "committedDate": "2020-04-28T23:16:54Z", "message": "Only handle dangeling references on DVLM files - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30f0f71de159dcd01dffee7e837ca980c361b5b1", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/30f0f71de159dcd01dffee7e837ca980c361b5b1", "committedDate": "2020-04-28T23:17:50Z", "message": "Add util methods specifically for DVLM resources - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86b2b4f38b119d1ee61656c793dbecceefa1a669", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/86b2b4f38b119d1ee61656c793dbecceefa1a669", "committedDate": "2020-04-28T23:18:48Z", "message": "Fix loop of synchronizer jobs - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cdca5931af197c49baab778f3250df764f4fd93", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/4cdca5931af197c49baab778f3250df764f4fd93", "committedDate": "2020-04-28T23:19:59Z", "message": "Only work on DVLM resources in equation builder - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "520d8444b6f3120311586f2851e2c93b0bba9e9a", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/520d8444b6f3120311586f2851e2c93b0bba9e9a", "committedDate": "2020-04-29T09:30:39Z", "message": "Fix URIs not being understood in test - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5be2ce93fcd88b4e7e81bbd1684d302d32189db2", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/5be2ce93fcd88b4e7e81bbd1684d302d32189db2", "committedDate": "2020-04-29T09:35:34Z", "message": "Add documentation why only DVLM resource are analysed - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f317a4a57627313dca3dd34061f53ff87fc94583", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f317a4a57627313dca3dd34061f53ff87fc94583", "committedDate": "2020-04-29T12:44:50Z", "message": "Add test for getting only DVLM resources - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e5be7cd42069de26b431bf010b4c9dec94acbc8", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/1e5be7cd42069de26b431bf010b4c9dec94acbc8", "committedDate": "2020-04-29T12:51:33Z", "message": "Add test case for new getAllContents methode - (Task #589)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1NzEzODQ2", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/590#pullrequestreview-405713846", "createdAt": "2020-05-05T11:51:22Z", "commit": {"oid": "1e5be7cd42069de26b431bf010b4c9dec94acbc8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTo1MToyMlrOGQl08w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjowMDo0M1rOGQmICw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1MDE2Mw==", "bodyText": "I think this could be replaced by a method from VIrSatProjectCommons. As far as i recal there is a method isDvlmResource. Please check.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/590#discussion_r420050163", "createdAt": "2020-05-05T11:51:22Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomain.java", "diffHunk": "@@ -460,7 +460,8 @@ protected void saveResource(Resource resource, boolean supressRemoveDanglingRefe\n \t\t\t}\r\n \t\t\t\r\n \t\t\t// Remove dangling references only if this the user has write access to this resource\r\n-\t\t\tboolean writeRemovedDanglingReferences = !supressRemoveDanglingReferences && virSatResourceSet.hasWritePermission(resource); \r\n+\t\t\tboolean isDvlmResource = resource.getURI().fileExtension().contains(VirSatProjectCommons.FILENAME_EXTENSION);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5be7cd42069de26b431bf010b4c9dec94acbc8"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1MTE3Nw==", "bodyText": "Same here, please check if this code could be bound or replaced by using VirSatProjectCommons. Anyway, if not, check if the TED could call this method instead of implementing it by itself again (i.e. avoiding code-duplication)", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/590#discussion_r420051177", "createdAt": "2020-05-05T11:53:17Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/resources/VirSatResourceSet.java", "diffHunk": "@@ -717,6 +717,30 @@ private Resource getAlreadyCreatedResource(URI fileUri) {\n \t\t}\r\n \t\treturn null;\r\n \t}\r\n+\t\r\n+\t/**\r\n+\t * Get a list of all DVLM resources\r\n+\t * @return the list of DVLM resources\r\n+\t */\r\n+\tpublic List<Resource> getDvlmResources() {\r\n+\t\tList<Resource> dvlmResources = new ArrayList<Resource>();\r\n+\t\tfor (Resource resource : getResources()) {\r\n+\t\t\tif (isDvlmResource(resource)) {\r\n+\t\t\t\tdvlmResources.add(resource);\r\n+\t\t\t}\r\n+\t\t}\r\n+\t\treturn dvlmResources;\r\n+\t}\r\n+\r\n+\t/**\r\n+\t * Returns if the given resource is a DVLM resource\r\n+\t * @param resource the resource\r\n+\t * @return if DVLM resource\r\n+\t */\r\n+\tpublic boolean isDvlmResource(Resource resource) {\r\n+\t\treturn resource.getURI().fileExtension().contains(VirSatProjectCommons.FILENAME_EXTENSION);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5be7cd42069de26b431bf010b4c9dec94acbc8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1MjQxOQ==", "bodyText": "I am not sure, if this is the correct way of dealing with resource problems. In case a resource is loaded via this resourceSet potential problems should be ahndled somewhere. Where would problems be handled for non-DVLM resources if not here? In the corresponding UI e.g. a diagram editor?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/590#discussion_r420052419", "createdAt": "2020-05-05T11:55:42Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/resources/VirSatResourceSet.java", "diffHunk": "@@ -1151,7 +1175,9 @@ public Resource createResource(URI uri) {\n \t */\r\n \tpublic boolean updateDiagnostic(Resource resource) {\r\n \t\tboolean changes = false;\r\n-\t\tif (resource != null) {\r\n+\t\t// Only run diagnostic on DVLM files as other resource might result in a huge chain of\r\n+\t\t// resource that have to be resolved (e.g. diagrams also have references to the diagram infrastructure...)\r\n+\t\tif (resource != null && isDvlmResource(resource)) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5be7cd42069de26b431bf010b4c9dec94acbc8"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1MzA4Mw==", "bodyText": "Why not placing this code into the VirSatEcoreUtils?", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/590#discussion_r420053083", "createdAt": "2020-05-05T11:57:03Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/resources/VirSatResourceSet.java", "diffHunk": "@@ -1297,4 +1323,15 @@ public void loadAllResources() {\n \t\tgetRepositoryResource();\r\n \t\tEcoreUtil.resolveAll(this);\r\n \t}\r\n+\t\r\n+\t/**\r\n+\t * Resolve all DVLM resources in this resource set\r\n+\t */\r\n+\tpublic void resolveAllDvlmResources() {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5be7cd42069de26b431bf010b4c9dec94acbc8"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1NTA1MQ==", "bodyText": "This is also a dificult one. The whole story to the workspace synchtronizer is, to detect if there are changes to a reosurce of the reosurceset which have been introduced somewhere on the workspace. In that case, the reosurce is out of sync with the loaded reosurce. EMF usually handles this in the generated editors. In VirSat we decided to handle this centrally, to also manage intended changes. E.g. when a resource is explicitly saved, which creates a workspace resource change event as well. These intended changes should obviously not lead to a resource reload. So at least we need to have a convention, agreement how to deal with non dvlm resources. In this proposed implementation, specific editors have to deal with reloading the resources.", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/590#discussion_r420055051", "createdAt": "2020-05-05T12:00:43Z", "author": {"login": "PhilMFischer"}, "path": "de.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/structure/VirSatProjectResourceChangeListener.java", "diffHunk": "@@ -122,10 +122,12 @@ public boolean visit(IResourceDelta delta) {\n \t\t\t// workspace job as we will need the editing domain to handle resource changes.\r\n \t\t\t// This way the current job calling us can safely finish and the new job\r\n \t\t\t// will handle the actual changes.\r\n-\t\t\tJob job = new WorkspaceSynchronizerJob(addedDvlmResources, removedDvlmResources, changedDvlmResources, counter++);\r\n-\t\t\tString changeList = printLists(addedDvlmResources, removedDvlmResources, changedDvlmResources);\r\n-\t\t\tActivator.getDefault().getLog().log(new Status(Status.INFO, Activator.getPluginId(), \"VirSatProjectResourceChangeListener: Scheduling \" + job.getName() + \". \\n\" + changeList));\r\n-\t\t\tjob.schedule();\r\n+\t\t\tif (!addedDvlmResources.isEmpty() || !removedDvlmResources.isEmpty() || !changedDvlmResources.isEmpty()) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e5be7cd42069de26b431bf010b4c9dec94acbc8"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f09efa421ef1d846c3702db64fe61f845761632", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/2f09efa421ef1d846c3702db64fe61f845761632", "committedDate": "2020-05-06T08:46:33Z", "message": "Rename resource variables for clearity - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd48beb20c5d1d406e2428f44b3699358c8930eb", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/cd48beb20c5d1d406e2428f44b3699358c8930eb", "committedDate": "2020-07-01T08:35:24Z", "message": "Merge branch 'development' into\nfeature/task_589-Performance_improvements\n\nConflicts:\n\tde.dlr.sc.virsat.project/src/de/dlr/sc/virsat/project/editingDomain/VirSatTransactionalEditingDomain.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87aa439e446b999e0cb7ac9f56236c61137f03c2", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/87aa439e446b999e0cb7ac9f56236c61137f03c2", "committedDate": "2020-07-01T08:38:04Z", "message": "Use isDvlmFile from project commons - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "078d2f7e21bece85135a98fc43486939319ab84a", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/078d2f7e21bece85135a98fc43486939319ab84a", "committedDate": "2020-07-01T08:46:54Z", "message": "Rename method for loading all DVLM resources"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e36dad2cfc9d1fbca89d8f09437443307e34082e", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/e36dad2cfc9d1fbca89d8f09437443307e34082e", "committedDate": "2020-07-01T09:22:55Z", "message": "Fix some compilation erros and warnings"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ceea04ec84e91a95295925ac7f9542b73224003", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/1ceea04ec84e91a95295925ac7f9542b73224003", "committedDate": "2020-07-01T09:40:54Z", "message": "Revert change - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ef3163c796db476fddb7298a06e797a84c4ad68", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/3ef3163c796db476fddb7298a06e797a84c4ad68", "committedDate": "2020-07-01T11:36:58Z", "message": "Stop endless Synchronizer loop - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14c3dc4ab06f13dadb9935fb079a71bf1bd958b6", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/14c3dc4ab06f13dadb9935fb079a71bf1bd958b6", "committedDate": "2020-07-01T14:46:52Z", "message": "Add additional test cases - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9d11b96376715b51b1aa6372b1ce044e1dfc5b1", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/f9d11b96376715b51b1aa6372b1ce044e1dfc5b1", "committedDate": "2020-07-01T14:48:10Z", "message": "Merge remote-tracking branch 'origin/development' into feature/task_589-Performance_improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46dd3ddb99d3ae6ca26bf8213caaa825f8c3624f", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/46dd3ddb99d3ae6ca26bf8213caaa825f8c3624f", "committedDate": "2020-07-02T15:01:47Z", "message": "Merge remote-tracking branch 'origin/development' into feature/task_589-Performance_improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45004ba6153639c4d6ef53771c565665d57f157b", "author": {"user": {"login": "SaMuellerDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/45004ba6153639c4d6ef53771c565665d57f157b", "committedDate": "2020-07-02T18:30:35Z", "message": "Merge branch 'development' into feature/task_589-Performance_improvements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxOTYyOTg3", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/590#pullrequestreview-441962987", "createdAt": "2020-07-02T19:21:54Z", "commit": {"oid": "45004ba6153639c4d6ef53771c565665d57f157b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxOToyMTo1NFrOGsaXlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxOToyNDoyNVrOGsabmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyMjU0OQ==", "bodyText": "Can probably do this a bit simpler with a StructuralInstantiator", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/590#discussion_r449222549", "createdAt": "2020-07-02T19:21:54Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.project.test/src/de/dlr/sc/virsat/project/resources/VirSatResourceSetTest.java", "diffHunk": "@@ -588,6 +591,131 @@ public void testLoadAllResources() {\n \t\tassertTrue(\"Resource got deserialized from persistant storage\", resSei2_1_1.isLoaded());\r\n \t}\r\n \t\r\n+\t@Test\r\n+\tpublic void testLoadAllDvlmResources() throws IOException {\r\n+\t\tVirSatResourceSet resSet = VirSatResourceSet.createUnmanagedResourceSet(testProject);\r\n+\t\tresSet.initializeModelsAndResourceSet();\r\n+\t\t\r\n+\t\tRepository repo = resSet.getRepository();\r\n+\t\t\r\n+\t\tStructuralElement se = StructuralFactory.eINSTANCE.createStructuralElement();\r\n+\t\tse.setIsApplicableForAll(true);\r\n+\t\t\r\n+\t\t//CHECKSTYLE:OFF\r\n+\t\tStructuralElementInstance sei1 = StructuralFactory.eINSTANCE.createStructuralElementInstance();\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45004ba6153639c4d6ef53771c565665d57f157b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIyMzU3Ng==", "bodyText": "We can probably simplify this with assertThat(message, resSet.getDvlmResources(), hasItems(...)", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/590#discussion_r449223576", "createdAt": "2020-07-02T19:24:25Z", "author": {"login": "SaMuellerDLR"}, "path": "de.dlr.sc.virsat.project.test/src/de/dlr/sc/virsat/project/resources/VirSatResourceSetTest.java", "diffHunk": "@@ -588,6 +591,131 @@ public void testLoadAllResources() {\n \t\tassertTrue(\"Resource got deserialized from persistant storage\", resSei2_1_1.isLoaded());\r\n \t}\r\n \t\r\n+\t@Test\r\n+\tpublic void testLoadAllDvlmResources() throws IOException {\r\n+\t\tVirSatResourceSet resSet = VirSatResourceSet.createUnmanagedResourceSet(testProject);\r\n+\t\tresSet.initializeModelsAndResourceSet();\r\n+\t\t\r\n+\t\tRepository repo = resSet.getRepository();\r\n+\t\t\r\n+\t\tStructuralElement se = StructuralFactory.eINSTANCE.createStructuralElement();\r\n+\t\tse.setIsApplicableForAll(true);\r\n+\t\t\r\n+\t\t//CHECKSTYLE:OFF\r\n+\t\tStructuralElementInstance sei1 = StructuralFactory.eINSTANCE.createStructuralElementInstance();\r\n+\t\tStructuralElementInstance sei2 = StructuralFactory.eINSTANCE.createStructuralElementInstance();\r\n+\t\tStructuralElementInstance sei2_1 = StructuralFactory.eINSTANCE.createStructuralElementInstance();\r\n+\t\tStructuralElementInstance sei2_1_1 = StructuralFactory.eINSTANCE.createStructuralElementInstance();\r\n+\t\tsei1.setType(se);\r\n+\t\tsei2.setType(se);\r\n+\t\tsei2_1.setType(se);\r\n+\t\tsei2_1_1.setType(se);\r\n+\t\t\r\n+\t\tResource resSei1 = resSet.getAndAddStructuralElementInstanceResource(sei1);\r\n+\t\tResource resSei2 = resSet.getAndAddStructuralElementInstanceResource(sei2);\r\n+\t\tResource resSei2_1 = resSet.getAndAddStructuralElementInstanceResource(sei2_1);\r\n+\t\tResource resSei2_1_1 = resSet.getAndAddStructuralElementInstanceResource(sei2_1_1);\r\n+\t\t\r\n+\t\t//CHECKSTYLE:ON\r\n+\t\t\r\n+\t\t// Create resource \r\n+\t\tURI uri = URI.createPlatformResourceURI(\"/testProject_VirSatResourceSetTest/test.ecore\", true);\r\n+\t\tResource newResource = new XMIResourceImpl(uri);\r\n+\t\tnewResource.save(Collections.EMPTY_MAP);\r\n+\t\tResource nonDvlmResourceReload = resSet.getResource(uri, true);\r\n+\t\t\r\n+\t\trepo.getRootEntities().add(sei1);\r\n+\t\trepo.getRootEntities().add(sei2);\r\n+\r\n+\t\tsei2.getChildren().add(sei2_1);\r\n+\t\tsei2_1.getChildren().add(sei2_1_1);\r\n+\t\t\r\n+\t\tresSet.saveAllResources(new NullProgressMonitor(), UserRegistry.getInstance());\r\n+\t\t\r\n+\t\tresSei1.unload();\r\n+\t\tresSei2.unload();\r\n+\t\tresSei2_1.unload();\r\n+\t\tresSei2_1_1.unload();\r\n+\t\tnonDvlmResourceReload.unload();\r\n+\t\t\r\n+\t\tassertFalse(\"Resource should be unloaded\", resSei1.isLoaded());\r\n+\t\tassertFalse(\"Resource should be unloaded\", resSei2.isLoaded());\r\n+\t\tassertFalse(\"Resource should be unloaded\", resSei2_1.isLoaded());\r\n+\t\tassertFalse(\"Resource should be unloaded\", resSei2_1_1.isLoaded());\r\n+\t\tassertFalse(\"Resource should be unloaded\", nonDvlmResourceReload.isLoaded());\r\n+\t\t\r\n+\t\tresSet.loadAllDvlmResources();\r\n+\t\t\r\n+\t\tassertTrue(\"Resource got deserialized from persistant storage\", resSei1.isLoaded());\r\n+\t\tassertTrue(\"Resource got deserialized from persistant storage\", resSei2.isLoaded());\r\n+\t\tassertTrue(\"Resource got deserialized from persistant storage\", resSei2_1.isLoaded());\r\n+\t\tassertTrue(\"Resource got deserialized from persistant storage\", resSei2_1_1.isLoaded());\r\n+\t\tassertFalse(\"Non DVLM resource in resource set should not be loaded\", nonDvlmResourceReload.isLoaded());\r\n+\t\t\r\n+\t\t// now the final test case, unloading all data and then see if they get properly reloaded\r\n+\t\tresSet.getResources().forEach((res) -> res.unload());\r\n+\t\t\r\n+\t\tresSet.loadAllResources();\r\n+\t\t\r\n+\t\tassertTrue(\"Resource got deserialized from persistant storage\", resSei1.isLoaded());\r\n+\t\tassertTrue(\"Resource got deserialized from persistant storage\", resSei2.isLoaded());\r\n+\t\tassertTrue(\"Resource got deserialized from persistant storage\", resSei2_1.isLoaded());\r\n+\t\tassertTrue(\"Resource got deserialized from persistant storage\", resSei2_1_1.isLoaded());\r\n+\t\tassertFalse(\"Non DVLM resource in resource set should not be loaded\", nonDvlmResourceReload.isLoaded());\r\n+\t}\r\n+\t\r\n+\t@Test\r\n+\tpublic void testGetDvlmResources() throws IOException, CoreException {\r\n+\t\tVirSatResourceSet resSet = VirSatResourceSet.createUnmanagedResourceSet(testProject);\r\n+\t\tresSet.initializeModelsAndResourceSet();\r\n+\t\t\r\n+\t\tRepository repo = resSet.getRepository();\r\n+\t\t\r\n+\t\tStructuralElement se = StructuralFactory.eINSTANCE.createStructuralElement();\r\n+\t\tse.setIsApplicableForAll(true);\r\n+\t\t\r\n+\t\t//CHECKSTYLE:OFF\r\n+\t\tStructuralElementInstance sei1 = StructuralFactory.eINSTANCE.createStructuralElementInstance();\r\n+\t\tStructuralElementInstance sei2 = StructuralFactory.eINSTANCE.createStructuralElementInstance();\r\n+\t\tStructuralElementInstance sei2_1 = StructuralFactory.eINSTANCE.createStructuralElementInstance();\r\n+\t\tStructuralElementInstance sei2_1_1 = StructuralFactory.eINSTANCE.createStructuralElementInstance();\r\n+\t\tsei1.setType(se);\r\n+\t\tsei2.setType(se);\r\n+\t\tsei2_1.setType(se);\r\n+\t\tsei2_1_1.setType(se);\r\n+\t\t\r\n+\t\tResource resSei1 = resSet.getAndAddStructuralElementInstanceResource(sei1);\r\n+\t\tResource resSei2 = resSet.getAndAddStructuralElementInstanceResource(sei2);\r\n+\t\tResource resSei2_1 = resSet.getAndAddStructuralElementInstanceResource(sei2_1);\r\n+\t\tResource resSei2_1_1 = resSet.getAndAddStructuralElementInstanceResource(sei2_1_1);\r\n+\t\t//CHECKSTYLE:ON\r\n+\t\t\r\n+\t\trepo.getRootEntities().add(sei1);\r\n+\t\trepo.getRootEntities().add(sei2);\r\n+\r\n+\t\tsei2.getChildren().add(sei2_1);\r\n+\t\tsei2_1.getChildren().add(sei2_1_1);\r\n+\t\t\r\n+\t\tresSet.saveAllResources(new NullProgressMonitor(), UserRegistry.getInstance());\r\n+\t\t\r\n+\t\tresSei1.unload();\r\n+\t\tresSei2.unload();\r\n+\t\tresSei2_1.unload();\r\n+\t\tresSei2_1_1.unload();\r\n+\t\t\r\n+\t\tURI uri = URI.createPlatformResourceURI(\"/testProject_VirSatResourceSetTest/test.ecore\", true);\r\n+\t\tResource newResource = new XMIResourceImpl(uri);\r\n+\t\tnewResource.save(Collections.EMPTY_MAP);\r\n+\t\tResource nonDvlmResourceReload = resSet.getResource(uri, true);\r\n+\t\t\r\n+\t\tassertTrue(\"Should contain DVLM resource\", resSet.getDvlmResources().contains(resSei1));\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45004ba6153639c4d6ef53771c565665d57f157b"}, "originalPosition": 139}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65bd4d51d19d8a00c22ae6b47bbd81ab7d95fcc7", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/65bd4d51d19d8a00c22ae6b47bbd81ab7d95fcc7", "committedDate": "2020-07-02T23:02:17Z", "message": "Simplfy test according to suggestion form review - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b1f5455f7262cd3f9592621e88a557b209dd8de", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/8b1f5455f7262cd3f9592621e88a557b209dd8de", "committedDate": "2020-07-02T23:08:07Z", "message": "Use StructuralInstantiater to create SEIs in test - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f2ba1968e06eee4a1809a3ceeb5dd304bb36bb8", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/3f2ba1968e06eee4a1809a3ceeb5dd304bb36bb8", "committedDate": "2020-07-02T23:12:39Z", "message": "Add additional assert statement in isDvlmFIle test (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "510e65e4fe802e5ba3a83822e4a7aa23144f78c0", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/510e65e4fe802e5ba3a83822e4a7aa23144f78c0", "committedDate": "2020-07-02T23:15:06Z", "message": "Further assert in isDVLM file test - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ec899cd0a0211eb6b81da5c5b2347f3aa72ea31", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/1ec899cd0a0211eb6b81da5c5b2347f3aa72ea31", "committedDate": "2020-07-02T23:32:16Z", "message": "Add additional assert for getAllContentsOfType - (Task #589)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e78e93b5ad7c27626e54da1447383c176dd9f930", "author": {"user": {"login": "franzTobiasDLR", "name": null}}, "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/commit/e78e93b5ad7c27626e54da1447383c176dd9f930", "committedDate": "2020-07-02T23:36:02Z", "message": "Merge branch 'feature/task_589-Performance_improvements' of https://github.com/virtualsatellite/VirtualSatellite4-Core.git into feature/task_589-Performance_improvements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMTk4MjAx", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/590#pullrequestreview-442198201", "createdAt": "2020-07-03T07:20:05Z", "commit": {"oid": "e78e93b5ad7c27626e54da1447383c176dd9f930"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMjIwMDkz", "url": "https://github.com/virtualsatellite/VirtualSatellite4-Core/pull/590#pullrequestreview-442220093", "createdAt": "2020-07-03T07:58:01Z", "commit": {"oid": "e78e93b5ad7c27626e54da1447383c176dd9f930"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 659, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}