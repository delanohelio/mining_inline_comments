{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjk2NDUz", "number": 2565, "title": "Add docs for startup strategy information/examples (#1157)", "bodyText": "Add a section 'Startup Strategies' to docs/features/startup_and_waits.md describing the default and 'one-shot' strategies, with a codeincluded example for the latter.", "createdAt": "2020-04-13T15:27:18Z", "url": "https://github.com/testcontainers/testcontainers-java/pull/2565", "merged": true, "mergeCommit": {"oid": "c0fc42ff60bdf639ce28ab6dc3d97117548f1e0a"}, "closed": true, "closedAt": "2020-05-21T17:02:24Z", "author": {"login": "vcvitaly"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXQaGoAH2gAyNDAyNjk2NDUzOjQ5MDk5ZDY5ZmIyZTZhMDM5Y2JlYWZkYjBiYzAwMjBkZDc4ZmZkOTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjgvQygFqTQxNjMyNzU2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "49099d69fb2e6a039cbeafdb0bc0020dd78ffd93", "author": {"user": {"login": "vcvitaly", "name": "vcvitaly"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/49099d69fb2e6a039cbeafdb0bc0020dd78ffd93", "committedDate": "2020-04-13T15:13:20Z", "message": "Add startup strategy information/examples to mkdocs #1157"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbb06d10a779e000f3d280eff491fe523dd139f0", "author": {"user": {"login": "bsideup", "name": "Sergei Egorov"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/dbb06d10a779e000f3d280eff491fe523dd139f0", "committedDate": "2020-04-19T09:05:21Z", "message": "Merge branch 'master' into feature/1157/startup_strategy_docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNzQwOTI4", "url": "https://github.com/testcontainers/testcontainers-java/pull/2565#pullrequestreview-411740928", "createdAt": "2020-05-14T12:13:04Z", "commit": {"oid": "dbb06d10a779e000f3d280eff491fe523dd139f0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjoxMzowNFrOGVZWSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMjoxMzowNFrOGVZWSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA4ODU4NA==", "bodyText": "It does seem slightly odd to use a timeout with this strategy - is it intentional?\nI'd suggest just:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            new IndefiniteWaitOneShotStartupCheckStrategy().withTimeout(Duration.ofSeconds(3))\n          \n          \n            \n                            new IndefiniteWaitOneShotStartupCheckStrategy()\n          \n      \n    \n    \n  \n\nshould be appropriate...", "url": "https://github.com/testcontainers/testcontainers-java/pull/2565#discussion_r425088584", "createdAt": "2020-05-14T12:13:04Z", "author": {"login": "rnorth"}, "path": "docs/examples/junit4/generic/src/test/java/org/testcontainers/containers/startupcheck/StartupCheckStrategyTest.java", "diffHunk": "@@ -0,0 +1,90 @@\n+package org.testcontainers.containers.startupcheck;\n+\n+import java.time.Duration;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.TimeoutException;\n+import lombok.SneakyThrows;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.junit.runners.Suite;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.output.WaitingConsumer;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.testcontainers.containers.output.OutputFrame.OutputType.STDOUT;\n+import static org.testcontainers.containers.startupcheck.StartupCheckStrategyTest.IndefiniteOneShotStrategyTest;\n+import static org.testcontainers.containers.startupcheck.StartupCheckStrategyTest.MinimumDurationStrategyTest;\n+import static org.testcontainers.containers.startupcheck.StartupCheckStrategyTest.OneShotStrategyTest;\n+\n+@RunWith(Suite.class)\n+@Suite.SuiteClasses({OneShotStrategyTest.class, IndefiniteOneShotStrategyTest.class, MinimumDurationStrategyTest.class})\n+public class StartupCheckStrategyTest {\n+\n+    private static final String HELLO_TESTCONTAINERS = \"Hello Testcontainers!\";\n+\n+    private static void waitForHello(GenericContainer container) throws TimeoutException {\n+        WaitingConsumer consumer = new WaitingConsumer();\n+        container.followOutput(consumer, STDOUT);\n+\n+        consumer.waitUntil(frame ->\n+            frame.getUtf8String().contains(HELLO_TESTCONTAINERS), 30, TimeUnit.SECONDS);\n+    }\n+\n+    public static class OneShotStrategyTest {\n+        @Rule\n+        // withOneShotStrategy {\n+        public GenericContainer bboxWithOneShot = new GenericContainer(\"busybox:1.31.1\")\n+            .withCommand(String.format(\"echo %s\", HELLO_TESTCONTAINERS))\n+            .withStartupCheckStrategy(\n+                new OneShotStartupCheckStrategy().withTimeout(Duration.ofSeconds(3))\n+            );\n+        // }\n+\n+        @SneakyThrows\n+        @Test\n+        public void testCommandIsExecuted() {\n+            waitForHello(bboxWithOneShot);\n+\n+            assertThat(bboxWithOneShot.isRunning()).isFalse();\n+        }\n+    }\n+\n+    public static class IndefiniteOneShotStrategyTest {\n+        @Rule\n+        // withIndefiniteOneShotStrategy {\n+        public GenericContainer bboxWithIndefiniteOneShot = new GenericContainer(\"busybox:1.31.1\")\n+            .withCommand(\"sh\", \"-c\", String.format(\"sleep 5 && echo \\\"%s\\\"\", HELLO_TESTCONTAINERS))\n+            .withStartupCheckStrategy(\n+                new IndefiniteWaitOneShotStartupCheckStrategy().withTimeout(Duration.ofSeconds(3))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dbb06d10a779e000f3d280eff491fe523dd139f0"}, "originalPosition": 59}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "839fa6c4889f74884d4213a2c7bbd45a487390cd", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/839fa6c4889f74884d4213a2c7bbd45a487390cd", "committedDate": "2020-05-21T15:39:01Z", "message": "Update docs/examples/junit4/generic/src/test/java/org/testcontainers/containers/startupcheck/StartupCheckStrategyTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad458ae32290434ca2c67c74e99f343b579fbf27", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/ad458ae32290434ca2c67c74e99f343b579fbf27", "committedDate": "2020-05-21T15:39:34Z", "message": "Merge branch 'master' into feature/1157/startup_strategy_docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2MzI3NTYz", "url": "https://github.com/testcontainers/testcontainers-java/pull/2565#pullrequestreview-416327563", "createdAt": "2020-05-21T17:02:01Z", "commit": {"oid": "ad458ae32290434ca2c67c74e99f343b579fbf27"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3395, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}