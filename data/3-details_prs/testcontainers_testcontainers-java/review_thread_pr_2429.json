{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NjgxOTU4", "number": 2429, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMToyOToxMlrODnzNcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMToyOToxMlrODnzNcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDYwMDgwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/testcontainers/dockerclient/DockerClientProviderStrategy.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMToyOToxMlrOF2AWeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDoyNjo1M1rOF2Ftbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    .orElseGet(() -> {\n          \n          \n            \n                                        return DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\");\n          \n          \n            \n                                    });\n          \n          \n            \n                                    .orElseGet(() -> DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\"));", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392173178", "createdAt": "2020-03-13T11:29:12Z", "author": {"login": "NersesAM"}, "path": "core/src/main/java/org/testcontainers/dockerclient/DockerClientProviderStrategy.java", "diffHunk": "@@ -218,7 +218,9 @@ static String resolveDockerHostIpAddress(DockerClient client, URI dockerHost) {\n                         .filter(it -> it.getGateway() != null)\n                         .findAny()\n                         .map(Network.Ipam.Config::getGateway)\n-                        .orElse(\"localhost\");\n+                        .orElseGet(() -> {\n+                            return DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\");\n+                        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c4606d2e476cf18393d1f147ed63bd9b002c02b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE4MzM3NA==", "bodyText": "No, thank you, it is done for readability :)", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392183374", "createdAt": "2020-03-13T11:53:37Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/dockerclient/DockerClientProviderStrategy.java", "diffHunk": "@@ -218,7 +218,9 @@ static String resolveDockerHostIpAddress(DockerClient client, URI dockerHost) {\n                         .filter(it -> it.getGateway() != null)\n                         .findAny()\n                         .map(Network.Ipam.Config::getGateway)\n-                        .orElse(\"localhost\");\n+                        .orElseGet(() -> {\n+                            return DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\");\n+                        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA=="}, "originalCommit": {"oid": "0c4606d2e476cf18393d1f147ed63bd9b002c02b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjIzOTMzMw==", "bodyText": "ok, thought you had multiline lambda to begin with, but ended up in oneliner later on forgetting to remove the braces :)", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392239333", "createdAt": "2020-03-13T13:50:55Z", "author": {"login": "NersesAM"}, "path": "core/src/main/java/org/testcontainers/dockerclient/DockerClientProviderStrategy.java", "diffHunk": "@@ -218,7 +218,9 @@ static String resolveDockerHostIpAddress(DockerClient client, URI dockerHost) {\n                         .filter(it -> it.getGateway() != null)\n                         .findAny()\n                         .map(Network.Ipam.Config::getGateway)\n-                        .orElse(\"localhost\");\n+                        .orElseGet(() -> {\n+                            return DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\");\n+                        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA=="}, "originalCommit": {"oid": "0c4606d2e476cf18393d1f147ed63bd9b002c02b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI0NTc1Mw==", "bodyText": "ah, no, just I don't like \"long short lambdas\" (lol). Thanks for suggesting anyways! \ud83d\udc4d", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392245753", "createdAt": "2020-03-13T14:01:34Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/dockerclient/DockerClientProviderStrategy.java", "diffHunk": "@@ -218,7 +218,9 @@ static String resolveDockerHostIpAddress(DockerClient client, URI dockerHost) {\n                         .filter(it -> it.getGateway() != null)\n                         .findAny()\n                         .map(Network.Ipam.Config::getGateway)\n-                        .orElse(\"localhost\");\n+                        .orElseGet(() -> {\n+                            return DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\");\n+                        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA=="}, "originalCommit": {"oid": "0c4606d2e476cf18393d1f147ed63bd9b002c02b"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI2MDk3NQ==", "bodyText": "long short lambdas\n\ud83e\udd23", "url": "https://github.com/testcontainers/testcontainers-java/pull/2429#discussion_r392260975", "createdAt": "2020-03-13T14:26:53Z", "author": {"login": "NersesAM"}, "path": "core/src/main/java/org/testcontainers/dockerclient/DockerClientProviderStrategy.java", "diffHunk": "@@ -218,7 +218,9 @@ static String resolveDockerHostIpAddress(DockerClient client, URI dockerHost) {\n                         .filter(it -> it.getGateway() != null)\n                         .findAny()\n                         .map(Network.Ipam.Config::getGateway)\n-                        .orElse(\"localhost\");\n+                        .orElseGet(() -> {\n+                            return DockerClientConfigUtils.getDefaultGateway().orElse(\"localhost\");\n+                        });", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE3MzE3OA=="}, "originalCommit": {"oid": "0c4606d2e476cf18393d1f147ed63bd9b002c02b"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1571, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}