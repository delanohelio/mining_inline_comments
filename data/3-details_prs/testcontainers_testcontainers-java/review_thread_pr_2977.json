{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NTc4MTIy", "number": 2977, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTozMzoyOVrOEM2wmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDoyMzowOFrOENS5Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxOTE1NTQ0OnYy", "diffSide": "RIGHT", "path": "modules/junit-jupiter/src/test/java/org/testcontainers/junit/jupiter/MixedLifecycleTests.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTozMzozMFrOGvNKxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxMTozMzozMFrOGvNKxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjE1MjAwNw==", "bodyText": "unfortunately i had to create a new test class, to have the code representing nearly the same logic as the previous documentation", "url": "https://github.com/testcontainers/testcontainers-java/pull/2977#discussion_r452152007", "createdAt": "2020-07-09T11:33:30Z", "author": {"login": "raynigon"}, "path": "modules/junit-jupiter/src/test/java/org/testcontainers/junit/jupiter/MixedLifecycleTests.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.testcontainers.junit.jupiter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00479b5821c4a156c3bac46ce86c11ee61cac69"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMzc2NDc1OnYy", "diffSide": "RIGHT", "path": "modules/junit-jupiter/src/test/java/org/testcontainers/junit/jupiter/MixedLifecycleTests.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDoyMzowOFrOGv5Weg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxNDoyMzowOFrOGv5Weg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjg3NTg5OA==", "bodyText": "Let's just squeeze in a newline to create some visual separation\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Test\n          \n          \n            \n            \n          \n          \n            \n                @Test", "url": "https://github.com/testcontainers/testcontainers-java/pull/2977#discussion_r452875898", "createdAt": "2020-07-10T14:23:08Z", "author": {"login": "rnorth"}, "path": "modules/junit-jupiter/src/test/java/org/testcontainers/junit/jupiter/MixedLifecycleTests.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.testcontainers.junit.jupiter;\n+\n+import org.apache.http.HttpResponse;\n+import org.apache.http.client.HttpClient;\n+import org.apache.http.client.methods.HttpGet;\n+import org.apache.http.impl.client.HttpClientBuilder;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.containers.DockerComposeContainer;\n+import org.testcontainers.containers.MySQLContainer;\n+import org.testcontainers.containers.PostgreSQLContainer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+\n+// testClass {\n+@Testcontainers\n+class MixedLifecycleTests {\n+\n+    // will be shared between test methods\n+    @Container\n+    private static final MySQLContainer MY_SQL_CONTAINER = new MySQLContainer();\n+\n+    // will be started before and stopped after each test method\n+    @Container\n+    private PostgreSQLContainer postgresqlContainer = new PostgreSQLContainer()\n+        .withDatabaseName(\"foo\")\n+        .withUsername(\"foo\")\n+        .withPassword(\"secret\");\n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00479b5821c4a156c3bac46ce86c11ee61cac69"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1471, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}