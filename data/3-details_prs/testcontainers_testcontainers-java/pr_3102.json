{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4NDQzNzU0", "number": 3102, "title": "Image substitution", "bodyText": "Builds upon #3021:\n\n\nadds a pluggable image substitution mechanism using ServiceLoader, enabling users to perform custom substitution/auditing of images being used by their tests\n\n\nprovides a default implementation that behaves similarly to legacy TestcontainersConfiguration approach (testcontainers.properties)\n\n\nNotes:\n\n\nbehaviour is similar but not quite identical to TestcontainersConfiguration: use of a configured custom image for, e.g. Kafka/Pulsar that does not have a tag specified causes the substitution to take effect for all usages. It seems very unlikely that people would be using a mix of the config file image overrides in some places and specific images specified in code in others.\n\n\nDuplication of default image names in modules vs TestcontainersConfiguration class is intentional: specifying image overrides in testcontainers.properties should be removed in the future.\n\n\nAdd log deprecation warnings when testcontainers.properties image overrides are used. Defer to a future release?", "createdAt": "2020-08-16T13:16:16Z", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102", "merged": true, "mergeCommit": {"oid": "44e8e9ab279cad2cd9d0c9fc5bb6e7799c409999"}, "closed": true, "closedAt": "2020-11-05T19:19:09Z", "author": {"login": "rnorth"}, "timelineItems": {"totalCount": 50, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_dtU6AFqTQ2ODA2Mzg0OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZkEV4AH2gAyNDY4NDQzNzU0OjM4ZjI2OTVjYWRlZWViODhlNmZkMWJjZDMzNGI1MWQ2YzJhNzY4MWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4MDYzODQ5", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-468063849", "createdAt": "2020-08-16T13:20:04Z", "commit": {"oid": "b01ec3e339c8b9058cf1a2cb119cb42e6e049135"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxMzoyMDowNFrOHBSaQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNlQxMzoyMDowNFrOHBSaQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTExMjI1Ng==", "bodyText": "Risk: if so-called tiny image (alpine:3.5) is overridden in config, all usages of that image will be replaced. Substitution is now along image-identity lines rather than semantic lines.", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r471112256", "createdAt": "2020-08-16T13:20:04Z", "author": {"login": "rnorth"}, "path": "core/src/main/java/org/testcontainers/utility/TestcontainersConfiguration.java", "diffHunk": "@@ -238,4 +157,19 @@ private static Properties readProperties(URL url) {\n         }\n         return properties;\n     }\n+\n+    DockerImageName getConfiguredSubstituteImage(DockerImageName original) {\n+        for (final Map.Entry<DockerImageName, String> entry : CONTAINER_MAPPING.entrySet()) {\n+            if (original.isCompatibleWith(entry.getKey())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b01ec3e339c8b9058cf1a2cb119cb42e6e049135"}, "originalPosition": 160}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "deca331ed0e30f2b64939c9861c3916c4c5ea5d4", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/deca331ed0e30f2b64939c9861c3916c4c5ea5d4", "committedDate": "2020-08-27T09:58:07Z", "message": "Reinstate trim for properties file image names"}, "afterCommit": {"oid": "289c4e50db6a356ea48e44404ad6499b5511ff2b", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/289c4e50db6a356ea48e44404ad6499b5511ff2b", "committedDate": "2020-09-30T10:35:13Z", "message": "WIP"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "289c4e50db6a356ea48e44404ad6499b5511ff2b", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/289c4e50db6a356ea48e44404ad6499b5511ff2b", "committedDate": "2020-09-30T10:35:13Z", "message": "WIP"}, "afterCommit": {"oid": "c77675547505eaae487ed5b3cd5cf5f3d7ee46e0", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/c77675547505eaae487ed5b3cd5cf5f3d7ee46e0", "committedDate": "2020-09-30T10:57:31Z", "message": "Image Substitution\n\n* adds a pluggable image substitution mechanism using ServiceLoader, enabling users to perform custom substitution/auditing of images being used by their tests\n* provides a default implementation that behaves similarly to legacy `TestcontainersConfiguration` approach (`testcontainers.properties`)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNzY0NTgx", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-503764581", "createdAt": "2020-10-07T11:05:30Z", "commit": {"oid": "e3cb2a9199b1f7cb0607020279b8093257cf8e9f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMTowNTozMFrOHduCng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMTowNTozMFrOHduCng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkyNTA4Ng==", "bodyText": "not really related to this PR, but perhaps now is a good time to pin socat? :D\nOr re-publish it under testcontainers  as an automated build with FROM alpine/socat:latest to pin it?", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r500925086", "createdAt": "2020-10-07T11:05:30Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/containers/SocatContainer.java", "diffHunk": "@@ -17,7 +17,7 @@\n     private final Map<Integer, String> targets = new HashMap<>();\n \n     public SocatContainer() {\n-        this(TestcontainersConfiguration.getInstance().getSocatDockerImageName());\n+        this(DockerImageName.parse(\"alpine/socat:latest\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3cb2a9199b1f7cb0607020279b8093257cf8e9f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTQ5ODAz", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-506149803", "createdAt": "2020-10-11T07:00:26Z", "commit": {"oid": "7b8cedfd2a9f41edf8d341225c71d63ccacec26a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNzowMDoyNlrOHflEvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNzowMDoyNlrOHflEvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3NTMyNw==", "bodyText": "This is currently only used by the PrefixingImageNameSubstitutor, but I'm very tempted to use it for most of the other properties that are configurable.\nI think most of the properties would benefit from having an equivalent environment variable.\nI know we discussed having the reuse.enabled as a config file property instead of an env var some time back, so perhaps we'd leave that as is?", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r502875327", "createdAt": "2020-10-11T07:00:26Z", "author": {"login": "rnorth"}, "path": "core/src/main/java/org/testcontainers/utility/TestcontainersConfiguration.java", "diffHunk": "@@ -185,6 +167,23 @@ public Integer getImagePullPauseTimeout() {\n         return Integer.parseInt((String) properties.getOrDefault(\"pull.pause.timeout\", \"30\"));\n     }\n \n+    /**\n+     * Gets a configured setting from an environment variable (if present) or a configuration file property otherwise.\n+     * @param propertyName name of configuration file property (dot-separated lower case)\n+     * @return the found value, or null if not set\n+     */\n+    @Nullable\n+    public String getEnvVarOrProperty(final String propertyName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b8cedfd2a9f41edf8d341225c71d63ccacec26a"}, "originalPosition": 195}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTQ5OTcy", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-506149972", "createdAt": "2020-10-11T07:02:45Z", "commit": {"oid": "7b8cedfd2a9f41edf8d341225c71d63ccacec26a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNzowMjo0NVrOHflFqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNzowMjo0NVrOHflFqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3NTU2MA==", "bodyText": "I've made this as a default out-of-the-box substitutor that delegates to both the config file settings and a simple 'prefix' substitutor which can apply a common prefix to all image names.\nI suspect this might be enough for 80% of situations where people need a substitutor, which is why I think it's worth including it by default.", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r502875560", "createdAt": "2020-10-11T07:02:45Z", "author": {"login": "rnorth"}, "path": "core/src/main/java/org/testcontainers/utility/DefaultImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.testcontainers.utility;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * TODO: Javadocs\n+ */\n+@Slf4j\n+public class DefaultImageNameSubstitutor extends ImageNameSubstitutor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b8cedfd2a9f41edf8d341225c71d63ccacec26a"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODY5NjMx", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-512869631", "createdAt": "2020-10-20T15:35:24Z", "commit": {"oid": "789601ab54c912ca7464e1bda277eeb5f846edfb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTozNToyNFrOHlDnMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTozNToyNFrOHlDnMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODYxODU0Nw==", "bodyText": "empty module?", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r508618547", "createdAt": "2020-10-20T15:35:24Z", "author": {"login": "bsideup"}, "path": "modules/prefixing-imagename-substitutor/build.gradle", "diffHunk": "@@ -0,0 +1,5 @@\n+description = \"Testcontainers :: Image Name Substitutors :: Prefxing\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "789601ab54c912ca7464e1bda277eeb5f846edfb"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMDg3NjY0", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-513087664", "createdAt": "2020-10-20T20:02:26Z", "commit": {"oid": "5899bedbdfe0b9b1d6e6119af91c3a77f0c9142f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMDowMjoyNlrOHlO5OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMDowMjoyNlrOHlO5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODgwMzM4NQ==", "bodyText": "This page is still WIP", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r508803385", "createdAt": "2020-10-20T20:02:26Z", "author": {"login": "rnorth"}, "path": "docs/features/pull_rate_limiting.md", "diffHunk": "@@ -0,0 +1,37 @@\n+# Image Registry rate limiting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5899bedbdfe0b9b1d6e6119af91c3a77f0c9142f"}, "originalPosition": 1}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a60b5ffa750620fb3549dde90be31a968458879f", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/a60b5ffa750620fb3549dde90be31a968458879f", "committedDate": "2020-10-21T08:18:48Z", "message": "Change image used for test to avoid image name cache preventing proper pull"}, "afterCommit": {"oid": "da114db4f2165c9d3b97d49c5d11708be119d0e6", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/da114db4f2165c9d3b97d49c5d11708be119d0e6", "committedDate": "2020-10-21T18:26:40Z", "message": "Change image used for test to avoid image name cache preventing proper pull"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5Mzk2ODYx", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-519396861", "createdAt": "2020-10-29T07:37:04Z", "commit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzozNzowNFrOHqPcuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzozNzowNFrOHqPcuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA1NTM1NQ==", "bodyText": "shouldn't it be DEFAULT_IMAGE, similar to KafkaContainer and others?", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r514055355", "createdAt": "2020-10-29T07:37:04Z", "author": {"login": "bsideup"}, "path": "modules/oracle-xe/src/main/java/org/testcontainers/containers/OracleContainer.java", "diffHunk": "@@ -22,8 +22,7 @@\n     private String password = \"oracle\";\n \n     private static String resolveImageName() {\n-        String image = TestcontainersConfiguration.getInstance()\n-            .getProperties().getProperty(\"oracle.container.image\");\n+        String image = TestcontainersConfiguration.getInstance().getOracleImage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5Mzk4NTA0", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-519398504", "createdAt": "2020-10-29T07:39:50Z", "commit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzozOTo1MFrOHqPiCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzozOTo1MFrOHqPiCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA1NjcxNQ==", "bodyText": "Let's add something like \"and deprecated in favour of [link to the image substitution feature]\"", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r514056715", "createdAt": "2020-10-29T07:39:50Z", "author": {"login": "bsideup"}, "path": "docs/features/configuration.md", "diffHunk": "@@ -26,30 +31,39 @@ It takes a couple of seconds, but if you want to speed up your tests, you can di\n \n ## Customizing images\n \n+!!! note\n+    This approach is discouraged and deprecated, but is documented for completeness.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5Mzk5MDgw", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-519399080", "createdAt": "2020-10-29T07:40:52Z", "commit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo0MDo1MlrOHqPj1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo0MDo1MlrOHqPj1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA1NzE3Mg==", "bodyText": "just a random thought:\ncan't we make this test pass by substituting registry.mycompany.com/mirror/mysql with mysql (aka reverse substitution)?", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r514057172", "createdAt": "2020-10-29T07:40:52Z", "author": {"login": "bsideup"}, "path": "docs/examples/junit4/generic/src/test/java/generic/ImageNameSubstitutionTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package generic;\n+\n+\n+import org.junit.Ignore;\n+import org.junit.Test;\n+import org.testcontainers.containers.MySQLContainer;\n+import org.testcontainers.utility.DockerImageName;\n+\n+public class ImageNameSubstitutionTest {\n+\n+    @Test\n+    public void simpleExample() {\n+        try (\n+            // directDockerHubReference {\n+            // Referring directly to an image on Docker Hub (mysql:8.0.22)\n+            final MySQLContainer<?> mysql = new MySQLContainer<>(\n+                DockerImageName.parse(\"mysql:8.0.22\")\n+            )\n+\n+            // start the container and use it for testing\n+            // }\n+        ) {\n+            mysql.start();\n+        }\n+    }\n+\n+    @Test @Ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NDAyMTQw", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-519402140", "createdAt": "2020-10-29T07:46:36Z", "commit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo0NjozNlrOHqPtqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo0NjozNlrOHqPtqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA1OTY4OA==", "bodyText": "WDYT about either adding an extra assert after the property is removed (to ensure that it is not cached, for example) or splitting the test into 2 (user properties, environment)?", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r514059688", "createdAt": "2020-10-29T07:46:36Z", "author": {"login": "bsideup"}, "path": "core/src/test/java/org/testcontainers/utility/TestcontainersConfigurationTest.java", "diffHunk": "@@ -1,57 +1,112 @@\n package org.testcontainers.utility;\n \n-import static org.rnorth.visibleassertions.VisibleAssertions.assertEquals;\n-import static org.rnorth.visibleassertions.VisibleAssertions.assertFalse;\n-import static org.rnorth.visibleassertions.VisibleAssertions.assertTrue;\n+import org.junit.Before;\n+import org.junit.Test;\n \n+import java.util.HashMap;\n+import java.util.Map;\n import java.util.Properties;\n import java.util.UUID;\n-import org.junit.Test;\n+\n+import static org.rnorth.visibleassertions.VisibleAssertions.assertEquals;\n+import static org.rnorth.visibleassertions.VisibleAssertions.assertFalse;\n+import static org.rnorth.visibleassertions.VisibleAssertions.assertTrue;\n \n public class TestcontainersConfigurationTest {\n \n-    final Properties environmentProperties = new Properties();\n+    private Properties userProperties;\n+    private Properties classpathProperties;\n+    private Map<String, String> environment;\n \n-    final Properties classpathProperties = new Properties();\n+    @Before\n+    public void setUp() {\n+        userProperties = new Properties();\n+        classpathProperties = new Properties();\n+        environment = new HashMap<>();\n+    }\n \n     @Test\n-    public void shouldReadChecksFromEnvironmentOnly() {\n+    public void shouldSubstituteImageNamesFromClasspathProperties() {\n+        classpathProperties.setProperty(\"ryuk.container.image\", \"foo:version\");\n+        assertEquals(\n+            \"an image name can be pulled from classpath properties\",\n+            DockerImageName.parse(\"foo:version\"),\n+            newConfig().getConfiguredSubstituteImage(DockerImageName.parse(\"testcontainers/ryuk:any\"))\n+        );\n+    }\n+\n+    @Test\n+    public void shouldSubstituteImageNamesFromUserProperties() {\n+        userProperties.setProperty(\"ryuk.container.image\", \"foo:version\");\n+        assertEquals(\n+            \"an image name can be pulled from user properties\",\n+            DockerImageName.parse(\"foo:version\"),\n+            newConfig().getConfiguredSubstituteImage(DockerImageName.parse(\"testcontainers/ryuk:any\"))\n+        );\n+    }\n+\n+    @Test\n+    public void shouldSubstituteImageNamesFromEnvironmentVariables() {\n+        environment.put(\"TESTCONTAINERS_RYUK_CONTAINER_IMAGE\", \"foo:version\");\n+        assertEquals(\n+            \"an image name can be pulled from an environment variable\",\n+            DockerImageName.parse(\"foo:version\"),\n+            newConfig().getConfiguredSubstituteImage(DockerImageName.parse(\"testcontainers/ryuk:any\"))\n+        );\n+    }\n+\n+    @Test\n+    public void shouldReadChecksFromUserPropertiesOrEnvironmentOnly() {\n         assertFalse(\"checks enabled by default\", newConfig().isDisableChecks());\n \n         classpathProperties.setProperty(\"checks.disable\", \"true\");\n         assertFalse(\"checks are not affected by classpath properties\", newConfig().isDisableChecks());\n \n-        environmentProperties.setProperty(\"checks.disable\", \"true\");\n-        assertTrue(\"checks disabled\", newConfig().isDisableChecks());\n+        userProperties.setProperty(\"checks.disable\", \"true\");\n+        assertTrue(\"checks disabled via user properties\", newConfig().isDisableChecks());\n+\n+        userProperties.remove(\"checks.disable\");\n+        environment.put(\"TESTCONTAINERS_CHECKS_DISABLE\", \"true\");\n+        assertTrue(\"checks disabled via env var\", newConfig().isDisableChecks());\n     }\n \n     @Test\n-    public void shouldReadDockerClientStrategyFromEnvironmentOnly() {\n+    public void shouldReadDockerClientStrategyFromUserPropertiesOrEnvironmentOnly() {\n         String currentValue = newConfig().getDockerClientStrategyClassName();\n \n         classpathProperties.setProperty(\"docker.client.strategy\", UUID.randomUUID().toString());\n         assertEquals(\"Docker client strategy is not affected by classpath properties\", currentValue, newConfig().getDockerClientStrategyClassName());\n \n-        environmentProperties.setProperty(\"docker.client.strategy\", \"foo\");\n-        assertEquals(\"Docker client strategy is changed\", \"foo\", newConfig().getDockerClientStrategyClassName());\n+        userProperties.setProperty(\"docker.client.strategy\", \"foo\");\n+        assertEquals(\"Docker client strategy is changed by user property\", \"foo\", newConfig().getDockerClientStrategyClassName());\n+\n+        userProperties.remove(\"docker.client.strategy\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "originalPosition": 95}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NDAzNjI3", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-519403627", "createdAt": "2020-10-29T07:49:21Z", "commit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo0OToyMVrOHqPyhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo0OToyMVrOHqPyhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2MDkzMg==", "bodyText": "we should also add a test for images from custom registries (e.g. mcr.microsoft.com/mssql/server), to define the behaviour", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r514060932", "createdAt": "2020-10-29T07:49:21Z", "author": {"login": "bsideup"}, "path": "core/src/test/java/org/testcontainers/utility/PrefixingImageNameSubstitutorTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+package org.testcontainers.utility;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.rnorth.visibleassertions.VisibleAssertions.assertEquals;\n+import static org.testcontainers.utility.PrefixingImageNameSubstitutor.PROPERTY_KEY;\n+\n+public class PrefixingImageNameSubstitutorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NDA0MTg4", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-519404188", "createdAt": "2020-10-29T07:50:19Z", "commit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo1MDoyMFrOHqP0bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo1MDoyMFrOHqP0bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2MTQyMA==", "bodyText": "JFYI we also have MockTestcontainersConfigurationRule available :)", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r514061420", "createdAt": "2020-10-29T07:50:20Z", "author": {"login": "bsideup"}, "path": "core/src/test/java/org/testcontainers/utility/DefaultImageNameSubstitutorTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.testcontainers.utility;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.testcontainers.utility.ImageNameSubstitutor.LogWrappedImageNameSubstitutor;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class DefaultImageNameSubstitutorTest {\n+\n+    public static final DockerImageName ORIGINAL_IMAGE = DockerImageName.parse(\"foo\");\n+    public static final DockerImageName SUBSTITUTE_IMAGE = DockerImageName.parse(\"bar\");\n+    private ConfigurationFileImageNameSubstitutor underTest;\n+    private TestcontainersConfiguration mockConfiguration;\n+\n+    @Before\n+    public void setUp() {\n+        mockConfiguration = mock(TestcontainersConfiguration.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NDA0NTgx", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-519404581", "createdAt": "2020-10-29T07:50:58Z", "commit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo1MDo1OFrOHqP1pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo1MDo1OFrOHqP1pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2MTczMw==", "bodyText": "duplicate of ImageNameSubstitutorTest#simpleServiceLoadingTest?", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r514061733", "createdAt": "2020-10-29T07:50:58Z", "author": {"login": "bsideup"}, "path": "core/src/test/java/org/testcontainers/utility/DefaultImageNameSubstitutorTest.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.testcontainers.utility;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.testcontainers.utility.ImageNameSubstitutor.LogWrappedImageNameSubstitutor;\n+\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+public class DefaultImageNameSubstitutorTest {\n+\n+    public static final DockerImageName ORIGINAL_IMAGE = DockerImageName.parse(\"foo\");\n+    public static final DockerImageName SUBSTITUTE_IMAGE = DockerImageName.parse(\"bar\");\n+    private ConfigurationFileImageNameSubstitutor underTest;\n+    private TestcontainersConfiguration mockConfiguration;\n+\n+    @Before\n+    public void setUp() {\n+        mockConfiguration = mock(TestcontainersConfiguration.class);\n+        underTest = new ConfigurationFileImageNameSubstitutor(mockConfiguration);\n+    }\n+\n+    @Test\n+    public void testConfigurationLookup() {\n+        when(mockConfiguration.getConfiguredSubstituteImage(eq(ORIGINAL_IMAGE))).thenReturn(SUBSTITUTE_IMAGE);\n+\n+        final DockerImageName substitute = underTest.apply(ORIGINAL_IMAGE);\n+\n+        assertEquals(\"match is found\", SUBSTITUTE_IMAGE, substitute);\n+        assertTrue(\"compatibility is automatically set\", substitute.isCompatibleWith(ORIGINAL_IMAGE));\n+    }\n+\n+    @Test\n+    public void testServiceLoaderFindsDefaultImplementation() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NDA3MTg1", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-519407185", "createdAt": "2020-10-29T07:55:31Z", "commit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo1NTozMVrOHqP9ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo1NTozMVrOHqP9ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2MzgwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class PrefixingImageNameSubstitutor extends ImageNameSubstitutor {\n          \n          \n            \n            public final class PrefixingImageNameSubstitutor extends ImageNameSubstitutor {", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r514063802", "createdAt": "2020-10-29T07:55:31Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/utility/PrefixingImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package org.testcontainers.utility;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import lombok.NoArgsConstructor;\n+import org.testcontainers.UnstableAPI;\n+\n+/**\n+ * An {@link ImageNameSubstitutor} which applies a prefix to all image names, e.g. a private registry host and path.\n+ * The prefix may be set via an environment variable (<code>TESTCONTAINERS_IMAGE_NAME_PREFIX</code>) or an equivalent\n+ * configuration file entry (see {@link TestcontainersConfiguration}).\n+ */\n+@UnstableAPI\n+@NoArgsConstructor\n+public class PrefixingImageNameSubstitutor extends ImageNameSubstitutor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NDA4MDcy", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-519408072", "createdAt": "2020-10-29T07:57:03Z", "commit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo1NzowM1rOHqQASA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzo1NzowM1rOHqQASA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2NDQ1Ng==", "bodyText": "Suggestion: let's add a warning that this class is public only because Java's ServiceLoader requires it to be public, similar to:\nhttps://github.com/reactor/reactor-core/blob/246251727bb5020c21abc1d34847d29afd8c7ec3/reactor-core/src/main/java/reactor/core/scheduler/ReactorBlockHoundIntegration.java#L27-L28", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r514064456", "createdAt": "2020-10-29T07:57:03Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/utility/PrefixingImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package org.testcontainers.utility;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import lombok.NoArgsConstructor;\n+import org.testcontainers.UnstableAPI;\n+\n+/**\n+ * An {@link ImageNameSubstitutor} which applies a prefix to all image names, e.g. a private registry host and path.\n+ * The prefix may be set via an environment variable (<code>TESTCONTAINERS_IMAGE_NAME_PREFIX</code>) or an equivalent\n+ * configuration file entry (see {@link TestcontainersConfiguration}).\n+ */\n+@UnstableAPI\n+@NoArgsConstructor\n+public class PrefixingImageNameSubstitutor extends ImageNameSubstitutor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cdb94f952392f003d10b29f98e173781bb97d37"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a51f3a520a671dc66a4b98ebb93ee05613d0ea23", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/a51f3a520a671dc66a4b98ebb93ee05613d0ea23", "committedDate": "2020-10-29T10:47:47Z", "message": "Updates following review comments"}, "afterCommit": {"oid": "a7f72af07e89306dae2e80f67e9f71d949fbd50c", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/a7f72af07e89306dae2e80f67e9f71d949fbd50c", "committedDate": "2020-10-29T10:50:41Z", "message": "Image substitution\n\nBuilds upon #3021:\n\n* adds a pluggable image substitution mechanism using ServiceLoader, enabling users to perform custom substitution/auditing of images being used by their tests\n\n* provides a default implementation that behaves similarly to legacy `TestcontainersConfiguration` approach (`testcontainers.properties`), but also...\n\n* For many orgs, sticking a prefix on the front of image names might be enough to use a private registry. I've added a default behaviour whereby, if a particular environment variable is present, image names are automatically substituted. e.g. `TESTCONTAINERS_IMAGE_NAME_PREFIX=my.registry.com/` would transform `redis` to `my.registry.com/redis` etc.\n\nNotes:\n\n* behaviour is similar but not quite identical to `TestcontainersConfiguration`: use of a configured custom image for, e.g. Kafka/Pulsar that does not have a tag specified causes the substitution to take effect for all usages. It seems very unlikely that people would be using a mix of the config file image overrides in some places _and_ specific images specified in code in others.\n\n* Duplication of default image names in modules vs `TestcontainersConfiguration` class is intentional: specifying image overrides in `testcontainers.properties` should be removed in the future.\n\n* ~Add log deprecation warnings when `testcontainers.properties` image overrides are used.~ Defer to a future release?"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a7f72af07e89306dae2e80f67e9f71d949fbd50c", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/a7f72af07e89306dae2e80f67e9f71d949fbd50c", "committedDate": "2020-10-29T10:50:41Z", "message": "Image substitution\n\nBuilds upon #3021:\n\n* adds a pluggable image substitution mechanism using ServiceLoader, enabling users to perform custom substitution/auditing of images being used by their tests\n\n* provides a default implementation that behaves similarly to legacy `TestcontainersConfiguration` approach (`testcontainers.properties`), but also...\n\n* For many orgs, sticking a prefix on the front of image names might be enough to use a private registry. I've added a default behaviour whereby, if a particular environment variable is present, image names are automatically substituted. e.g. `TESTCONTAINERS_IMAGE_NAME_PREFIX=my.registry.com/` would transform `redis` to `my.registry.com/redis` etc.\n\nNotes:\n\n* behaviour is similar but not quite identical to `TestcontainersConfiguration`: use of a configured custom image for, e.g. Kafka/Pulsar that does not have a tag specified causes the substitution to take effect for all usages. It seems very unlikely that people would be using a mix of the config file image overrides in some places _and_ specific images specified in code in others.\n\n* Duplication of default image names in modules vs `TestcontainersConfiguration` class is intentional: specifying image overrides in `testcontainers.properties` should be removed in the future.\n\n* ~Add log deprecation warnings when `testcontainers.properties` image overrides are used.~ Defer to a future release?"}, "afterCommit": {"oid": "a51f3a520a671dc66a4b98ebb93ee05613d0ea23", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/a51f3a520a671dc66a4b98ebb93ee05613d0ea23", "committedDate": "2020-10-29T10:47:47Z", "message": "Updates following review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a51f3a520a671dc66a4b98ebb93ee05613d0ea23", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/a51f3a520a671dc66a4b98ebb93ee05613d0ea23", "committedDate": "2020-10-29T10:47:47Z", "message": "Updates following review comments"}, "afterCommit": {"oid": "83df05af09a4b1536a744b0360652ff7c12e5396", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/83df05af09a4b1536a744b0360652ff7c12e5396", "committedDate": "2020-10-29T11:02:48Z", "message": "Image substitution\n\nBuilds upon #3021:\n\n* adds a pluggable image substitution mechanism using ServiceLoader, enabling users to perform custom substitution/auditing of images being used by their tests\n\n* provides a default implementation that behaves similarly to legacy `TestcontainersConfiguration` approach (`testcontainers.properties`), but also...\n\n* For many orgs, sticking a prefix on the front of image names might be enough to use a private registry. I've added a default behaviour whereby, if a particular environment variable is present, image names are automatically substituted. e.g. `TESTCONTAINERS_IMAGE_NAME_PREFIX=my.registry.com/` would transform `redis` to `my.registry.com/redis` etc.\n\nNotes:\n\n* behaviour is similar but not quite identical to `TestcontainersConfiguration`: use of a configured custom image for, e.g. Kafka/Pulsar that does not have a tag specified causes the substitution to take effect for all usages. It seems very unlikely that people would be using a mix of the config file image overrides in some places _and_ specific images specified in code in others.\n\n* Duplication of default image names in modules vs `TestcontainersConfiguration` class is intentional: specifying image overrides in `testcontainers.properties` should be removed in the future.\n\n* ~Add log deprecation warnings when `testcontainers.properties` image overrides are used.~ Defer to a future release?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f51dfa6206162baa610463ce5d56358b5812d60", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/0f51dfa6206162baa610463ce5d56358b5812d60", "committedDate": "2020-10-29T11:42:21Z", "message": "Refactor Testcontainers configuration to allow config by env var"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "950af34178f3a28a3747b0b446738e83c7b62bbf", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/950af34178f3a28a3747b0b446738e83c7b62bbf", "committedDate": "2020-10-29T12:14:54Z", "message": "Add Image substitution mechanism\n\nBuilds upon #3021 and #3411:\n\n* adds a pluggable image substitution mechanism using ServiceLoader, enabling users to perform custom substitution/auditing of images being used by their tests\n\n* provides a default implementation that behaves similarly to legacy `TestcontainersConfiguration` approach (`testcontainers.properties`)\n\nNotes:\n\n* behaviour is similar but not quite identical to `TestcontainersConfiguration`: use of a configured custom image for, e.g. Kafka/Pulsar that does not have a tag specified causes the substitution to take effect for all usages. It seems very unlikely that people would be using a mix of the config file image overrides in some places _and_ specific images specified in code in others.\n\n* Duplication of default image names in modules vs `TestcontainersConfiguration` class is intentional: specifying image overrides in `testcontainers.properties` should be removed in the future.\n\n* ~Add log deprecation warnings when `testcontainers.properties` image overrides are used.~ Defer to a future release?"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83df05af09a4b1536a744b0360652ff7c12e5396", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/83df05af09a4b1536a744b0360652ff7c12e5396", "committedDate": "2020-10-29T11:02:48Z", "message": "Image substitution\n\nBuilds upon #3021:\n\n* adds a pluggable image substitution mechanism using ServiceLoader, enabling users to perform custom substitution/auditing of images being used by their tests\n\n* provides a default implementation that behaves similarly to legacy `TestcontainersConfiguration` approach (`testcontainers.properties`), but also...\n\n* For many orgs, sticking a prefix on the front of image names might be enough to use a private registry. I've added a default behaviour whereby, if a particular environment variable is present, image names are automatically substituted. e.g. `TESTCONTAINERS_IMAGE_NAME_PREFIX=my.registry.com/` would transform `redis` to `my.registry.com/redis` etc.\n\nNotes:\n\n* behaviour is similar but not quite identical to `TestcontainersConfiguration`: use of a configured custom image for, e.g. Kafka/Pulsar that does not have a tag specified causes the substitution to take effect for all usages. It seems very unlikely that people would be using a mix of the config file image overrides in some places _and_ specific images specified in code in others.\n\n* Duplication of default image names in modules vs `TestcontainersConfiguration` class is intentional: specifying image overrides in `testcontainers.properties` should be removed in the future.\n\n* ~Add log deprecation warnings when `testcontainers.properties` image overrides are used.~ Defer to a future release?"}, "afterCommit": {"oid": "950af34178f3a28a3747b0b446738e83c7b62bbf", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/950af34178f3a28a3747b0b446738e83c7b62bbf", "committedDate": "2020-10-29T12:14:54Z", "message": "Add Image substitution mechanism\n\nBuilds upon #3021 and #3411:\n\n* adds a pluggable image substitution mechanism using ServiceLoader, enabling users to perform custom substitution/auditing of images being used by their tests\n\n* provides a default implementation that behaves similarly to legacy `TestcontainersConfiguration` approach (`testcontainers.properties`)\n\nNotes:\n\n* behaviour is similar but not quite identical to `TestcontainersConfiguration`: use of a configured custom image for, e.g. Kafka/Pulsar that does not have a tag specified causes the substitution to take effect for all usages. It seems very unlikely that people would be using a mix of the config file image overrides in some places _and_ specific images specified in code in others.\n\n* Duplication of default image names in modules vs `TestcontainersConfiguration` class is intentional: specifying image overrides in `testcontainers.properties` should be removed in the future.\n\n* ~Add log deprecation warnings when `testcontainers.properties` image overrides are used.~ Defer to a future release?"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "51c320ee285cf8010e777e48daed186b4ec6d6aa", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/51c320ee285cf8010e777e48daed186b4ec6d6aa", "committedDate": "2020-10-29T13:17:10Z", "message": "Merge remote-tracking branch 'origin/master' into image-substitutor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b02c734d12858a416a11f49a1cd978a350a54977", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/b02c734d12858a416a11f49a1cd978a350a54977", "committedDate": "2020-10-29T13:20:17Z", "message": "Remove extraneous change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "192475997afd7868e3b2674066c4e4acd8c6aeb1", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/192475997afd7868e3b2674066c4e4acd8c6aeb1", "committedDate": "2020-10-29T13:31:38Z", "message": "Un-ignore docs example test by implementing a 'reversing' image name substitutor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5Njc4NTMz", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-519678533", "createdAt": "2020-10-29T13:44:50Z", "commit": {"oid": "192475997afd7868e3b2674066c4e4acd8c6aeb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzo0NDo1MVrOHqcfAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzo0NDo1MVrOHqcfAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI2ODkyOA==", "bodyText": "do we need to delegate here? I thought that ConfigurationFileImageNameSubstitutor will be applied before (given its -2 priority) this one by the SPI mechanism in ImageNameSubstitutor", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r514268928", "createdAt": "2020-10-29T13:44:51Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/utility/DefaultImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,43 @@\n+package org.testcontainers.utility;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * Testcontainers' default implementation of {@link ImageNameSubstitutor}.\n+ * Delegates to {@link ConfigurationFileImageNameSubstitutor}.\n+ * <p>\n+ * WARNING: this class is not intended to be public, but {@link java.util.ServiceLoader}\n+ * requires it to be so. Public visibility DOES NOT make it part of the public API.\n+ */\n+@Slf4j\n+public class DefaultImageNameSubstitutor extends ImageNameSubstitutor {\n+\n+    private final ConfigurationFileImageNameSubstitutor configurationFileImageNameSubstitutor;\n+\n+    public DefaultImageNameSubstitutor() {\n+        configurationFileImageNameSubstitutor = new ConfigurationFileImageNameSubstitutor();\n+    }\n+\n+    @VisibleForTesting\n+    DefaultImageNameSubstitutor(\n+        final ConfigurationFileImageNameSubstitutor configurationFileImageNameSubstitutor\n+    ) {\n+        this.configurationFileImageNameSubstitutor = configurationFileImageNameSubstitutor;\n+    }\n+\n+    @Override\n+    public DockerImageName apply(final DockerImageName original) {\n+        return configurationFileImageNameSubstitutor.apply(original);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192475997afd7868e3b2674066c4e4acd8c6aeb1"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NjgxODAw", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-519681800", "createdAt": "2020-10-29T13:48:06Z", "commit": {"oid": "192475997afd7868e3b2674066c4e4acd8c6aeb1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzo0ODowN1rOHqcoZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMzo0ODowN1rOHqcoZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDI3MTMzMg==", "bodyText": "why not just return original? Given the priority of 1, I thought that TestSpecificImageNameSubstitutor will go after the default (0) one :)", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r514271332", "createdAt": "2020-10-29T13:48:07Z", "author": {"login": "bsideup"}, "path": "docs/examples/junit4/generic/src/test/java/generic/support/TestSpecificImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package generic.support;\n+\n+import org.testcontainers.utility.DefaultImageNameSubstitutor;\n+import org.testcontainers.utility.DockerImageName;\n+import org.testcontainers.utility.ImageNameSubstitutor;\n+\n+/**\n+ * An {@link ImageNameSubstitutor} which makes it possible to use fake image names in\n+ * {@link generic.ImageNameSubstitutionTest}. This implementation simply reverses a fake image name when presented, and\n+ * is hardcoded to act upon the specific fake name in that test.\n+ */\n+public class TestSpecificImageNameSubstitutor extends ImageNameSubstitutor {\n+\n+    private final DefaultImageNameSubstitutor defaultImageNameSubstitutor = new DefaultImageNameSubstitutor();\n+\n+    @Override\n+    public DockerImageName apply(final DockerImageName original) {\n+        if (original.equals(DockerImageName.parse(\"registry.mycompany.com/mirror/mysql:8.0.22\"))) {\n+            return defaultImageNameSubstitutor.apply(DockerImageName.parse(\"mysql\"));\n+        } else {\n+            return defaultImageNameSubstitutor.apply(original);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192475997afd7868e3b2674066c4e4acd8c6aeb1"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f94089bb8689914e92cb208ecbdfc28bf2d31fc5", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/f94089bb8689914e92cb208ecbdfc28bf2d31fc5", "committedDate": "2020-10-29T20:37:51Z", "message": "Use configuration, not service loader, to select an ImageNameSubstitutor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d0866949abfe9738fab6bef06342c664398d111", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/3d0866949abfe9738fab6bef06342c664398d111", "committedDate": "2020-10-29T20:51:26Z", "message": "Add check for order of config setting precedence"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8dabd4b940ca692a97cd9142c57ae9cbe79ea4b", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/f8dabd4b940ca692a97cd9142c57ae9cbe79ea4b", "committedDate": "2020-10-29T21:28:00Z", "message": "Extract classpath scanner and support finding of multiple resources"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23ac3941d886e0b9a47e8df43314b2d2fa506ee0", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/23ac3941d886e0b9a47e8df43314b2d2fa506ee0", "committedDate": "2020-10-30T14:03:36Z", "message": "Introduce deterministic merging of classpath properties files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09e4e7caeb2c4b8ca1fc1de9e9b909ab02ef72c3", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/09e4e7caeb2c4b8ca1fc1de9e9b909ab02ef72c3", "committedDate": "2020-10-30T14:03:53Z", "message": "Update docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1974059f102ce333b990d1d12ab60396d9f379b", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/d1974059f102ce333b990d1d12ab60396d9f379b", "committedDate": "2020-10-30T14:05:08Z", "message": "Update docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3cf653ba197e8de7a6559d0caa96a2ad5ffc3da7", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/3cf653ba197e8de7a6559d0caa96a2ad5ffc3da7", "committedDate": "2020-10-30T15:20:02Z", "message": "Remove service loader reference"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTY1ODkx", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-521165891", "createdAt": "2020-10-31T20:04:48Z", "commit": {"oid": "3cf653ba197e8de7a6559d0caa96a2ad5ffc3da7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQyMDowNDo0OFrOHrpsjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQyMDowNDo0OFrOHrpsjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUzMzk2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class ConfigurationFileImageNameSubstitutor extends ImageNameSubstitutor {\n          \n          \n            \n            public final class ConfigurationFileImageNameSubstitutor extends ImageNameSubstitutor {", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r515533966", "createdAt": "2020-10-31T20:04:48Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/utility/ConfigurationFileImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.testcontainers.utility;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * {@link ImageNameSubstitutor} which takes replacement image names from configuration.\n+ * See {@link TestcontainersConfiguration} for the subset of image names which can be substituted using this mechanism.\n+ * <p>\n+ * WARNING: this class is not intended to be public, but {@link java.util.ServiceLoader}\n+ * requires it to be so. Public visibility DOES NOT make it part of the public API.\n+ */\n+@Slf4j\n+public class ConfigurationFileImageNameSubstitutor extends ImageNameSubstitutor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cf653ba197e8de7a6559d0caa96a2ad5ffc3da7"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTY1OTU0", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-521165954", "createdAt": "2020-10-31T20:05:50Z", "commit": {"oid": "3cf653ba197e8de7a6559d0caa96a2ad5ffc3da7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQyMDowNTo1MVrOHrps-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQyMDowNTo1MVrOHrps-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUzNDA3Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class DefaultImageNameSubstitutor extends ImageNameSubstitutor {\n          \n          \n            \n            public final class DefaultImageNameSubstitutor extends ImageNameSubstitutor {", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r515534073", "createdAt": "2020-10-31T20:05:51Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/utility/DefaultImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package org.testcontainers.utility;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * Testcontainers' default implementation of {@link ImageNameSubstitutor}.\n+ * Delegates to {@link ConfigurationFileImageNameSubstitutor}.\n+ */\n+@Slf4j\n+public class DefaultImageNameSubstitutor extends ImageNameSubstitutor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cf653ba197e8de7a6559d0caa96a2ad5ffc3da7"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTY1OTg2", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-521165986", "createdAt": "2020-10-31T20:06:21Z", "commit": {"oid": "3cf653ba197e8de7a6559d0caa96a2ad5ffc3da7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQyMDowNjoyMVrOHrptJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQyMDowNjoyMVrOHrptJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUzNDExNg==", "bodyText": "outdated comment\nbtw, since we delegate to it, perhaps we can make it package private?", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r515534116", "createdAt": "2020-10-31T20:06:21Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/utility/ConfigurationFileImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package org.testcontainers.utility;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * {@link ImageNameSubstitutor} which takes replacement image names from configuration.\n+ * See {@link TestcontainersConfiguration} for the subset of image names which can be substituted using this mechanism.\n+ * <p>\n+ * WARNING: this class is not intended to be public, but {@link java.util.ServiceLoader}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cf653ba197e8de7a6559d0caa96a2ad5ffc3da7"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTY2MjA5", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-521166209", "createdAt": "2020-10-31T20:09:56Z", "commit": {"oid": "3cf653ba197e8de7a6559d0caa96a2ad5ffc3da7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQyMDowOTo1NlrOHrpuWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQyMDowOTo1NlrOHrpuWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUzNDQyNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return null;\n          \n          \n            \n                    return original;", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r515534425", "createdAt": "2020-10-31T20:09:56Z", "author": {"login": "bsideup"}, "path": "core/src/test/java/org/testcontainers/utility/FakeImageSubstitutor.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package org.testcontainers.utility;\n+\n+public class FakeImageSubstitutor extends ImageNameSubstitutor {\n+    @Override\n+    public DockerImageName apply(final DockerImageName original) {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cf653ba197e8de7a6559d0caa96a2ad5ffc3da7"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTY2MjIx", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-521166221", "createdAt": "2020-10-31T20:10:06Z", "commit": {"oid": "3cf653ba197e8de7a6559d0caa96a2ad5ffc3da7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQyMDoxMDowNlrOHrpueQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQyMDoxMDowNlrOHrpueQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUzNDQ1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return null;\n          \n          \n            \n                    return \"FakeImageSubstitutor\";", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r515534457", "createdAt": "2020-10-31T20:10:06Z", "author": {"login": "bsideup"}, "path": "core/src/test/java/org/testcontainers/utility/FakeImageSubstitutor.java", "diffHunk": "@@ -0,0 +1,13 @@\n+package org.testcontainers.utility;\n+\n+public class FakeImageSubstitutor extends ImageNameSubstitutor {\n+    @Override\n+    public DockerImageName apply(final DockerImageName original) {\n+        return null;\n+    }\n+\n+    @Override\n+    protected String getDescription() {\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cf653ba197e8de7a6559d0caa96a2ad5ffc3da7"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9651adedac0933ce5ed94cccfaab6f7e40cc19b7", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/9651adedac0933ce5ed94cccfaab6f7e40cc19b7", "committedDate": "2020-11-01T12:50:42Z", "message": "Chain substitution through default and configured implementations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcd2f7664c4722256da057cb43e52e8784ceb1cd", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/bcd2f7664c4722256da057cb43e52e8784ceb1cd", "committedDate": "2020-11-04T09:12:03Z", "message": "Small tweaks following review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "008b0365f17d87594abb4ab4e140011204dfa4af", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/008b0365f17d87594abb4ab4e140011204dfa4af", "committedDate": "2020-11-04T10:34:15Z", "message": "Fix test compile error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6587210a35416d59cc33dda1e6be70f3bdbf239e", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/6587210a35416d59cc33dda1e6be70f3bdbf239e", "committedDate": "2020-11-05T09:47:25Z", "message": "Add UnstableAPI annotation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MTg3OTEw", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-524187910", "createdAt": "2020-11-05T11:55:19Z", "commit": {"oid": "6587210a35416d59cc33dda1e6be70f3bdbf239e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMTo1NToyMFrOHt_8QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMTo1NToyMFrOHt_8QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk5NTU4NA==", "bodyText": "is it still needed, with the latest change where we always apply the default?\nIt is a nit but, since we refer to it from the docs, serves as an important example :)", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r517995584", "createdAt": "2020-11-05T11:55:20Z", "author": {"login": "bsideup"}, "path": "docs/examples/junit4/generic/src/test/java/org/testcontainers/utility/TestSpecificImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,25 @@\n+package org.testcontainers.utility;\n+\n+/**\n+ * An {@link ImageNameSubstitutor} which makes it possible to use fake image names in\n+ * {@link generic.ImageNameSubstitutionTest}. This implementation simply reverses a fake image name when presented, and\n+ * is hardcoded to act upon the specific fake name in that test.\n+ */\n+public class TestSpecificImageNameSubstitutor extends ImageNameSubstitutor {\n+\n+    private final DefaultImageNameSubstitutor defaultImageNameSubstitutor = new DefaultImageNameSubstitutor();\n+\n+    @Override\n+    public DockerImageName apply(final DockerImageName original) {\n+        if (original.equals(DockerImageName.parse(\"registry.mycompany.com/mirror/mysql:8.0.22\"))) {\n+            return defaultImageNameSubstitutor.apply(DockerImageName.parse(\"mysql\"));\n+        } else {\n+            return defaultImageNameSubstitutor.apply(original);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6587210a35416d59cc33dda1e6be70f3bdbf239e"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MTkwNDA0", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-524190404", "createdAt": "2020-11-05T11:58:36Z", "commit": {"oid": "6587210a35416d59cc33dda1e6be70f3bdbf239e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMTo1ODozNlrOHuADrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMTo1ODozNlrOHuADrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk5NzQ4Ng==", "bodyText": "WDYT about using ConfigurationFileImageNameSubstitutor directly, since we no longer expose DefaultImageNameSubstitutor to public?", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#discussion_r517997486", "createdAt": "2020-11-05T11:58:36Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/utility/ImageNameSubstitutor.java", "diffHunk": "@@ -0,0 +1,130 @@\n+package org.testcontainers.utility;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import lombok.extern.slf4j.Slf4j;\n+import org.testcontainers.UnstableAPI;\n+\n+import java.util.function.Function;\n+\n+/**\n+ * An image name substitutor converts a Docker image name, as may be specified in code, to an alternative name.\n+ * This is intended to provide a way to override image names, for example to enforce pulling of images from a private\n+ * registry.\n+ * <p>\n+ * This is marked as @{@link UnstableAPI} as this API is new. While we do not think major changes will be required, we\n+ * will react to feedback if necessary.\n+ */\n+@Slf4j\n+@UnstableAPI\n+public abstract class ImageNameSubstitutor implements Function<DockerImageName, DockerImageName> {\n+\n+    @VisibleForTesting\n+    static ImageNameSubstitutor instance;\n+\n+    @VisibleForTesting\n+    static ImageNameSubstitutor defaultImplementation = new DefaultImageNameSubstitutor();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6587210a35416d59cc33dda1e6be70f3bdbf239e"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16ef03d2da8a67362497544d2ab4a9efa93174d7", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/16ef03d2da8a67362497544d2ab4a9efa93174d7", "committedDate": "2020-11-05T12:07:41Z", "message": "Move TestSpecificImageNameSubstitutor back to original package and remove duplicate use of default substitutor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjIwNzk4", "url": "https://github.com/testcontainers/testcontainers-java/pull/3102#pullrequestreview-524220798", "createdAt": "2020-11-05T12:41:04Z", "commit": {"oid": "16ef03d2da8a67362497544d2ab4a9efa93174d7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38f2695cadeeeb88e6fd1bcd334b51d6c2a7681f", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/38f2695cadeeeb88e6fd1bcd334b51d6c2a7681f", "committedDate": "2020-11-05T15:26:40Z", "message": "Merge branch 'master' into image-substitutor"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3335, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}