{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2Mzg0MTU1", "number": 2711, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDowMDo0NlrOD8N4ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDowMTo0NVrOD8N5mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDY4NTgxOnYy", "diffSide": "RIGHT", "path": "modules/pulsar/src/main/java/org/testcontainers/containers/PulsarContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDowMDo0NlrOGVBc-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDowMDo0NlrOGVBc-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5NzA4Mg==", "bodyText": "I'd be better to store it as a boolean flag and decide which command to use in configure. Also, I'd use a composite wait strategy that will wait for both Pulsar's readiness and that the Function worker has started", "url": "https://github.com/testcontainers/testcontainers-java/pull/2711#discussion_r424697082", "createdAt": "2020-05-13T20:00:46Z", "author": {"login": "bsideup"}, "path": "modules/pulsar/src/main/java/org/testcontainers/containers/PulsarContainer.java", "diffHunk": "@@ -25,6 +25,11 @@ public PulsarContainer(String pulsarVersion) {\n         waitingFor(Wait.forHttp(METRICS_ENDPOINT).forStatusCode(200).forPort(BROKER_HTTP_PORT));\n     }\n \n+    public PulsarContainer withFunctionsWorker() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c378c71cb93df4ad27bf8ba32af8312ae9edb7c9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDY4ODg5OnYy", "diffSide": "RIGHT", "path": "modules/pulsar/src/test/java/org/testcontainers/containers/PulsarContainerTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDowMTo0NVrOGVBe8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMzoyODoxMVrOGVcOnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5NzU4NA==", "bodyText": "Is there anything we can assert to ensure that it actually works?\nOtherwise, this test will pass if I make withFunctionsWorker NO-OP \ud83d\ude05", "url": "https://github.com/testcontainers/testcontainers-java/pull/2711#discussion_r424697584", "createdAt": "2020-05-13T20:01:45Z", "author": {"login": "bsideup"}, "path": "modules/pulsar/src/test/java/org/testcontainers/containers/PulsarContainerTest.java", "diffHunk": "@@ -23,6 +23,13 @@ public void testUsage() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void shouldWaitForFunctionsWorkerStarted() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c378c71cb93df4ad27bf8ba32af8312ae9edb7c9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA5NjAwMw==", "bodyText": "log output changes, so its more like a check for a waiter. I can check that log output really contains worker output, but that would duplicate the waiter. Uploading function would require admin dependency. I can do that too and just commit really simple jar with rudimentary function", "url": "https://github.com/testcontainers/testcontainers-java/pull/2711#discussion_r425096003", "createdAt": "2020-05-14T12:26:17Z", "author": {"login": "lanwen"}, "path": "modules/pulsar/src/test/java/org/testcontainers/containers/PulsarContainerTest.java", "diffHunk": "@@ -23,6 +23,13 @@ public void testUsage() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void shouldWaitForFunctionsWorkerStarted() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5NzU4NA=="}, "originalCommit": {"oid": "c378c71cb93df4ad27bf8ba32af8312ae9edb7c9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTEzMzM5Mg==", "bodyText": "implemented with real function", "url": "https://github.com/testcontainers/testcontainers-java/pull/2711#discussion_r425133392", "createdAt": "2020-05-14T13:25:04Z", "author": {"login": "lanwen"}, "path": "modules/pulsar/src/test/java/org/testcontainers/containers/PulsarContainerTest.java", "diffHunk": "@@ -23,6 +23,13 @@ public void testUsage() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void shouldWaitForFunctionsWorkerStarted() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5NzU4NA=="}, "originalCommit": {"oid": "c378c71cb93df4ad27bf8ba32af8312ae9edb7c9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTEzNTc3NQ==", "bodyText": "Isn't there some flag to check or something?\nIf not, let's use java.util.Objects#requireNonNull as a function, to avoid having to have a jar file", "url": "https://github.com/testcontainers/testcontainers-java/pull/2711#discussion_r425135775", "createdAt": "2020-05-14T13:28:11Z", "author": {"login": "bsideup"}, "path": "modules/pulsar/src/test/java/org/testcontainers/containers/PulsarContainerTest.java", "diffHunk": "@@ -23,6 +23,13 @@ public void testUsage() throws Exception {\n         }\n     }\n \n+    @Test\n+    public void shouldWaitForFunctionsWorkerStarted() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY5NzU4NA=="}, "originalCommit": {"oid": "c378c71cb93df4ad27bf8ba32af8312ae9edb7c9"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1526, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}