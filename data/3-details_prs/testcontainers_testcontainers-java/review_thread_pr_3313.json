{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NTExOTc1", "number": 3313, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1NjoyOVrOErg49Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1NjoyOVrOErg49Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDYzMDkzOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/testcontainers/dockerclient/AmbiguousImagePullTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1NjoyOVrOHeUlvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwODo1NjoyOVrOHeUlvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1NjY2OQ==", "bodyText": "nit: I'd put the variable declaration onto the next line :)", "url": "https://github.com/testcontainers/testcontainers-java/pull/3313#discussion_r501556669", "createdAt": "2020-10-08T08:56:29Z", "author": {"login": "bsideup"}, "path": "core/src/test/java/org/testcontainers/dockerclient/AmbiguousImagePullTest.java", "diffHunk": "@@ -0,0 +1,32 @@\n+package org.testcontainers.dockerclient;\n+\n+import com.github.dockerjava.api.DockerClient;\n+import com.github.dockerjava.api.model.Image;\n+import org.junit.Test;\n+import org.testcontainers.DockerClientFactory;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.startupcheck.OneShotStartupCheckStrategy;\n+import org.testcontainers.utility.DockerImageName;\n+\n+import java.util.List;\n+\n+public class AmbiguousImagePullTest {\n+\n+    @Test(timeout = 30_000)\n+    public void testNotUsingParse() {\n+        DockerClient client = DockerClientFactory.instance().client();\n+        List<Image> alpineImages = client.listImagesCmd()\n+            .withImageNameFilter(\"alpine:latest\")\n+            .exec();\n+        for (Image alpineImage : alpineImages) {\n+            client.removeImageCmd(alpineImage.getId()).exec();\n+        }\n+\n+        try (final GenericContainer<?> container = new GenericContainer<>(DockerImageName.parse(\"alpine\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "244b7759a9573fea31739fb911bfe27eca24ffd7"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1439, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}