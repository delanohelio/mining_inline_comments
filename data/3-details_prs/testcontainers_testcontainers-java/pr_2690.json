{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NjIyMzA1", "number": 2690, "title": "Add GCloud module for Google Cloud Datastore, Firestore, PubSub, and Spanner emulators", "bodyText": "Add support to perform additional commands in the container\nAdd docs\nAdd gcloud module", "createdAt": "2020-05-09T19:51:49Z", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690", "merged": true, "mergeCommit": {"oid": "0065801b4f13cd29af7904abd6a57d4525e710fc"}, "closed": true, "closedAt": "2020-10-13T14:51:45Z", "author": {"login": "eddumelendez"}, "timelineItems": {"totalCount": 40, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcg-N6RAFqTQxMTI0MjI3Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdRbGCpgFqTUwNjE1NjE5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMjQyMjcz", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-411242273", "createdAt": "2020-05-13T19:40:58Z", "commit": {"oid": "64f426c620372d757fa16d63b966620dd4e5d7d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOTo0MDo1OFrOGVAzYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxOTo0MDo1OFrOGVAzYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY4NjQzMw==", "bodyText": "does it really need to be an image? Can't we just use the command for it, since the image is not cached anyways?", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#discussion_r424686433", "createdAt": "2020-05-13T19:40:58Z", "author": {"login": "bsideup"}, "path": "modules/gcloud/src/main/java/org/testcontainers/containers/GCloudGenericContainer.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package org.testcontainers.containers;\n+\n+import java.io.IOException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+import com.github.dockerjava.api.command.InspectContainerResponse;\n+import org.testcontainers.images.builder.ImageFromDockerfile;\n+import org.testcontainers.images.builder.dockerfile.DockerfileBuilder;\n+\n+/**\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+public class GCloudGenericContainer<SELF extends GCloudGenericContainer<SELF>> extends GenericContainer<SELF> {\n+\n+\tpublic static final String DEFAULT_GCLOUD_IMAGE = \"google/cloud-sdk:291.0.0-alpine\";\n+\n+\tprivate List<String> commands = new ArrayList<>();\n+\n+\tpublic GCloudGenericContainer(String image) {\n+\t\tsuper(image);\n+\t}\n+\n+\tpublic GCloudGenericContainer(String image, String mainCmd, String[] prerequisiteCmds) {\n+\t\tsuper(buildImage(image, mainCmd, prerequisiteCmds));\n+\t}\n+\n+\t@Override\n+\tprotected void containerIsStarted(InspectContainerResponse containerInfo) {\n+\t\trunAdditionalCommands();\n+\t}\n+\n+\tprivate void runAdditionalCommands() {\n+\t\tthis.commands.forEach(cmd -> {\n+\t\t\ttry {\n+\t\t\t\texecInContainer(cmd);\n+\t\t\t} catch (IOException | InterruptedException e) {\n+\t\t\t\tlogger().error(\"Failed to execute {}. Exception message: {}\", cmd, e.getMessage());\n+\t\t\t}\n+\t\t});\n+\t}\n+\n+\tpublic SELF withAdditionalCommands(String... cmds) {\n+\t\tthis.commands.addAll(Arrays.asList(cmds));\n+\t\treturn self();\n+\t}\n+\n+\tprivate static ImageFromDockerfile buildImage(String image, String mainCmd, String[] prerequisiteCmds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64f426c620372d757fa16d63b966620dd4e5d7d5"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODkyOTQy", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-411892942", "createdAt": "2020-05-14T14:58:46Z", "commit": {"oid": "bb74295396171501ae57d495609e1f5fd90ca8e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDo1ODo0NlrOGVgafg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNDo1ODo0NlrOGVgafg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIwNDM1MA==", "bodyText": "Please could you add the incubating module note mentioned at the bottom of https://www.testcontainers.org/contributing/#contributing-new-modules ?", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#discussion_r425204350", "createdAt": "2020-05-14T14:58:46Z", "author": {"login": "rnorth"}, "path": "docs/modules/gcloud.md", "diffHunk": "@@ -0,0 +1,51 @@\n+# GCloud Module\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb74295396171501ae57d495609e1f5fd90ca8e4"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODk1MTYz", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-411895163", "createdAt": "2020-05-14T15:00:53Z", "commit": {"oid": "bb74295396171501ae57d495609e1f5fd90ca8e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTowMDo1M1rOGVghPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTowMDo1M1rOGVghPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIwNjA3OQ==", "bodyText": "Please could you make this an executable example by using the codeinclude macro that we have set up? (please see here for an example)", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#discussion_r425206079", "createdAt": "2020-05-14T15:00:53Z", "author": {"login": "rnorth"}, "path": "docs/modules/gcloud.md", "diffHunk": "@@ -0,0 +1,51 @@\n+# GCloud Module\n+\n+Testcontainers module for the Google's [Cloud SDK](https://cloud.google.com/sdk/).\n+\n+Currently, the module supports `datastore`, `firestore`, `pubsub` and `spanner` emulators. In order to use it, you should use the following classes:\n+\n+* DatastoreEmulatorContainer\n+* FirestoreEmulatorContainer\n+* PubSubEmulatorContainer\n+* SpannerEmulatorContainer\n+\n+## Usage example\n+\n+Running GCloud as a stand-in for Google Firestore during a test:\n+\n+```java", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb74295396171501ae57d495609e1f5fd90ca8e4"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODk4NzE0", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-411898714", "createdAt": "2020-05-14T15:04:28Z", "commit": {"oid": "bb74295396171501ae57d495609e1f5fd90ca8e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTowNDoyOVrOGVgrbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTowNDoyOVrOGVgrbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIwODY4NQ==", "bodyText": "We should probably remove these printlns or use slf4j.", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#discussion_r425208685", "createdAt": "2020-05-14T15:04:29Z", "author": {"login": "rnorth"}, "path": "modules/gcloud/src/test/java/org/testcontainers/containers/SpannerEmulatorContainerTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.testcontainers.containers;\n+\n+import java.util.Arrays;\n+import java.util.concurrent.ExecutionException;\n+\n+import com.google.cloud.NoCredentials;\n+import com.google.cloud.spanner.Database;\n+import com.google.cloud.spanner.DatabaseAdminClient;\n+import com.google.cloud.spanner.DatabaseClient;\n+import com.google.cloud.spanner.DatabaseId;\n+import com.google.cloud.spanner.Instance;\n+import com.google.cloud.spanner.InstanceAdminClient;\n+import com.google.cloud.spanner.InstanceConfigId;\n+import com.google.cloud.spanner.InstanceId;\n+import com.google.cloud.spanner.InstanceInfo;\n+import com.google.cloud.spanner.ResultSet;\n+import com.google.cloud.spanner.Spanner;\n+import com.google.cloud.spanner.SpannerOptions;\n+import com.google.cloud.spanner.Statement;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class SpannerEmulatorContainerTest {\n+\n+\t@Rule\n+\tpublic SpannerEmulatorContainer emulator = new SpannerEmulatorContainer();\n+\n+\tprivate static final String PROJECT_NAME = \"test-project\";\n+\tprivate static final String INSTANCE_NAME = \"test-instance\";\n+\tprivate static final String DATABASE_NAME = \"test-database\";\n+\n+\t@Test\n+\tpublic void testSimple() throws ExecutionException, InterruptedException {\n+\t\tSpannerOptions options = SpannerOptions.newBuilder()\n+\t\t\t\t.setEmulatorHost(emulator.getContainerIpAddress() + \":\" + emulator.getMappedPort(9010))\n+\t\t\t\t.setCredentials(NoCredentials.getInstance())\n+\t\t\t\t.build();\n+\n+\t\tSpanner spanner = options.getService();\n+\n+\t\tInstanceId instanceId = createInstance(spanner);\n+\n+\t\tcreateDatabase(spanner);\n+\n+\t\tDatabaseId databaseId = DatabaseId.of(instanceId, DATABASE_NAME);\n+\t\tDatabaseClient dbClient = spanner.getDatabaseClient(databaseId);\n+\t\tdbClient.readWriteTransaction()\n+\t\t\t\t.run(tx -> {\n+\t\t\t\t\tString sql1 = \"Delete from TestTable where 1=1\";\n+\t\t\t\t\ttx.executeUpdate(Statement.of(sql1));\n+\t\t\t\t\tString sql = \"INSERT INTO TestTable (Key, Value) VALUES (1, 'Java'), (2, 'Go')\";\n+\t\t\t\t\ttx.executeUpdate(Statement.of(sql));\n+\t\t\t\t\treturn null;\n+\t\t\t\t});\n+\n+\t\tResultSet resultSet = dbClient.readOnlyTransaction()\n+\t\t\t\t.executeQuery(Statement.of(\"select * from TestTable order by Key\"));\n+\t\tresultSet.next();\n+\t\tassertThat(resultSet.getLong(0)).isEqualTo(1);\n+\t\tassertThat(resultSet.getString(1)).isEqualTo(\"Java\");\n+\t}\n+\n+\tprivate void createDatabase(Spanner spanner) throws InterruptedException, ExecutionException {\n+\t\tDatabaseAdminClient dbAdminClient = spanner.getDatabaseAdminClient();\n+\t\tDatabase database = dbAdminClient.createDatabase(INSTANCE_NAME, DATABASE_NAME, Arrays.asList(\"CREATE TABLE TestTable (Key INT64, Value STRING(MAX)) PRIMARY KEY (Key)\")).get();\n+\t\tSystem.out.println(\">>>\" + database.getState());\n+\t}\n+\n+\tprivate InstanceId createInstance(Spanner spanner) throws InterruptedException, ExecutionException {\n+\t\tInstanceConfigId instanceConfig = InstanceConfigId.of(PROJECT_NAME, \"emulator-config\");\n+\t\tInstanceId instanceId = InstanceId.of(PROJECT_NAME, INSTANCE_NAME);\n+\t\tInstanceAdminClient insAdminClient = spanner.getInstanceAdminClient();\n+\t\tInstance instance = insAdminClient.createInstance(InstanceInfo.newBuilder(instanceId).setInstanceConfigId(instanceConfig).build()).get();\n+\t\tSystem.out.println(\">>>\" + instance.getState());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb74295396171501ae57d495609e1f5fd90ca8e4"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExODk5NDY5", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-411899469", "createdAt": "2020-05-14T15:05:17Z", "commit": {"oid": "bb74295396171501ae57d495609e1f5fd90ca8e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTowNToxN1rOGVgttA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNTowNToxN1rOGVgttA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIwOTI2OA==", "bodyText": "Is this assertion useful by this point in time?", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#discussion_r425209268", "createdAt": "2020-05-14T15:05:17Z", "author": {"login": "rnorth"}, "path": "modules/gcloud/src/test/java/org/testcontainers/containers/PubSubEmulatorContainerTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.testcontainers.containers;\n+\n+import java.io.IOException;\n+\n+import com.google.api.core.ApiFuture;\n+import com.google.api.core.ApiFutureCallback;\n+import com.google.api.core.ApiFutures;\n+import com.google.api.gax.core.CredentialsProvider;\n+import com.google.api.gax.core.NoCredentialsProvider;\n+import com.google.api.gax.grpc.GrpcTransportChannel;\n+import com.google.api.gax.rpc.FixedTransportChannelProvider;\n+import com.google.api.gax.rpc.TransportChannelProvider;\n+import com.google.cloud.pubsub.v1.Publisher;\n+import com.google.cloud.pubsub.v1.TopicAdminClient;\n+import com.google.cloud.pubsub.v1.TopicAdminSettings;\n+import com.google.common.util.concurrent.MoreExecutors;\n+import com.google.protobuf.ByteString;\n+import com.google.pubsub.v1.PubsubMessage;\n+import com.google.pubsub.v1.Topic;\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class PubSubEmulatorContainerTest {\n+\n+\t@Rule\n+\tpublic PubSubEmulatorContainer emulator = new PubSubEmulatorContainer();\n+\n+\t@Test\n+\tpublic void testSimple() throws IOException {\n+\t\tString hostport = emulator.getContainerIpAddress() + \":\" + emulator.getMappedPort(8085);\n+\t\tManagedChannel channel = ManagedChannelBuilder.forTarget(hostport).usePlaintext().build();\n+\t\ttry {\n+\t\t\tTransportChannelProvider channelProvider =\n+\t\t\t\t\tFixedTransportChannelProvider.create(GrpcTransportChannel.create(channel));\n+\t\t\tCredentialsProvider credentialsProvider = NoCredentialsProvider.create();\n+\n+\t\t\tTopicAdminClient topicClient =\n+\t\t\t\t\tTopicAdminClient.create(\n+\t\t\t\t\t\t\tTopicAdminSettings.newBuilder()\n+\t\t\t\t\t\t\t\t\t.setTransportChannelProvider(channelProvider)\n+\t\t\t\t\t\t\t\t\t.setCredentialsProvider(credentialsProvider)\n+\t\t\t\t\t\t\t\t\t.build());\n+\t\t\tTopic topic = Topic.newBuilder().setName(\"projects/my-project-id/topics/my-topic-id\").build();\n+\t\t\ttopicClient.createTopic(topic);\n+\n+\t\t\tPublisher publisher = Publisher.newBuilder(topic.getName()).build();\n+\t\t\tPubsubMessage message = PubsubMessage.newBuilder().setData(ByteString.copyFromUtf8(\"test message\")).build();\n+\t\t\tApiFuture<String> future = publisher.publish(message);\n+\t\t\tApiFutures.addCallback(future, new ApiFutureCallback<String>() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic void onFailure(Throwable t) {\n+\n+\t\t\t\t}\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic void onSuccess(String result) {\n+\t\t\t\t\tassertThat(result).isNotNull();\n+\t\t\t\t}\n+\t\t\t}, MoreExecutors.directExecutor());\n+\t\t} finally {\n+\t\t\tchannel.shutdown();\n+\t\t}\n+\n+\n+\t\tassertThat(emulator.getMappedPort(8085)).isNotNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb74295396171501ae57d495609e1f5fd90ca8e4"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExOTE4MDM3", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-411918037", "createdAt": "2020-05-14T15:24:17Z", "commit": {"oid": "bb74295396171501ae57d495609e1f5fd90ca8e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNToyNDoxN1rOGVhlBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNToyNDoxN1rOGVhlBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIyMzQzMA==", "bodyText": "Don't we need to call get() on future to ensure that the callback and assertion are fired on this thread?\nAlso, should we have an Assert.fail() inside onFailure?", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#discussion_r425223430", "createdAt": "2020-05-14T15:24:17Z", "author": {"login": "rnorth"}, "path": "modules/gcloud/src/test/java/org/testcontainers/containers/PubSubEmulatorContainerTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.testcontainers.containers;\n+\n+import java.io.IOException;\n+\n+import com.google.api.core.ApiFuture;\n+import com.google.api.core.ApiFutureCallback;\n+import com.google.api.core.ApiFutures;\n+import com.google.api.gax.core.CredentialsProvider;\n+import com.google.api.gax.core.NoCredentialsProvider;\n+import com.google.api.gax.grpc.GrpcTransportChannel;\n+import com.google.api.gax.rpc.FixedTransportChannelProvider;\n+import com.google.api.gax.rpc.TransportChannelProvider;\n+import com.google.cloud.pubsub.v1.Publisher;\n+import com.google.cloud.pubsub.v1.TopicAdminClient;\n+import com.google.cloud.pubsub.v1.TopicAdminSettings;\n+import com.google.common.util.concurrent.MoreExecutors;\n+import com.google.protobuf.ByteString;\n+import com.google.pubsub.v1.PubsubMessage;\n+import com.google.pubsub.v1.Topic;\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class PubSubEmulatorContainerTest {\n+\n+\t@Rule\n+\tpublic PubSubEmulatorContainer emulator = new PubSubEmulatorContainer();\n+\n+\t@Test\n+\tpublic void testSimple() throws IOException {\n+\t\tString hostport = emulator.getContainerIpAddress() + \":\" + emulator.getMappedPort(8085);\n+\t\tManagedChannel channel = ManagedChannelBuilder.forTarget(hostport).usePlaintext().build();\n+\t\ttry {\n+\t\t\tTransportChannelProvider channelProvider =\n+\t\t\t\t\tFixedTransportChannelProvider.create(GrpcTransportChannel.create(channel));\n+\t\t\tCredentialsProvider credentialsProvider = NoCredentialsProvider.create();\n+\n+\t\t\tTopicAdminClient topicClient =\n+\t\t\t\t\tTopicAdminClient.create(\n+\t\t\t\t\t\t\tTopicAdminSettings.newBuilder()\n+\t\t\t\t\t\t\t\t\t.setTransportChannelProvider(channelProvider)\n+\t\t\t\t\t\t\t\t\t.setCredentialsProvider(credentialsProvider)\n+\t\t\t\t\t\t\t\t\t.build());\n+\t\t\tTopic topic = Topic.newBuilder().setName(\"projects/my-project-id/topics/my-topic-id\").build();\n+\t\t\ttopicClient.createTopic(topic);\n+\n+\t\t\tPublisher publisher = Publisher.newBuilder(topic.getName()).build();\n+\t\t\tPubsubMessage message = PubsubMessage.newBuilder().setData(ByteString.copyFromUtf8(\"test message\")).build();\n+\t\t\tApiFuture<String> future = publisher.publish(message);\n+\t\t\tApiFutures.addCallback(future, new ApiFutureCallback<String>() {\n+\t\t\t\t@Override\n+\t\t\t\tpublic void onFailure(Throwable t) {\n+\n+\t\t\t\t}\n+\n+\t\t\t\t@Override\n+\t\t\t\tpublic void onSuccess(String result) {\n+\t\t\t\t\tassertThat(result).isNotNull();\n+\t\t\t\t}\n+\t\t\t}, MoreExecutors.directExecutor());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb74295396171501ae57d495609e1f5fd90ca8e4"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExOTIxNTQ1", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-411921545", "createdAt": "2020-05-14T15:27:41Z", "commit": {"oid": "bb74295396171501ae57d495609e1f5fd90ca8e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNToyNzo0MlrOGVhvWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNToyNzo0MlrOGVhvWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTIyNjA3NQ==", "bodyText": "Sorry for the mundane comment, but please could you reformat using 4 spaces for indentation? If you have an editorconfig-aware IDE this convention should get picked up automatically.", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#discussion_r425226075", "createdAt": "2020-05-14T15:27:42Z", "author": {"login": "rnorth"}, "path": "modules/gcloud/src/main/java/org/testcontainers/containers/DatastoreEmulatorContainer.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package org.testcontainers.containers;\n+\n+import java.util.Arrays;\n+\n+import org.testcontainers.containers.wait.strategy.Wait;\n+\n+/**\n+ * A Datastore container that relies in google cloud sdk. The container provides\n+ * additional instructions to install the components needed in the alpine images.\n+ *\n+ * Default port is 8081.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+public class DatastoreEmulatorContainer extends GCloudGenericContainer<DatastoreEmulatorContainer> {\n+\n+\tprivate static final String[] CMDS = {\"apk --update add openjdk8-jre\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb74295396171501ae57d495609e1f5fd90ca8e4"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMTc4MTE5", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-473178119", "createdAt": "2020-08-24T07:22:31Z", "commit": {"oid": "198a88f0d5526d32a601aecb393aa71b1c62d369"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNzoyMjozMVrOHFXjnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNzoyMjozMVrOHFXjnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM5MDg3Ng==", "bodyText": "It would be nice to have a(nother) test that:\n\nPublishes a message with some trivial contents\nPulls that message from a subscription to that topic\nVerifies that the trivial contents was received", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#discussion_r475390876", "createdAt": "2020-08-24T07:22:31Z", "author": {"login": "walles"}, "path": "modules/gcloud/src/test/java/org/testcontainers/containers/PubSubEmulatorContainerTest.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.testcontainers.containers;\n+\n+import java.io.IOException;\n+import java.util.concurrent.ExecutionException;\n+\n+import com.google.api.core.ApiFuture;\n+import com.google.api.core.ApiFutureCallback;\n+import com.google.api.core.ApiFutures;\n+import com.google.api.gax.core.NoCredentialsProvider;\n+import com.google.api.gax.grpc.GrpcTransportChannel;\n+import com.google.api.gax.rpc.FixedTransportChannelProvider;\n+import com.google.api.gax.rpc.TransportChannelProvider;\n+import com.google.cloud.pubsub.v1.Publisher;\n+import com.google.cloud.pubsub.v1.TopicAdminClient;\n+import com.google.cloud.pubsub.v1.TopicAdminSettings;\n+import com.google.common.util.concurrent.MoreExecutors;\n+import com.google.protobuf.ByteString;\n+import com.google.pubsub.v1.PubsubMessage;\n+import com.google.pubsub.v1.Topic;\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n+import org.junit.Rule;\n+import org.junit.Test;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class PubSubEmulatorContainerTest {\n+\n+    @Rule\n+    public PubSubEmulatorContainer emulator = new PubSubEmulatorContainer();\n+\n+    @Test\n+    public void testSimple() throws IOException, ExecutionException, InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "198a88f0d5526d32a601aecb393aa71b1c62d369"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNjQ3ODE1", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-503647815", "createdAt": "2020-10-07T08:36:44Z", "commit": {"oid": "20a39f0d1dbcf2fbbbbe4fc18b23b5c811a59bf4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODozNjo0NVrOHdolsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QwODozNjo0NVrOHdolsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDgzNTc2Mg==", "bodyText": "Do we really need this class? Looks redundant to me :)", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#discussion_r500835762", "createdAt": "2020-10-07T08:36:45Z", "author": {"login": "bsideup"}, "path": "modules/gcloud/src/main/java/org/testcontainers/containers/GCloudGenericContainer.java", "diffHunk": "@@ -0,0 +1,19 @@\n+package org.testcontainers.containers;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+/**\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+public class GCloudGenericContainer<SELF extends GCloudGenericContainer<SELF>> extends GenericContainer<SELF> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20a39f0d1dbcf2fbbbbe4fc18b23b5c811a59bf4"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c69bfb0592a1e1ef697cdaa15a9650e54940b9ff", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/c69bfb0592a1e1ef697cdaa15a9650e54940b9ff", "committedDate": "2020-10-07T14:09:30Z", "message": "Add gcloud module\n\nBased on google cloud sdk docker image. This module provides:\n\n* DatastoreEmulatorContainer\n* FirestoreEmulatorContainer\n* PubSubEmulatorContainer\n\n`SpannerEmulatorContainer` is also provided but is based on its own\ndocker image.\n\nSee gh-2633"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67b0ddd03f63ce59fe8fc47d14f30830ac49616d", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/67b0ddd03f63ce59fe8fc47d14f30830ac49616d", "committedDate": "2020-10-07T14:09:30Z", "message": "Add docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b05704ae7c151953ff7b3404ca13911beea5d045", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/b05704ae7c151953ff7b3404ca13911beea5d045", "committedDate": "2020-10-07T14:09:30Z", "message": "Add support to perform additional commands in the container"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "927cc6d7b12eb4e10ac9cf238bc3e98ee1d7f350", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/927cc6d7b12eb4e10ac9cf238bc3e98ee1d7f350", "committedDate": "2020-10-07T14:09:30Z", "message": "Build images using CMD"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3eae24fff1f3726ef0086452f03eedcb6922dac0", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/3eae24fff1f3726ef0086452f03eedcb6922dac0", "committedDate": "2020-10-07T14:09:30Z", "message": "Remove port assertion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdc415eeef8a229fc5c006c1db5497c982128d64", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/cdc415eeef8a229fc5c006c1db5497c982128d64", "committedDate": "2020-10-07T14:09:30Z", "message": "Add incubating module note"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae437762da096cb0f89fc82ae3df5ff351436209", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/ae437762da096cb0f89fc82ae3df5ff351436209", "committedDate": "2020-10-07T14:09:30Z", "message": "Use codeinclude macro"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ff7c3d290b42a0757409c60943ae1e648609c4c", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/1ff7c3d290b42a0757409c60943ae1e648609c4c", "committedDate": "2020-10-07T14:09:30Z", "message": "spaces instead of tabs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe7a55ee6f718380ca72850be35de49c29264567", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/fe7a55ee6f718380ca72850be35de49c29264567", "committedDate": "2020-10-07T14:09:30Z", "message": "Polish tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1542b170b332ee97a752c49619b363fd5655e122", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/1542b170b332ee97a752c49619b363fd5655e122", "committedDate": "2020-10-07T14:09:30Z", "message": "Update base image and polish commands"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6991cef38b10e16561c1fdd901ef2a1c51e05f7d", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/6991cef38b10e16561c1fdd901ef2a1c51e05f7d", "committedDate": "2020-10-07T14:09:30Z", "message": "Fix datastore test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "84d1172a305030ea62b241627b90d51b50c26aa1", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/84d1172a305030ea62b241627b90d51b50c26aa1", "committedDate": "2020-10-07T14:09:30Z", "message": "Polish Spanner test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d3ea39615d3d3004296911803da3c9de67afefa", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/0d3ea39615d3d3004296911803da3c9de67afefa", "committedDate": "2020-10-07T14:09:30Z", "message": "Fix docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5fdcb7713b7840eb3ad0ac449eff1087ac8937c", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/a5fdcb7713b7840eb3ad0ac449eff1087ac8937c", "committedDate": "2020-10-07T14:09:30Z", "message": "Update base image"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "548e6bf246b11234a8799b11c6bcf6be9af970d7", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/548e6bf246b11234a8799b11c6bcf6be9af970d7", "committedDate": "2020-10-07T14:09:31Z", "message": "Remove startupTimeout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "802228f41b12e94ffc3acfba07362434fe461f6f", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/802228f41b12e94ffc3acfba07362434fe461f6f", "committedDate": "2020-10-07T14:09:31Z", "message": "Set projectId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "465e487bae5cf456964b9678c8d2f99560eaf32c", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/465e487bae5cf456964b9678c8d2f99560eaf32c", "committedDate": "2020-10-07T14:09:31Z", "message": "Rename project-id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "810962944ea4c575878e5e7fb05d9059975dee28", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/810962944ea4c575878e5e7fb05d9059975dee28", "committedDate": "2020-10-07T14:09:31Z", "message": "Polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70befd341ed151663e1f1ed63ac114ced7a75145", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/70befd341ed151663e1f1ed63ac114ced7a75145", "committedDate": "2020-10-07T14:09:31Z", "message": "Polish"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac133f0a4ab4177b2e16a2197f9eb960325981d1", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/ac133f0a4ab4177b2e16a2197f9eb960325981d1", "committedDate": "2020-10-07T14:09:31Z", "message": "Fix docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40dac6517084953eb91c0011718216ae4252a22e", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/40dac6517084953eb91c0011718216ae4252a22e", "committedDate": "2020-10-07T14:09:31Z", "message": "Add subscriber in pubsub sample"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56839982da1197513585dca224dc0beb92bd844e", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/56839982da1197513585dca224dc0beb92bd844e", "committedDate": "2020-10-08T02:26:05Z", "message": "Update with master changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20a39f0d1dbcf2fbbbbe4fc18b23b5c811a59bf4", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/20a39f0d1dbcf2fbbbbe4fc18b23b5c811a59bf4", "committedDate": "2020-08-31T05:52:49Z", "message": "Add subscriber in pubsub sample"}, "afterCommit": {"oid": "56839982da1197513585dca224dc0beb92bd844e", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/56839982da1197513585dca224dc0beb92bd844e", "committedDate": "2020-10-08T02:26:05Z", "message": "Update with master changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTQ4NDU0", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-506148454", "createdAt": "2020-10-11T06:39:33Z", "commit": {"oid": "56839982da1197513585dca224dc0beb92bd844e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNjozOTozM1rOHfk9Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNjozOTozM1rOHfk9Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3MzQxOQ==", "bodyText": "When rendered, this has to be scrolled quite a bit. Let's perhaps wrap it?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public DatastoreEmulatorContainer emulator = new DatastoreEmulatorContainer(DockerImageName.parse(\"gcr.io/google.com/cloudsdktool/cloud-sdk:313.0.0\"));\n          \n          \n            \n                public DatastoreEmulatorContainer emulator = new DatastoreEmulatorContainer(\n          \n          \n            \n                    DockerImageName.parse(\"gcr.io/google.com/cloudsdktool/cloud-sdk:313.0.0\")\n          \n          \n            \n                );", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#discussion_r502873419", "createdAt": "2020-10-11T06:39:33Z", "author": {"login": "rnorth"}, "path": "modules/gcloud/src/test/java/org/testcontainers/containers/DatastoreEmulatorContainerTest.java", "diffHunk": "@@ -0,0 +1,41 @@\n+package org.testcontainers.containers;\n+\n+import com.google.cloud.NoCredentials;\n+import com.google.cloud.ServiceOptions;\n+import com.google.cloud.datastore.Datastore;\n+import com.google.cloud.datastore.DatastoreOptions;\n+import com.google.cloud.datastore.Entity;\n+import com.google.cloud.datastore.Key;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.testcontainers.utility.DockerImageName;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class DatastoreEmulatorContainerTest {\n+\n+    @Rule\n+    // creatingDatastoreEmulatorContainer {\n+    public DatastoreEmulatorContainer emulator = new DatastoreEmulatorContainer(DockerImageName.parse(\"gcr.io/google.com/cloudsdktool/cloud-sdk:313.0.0\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56839982da1197513585dca224dc0beb92bd844e"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTQ4NTAx", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-506148501", "createdAt": "2020-10-11T06:40:28Z", "commit": {"oid": "56839982da1197513585dca224dc0beb92bd844e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNjo0MDoyOFrOHfk9nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNjo0MDoyOFrOHfk9nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3MzUwMQ==", "bodyText": "Please could you reformat this file with spaces, not tabs? \ud83e\udd13", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#discussion_r502873501", "createdAt": "2020-10-11T06:40:28Z", "author": {"login": "rnorth"}, "path": "modules/gcloud/src/test/java/org/testcontainers/containers/PubSubEmulatorContainerTest.java", "diffHunk": "@@ -0,0 +1,102 @@\n+package org.testcontainers.containers;\n+\n+import java.io.IOException;\n+\n+import com.google.api.gax.core.NoCredentialsProvider;\n+import com.google.api.gax.grpc.GrpcTransportChannel;\n+import com.google.api.gax.rpc.FixedTransportChannelProvider;\n+import com.google.api.gax.rpc.TransportChannelProvider;\n+import com.google.cloud.pubsub.v1.Publisher;\n+import com.google.cloud.pubsub.v1.SubscriptionAdminClient;\n+import com.google.cloud.pubsub.v1.SubscriptionAdminSettings;\n+import com.google.cloud.pubsub.v1.TopicAdminClient;\n+import com.google.cloud.pubsub.v1.TopicAdminSettings;\n+import com.google.cloud.pubsub.v1.stub.GrpcSubscriberStub;\n+import com.google.cloud.pubsub.v1.stub.SubscriberStub;\n+import com.google.cloud.pubsub.v1.stub.SubscriberStubSettings;\n+import com.google.protobuf.ByteString;\n+import com.google.pubsub.v1.ProjectSubscriptionName;\n+import com.google.pubsub.v1.PubsubMessage;\n+import com.google.pubsub.v1.PullRequest;\n+import com.google.pubsub.v1.PullResponse;\n+import com.google.pubsub.v1.PushConfig;\n+import com.google.pubsub.v1.TopicName;\n+import io.grpc.ManagedChannel;\n+import io.grpc.ManagedChannelBuilder;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.testcontainers.utility.DockerImageName;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+\n+public class PubSubEmulatorContainerTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56839982da1197513585dca224dc0beb92bd844e"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTQ4NzA3", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-506148707", "createdAt": "2020-10-11T06:43:25Z", "commit": {"oid": "56839982da1197513585dca224dc0beb92bd844e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNjo0MzoyNVrOHfk-qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMVQwNjo0MzoyNVrOHfk-qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjg3Mzc2OQ==", "bodyText": "I wonder, maybe these should be public constants so that they can be used by tests? If we did that, we could do so for the other container classes in this PR.\nWDYT @bsideup, @kiview?", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#discussion_r502873769", "createdAt": "2020-10-11T06:43:25Z", "author": {"login": "rnorth"}, "path": "modules/gcloud/src/main/java/org/testcontainers/containers/SpannerEmulatorContainer.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package org.testcontainers.containers;\n+\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.DockerImageName;\n+\n+/**\n+ * A Spanner container. Default ports: 9010 for GRPC and 9020 for HTTP.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ */\n+public class SpannerEmulatorContainer extends GenericContainer<SpannerEmulatorContainer> {\n+\n+    private static final DockerImageName DEFAULT_IMAGE_NAME = DockerImageName.parse(\"gcr.io/cloud-spanner-emulator/emulator\");\n+\n+    private static final int GRPC_PORT = 9010;\n+    private static final int HTTP_PORT = 9020;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56839982da1197513585dca224dc0beb92bd844e"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTQ4NzQ0", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-506148744", "createdAt": "2020-10-11T06:44:00Z", "commit": {"oid": "56839982da1197513585dca224dc0beb92bd844e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d50670537c526bef905349e1e25aa3759b7a8b0", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/4d50670537c526bef905349e1e25aa3759b7a8b0", "committedDate": "2020-10-11T06:44:08Z", "message": "Update modules/gcloud/src/test/java/org/testcontainers/containers/DatastoreEmulatorContainerTest.java\n\nCo-authored-by: Richard North <rich.north@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb43494dadd8aba74cdc28feaf39696b60507d82", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/fb43494dadd8aba74cdc28feaf39696b60507d82", "committedDate": "2020-10-11T06:48:29Z", "message": "To spaces"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b70aae749a0e53c95a66c2159e210c6801bd07e", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/7b70aae749a0e53c95a66c2159e210c6801bd07e", "committedDate": "2020-10-11T06:45:40Z", "message": "To spaces"}, "afterCommit": {"oid": "fb43494dadd8aba74cdc28feaf39696b60507d82", "author": {"user": {"login": "eddumelendez", "name": "Edd\u00fa Mel\u00e9ndez Gonzales"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/fb43494dadd8aba74cdc28feaf39696b60507d82", "committedDate": "2020-10-11T06:48:29Z", "message": "To spaces"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MTU2MTkx", "url": "https://github.com/testcontainers/testcontainers-java/pull/2690#pullrequestreview-506156191", "createdAt": "2020-10-11T08:27:59Z", "commit": {"oid": "fb43494dadd8aba74cdc28feaf39696b60507d82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3376, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}