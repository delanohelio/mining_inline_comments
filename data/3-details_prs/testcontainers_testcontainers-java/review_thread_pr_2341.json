{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMzg0ODE0", "number": 2341, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMToxMDo1OVrODny6Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMToxMTo0OVrODny7Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDU1MTg2OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/testcontainers/containers/wait/strategy/HttpWaitStrategy.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMToxMDo1OVrOF1_4QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMToxMDo1OVrOF1_4QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE2NTQ0MA==", "bodyText": "nit: could also be replaced with a stream :)\nint originalPort = waitStrategyTarget.getExposedPorts().stream()\n            .filter(it -> rawUri.getPort() == waitStrategyTarget.getMappedPort(it))\n            .findAny()\n            .orElse(-1);", "url": "https://github.com/testcontainers/testcontainers-java/pull/2341#discussion_r392165440", "createdAt": "2020-03-13T11:10:59Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/containers/wait/strategy/HttpWaitStrategy.java", "diffHunk": "@@ -150,8 +150,17 @@ protected void waitUntilReady() {\n         if (null == livenessCheckPort || -1 == livenessCheckPort) {\n             return;\n         }\n-        final String uri = buildLivenessUri(livenessCheckPort).toString();\n-        log.info(\"{}: Waiting for {} seconds for URL: {}\", containerName, startupTimeout.getSeconds(), uri);\n+        final URI rawUri = buildLivenessUri(livenessCheckPort);\n+        // Un-map the port for logging\n+        int originalPort = -1;\n+        for (Integer exposedPort : waitStrategyTarget.getExposedPorts()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96bd3e6d8d262d79c575344b7e4e0c6f1502f553"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMDU1NDM1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/testcontainers/containers/wait/strategy/HttpWaitStrategy.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxMToxMTo0OVrOF1_5qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMDo0ODoxMlrOGzOfUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE2NTgwMA==", "bodyText": "getMappedPort may throw, please make sure you handle it too", "url": "https://github.com/testcontainers/testcontainers-java/pull/2341#discussion_r392165800", "createdAt": "2020-03-13T11:11:49Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/containers/wait/strategy/HttpWaitStrategy.java", "diffHunk": "@@ -150,8 +150,17 @@ protected void waitUntilReady() {\n         if (null == livenessCheckPort || -1 == livenessCheckPort) {\n             return;\n         }\n-        final String uri = buildLivenessUri(livenessCheckPort).toString();\n-        log.info(\"{}: Waiting for {} seconds for URL: {}\", containerName, startupTimeout.getSeconds(), uri);\n+        final URI rawUri = buildLivenessUri(livenessCheckPort);\n+        // Un-map the port for logging\n+        int originalPort = -1;\n+        for (Integer exposedPort : waitStrategyTarget.getExposedPorts()) {\n+            if (rawUri.getPort() == waitStrategyTarget.getMappedPort(exposedPort)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96bd3e6d8d262d79c575344b7e4e0c6f1502f553"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzg4NTMwMQ==", "bodyText": "I'm struggling to think of a scenario where this could throw and we'd want to continue...\n\nIf the container isn't started, waiting for the port should not succeed and should fail fast\nIf the port that was configured to be exposed cannot be mapped, something has gone seriously wrong with Docker\n\nIsn't it therefore correct to just let any failure bubble up immediately? Or have I missed a scenario?", "url": "https://github.com/testcontainers/testcontainers-java/pull/2341#discussion_r453885301", "createdAt": "2020-07-13T19:36:12Z", "author": {"login": "rnorth"}, "path": "core/src/main/java/org/testcontainers/containers/wait/strategy/HttpWaitStrategy.java", "diffHunk": "@@ -150,8 +150,17 @@ protected void waitUntilReady() {\n         if (null == livenessCheckPort || -1 == livenessCheckPort) {\n             return;\n         }\n-        final String uri = buildLivenessUri(livenessCheckPort).toString();\n-        log.info(\"{}: Waiting for {} seconds for URL: {}\", containerName, startupTimeout.getSeconds(), uri);\n+        final URI rawUri = buildLivenessUri(livenessCheckPort);\n+        // Un-map the port for logging\n+        int originalPort = -1;\n+        for (Integer exposedPort : waitStrategyTarget.getExposedPorts()) {\n+            if (rawUri.getPort() == waitStrategyTarget.getMappedPort(exposedPort)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE2NTgwMA=="}, "originalCommit": {"oid": "96bd3e6d8d262d79c575344b7e4e0c6f1502f553"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxOTU4MQ==", "bodyText": "testcontainers-java/core/src/main/java/org/testcontainers/containers/ContainerState.java\n    \n    \n         Line 141\n      in\n      780b8e3\n    \n    \n    \n    \n\n        \n          \n           Preconditions.checkState(this.getContainerId() != null, \"Mapped port can only be obtained after the container is started\"); \n        \n    \n  \n\n and \n  \n    \n      testcontainers-java/core/src/main/java/org/testcontainers/containers/ContainerState.java\n    \n    \n         Line 152\n      in\n      780b8e3\n    \n    \n    \n    \n\n        \n          \n           throw new IllegalArgumentException(\"Requested port (\" + originalPort + \") is not mapped\");", "url": "https://github.com/testcontainers/testcontainers-java/pull/2341#discussion_r453919581", "createdAt": "2020-07-13T20:41:17Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/containers/wait/strategy/HttpWaitStrategy.java", "diffHunk": "@@ -150,8 +150,17 @@ protected void waitUntilReady() {\n         if (null == livenessCheckPort || -1 == livenessCheckPort) {\n             return;\n         }\n-        final String uri = buildLivenessUri(livenessCheckPort).toString();\n-        log.info(\"{}: Waiting for {} seconds for URL: {}\", containerName, startupTimeout.getSeconds(), uri);\n+        final URI rawUri = buildLivenessUri(livenessCheckPort);\n+        // Un-map the port for logging\n+        int originalPort = -1;\n+        for (Integer exposedPort : waitStrategyTarget.getExposedPorts()) {\n+            if (rawUri.getPort() == waitStrategyTarget.getMappedPort(exposedPort)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE2NTgwMA=="}, "originalCommit": {"oid": "96bd3e6d8d262d79c575344b7e4e0c6f1502f553"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkyMDU5NA==", "bodyText": "A custom implementation may also be provided. So I would make a best-effort attempt at obtaining the port, but not fail the strategy if it throws", "url": "https://github.com/testcontainers/testcontainers-java/pull/2341#discussion_r453920594", "createdAt": "2020-07-13T20:43:05Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/containers/wait/strategy/HttpWaitStrategy.java", "diffHunk": "@@ -150,8 +150,17 @@ protected void waitUntilReady() {\n         if (null == livenessCheckPort || -1 == livenessCheckPort) {\n             return;\n         }\n-        final String uri = buildLivenessUri(livenessCheckPort).toString();\n-        log.info(\"{}: Waiting for {} seconds for URL: {}\", containerName, startupTimeout.getSeconds(), uri);\n+        final URI rawUri = buildLivenessUri(livenessCheckPort);\n+        // Un-map the port for logging\n+        int originalPort = -1;\n+        for (Integer exposedPort : waitStrategyTarget.getExposedPorts()) {\n+            if (rawUri.getPort() == waitStrategyTarget.getMappedPort(exposedPort)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE2NTgwMA=="}, "originalCommit": {"oid": "96bd3e6d8d262d79c575344b7e4e0c6f1502f553"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk5MzQ0Mg==", "bodyText": "Yeah, those are the two scenarios I was referencing. When I looked, I couldn't seen anything overridable (i.e. this only calls private methods), but maybe I missed something.\nI'll have another look.", "url": "https://github.com/testcontainers/testcontainers-java/pull/2341#discussion_r454993442", "createdAt": "2020-07-15T11:51:54Z", "author": {"login": "rnorth"}, "path": "core/src/main/java/org/testcontainers/containers/wait/strategy/HttpWaitStrategy.java", "diffHunk": "@@ -150,8 +150,17 @@ protected void waitUntilReady() {\n         if (null == livenessCheckPort || -1 == livenessCheckPort) {\n             return;\n         }\n-        final String uri = buildLivenessUri(livenessCheckPort).toString();\n-        log.info(\"{}: Waiting for {} seconds for URL: {}\", containerName, startupTimeout.getSeconds(), uri);\n+        final URI rawUri = buildLivenessUri(livenessCheckPort);\n+        // Un-map the port for logging\n+        int originalPort = -1;\n+        for (Integer exposedPort : waitStrategyTarget.getExposedPorts()) {\n+            if (rawUri.getPort() == waitStrategyTarget.getMappedPort(exposedPort)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE2NTgwMA=="}, "originalCommit": {"oid": "96bd3e6d8d262d79c575344b7e4e0c6f1502f553"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM2Nzk1Mw==", "bodyText": "I'm still not sure we strictly need it, but I've added a try/catch anyway.", "url": "https://github.com/testcontainers/testcontainers-java/pull/2341#discussion_r456367953", "createdAt": "2020-07-17T10:48:12Z", "author": {"login": "rnorth"}, "path": "core/src/main/java/org/testcontainers/containers/wait/strategy/HttpWaitStrategy.java", "diffHunk": "@@ -150,8 +150,17 @@ protected void waitUntilReady() {\n         if (null == livenessCheckPort || -1 == livenessCheckPort) {\n             return;\n         }\n-        final String uri = buildLivenessUri(livenessCheckPort).toString();\n-        log.info(\"{}: Waiting for {} seconds for URL: {}\", containerName, startupTimeout.getSeconds(), uri);\n+        final URI rawUri = buildLivenessUri(livenessCheckPort);\n+        // Un-map the port for logging\n+        int originalPort = -1;\n+        for (Integer exposedPort : waitStrategyTarget.getExposedPorts()) {\n+            if (rawUri.getPort() == waitStrategyTarget.getMappedPort(exposedPort)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjE2NTgwMA=="}, "originalCommit": {"oid": "96bd3e6d8d262d79c575344b7e4e0c6f1502f553"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1422, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}