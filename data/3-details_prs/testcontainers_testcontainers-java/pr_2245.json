{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMDI4NTQy", "number": 2245, "title": "Prevent duplicate attempts to start Ryuk container", "bodyText": "If for example, checks fail once but the Docker client is otherwise initialized, an error would occur due to an attempt to start a Ryuk container twice with the same name.\nThis changed is aimed at avoiding that situation.\nAdditionally, if checks fail once they should fail on every subsequent attempt to start a client. Therefore, we cache the failure and rethrow it.", "createdAt": "2020-01-13T10:02:12Z", "url": "https://github.com/testcontainers/testcontainers-java/pull/2245", "merged": true, "mergeCommit": {"oid": "fb869c06db062abc86b4bd88400d9b2ccfb2bb18"}, "closed": true, "closedAt": "2020-01-19T13:04:14Z", "author": {"login": "rnorth"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb55cRggFqTM0MTczNTMzNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb73mLAAFqTM0NTAwMDM5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNzM1MzM0", "url": "https://github.com/testcontainers/testcontainers-java/pull/2245#pullrequestreview-341735334", "createdAt": "2020-01-13T10:04:04Z", "commit": {"oid": "d23519dcefaf1841f5873f925fe7dea92804d3ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDowNDowNFrOFcx2BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDowNDowNFrOFcx2BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcyMTA5Mw==", "bodyText": "Using VisibleAssertions for the logging in checks seems like major overkill, so I've changed it to use simple log statements.", "url": "https://github.com/testcontainers/testcontainers-java/pull/2245#discussion_r365721093", "createdAt": "2020-01-13T10:04:04Z", "author": {"login": "rnorth"}, "path": "core/src/main/java/org/testcontainers/DockerClientFactory.java", "diffHunk": "@@ -17,9 +17,6 @@\n import lombok.SneakyThrows;\n import lombok.Synchronized;\n import lombok.extern.slf4j.Slf4j;\n-import org.hamcrest.BaseMatcher;\n-import org.hamcrest.Description;\n-import org.rnorth.visibleassertions.VisibleAssertions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d23519dcefaf1841f5873f925fe7dea92804d3ca"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNzM2NDEx", "url": "https://github.com/testcontainers/testcontainers-java/pull/2245#pullrequestreview-341736411", "createdAt": "2020-01-13T10:06:04Z", "commit": {"oid": "d23519dcefaf1841f5873f925fe7dea92804d3ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDowNjowNFrOFcx5Ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDowNjowNFrOFcx5Ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTcyMTkzOA==", "bodyText": "It seems like a bug that currently checks can fail one time and then even try to run the checks again. We shouldn't; we should be forcing a failure so that the check failure gets investigated (rather than just the first test failing).", "url": "https://github.com/testcontainers/testcontainers-java/pull/2245#discussion_r365721938", "createdAt": "2020-01-13T10:06:04Z", "author": {"login": "rnorth"}, "path": "core/src/main/java/org/testcontainers/DockerClientFactory.java", "diffHunk": "@@ -140,32 +141,41 @@ public DockerClient client() {\n                 \"  Operating System: \" + dockerInfo.getOperatingSystem() + \"\\n\" +\n                 \"  Total Memory: \" + dockerInfo.getMemTotal() / (1024 * 1024) + \" MB\");\n \n-        String ryukContainerId = null;\n         boolean useRyuk = !Boolean.parseBoolean(System.getenv(\"TESTCONTAINERS_RYUK_DISABLED\"));\n-        if (useRyuk) {\n+        if (useRyuk && ryukContainerId == null) {\n             ryukContainerId = ResourceReaper.start(hostIpAddress, client);\n             log.info(\"Ryuk started - will monitor and terminate Testcontainers containers on JVM exit\");\n         }\n \n         boolean checksEnabled = !TestcontainersConfiguration.getInstance().isDisableChecks();\n         if (checksEnabled) {\n-            VisibleAssertions.info(\"Checking the system...\");\n-            checkDockerVersion(version.getVersion());\n-            if (ryukContainerId != null) {\n-                checkDiskSpace(client, ryukContainerId);\n-            } else {\n-                runInsideDocker(\n-                    client,\n-                    createContainerCmd -> {\n-                        createContainerCmd.withName(\"testcontainers-checks-\" + SESSION_ID);\n-                        createContainerCmd.getHostConfig().withAutoRemove(true);\n-                        createContainerCmd.withCmd(\"tail\", \"-f\", \"/dev/null\");\n-                    },\n-                    (__, containerId) -> {\n-                        checkDiskSpace(client, containerId);\n-                        return \"\";\n-                    }\n-                );\n+            // fail-fast if checks have failed previously\n+            if (cachedChecksFailure != null) {\n+                throw cachedChecksFailure;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d23519dcefaf1841f5873f925fe7dea92804d3ca"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNzYwMTcz", "url": "https://github.com/testcontainers/testcontainers-java/pull/2245#pullrequestreview-341760173", "createdAt": "2020-01-13T10:49:12Z", "commit": {"oid": "d23519dcefaf1841f5873f925fe7dea92804d3ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDo0OToxM1rOFczCZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDo0OToxM1rOFczCZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc0MDY0NA==", "bodyText": "WDYT about catching any Exception, not just RuntimeException?", "url": "https://github.com/testcontainers/testcontainers-java/pull/2245#discussion_r365740644", "createdAt": "2020-01-13T10:49:13Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/DockerClientFactory.java", "diffHunk": "@@ -140,32 +141,41 @@ public DockerClient client() {\n                 \"  Operating System: \" + dockerInfo.getOperatingSystem() + \"\\n\" +\n                 \"  Total Memory: \" + dockerInfo.getMemTotal() / (1024 * 1024) + \" MB\");\n \n-        String ryukContainerId = null;\n         boolean useRyuk = !Boolean.parseBoolean(System.getenv(\"TESTCONTAINERS_RYUK_DISABLED\"));\n-        if (useRyuk) {\n+        if (useRyuk && ryukContainerId == null) {\n             ryukContainerId = ResourceReaper.start(hostIpAddress, client);\n             log.info(\"Ryuk started - will monitor and terminate Testcontainers containers on JVM exit\");\n         }\n \n         boolean checksEnabled = !TestcontainersConfiguration.getInstance().isDisableChecks();\n         if (checksEnabled) {\n-            VisibleAssertions.info(\"Checking the system...\");\n-            checkDockerVersion(version.getVersion());\n-            if (ryukContainerId != null) {\n-                checkDiskSpace(client, ryukContainerId);\n-            } else {\n-                runInsideDocker(\n-                    client,\n-                    createContainerCmd -> {\n-                        createContainerCmd.withName(\"testcontainers-checks-\" + SESSION_ID);\n-                        createContainerCmd.getHostConfig().withAutoRemove(true);\n-                        createContainerCmd.withCmd(\"tail\", \"-f\", \"/dev/null\");\n-                    },\n-                    (__, containerId) -> {\n-                        checkDiskSpace(client, containerId);\n-                        return \"\";\n-                    }\n-                );\n+            // fail-fast if checks have failed previously\n+            if (cachedChecksFailure != null) {\n+                throw cachedChecksFailure;\n+            }\n+\n+            try {\n+                log.info(\"Checking the system...\");\n+                checkDockerVersion(version.getVersion());\n+                if (ryukContainerId != null) {\n+                    checkDiskSpace(client, ryukContainerId);\n+                } else {\n+                    runInsideDocker(\n+                        client,\n+                        createContainerCmd -> {\n+                            createContainerCmd.withName(\"testcontainers-checks-\" + SESSION_ID);\n+                            createContainerCmd.getHostConfig().withAutoRemove(true);\n+                            createContainerCmd.withCmd(\"tail\", \"-f\", \"/dev/null\");\n+                        },\n+                        (__, containerId) -> {\n+                            checkDiskSpace(client, containerId);\n+                            return \"\";\n+                        }\n+                    );\n+                }\n+            } catch (RuntimeException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d23519dcefaf1841f5873f925fe7dea92804d3ca"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNzYwNzY0", "url": "https://github.com/testcontainers/testcontainers-java/pull/2245#pullrequestreview-341760764", "createdAt": "2020-01-13T10:50:12Z", "commit": {"oid": "d23519dcefaf1841f5873f925fe7dea92804d3ca"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDo1MDoxM1rOFczELg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMDo1MDoxM1rOFczELg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc0MTEwMg==", "bodyText": "if we throw it before attempting to start Ryuk, we won't need to store ryukContainerId in a field I suppose", "url": "https://github.com/testcontainers/testcontainers-java/pull/2245#discussion_r365741102", "createdAt": "2020-01-13T10:50:13Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/DockerClientFactory.java", "diffHunk": "@@ -140,32 +141,41 @@ public DockerClient client() {\n                 \"  Operating System: \" + dockerInfo.getOperatingSystem() + \"\\n\" +\n                 \"  Total Memory: \" + dockerInfo.getMemTotal() / (1024 * 1024) + \" MB\");\n \n-        String ryukContainerId = null;\n         boolean useRyuk = !Boolean.parseBoolean(System.getenv(\"TESTCONTAINERS_RYUK_DISABLED\"));\n-        if (useRyuk) {\n+        if (useRyuk && ryukContainerId == null) {\n             ryukContainerId = ResourceReaper.start(hostIpAddress, client);\n             log.info(\"Ryuk started - will monitor and terminate Testcontainers containers on JVM exit\");\n         }\n \n         boolean checksEnabled = !TestcontainersConfiguration.getInstance().isDisableChecks();\n         if (checksEnabled) {\n-            VisibleAssertions.info(\"Checking the system...\");\n-            checkDockerVersion(version.getVersion());\n-            if (ryukContainerId != null) {\n-                checkDiskSpace(client, ryukContainerId);\n-            } else {\n-                runInsideDocker(\n-                    client,\n-                    createContainerCmd -> {\n-                        createContainerCmd.withName(\"testcontainers-checks-\" + SESSION_ID);\n-                        createContainerCmd.getHostConfig().withAutoRemove(true);\n-                        createContainerCmd.withCmd(\"tail\", \"-f\", \"/dev/null\");\n-                    },\n-                    (__, containerId) -> {\n-                        checkDiskSpace(client, containerId);\n-                        return \"\";\n-                    }\n-                );\n+            // fail-fast if checks have failed previously\n+            if (cachedChecksFailure != null) {\n+                throw cachedChecksFailure;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d23519dcefaf1841f5873f925fe7dea92804d3ca"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fb77466cb918ea8fc6337bd69f9dc021d7c3058", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/2fb77466cb918ea8fc6337bd69f9dc021d7c3058", "committedDate": "2020-01-13T20:14:33Z", "message": "Prevent duplicate attempts to start Ryuk container\nIf for example, checks fail once but the Docker client is otherwise initialized, an error would occur due to an attempt to start a Ryuk container twice with the same name.\nThis changed is aimed at avoiding that situation.\n\nAdditionally, if checks fail once they should fail on every subsequent attempt to start a client. Therefore, we cache the failure and rethrow it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63392d9921603444266cb349dfe4edded2134c20", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/63392d9921603444266cb349dfe4edded2134c20", "committedDate": "2020-01-13T20:14:35Z", "message": "Update following review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d23519dcefaf1841f5873f925fe7dea92804d3ca", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/d23519dcefaf1841f5873f925fe7dea92804d3ca", "committedDate": "2020-01-13T09:59:03Z", "message": "Prevent duplicate attempts to start Ryuk container\nIf for example, checks fail once but the Docker client is otherwise initialized, an error would occur due to an attempt to start a Ryuk container twice with the same name.\nThis changed is aimed at avoiding that situation.\n\nAdditionally, if checks fail once they should fail on every subsequent attempt to start a client. Therefore, we cache the failure and rethrow it."}, "afterCommit": {"oid": "63392d9921603444266cb349dfe4edded2134c20", "author": {"user": {"login": "rnorth", "name": "Richard North"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/63392d9921603444266cb349dfe4edded2134c20", "committedDate": "2020-01-13T20:14:35Z", "message": "Update following review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTYzMDY2", "url": "https://github.com/testcontainers/testcontainers-java/pull/2245#pullrequestreview-344963066", "createdAt": "2020-01-18T21:16:27Z", "commit": {"oid": "63392d9921603444266cb349dfe4edded2134c20"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQyMToxNjoyOFrOFfMIrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQyMToxNjoyOFrOFfMIrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0OTAwNw==", "bodyText": "it seems that we're throwing too late. We should do it before attempting to start Ryuk, otherwise the method will fail due to Ryuk name conflict and not the cached failure", "url": "https://github.com/testcontainers/testcontainers-java/pull/2245#discussion_r368249007", "createdAt": "2020-01-18T21:16:28Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/DockerClientFactory.java", "diffHunk": "@@ -140,51 +139,61 @@ public DockerClient client() {\n                 \"  Operating System: \" + dockerInfo.getOperatingSystem() + \"\\n\" +\n                 \"  Total Memory: \" + dockerInfo.getMemTotal() / (1024 * 1024) + \" MB\");\n \n-        String ryukContainerId = null;\n+        final String ryukContainerId;\n+\n         boolean useRyuk = !Boolean.parseBoolean(System.getenv(\"TESTCONTAINERS_RYUK_DISABLED\"));\n         if (useRyuk) {\n+            log.debug(\"Ryuk is enabled\");\n             ryukContainerId = ResourceReaper.start(hostIpAddress, client);\n             log.info(\"Ryuk started - will monitor and terminate Testcontainers containers on JVM exit\");\n+        } else {\n+            log.debug(\"Ryuk is disabled\");\n+            ryukContainerId = null;\n         }\n \n         boolean checksEnabled = !TestcontainersConfiguration.getInstance().isDisableChecks();\n         if (checksEnabled) {\n-            VisibleAssertions.info(\"Checking the system...\");\n-            checkDockerVersion(version.getVersion());\n-            if (ryukContainerId != null) {\n-                checkDiskSpace(client, ryukContainerId);\n-            } else {\n-                runInsideDocker(\n-                    client,\n-                    createContainerCmd -> {\n-                        createContainerCmd.withName(\"testcontainers-checks-\" + SESSION_ID);\n-                        createContainerCmd.getHostConfig().withAutoRemove(true);\n-                        createContainerCmd.withCmd(\"tail\", \"-f\", \"/dev/null\");\n-                    },\n-                    (__, containerId) -> {\n-                        checkDiskSpace(client, containerId);\n-                        return \"\";\n-                    }\n-                );\n+            log.debug(\"Checks are enabled\");\n+            // fail-fast if checks have failed previously\n+            if (cachedChecksFailure != null) {\n+                log.debug(\"There is a cached checks failure - throwing\", cachedChecksFailure);\n+                throw cachedChecksFailure;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63392d9921603444266cb349dfe4edded2134c20"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60dccf67fdcaf9df381ccfd1c65a23bf258f7b54", "author": {"user": {"login": "bsideup", "name": "Sergei Egorov"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/60dccf67fdcaf9df381ccfd1c65a23bf258f7b54", "committedDate": "2020-01-19T11:29:57Z", "message": "Fail fast, add a test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc6dd2c6424deca8edab3d2c52466d5438167beb", "author": {"user": {"login": "bsideup", "name": "Sergei Egorov"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/cc6dd2c6424deca8edab3d2c52466d5438167beb", "committedDate": "2020-01-19T11:59:31Z", "message": "make sure that Ryuk is started"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52f901fec5bb1564556f01502b3f292e9f25e53c", "author": {"user": {"login": "bsideup", "name": "Sergei Egorov"}}, "url": "https://github.com/testcontainers/testcontainers-java/commit/52f901fec5bb1564556f01502b3f292e9f25e53c", "committedDate": "2020-01-19T12:23:41Z", "message": "expect more generic `DockerException` since in some environments it is `BadRequestException`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MDAwMzk4", "url": "https://github.com/testcontainers/testcontainers-java/pull/2245#pullrequestreview-345000398", "createdAt": "2020-01-19T13:02:56Z", "commit": {"oid": "52f901fec5bb1564556f01502b3f292e9f25e53c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3411, "cost": 1, "resetAt": "2021-11-02T12:20:56Z"}}}