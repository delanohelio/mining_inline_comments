{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwMzk4Njg5", "number": 3466, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo1Nzo1MFrOE_fmQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo1Nzo1OFrOE_fmag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDEzNDQxOnYy", "diffSide": "RIGHT", "path": "modules/gcloud/src/main/java/org/testcontainers/containers/BigtableEmulatorContainer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo1Nzo1MFrOH9OdoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwMzoxOToxMFrOH93sRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk2MjE0NA==", "bodyText": "given that we have getHost() now, do you think we still need this one?", "url": "https://github.com/testcontainers/testcontainers-java/pull/3466#discussion_r533962144", "createdAt": "2020-12-02T07:57:50Z", "author": {"login": "bsideup"}, "path": "modules/gcloud/src/main/java/org/testcontainers/containers/BigtableEmulatorContainer.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package org.testcontainers.containers;\n+\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.DockerImageName;\n+\n+/**\n+ * A Bigtable container that relies in google cloud sdk.\n+ *\n+ * Default port is 9000.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ * @author Ray Tsang\n+ */\n+public class BigtableEmulatorContainer extends GenericContainer<BigtableEmulatorContainer> {\n+\n+    private static final DockerImageName DEFAULT_IMAGE_NAME = DockerImageName.parse(\"gcr.io/google.com/cloudsdktool/cloud-sdk\");\n+\n+    private static final String CMD = \"gcloud beta emulators bigtable start --host-port 0.0.0.0:9000\";\n+    private static final int PORT = 9000;\n+\n+    public BigtableEmulatorContainer(final DockerImageName dockerImageName) {\n+        super(dockerImageName);\n+\n+        dockerImageName.assertCompatibleWith(DEFAULT_IMAGE_NAME);\n+\n+        withExposedPorts(PORT);\n+        setWaitStrategy(new LogMessageWaitStrategy()\n+                .withRegEx(\"(?s).*running.*$\"));\n+        withCommand(\"/bin/sh\", \"-c\", CMD);\n+    }\n+\n+    /**\n+     * @return a <code>host:port</code> pair corresponding to the address on which the emulator is\n+     * reachable from the test host machine. Directly usable as a parameter to the\n+     * com.google.cloud.ServiceOptions.Builder#setHost(java.lang.String) method.\n+     */\n+    public String getEmulatorEndpoint() {\n+        return getContainerIpAddress() + \":\" + getMappedPort(PORT);\n+    }\n+\n+    public String getEmulatorHost() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f1564b217ae77955dd41f68d55032a2f09c4584"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk3OTYxMA==", "bodyText": "will remove.", "url": "https://github.com/testcontainers/testcontainers-java/pull/3466#discussion_r533979610", "createdAt": "2020-12-02T08:30:14Z", "author": {"login": "saturnism"}, "path": "modules/gcloud/src/main/java/org/testcontainers/containers/BigtableEmulatorContainer.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package org.testcontainers.containers;\n+\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.DockerImageName;\n+\n+/**\n+ * A Bigtable container that relies in google cloud sdk.\n+ *\n+ * Default port is 9000.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ * @author Ray Tsang\n+ */\n+public class BigtableEmulatorContainer extends GenericContainer<BigtableEmulatorContainer> {\n+\n+    private static final DockerImageName DEFAULT_IMAGE_NAME = DockerImageName.parse(\"gcr.io/google.com/cloudsdktool/cloud-sdk\");\n+\n+    private static final String CMD = \"gcloud beta emulators bigtable start --host-port 0.0.0.0:9000\";\n+    private static final int PORT = 9000;\n+\n+    public BigtableEmulatorContainer(final DockerImageName dockerImageName) {\n+        super(dockerImageName);\n+\n+        dockerImageName.assertCompatibleWith(DEFAULT_IMAGE_NAME);\n+\n+        withExposedPorts(PORT);\n+        setWaitStrategy(new LogMessageWaitStrategy()\n+                .withRegEx(\"(?s).*running.*$\"));\n+        withCommand(\"/bin/sh\", \"-c\", CMD);\n+    }\n+\n+    /**\n+     * @return a <code>host:port</code> pair corresponding to the address on which the emulator is\n+     * reachable from the test host machine. Directly usable as a parameter to the\n+     * com.google.cloud.ServiceOptions.Builder#setHost(java.lang.String) method.\n+     */\n+    public String getEmulatorEndpoint() {\n+        return getContainerIpAddress() + \":\" + getMappedPort(PORT);\n+    }\n+\n+    public String getEmulatorHost() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk2MjE0NA=="}, "originalCommit": {"oid": "9f1564b217ae77955dd41f68d55032a2f09c4584"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDYzNzYzOQ==", "bodyText": "removed.", "url": "https://github.com/testcontainers/testcontainers-java/pull/3466#discussion_r534637639", "createdAt": "2020-12-03T03:19:10Z", "author": {"login": "saturnism"}, "path": "modules/gcloud/src/main/java/org/testcontainers/containers/BigtableEmulatorContainer.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package org.testcontainers.containers;\n+\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.DockerImageName;\n+\n+/**\n+ * A Bigtable container that relies in google cloud sdk.\n+ *\n+ * Default port is 9000.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ * @author Ray Tsang\n+ */\n+public class BigtableEmulatorContainer extends GenericContainer<BigtableEmulatorContainer> {\n+\n+    private static final DockerImageName DEFAULT_IMAGE_NAME = DockerImageName.parse(\"gcr.io/google.com/cloudsdktool/cloud-sdk\");\n+\n+    private static final String CMD = \"gcloud beta emulators bigtable start --host-port 0.0.0.0:9000\";\n+    private static final int PORT = 9000;\n+\n+    public BigtableEmulatorContainer(final DockerImageName dockerImageName) {\n+        super(dockerImageName);\n+\n+        dockerImageName.assertCompatibleWith(DEFAULT_IMAGE_NAME);\n+\n+        withExposedPorts(PORT);\n+        setWaitStrategy(new LogMessageWaitStrategy()\n+                .withRegEx(\"(?s).*running.*$\"));\n+        withCommand(\"/bin/sh\", \"-c\", CMD);\n+    }\n+\n+    /**\n+     * @return a <code>host:port</code> pair corresponding to the address on which the emulator is\n+     * reachable from the test host machine. Directly usable as a parameter to the\n+     * com.google.cloud.ServiceOptions.Builder#setHost(java.lang.String) method.\n+     */\n+    public String getEmulatorEndpoint() {\n+        return getContainerIpAddress() + \":\" + getMappedPort(PORT);\n+    }\n+\n+    public String getEmulatorHost() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk2MjE0NA=="}, "originalCommit": {"oid": "9f1564b217ae77955dd41f68d55032a2f09c4584"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MDEzNDgyOnYy", "diffSide": "RIGHT", "path": "modules/gcloud/src/main/java/org/testcontainers/containers/BigtableEmulatorContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo1Nzo1OFrOH9Od4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQwNzo1Nzo1OFrOH9Od4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzk2MjIwOA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return getContainerIpAddress() + \":\" + getMappedPort(PORT);\n          \n          \n            \n                    return getHost() + \":\" + getEmulatorPort();", "url": "https://github.com/testcontainers/testcontainers-java/pull/3466#discussion_r533962208", "createdAt": "2020-12-02T07:57:58Z", "author": {"login": "bsideup"}, "path": "modules/gcloud/src/main/java/org/testcontainers/containers/BigtableEmulatorContainer.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package org.testcontainers.containers;\n+\n+import org.testcontainers.containers.wait.strategy.LogMessageWaitStrategy;\n+import org.testcontainers.utility.DockerImageName;\n+\n+/**\n+ * A Bigtable container that relies in google cloud sdk.\n+ *\n+ * Default port is 9000.\n+ *\n+ * @author Edd\u00fa Mel\u00e9ndez\n+ * @author Ray Tsang\n+ */\n+public class BigtableEmulatorContainer extends GenericContainer<BigtableEmulatorContainer> {\n+\n+    private static final DockerImageName DEFAULT_IMAGE_NAME = DockerImageName.parse(\"gcr.io/google.com/cloudsdktool/cloud-sdk\");\n+\n+    private static final String CMD = \"gcloud beta emulators bigtable start --host-port 0.0.0.0:9000\";\n+    private static final int PORT = 9000;\n+\n+    public BigtableEmulatorContainer(final DockerImageName dockerImageName) {\n+        super(dockerImageName);\n+\n+        dockerImageName.assertCompatibleWith(DEFAULT_IMAGE_NAME);\n+\n+        withExposedPorts(PORT);\n+        setWaitStrategy(new LogMessageWaitStrategy()\n+                .withRegEx(\"(?s).*running.*$\"));\n+        withCommand(\"/bin/sh\", \"-c\", CMD);\n+    }\n+\n+    /**\n+     * @return a <code>host:port</code> pair corresponding to the address on which the emulator is\n+     * reachable from the test host machine. Directly usable as a parameter to the\n+     * com.google.cloud.ServiceOptions.Builder#setHost(java.lang.String) method.\n+     */\n+    public String getEmulatorEndpoint() {\n+        return getContainerIpAddress() + \":\" + getMappedPort(PORT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f1564b217ae77955dd41f68d55032a2f09c4584"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1432, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}