{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NjQwMjQy", "number": 2692, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzo0MjozOFrOD7qA0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODoyNToxMlrOD79jzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzODgwOTE1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/testcontainers/images/LocalImagesCache.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxMzo0MjozOFrOGUHONw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODoyNDozM1rOGUmzjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0MzAzMQ==", "bodyText": "alternatively, one can provide a 3rd argument to toMap that won't throw", "url": "https://github.com/testcontainers/testcontainers-java/pull/2692#discussion_r423743031", "createdAt": "2020-05-12T13:42:38Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/images/LocalImagesCache.java", "diffHunk": "@@ -79,7 +79,11 @@ private void populateFromList(List<Image> images) {\n             }\n \n             cache.putAll(\n-                Stream.of(repoTags).collect(Collectors.toMap(\n+                Stream.of(repoTags)\n+                    // Protection against some edge case where local image repository tags end up with duplicates\n+                    // making toMap crash at merge time.\n+                   .distinct()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88c47c31d5795a3e2320960e5185bd0170d5d43d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3MjEwOA==", "bodyText": "Merge function like (u, u2) -> u ?\nWould do the same thing with slightly worse performance  (merge function would be applied after key and value computation), no ?\nUp to you, tell me what you prefer.", "url": "https://github.com/testcontainers/testcontainers-java/pull/2692#discussion_r424072108", "createdAt": "2020-05-12T22:34:17Z", "author": {"login": "Choobz"}, "path": "core/src/main/java/org/testcontainers/images/LocalImagesCache.java", "diffHunk": "@@ -79,7 +79,11 @@ private void populateFromList(List<Image> images) {\n             }\n \n             cache.putAll(\n-                Stream.of(repoTags).collect(Collectors.toMap(\n+                Stream.of(repoTags)\n+                    // Protection against some edge case where local image repository tags end up with duplicates\n+                    // making toMap crash at merge time.\n+                   .distinct()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0MzAzMQ=="}, "originalCommit": {"oid": "88c47c31d5795a3e2320960e5185bd0170d5d43d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2MDQ5Mg==", "bodyText": "Ok, you're right, let's keep distinct() \ud83d\udc4d", "url": "https://github.com/testcontainers/testcontainers-java/pull/2692#discussion_r424260492", "createdAt": "2020-05-13T08:24:33Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/images/LocalImagesCache.java", "diffHunk": "@@ -79,7 +79,11 @@ private void populateFromList(List<Image> images) {\n             }\n \n             cache.putAll(\n-                Stream.of(repoTags).collect(Collectors.toMap(\n+                Stream.of(repoTags)\n+                    // Protection against some edge case where local image repository tags end up with duplicates\n+                    // making toMap crash at merge time.\n+                   .distinct()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc0MzAzMQ=="}, "originalCommit": {"oid": "88c47c31d5795a3e2320960e5185bd0170d5d43d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjAxMTY1OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/testcontainers/images/LocalImagesCache.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwODoyNToxMlrOGUm09g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzoxMTo1N1rOGU7fGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2MDg1NA==", "bodyText": "could you please fix the indentation?", "url": "https://github.com/testcontainers/testcontainers-java/pull/2692#discussion_r424260854", "createdAt": "2020-05-13T08:25:12Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/images/LocalImagesCache.java", "diffHunk": "@@ -79,7 +79,11 @@ private void populateFromList(List<Image> images) {\n             }\n \n             cache.putAll(\n-                Stream.of(repoTags).collect(Collectors.toMap(\n+                Stream.of(repoTags)\n+                    // Protection against some edge case where local image repository tags end up with duplicates\n+                    // making toMap crash at merge time.\n+                   .distinct()\n+                    .collect(Collectors.toMap(\n                     DockerImageName::new,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88c47c31d5795a3e2320960e5185bd0170d5d43d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5OTMyMQ==", "bodyText": "Done", "url": "https://github.com/testcontainers/testcontainers-java/pull/2692#discussion_r424599321", "createdAt": "2020-05-13T17:11:57Z", "author": {"login": "Choobz"}, "path": "core/src/main/java/org/testcontainers/images/LocalImagesCache.java", "diffHunk": "@@ -79,7 +79,11 @@ private void populateFromList(List<Image> images) {\n             }\n \n             cache.putAll(\n-                Stream.of(repoTags).collect(Collectors.toMap(\n+                Stream.of(repoTags)\n+                    // Protection against some edge case where local image repository tags end up with duplicates\n+                    // making toMap crash at merge time.\n+                   .distinct()\n+                    .collect(Collectors.toMap(\n                     DockerImageName::new,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDI2MDg1NA=="}, "originalCommit": {"oid": "88c47c31d5795a3e2320960e5185bd0170d5d43d"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1524, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}