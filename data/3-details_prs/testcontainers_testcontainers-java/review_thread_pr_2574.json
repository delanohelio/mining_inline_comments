{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMTA1Mzc4", "number": 2574, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDo0MDowNlrODxlizQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDo0NTowNVrODxlpwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzIxOTMzOnYy", "diffSide": "RIGHT", "path": "modules/selenium/src/main/java/org/testcontainers/containers/BrowserWebDriverContainer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDo0MDowNlrOGFItkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDo0ODoyOFrOGFI_iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAzODgwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if(vncRecordingDirectory == null){\n          \n          \n            \n                        if (vncRecordingDirectory == null) {", "url": "https://github.com/testcontainers/testcontainers-java/pull/2574#discussion_r408038803", "createdAt": "2020-04-14T10:40:06Z", "author": {"login": "bsideup"}, "path": "modules/selenium/src/main/java/org/testcontainers/containers/BrowserWebDriverContainer.java", "diffHunk": "@@ -143,12 +143,15 @@ protected void configure() {\n         }\n \n         if (recordingMode != VncRecordingMode.SKIP) {\n-            try {\n-                vncRecordingDirectory = Files.createTempDirectory(TC_TEMP_DIR_PREFIX).toFile();\n-            } catch (IOException e) {\n-                // should never happen as per javadoc, since we use valid prefix\n-                logger().error(\"Exception while trying to create temp directory \" + vncRecordingDirectory.getAbsolutePath(), e);\n-                throw new ContainerLaunchException(\"Exception while trying to create temp directory\", e);\n+\n+            if(vncRecordingDirectory == null){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f90acaeb3a6f2e7ca6f48ed84a8dc4aa43b4760"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0Mjk4OQ==", "bodyText": "Oh yes, damm...\nDo you have a formater for the project to import via IntelliJ?", "url": "https://github.com/testcontainers/testcontainers-java/pull/2574#discussion_r408042989", "createdAt": "2020-04-14T10:47:43Z", "author": {"login": "srempfer"}, "path": "modules/selenium/src/main/java/org/testcontainers/containers/BrowserWebDriverContainer.java", "diffHunk": "@@ -143,12 +143,15 @@ protected void configure() {\n         }\n \n         if (recordingMode != VncRecordingMode.SKIP) {\n-            try {\n-                vncRecordingDirectory = Files.createTempDirectory(TC_TEMP_DIR_PREFIX).toFile();\n-            } catch (IOException e) {\n-                // should never happen as per javadoc, since we use valid prefix\n-                logger().error(\"Exception while trying to create temp directory \" + vncRecordingDirectory.getAbsolutePath(), e);\n-                throw new ContainerLaunchException(\"Exception while trying to create temp directory\", e);\n+\n+            if(vncRecordingDirectory == null){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAzODgwMw=="}, "originalCommit": {"oid": "5f90acaeb3a6f2e7ca6f48ed84a8dc4aa43b4760"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MzQwMw==", "bodyText": "We use IDEA's standard format with some manual asks that are not easily configurable :)", "url": "https://github.com/testcontainers/testcontainers-java/pull/2574#discussion_r408043403", "createdAt": "2020-04-14T10:48:28Z", "author": {"login": "bsideup"}, "path": "modules/selenium/src/main/java/org/testcontainers/containers/BrowserWebDriverContainer.java", "diffHunk": "@@ -143,12 +143,15 @@ protected void configure() {\n         }\n \n         if (recordingMode != VncRecordingMode.SKIP) {\n-            try {\n-                vncRecordingDirectory = Files.createTempDirectory(TC_TEMP_DIR_PREFIX).toFile();\n-            } catch (IOException e) {\n-                // should never happen as per javadoc, since we use valid prefix\n-                logger().error(\"Exception while trying to create temp directory \" + vncRecordingDirectory.getAbsolutePath(), e);\n-                throw new ContainerLaunchException(\"Exception while trying to create temp directory\", e);\n+\n+            if(vncRecordingDirectory == null){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAzODgwMw=="}, "originalCommit": {"oid": "5f90acaeb3a6f2e7ca6f48ed84a8dc4aa43b4760"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzIzMDAzOnYy", "diffSide": "RIGHT", "path": "modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDo0MzowNlrOGFIz-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDo0MzowNlrOGFIz-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MDQ0Mw==", "bodyText": "Excellent addition to the test, thanks.", "url": "https://github.com/testcontainers/testcontainers-java/pull/2574#discussion_r408040443", "createdAt": "2020-04-14T10:43:06Z", "author": {"login": "kiview"}, "path": "modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java", "diffHunk": "@@ -11,23 +13,43 @@\n \n import java.io.File;\n import java.util.Optional;\n-\n+import static org.junit.Assert.assertTrue;\n import static org.testcontainers.containers.BrowserWebDriverContainer.VncRecordingMode.RECORD_ALL;\n \n @RunWith(Enclosed.class)\n public class ChromeRecordingWebDriverContainerTest extends BaseWebDriverContainerTest {\n \n     public static class ChromeThatRecordsAllTests {\n \n+        public File vncRecordingDirectory = new File(\"./build/\");\n+\n         @Rule\n         public BrowserWebDriverContainer chrome = new BrowserWebDriverContainer()\n                 .withCapabilities(new ChromeOptions())\n-                .withRecordingMode(RECORD_ALL, new File(\"./build/\"))\n+                .withRecordingMode(RECORD_ALL, vncRecordingDirectory)\n                 .withRecordingFileFactory(new DefaultRecordingFileFactory());\n \n         @Test\n         public void recordingTestThatShouldBeRecordedAndRetained() {\n+\n+            final String testName = \"ChromeThatRecordsAllTests-recordingTestThatShouldBeRecordedAndRetained-\"\n+                + System.currentTimeMillis();\n+\n             doSimpleExplore(chrome);\n+            chrome.afterTest(new TestDescription() {\n+                @Override\n+                public String getTestId() {\n+                    return getFilesystemFriendlyName();\n+                }\n+\n+                @Override\n+                public String getFilesystemFriendlyName() {\n+                    return testName;\n+                }\n+            }, Optional.empty());\n+\n+            String[] files = vncRecordingDirectory.list(new PatternFilenameFilter(\"PASSED-\" + testName + \"-.*\\\\.flv\"));\n+            assertTrue(\"Recorded file not found\", files.length == 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f90acaeb3a6f2e7ca6f48ed84a8dc4aa43b4760"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMzIzNzEzOnYy", "diffSide": "RIGHT", "path": "modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDo0NTowNVrOGFI4Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMTozMTozNVrOGFKWFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MTU2Mg==", "bodyText": "Thanks for adding a test!\nCould you please create a temp directory here instead of reusing ./build/?\nIt will also help simplifying the assertion (no need to randomize the test name)", "url": "https://github.com/testcontainers/testcontainers-java/pull/2574#discussion_r408041562", "createdAt": "2020-04-14T10:45:05Z", "author": {"login": "bsideup"}, "path": "modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java", "diffHunk": "@@ -11,23 +13,43 @@\n \n import java.io.File;\n import java.util.Optional;\n-\n+import static org.junit.Assert.assertTrue;\n import static org.testcontainers.containers.BrowserWebDriverContainer.VncRecordingMode.RECORD_ALL;\n \n @RunWith(Enclosed.class)\n public class ChromeRecordingWebDriverContainerTest extends BaseWebDriverContainerTest {\n \n     public static class ChromeThatRecordsAllTests {\n \n+        public File vncRecordingDirectory = new File(\"./build/\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f90acaeb3a6f2e7ca6f48ed84a8dc4aa43b4760"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA2NTU1OA==", "bodyText": "Done...", "url": "https://github.com/testcontainers/testcontainers-java/pull/2574#discussion_r408065558", "createdAt": "2020-04-14T11:31:35Z", "author": {"login": "srempfer"}, "path": "modules/selenium/src/test/java/org/testcontainers/junit/ChromeRecordingWebDriverContainerTest.java", "diffHunk": "@@ -11,23 +13,43 @@\n \n import java.io.File;\n import java.util.Optional;\n-\n+import static org.junit.Assert.assertTrue;\n import static org.testcontainers.containers.BrowserWebDriverContainer.VncRecordingMode.RECORD_ALL;\n \n @RunWith(Enclosed.class)\n public class ChromeRecordingWebDriverContainerTest extends BaseWebDriverContainerTest {\n \n     public static class ChromeThatRecordsAllTests {\n \n+        public File vncRecordingDirectory = new File(\"./build/\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA0MTU2Mg=="}, "originalCommit": {"oid": "5f90acaeb3a6f2e7ca6f48ed84a8dc4aa43b4760"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1558, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}