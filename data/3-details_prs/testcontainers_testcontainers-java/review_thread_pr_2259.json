{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NDU4NzMw", "number": 2259, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxOTo1MTozMFrODZAtaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwNjoyMjozM1rODu17VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTUyNjE3OnYy", "diffSide": "LEFT", "path": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxOTo1MTozMFrOFfL5eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxOTo1MTozMFrOFfL5eQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0NTExMw==", "bodyText": "Note that there seem to be a lot of import movements. I'm not sure why this is suddenly happening, but I'm confident that the .editorconfig rules we have set up are being respected:\n[*.java]\nindent_style = space\nindent_size = 4\n# Never use star imports\nij_java_names_count_to_use_import_on_demand = 99\nij_java_class_count_to_use_import_on_demand = 99\nij_java_layout_static_imports_separately = true\n\nMaybe recent edits to these files have not been picking up the rules?", "url": "https://github.com/testcontainers/testcontainers-java/pull/2259#discussion_r368245113", "createdAt": "2020-01-18T19:51:30Z", "author": {"login": "rnorth"}, "path": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "diffHunk": "@@ -26,9 +26,6 @@\n import lombok.Setter;\n import lombok.SneakyThrows;\n import org.apache.commons.codec.digest.DigestUtils;\n-import org.apache.commons.compress.archivers.tar.TarArchiveInputStream;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de987ac76fedd5422accf7dd374aeee11f24a94d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODE3NDg5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwOTo1MToxOFrOFvvL7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMVQxNjozNjo0MlrOFwPAnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYwMDQ5NA==", "bodyText": "this will break binary compatibility", "url": "https://github.com/testcontainers/testcontainers-java/pull/2259#discussion_r385600494", "createdAt": "2020-02-28T09:51:18Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "diffHunk": "@@ -278,10 +268,10 @@ public SELF dependsOn(Startable... startables) {\n      * Note that the circular dependencies are not supported.\n      *\n      * @param startables a list of {@link Startable} to depend on\n-     * @see Startables#deepStart(Collection)\n+     * @see Startables#deepStart(Iterable)\n      */\n-    public SELF dependsOn(List<Startable> startables) {\n-        dependencies.addAll(startables);\n+    public SELF dependsOn(Iterable<? extends Startable> startables) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de987ac76fedd5422accf7dd374aeee11f24a94d"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjEyMTg4NQ==", "bodyText": "Pushing a commit now to reinstate dependsOn(List)", "url": "https://github.com/testcontainers/testcontainers-java/pull/2259#discussion_r386121885", "createdAt": "2020-03-01T16:36:42Z", "author": {"login": "rnorth"}, "path": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "diffHunk": "@@ -278,10 +268,10 @@ public SELF dependsOn(Startable... startables) {\n      * Note that the circular dependencies are not supported.\n      *\n      * @param startables a list of {@link Startable} to depend on\n-     * @see Startables#deepStart(Collection)\n+     * @see Startables#deepStart(Iterable)\n      */\n-    public SELF dependsOn(List<Startable> startables) {\n-        dependencies.addAll(startables);\n+    public SELF dependsOn(Iterable<? extends Startable> startables) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYwMDQ5NA=="}, "originalCommit": {"oid": "de987ac76fedd5422accf7dd374aeee11f24a94d"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNDQ0NjI5OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/testcontainers/lifecycle/Startables.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwNjoyMjozM1rOGA9MDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNVQwNjo0MjoyM1rOGA9SkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY1NTY5NA==", "bodyText": "Whoops, japicmp has flagged this!\nJust as we did in GenericContainer, I'll reinstate the previous method signature for binary compatibility.", "url": "https://github.com/testcontainers/testcontainers-java/pull/2259#discussion_r403655694", "createdAt": "2020-04-05T06:22:33Z", "author": {"login": "rnorth"}, "path": "core/src/main/java/org/testcontainers/lifecycle/Startables.java", "diffHunk": "@@ -27,8 +30,8 @@ public Thread newThread(Runnable r) {\n     /**\n      * @see #deepStart(Stream)\n      */\n-    public CompletableFuture<Void> deepStart(Collection<? extends Startable> startables) {\n-        return deepStart(startables.stream());\n+    public CompletableFuture<Void> deepStart(Iterable<? extends Startable> startables) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c50ee500b37cc2b9f3d242a87e96993c8e9d7f85"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY1NzM2MA==", "bodyText": "Reinstated.", "url": "https://github.com/testcontainers/testcontainers-java/pull/2259#discussion_r403657360", "createdAt": "2020-04-05T06:42:23Z", "author": {"login": "rnorth"}, "path": "core/src/main/java/org/testcontainers/lifecycle/Startables.java", "diffHunk": "@@ -27,8 +30,8 @@ public Thread newThread(Runnable r) {\n     /**\n      * @see #deepStart(Stream)\n      */\n-    public CompletableFuture<Void> deepStart(Collection<? extends Startable> startables) {\n-        return deepStart(startables.stream());\n+    public CompletableFuture<Void> deepStart(Iterable<? extends Startable> startables) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzY1NTY5NA=="}, "originalCommit": {"oid": "c50ee500b37cc2b9f3d242a87e96993c8e9d7f85"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1409, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}