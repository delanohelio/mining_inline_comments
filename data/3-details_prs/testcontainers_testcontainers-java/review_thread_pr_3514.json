{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1ODQzNzE0", "number": 3514, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMjowODowNlrOE-n-Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMjowODowNlrOE-n-Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0MTAyMDYyOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMjowODowNlrOH74RMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMzozMjozNVrOH77Opg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU0OTkzOA==", "bodyText": "I am not too sure we should do it here. Future versions of Docker for Windows may become strict about the path (C:\\foo\\bar is good, /mnt/c/foo/bar is bad)\nI would just ensure that we pass it as C:\\ and not C:/", "url": "https://github.com/testcontainers/testcontainers-java/pull/3514#discussion_r532549938", "createdAt": "2020-11-30T12:08:06Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "diffHunk": "@@ -946,7 +946,7 @@ public void addEnv(String key, String value) {\n     public void addFileSystemBind(final String hostPath, final String containerPath, final BindMode mode, final SelinuxContext selinuxContext) {\n \n         final MountableFile mountableFile = MountableFile.forHostPath(hostPath);\n-        binds.add(new Bind(mountableFile.getResolvedPath(), new Volume(containerPath), mode.accessMode, selinuxContext.selContext));\n+        binds.add(new Bind(mountableFile.getUnixFilesystemPath(), new Volume(containerPath), mode.accessMode, selinuxContext.selContext));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4738e07baf046b246e767fc6b4b3e365aedeabb9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5NTUyNQ==", "bodyText": "It translates into /c/foo/bar btw.\n/mnt/c/foo/bar would be for cross mounting from within WSL2.", "url": "https://github.com/testcontainers/testcontainers-java/pull/3514#discussion_r532595525", "createdAt": "2020-11-30T13:28:01Z", "author": {"login": "kiview"}, "path": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "diffHunk": "@@ -946,7 +946,7 @@ public void addEnv(String key, String value) {\n     public void addFileSystemBind(final String hostPath, final String containerPath, final BindMode mode, final SelinuxContext selinuxContext) {\n \n         final MountableFile mountableFile = MountableFile.forHostPath(hostPath);\n-        binds.add(new Bind(mountableFile.getResolvedPath(), new Volume(containerPath), mode.accessMode, selinuxContext.selContext));\n+        binds.add(new Bind(mountableFile.getUnixFilesystemPath(), new Volume(containerPath), mode.accessMode, selinuxContext.selContext));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU0OTkzOA=="}, "originalCommit": {"oid": "4738e07baf046b246e767fc6b4b3e365aedeabb9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU5ODQzOA==", "bodyText": "Ooops, sorry, my memory failed me :) But nevertheless, I would let Docker make the decision on how to translate C:\\foo\\bar into a valid bind", "url": "https://github.com/testcontainers/testcontainers-java/pull/3514#discussion_r532598438", "createdAt": "2020-11-30T13:32:35Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/containers/GenericContainer.java", "diffHunk": "@@ -946,7 +946,7 @@ public void addEnv(String key, String value) {\n     public void addFileSystemBind(final String hostPath, final String containerPath, final BindMode mode, final SelinuxContext selinuxContext) {\n \n         final MountableFile mountableFile = MountableFile.forHostPath(hostPath);\n-        binds.add(new Bind(mountableFile.getResolvedPath(), new Volume(containerPath), mode.accessMode, selinuxContext.selContext));\n+        binds.add(new Bind(mountableFile.getUnixFilesystemPath(), new Volume(containerPath), mode.accessMode, selinuxContext.selContext));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjU0OTkzOA=="}, "originalCommit": {"oid": "4738e07baf046b246e767fc6b4b3e365aedeabb9"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1433, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}