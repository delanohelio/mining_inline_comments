{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NDgzOTY0", "number": 2314, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDo0MzozOFrODcMqbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMzozODowNlrODcPM5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODk0MTg4OnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDo0MzozOFrOFkHnmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDo0MzozOFrOFkHnmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxNzg4MQ==", "bodyText": "please create a separate test for the negative scenario", "url": "https://github.com/testcontainers/testcontainers-java/pull/2314#discussion_r373417881", "createdAt": "2020-01-31T10:43:38Z", "author": {"login": "bsideup"}, "path": "core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java", "diffHunk": "@@ -33,4 +35,15 @@ public void testGetServicePort() {\n         assertNotNull(\"Port is set for service with instance number\", serviceWithoutInstancePort);\n         assertEquals(\"Service ports are the same\", serviceWithInstancePort, serviceWithoutInstancePort);\n     }\n+\n+    @Test\n+    public void testGetContainerByServiceName() {\n+        String existingServiceName = \"db_1\";\n+        assertTrue(format(\"Container should be found by service name %s\", existingServiceName),\n+            environment.getServiceContainerByName(existingServiceName).isPresent());\n+\n+        String notExistingServiceName = \"db_256\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "543218b16dbc8238dc155c93e630d90057d841dd"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODk0ODQzOnYy", "diffSide": "RIGHT", "path": "core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMDo0NjowMFrOFkHrdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMzozNjo1MVrOFkLguQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxODg3MA==", "bodyText": "could you please also assert some properties of the returned ContainerState (e.g. getExposedPorts()) to ensure that the returned instance is the correct one (and not Redis for example)", "url": "https://github.com/testcontainers/testcontainers-java/pull/2314#discussion_r373418870", "createdAt": "2020-01-31T10:46:00Z", "author": {"login": "bsideup"}, "path": "core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java", "diffHunk": "@@ -33,4 +35,15 @@ public void testGetServicePort() {\n         assertNotNull(\"Port is set for service with instance number\", serviceWithoutInstancePort);\n         assertEquals(\"Service ports are the same\", serviceWithInstancePort, serviceWithoutInstancePort);\n     }\n+\n+    @Test\n+    public void testGetContainerByServiceName() {\n+        String existingServiceName = \"db_1\";\n+        assertTrue(format(\"Container should be found by service name %s\", existingServiceName),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "543218b16dbc8238dc155c93e630d90057d841dd"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ4MTY1Nw==", "bodyText": "Added additional check to compare if exported ports belong to correct container we are checking against", "url": "https://github.com/testcontainers/testcontainers-java/pull/2314#discussion_r373481657", "createdAt": "2020-01-31T13:36:51Z", "author": {"login": "artjomka"}, "path": "core/src/test/java/org/testcontainers/junit/DockerComposeContainerTest.java", "diffHunk": "@@ -33,4 +35,15 @@ public void testGetServicePort() {\n         assertNotNull(\"Port is set for service with instance number\", serviceWithoutInstancePort);\n         assertEquals(\"Service ports are the same\", serviceWithInstancePort, serviceWithoutInstancePort);\n     }\n+\n+    @Test\n+    public void testGetContainerByServiceName() {\n+        String existingServiceName = \"db_1\";\n+        assertTrue(format(\"Container should be found by service name %s\", existingServiceName),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQxODg3MA=="}, "originalCommit": {"oid": "543218b16dbc8238dc155c93e630d90057d841dd"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwOTM1NzgzOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQxMzozODowNlrOFkLiwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxODo1OTo1M1rOFkjC7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ4MjE3Nw==", "bodyText": "I wonder if we should change the name to something like getContainerByServiceName...\n@rnorth @kiview WDYT?", "url": "https://github.com/testcontainers/testcontainers-java/pull/2314#discussion_r373482177", "createdAt": "2020-01-31T13:38:06Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java", "diffHunk": "@@ -479,6 +494,10 @@ public SELF withRemoveImages(RemoveImages removeImages) {\n         return self();\n     }\n \n+    public Optional<ContainerState> getServiceContainerByName(String serviceName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e097aae25432c161f5e2db8d79fe5722a4abc867"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2MDA3Ng==", "bodyText": "I think that makes sense, yeah.", "url": "https://github.com/testcontainers/testcontainers-java/pull/2314#discussion_r373860076", "createdAt": "2020-02-02T16:57:26Z", "author": {"login": "rnorth"}, "path": "core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java", "diffHunk": "@@ -479,6 +494,10 @@ public SELF withRemoveImages(RemoveImages removeImages) {\n         return self();\n     }\n \n+    public Optional<ContainerState> getServiceContainerByName(String serviceName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ4MjE3Nw=="}, "originalCommit": {"oid": "e097aae25432c161f5e2db8d79fe5722a4abc867"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2NzI0Nw==", "bodyText": "@artjomka could you please adjust the name of the method? :)", "url": "https://github.com/testcontainers/testcontainers-java/pull/2314#discussion_r373867247", "createdAt": "2020-02-02T18:59:53Z", "author": {"login": "bsideup"}, "path": "core/src/main/java/org/testcontainers/containers/DockerComposeContainer.java", "diffHunk": "@@ -479,6 +494,10 @@ public SELF withRemoveImages(RemoveImages removeImages) {\n         return self();\n     }\n \n+    public Optional<ContainerState> getServiceContainerByName(String serviceName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzQ4MjE3Nw=="}, "originalCommit": {"oid": "e097aae25432c161f5e2db8d79fe5722a4abc867"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1416, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}