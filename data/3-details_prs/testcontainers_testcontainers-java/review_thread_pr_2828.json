{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NjQ4NDE2", "number": 2828, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNToxNToyM1rOEByomg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzozNDoyNVrOECCSrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzEzNjI2OnYy", "diffSide": "RIGHT", "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchDocumentationTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNToxNToyM1rOGd2hVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNTo0NTo1OFrOGd38TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1NTE1Nw==", "bodyText": "please use try-with-resources to make sure that stop() is executed even if some assert fails", "url": "https://github.com/testcontainers/testcontainers-java/pull/2828#discussion_r433955157", "createdAt": "2020-06-02T15:15:23Z", "author": {"login": "bsideup"}, "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchDocumentationTest.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package org.testcontainers.elasticsearch;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+\n+import org.apache.http.HttpHost;\n+import org.apache.http.auth.AuthScope;\n+import org.apache.http.auth.UsernamePasswordCredentials;\n+import org.apache.http.client.CredentialsProvider;\n+import org.apache.http.impl.client.BasicCredentialsProvider;\n+import org.elasticsearch.action.admin.cluster.health.ClusterHealthResponse;\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.client.RestClient;\n+import org.elasticsearch.client.transport.TransportClient;\n+import org.elasticsearch.cluster.health.ClusterHealthStatus;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.transport.TransportAddress;\n+import org.elasticsearch.transport.client.PreBuiltTransportClient;\n+import org.junit.Test;\n+\n+public class ElasticsearchDocumentationTest {\n+\n+    @Test\n+    public void containerWithHttpClient() throws IOException {\n+        // httpClientContainerStart {\n+        // Create the elasticsearch container.\n+        ElasticsearchContainer container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch:6.4.1\");\n+\n+        // Start the container. This step might take some time...\n+        container.start();\n+\n+        // Do whatever you want with the rest client ...\n+        final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n+        credentialsProvider.setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(\"elastic\", \"changeme\"));\n+        RestClient restClient = RestClient.builder(HttpHost.create(container.getHttpHostAddress()))\n+            .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider))\n+            .build();\n+        Response response = restClient.performRequest(new Request(\"GET\", \"/\"));\n+        // }\n+        // Compare Result\n+        assertEquals(response.getStatusLine().getStatusCode(), 200);\n+\n+        // httpClientContainerStop {\n+        // Stop the container.\n+        container.stop();\n+        // }\n+    }\n+\n+    @Test\n+    public void containerWithTransportClient() {\n+        // Create the elasticsearch container.\n+        ElasticsearchContainer container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch:6.4.1\");\n+\n+        // Start the container. This step might take some time...\n+        container.start();\n+\n+        // transportClientContainerStart {\n+        // ... or the transport client\n+        TransportAddress transportAddress = new TransportAddress(container.getTcpHost());\n+        Settings settings = Settings.builder().put(\"cluster.name\", \"docker-cluster\").build();\n+        TransportClient transportClient = new PreBuiltTransportClient(settings)\n+            .addTransportAddress(transportAddress);\n+        ClusterHealthResponse healths = transportClient.admin().cluster().prepareHealth().get();\n+        // }\n+        // Compare Result\n+        assertEquals(ClusterHealthStatus.GREEN, healths.getStatus());\n+\n+        // Stop the container.\n+        container.stop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e12fe569f2a6bd6343bb64e28793ffb02c896067"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk3MDU4Mg==", "bodyText": "done, but this changed the code in the documentation", "url": "https://github.com/testcontainers/testcontainers-java/pull/2828#discussion_r433970582", "createdAt": "2020-06-02T15:36:58Z", "author": {"login": "raynigon"}, "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchDocumentationTest.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package org.testcontainers.elasticsearch;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+\n+import org.apache.http.HttpHost;\n+import org.apache.http.auth.AuthScope;\n+import org.apache.http.auth.UsernamePasswordCredentials;\n+import org.apache.http.client.CredentialsProvider;\n+import org.apache.http.impl.client.BasicCredentialsProvider;\n+import org.elasticsearch.action.admin.cluster.health.ClusterHealthResponse;\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.client.RestClient;\n+import org.elasticsearch.client.transport.TransportClient;\n+import org.elasticsearch.cluster.health.ClusterHealthStatus;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.transport.TransportAddress;\n+import org.elasticsearch.transport.client.PreBuiltTransportClient;\n+import org.junit.Test;\n+\n+public class ElasticsearchDocumentationTest {\n+\n+    @Test\n+    public void containerWithHttpClient() throws IOException {\n+        // httpClientContainerStart {\n+        // Create the elasticsearch container.\n+        ElasticsearchContainer container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch:6.4.1\");\n+\n+        // Start the container. This step might take some time...\n+        container.start();\n+\n+        // Do whatever you want with the rest client ...\n+        final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n+        credentialsProvider.setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(\"elastic\", \"changeme\"));\n+        RestClient restClient = RestClient.builder(HttpHost.create(container.getHttpHostAddress()))\n+            .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider))\n+            .build();\n+        Response response = restClient.performRequest(new Request(\"GET\", \"/\"));\n+        // }\n+        // Compare Result\n+        assertEquals(response.getStatusLine().getStatusCode(), 200);\n+\n+        // httpClientContainerStop {\n+        // Stop the container.\n+        container.stop();\n+        // }\n+    }\n+\n+    @Test\n+    public void containerWithTransportClient() {\n+        // Create the elasticsearch container.\n+        ElasticsearchContainer container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch:6.4.1\");\n+\n+        // Start the container. This step might take some time...\n+        container.start();\n+\n+        // transportClientContainerStart {\n+        // ... or the transport client\n+        TransportAddress transportAddress = new TransportAddress(container.getTcpHost());\n+        Settings settings = Settings.builder().put(\"cluster.name\", \"docker-cluster\").build();\n+        TransportClient transportClient = new PreBuiltTransportClient(settings)\n+            .addTransportAddress(transportAddress);\n+        ClusterHealthResponse healths = transportClient.admin().cluster().prepareHealth().get();\n+        // }\n+        // Compare Result\n+        assertEquals(ClusterHealthStatus.GREEN, healths.getStatus());\n+\n+        // Stop the container.\n+        container.stop();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1NTE1Nw=="}, "originalCommit": {"oid": "e12fe569f2a6bd6343bb64e28793ffb02c896067"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk3MTU2MQ==", "bodyText": "@raynigon\n\nplease do not resolve conversations started by others.\nJudging by other codeincludes, it is possible to do it without changing the semantics in the docs. Please have a look at other codeincludes for some inspiration.", "url": "https://github.com/testcontainers/testcontainers-java/pull/2828#discussion_r433971561", "createdAt": "2020-06-02T15:38:21Z", "author": {"login": "bsideup"}, "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchDocumentationTest.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package org.testcontainers.elasticsearch;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+\n+import org.apache.http.HttpHost;\n+import org.apache.http.auth.AuthScope;\n+import org.apache.http.auth.UsernamePasswordCredentials;\n+import org.apache.http.client.CredentialsProvider;\n+import org.apache.http.impl.client.BasicCredentialsProvider;\n+import org.elasticsearch.action.admin.cluster.health.ClusterHealthResponse;\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.client.RestClient;\n+import org.elasticsearch.client.transport.TransportClient;\n+import org.elasticsearch.cluster.health.ClusterHealthStatus;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.transport.TransportAddress;\n+import org.elasticsearch.transport.client.PreBuiltTransportClient;\n+import org.junit.Test;\n+\n+public class ElasticsearchDocumentationTest {\n+\n+    @Test\n+    public void containerWithHttpClient() throws IOException {\n+        // httpClientContainerStart {\n+        // Create the elasticsearch container.\n+        ElasticsearchContainer container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch:6.4.1\");\n+\n+        // Start the container. This step might take some time...\n+        container.start();\n+\n+        // Do whatever you want with the rest client ...\n+        final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n+        credentialsProvider.setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(\"elastic\", \"changeme\"));\n+        RestClient restClient = RestClient.builder(HttpHost.create(container.getHttpHostAddress()))\n+            .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider))\n+            .build();\n+        Response response = restClient.performRequest(new Request(\"GET\", \"/\"));\n+        // }\n+        // Compare Result\n+        assertEquals(response.getStatusLine().getStatusCode(), 200);\n+\n+        // httpClientContainerStop {\n+        // Stop the container.\n+        container.stop();\n+        // }\n+    }\n+\n+    @Test\n+    public void containerWithTransportClient() {\n+        // Create the elasticsearch container.\n+        ElasticsearchContainer container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch:6.4.1\");\n+\n+        // Start the container. This step might take some time...\n+        container.start();\n+\n+        // transportClientContainerStart {\n+        // ... or the transport client\n+        TransportAddress transportAddress = new TransportAddress(container.getTcpHost());\n+        Settings settings = Settings.builder().put(\"cluster.name\", \"docker-cluster\").build();\n+        TransportClient transportClient = new PreBuiltTransportClient(settings)\n+            .addTransportAddress(transportAddress);\n+        ClusterHealthResponse healths = transportClient.admin().cluster().prepareHealth().get();\n+        // }\n+        // Compare Result\n+        assertEquals(ClusterHealthStatus.GREEN, healths.getStatus());\n+\n+        // Stop the container.\n+        container.stop();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1NTE1Nw=="}, "originalCommit": {"oid": "e12fe569f2a6bd6343bb64e28793ffb02c896067"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk3ODQ0NA==", "bodyText": "First, sorry didnt know that.\nSecond, what i meant is, previously the docs showed container stopping with stop:\n\nNow, the code uses try-with-resource statements which is logically different, i just wanted to point this out. If you could give me an example how to show the stop method and using try-with-resource statements in the source code, it would help me a lot. Currently the docs would look like this:", "url": "https://github.com/testcontainers/testcontainers-java/pull/2828#discussion_r433978444", "createdAt": "2020-06-02T15:45:58Z", "author": {"login": "raynigon"}, "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchDocumentationTest.java", "diffHunk": "@@ -0,0 +1,88 @@\n+package org.testcontainers.elasticsearch;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+import java.io.IOException;\n+\n+import org.apache.http.HttpHost;\n+import org.apache.http.auth.AuthScope;\n+import org.apache.http.auth.UsernamePasswordCredentials;\n+import org.apache.http.client.CredentialsProvider;\n+import org.apache.http.impl.client.BasicCredentialsProvider;\n+import org.elasticsearch.action.admin.cluster.health.ClusterHealthResponse;\n+import org.elasticsearch.client.Request;\n+import org.elasticsearch.client.Response;\n+import org.elasticsearch.client.RestClient;\n+import org.elasticsearch.client.transport.TransportClient;\n+import org.elasticsearch.cluster.health.ClusterHealthStatus;\n+import org.elasticsearch.common.settings.Settings;\n+import org.elasticsearch.common.transport.TransportAddress;\n+import org.elasticsearch.transport.client.PreBuiltTransportClient;\n+import org.junit.Test;\n+\n+public class ElasticsearchDocumentationTest {\n+\n+    @Test\n+    public void containerWithHttpClient() throws IOException {\n+        // httpClientContainerStart {\n+        // Create the elasticsearch container.\n+        ElasticsearchContainer container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch:6.4.1\");\n+\n+        // Start the container. This step might take some time...\n+        container.start();\n+\n+        // Do whatever you want with the rest client ...\n+        final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n+        credentialsProvider.setCredentials(AuthScope.ANY, new UsernamePasswordCredentials(\"elastic\", \"changeme\"));\n+        RestClient restClient = RestClient.builder(HttpHost.create(container.getHttpHostAddress()))\n+            .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider))\n+            .build();\n+        Response response = restClient.performRequest(new Request(\"GET\", \"/\"));\n+        // }\n+        // Compare Result\n+        assertEquals(response.getStatusLine().getStatusCode(), 200);\n+\n+        // httpClientContainerStop {\n+        // Stop the container.\n+        container.stop();\n+        // }\n+    }\n+\n+    @Test\n+    public void containerWithTransportClient() {\n+        // Create the elasticsearch container.\n+        ElasticsearchContainer container = new ElasticsearchContainer(\"docker.elastic.co/elasticsearch/elasticsearch:6.4.1\");\n+\n+        // Start the container. This step might take some time...\n+        container.start();\n+\n+        // transportClientContainerStart {\n+        // ... or the transport client\n+        TransportAddress transportAddress = new TransportAddress(container.getTcpHost());\n+        Settings settings = Settings.builder().put(\"cluster.name\", \"docker-cluster\").build();\n+        TransportClient transportClient = new PreBuiltTransportClient(settings)\n+            .addTransportAddress(transportAddress);\n+        ClusterHealthResponse healths = transportClient.admin().cluster().prepareHealth().get();\n+        // }\n+        // Compare Result\n+        assertEquals(ClusterHealthStatus.GREEN, healths.getStatus());\n+\n+        // Stop the container.\n+        container.stop();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzk1NTE1Nw=="}, "originalCommit": {"oid": "e12fe569f2a6bd6343bb64e28793ffb02c896067"}, "originalPosition": 71}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNTcwMTU4OnYy", "diffSide": "RIGHT", "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchContainerTest.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNzozNDoyNVrOGePnMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxMjo1NzozM1rOGmT49w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NjI1Ng==", "bodyText": "We should probably omit these assertions from the docs...", "url": "https://github.com/testcontainers/testcontainers-java/pull/2828#discussion_r434366256", "createdAt": "2020-06-03T07:34:25Z", "author": {"login": "rnorth"}, "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchContainerTest.java", "diffHunk": "@@ -92,11 +104,40 @@ public void elasticsearchOssImage() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void restClientClusterHealth() throws IOException {\n+        // httpClientContainer {\n+        // Create the elasticsearch container.\n+        try (ElasticsearchContainer container = new ElasticsearchContainer()) {\n+            // Start the container. This step might take some time...\n+            container.start();\n+\n+            // Do whatever you want with the rest client ...\n+            final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n+            credentialsProvider.setCredentials(AuthScope.ANY,\n+                new UsernamePasswordCredentials(ELASTICSEARCH_USERNAME, ELASTICSEARCH_PASSWORD));\n+\n+            client = RestClient.builder(HttpHost.create(container.getHttpHostAddress()))\n+                .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider))\n+                .build();\n+\n+            Response response = client.performRequest(new Request(\"GET\", \"/_cluster/health\"));\n+            assertThat(response.getStatusLine().getStatusCode(), is(200));\n+            assertThat(EntityUtils.toString(response.getEntity()), containsString(\"cluster_name\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70cbfb8e6cd32afcf8480ea62216cbe482fb9286"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM3MzQ1MA==", "bodyText": "is it possible to exclude lines from a code block with the codeinclude macro?\nThis would be really helpful feature to decrease the amount of new code in the tests", "url": "https://github.com/testcontainers/testcontainers-java/pull/2828#discussion_r434373450", "createdAt": "2020-06-03T07:47:45Z", "author": {"login": "raynigon"}, "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchContainerTest.java", "diffHunk": "@@ -92,11 +104,40 @@ public void elasticsearchOssImage() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void restClientClusterHealth() throws IOException {\n+        // httpClientContainer {\n+        // Create the elasticsearch container.\n+        try (ElasticsearchContainer container = new ElasticsearchContainer()) {\n+            // Start the container. This step might take some time...\n+            container.start();\n+\n+            // Do whatever you want with the rest client ...\n+            final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n+            credentialsProvider.setCredentials(AuthScope.ANY,\n+                new UsernamePasswordCredentials(ELASTICSEARCH_USERNAME, ELASTICSEARCH_PASSWORD));\n+\n+            client = RestClient.builder(HttpHost.create(container.getHttpHostAddress()))\n+                .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider))\n+                .build();\n+\n+            Response response = client.performRequest(new Request(\"GET\", \"/_cluster/health\"));\n+            assertThat(response.getStatusLine().getStatusCode(), is(200));\n+            assertThat(EntityUtils.toString(response.getEntity()), containsString(\"cluster_name\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NjI1Ng=="}, "originalCommit": {"oid": "70cbfb8e6cd32afcf8480ea62216cbe482fb9286"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTIzODUyNw==", "bodyText": "Not directly to exclude, but you can use the same block ID more than once and every block should be included. e.g. given:\n// someBlock {\nA\nB\n// }\nC\n// someBlock {\nD\n// }\n\nWhen rendered via codeinclude, it should appear like:\nA\nB\nD\n\nI'm partly tempted to add explicit excludes support to the codeinclude macro, but I think I'd prefer to try the above approach first.", "url": "https://github.com/testcontainers/testcontainers-java/pull/2828#discussion_r435238527", "createdAt": "2020-06-04T13:07:55Z", "author": {"login": "rnorth"}, "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchContainerTest.java", "diffHunk": "@@ -92,11 +104,40 @@ public void elasticsearchOssImage() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void restClientClusterHealth() throws IOException {\n+        // httpClientContainer {\n+        // Create the elasticsearch container.\n+        try (ElasticsearchContainer container = new ElasticsearchContainer()) {\n+            // Start the container. This step might take some time...\n+            container.start();\n+\n+            // Do whatever you want with the rest client ...\n+            final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n+            credentialsProvider.setCredentials(AuthScope.ANY,\n+                new UsernamePasswordCredentials(ELASTICSEARCH_USERNAME, ELASTICSEARCH_PASSWORD));\n+\n+            client = RestClient.builder(HttpHost.create(container.getHttpHostAddress()))\n+                .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider))\n+                .build();\n+\n+            Response response = client.performRequest(new Request(\"GET\", \"/_cluster/health\"));\n+            assertThat(response.getStatusLine().getStatusCode(), is(200));\n+            assertThat(EntityUtils.toString(response.getEntity()), containsString(\"cluster_name\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NjI1Ng=="}, "originalCommit": {"oid": "70cbfb8e6cd32afcf8480ea62216cbe482fb9286"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTUxNjA2MA==", "bodyText": "thanks that is exactly what i need", "url": "https://github.com/testcontainers/testcontainers-java/pull/2828#discussion_r435516060", "createdAt": "2020-06-04T20:01:09Z", "author": {"login": "raynigon"}, "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchContainerTest.java", "diffHunk": "@@ -92,11 +104,40 @@ public void elasticsearchOssImage() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void restClientClusterHealth() throws IOException {\n+        // httpClientContainer {\n+        // Create the elasticsearch container.\n+        try (ElasticsearchContainer container = new ElasticsearchContainer()) {\n+            // Start the container. This step might take some time...\n+            container.start();\n+\n+            // Do whatever you want with the rest client ...\n+            final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n+            credentialsProvider.setCredentials(AuthScope.ANY,\n+                new UsernamePasswordCredentials(ELASTICSEARCH_USERNAME, ELASTICSEARCH_PASSWORD));\n+\n+            client = RestClient.builder(HttpHost.create(container.getHttpHostAddress()))\n+                .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider))\n+                .build();\n+\n+            Response response = client.performRequest(new Request(\"GET\", \"/_cluster/health\"));\n+            assertThat(response.getStatusLine().getStatusCode(), is(200));\n+            assertThat(EntityUtils.toString(response.getEntity()), containsString(\"cluster_name\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NjI1Ng=="}, "originalCommit": {"oid": "70cbfb8e6cd32afcf8480ea62216cbe482fb9286"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI1Mjk5MQ==", "bodyText": "This leads to a wrong indentation:", "url": "https://github.com/testcontainers/testcontainers-java/pull/2828#discussion_r436252991", "createdAt": "2020-06-06T09:10:46Z", "author": {"login": "raynigon"}, "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchContainerTest.java", "diffHunk": "@@ -92,11 +104,40 @@ public void elasticsearchOssImage() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void restClientClusterHealth() throws IOException {\n+        // httpClientContainer {\n+        // Create the elasticsearch container.\n+        try (ElasticsearchContainer container = new ElasticsearchContainer()) {\n+            // Start the container. This step might take some time...\n+            container.start();\n+\n+            // Do whatever you want with the rest client ...\n+            final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n+            credentialsProvider.setCredentials(AuthScope.ANY,\n+                new UsernamePasswordCredentials(ELASTICSEARCH_USERNAME, ELASTICSEARCH_PASSWORD));\n+\n+            client = RestClient.builder(HttpHost.create(container.getHttpHostAddress()))\n+                .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider))\n+                .build();\n+\n+            Response response = client.performRequest(new Request(\"GET\", \"/_cluster/health\"));\n+            assertThat(response.getStatusLine().getStatusCode(), is(200));\n+            assertThat(EntityUtils.toString(response.getEntity()), containsString(\"cluster_name\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NjI1Ng=="}, "originalCommit": {"oid": "70cbfb8e6cd32afcf8480ea62216cbe482fb9286"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI1NzQwMQ==", "bodyText": "This PR could help to solve the problem: rnorth/mkdocs-codeinclude-plugin#14", "url": "https://github.com/testcontainers/testcontainers-java/pull/2828#discussion_r436257401", "createdAt": "2020-06-06T10:26:18Z", "author": {"login": "raynigon"}, "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchContainerTest.java", "diffHunk": "@@ -92,11 +104,40 @@ public void elasticsearchOssImage() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void restClientClusterHealth() throws IOException {\n+        // httpClientContainer {\n+        // Create the elasticsearch container.\n+        try (ElasticsearchContainer container = new ElasticsearchContainer()) {\n+            // Start the container. This step might take some time...\n+            container.start();\n+\n+            // Do whatever you want with the rest client ...\n+            final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n+            credentialsProvider.setCredentials(AuthScope.ANY,\n+                new UsernamePasswordCredentials(ELASTICSEARCH_USERNAME, ELASTICSEARCH_PASSWORD));\n+\n+            client = RestClient.builder(HttpHost.create(container.getHttpHostAddress()))\n+                .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider))\n+                .build();\n+\n+            Response response = client.performRequest(new Request(\"GET\", \"/_cluster/health\"));\n+            assertThat(response.getStatusLine().getStatusCode(), is(200));\n+            assertThat(EntityUtils.toString(response.getEntity()), containsString(\"cluster_name\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NjI1Ng=="}, "originalCommit": {"oid": "70cbfb8e6cd32afcf8480ea62216cbe482fb9286"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4MjgwMQ==", "bodyText": "I've been trying to untangle the PRs on the codeinclude plugin, because I think you're right. Unfortunately they're not independent, and that PR is built upon other PRs that have issues.\nI think it'll be a bit of time before that gets merged.\nShall we just go ahead and merge? The indentation issue should get sorted out separately later \ud83d\ude04", "url": "https://github.com/testcontainers/testcontainers-java/pull/2828#discussion_r442482801", "createdAt": "2020-06-18T20:25:28Z", "author": {"login": "rnorth"}, "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchContainerTest.java", "diffHunk": "@@ -92,11 +104,40 @@ public void elasticsearchOssImage() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void restClientClusterHealth() throws IOException {\n+        // httpClientContainer {\n+        // Create the elasticsearch container.\n+        try (ElasticsearchContainer container = new ElasticsearchContainer()) {\n+            // Start the container. This step might take some time...\n+            container.start();\n+\n+            // Do whatever you want with the rest client ...\n+            final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n+            credentialsProvider.setCredentials(AuthScope.ANY,\n+                new UsernamePasswordCredentials(ELASTICSEARCH_USERNAME, ELASTICSEARCH_PASSWORD));\n+\n+            client = RestClient.builder(HttpHost.create(container.getHttpHostAddress()))\n+                .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider))\n+                .build();\n+\n+            Response response = client.performRequest(new Request(\"GET\", \"/_cluster/health\"));\n+            assertThat(response.getStatusLine().getStatusCode(), is(200));\n+            assertThat(EntityUtils.toString(response.getEntity()), containsString(\"cluster_name\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NjI1Ng=="}, "originalCommit": {"oid": "70cbfb8e6cd32afcf8480ea62216cbe482fb9286"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjgyNDk1MQ==", "bodyText": "sounds like a plan :)", "url": "https://github.com/testcontainers/testcontainers-java/pull/2828#discussion_r442824951", "createdAt": "2020-06-19T12:57:33Z", "author": {"login": "raynigon"}, "path": "modules/elasticsearch/src/test/java/org/testcontainers/elasticsearch/ElasticsearchContainerTest.java", "diffHunk": "@@ -92,11 +104,40 @@ public void elasticsearchOssImage() throws IOException {\n         }\n     }\n \n+    @Test\n+    public void restClientClusterHealth() throws IOException {\n+        // httpClientContainer {\n+        // Create the elasticsearch container.\n+        try (ElasticsearchContainer container = new ElasticsearchContainer()) {\n+            // Start the container. This step might take some time...\n+            container.start();\n+\n+            // Do whatever you want with the rest client ...\n+            final CredentialsProvider credentialsProvider = new BasicCredentialsProvider();\n+            credentialsProvider.setCredentials(AuthScope.ANY,\n+                new UsernamePasswordCredentials(ELASTICSEARCH_USERNAME, ELASTICSEARCH_PASSWORD));\n+\n+            client = RestClient.builder(HttpHost.create(container.getHttpHostAddress()))\n+                .setHttpClientConfigCallback(httpClientBuilder -> httpClientBuilder.setDefaultCredentialsProvider(credentialsProvider))\n+                .build();\n+\n+            Response response = client.performRequest(new Request(\"GET\", \"/_cluster/health\"));\n+            assertThat(response.getStatusLine().getStatusCode(), is(200));\n+            assertThat(EntityUtils.toString(response.getEntity()), containsString(\"cluster_name\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDM2NjI1Ng=="}, "originalCommit": {"oid": "70cbfb8e6cd32afcf8480ea62216cbe482fb9286"}, "originalPosition": 108}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1503, "cost": 1, "resetAt": "2021-11-13T14:23:39Z"}}}