{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczOTkyMjQx", "number": 921, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMTo0MjoyM1rODqV2pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwOToxODoxMVrODt3g1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzI0ODM3OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheGroupMetricsImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMTo0MjoyM1rOF6Btew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMTo0MjoyM1rOF6Btew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM4OTc1NQ==", "bodyText": "new line need to be here.", "url": "https://github.com/gridgain/gridgain/pull/921#discussion_r396389755", "createdAt": "2020-03-23T11:42:23Z", "author": {"login": "zstan"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/CacheGroupMetricsImpl.java", "diffHunk": "@@ -191,6 +191,13 @@ public void setIndexBuildCountPartitionsLeft(long idxBuildCntPartitionsLeft) {\n     public void decrementIndexBuildCountPartitionsLeft() {\n         idxBuildCntPartitionsLeft.decrement();\n     }\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59ef85dcf694c0f6362cf353d65e939634d9ddb3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1NzI0OTIxOnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheGroupMetricsWithIndexTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMTo0MjozOFrOF6Bt-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMTo0MjozOFrOF6Bt-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM4OTg4Mw==", "bodyText": "and new line here", "url": "https://github.com/gridgain/gridgain/pull/921#discussion_r396389883", "createdAt": "2020-03-23T11:42:38Z", "author": {"login": "zstan"}, "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheGroupMetricsWithIndexTest.java", "diffHunk": "@@ -79,8 +85,32 @@\n         IgniteConfiguration cfg = super.getConfiguration(igniteInstanceName);\n \n         for (CacheConfiguration cacheCfg : cfg.getCacheConfiguration()) {\n-            if (GROUP_NAME.equals(cacheCfg.getGroupName()) && CACHE_NAME.equals(cacheCfg.getName())) {\n-                QueryEntity qryEntity = new QueryEntity(Long.class.getCanonicalName(), OBJECT_NAME);\n+            if (GROUP_NAME.equals(cacheCfg.getGroupName()) && CACHE_NAME2.equals(cacheCfg.getName())) {\n+                QueryEntity qryEntity = new QueryEntity(Long.class.getCanonicalName(), OBJECT_NAME2);\n+\n+                qryEntity.setKeyFieldName(KEY_NAME);\n+\n+                LinkedHashMap<String, String> fields = new LinkedHashMap<>();\n+\n+                fields.put(KEY_NAME, Long.class.getCanonicalName());\n+\n+                fields.put(COLUMN1_NAME, Integer.class.getCanonicalName());\n+\n+                fields.put(COLUMN2_NAME, String.class.getCanonicalName());\n+\n+                qryEntity.setFields(fields);\n+\n+                ArrayList<QueryIndex> indexes = new ArrayList<>();\n+\n+                indexes.add(new QueryIndex(COLUMN1_NAME));\n+\n+                indexes.add(new QueryIndex(COLUMN2_NAME));\n+\n+                qryEntity.setIndexes(indexes);\n+\n+                cacheCfg.setQueryEntities(Collections.singletonList(qryEntity));\n+            }else if (GROUP_NAME.equals(cacheCfg.getGroupName()) && CACHE_NAME3.equals(cacheCfg.getName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59ef85dcf694c0f6362cf353d65e939634d9ddb3"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDIwNzMyOnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheGroupMetricsWithIndexTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwOToxNDozN1rOF_iWZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwOToxNDozN1rOF_iWZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE2NzM5Ng==", "bodyText": "Will be better to rewrite it to use our system view. INFORMATION_SCHEMA don't support by IGNITE at all.", "url": "https://github.com/gridgain/gridgain/pull/921#discussion_r402167396", "createdAt": "2020-04-02T09:14:37Z", "author": {"login": "ygerzhedovich"}, "path": "modules/indexing/src/test/java/org/apache/ignite/internal/processors/cache/CacheGroupMetricsWithIndexTest.java", "diffHunk": "@@ -182,34 +213,34 @@ public void testIndexCreateCountPartitionsLeft() throws Exception {\n \n         ignite.cluster().active(true);\n \n-        IgniteCache<Object, Object> cache1 = ignite.cache(CACHE_NAME);\n+        IgniteCache<Object, Object> cache2 = ignite.cache(CACHE_NAME2);\n \n         String addColSql = \"ALTER TABLE \" + TABLE + \" ADD COLUMN \" + COLUMN3_NAME + \" BIGINT\";\n \n-        cache1.query(new SqlFieldsQuery(addColSql)).getAll();\n+        cache2.query(new SqlFieldsQuery(addColSql)).getAll();\n \n         for (int i = 0; i < 100_000; i++) {\n             Long id = (long)i;\n \n-            BinaryObjectBuilder o = ignite.binary().builder(OBJECT_NAME)\n+            BinaryObjectBuilder o = ignite.binary().builder(OBJECT_NAME2)\n                 .setField(KEY_NAME, id)\n                 .setField(COLUMN1_NAME, i / 2)\n                 .setField(COLUMN2_NAME, \"str\" + Integer.toHexString(i))\n                 .setField(COLUMN3_NAME, id * 10);\n \n-            cache1.put(id, o.build());\n+            cache2.put(id, o.build());\n         }\n \n         MetricRegistry metrics = cacheGroupMetrics(0, GROUP_NAME).get2();\n \n         GridTestUtils.runAsync(() -> {\n             String createIdxSql = \"CREATE INDEX \" + INDEX_NAME + \" ON \" + TABLE + \"(\" + COLUMN3_NAME + \")\";\n \n-            cache1.query(new SqlFieldsQuery(createIdxSql)).getAll();\n+            cache2.query(new SqlFieldsQuery(createIdxSql)).getAll();\n \n             String selectIdxSql = \"select * from information_schema.indexes where index_name='\" + INDEX_NAME + \"'\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d833b2bc1519995a754fcacc0f7ac080ed37d37f"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5NDIyMDM5OnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/IgniteH2Indexing.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwOToxODoxMVrOF_ifGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwOToxODoxMVrOF_ifGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE2OTYyNg==", "bodyText": "when metrics could be null?", "url": "https://github.com/gridgain/gridgain/pull/921#discussion_r402169626", "createdAt": "2020-04-02T09:18:11Z", "author": {"login": "ygerzhedovich"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/IgniteH2Indexing.java", "diffHunk": "@@ -2024,6 +2024,9 @@ public UpdateResult executeUpdateOnDataNode(\n \n         GridFutureAdapter<Void> rebuildCacheIdxFut = new GridFutureAdapter<>();\n \n+        if (cctx.group().metrics() != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d833b2bc1519995a754fcacc0f7ac080ed37d37f"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3183, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}