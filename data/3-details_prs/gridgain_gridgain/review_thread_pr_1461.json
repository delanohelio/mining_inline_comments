{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTM5NTMx", "number": 1461, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDoxMDozOVrOEo9nAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDoxMDozOVrOEo9nAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMzg3OTA3OnYy", "diffSide": "RIGHT", "path": "modules/platforms/cpp/network/os/win/src/network/tcp_socket_client.cpp", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMDoxMDozOVrOHaWozw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNjozNzoxNVrOHa8UKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5NTkxOQ==", "bodyText": "This looks exactly like the code above for Linux, can we deduplicate?", "url": "https://github.com/gridgain/gridgain/pull/1461#discussion_r497395919", "createdAt": "2020-09-30T10:10:39Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/cpp/network/os/win/src/network/tcp_socket_client.cpp", "diffHunk": "@@ -28,6 +30,23 @@ namespace ignite\n {\n     namespace network\n     {\n+        /**\n+         * Shuffle addresses randomly.\n+         * @param addrsIn Addresses.\n+         * @return Randomly shuffled addresses.\n+         */\n+        std::vector<addrinfo*> ShuffleAddresses(addrinfo* addrsIn)\n+        {\n+            std::vector<addrinfo*> res;\n+\n+            for (addrinfo *it = addrsIn; it != NULL; it = it->ai_next)\n+                res.push_back(it);\n+\n+            std::random_shuffle(res.begin(), res.end());\n+\n+            return res;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f851d541c57834ca7eeb99cf609d09776514b31b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzgxODg3MQ==", "bodyText": "Well in theory, we can, using templates. The hard part here is that despite of the same name addrinfos in Windows and Linux are two different classes, so we can not just make a simple function. I'll think if I can improve this part without over-complicating the code though.", "url": "https://github.com/gridgain/gridgain/pull/1461#discussion_r497818871", "createdAt": "2020-09-30T21:45:09Z", "author": {"login": "isapego"}, "path": "modules/platforms/cpp/network/os/win/src/network/tcp_socket_client.cpp", "diffHunk": "@@ -28,6 +30,23 @@ namespace ignite\n {\n     namespace network\n     {\n+        /**\n+         * Shuffle addresses randomly.\n+         * @param addrsIn Addresses.\n+         * @return Randomly shuffled addresses.\n+         */\n+        std::vector<addrinfo*> ShuffleAddresses(addrinfo* addrsIn)\n+        {\n+            std::vector<addrinfo*> res;\n+\n+            for (addrinfo *it = addrsIn; it != NULL; it = it->ai_next)\n+                res.push_back(it);\n+\n+            std::random_shuffle(res.begin(), res.end());\n+\n+            return res;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5NTkxOQ=="}, "originalCommit": {"oid": "f851d541c57834ca7eeb99cf609d09776514b31b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg0NDY3NA==", "bodyText": "Fixed. Check out new version.", "url": "https://github.com/gridgain/gridgain/pull/1461#discussion_r497844674", "createdAt": "2020-09-30T22:52:52Z", "author": {"login": "isapego"}, "path": "modules/platforms/cpp/network/os/win/src/network/tcp_socket_client.cpp", "diffHunk": "@@ -28,6 +30,23 @@ namespace ignite\n {\n     namespace network\n     {\n+        /**\n+         * Shuffle addresses randomly.\n+         * @param addrsIn Addresses.\n+         * @return Randomly shuffled addresses.\n+         */\n+        std::vector<addrinfo*> ShuffleAddresses(addrinfo* addrsIn)\n+        {\n+            std::vector<addrinfo*> res;\n+\n+            for (addrinfo *it = addrsIn; it != NULL; it = it->ai_next)\n+                res.push_back(it);\n+\n+            std::random_shuffle(res.begin(), res.end());\n+\n+            return res;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5NTkxOQ=="}, "originalCommit": {"oid": "f851d541c57834ca7eeb99cf609d09776514b31b"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODAxMzIyNg==", "bodyText": "Looks good, thanks!", "url": "https://github.com/gridgain/gridgain/pull/1461#discussion_r498013226", "createdAt": "2020-10-01T06:37:15Z", "author": {"login": "ptupitsyn"}, "path": "modules/platforms/cpp/network/os/win/src/network/tcp_socket_client.cpp", "diffHunk": "@@ -28,6 +30,23 @@ namespace ignite\n {\n     namespace network\n     {\n+        /**\n+         * Shuffle addresses randomly.\n+         * @param addrsIn Addresses.\n+         * @return Randomly shuffled addresses.\n+         */\n+        std::vector<addrinfo*> ShuffleAddresses(addrinfo* addrsIn)\n+        {\n+            std::vector<addrinfo*> res;\n+\n+            for (addrinfo *it = addrsIn; it != NULL; it = it->ai_next)\n+                res.push_back(it);\n+\n+            std::random_shuffle(res.begin(), res.end());\n+\n+            return res;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM5NTkxOQ=="}, "originalCommit": {"oid": "f851d541c57834ca7eeb99cf609d09776514b31b"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3263, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}