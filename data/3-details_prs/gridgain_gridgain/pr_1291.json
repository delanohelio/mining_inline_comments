{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MTU5MDY3", "number": 1291, "title": "GG-29644: DR: Incremental state transfer index.", "bodyText": "", "createdAt": "2020-07-08T10:53:24Z", "url": "https://github.com/gridgain/gridgain/pull/1291", "merged": true, "mergeCommit": {"oid": "461eae93d8284661cfd06080eb7bf6804593980f"}, "closed": true, "closedAt": "2020-08-17T14:18:32Z", "author": {"login": "AMashenkov"}, "timelineItems": {"totalCount": 51, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcty_DgAH2gAyNDQ2MTU5MDY3OmJjY2E4ZjJkNzcwNDcxOGVmMTNhZjAwZDJkMjU1YWI2NGQ4ZjdjNzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-kQXtgH2gAyNDQ2MTU5MDY3OmFmOWRjYWI3ZDg0ZWU5Mzg0MDdmY2UzZTQ0MmM4MDU2Y2JkZGYzOWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bcca8f2d7704718ef13af00d2d255ab64d8f7c77", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/bcca8f2d7704718ef13af00d2d255ab64d8f7c77", "committedDate": "2020-06-22T15:56:48Z", "message": "WIP.\n- Create partition log tree.\n- Create new pageIO version.\n- Fix page upgrade code."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c95e5a3856b98cf5349bc0ea5b7ba9ffb9f8ac5a", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/c95e5a3856b98cf5349bc0ea5b7ba9ffb9f8ac5a", "committedDate": "2020-06-22T18:13:19Z", "message": "Minor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a2cd35a9bb60a560d2e1731f031159b5615c894", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/0a2cd35a9bb60a560d2e1731f031159b5615c894", "committedDate": "2020-06-23T10:05:18Z", "message": "WIP."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2eab3824bb0f241640c2ba2ef71839fef7ecd5f", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/d2eab3824bb0f241640c2ba2ef71839fef7ecd5f", "committedDate": "2020-06-25T13:53:14Z", "message": "WIP.\nTests added."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c551e5430d3479a2035fc7ad72d45d70254aaec", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/0c551e5430d3479a2035fc7ad72d45d70254aaec", "committedDate": "2020-06-25T15:35:23Z", "message": "WIP."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf1f8a7a45f5562d215147b95979ec3e98103439", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/cf1f8a7a45f5562d215147b95979ec3e98103439", "committedDate": "2020-06-25T18:01:05Z", "message": "WIP.\nFix persistence test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3d48c9d2c5ffffee4dfb1f4d54a1387cea2410b", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/f3d48c9d2c5ffffee4dfb1f4d54a1387cea2410b", "committedDate": "2020-06-26T13:58:55Z", "message": "Fix tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8521ff9ccb2072f634f908a79ddebffea713521a", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/8521ff9ccb2072f634f908a79ddebffea713521a", "committedDate": "2020-06-29T08:28:42Z", "message": "Minor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d69968fe9a3c37567c46b14ef18297f148096b20", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/d69968fe9a3c37567c46b14ef18297f148096b20", "committedDate": "2020-06-29T09:19:13Z", "message": "Minor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9ffc0ac554b0758a0a243750da039f6720495b0", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/f9ffc0ac554b0758a0a243750da039f6720495b0", "committedDate": "2020-06-29T09:56:24Z", "message": "Styles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd0ed53137757d0e0e0534be6575ebe10a23c0d2", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/dd0ed53137757d0e0e0534be6575ebe10a23c0d2", "committedDate": "2020-06-29T11:47:55Z", "message": "Add negative versions support."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f99449b6585b1e06bb9efb673676f272e7f4ab58", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/f99449b6585b1e06bb9efb673676f272e7f4ab58", "committedDate": "2020-06-29T12:06:53Z", "message": "Styles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f570efe38e5deb7bbca397d63b2adc268e6d226", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/4f570efe38e5deb7bbca397d63b2adc268e6d226", "committedDate": "2020-06-29T16:06:25Z", "message": "Fix Mvcc cache."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a78c1812b1ac991848bb535dd35e8e4a271bdc58", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/a78c1812b1ac991848bb535dd35e8e4a271bdc58", "committedDate": "2020-06-30T11:27:11Z", "message": "Remove todos. Minors."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5efb17014ae60815fe0cffd288c6ab62820b4b2", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/d5efb17014ae60815fe0cffd288c6ab62820b4b2", "committedDate": "2020-06-30T11:37:01Z", "message": "Minor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be0f3108f3249b02e76f611997010aafde4765bf", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/be0f3108f3249b02e76f611997010aafde4765bf", "committedDate": "2020-06-30T11:54:31Z", "message": "Styles"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6cbb7b69ce304afd3fb83850dc81a9a43a6115b", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/c6cbb7b69ce304afd3fb83850dc81a9a43a6115b", "committedDate": "2020-06-30T14:03:12Z", "message": "Minors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35bccda4eae1b4a97a5845f12ebe8b6286b1c4d9", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/35bccda4eae1b4a97a5845f12ebe8b6286b1c4d9", "committedDate": "2020-06-30T17:14:23Z", "message": "Minors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5acfe93c346944b989817308bbe0acc2de52f236", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/5acfe93c346944b989817308bbe0acc2de52f236", "committedDate": "2020-07-02T14:28:46Z", "message": "Minors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d448639cb1eacc7d2dc989f25dd3f3590b265ca6", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/d448639cb1eacc7d2dc989f25dd3f3590b265ca6", "committedDate": "2020-07-02T16:18:52Z", "message": "Minors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3bb1fb4916c8671ff254b0ecc6fb7028ecfe54c7", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/3bb1fb4916c8671ff254b0ecc6fb7028ecfe54c7", "committedDate": "2020-07-02T20:14:07Z", "message": "Revert mvcc fix."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5dfc177b007c6297ed72f22d769af45a0b0d321", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/a5dfc177b007c6297ed72f22d769af45a0b0d321", "committedDate": "2020-07-03T07:59:04Z", "message": "Merge branch 'master' into gg-29644"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e01f06e12932c1f37caa7a0e2800cfb59a15849b", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/e01f06e12932c1f37caa7a0e2800cfb59a15849b", "committedDate": "2020-07-03T10:32:32Z", "message": "Fix tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "847deff225a57dc2279a586ef05dccb7e341a79e", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/847deff225a57dc2279a586ef05dccb7e341a79e", "committedDate": "2020-07-03T12:48:47Z", "message": "Fix tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7438cf6c01c81591a5aa28d7cdf9edc273c9da3", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/a7438cf6c01c81591a5aa28d7cdf9edc273c9da3", "committedDate": "2020-07-03T13:06:23Z", "message": "Fix tree destroy."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "331e06cf1216ac3451b07e088b803c5c9ff41022", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/331e06cf1216ac3451b07e088b803c5c9ff41022", "committedDate": "2020-07-03T13:46:02Z", "message": "Fix tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9f1dcb9c31a62eba8aae329185c9fecd88d9df9", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/a9f1dcb9c31a62eba8aae329185c9fecd88d9df9", "committedDate": "2020-07-03T14:27:34Z", "message": "Fix tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a40a8f0a26c9aaf227bef35dc6670b53dc493c5", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/3a40a8f0a26c9aaf227bef35dc6670b53dc493c5", "committedDate": "2020-07-03T14:37:14Z", "message": "Fix tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f26b3c7311674f7963ea7736634259ac533df58f", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/f26b3c7311674f7963ea7736634259ac533df58f", "committedDate": "2020-07-03T14:47:35Z", "message": "Fix tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13b1cd8bd5a47cb6c54344f308ca94bad2df1cf5", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/13b1cd8bd5a47cb6c54344f308ca94bad2df1cf5", "committedDate": "2020-07-07T08:12:54Z", "message": "minor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e87627ee3e3f38a24532b3003a352aeb2a3d2b02", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/e87627ee3e3f38a24532b3003a352aeb2a3d2b02", "committedDate": "2020-07-07T08:29:13Z", "message": "Fix compatibility."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f20483b5f054d8290e9bd13c50ba62941270c90", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/7f20483b5f054d8290e9bd13c50ba62941270c90", "committedDate": "2020-07-07T10:20:10Z", "message": "minor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c40878a434b0dd305342a7db57032ce57cab576", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/9c40878a434b0dd305342a7db57032ce57cab576", "committedDate": "2020-07-07T10:28:17Z", "message": "Merge branch 'master' into gg-29644"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f685c72fa16c24fc16612e9df9739bd474ce2a76", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/f685c72fa16c24fc16612e9df9739bd474ce2a76", "committedDate": "2020-07-07T11:48:43Z", "message": "Minor."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56901091c9cf52921c0f20a717c4feadf857fec2", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/56901091c9cf52921c0f20a717c4feadf857fec2", "committedDate": "2020-07-07T12:54:40Z", "message": "Fix compatibility."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/8008e993853b75068d5eca703faa9cffa544b220", "committedDate": "2020-07-22T09:42:14Z", "message": "Fix PartitionLog row."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMjYxNjM5", "url": "https://github.com/gridgain/gridgain/pull/1291#pullrequestreview-453261639", "createdAt": "2020-07-22T12:19:48Z", "commit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxMjoxOTo0OFrOG1f2Nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNTo1NjowMFrOG1pBIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc0OTQ5NQ==", "bodyText": "True -> true, .m -> ,", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r458749495", "createdAt": "2020-07-22T12:19:48Z", "author": {"login": "korlov42"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/IgniteCacheOffheapManagerImpl.java", "diffHunk": "@@ -3159,6 +3231,14 @@ public boolean found() {\n         }\n     }\n \n+    /**\n+     * @param cctx Cache context.\n+     * @return {@code True} if Incremental DR enabled for cache.m {@code false} otherwise.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220"}, "originalPosition": 206}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2MDc2Mw==", "bodyText": "updateCntr is ignored", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r458760763", "createdAt": "2020-07-22T12:39:58Z", "author": {"login": "korlov42"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/version/GridCacheVersionEx.java", "diffHunk": "@@ -50,7 +50,7 @@ public GridCacheVersionEx() {\n      * @param dataCenterId Data center ID.\n      * @param drVer DR version.\n      */\n-    public GridCacheVersionEx(int topVer, long order, int nodeOrder, byte dataCenterId,\n+    public GridCacheVersionEx(int topVer, long order, int nodeOrder, byte dataCenterId, long updateCntr,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2Mjc4OQ==", "bodyText": "misleading comment", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r458762789", "createdAt": "2020-07-22T12:43:39Z", "author": {"login": "korlov42"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/tree/UpdateLogRow.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.tree;\n+\n+import org.apache.ignite.IgniteCheckedException;\n+import org.apache.ignite.internal.processors.cache.CacheGroupContext;\n+import org.apache.ignite.internal.processors.cache.CacheObject;\n+import org.apache.ignite.internal.processors.cache.KeyCacheObject;\n+import org.apache.ignite.internal.processors.cache.persistence.CacheDataRowAdapter;\n+import org.apache.ignite.internal.processors.cache.version.GridCacheVersion;\n+import org.apache.ignite.internal.util.tostring.GridToStringInclude;\n+import org.apache.ignite.internal.util.typedef.internal.S;\n+\n+/**\n+ *\n+ */\n+public class UpdateLogRow {\n+    /** Cache ID. */\n+    @GridToStringInclude\n+    public int cacheId;\n+\n+    /** Expire time. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODc2NDcxMg==", "bodyText": "Why do you make it public?", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r458764712", "createdAt": "2020-07-22T12:46:50Z", "author": {"login": "korlov42"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/tree/UpdateLogRow.java", "diffHunk": "@@ -0,0 +1,119 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.tree;\n+\n+import org.apache.ignite.IgniteCheckedException;\n+import org.apache.ignite.internal.processors.cache.CacheGroupContext;\n+import org.apache.ignite.internal.processors.cache.CacheObject;\n+import org.apache.ignite.internal.processors.cache.KeyCacheObject;\n+import org.apache.ignite.internal.processors.cache.persistence.CacheDataRowAdapter;\n+import org.apache.ignite.internal.processors.cache.version.GridCacheVersion;\n+import org.apache.ignite.internal.util.tostring.GridToStringInclude;\n+import org.apache.ignite.internal.util.typedef.internal.S;\n+\n+/**\n+ *\n+ */\n+public class UpdateLogRow {\n+    /** Cache ID. */\n+    @GridToStringInclude\n+    public int cacheId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwNDMyMQ==", "bodyText": "@Override public void store(\n        long dstPageAddr,\n        int dstIdx,\n        BPlusIO<UpdateLogRow> srcIo,\n        long srcPageAddr,\n        int srcIdx\n    ) throws IgniteCheckedException {", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r458804321", "createdAt": "2020-07-22T13:47:09Z", "author": {"login": "korlov42"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/tree/AbstractUpdateLogInnerIO.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.tree;\n+\n+import org.apache.ignite.IgniteCheckedException;\n+import org.apache.ignite.internal.pagemem.PageUtils;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusIO;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusInnerIO;\n+import org.apache.ignite.internal.util.typedef.internal.CU;\n+\n+/**\n+ *\n+ */\n+public abstract class AbstractUpdateLogInnerIO extends BPlusInnerIO<UpdateLogRow> implements UpdateLogRowIO {\n+    /**\n+     * @param type Page type.\n+     * @param ver Page format version.\n+     * @param canGetRow If we can get full row from this page.\n+     * @param itemSize Single item size on page.\n+     */\n+    AbstractUpdateLogInnerIO(int type, int ver, boolean canGetRow, int itemSize) {\n+        super(type, ver, canGetRow, itemSize);\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public void storeByOffset(long pageAddr, int off, UpdateLogRow row) {\n+        assert row.link != 0;\n+        assert row.updateCntr > 0;\n+\n+        PageUtils.putLong(pageAddr, off, row.updateCntr);\n+        PageUtils.putLong(pageAddr, off + 8, row.link);\n+\n+        if (storeCacheId()) {\n+            assert row.cacheId != CU.UNDEFINED_CACHE_ID;\n+\n+            PageUtils.putInt(pageAddr, off + 16, row.cacheId);\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public void store(long dstPageAddr,\n+        int dstIdx,\n+        BPlusIO<UpdateLogRow> srcIo,\n+        long srcPageAddr,\n+        int srcIdx) throws IgniteCheckedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgwODgwNw==", "bodyText": "It worth to place all update-log-tree-related classes under tree.updatelog package", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r458808807", "createdAt": "2020-07-22T13:53:19Z", "author": {"login": "korlov42"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/tree/AbstractUpdateLogInnerIO.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.tree;\n+\n+import org.apache.ignite.IgniteCheckedException;\n+import org.apache.ignite.internal.pagemem.PageUtils;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusIO;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusInnerIO;\n+import org.apache.ignite.internal.util.typedef.internal.CU;\n+\n+/**\n+ *\n+ */\n+public abstract class AbstractUpdateLogInnerIO extends BPlusInnerIO<UpdateLogRow> implements UpdateLogRowIO {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODgzMzkzMA==", "bodyText": "Looks like this code was copy-pasted from AbstractPendingEntryInnerIO without changes", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r458833930", "createdAt": "2020-07-22T14:27:02Z", "author": {"login": "korlov42"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/tree/AbstractUpdateLogInnerIO.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.tree;\n+\n+import org.apache.ignite.IgniteCheckedException;\n+import org.apache.ignite.internal.pagemem.PageUtils;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusIO;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusInnerIO;\n+import org.apache.ignite.internal.util.typedef.internal.CU;\n+\n+/**\n+ *\n+ */\n+public abstract class AbstractUpdateLogInnerIO extends BPlusInnerIO<UpdateLogRow> implements UpdateLogRowIO {\n+    /**\n+     * @param type Page type.\n+     * @param ver Page format version.\n+     * @param canGetRow If we can get full row from this page.\n+     * @param itemSize Single item size on page.\n+     */\n+    AbstractUpdateLogInnerIO(int type, int ver, boolean canGetRow, int itemSize) {\n+        super(type, ver, canGetRow, itemSize);\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public void storeByOffset(long pageAddr, int off, UpdateLogRow row) {\n+        assert row.link != 0;\n+        assert row.updateCntr > 0;\n+\n+        PageUtils.putLong(pageAddr, off, row.updateCntr);\n+        PageUtils.putLong(pageAddr, off + 8, row.link);\n+\n+        if (storeCacheId()) {\n+            assert row.cacheId != CU.UNDEFINED_CACHE_ID;\n+\n+            PageUtils.putInt(pageAddr, off + 16, row.cacheId);\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public void store(long dstPageAddr,\n+        int dstIdx,\n+        BPlusIO<UpdateLogRow> srcIo,\n+        long srcPageAddr,\n+        int srcIdx) throws IgniteCheckedException {\n+        int dstOff = offset(dstIdx);\n+\n+        long link = ((PendingRowIO)srcIo).getLink(srcPageAddr, srcIdx);\n+        long expireTime = ((PendingRowIO)srcIo).getExpireTime(srcPageAddr, srcIdx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg3OTM5Mw==", "bodyText": "Could we reuse storeByOffset here? At the first glance it could cost us unnecessary object creation, but IMO JIT will inline it.", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r458879393", "createdAt": "2020-07-22T15:27:41Z", "author": {"login": "korlov42"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/tree/AbstractUpdateLogInnerIO.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.tree;\n+\n+import org.apache.ignite.IgniteCheckedException;\n+import org.apache.ignite.internal.pagemem.PageUtils;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusIO;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusInnerIO;\n+import org.apache.ignite.internal.util.typedef.internal.CU;\n+\n+/**\n+ *\n+ */\n+public abstract class AbstractUpdateLogInnerIO extends BPlusInnerIO<UpdateLogRow> implements UpdateLogRowIO {\n+    /**\n+     * @param type Page type.\n+     * @param ver Page format version.\n+     * @param canGetRow If we can get full row from this page.\n+     * @param itemSize Single item size on page.\n+     */\n+    AbstractUpdateLogInnerIO(int type, int ver, boolean canGetRow, int itemSize) {\n+        super(type, ver, canGetRow, itemSize);\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public void storeByOffset(long pageAddr, int off, UpdateLogRow row) {\n+        assert row.link != 0;\n+        assert row.updateCntr > 0;\n+\n+        PageUtils.putLong(pageAddr, off, row.updateCntr);\n+        PageUtils.putLong(pageAddr, off + 8, row.link);\n+\n+        if (storeCacheId()) {\n+            assert row.cacheId != CU.UNDEFINED_CACHE_ID;\n+\n+            PageUtils.putInt(pageAddr, off + 16, row.cacheId);\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public void store(long dstPageAddr,\n+        int dstIdx,\n+        BPlusIO<UpdateLogRow> srcIo,\n+        long srcPageAddr,\n+        int srcIdx) throws IgniteCheckedException {\n+        int dstOff = offset(dstIdx);\n+\n+        long link = ((PendingRowIO)srcIo).getLink(srcPageAddr, srcIdx);\n+        long expireTime = ((PendingRowIO)srcIo).getExpireTime(srcPageAddr, srcIdx);\n+\n+        PageUtils.putLong(dstPageAddr, dstOff, expireTime);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg4OTE3OA==", "bodyText": "It's not expire time", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r458889178", "createdAt": "2020-07-22T15:40:59Z", "author": {"login": "korlov42"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/tree/AbstractUpdateLogLeafIO.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.tree;\n+\n+import org.apache.ignite.IgniteCheckedException;\n+import org.apache.ignite.internal.pagemem.PageUtils;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusIO;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusLeafIO;\n+import org.apache.ignite.internal.util.typedef.internal.CU;\n+\n+/**\n+ *\n+ */\n+public abstract class AbstractUpdateLogLeafIO extends BPlusLeafIO<UpdateLogRow> implements UpdateLogRowIO {\n+    /**\n+     * @param type Page type.\n+     * @param ver Page format version.\n+     * @param itemSize Single item size on page.\n+     */\n+    AbstractUpdateLogLeafIO(int type, int ver, int itemSize) {\n+        super(type, ver, itemSize);\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public void storeByOffset(long pageAddr, int off, UpdateLogRow row) {\n+        assert row.link != 0;\n+        assert row.updateCntr != 0;\n+\n+        PageUtils.putLong(pageAddr, off, row.updateCntr);\n+        PageUtils.putLong(pageAddr, off + 8, row.link);\n+\n+        if (storeCacheId()) {\n+            assert row.cacheId != CU.UNDEFINED_CACHE_ID;\n+\n+            PageUtils.putInt(pageAddr, off + 16, row.cacheId);\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public void store(long dstPageAddr,\n+        int dstIdx,\n+        BPlusIO<UpdateLogRow> srcIo,\n+        long srcPageAddr,\n+        int srcIdx) throws IgniteCheckedException {\n+        int dstOff = offset(dstIdx);\n+\n+        long link = ((UpdateLogRowIO)srcIo).getLink(srcPageAddr, srcIdx);\n+        long expireTime = ((UpdateLogRowIO)srcIo).getUpdateCounter(srcPageAddr, srcIdx);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg4OTYzMw==", "bodyText": "please format this as noted above", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r458889633", "createdAt": "2020-07-22T15:41:40Z", "author": {"login": "korlov42"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/tree/AbstractUpdateLogLeafIO.java", "diffHunk": "@@ -0,0 +1,96 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.tree;\n+\n+import org.apache.ignite.IgniteCheckedException;\n+import org.apache.ignite.internal.pagemem.PageUtils;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusIO;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusLeafIO;\n+import org.apache.ignite.internal.util.typedef.internal.CU;\n+\n+/**\n+ *\n+ */\n+public abstract class AbstractUpdateLogLeafIO extends BPlusLeafIO<UpdateLogRow> implements UpdateLogRowIO {\n+    /**\n+     * @param type Page type.\n+     * @param ver Page format version.\n+     * @param itemSize Single item size on page.\n+     */\n+    AbstractUpdateLogLeafIO(int type, int ver, int itemSize) {\n+        super(type, ver, itemSize);\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public void storeByOffset(long pageAddr, int off, UpdateLogRow row) {\n+        assert row.link != 0;\n+        assert row.updateCntr != 0;\n+\n+        PageUtils.putLong(pageAddr, off, row.updateCntr);\n+        PageUtils.putLong(pageAddr, off + 8, row.link);\n+\n+        if (storeCacheId()) {\n+            assert row.cacheId != CU.UNDEFINED_CACHE_ID;\n+\n+            PageUtils.putInt(pageAddr, off + 16, row.cacheId);\n+        }\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override public void store(long dstPageAddr,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg5MjM4Ng==", "bodyText": "assert cmp == 0 && row.link != 0 && io.getLink(pageAddr, idx) == row.link;", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r458892386", "createdAt": "2020-07-22T15:45:33Z", "author": {"login": "korlov42"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/tree/PartitionLogTree.java", "diffHunk": "@@ -0,0 +1,120 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.tree;\n+\n+import org.apache.ignite.IgniteCheckedException;\n+import org.apache.ignite.internal.pagemem.PageMemory;\n+import org.apache.ignite.internal.processors.cache.CacheGroupContext;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.BPlusTree;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.io.BPlusIO;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.reuse.ReuseList;\n+import org.apache.ignite.internal.processors.cache.persistence.tree.util.PageLockListener;\n+import org.apache.ignite.internal.util.typedef.internal.CU;\n+\n+/**\n+ *\n+ */\n+public class PartitionLogTree extends BPlusTree<UpdateLogRow, UpdateLogRow> {\n+    /** */\n+    public static final Object FULL_ROW = new Object();\n+\n+    /** */\n+    private final CacheGroupContext grp;\n+\n+    /**\n+     * @param grp Cache group.\n+     * @param name Tree name.\n+     * @param pageMem Page memory.\n+     * @param metaPageId Meta page ID.\n+     * @param reuseList Reuse list.\n+     * @param initNew Initialize new index.\n+     * @throws IgniteCheckedException If failed.\n+     */\n+    public PartitionLogTree(\n+        CacheGroupContext grp,\n+        String name,\n+        PageMemory pageMem,\n+        long metaPageId,\n+        ReuseList reuseList,\n+        boolean initNew,\n+        PageLockListener lockLsnr\n+    ) throws IgniteCheckedException {\n+        super(\n+            name,\n+            grp.groupId(),\n+            grp.name(),\n+            pageMem,\n+            grp.dataRegion().config().isPersistenceEnabled() ? grp.shared().wal() : null,\n+            grp.offheap().globalRemoveId(),\n+            metaPageId,\n+            reuseList,\n+            grp.sharedGroup() ? CacheIdAwareUpdateLogInnerIO.VERSIONS : UpdateLogInnerIO.VERSIONS,\n+            grp.sharedGroup() ? CacheIdAwareUpdateLogLeafIO.VERSIONS : UpdateLogLeafIO.VERSIONS,\n+            grp.shared().kernalContext().failure(),\n+            lockLsnr\n+        );\n+\n+        this.grp = grp;\n+\n+        assert !grp.dataRegion().config().isPersistenceEnabled() || grp.shared().database().checkpointLockIsHeldByThread();\n+\n+        initTree(initNew);\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Override protected int compare(BPlusIO<UpdateLogRow> iox, long pageAddr, int idx, UpdateLogRow row) {\n+        UpdateLogRowIO io = (UpdateLogRowIO)iox;\n+\n+        int cmp;\n+\n+        if (grp.sharedGroup()) {\n+            assert row.cacheId != CU.UNDEFINED_CACHE_ID : \"Cache ID is not provided!\";\n+            assert io.getCacheId(pageAddr, idx) != CU.UNDEFINED_CACHE_ID : \"Cache ID is not stored!\";\n+\n+            cmp = Integer.compare(io.getCacheId(pageAddr, idx), row.cacheId);\n+\n+            if (cmp != 0)\n+                return cmp;\n+\n+            if (row.updateCntr == 0 && row.link == 0) {\n+                // A search row with a cache ID only is used as a cache bound.\n+                // The found position will be shifted until the exact cache bound is found;\n+                // See for details:\n+                // o.a.i.i.p.c.database.tree.BPlusTree.ForwardCursor.findLowerBound()\n+                // o.a.i.i.p.c.database.tree.BPlusTree.ForwardCursor.findUpperBound()\n+                return cmp;\n+            }\n+        }\n+\n+        long updCntr = io.getUpdateCounter(pageAddr, idx);\n+\n+        cmp = Long.compare(updCntr, row.updateCntr);\n+\n+        if (cmp == 0 && row.link != 0)\n+            assert io.getLink(pageAddr, idx) == row.link;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODg5OTc0Nw==", "bodyText": "h2ExtraInnerIOs is a constant now, hence it should be named with underscore", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r458899747", "createdAt": "2020-07-22T15:56:00Z", "author": {"login": "korlov42"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/tree/io/PageIO.java", "diffHunk": "@@ -109,16 +113,16 @@\n     public static final short MAX_PAYLOAD_SIZE = 2048;\n \n     /** */\n-    private static List<IOVersions<? extends BPlusInnerIO<?>>> h2ExtraInnerIOs = new ArrayList<>(MAX_PAYLOAD_SIZE);\n+    private static final List<IOVersions<? extends BPlusInnerIO<?>>> h2ExtraInnerIOs = new ArrayList<>(MAX_PAYLOAD_SIZE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8008e993853b75068d5eca703faa9cffa544b220"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ae16d709e28cf7d2bae167376fc6651aca9780b", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/3ae16d709e28cf7d2bae167376fc6651aca9780b", "committedDate": "2020-07-28T16:32:30Z", "message": "Fix after review."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e77b171df566c38037156d339ca58b5e8e943121", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/e77b171df566c38037156d339ca58b5e8e943121", "committedDate": "2020-07-28T16:35:45Z", "message": "Merge branch 'master' into gg-29644\n\n# Conflicts:\n#\tmodules/core/src/main/java/org/apache/ignite/internal/processors/cache/GridCacheMapEntry.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a83a75f4b642273f3347031a1ff1a686821bb1e1", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/a83a75f4b642273f3347031a1ff1a686821bb1e1", "committedDate": "2020-07-30T14:22:42Z", "message": "Styles. Revert rearranged imports."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea20146f1c586eb04218c3538a645104768864b5", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/ea20146f1c586eb04218c3538a645104768864b5", "committedDate": "2020-07-31T10:14:45Z", "message": "Merge branch 'gg-29643' into gg-29644\n\n# Conflicts:\n#\tmodules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/pagemem/PageMemoryImpl.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MDk3Mzk4", "url": "https://github.com/gridgain/gridgain/pull/1291#pullrequestreview-459097398", "createdAt": "2020-07-31T11:13:06Z", "commit": {"oid": "ea20146f1c586eb04218c3538a645104768864b5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2074b98352a3c2ee9d2d07de6b7bc314a14df297", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/2074b98352a3c2ee9d2d07de6b7bc314a14df297", "committedDate": "2020-08-05T15:51:05Z", "message": "Fix non-initialized page replacement."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0OTg2MDc1", "url": "https://github.com/gridgain/gridgain/pull/1291#pullrequestreview-464986075", "createdAt": "2020-08-11T11:44:31Z", "commit": {"oid": "2074b98352a3c2ee9d2d07de6b7bc314a14df297"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMTo0NDozMVrOG-0FSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjowNTo0OFrOG-0x0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxODIxOQ==", "bodyText": "So, these are io versions specific for GG, right?\nWas this discussed with Technical Decisions Approval team?", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r468518219", "createdAt": "2020-08-11T11:44:31Z", "author": {"login": "ibessonov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/tree/io/PagePartitionMetaIO.java", "diffHunk": "@@ -46,7 +46,8 @@\n     /** */\n     public static final IOVersions<PagePartitionMetaIO> VERSIONS = new IOVersions<>(\n         new PagePartitionMetaIO(1),\n-        new PagePartitionMetaIOV2(2)\n+        new PagePartitionMetaIOV2(2),\n+        new PagePartitionMetaIOV2(Short.toUnsignedInt((short)-1)) // Prevent partition usage on old versions after upgrade.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2074b98352a3c2ee9d2d07de6b7bc314a14df297"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUxODYyMg==", "bodyText": "You upgrade to version 3 using V2 class, is that ok? Also, space after ) is redundant.", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r468518622", "createdAt": "2020-08-11T11:45:12Z", "author": {"login": "ibessonov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/GridCacheOffheapManager.java", "diffHunk": "@@ -2031,53 +2077,55 @@ private Metas getOrAllocatePartitionMetas() throws IgniteCheckedException {\n \n                         int pageVer = PagePartitionMetaIO.getVersion(pageAddr);\n \n-                        if (pageVer < 2) {\n-                            assert pageVer == 1;\n-\n+                        if (pageVer < 3) {\n                             if (log.isDebugEnabled())\n                                 log.info(\"Upgrade partition meta page version: [part=\" + partId +\n-                                    \", grpId=\" + grpId + \", oldVer=\" + pageVer +\n-                                    \", newVer=\" + io.getVersion()\n+                                        \", grpId=\" + grpId + \", oldVer=\" + pageVer +\n+                                        \", newVer=\" + io.getVersion()\n                                 );\n \n                             io = PagePartitionMetaIO.VERSIONS.latest();\n \n-                            ((PagePartitionMetaIOV2)io).upgradePage(pageAddr);\n+                            assert io.getVersion() == Short.toUnsignedInt((short)-1);\n+\n+                            ((PagePartitionMetaIOV2) io).upgradePage(pageAddr, pageVer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2074b98352a3c2ee9d2d07de6b7bc314a14df297"}, "originalPosition": 199}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUyOTYxNw==", "bodyText": "Hate to say this but I believe that new version of object won't be deserialized properly on old nodes when RU enabled.\nIt'll try to read field \"drVer\" but \"updateCounter\" is found. \"u\" goes after \"d\" in alphabet, so reader will assume that \"drVer\" field is removed and will nullify it. Have you tested it? Am I wrong?\nWe need to make sure that this code is 100% safe.", "url": "https://github.com/gridgain/gridgain/pull/1291#discussion_r468529617", "createdAt": "2020-08-11T12:05:48Z", "author": {"login": "ibessonov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/version/GridCacheVersionEx.java", "diffHunk": "@@ -105,7 +107,7 @@ public GridCacheVersionEx(int topVer, int nodeOrderDrId, long order, GridCacheVe\n         }\n \n         switch (writer.state()) {\n-            case 3:\n+            case 4:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2074b98352a3c2ee9d2d07de6b7bc314a14df297"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46617babc7de65a86258760c034ff7bbdee53fa2", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/46617babc7de65a86258760c034ff7bbdee53fa2", "committedDate": "2020-08-11T14:23:07Z", "message": "Styles. Move new IO version to separate class."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd8fdfed9346ae1cd9aa0b920c2e4829d18471d3", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/cd8fdfed9346ae1cd9aa0b920c2e4829d18471d3", "committedDate": "2020-08-11T21:23:54Z", "message": "Add compatibility test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2c99f99ea53922bd60d14c7f5bdea7ae26a27474", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/2c99f99ea53922bd60d14c7f5bdea7ae26a27474", "committedDate": "2020-08-12T13:58:06Z", "message": "Merge branch 'gg-29643' into gg-29644"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a7bdc0acf49eb6c98cd0a55df3a4ebab72fe6dc", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/5a7bdc0acf49eb6c98cd0a55df3a4ebab72fe6dc", "committedDate": "2020-08-12T20:26:02Z", "message": "Merge branch 'gg-29643' into gg-29644"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "622d6fa73eea8a8b235821c4296abb1a3af9bc91", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/622d6fa73eea8a8b235821c4296abb1a3af9bc91", "committedDate": "2020-08-13T12:43:29Z", "message": "Mute broken test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "696c3bd880f0041b75625e92d1ddc436c9990c28", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/696c3bd880f0041b75625e92d1ddc436c9990c28", "committedDate": "2020-08-13T12:49:08Z", "message": "Mute broken test."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af9dcab7d84ee938407fce3e442c8056cbddf39d", "author": {"user": {"login": "AMashenkov", "name": "Andrew V. Mashenkov"}}, "url": "https://github.com/gridgain/gridgain/commit/af9dcab7d84ee938407fce3e442c8056cbddf39d", "committedDate": "2020-08-13T18:23:51Z", "message": "Merge branch 'gg-29643' into gg-29644"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4137, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}