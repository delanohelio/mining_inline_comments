{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3ODU4NTU4", "number": 876, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDowNToyN1rODbg_LQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMDo0MzozNlrODdSWSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTc4NjA1OnYy", "diffSide": "RIGHT", "path": "modules/management-console-agent/src/test/java/org/apache/ignite/agent/action/controller/AbstractActionControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDowNToyN1rOFjCzow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDowNToyN1rOFjCzow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI5MDQ2Nw==", "bodyText": "Nice work  \ud83d\udc4d", "url": "https://github.com/gridgain/gridgain/pull/876#discussion_r372290467", "createdAt": "2020-01-29T10:05:27Z", "author": {"login": "somjik-api"}, "path": "modules/management-console-agent/src/test/java/org/apache/ignite/agent/action/controller/AbstractActionControllerTest.java", "diffHunk": "@@ -107,6 +112,42 @@ protected void executeAction(Request req, Function<List<JobResponse>, Boolean> a\n         executeActionAndStopNode(req, 0, 0, assertFn);\n     }\n \n+    /**\n+     * @param reqId Request ID.\n+     */\n+    protected List<TaskResponse> taskResults(UUID reqId) {\n+        return interceptor.getAllPayloads(buildActionTaskResponseDest(cluster.id()), TaskResponse.class).stream()\n+            .filter(r -> r.getId().equals(reqId))\n+            .collect(toList());\n+    }\n+\n+    /**\n+     * @param reqId Request ID.\n+     */\n+    protected TaskResponse taskResult(UUID reqId) {\n+        List<TaskResponse> taskRes = taskResults(reqId);\n+\n+        return taskRes.isEmpty() ? null : F.last(taskRes);\n+    }\n+\n+    /**\n+     * @param reqId Request ID.\n+     */\n+    protected List<JobResponse> jobResults(UUID reqId) {\n+        return interceptor.getAllPayloads(buildActionJobResponseDest(cluster.id()), JobResponse.class).stream()\n+            .filter(r -> r.getRequestId().equals(reqId))\n+            .collect(toList());\n+    }\n+\n+    /**\n+     * @param reqId Request ID.\n+     */\n+    protected JobResponse jobResult(UUID reqId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d6e96d4170133585d7f5e09f9d800e3aaa5fcf5"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTc4NzI4OnYy", "diffSide": "RIGHT", "path": "modules/management-console-agent/src/test/java/org/apache/ignite/agent/processor/action/DistributedActionProcessorWithAuthenticationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDowNTo1NlrOFjC0dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDowNTo1NlrOFjC0dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI5MDY3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        List<TaskResponse> taskRes =taskResults(req.getId());\n          \n          \n            \n                        List<TaskResponse> taskRes = taskResults(req.getId());", "url": "https://github.com/gridgain/gridgain/pull/876#discussion_r372290678", "createdAt": "2020-01-29T10:05:56Z", "author": {"login": "somjik-api"}, "path": "modules/management-console-agent/src/test/java/org/apache/ignite/agent/processor/action/DistributedActionProcessorWithAuthenticationTest.java", "diffHunk": "@@ -66,20 +67,19 @@ public void shouldExecuteActionOnCoordinatorNode() throws Exception {\n             .setNodeIds(singleton(crdId))\n             .setSessionId(sesId);\n \n-        executeAction(req, res -> {\n-            List<TaskResponse> taskResults =\n-                interceptor.getAllPayloads(buildActionTaskResponseDest(cluster.id(), req.getId()), TaskResponse.class);\n+        executeAction(req, jobRes -> {\n+            List<TaskResponse> taskRes =taskResults(req.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d6e96d4170133585d7f5e09f9d800e3aaa5fcf5"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTc5NDE3OnYy", "diffSide": "LEFT", "path": "modules/management-console-agent/src/main/java/org/apache/ignite/agent/StompDestinationsUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxMDowODowNVrOFjC4eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMDo1NDoyMlrOFlP5Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI5MTcwNg==", "bodyText": "I think we should not change topic name, because i don't sure how it will be handled in multi-backend setup :(", "url": "https://github.com/gridgain/gridgain/pull/876#discussion_r372291706", "createdAt": "2020-01-29T10:08:05Z", "author": {"login": "somjik-api"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/agent/StompDestinationsUtils.java", "diffHunk": "@@ -92,20 +92,18 @@ public static String buildEventsDest(UUID clusterId) {\n \n     /**\n      * @param clusterId Cluster ID.\n-     * @param reqId request ID.\n      * @return Task response destination.\n      */\n-    public static String buildActionTaskResponseDest(UUID clusterId, UUID reqId) {\n-        return CLUSTER_ACTION_TASK_RESPONSE_DEST + clusterId + \"/\" + reqId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d6e96d4170133585d7f5e09f9d800e3aaa5fcf5"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYwMTk5NA==", "bodyText": "Same way. Only one backend receive message.", "url": "https://github.com/gridgain/gridgain/pull/876#discussion_r374601994", "createdAt": "2020-02-04T10:54:22Z", "author": {"login": "nva"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/agent/StompDestinationsUtils.java", "diffHunk": "@@ -92,20 +92,18 @@ public static String buildEventsDest(UUID clusterId) {\n \n     /**\n      * @param clusterId Cluster ID.\n-     * @param reqId request ID.\n      * @return Task response destination.\n      */\n-    public static String buildActionTaskResponseDest(UUID clusterId, UUID reqId) {\n-        return CLUSTER_ACTION_TASK_RESPONSE_DEST + clusterId + \"/\" + reqId;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjI5MTcwNg=="}, "originalCommit": {"oid": "9d6e96d4170133585d7f5e09f9d800e3aaa5fcf5"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDM1OTEzOnYy", "diffSide": "RIGHT", "path": "modules/management-console-agent/src/test/java/org/apache/ignite/agent/action/controller/AbstractActionControllerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMDo0MzozNlrOFlzRmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMDo0MzozNlrOFlzRmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTE4MTcyMA==", "bodyText": "reqId.equals(r.getId())\nExpected goes first\nIn case of nullable there's a risk of NPE", "url": "https://github.com/gridgain/gridgain/pull/876#discussion_r375181720", "createdAt": "2020-02-05T10:43:36Z", "author": {"login": "MaxLosevskoy"}, "path": "modules/management-console-agent/src/test/java/org/apache/ignite/agent/action/controller/AbstractActionControllerTest.java", "diffHunk": "@@ -107,6 +112,42 @@ protected void executeAction(Request req, Function<List<JobResponse>, Boolean> a\n         executeActionAndStopNode(req, 0, 0, assertFn);\n     }\n \n+    /**\n+     * @param reqId Request ID.\n+     */\n+    protected List<TaskResponse> taskResults(UUID reqId) {\n+        return interceptor.getAllPayloads(buildActionTaskResponseDest(cluster.id()), TaskResponse.class).stream()\n+            .filter(r -> r.getId().equals(reqId))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adade2bf0edb43a3ebc7850c14df9e97e8dc65bd"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3168, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}