{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1ODkwNzE2", "number": 1085, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODo1Nzo1M1rODznwaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjo0MTozMlrOD0OQBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NDU1MzM2OnYy", "diffSide": "RIGHT", "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwODo1Nzo1M1rOGIKRcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNToyMDowMlrOGIZ2WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxMDA5Ng==", "bodyText": "Can we receive SQL injections here?", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r411210096", "createdAt": "2020-04-20T08:57:53Z", "author": {"login": "nva"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "diffHunk": "@@ -89,6 +89,27 @@ public QueryActionsController(GridKernalContext ctx) {\n         return new IgniteFinishedFutureImpl<>();\n     }\n \n+    /**\n+     * @param globalQryId Global query id.\n+     * @return Kill query result.\n+     */\n+    public IgniteInternalFuture<QueryResult> kill(String globalQryId) {\n+        return ctx.closure().callLocalSafe(() -> {\n+            SqlFieldsQuery qryFields = new SqlFieldsQuery(\"KILL QUERY '\" + globalQryId + \"';\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d847cd27cbb051d49ec0f1b4521cf486a54eac6e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM1MzcxNw==", "bodyText": "I don't think we should care too much about this here. If the user has access to killing queries, she probably can execute them as well.", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r411353717", "createdAt": "2020-04-20T12:55:20Z", "author": {"login": "dmekhanikov"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "diffHunk": "@@ -89,6 +89,27 @@ public QueryActionsController(GridKernalContext ctx) {\n         return new IgniteFinishedFutureImpl<>();\n     }\n \n+    /**\n+     * @param globalQryId Global query id.\n+     * @return Kill query result.\n+     */\n+    public IgniteInternalFuture<QueryResult> kill(String globalQryId) {\n+        return ctx.closure().callLocalSafe(() -> {\n+            SqlFieldsQuery qryFields = new SqlFieldsQuery(\"KILL QUERY '\" + globalQryId + \"';\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxMDA5Ng=="}, "originalCommit": {"oid": "d847cd27cbb051d49ec0f1b4521cf486a54eac6e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ2NTMwNA==", "bodyText": "We have a special action for execution any SQL query, :)", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r411465304", "createdAt": "2020-04-20T15:20:02Z", "author": {"login": "somjik-api"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "diffHunk": "@@ -89,6 +89,27 @@ public QueryActionsController(GridKernalContext ctx) {\n         return new IgniteFinishedFutureImpl<>();\n     }\n \n+    /**\n+     * @param globalQryId Global query id.\n+     * @return Kill query result.\n+     */\n+    public IgniteInternalFuture<QueryResult> kill(String globalQryId) {\n+        return ctx.closure().callLocalSafe(() -> {\n+            SqlFieldsQuery qryFields = new SqlFieldsQuery(\"KILL QUERY '\" + globalQryId + \"';\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxMDA5Ng=="}, "originalCommit": {"oid": "d847cd27cbb051d49ec0f1b4521cf486a54eac6e"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NDYwMDAxOnYy", "diffSide": "RIGHT", "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/dto/action/query/RunningQuery.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQwOTowODozM1rOGIKs6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNTo1NjoxMVrOGIbmtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxNzEyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                /** ID. */\n          \n          \n            \n                /** Query ID from request. */", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r411217129", "createdAt": "2020-04-20T09:08:33Z", "author": {"login": "nva"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/dto/action/query/RunningQuery.java", "diffHunk": "@@ -23,9 +23,12 @@\n  * Descriptor of running query.\n  */\n public class RunningQuery {\n-    /** */\n+    /** ID. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d847cd27cbb051d49ec0f1b4521cf486a54eac6e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ5NDA2OQ==", "bodyText": "Done.", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r411494069", "createdAt": "2020-04-20T15:56:11Z", "author": {"login": "somjik-api"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/dto/action/query/RunningQuery.java", "diffHunk": "@@ -23,9 +23,12 @@\n  * Descriptor of running query.\n  */\n public class RunningQuery {\n-    /** */\n+    /** ID. */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTIxNzEyOQ=="}, "originalCommit": {"oid": "d847cd27cbb051d49ec0f1b4521cf486a54eac6e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NTUxMzE0OnYy", "diffSide": "RIGHT", "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjo1NjowOFrOGITEjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNToyNzoyN1rOGIaNdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM1NDI1Mg==", "bodyText": "Is the result going to be used the frontend?", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r411354252", "createdAt": "2020-04-20T12:56:08Z", "author": {"login": "dmekhanikov"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "diffHunk": "@@ -89,6 +89,27 @@ public QueryActionsController(GridKernalContext ctx) {\n         return new IgniteFinishedFutureImpl<>();\n     }\n \n+    /**\n+     * @param globalQryId Global query id.\n+     * @return Kill query result.\n+     */\n+    public IgniteInternalFuture<QueryResult> kill(String globalQryId) {\n+        return ctx.closure().callLocalSafe(() -> {\n+            SqlFieldsQuery qryFields = new SqlFieldsQuery(\"KILL QUERY '\" + globalQryId + \"';\");\n+\n+            try (\n+                FieldsQueryCursor<List<?>> cur = qryProc.querySqlFields(qryFields, true);\n+                CursorHolder cursorHolder = new CursorHolder(cur)\n+            ) {\n+                QueryResult res = fetchSqlQueryResult(cursorHolder, 1);\n+\n+                res.setResultNodeId(ctx.localNodeId().toString());\n+\n+                return res;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d847cd27cbb051d49ec0f1b4521cf486a54eac6e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ3MTIyMw==", "bodyText": "I think no, make it as cancel action :)", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r411471223", "createdAt": "2020-04-20T15:27:27Z", "author": {"login": "somjik-api"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "diffHunk": "@@ -89,6 +89,27 @@ public QueryActionsController(GridKernalContext ctx) {\n         return new IgniteFinishedFutureImpl<>();\n     }\n \n+    /**\n+     * @param globalQryId Global query id.\n+     * @return Kill query result.\n+     */\n+    public IgniteInternalFuture<QueryResult> kill(String globalQryId) {\n+        return ctx.closure().callLocalSafe(() -> {\n+            SqlFieldsQuery qryFields = new SqlFieldsQuery(\"KILL QUERY '\" + globalQryId + \"';\");\n+\n+            try (\n+                FieldsQueryCursor<List<?>> cur = qryProc.querySqlFields(qryFields, true);\n+                CursorHolder cursorHolder = new CursorHolder(cur)\n+            ) {\n+                QueryResult res = fetchSqlQueryResult(cursorHolder, 1);\n+\n+                res.setResultNodeId(ctx.localNodeId().toString());\n+\n+                return res;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM1NDI1Mg=="}, "originalCommit": {"oid": "d847cd27cbb051d49ec0f1b4521cf486a54eac6e"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NTUyMDM3OnYy", "diffSide": "RIGHT", "path": "modules/management-console-agent/src/test/java/org/apache/ignite/internal/agent/action/controller/QueryActionsControllerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjo1NzozOVrOGITIkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNTo1NjowNFrOGIbmTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM1NTI4Mw==", "bodyText": "Please add a test that kill a query started from Ignite directly without using GGCC API.", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r411355283", "createdAt": "2020-04-20T12:57:39Z", "author": {"login": "dmekhanikov"}, "path": "modules/management-console-agent/src/test/java/org/apache/ignite/internal/agent/action/controller/QueryActionsControllerTest.java", "diffHunk": "@@ -388,6 +391,62 @@ public void shouldCancelLongQuery() {\n         );\n     }\n \n+    /**\n+     * 1. Execute a query with sleep function.\n+     * 2. Send kill query action with global query id for a query from 1.\n+     * 3. Assert that action was completed and no one running queries exists in a cluster.\n+     */\n+    @Test\n+    public void shouldKillRunningQuery() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d847cd27cbb051d49ec0f1b4521cf486a54eac6e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTQ5Mzk2Nw==", "bodyText": "Added", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r411493967", "createdAt": "2020-04-20T15:56:04Z", "author": {"login": "somjik-api"}, "path": "modules/management-console-agent/src/test/java/org/apache/ignite/internal/agent/action/controller/QueryActionsControllerTest.java", "diffHunk": "@@ -388,6 +391,62 @@ public void shouldCancelLongQuery() {\n         );\n     }\n \n+    /**\n+     * 1. Execute a query with sleep function.\n+     * 2. Send kill query action with global query id for a query from 1.\n+     * 3. Assert that action was completed and no one running queries exists in a cluster.\n+     */\n+    @Test\n+    public void shouldKillRunningQuery() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM1NTI4Mw=="}, "originalCommit": {"oid": "d847cd27cbb051d49ec0f1b4521cf486a54eac6e"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjY3MDg3OnYy", "diffSide": "RIGHT", "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjo0NzoyOVrOGId7Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMDoxMToxNlrOGI91lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUzMjEyMw==", "bodyText": "Should we have checks features that \"KILL QUERY\" is supported by node?", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r411532123", "createdAt": "2020-04-20T16:47:29Z", "author": {"login": "akuznetsov-gridgain"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "diffHunk": "@@ -89,6 +89,19 @@ public QueryActionsController(GridKernalContext ctx) {\n         return new IgniteFinishedFutureImpl<>();\n     }\n \n+    /**\n+     * @param globalQryId Global query id.\n+     * @return Kill query result.\n+     */\n+    public IgniteInternalFuture<?> kill(String globalQryId) {\n+        return ctx.closure().runLocalSafe(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dcbd7bc9b76d2b77314e6459773cb8ce076baa9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTgyNTUwMw==", "bodyText": "May be we should define some interceptor for all actions that can validate feature/version from annotation on action method?", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r411825503", "createdAt": "2020-04-21T02:38:16Z", "author": {"login": "nva"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "diffHunk": "@@ -89,6 +89,19 @@ public QueryActionsController(GridKernalContext ctx) {\n         return new IgniteFinishedFutureImpl<>();\n     }\n \n+    /**\n+     * @param globalQryId Global query id.\n+     * @return Kill query result.\n+     */\n+    public IgniteInternalFuture<?> kill(String globalQryId) {\n+        return ctx.closure().runLocalSafe(() -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUzMjEyMw=="}, "originalCommit": {"oid": "6dcbd7bc9b76d2b77314e6459773cb8ce076baa9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA1NDkzNA==", "bodyText": "Why we should check it on the agent? I think we should check that we can run some action on UI as we do it with baseline auto-adjust feature.", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r412054934", "createdAt": "2020-04-21T10:11:16Z", "author": {"login": "somjik-api"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "diffHunk": "@@ -89,6 +89,19 @@ public QueryActionsController(GridKernalContext ctx) {\n         return new IgniteFinishedFutureImpl<>();\n     }\n \n+    /**\n+     * @param globalQryId Global query id.\n+     * @return Kill query result.\n+     */\n+    public IgniteInternalFuture<?> kill(String globalQryId) {\n+        return ctx.closure().runLocalSafe(() -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUzMjEyMw=="}, "originalCommit": {"oid": "6dcbd7bc9b76d2b77314e6459773cb8ce076baa9"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2MDg2MDIxOnYy", "diffSide": "RIGHT", "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMjo0MTozMlrOGJDmtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwNzoyNjoyMlrOGJnfaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0OTQyOQ==", "bodyText": "May be it make sense to introduce base class for ActionsControllers?\nAnd declare protected method \"safeExecute(lambda)\" that will accept function to execute?", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r412149429", "createdAt": "2020-04-21T12:41:32Z", "author": {"login": "akuznetsov-gridgain"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "diffHunk": "@@ -89,6 +89,19 @@ public QueryActionsController(GridKernalContext ctx) {\n         return new IgniteFinishedFutureImpl<>();\n     }\n \n+    /**\n+     * @param globalQryId Global query id.\n+     * @return Kill query result.\n+     */\n+    public IgniteInternalFuture<?> kill(String globalQryId) {\n+        return ctx.closure().runLocalSafe(() -> {\n+            SqlFieldsQuery qryFields = new SqlFieldsQuery(\"KILL QUERY '\" + globalQryId + \"';\")\n+                .setLazy(false);\n+\n+            qryProc.querySqlFields(qryFields, true).close();\n+        }, MANAGEMENT_POOL);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6dcbd7bc9b76d2b77314e6459773cb8ce076baa9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE2Njk2Nw==", "bodyText": "@nva What do you think about it? If yes then i create a separate ticket for this and change in all places  where it need. But my opinion that it's not require.", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r412166967", "createdAt": "2020-04-21T13:05:55Z", "author": {"login": "somjik-api"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "diffHunk": "@@ -89,6 +89,19 @@ public QueryActionsController(GridKernalContext ctx) {\n         return new IgniteFinishedFutureImpl<>();\n     }\n \n+    /**\n+     * @param globalQryId Global query id.\n+     * @return Kill query result.\n+     */\n+    public IgniteInternalFuture<?> kill(String globalQryId) {\n+        return ctx.closure().runLocalSafe(() -> {\n+            SqlFieldsQuery qryFields = new SqlFieldsQuery(\"KILL QUERY '\" + globalQryId + \"';\")\n+                .setLazy(false);\n+\n+            qryProc.querySqlFields(qryFields, true).close();\n+        }, MANAGEMENT_POOL);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0OTQyOQ=="}, "originalCommit": {"oid": "6dcbd7bc9b76d2b77314e6459773cb8ce076baa9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjMyMDIxNQ==", "bodyText": "It will reduce amount of boilerplate code. IMHO.", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r412320215", "createdAt": "2020-04-21T16:48:22Z", "author": {"login": "akuznetsov-gridgain"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "diffHunk": "@@ -89,6 +89,19 @@ public QueryActionsController(GridKernalContext ctx) {\n         return new IgniteFinishedFutureImpl<>();\n     }\n \n+    /**\n+     * @param globalQryId Global query id.\n+     * @return Kill query result.\n+     */\n+    public IgniteInternalFuture<?> kill(String globalQryId) {\n+        return ctx.closure().runLocalSafe(() -> {\n+            SqlFieldsQuery qryFields = new SqlFieldsQuery(\"KILL QUERY '\" + globalQryId + \"';\")\n+                .setLazy(false);\n+\n+            qryProc.querySqlFields(qryFields, true).close();\n+        }, MANAGEMENT_POOL);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0OTQyOQ=="}, "originalCommit": {"oid": "6dcbd7bc9b76d2b77314e6459773cb8ce076baa9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjY0ODUxNA==", "bodyText": "Let's do this in separated ticket.", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r412648514", "createdAt": "2020-04-22T03:50:36Z", "author": {"login": "nva"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "diffHunk": "@@ -89,6 +89,19 @@ public QueryActionsController(GridKernalContext ctx) {\n         return new IgniteFinishedFutureImpl<>();\n     }\n \n+    /**\n+     * @param globalQryId Global query id.\n+     * @return Kill query result.\n+     */\n+    public IgniteInternalFuture<?> kill(String globalQryId) {\n+        return ctx.closure().runLocalSafe(() -> {\n+            SqlFieldsQuery qryFields = new SqlFieldsQuery(\"KILL QUERY '\" + globalQryId + \"';\")\n+                .setLazy(false);\n+\n+            qryProc.querySqlFields(qryFields, true).close();\n+        }, MANAGEMENT_POOL);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0OTQyOQ=="}, "originalCommit": {"oid": "6dcbd7bc9b76d2b77314e6459773cb8ce076baa9"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjczNzM4NQ==", "bodyText": "Ticket: GG-28865", "url": "https://github.com/gridgain/gridgain/pull/1085#discussion_r412737385", "createdAt": "2020-04-22T07:26:22Z", "author": {"login": "somjik-api"}, "path": "modules/management-console-agent/src/main/java/org/apache/ignite/internal/agent/action/controller/QueryActionsController.java", "diffHunk": "@@ -89,6 +89,19 @@ public QueryActionsController(GridKernalContext ctx) {\n         return new IgniteFinishedFutureImpl<>();\n     }\n \n+    /**\n+     * @param globalQryId Global query id.\n+     * @return Kill query result.\n+     */\n+    public IgniteInternalFuture<?> kill(String globalQryId) {\n+        return ctx.closure().runLocalSafe(() -> {\n+            SqlFieldsQuery qryFields = new SqlFieldsQuery(\"KILL QUERY '\" + globalQryId + \"';\")\n+                .setLazy(false);\n+\n+            qryProc.querySqlFields(qryFields, true).close();\n+        }, MANAGEMENT_POOL);\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjE0OTQyOQ=="}, "originalCommit": {"oid": "6dcbd7bc9b76d2b77314e6459773cb8ce076baa9"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3119, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}