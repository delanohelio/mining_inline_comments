{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwMjc4MzQx", "number": 895, "title": "GG-26790 Prevent BinaryObjectExImpl.toString failing with exception if a class of an object serialized with OptimizedMarshaller is not accessible", "bodyText": "", "createdAt": "2020-02-03T11:53:48Z", "url": "https://github.com/gridgain/gridgain/pull/895", "merged": true, "mergeCommit": {"oid": "2638db8736a5e305425aac7a2c91af15cd8a2cf1"}, "closed": true, "closedAt": "2020-02-12T08:42:02Z", "author": {"login": "pavlukhin"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcArk-NgH2gAyMzcwMjc4MzQxOjc4MmM1YzU0Y2Y0ZmY0ZjViMWM0MzAwY2ZhYWU2ZjBlZTU3NDExMTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcC-bZPAFqTM1NjAwMjE0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "782c5c54cf4ff4f5b1c4300cfaae6f0ee5741118", "author": {"user": {"login": "pavlukhin", "name": null}}, "url": "https://github.com/gridgain/gridgain/commit/782c5c54cf4ff4f5b1c4300cfaae6f0ee5741118", "committedDate": "2020-02-03T11:52:23Z", "message": "GG-26790 Prevent BinaryObjectExImpl.toString failing with exception if a class of an object serialized with OptimizedMarshaller is not accessible"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab18a21a3559de3097e0ed4c770aa5afd936b9b8", "author": {"user": {"login": "pavlukhin", "name": null}}, "url": "https://github.com/gridgain/gridgain/commit/ab18a21a3559de3097e0ed4c770aa5afd936b9b8", "committedDate": "2020-02-03T13:14:35Z", "message": "GG-26790 Rename test class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUyMjQzODYy", "url": "https://github.com/gridgain/gridgain/pull/895#pullrequestreview-352243862", "createdAt": "2020-02-03T13:17:13Z", "commit": {"oid": "ab18a21a3559de3097e0ed4c770aa5afd936b9b8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzoxNzoxM1rOFkw9Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxMzoxNzoxM1rOFkw9Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDA5NTEzNA==", "bodyText": "Such \"todo\" looks like a violation of code style to me.\nWe should use the following format: // TODO GG-XXXXX cleanup tmp files carefully.\nWhere GG-XXXXX - is a number of issue where this will be fixed.", "url": "https://github.com/gridgain/gridgain/pull/895#discussion_r374095134", "createdAt": "2020-02-03T13:17:13Z", "author": {"login": "akuznetsov-gridgain"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/ivan/BinaryToStringClassNotFoundProblem.java", "diffHunk": "@@ -0,0 +1,112 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.internal.processors.cache.ivan;\n+\n+import java.io.IOException;\n+import java.lang.reflect.Constructor;\n+import java.net.URL;\n+import java.net.URLClassLoader;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import javax.tools.JavaCompiler;\n+import javax.tools.ToolProvider;\n+import org.apache.ignite.IgniteCache;\n+import org.apache.ignite.configuration.CacheConfiguration;\n+import org.apache.ignite.internal.IgniteEx;\n+import org.apache.ignite.testframework.junits.common.GridCommonAbstractTest;\n+import org.junit.Test;\n+\n+/** */\n+public class BinaryToStringClassNotFoundProblem extends GridCommonAbstractTest {\n+    /** */\n+    @Test\n+    public void testToStringInaccessibleOptimizedMarshallerClass() throws Exception {\n+        URLClassLoader extClsLdr = extClassLoader(\"Problematic.java\", \"\" +\n+            \"import java.io.Externalizable;\\n\" +\n+            \"import java.io.IOException;\\n\" +\n+            \"import java.io.ObjectInput;\\n\" +\n+            \"import java.io.ObjectOutput;\\n\" +\n+            \"\\n\" +\n+            \"public class Problematic implements Externalizable {\\n\" +\n+            \"    int x;\\n\" +\n+            \"\\n\" +\n+            \"    private Problematic() {\\n\" +\n+            \"    }\\n\" +\n+            \"\\n\" +\n+            \"    public Problematic(int x) {\\n\" +\n+            \"        this.x = x;\\n\" +\n+            \"    }\\n\" +\n+            \"\\n\" +\n+            \"    @Override public void writeExternal(ObjectOutput out) throws IOException {\\n\" +\n+            \"        out.writeInt(x);\\n\" +\n+            \"    }\\n\" +\n+            \"\\n\" +\n+            \"    @Override public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException {\\n\" +\n+            \"        x = in.readInt();\\n\" +\n+            \"    }\\n\" +\n+            \"}\");\n+\n+        Object ext = newExtInstance(extClsLdr);\n+\n+        IgniteEx ign = startGrid(0);\n+\n+        IgniteCache<Object, Object> cache = ign.getOrCreateCache(new CacheConfiguration<>(DEFAULT_CACHE_NAME));\n+\n+        cache.put(1, new TestContainer(ext));\n+\n+        assertTrue(cache.withKeepBinary().get(1).toString()\n+            .matches(\"org.apache.ignite.internal.processors.cache.ivan.BinaryToStringClassCastProblem\\\\$TestContainer \" +\n+                \"\\\\[idHash=-?\\\\d+, hash=-?\\\\d+, x=Problematic\\\\(Class not found\\\\)]\"));\n+    }\n+\n+    /** */\n+    private URLClassLoader extClassLoader(String srcFileName, String srcCode) throws IOException {\n+        // t0d0 cleanup tmp files carefully", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab18a21a3559de3097e0ed4c770aa5afd936b9b8"}, "originalPosition": 78}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c682e110d3e28a3aa6fb33adf0789ae90a2e2b7", "author": {"user": {"login": "pavlukhin", "name": null}}, "url": "https://github.com/gridgain/gridgain/commit/7c682e110d3e28a3aa6fb33adf0789ae90a2e2b7", "committedDate": "2020-02-03T13:51:19Z", "message": "GG-26790 Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8115e712de2f21a5a28da6039d5cc053e3aee4a", "author": {"user": {"login": "pavlukhin", "name": null}}, "url": "https://github.com/gridgain/gridgain/commit/c8115e712de2f21a5a28da6039d5cc053e3aee4a", "committedDate": "2020-02-10T10:19:39Z", "message": "GG-26790 Simplify error message when class is not found"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "167439d5129ba37c36be9465778e60c80f5aa109", "author": {"user": {"login": "pavlukhin", "name": null}}, "url": "https://github.com/gridgain/gridgain/commit/167439d5129ba37c36be9465778e60c80f5aa109", "committedDate": "2020-02-10T14:29:13Z", "message": "GG-26790 Implement test plan"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30ec2bf5da6c9389cc5aba44471f8ae0c6730438", "author": {"user": {"login": "pavlukhin", "name": null}}, "url": "https://github.com/gridgain/gridgain/commit/30ec2bf5da6c9389cc5aba44471f8ae0c6730438", "committedDate": "2020-02-10T14:36:56Z", "message": "GG-26790 Move BinaryObjectToStringTest to a proper package and add to a suite"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8fc38537c420a6a9f838afa48bc8d64f22487c6", "author": {"user": {"login": "pavlukhin", "name": null}}, "url": "https://github.com/gridgain/gridgain/commit/e8fc38537c420a6a9f838afa48bc8d64f22487c6", "committedDate": "2020-02-10T14:38:06Z", "message": "GG-26790 Remove debug output"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2MDAyMTQ2", "url": "https://github.com/gridgain/gridgain/pull/895#pullrequestreview-356002146", "createdAt": "2020-02-10T14:57:57Z", "commit": {"oid": "e8fc38537c420a6a9f838afa48bc8d64f22487c6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDo1Nzo1OFrOFnpKwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxNDo1Nzo1OFrOFnpKwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzExMzI4Mg==", "bodyText": "No ; for this case?", "url": "https://github.com/gridgain/gridgain/pull/895#discussion_r377113282", "createdAt": "2020-02-10T14:57:58Z", "author": {"login": "MaxLosevskoy"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/binary/BinaryObjectExImpl.java", "diffHunk": "@@ -240,6 +242,23 @@ private String toString(BinaryReaderHandles ctx, IdentityHashMap<BinaryObject, I\n         return buf.toString();\n     }\n \n+    /** */\n+    private Object fieldForToString(BinaryReaderHandles ctx, String name) {\n+        try {\n+            return field(ctx, name);\n+        }\n+        catch (Exception e) {\n+            OptimizedMarshallerInaccessibleClassException e1 =\n+                X.cause(e, OptimizedMarshallerInaccessibleClassException.class);\n+\n+            String msg = \"Failed to create a string representation\";\n+\n+            return e1 != null\n+                ? \"(\" + msg + \": class not found \" + e1.inaccessibleClass() + \")\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8fc38537c420a6a9f838afa48bc8d64f22487c6"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4720, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}