{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5OTgxMjEz", "number": 1037, "title": "GG-27289: SQLRowCount implemented for SELECT queries", "bodyText": "", "createdAt": "2020-04-07T01:04:33Z", "url": "https://github.com/gridgain/gridgain/pull/1037", "merged": true, "mergeCommit": {"oid": "e3d646323ed87ef7a5ab358ebf0e7fa003f9b659"}, "closed": true, "closedAt": "2020-04-08T01:12:21Z", "author": {"login": "isapego"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVIpUmAH2gAyMzk5OTgxMjEzOjc5MDkzNDY1MzdlOGQ2MGIxNTgwNzEzYWYxZWQ0NjgxZTY2NjQ5MTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVUu9SgFqTM4OTE5NjY3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7909346537e8d60b1580713af1ed4681e6664917", "author": {"user": {"login": "isapego", "name": "Igor Sapego"}}, "url": "https://github.com/gridgain/gridgain/commit/7909346537e8d60b1580713af1ed4681e6664917", "committedDate": "2020-04-07T01:02:52Z", "message": "GG-27289: SQLRowCount implemented for SELECT queries"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MTk2Njc2", "url": "https://github.com/gridgain/gridgain/pull/1037#pullrequestreview-389196676", "createdAt": "2020-04-07T14:52:07Z", "commit": {"oid": "7909346537e8d60b1580713af1ed4681e6664917"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDo1MjowN1rOGCHbHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNTowNzo0MlrOGCIM-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3MTk2NQ==", "bodyText": "I'm definitely not an expert here, but why do we need a cycle with 200 loops?\nIs it supposed to be 1000/123?", "url": "https://github.com/gridgain/gridgain/pull/1037#discussion_r404871965", "createdAt": "2020-04-07T14:52:07Z", "author": {"login": "ashapkin"}, "path": "modules/platforms/cpp/odbc-test/src/queries_test.cpp", "diffHunk": "@@ -1667,7 +1667,41 @@ BOOST_AUTO_TEST_CASE(TestAffectedRows)\n     if (!SQL_SUCCEEDED(ret))\n         BOOST_FAIL(GetOdbcErrorMessage(SQL_HANDLE_STMT, stmt));\n \n-    BOOST_CHECK_EQUAL(affected, 0);\n+    BOOST_CHECK_EQUAL(affected, 1024);\n+}\n+\n+BOOST_AUTO_TEST_CASE(TestAffectedRowsOnSelect)\n+{\n+    Connect(\"DRIVER={Apache Ignite};ADDRESS=127.0.0.1:11110;SCHEMA=cache;PAGE_SIZE=123\");\n+\n+    const int recordsNum = 1000;\n+\n+    // Inserting values.\n+    InsertTestStrings(recordsNum);\n+\n+    // Just selecting everything to make sure everything is OK\n+    SQLCHAR selectReq[] = \"SELECT _key, strField FROM TestType ORDER BY _key\";\n+\n+    SQLRETURN ret = SQLExecDirect(stmt, selectReq, sizeof(selectReq));\n+\n+    if (!SQL_SUCCEEDED(ret))\n+        BOOST_FAIL(GetOdbcErrorMessage(SQL_HANDLE_STMT, stmt));\n+\n+    for (int i = 0; i < 200; ++i)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7909346537e8d60b1580713af1ed4681e6664917"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg4NDcyOQ==", "bodyText": "Just in case: different connections could yield different results for the same query.", "url": "https://github.com/gridgain/gridgain/pull/1037#discussion_r404884729", "createdAt": "2020-04-07T15:07:42Z", "author": {"login": "ashapkin"}, "path": "modules/platforms/cpp/odbc/src/query/data_query.cpp", "diffHunk": "@@ -181,7 +181,11 @@ namespace ignite\n             int64_t DataQuery::AffectedRows() const\n             {\n                 int64_t affected = rowsAffectedIdx < rowsAffected.size() ? rowsAffected[rowsAffectedIdx] : 0;\n-                return affected < 0 ? 0 : affected;\n+\n+                if (affected >= 0)\n+                    return affected;\n+\n+                return connection.GetConfiguration().GetPageSize();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7909346537e8d60b1580713af1ed4681e6664917"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4258, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}