{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ3MDkzMjE2", "number": 1694, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODozMToxNlrOFNXBwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODozMzo1NFrOFNXFkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTUzMDg5OnYy", "diffSide": "RIGHT", "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/ContinuousQueryMarshallerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODozMToxNlrOIRiFSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODozMToxNlrOIRiFSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTI1NTExMg==", "bodyText": "In accordance with https://cwiki.apache.org/confluence/display/IGNITE/Abbreviation+Rules cnt should be used instead of count", "url": "https://github.com/gridgain/gridgain/pull/1694#discussion_r555255112", "createdAt": "2021-01-11T18:31:16Z", "author": {"login": "sk0x50"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/ContinuousQueryMarshallerTest.java", "diffHunk": "@@ -104,31 +112,32 @@ private void check(String node1Name, String node2Name) throws Exception {\n \n         qry.setRemoteFilterFactory(new DummyEventFilterFactory<>());\n \n-        final CountDownLatch latch = new CountDownLatch(15);\n+        final CountDownLatch latch = new CountDownLatch(NUM_OF_UPDATES);\n \n         qry.setLocalListener(new CacheEntryUpdatedListener<Integer, MarshallerCheckingEntry>() {\n             @Override public void onUpdated(\n                 final Iterable<CacheEntryEvent<? extends Integer, ? extends MarshallerCheckingEntry>> evts)\n                 throws CacheEntryListenerException {\n \n-                System.out.println(\">> Client 1 events \" + evts);\n-\n                 for (CacheEntryEvent<? extends Integer, ? extends MarshallerCheckingEntry> evt : evts)\n                     latch.countDown();\n             }\n         });\n \n         final IgniteCache<Integer, MarshallerCheckingEntry> cache1 = node2.cache(CACHE_NAME);\n \n+        int count = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e86820935d9761f685b875988c36d8d0e7df66a5"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTUzNDA4OnYy", "diffSide": "RIGHT", "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/ContinuousQueryMarshallerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODozMjoxMVrOIRiHXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODozMjoxMVrOIRiHXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTI1NTY0Nw==", "bodyText": "Please remove unnecessary brackets.", "url": "https://github.com/gridgain/gridgain/pull/1694#discussion_r555255647", "createdAt": "2021-01-11T18:32:11Z", "author": {"login": "sk0x50"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/ContinuousQueryMarshallerTest.java", "diffHunk": "@@ -104,31 +112,32 @@ private void check(String node1Name, String node2Name) throws Exception {\n \n         qry.setRemoteFilterFactory(new DummyEventFilterFactory<>());\n \n-        final CountDownLatch latch = new CountDownLatch(15);\n+        final CountDownLatch latch = new CountDownLatch(NUM_OF_UPDATES);\n \n         qry.setLocalListener(new CacheEntryUpdatedListener<Integer, MarshallerCheckingEntry>() {\n             @Override public void onUpdated(\n                 final Iterable<CacheEntryEvent<? extends Integer, ? extends MarshallerCheckingEntry>> evts)\n                 throws CacheEntryListenerException {\n \n-                System.out.println(\">> Client 1 events \" + evts);\n-\n                 for (CacheEntryEvent<? extends Integer, ? extends MarshallerCheckingEntry> evt : evts)\n                     latch.countDown();\n             }\n         });\n \n         final IgniteCache<Integer, MarshallerCheckingEntry> cache1 = node2.cache(CACHE_NAME);\n \n+        int count = 0;\n         for (Cache.Entry<Integer, MarshallerCheckingEntry> entry : cache1.query(qry)) {\n-            latch.countDown();\n-            System.out.println(\">> Initial entry \" + entry);\n+            count++;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e86820935d9761f685b875988c36d8d0e7df66a5"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5NTU0MDY3OnYy", "diffSide": "RIGHT", "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/ContinuousQueryMarshallerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODozMzo1NFrOIRiLSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMVQxODozMzo1NFrOIRiLSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NTI1NjY0OA==", "bodyText": "Please add whitespace before CACHE_SIZE.", "url": "https://github.com/gridgain/gridgain/pull/1694#discussion_r555256648", "createdAt": "2021-01-11T18:33:54Z", "author": {"login": "sk0x50"}, "path": "modules/core/src/test/java/org/apache/ignite/internal/processors/cache/query/continuous/ContinuousQueryMarshallerTest.java", "diffHunk": "@@ -104,31 +112,32 @@ private void check(String node1Name, String node2Name) throws Exception {\n \n         qry.setRemoteFilterFactory(new DummyEventFilterFactory<>());\n \n-        final CountDownLatch latch = new CountDownLatch(15);\n+        final CountDownLatch latch = new CountDownLatch(NUM_OF_UPDATES);\n \n         qry.setLocalListener(new CacheEntryUpdatedListener<Integer, MarshallerCheckingEntry>() {\n             @Override public void onUpdated(\n                 final Iterable<CacheEntryEvent<? extends Integer, ? extends MarshallerCheckingEntry>> evts)\n                 throws CacheEntryListenerException {\n \n-                System.out.println(\">> Client 1 events \" + evts);\n-\n                 for (CacheEntryEvent<? extends Integer, ? extends MarshallerCheckingEntry> evt : evts)\n                     latch.countDown();\n             }\n         });\n \n         final IgniteCache<Integer, MarshallerCheckingEntry> cache1 = node2.cache(CACHE_NAME);\n \n+        int count = 0;\n         for (Cache.Entry<Integer, MarshallerCheckingEntry> entry : cache1.query(qry)) {\n-            latch.countDown();\n-            System.out.println(\">> Initial entry \" + entry);\n+            count++;\n         }\n \n-        for (int i = 10; i < 20; i++)\n+        assertEquals(\"Unexpected number of entries scanned\",CACHE_SIZE / 2, count);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e86820935d9761f685b875988c36d8d0e7df66a5"}, "originalPosition": 59}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3220, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}