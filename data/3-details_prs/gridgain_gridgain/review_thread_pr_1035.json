{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5ODc1NDQ3", "number": 1035, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzoyNTo0MVrODv_fBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzoyNTo0MVrODv_fBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNjQ5Nzk5OnYy", "diffSide": "RIGHT", "path": "modules/core/src/test/java/org/apache/ignite/platform/PlatformIsPartitionReservedTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMzoyNTo0MVrOGCvIfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoyNTowM1rOGC5Zag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUyMjU1OA==", "bodyText": "This could actually happen if cache was just created and it has no partition for a ready topology version. I've got such exception when dealt with Partition Awareness. Need to handle properly without assertion. Also, I'm not sure, whether null is returned or exception is thrown in this case.", "url": "https://github.com/gridgain/gridgain/pull/1035#discussion_r405522558", "createdAt": "2020-04-08T13:25:41Z", "author": {"login": "isapego"}, "path": "modules/core/src/test/java/org/apache/ignite/platform/PlatformIsPartitionReservedTask.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.platform;\n+\n+import org.apache.ignite.Ignite;\n+import org.apache.ignite.cluster.ClusterNode;\n+import org.apache.ignite.compute.ComputeJob;\n+import org.apache.ignite.compute.ComputeJobAdapter;\n+import org.apache.ignite.compute.ComputeJobResult;\n+import org.apache.ignite.compute.ComputeTaskAdapter;\n+import org.apache.ignite.internal.GridKernalContext;\n+import org.apache.ignite.internal.IgniteEx;\n+import org.apache.ignite.internal.processors.cache.distributed.dht.topology.GridDhtLocalPartition;\n+import org.apache.ignite.internal.processors.cache.distributed.dht.topology.GridDhtPartitionTopology;\n+import org.apache.ignite.resources.IgniteInstanceResource;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Task to get Java thread names.\n+ */\n+public class PlatformIsPartitionReservedTask extends ComputeTaskAdapter<Object[], Boolean> {\n+    /** {@inheritDoc} */\n+    @NotNull @Override public Map<? extends ComputeJob, ClusterNode> map(List<ClusterNode> subgrid,\n+        @Nullable Object[] arg) {\n+        //noinspection OptionalGetWithoutIsPresent\n+        ClusterNode localNode = subgrid.stream().filter(ClusterNode::isLocal).findFirst().get();\n+\n+        return Collections.singletonMap(\n+                new PlatformIsPartitionReservedJob((String)arg[0], (Integer)arg[1]), localNode);\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Nullable @Override public Boolean reduce(List<ComputeJobResult> results) {\n+        return results.get(0).getData();\n+    }\n+\n+    /**\n+     * Job.\n+     */\n+    private static class PlatformIsPartitionReservedJob extends ComputeJobAdapter {\n+        /** */\n+        private final String cacheName;\n+\n+        /** */\n+        private final int part;\n+\n+        /** */\n+        @SuppressWarnings(\"unused\")\n+        @IgniteInstanceResource\n+        private Ignite ignite;\n+\n+        /**\n+         * Constructor.\n+         *\n+         * @param cacheName Cache name.\n+         * @param part Partition.\n+         */\n+        public PlatformIsPartitionReservedJob(String cacheName, Integer part) {\n+            this.cacheName = cacheName;\n+            this.part = part;\n+        }\n+\n+        /** {@inheritDoc} */\n+        @Nullable @Override public Boolean execute() {\n+            GridKernalContext ctx = ((IgniteEx) ignite).context();\n+\n+            GridDhtPartitionTopology top = ctx.cache().cache(cacheName).context().topology();\n+\n+            GridDhtLocalPartition locPart = top.localPartition(part, top.readyTopologyVersion(), false);\n+\n+            assert locPart != null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fc15b2a033fa2a074fc7cb639baae69a18c0732"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY5MDczMA==", "bodyText": "Note that this is test code. Are you worried about flaky tests?", "url": "https://github.com/gridgain/gridgain/pull/1035#discussion_r405690730", "createdAt": "2020-04-08T17:25:03Z", "author": {"login": "ptupitsyn"}, "path": "modules/core/src/test/java/org/apache/ignite/platform/PlatformIsPartitionReservedTask.java", "diffHunk": "@@ -0,0 +1,95 @@\n+/*\n+ * Copyright 2019 GridGain Systems, Inc. and Contributors.\n+ *\n+ * Licensed under the GridGain Community Edition License (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     https://www.gridgain.com/products/software/community-edition/gridgain-community-edition-license\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.apache.ignite.platform;\n+\n+import org.apache.ignite.Ignite;\n+import org.apache.ignite.cluster.ClusterNode;\n+import org.apache.ignite.compute.ComputeJob;\n+import org.apache.ignite.compute.ComputeJobAdapter;\n+import org.apache.ignite.compute.ComputeJobResult;\n+import org.apache.ignite.compute.ComputeTaskAdapter;\n+import org.apache.ignite.internal.GridKernalContext;\n+import org.apache.ignite.internal.IgniteEx;\n+import org.apache.ignite.internal.processors.cache.distributed.dht.topology.GridDhtLocalPartition;\n+import org.apache.ignite.internal.processors.cache.distributed.dht.topology.GridDhtPartitionTopology;\n+import org.apache.ignite.resources.IgniteInstanceResource;\n+import org.jetbrains.annotations.NotNull;\n+import org.jetbrains.annotations.Nullable;\n+\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+\n+/**\n+ * Task to get Java thread names.\n+ */\n+public class PlatformIsPartitionReservedTask extends ComputeTaskAdapter<Object[], Boolean> {\n+    /** {@inheritDoc} */\n+    @NotNull @Override public Map<? extends ComputeJob, ClusterNode> map(List<ClusterNode> subgrid,\n+        @Nullable Object[] arg) {\n+        //noinspection OptionalGetWithoutIsPresent\n+        ClusterNode localNode = subgrid.stream().filter(ClusterNode::isLocal).findFirst().get();\n+\n+        return Collections.singletonMap(\n+                new PlatformIsPartitionReservedJob((String)arg[0], (Integer)arg[1]), localNode);\n+    }\n+\n+    /** {@inheritDoc} */\n+    @Nullable @Override public Boolean reduce(List<ComputeJobResult> results) {\n+        return results.get(0).getData();\n+    }\n+\n+    /**\n+     * Job.\n+     */\n+    private static class PlatformIsPartitionReservedJob extends ComputeJobAdapter {\n+        /** */\n+        private final String cacheName;\n+\n+        /** */\n+        private final int part;\n+\n+        /** */\n+        @SuppressWarnings(\"unused\")\n+        @IgniteInstanceResource\n+        private Ignite ignite;\n+\n+        /**\n+         * Constructor.\n+         *\n+         * @param cacheName Cache name.\n+         * @param part Partition.\n+         */\n+        public PlatformIsPartitionReservedJob(String cacheName, Integer part) {\n+            this.cacheName = cacheName;\n+            this.part = part;\n+        }\n+\n+        /** {@inheritDoc} */\n+        @Nullable @Override public Boolean execute() {\n+            GridKernalContext ctx = ((IgniteEx) ignite).context();\n+\n+            GridDhtPartitionTopology top = ctx.cache().cache(cacheName).context().topology();\n+\n+            GridDhtLocalPartition locPart = top.localPartition(part, top.readyTopologyVersion(), false);\n+\n+            assert locPart != null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTUyMjU1OA=="}, "originalCommit": {"oid": "3fc15b2a033fa2a074fc7cb639baae69a18c0732"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3087, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}