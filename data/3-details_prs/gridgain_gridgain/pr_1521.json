{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMzQxODE4", "number": 1521, "title": "GG-31129 Cache metrics without description", "bodyText": "", "createdAt": "2020-10-28T07:27:39Z", "url": "https://github.com/gridgain/gridgain/pull/1521", "merged": true, "mergeCommit": {"oid": "57c53ceb94c8a399c48bdde87489a118909d54ed"}, "closed": true, "closedAt": "2020-12-16T02:36:59Z", "author": {"login": "vmalin"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTMsIyAH2gAyNTExMzQxODE4OmI1Yzg4YmQ4NjczOTc3NjI3NjRkZGI5NjY4ZmE0Y2I2ZDIwNDI2Nzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABda2W-VAH2gAyNTExMzQxODE4OjFkNzk1MTY5ZWU0MzM2NDBlYzQ3NGQ1Y2NlNTc5ZDk5MzNmMGYxZTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b5c88bd867397762764ddb9668fa4cb6d2042677", "author": {"user": {"login": "a-polyakov", "name": null}}, "url": "https://github.com/gridgain/gridgain/commit/b5c88bd867397762764ddb9668fa4cb6d2042677", "committedDate": "2020-10-16T20:48:52Z", "message": "GG-31129 Cache metrics without description"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NDAwMzY5", "url": "https://github.com/gridgain/gridgain/pull/1521#pullrequestreview-518400369", "createdAt": "2020-10-28T08:00:34Z", "commit": {"oid": "b5c88bd867397762764ddb9668fa4cb6d2042677"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowMDozNFrOHpd3PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwODowOTowNFrOHpeHtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0Mjk0MA==", "bodyText": "Estimated total number of keys to rabalance.", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513242940", "createdAt": "2020-10-28T08:00:34Z", "author": {"login": "vmalin"}, "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c88bd867397762764ddb9668fa4cb6d2042677"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0MzU5Mw==", "bodyText": "The number of partitions to be cleared before actual rebalance start_s_.", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513243593", "createdAt": "2020-10-28T08:01:52Z", "author": {"login": "vmalin"}, "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c88bd867397762764ddb9668fa4cb6d2042677"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NDgwNg==", "bodyText": "The percentage of invocations on keys which[comma not needed] exist in the cache.", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513244806", "createdAt": "2020-10-28T08:04:25Z", "author": {"login": "vmalin"}, "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c88bd867397762764ddb9668fa4cb6d2042677"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NTA4Mw==", "bodyText": "The total number of invocations on keys[comma not needed] which exist in the cache.", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513245083", "createdAt": "2020-10-28T08:04:53Z", "author": {"login": "vmalin"}, "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")\n+    @Override public float getEntryProcessorHitPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which exist in cache.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c88bd867397762764ddb9668fa4cb6d2042677"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NTg3Ng==", "bodyText": "The total number of invocations on keys[comma not needed] which don't exist in the cache.", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513245876", "createdAt": "2020-10-28T08:06:30Z", "author": {"login": "vmalin"}, "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")\n+    @Override public float getEntryProcessorHitPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which exist in cache.\")\n+    @Override public long getEntryProcessorHits();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations.\")\n+    @Override public long getEntryProcessorInvocations();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the maximum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMaxInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the minimum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMinInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which don't exist in cache.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c88bd867397762764ddb9668fa4cb6d2042677"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NjE4NQ==", "bodyText": "The percentage of invocations on keys[comma not needed] which don't exist in the cache.", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513246185", "createdAt": "2020-10-28T08:07:05Z", "author": {"login": "vmalin"}, "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")\n+    @Override public float getEntryProcessorHitPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which exist in cache.\")\n+    @Override public long getEntryProcessorHits();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations.\")\n+    @Override public long getEntryProcessorInvocations();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the maximum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMaxInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the minimum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMinInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which don't exist in cache.\")\n+    @Override public long getEntryProcessorMisses();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which don't exist in cache.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c88bd867397762764ddb9668fa4cb6d2042677"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NjU0Nw==", "bodyText": "The total number of cache invocations which caused an update.", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513246547", "createdAt": "2020-10-28T08:07:48Z", "author": {"login": "vmalin"}, "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")\n+    @Override public float getEntryProcessorHitPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which exist in cache.\")\n+    @Override public long getEntryProcessorHits();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations.\")\n+    @Override public long getEntryProcessorInvocations();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the maximum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMaxInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the minimum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMinInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which don't exist in cache.\")\n+    @Override public long getEntryProcessorMisses();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which don't exist in cache.\")\n+    @Override public float getEntryProcessorMissPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations, caused update.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c88bd867397762764ddb9668fa4cb6d2042677"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0Njc3Mw==", "bodyText": "The total number of cache invocations which caused no updates.", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513246773", "createdAt": "2020-10-28T08:08:17Z", "author": {"login": "vmalin"}, "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")\n+    @Override public float getEntryProcessorHitPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which exist in cache.\")\n+    @Override public long getEntryProcessorHits();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations.\")\n+    @Override public long getEntryProcessorInvocations();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the maximum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMaxInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the minimum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMinInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which don't exist in cache.\")\n+    @Override public long getEntryProcessorMisses();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which don't exist in cache.\")\n+    @Override public float getEntryProcessorMissPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations, caused update.\")\n+    @Override public long getEntryProcessorPuts();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations, caused no updates.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c88bd867397762764ddb9668fa4cb6d2042677"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI0NzE1OQ==", "bodyText": "The total number of cache invocations which caused a removal.", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r513247159", "createdAt": "2020-10-28T08:09:04Z", "author": {"login": "vmalin"}, "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number estimated to rebalance keys.\")\n+    @Override public long getEstimatedRebalancingKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The number of partitions need to be cleared before actual rebalance start.\")\n+    @Override public long getRebalanceClearingPartitionsLeft();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The mean time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorAverageInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which exist in cache.\")\n+    @Override public float getEntryProcessorHitPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which exist in cache.\")\n+    @Override public long getEntryProcessorHits();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations.\")\n+    @Override public long getEntryProcessorInvocations();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the maximum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMaxInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"So far, the minimum time to execute cache invokes (time in \u00b5s).\")\n+    @Override public float getEntryProcessorMinInvocationTime();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of invocations on keys, which don't exist in cache.\")\n+    @Override public long getEntryProcessorMisses();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The percentage of invocations on keys, which don't exist in cache.\")\n+    @Override public float getEntryProcessorMissPercentage();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations, caused update.\")\n+    @Override public long getEntryProcessorPuts();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations, caused no updates.\")\n+    @Override public long getEntryProcessorReadOnlyInvocations();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"The total number of cache invocations, caused removal.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5c88bd867397762764ddb9668fa4cb6d2042677"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8c040d7b2a75723a26f719f0eaf0f300bc5542a", "author": {"user": {"login": "a-polyakov", "name": null}}, "url": "https://github.com/gridgain/gridgain/commit/c8c040d7b2a75723a26f719f0eaf0f300bc5542a", "committedDate": "2020-10-28T21:32:35Z", "message": "GG-31129 Cache metrics without description. Corrections after the code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MTc5NjY1", "url": "https://github.com/gridgain/gridgain/pull/1521#pullrequestreview-526179665", "createdAt": "2020-11-09T11:55:16Z", "commit": {"oid": "c8c040d7b2a75723a26f719f0eaf0f300bc5542a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMTo1NToxN1rOHvrOQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMTo1NToxN1rOHvrOQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTc1MzI4Mw==", "bodyText": "rabalance -> rebalance", "url": "https://github.com/gridgain/gridgain/pull/1521#discussion_r519753283", "createdAt": "2020-11-09T11:55:17Z", "author": {"login": "alievmirza"}, "path": "modules/core/src/main/java/org/apache/ignite/mxbean/CacheMetricsMXBean.java", "diffHunk": "@@ -351,4 +351,60 @@\n     @MXBeanDescription(\"Number of keys processed during index rebuilding. To get remaining number of keys for \" +\n         \"rebuilding, subtract current value from cache size.\")\n     @Override public long getIndexRebuildKeysProcessed();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Number of already rebalanced keys.\")\n+    @Override public long getRebalancedKeys();\n+\n+    /** {@inheritDoc} */\n+    @MXBeanDescription(\"Estimated total number of keys to rabalance.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c8c040d7b2a75723a26f719f0eaf0f300bc5542a"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d795169ee433640ec474d5cce579d9933f0f1e7", "author": {"user": {"login": "a-polyakov", "name": null}}, "url": "https://github.com/gridgain/gridgain/commit/1d795169ee433640ec474d5cce579d9933f0f1e7", "committedDate": "2020-11-09T15:19:14Z", "message": "GG-31129 Cache metrics without description. Corrections after the code review. Part 2"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4903, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}