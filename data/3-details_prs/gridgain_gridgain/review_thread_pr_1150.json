{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3OTQzNjA0", "number": 1150, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTo1NDoyNVrOD8cdpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTo1NToxNVrOD8cexQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzA3NDk1OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/client/ClientCache.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTo1NDoyNVrOGVYwEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTo1NDoyNVrOGVYwEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA3ODgwMw==", "bodyText": "I believe that this method should be consistent with a regular cache API and be named as \"withExpirypolicy\". But since we are making a port from Ignite, let's keep the single code base for now.", "url": "https://github.com/gridgain/gridgain/pull/1150#discussion_r425078803", "createdAt": "2020-05-14T11:54:25Z", "author": {"login": "ashapkin"}, "path": "modules/core/src/main/java/org/apache/ignite/client/ClientCache.java", "diffHunk": "@@ -335,12 +337,19 @@\n      */\n     public <K1, V1> ClientCache<K1, V1> withKeepBinary();\n \n+    /**\n+     * Returns cache with the specified expired policy set. This policy will be used for each operation invoked on\n+     * the returned cache.\n+     *\n+     * @return Cache instance with the specified expiry policy set.\n+     */\n+    public <K1, V1> ClientCache<K1, V1> withExpirePolicy(ExpiryPolicy expirePlc);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca0cc450e42e6c55d44bc921643434cc5a30a9a1"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NzA3NzgxOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTo1NToxNVrOGVYx2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxMTo1NToxNVrOGVYx2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTA3OTI1OQ==", "bodyText": "\"Expiry\", but see comment above", "url": "https://github.com/gridgain/gridgain/pull/1150#discussion_r425079259", "createdAt": "2020-05-14T11:55:15Z", "author": {"login": "ashapkin"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/client/thin/ClientUtils.java", "diffHunk": "@@ -338,15 +343,32 @@ void cacheConfiguration(ClientCacheConfiguration cfg, BinaryOutputStream out, Pr\n                                 w.writeByte((byte)i.getIndexType().ordinal());\n                                 w.writeInt(i.getInlineSize());\n                                 ClientUtils.collection(i.getFields().entrySet(), out, (unused5, f) -> {\n-                                        w.writeString(f.getKey());\n-                                        w.writeBoolean(f.getValue());\n-                                    }\n+                                            w.writeString(f.getKey());\n+                                            w.writeBoolean(f.getValue());\n+                                        }\n                                 );\n                             });\n-                    }\n+                        }\n                 )\n             );\n \n+            if (ver.compareTo(V1_6_0) >= 0) {\n+                itemWriter.accept(CfgItem.EXPIRE_POLICY, w -> {\n+                    ExpiryPolicy expiryPlc = cfg.getExpiryPolicy();\n+                    if (expiryPlc == null)\n+                        w.writeBoolean(false);\n+                    else {\n+                        w.writeBoolean(true);\n+                        w.writeLong(convertDuration(expiryPlc.getExpiryForCreation()));\n+                        w.writeLong(convertDuration(expiryPlc.getExpiryForUpdate()));\n+                        w.writeLong(convertDuration(expiryPlc.getExpiryForAccess()));\n+                    }\n+                });\n+            } else if (cfg.getExpiryPolicy() != null) {\n+                throw new ClientProtocolError(String.format(\"Expire policies have not supported by the server \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca0cc450e42e6c55d44bc921643434cc5a30a9a1"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3068, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}