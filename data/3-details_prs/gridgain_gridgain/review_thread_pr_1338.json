{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyMTk3NDU1", "number": 1338, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzoxNTo0OFrOEU_oxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOToxNjoyOFrOEVvXOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDQ5NjA1OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/checkpoint/CheckpointHistory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzoxNTo0OFrOG7f4ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwOTowNjo1MVrOG8A89A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA0MTU3MQ==", "bodyText": "to avoid mistakes in further refactoring, I suggest splitting this method into two with the following signature:\n\nvoid addCpToEarliestCpMap(CheckpointEntry entry, Map<Integer, CacheState> cacheGrpStates)\nvoid addCpToEarliestCpMap(CheckpointEntry entry, Map<Integer, CheckpointEntry.GroupState> cacheGrpStates)\n\nAnd extract following code to extra method:\nif (!earliestCp.containsKey(grpPartKey))\n         earliestCp.put(grpPartKey, entry);\n\nbecause if tomorrow somebody changes the condition there are no guarantees that they do it in both places.", "url": "https://github.com/gridgain/gridgain/pull/1338#discussion_r465041571", "createdAt": "2020-08-04T13:15:48Z", "author": {"login": "akalash"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/checkpoint/CheckpointHistory.java", "diffHunk": "@@ -240,21 +242,38 @@ public CheckpointEntry lastCheckpointMarkingAsInapplicable(Integer grpId) {\n      * Add last checkpoint to map of the earliest checkpoints.\n      *\n      * @param entry Checkpoint entry.\n+     * @param cacheGrpStates\n      */\n-    private void addCpToEarliestCpMap(CheckpointEntry entry) {\n+    private void addCpToEarliestCpMap(CheckpointEntry entry, Map<Integer, CacheState> cacheGrpStates) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5a94d32892c101a5b64a979d1e218e39e7a2ba3"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4MzM0OA==", "bodyText": "Done", "url": "https://github.com/gridgain/gridgain/pull/1338#discussion_r465583348", "createdAt": "2020-08-05T09:06:51Z", "author": {"login": "ibessonov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/checkpoint/CheckpointHistory.java", "diffHunk": "@@ -240,21 +242,38 @@ public CheckpointEntry lastCheckpointMarkingAsInapplicable(Integer grpId) {\n      * Add last checkpoint to map of the earliest checkpoints.\n      *\n      * @param entry Checkpoint entry.\n+     * @param cacheGrpStates\n      */\n-    private void addCpToEarliestCpMap(CheckpointEntry entry) {\n+    private void addCpToEarliestCpMap(CheckpointEntry entry, Map<Integer, CacheState> cacheGrpStates) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA0MTU3MQ=="}, "originalCommit": {"oid": "b5a94d32892c101a5b64a979d1e218e39e7a2ba3"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDUwNTQ1OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/checkpoint/CheckpointHistory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzoxODoxM1rOG7f-rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwOTowODoyNlrOG8BAQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA0MzExOQ==", "bodyText": "I believe it makes sense to add some comment why using cacheGrpStates from entry is a bad idea(to prevent further mistakes)", "url": "https://github.com/gridgain/gridgain/pull/1338#discussion_r465043119", "createdAt": "2020-08-04T13:18:13Z", "author": {"login": "akalash"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/checkpoint/CheckpointHistory.java", "diffHunk": "@@ -174,9 +175,10 @@ public WALPointer firstCheckpointPointer() {\n      * is not finished yet.\n      *\n      * @param entry Entry to add.\n+     * @param cacheGrpStates", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5a94d32892c101a5b64a979d1e218e39e7a2ba3"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU4NDE5Mg==", "bodyText": "I doubt that someone will reuse this method, and if they do, they can find current fix I guess.", "url": "https://github.com/gridgain/gridgain/pull/1338#discussion_r465584192", "createdAt": "2020-08-05T09:08:26Z", "author": {"login": "ibessonov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/checkpoint/CheckpointHistory.java", "diffHunk": "@@ -174,9 +175,10 @@ public WALPointer firstCheckpointPointer() {\n      * is not finished yet.\n      *\n      * @param entry Entry to add.\n+     * @param cacheGrpStates", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA0MzExOQ=="}, "originalCommit": {"oid": "b5a94d32892c101a5b64a979d1e218e39e7a2ba3"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjMwMjMzOnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/checkpoint/CheckpointEntry.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOToxNDoyNlrOG8qWyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTo0NTo1OVrOG8sb8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI2MTcwNg==", "bodyText": "As I understand you can skip the assignment of initEx here, because if you just throw an exception from here, initEx will be assignmented in the catch block.", "url": "https://github.com/gridgain/gridgain/pull/1338#discussion_r466261706", "createdAt": "2020-08-06T09:14:26Z", "author": {"login": "akalash"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/checkpoint/CheckpointEntry.java", "diffHunk": "@@ -356,9 +356,12 @@ private void initIfNeeded(\n \n                         grpStates = remap(stateRec);\n                     }\n-                    else\n+                    else {\n                         initEx = new IgniteCheckedException(\n                             \"Failed to find checkpoint record at the given WAL pointer: \" + ptr);\n+\n+                        throw initEx;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ea7f13e610f1f7bf56f2b08cafdfcc5c57ada9"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI5NTc5NA==", "bodyText": "Done.", "url": "https://github.com/gridgain/gridgain/pull/1338#discussion_r466295794", "createdAt": "2020-08-06T09:45:59Z", "author": {"login": "ibessonov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/checkpoint/CheckpointEntry.java", "diffHunk": "@@ -356,9 +356,12 @@ private void initIfNeeded(\n \n                         grpStates = remap(stateRec);\n                     }\n-                    else\n+                    else {\n                         initEx = new IgniteCheckedException(\n                             \"Failed to find checkpoint record at the given WAL pointer: \" + ptr);\n+\n+                        throw initEx;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI2MTcwNg=="}, "originalCommit": {"oid": "80ea7f13e610f1f7bf56f2b08cafdfcc5c57ada9"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMjMxNTQ1OnYy", "diffSide": "RIGHT", "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/checkpoint/CheckpointHistory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOToxNjoyOFrOG8qfvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTo0NjoxMFrOG8scUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI2Mzk5OA==", "bodyText": "You can use variable 'states' here because entry.groupState(cctx) was called in this method a little earlier.", "url": "https://github.com/gridgain/gridgain/pull/1338#discussion_r466263998", "createdAt": "2020-08-06T09:16:28Z", "author": {"login": "akalash"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/checkpoint/CheckpointHistory.java", "diffHunk": "@@ -211,7 +213,7 @@ private void updateEarliestCpMap(CheckpointEntry entry) {\n                     iter.remove();\n             }\n \n-            addCpToEarliestCpMap(entry);\n+            addCpGroupStatesToEarliestCpMap(entry, entry.groupState(cctx));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80ea7f13e610f1f7bf56f2b08cafdfcc5c57ada9"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI5NTg5MQ==", "bodyText": "Done.", "url": "https://github.com/gridgain/gridgain/pull/1338#discussion_r466295891", "createdAt": "2020-08-06T09:46:10Z", "author": {"login": "ibessonov"}, "path": "modules/core/src/main/java/org/apache/ignite/internal/processors/cache/persistence/checkpoint/CheckpointHistory.java", "diffHunk": "@@ -211,7 +213,7 @@ private void updateEarliestCpMap(CheckpointEntry entry) {\n                     iter.remove();\n             }\n \n-            addCpToEarliestCpMap(entry);\n+            addCpGroupStatesToEarliestCpMap(entry, entry.groupState(cctx));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI2Mzk5OA=="}, "originalCommit": {"oid": "80ea7f13e610f1f7bf56f2b08cafdfcc5c57ada9"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3303, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}