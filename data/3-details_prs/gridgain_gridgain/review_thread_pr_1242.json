{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1MzQ0OTQ2", "number": 1242, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDoyNToyNFrOEGsSFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDoyOToyM1rOEGsXAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDUyNDM5OnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/ConcurrentStripedPool.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDoyNToyNFrOGlpPng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDozODoxOVrOGlppnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEyNjIzOA==", "bodyText": "Should \"it.hasNext()\" be changed to \"hasNext()\" here?", "url": "https://github.com/gridgain/gridgain/pull/1242#discussion_r442126238", "createdAt": "2020-06-18T10:25:24Z", "author": {"login": "AMashenkov"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/ConcurrentStripedPool.java", "diffHunk": "@@ -123,37 +123,29 @@ public void clear() {\n     /** {@inheritDoc} */\n     @Override public @NotNull Iterator<E> iterator() {\n         return new Iterator<E>() {\n-            int idx = 0;\n-            Iterator<E> it = stripePools[idx].iterator();\n+            private int idx;\n+\n+            private Iterator<E> it = stripePools[idx].iterator();\n \n             @Override public boolean hasNext() {\n-                if (it.hasNext())\n-                    return true;\n+                while (true) {\n+                    if (it.hasNext())\n+                        return true;\n \n-                idx++;\n+                    if (++idx >= stripes)\n+                        break;\n \n-                if (idx < stripes) {\n                     it = stripePools[idx].iterator();\n-\n-                    return it.hasNext();\n                 }\n-                else\n-                    return false;\n+\n+                return false;\n             }\n \n             @Override public E next() {\n                 if (it.hasNext())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a1f34af6f5dac2f38d1a3ce41a73986fdf6a87d"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEzMjg5Mw==", "bodyText": "it MUST, thx", "url": "https://github.com/gridgain/gridgain/pull/1242#discussion_r442132893", "createdAt": "2020-06-18T10:38:19Z", "author": {"login": "korlov42"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/ConcurrentStripedPool.java", "diffHunk": "@@ -123,37 +123,29 @@ public void clear() {\n     /** {@inheritDoc} */\n     @Override public @NotNull Iterator<E> iterator() {\n         return new Iterator<E>() {\n-            int idx = 0;\n-            Iterator<E> it = stripePools[idx].iterator();\n+            private int idx;\n+\n+            private Iterator<E> it = stripePools[idx].iterator();\n \n             @Override public boolean hasNext() {\n-                if (it.hasNext())\n-                    return true;\n+                while (true) {\n+                    if (it.hasNext())\n+                        return true;\n \n-                idx++;\n+                    if (++idx >= stripes)\n+                        break;\n \n-                if (idx < stripes) {\n                     it = stripePools[idx].iterator();\n-\n-                    return it.hasNext();\n                 }\n-                else\n-                    return false;\n+\n+                return false;\n             }\n \n             @Override public E next() {\n                 if (it.hasNext())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEyNjIzOA=="}, "originalCommit": {"oid": "6a1f34af6f5dac2f38d1a3ce41a73986fdf6a87d"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDUzNjk5OnYy", "diffSide": "RIGHT", "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/ConnectionManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDoyOToyM1rOGlpXtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDo0NTozOFrOGlp4UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEyODMwOQ==", "bodyText": "Let's convert stmtTimeout to nanos as it is \"final\".", "url": "https://github.com/gridgain/gridgain/pull/1242#discussion_r442128309", "createdAt": "2020-06-18T10:29:23Z", "author": {"login": "AMashenkov"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/ConnectionManager.java", "diffHunk": "@@ -224,10 +224,8 @@ public void stop() {\n      * Called periodically to clean up the statement cache.\n      */\n     private void cleanupStatements() {\n-        long now = U.currentTimeMillis();\n-\n         connPool.forEach(c -> {\n-            if (now - c.statementCache().lastUsage() > stmtTimeout)\n+            if (c.statementCache().inactiveFor(stmtTimeout))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a1f34af6f5dac2f38d1a3ce41a73986fdf6a87d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEzNjY1Nw==", "bodyText": "fixed", "url": "https://github.com/gridgain/gridgain/pull/1242#discussion_r442136657", "createdAt": "2020-06-18T10:45:38Z", "author": {"login": "korlov42"}, "path": "modules/indexing/src/main/java/org/apache/ignite/internal/processors/query/h2/ConnectionManager.java", "diffHunk": "@@ -224,10 +224,8 @@ public void stop() {\n      * Called periodically to clean up the statement cache.\n      */\n     private void cleanupStatements() {\n-        long now = U.currentTimeMillis();\n-\n         connPool.forEach(c -> {\n-            if (now - c.statementCache().lastUsage() > stmtTimeout)\n+            if (c.statementCache().inactiveFor(stmtTimeout))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEyODMwOQ=="}, "originalCommit": {"oid": "6a1f34af6f5dac2f38d1a3ce41a73986fdf6a87d"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3331, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}