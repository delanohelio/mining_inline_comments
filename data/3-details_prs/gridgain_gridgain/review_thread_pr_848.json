{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNTk2Njc0", "number": 848, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOTowOTozMVrODYGsBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToyNDowMlrODYG8rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NjAxOTkwOnYy", "diffSide": "RIGHT", "path": "modules/web-console/e2e/testcafe/fixtures/admin/assume-identity.js", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOTowOTozMVrOFdxXGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMTowNDoxMFrOFd0uWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2MTc1Mw==", "bodyText": "await t.expect(excluded === actionSelector.withText(actionLbl).exists).notOk();", "url": "https://github.com/gridgain/gridgain/pull/848#discussion_r366761753", "createdAt": "2020-01-15T09:09:31Z", "author": {"login": "MaxLosevskoy"}, "path": "modules/web-console/e2e/testcafe/fixtures/admin/assume-identity.js", "diffHunk": "@@ -20,9 +20,39 @@ import * as admin from '../../page-models/pageAdminListOfRegisteredUsers';\n import {pageProfile as profile} from '../../page-models/pageProfile';\n import * as notifications from '../../components/permanentNotifications';\n import {userMenu} from '../../components/userMenu';\n+import { Selector } from 'testcafe';\n+import { successNotification } from '../../components/notifications';\n+import {confirmation} from '../../components/confirmation'\n \n const regularUser = createRegularUser();\n \n+const _checkListOfActions = async(t, actions, excluded) => {\n+    const actionSelector = Selector('.dropdown-menu a');\n+\n+    for (let i = 0; i < actions.length; i++) {\n+        const actionLbl = actions[i];\n+\n+        if (excluded)\n+            await t.expect(actionSelector.withText(actionLbl).exists).notOk();\n+        else\n+            await t.expect(actionSelector.withText(actionLbl).exists).ok();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ddaa49eed97cbf5a67eb583c6035021c9b1aed8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc3MTU1MA==", "bodyText": "TestCafe-specific promises don't work like that.\nThis should at least work:\nawait t.expect(actionSelector.withText(actionLbl).exists).eql(excluded);", "url": "https://github.com/gridgain/gridgain/pull/848#discussion_r366771550", "createdAt": "2020-01-15T09:30:14Z", "author": {"login": "Klaster1"}, "path": "modules/web-console/e2e/testcafe/fixtures/admin/assume-identity.js", "diffHunk": "@@ -20,9 +20,39 @@ import * as admin from '../../page-models/pageAdminListOfRegisteredUsers';\n import {pageProfile as profile} from '../../page-models/pageProfile';\n import * as notifications from '../../components/permanentNotifications';\n import {userMenu} from '../../components/userMenu';\n+import { Selector } from 'testcafe';\n+import { successNotification } from '../../components/notifications';\n+import {confirmation} from '../../components/confirmation'\n \n const regularUser = createRegularUser();\n \n+const _checkListOfActions = async(t, actions, excluded) => {\n+    const actionSelector = Selector('.dropdown-menu a');\n+\n+    for (let i = 0; i < actions.length; i++) {\n+        const actionLbl = actions[i];\n+\n+        if (excluded)\n+            await t.expect(actionSelector.withText(actionLbl).exists).notOk();\n+        else\n+            await t.expect(actionSelector.withText(actionLbl).exists).ok();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2MTc1Mw=="}, "originalCommit": {"oid": "1ddaa49eed97cbf5a67eb583c6035021c9b1aed8"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxNjg1Ng==", "bodyText": "Changed check of action list.", "url": "https://github.com/gridgain/gridgain/pull/848#discussion_r366816856", "createdAt": "2020-01-15T11:04:10Z", "author": {"login": "vsisko"}, "path": "modules/web-console/e2e/testcafe/fixtures/admin/assume-identity.js", "diffHunk": "@@ -20,9 +20,39 @@ import * as admin from '../../page-models/pageAdminListOfRegisteredUsers';\n import {pageProfile as profile} from '../../page-models/pageProfile';\n import * as notifications from '../../components/permanentNotifications';\n import {userMenu} from '../../components/userMenu';\n+import { Selector } from 'testcafe';\n+import { successNotification } from '../../components/notifications';\n+import {confirmation} from '../../components/confirmation'\n \n const regularUser = createRegularUser();\n \n+const _checkListOfActions = async(t, actions, excluded) => {\n+    const actionSelector = Selector('.dropdown-menu a');\n+\n+    for (let i = 0; i < actions.length; i++) {\n+        const actionLbl = actions[i];\n+\n+        if (excluded)\n+            await t.expect(actionSelector.withText(actionLbl).exists).notOk();\n+        else\n+            await t.expect(actionSelector.withText(actionLbl).exists).ok();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2MTc1Mw=="}, "originalCommit": {"oid": "1ddaa49eed97cbf5a67eb583c6035021c9b1aed8"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NjA1ODA2OnYy", "diffSide": "RIGHT", "path": "modules/web-console/e2e/testcafe/fixtures/admin/assume-identity.js", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToyMjoyOVrOFdxuyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMTowNDo0MVrOFd0vJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2NzgxOA==", "bodyText": "There's no validation that admin permissions were granted/revoked - alert does not guarantee that", "url": "https://github.com/gridgain/gridgain/pull/848#discussion_r366767818", "createdAt": "2020-01-15T09:22:29Z", "author": {"login": "MaxLosevskoy"}, "path": "modules/web-console/e2e/testcafe/fixtures/admin/assume-identity.js", "diffHunk": "@@ -61,3 +91,82 @@ test('Become user', async(t) => {\n         // See https://ggsystems.atlassian.net/browse/GG-24068\n         .expect(userMenu.menuItem.withText('Admin panel').count).eql(1);\n });\n+\n+test(\"Action availability\", async(t) => {\n+    const _changeUserSelection = async(userName) => {\n+        await t.click(admin.userNameCell.withText(userName))\n+            .hover(admin.usersTable.actionsButton);\n+    };\n+\n+    await t.navigateTo(resolveUrl('/settings/admin'))\n+        .hover(admin.usersTable.actionsButton);\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await admin.usersTable.performAction('Add user');\n+\n+    const createUserDialog = Selector('.modal-dialog');\n+\n+    await t.expect(createUserDialog.find('.modal-header').withText('Create User').exists).ok()\n+        .click(createUserDialog.find('button').withText('Cancel'))\n+        .hover(admin.usersTable.actionsButton);\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('John Doe');\n+\n+    await _checkActionSet(t, true, false);\n+\n+    await _changeUserSelection('John Doe');\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await _checkActionSet(t, false, false);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await admin.usersTable.performAction('Revoke admin');\n+\n+    await t.expect(successNotification.withText('Admin rights was successfully revoked for user: \"User Name\"').exists).ok();\n+\n+    await admin.usersTable.performAction('Grant admin');\n+\n+    await t.expect(successNotification.withText('Admin rights was successfully granted for user: \"User Name\"').exists).ok();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ddaa49eed97cbf5a67eb583c6035021c9b1aed8"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxNzA2MQ==", "bodyText": "Added check of admin status change.", "url": "https://github.com/gridgain/gridgain/pull/848#discussion_r366817061", "createdAt": "2020-01-15T11:04:41Z", "author": {"login": "vsisko"}, "path": "modules/web-console/e2e/testcafe/fixtures/admin/assume-identity.js", "diffHunk": "@@ -61,3 +91,82 @@ test('Become user', async(t) => {\n         // See https://ggsystems.atlassian.net/browse/GG-24068\n         .expect(userMenu.menuItem.withText('Admin panel').count).eql(1);\n });\n+\n+test(\"Action availability\", async(t) => {\n+    const _changeUserSelection = async(userName) => {\n+        await t.click(admin.userNameCell.withText(userName))\n+            .hover(admin.usersTable.actionsButton);\n+    };\n+\n+    await t.navigateTo(resolveUrl('/settings/admin'))\n+        .hover(admin.usersTable.actionsButton);\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await admin.usersTable.performAction('Add user');\n+\n+    const createUserDialog = Selector('.modal-dialog');\n+\n+    await t.expect(createUserDialog.find('.modal-header').withText('Create User').exists).ok()\n+        .click(createUserDialog.find('button').withText('Cancel'))\n+        .hover(admin.usersTable.actionsButton);\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('John Doe');\n+\n+    await _checkActionSet(t, true, false);\n+\n+    await _changeUserSelection('John Doe');\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await _checkActionSet(t, false, false);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await admin.usersTable.performAction('Revoke admin');\n+\n+    await t.expect(successNotification.withText('Admin rights was successfully revoked for user: \"User Name\"').exists).ok();\n+\n+    await admin.usersTable.performAction('Grant admin');\n+\n+    await t.expect(successNotification.withText('Admin rights was successfully granted for user: \"User Name\"').exists).ok();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2NzgxOA=="}, "originalCommit": {"oid": "1ddaa49eed97cbf5a67eb583c6035021c9b1aed8"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NjA2MjUyOnYy", "diffSide": "RIGHT", "path": "modules/web-console/e2e/testcafe/fixtures/admin/assume-identity.js", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwOToyNDowMlrOFdxxig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQxMToxMjoxN1rOFd07Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2ODUyMg==", "bodyText": "We assert that modal is displayed but we don't assert the content of the modal", "url": "https://github.com/gridgain/gridgain/pull/848#discussion_r366768522", "createdAt": "2020-01-15T09:24:02Z", "author": {"login": "MaxLosevskoy"}, "path": "modules/web-console/e2e/testcafe/fixtures/admin/assume-identity.js", "diffHunk": "@@ -61,3 +91,82 @@ test('Become user', async(t) => {\n         // See https://ggsystems.atlassian.net/browse/GG-24068\n         .expect(userMenu.menuItem.withText('Admin panel').count).eql(1);\n });\n+\n+test(\"Action availability\", async(t) => {\n+    const _changeUserSelection = async(userName) => {\n+        await t.click(admin.userNameCell.withText(userName))\n+            .hover(admin.usersTable.actionsButton);\n+    };\n+\n+    await t.navigateTo(resolveUrl('/settings/admin'))\n+        .hover(admin.usersTable.actionsButton);\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await admin.usersTable.performAction('Add user');\n+\n+    const createUserDialog = Selector('.modal-dialog');\n+\n+    await t.expect(createUserDialog.find('.modal-header').withText('Create User').exists).ok()\n+        .click(createUserDialog.find('button').withText('Cancel'))\n+        .hover(admin.usersTable.actionsButton);\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('John Doe');\n+\n+    await _checkActionSet(t, true, false);\n+\n+    await _changeUserSelection('John Doe');\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await _checkActionSet(t, false, false);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await admin.usersTable.performAction('Revoke admin');\n+\n+    await t.expect(successNotification.withText('Admin rights was successfully revoked for user: \"User Name\"').exists).ok();\n+\n+    await admin.usersTable.performAction('Grant admin');\n+\n+    await t.expect(successNotification.withText('Admin rights was successfully granted for user: \"User Name\"').exists).ok();\n+});\n+\n+test(\"Remove user\", async(t) => {\n+    await t.navigateTo(resolveUrl('/settings/admin'))\n+        .click(admin.userNameCell.withText('User Name'));\n+\n+    await admin.usersTable.performAction('Remove user');\n+\n+    await t.expect(confirmation.body.exists).ok();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ddaa49eed97cbf5a67eb583c6035021c9b1aed8"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc3MzA3OQ==", "bodyText": "Agree with @MaxLosevskoy, I'd at least asset the confirmation text.", "url": "https://github.com/gridgain/gridgain/pull/848#discussion_r366773079", "createdAt": "2020-01-15T09:33:40Z", "author": {"login": "Klaster1"}, "path": "modules/web-console/e2e/testcafe/fixtures/admin/assume-identity.js", "diffHunk": "@@ -61,3 +91,82 @@ test('Become user', async(t) => {\n         // See https://ggsystems.atlassian.net/browse/GG-24068\n         .expect(userMenu.menuItem.withText('Admin panel').count).eql(1);\n });\n+\n+test(\"Action availability\", async(t) => {\n+    const _changeUserSelection = async(userName) => {\n+        await t.click(admin.userNameCell.withText(userName))\n+            .hover(admin.usersTable.actionsButton);\n+    };\n+\n+    await t.navigateTo(resolveUrl('/settings/admin'))\n+        .hover(admin.usersTable.actionsButton);\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await admin.usersTable.performAction('Add user');\n+\n+    const createUserDialog = Selector('.modal-dialog');\n+\n+    await t.expect(createUserDialog.find('.modal-header').withText('Create User').exists).ok()\n+        .click(createUserDialog.find('button').withText('Cancel'))\n+        .hover(admin.usersTable.actionsButton);\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('John Doe');\n+\n+    await _checkActionSet(t, true, false);\n+\n+    await _changeUserSelection('John Doe');\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await _checkActionSet(t, false, false);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await admin.usersTable.performAction('Revoke admin');\n+\n+    await t.expect(successNotification.withText('Admin rights was successfully revoked for user: \"User Name\"').exists).ok();\n+\n+    await admin.usersTable.performAction('Grant admin');\n+\n+    await t.expect(successNotification.withText('Admin rights was successfully granted for user: \"User Name\"').exists).ok();\n+});\n+\n+test(\"Remove user\", async(t) => {\n+    await t.navigateTo(resolveUrl('/settings/admin'))\n+        .click(admin.userNameCell.withText('User Name'));\n+\n+    await admin.usersTable.performAction('Remove user');\n+\n+    await t.expect(confirmation.body.exists).ok();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2ODUyMg=="}, "originalCommit": {"oid": "1ddaa49eed97cbf5a67eb583c6035021c9b1aed8"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgxODMxOQ==", "bodyText": "Added check of confirm dialog message.", "url": "https://github.com/gridgain/gridgain/pull/848#discussion_r366818319", "createdAt": "2020-01-15T11:07:53Z", "author": {"login": "vsisko"}, "path": "modules/web-console/e2e/testcafe/fixtures/admin/assume-identity.js", "diffHunk": "@@ -61,3 +91,82 @@ test('Become user', async(t) => {\n         // See https://ggsystems.atlassian.net/browse/GG-24068\n         .expect(userMenu.menuItem.withText('Admin panel').count).eql(1);\n });\n+\n+test(\"Action availability\", async(t) => {\n+    const _changeUserSelection = async(userName) => {\n+        await t.click(admin.userNameCell.withText(userName))\n+            .hover(admin.usersTable.actionsButton);\n+    };\n+\n+    await t.navigateTo(resolveUrl('/settings/admin'))\n+        .hover(admin.usersTable.actionsButton);\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await admin.usersTable.performAction('Add user');\n+\n+    const createUserDialog = Selector('.modal-dialog');\n+\n+    await t.expect(createUserDialog.find('.modal-header').withText('Create User').exists).ok()\n+        .click(createUserDialog.find('button').withText('Cancel'))\n+        .hover(admin.usersTable.actionsButton);\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('John Doe');\n+\n+    await _checkActionSet(t, true, false);\n+\n+    await _changeUserSelection('John Doe');\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await _checkActionSet(t, false, false);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await admin.usersTable.performAction('Revoke admin');\n+\n+    await t.expect(successNotification.withText('Admin rights was successfully revoked for user: \"User Name\"').exists).ok();\n+\n+    await admin.usersTable.performAction('Grant admin');\n+\n+    await t.expect(successNotification.withText('Admin rights was successfully granted for user: \"User Name\"').exists).ok();\n+});\n+\n+test(\"Remove user\", async(t) => {\n+    await t.navigateTo(resolveUrl('/settings/admin'))\n+        .click(admin.userNameCell.withText('User Name'));\n+\n+    await admin.usersTable.performAction('Remove user');\n+\n+    await t.expect(confirmation.body.exists).ok();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2ODUyMg=="}, "originalCommit": {"oid": "1ddaa49eed97cbf5a67eb583c6035021c9b1aed8"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjgyMDE1NA==", "bodyText": "Looks good to me.", "url": "https://github.com/gridgain/gridgain/pull/848#discussion_r366820154", "createdAt": "2020-01-15T11:12:17Z", "author": {"login": "Klaster1"}, "path": "modules/web-console/e2e/testcafe/fixtures/admin/assume-identity.js", "diffHunk": "@@ -61,3 +91,82 @@ test('Become user', async(t) => {\n         // See https://ggsystems.atlassian.net/browse/GG-24068\n         .expect(userMenu.menuItem.withText('Admin panel').count).eql(1);\n });\n+\n+test(\"Action availability\", async(t) => {\n+    const _changeUserSelection = async(userName) => {\n+        await t.click(admin.userNameCell.withText(userName))\n+            .hover(admin.usersTable.actionsButton);\n+    };\n+\n+    await t.navigateTo(resolveUrl('/settings/admin'))\n+        .hover(admin.usersTable.actionsButton);\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await admin.usersTable.performAction('Add user');\n+\n+    const createUserDialog = Selector('.modal-dialog');\n+\n+    await t.expect(createUserDialog.find('.modal-header').withText('Create User').exists).ok()\n+        .click(createUserDialog.find('button').withText('Cancel'))\n+        .hover(admin.usersTable.actionsButton);\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('John Doe');\n+\n+    await _checkActionSet(t, true, false);\n+\n+    await _changeUserSelection('John Doe');\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await _checkActionSet(t, false, false);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await _checkActionSet(t, true, true);\n+\n+    await _changeUserSelection('User Name');\n+\n+    await admin.usersTable.performAction('Revoke admin');\n+\n+    await t.expect(successNotification.withText('Admin rights was successfully revoked for user: \"User Name\"').exists).ok();\n+\n+    await admin.usersTable.performAction('Grant admin');\n+\n+    await t.expect(successNotification.withText('Admin rights was successfully granted for user: \"User Name\"').exists).ok();\n+});\n+\n+test(\"Remove user\", async(t) => {\n+    await t.navigateTo(resolveUrl('/settings/admin'))\n+        .click(admin.userNameCell.withText('User Name'));\n+\n+    await admin.usersTable.performAction('Remove user');\n+\n+    await t.expect(confirmation.body.exists).ok();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Njc2ODUyMg=="}, "originalCommit": {"oid": "1ddaa49eed97cbf5a67eb583c6035021c9b1aed8"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3156, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}