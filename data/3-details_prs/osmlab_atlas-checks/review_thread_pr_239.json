{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMTEwMzc5", "number": 239, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzozNTozMFrODXOQjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODozMjoyMlrODXPG8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Njc3NDUzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzozNTozMFrOFcbIXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODoyODo0OFrOFccY5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM0ODk1Ng==", "bodyText": "To making parsing this file easier, do you mind removing the whitespace between project: and the id", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365348956", "createdAt": "2020-01-10T17:35:30Z", "author": {"login": "danielduhh"}, "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "diffHunk": "@@ -66,6 +70,47 @@ public static MapRouletteClient instance(final MapRouletteConfiguration configur\n         return null;\n     }\n \n+    /**\n+     * This method writes challenge ids to a file.\n+     *\n+     * @param challengeId\n+     *            challenge id of the newly created MapRoulette challenge.\n+     * @param projectId\n+     *            project id of the MapRoulette challenge.\n+     */\n+    public static void writeChallengeIdsToFile(final long challengeId, final long projectId)\n+    {\n+        outputPath.ifPresent(fileName ->\n+        {\n+            try\n+            {\n+                final BufferedWriter fileWriter = new BufferedWriter(\n+                        new FileWriter(fileName, true));\n+                fileWriter\n+                        .append(String.format(\"project: %d;challenge: %d\", projectId, challengeId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM2OTU3NQ==", "bodyText": "Done", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365369575", "createdAt": "2020-01-10T18:28:48Z", "author": {"login": "smaheshwaram"}, "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "diffHunk": "@@ -66,6 +70,47 @@ public static MapRouletteClient instance(final MapRouletteConfiguration configur\n         return null;\n     }\n \n+    /**\n+     * This method writes challenge ids to a file.\n+     *\n+     * @param challengeId\n+     *            challenge id of the newly created MapRoulette challenge.\n+     * @param projectId\n+     *            project id of the MapRoulette challenge.\n+     */\n+    public static void writeChallengeIdsToFile(final long challengeId, final long projectId)\n+    {\n+        outputPath.ifPresent(fileName ->\n+        {\n+            try\n+            {\n+                final BufferedWriter fileWriter = new BufferedWriter(\n+                        new FileWriter(fileName, true));\n+                fileWriter\n+                        .append(String.format(\"project: %d;challenge: %d\", projectId, challengeId));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM0ODk1Ng=="}, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjgxMjE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzo1MTozOVrOFcbggQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzo1MTozOVrOFcbggQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1NTEzNw==", "bodyText": "Should we enforce the filename for consistency sake? That way, the user will only need to specify the output path, and we'll be in charge of setting the filename: challenges.txt.", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365355137", "createdAt": "2020-01-10T17:51:39Z", "author": {"login": "danielduhh"}, "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "diffHunk": "@@ -66,6 +70,47 @@ public static MapRouletteClient instance(final MapRouletteConfiguration configur\n         return null;\n     }\n \n+    /**\n+     * This method writes challenge ids to a file.\n+     *\n+     * @param challengeId\n+     *            challenge id of the newly created MapRoulette challenge.\n+     * @param projectId\n+     *            project id of the MapRoulette challenge.\n+     */\n+    public static void writeChallengeIdsToFile(final long challengeId, final long projectId)\n+    {\n+        outputPath.ifPresent(fileName ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjgxMzMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzo1MjowOFrOFcbhUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODoyOTozNFrOFccaOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1NTM0NA==", "bodyText": "Do you mind adding a note on the format of the file?", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365355344", "createdAt": "2020-01-10T17:52:08Z", "author": {"login": "danielduhh"}, "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "diffHunk": "@@ -66,6 +70,47 @@ public static MapRouletteClient instance(final MapRouletteConfiguration configur\n         return null;\n     }\n \n+    /**\n+     * This method writes challenge ids to a file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM2OTkxMw==", "bodyText": "Done", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365369913", "createdAt": "2020-01-10T18:29:34Z", "author": {"login": "smaheshwaram"}, "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "diffHunk": "@@ -66,6 +70,47 @@ public static MapRouletteClient instance(final MapRouletteConfiguration configur\n         return null;\n     }\n \n+    /**\n+     * This method writes challenge ids to a file.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1NTM0NA=="}, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjgyMTQ2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClientTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzo1NToyOFrOFcbmOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzo1NToyOFrOFcbmOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1NjYwMw==", "bodyText": "You could also create a temp file directory with File.tempdirectory", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365356603", "createdAt": "2020-01-10T17:55:28Z", "author": {"login": "danielduhh"}, "path": "src/test/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClientTest.java", "diffHunk": "@@ -107,4 +109,16 @@ public void testProjectConfiguration()\n         Assert.assertFalse(uploadedProject.isEnabled());\n         Assert.assertEquals(1, this.mockConnection.tasksForChallenge(TEST_CHALLENGE).size());\n     }\n+\n+    @Test\n+    public void testWriteChallengeIdsToFile()\n+    {\n+        final String fileName = String.format(\"%s/src/test/resources/challenges/challengeIds\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjgyMzM4OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClientTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNzo1NjoxNVrOFcbnaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODoyOTo1MlrOFccavQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1NjkwNQ==", "bodyText": "I think we should also verify that file file is created, and the contents in the file are what we expect", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365356905", "createdAt": "2020-01-10T17:56:15Z", "author": {"login": "danielduhh"}, "path": "src/test/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClientTest.java", "diffHunk": "@@ -107,4 +109,16 @@ public void testProjectConfiguration()\n         Assert.assertFalse(uploadedProject.isEnabled());\n         Assert.assertEquals(1, this.mockConnection.tasksForChallenge(TEST_CHALLENGE).size());\n     }\n+\n+    @Test\n+    public void testWriteChallengeIdsToFile()\n+    {\n+        final String fileName = String.format(\"%s/src/test/resources/challenges/challengeIds\",\n+                System.getProperty(\"user.dir\"));\n+        final Optional<String> fileNameOptional = Optional.of(fileName);\n+        assertTrue(fileNameOptional.isPresent());\n+        MapRouletteClient.setOutputPath(fileNameOptional);\n+        MapRouletteClient.writeChallengeIdsToFile(1, 24);\n+        MapRouletteClient.writeChallengeIdsToFile(1, 25);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM3MDA0NQ==", "bodyText": "For sure.", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365370045", "createdAt": "2020-01-10T18:29:52Z", "author": {"login": "smaheshwaram"}, "path": "src/test/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClientTest.java", "diffHunk": "@@ -107,4 +109,16 @@ public void testProjectConfiguration()\n         Assert.assertFalse(uploadedProject.isEnabled());\n         Assert.assertEquals(1, this.mockConnection.tasksForChallenge(TEST_CHALLENGE).size());\n     }\n+\n+    @Test\n+    public void testWriteChallengeIdsToFile()\n+    {\n+        final String fileName = String.format(\"%s/src/test/resources/challenges/challengeIds\",\n+                System.getProperty(\"user.dir\"));\n+        final Optional<String> fileNameOptional = Optional.of(fileName);\n+        assertTrue(fileNameOptional.isPresent());\n+        MapRouletteClient.setOutputPath(fileNameOptional);\n+        MapRouletteClient.writeChallengeIdsToFile(1, 24);\n+        MapRouletteClient.writeChallengeIdsToFile(1, 25);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM1NjkwNQ=="}, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Njg5MDkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODoyMzozN1rOFccQtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNToyNTo1NFrOFc6jjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM2NzQ3OA==", "bodyText": "nit: we could print the stack trace or some detail about the exception for clarity", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365367478", "createdAt": "2020-01-10T18:23:37Z", "author": {"login": "seancoulter"}, "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "diffHunk": "@@ -66,6 +70,47 @@ public static MapRouletteClient instance(final MapRouletteConfiguration configur\n         return null;\n     }\n \n+    /**\n+     * This method writes challenge ids to a file.\n+     *\n+     * @param challengeId\n+     *            challenge id of the newly created MapRoulette challenge.\n+     * @param projectId\n+     *            project id of the MapRoulette challenge.\n+     */\n+    public static void writeChallengeIdsToFile(final long challengeId, final long projectId)\n+    {\n+        outputPath.ifPresent(fileName ->\n+        {\n+            try\n+            {\n+                final BufferedWriter fileWriter = new BufferedWriter(\n+                        new FileWriter(fileName, true));\n+                fileWriter\n+                        .append(String.format(\"project: %d;challenge: %d\", projectId, challengeId));\n+                fileWriter.newLine();\n+                fileWriter.close();\n+            }\n+            catch (final IOException ioException)\n+            {\n+                logger.warn(\n+                        \"IOException occurred while writing project id {}, challenge id {} to the file {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM3MDczMg==", "bodyText": "Sure.", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365370732", "createdAt": "2020-01-10T18:31:32Z", "author": {"login": "smaheshwaram"}, "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "diffHunk": "@@ -66,6 +70,47 @@ public static MapRouletteClient instance(final MapRouletteConfiguration configur\n         return null;\n     }\n \n+    /**\n+     * This method writes challenge ids to a file.\n+     *\n+     * @param challengeId\n+     *            challenge id of the newly created MapRoulette challenge.\n+     * @param projectId\n+     *            project id of the MapRoulette challenge.\n+     */\n+    public static void writeChallengeIdsToFile(final long challengeId, final long projectId)\n+    {\n+        outputPath.ifPresent(fileName ->\n+        {\n+            try\n+            {\n+                final BufferedWriter fileWriter = new BufferedWriter(\n+                        new FileWriter(fileName, true));\n+                fileWriter\n+                        .append(String.format(\"project: %d;challenge: %d\", projectId, challengeId));\n+                fileWriter.newLine();\n+                fileWriter.close();\n+            }\n+            catch (final IOException ioException)\n+            {\n+                logger.warn(\n+                        \"IOException occurred while writing project id {}, challenge id {} to the file {}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM2NzQ3OA=="}, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTg2MzgyMg==", "bodyText": "Sonar doesn't like printstacktrace. However, i was logging the error in catch block.", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365863822", "createdAt": "2020-01-13T15:25:54Z", "author": {"login": "smaheshwaram"}, "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "diffHunk": "@@ -66,6 +70,47 @@ public static MapRouletteClient instance(final MapRouletteConfiguration configur\n         return null;\n     }\n \n+    /**\n+     * This method writes challenge ids to a file.\n+     *\n+     * @param challengeId\n+     *            challenge id of the newly created MapRoulette challenge.\n+     * @param projectId\n+     *            project id of the MapRoulette challenge.\n+     */\n+    public static void writeChallengeIdsToFile(final long challengeId, final long projectId)\n+    {\n+        outputPath.ifPresent(fileName ->\n+        {\n+            try\n+            {\n+                final BufferedWriter fileWriter = new BufferedWriter(\n+                        new FileWriter(fileName, true));\n+                fileWriter\n+                        .append(String.format(\"project: %d;challenge: %d\", projectId, challengeId));\n+                fileWriter.newLine();\n+                fileWriter.close();\n+            }\n+            catch (final IOException ioException)\n+            {\n+                logger.warn(\n+                        \"IOException occurred while writing project id {}, challenge id {} to the file {}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM2NzQ3OA=="}, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjkwMzEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODoyODozMVrOFccYZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODozMDoyMFrOFccbnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM2OTQ0NQ==", "bodyText": "\"challenge + project ids\"", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365369445", "createdAt": "2020-01-10T18:28:31Z", "author": {"login": "seancoulter"}, "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteCommand.java", "diffHunk": "@@ -32,6 +33,10 @@\n     private static final Switch<String> PROJECT_DISPLAY_NAME = new Switch<>(\"projectDisplayName\",\n             \"Display name of the project under which all of the challenges will be submitted\",\n             StringConverter.IDENTITY);\n+    protected static final Switch<String> OUTPUT_PATH = new Switch<>(\"outputPath\",\n+            \"Full path to file where challenge ids are stored after creation in MapRoulette.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM3MDI3MQ==", "bodyText": "Changed it. Have to push the latest code.", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365370271", "createdAt": "2020-01-10T18:30:20Z", "author": {"login": "smaheshwaram"}, "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteCommand.java", "diffHunk": "@@ -32,6 +33,10 @@\n     private static final Switch<String> PROJECT_DISPLAY_NAME = new Switch<>(\"projectDisplayName\",\n             \"Display name of the project under which all of the challenges will be submitted\",\n             StringConverter.IDENTITY);\n+    protected static final Switch<String> OUTPUT_PATH = new Switch<>(\"outputPath\",\n+            \"Full path to file where challenge ids are stored after creation in MapRoulette.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM2OTQ0NQ=="}, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjkxMzc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxODozMjoyM1rOFcce4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNzo0MzoxMVrOFc_B_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM3MTEwNA==", "bodyText": "Should this be static? What if we wanted different MapRouletteClients to post output in different places?", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365371104", "createdAt": "2020-01-10T18:32:23Z", "author": {"login": "seancoulter"}, "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "diffHunk": "@@ -38,6 +41,7 @@\n     // Map containing all the challenges per project\n     private final Map<String, Project> projects;\n     private final Map<Long, Map<String, Challenge>> challenges;\n+    private static Optional<String> outputPath = Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkzNzE1MA==", "bodyText": "Initially made this as a static variable so that I test the method I created easily. I modified it now and its not static anymore.", "url": "https://github.com/osmlab/atlas-checks/pull/239#discussion_r365937150", "createdAt": "2020-01-13T17:43:11Z", "author": {"login": "smaheshwaram"}, "path": "src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteClient.java", "diffHunk": "@@ -38,6 +41,7 @@\n     // Map containing all the challenges per project\n     private final Map<String, Project> projects;\n     private final Map<Long, Map<String, Challenge>> challenges;\n+    private static Optional<String> outputPath = Optional.empty();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM3MTEwNA=="}, "originalCommit": {"oid": "8758fd28041d7187d245f7699fafe3c5a93aa972"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3239, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}