{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2Njg2Nzgy", "number": 378, "title": "[MapRouletteUploadCommand] Add documentation", "bodyText": "Description:\nThis adds some documentation on how to run the command the MapRouletteUploadCommand.\nPotential Impact:\nN/A\nUnit Test Approach:\nN/A\nTest Results:\nN/A", "createdAt": "2020-10-02T05:22:51Z", "url": "https://github.com/osmlab/atlas-checks/pull/378", "merged": true, "mergeCommit": {"oid": "0e6a595a60ea1f8c81d3eacd3659b1a2fede258e"}, "closed": true, "closedAt": "2020-10-07T20:29:07Z", "author": {"login": "danielduhh"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOeiWngH2gAyNDk2Njg2NzgyOmU2ZDkzZGY4NWYyM2U4NjE4YTA3NmM4MGRiOGM1OWRmYzdjNjQxMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQP797AFqTUwNDA4MTk3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e6d93df85f23e8618a076c80db8c59dfc7c64119", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/e6d93df85f23e8618a076c80db8c59dfc7c64119", "committedDate": "2020-10-02T04:46:51Z", "message": "mr command docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c237d3c6635eb65642a4d53ec789f31e1fa9f9f", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/7c237d3c6635eb65642a4d53ec789f31e1fa9f9f", "committedDate": "2020-10-02T05:10:06Z", "message": "clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a71f67eb36de87c98224882ea9a578068eccddbf", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/a71f67eb36de87c98224882ea9a578068eccddbf", "committedDate": "2020-10-02T05:20:00Z", "message": "clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60803484421cc4dad6a53aa4e943936af86bcebb", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/60803484421cc4dad6a53aa4e943936af86bcebb", "committedDate": "2020-10-02T05:20:34Z", "message": "revert build change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a", "committedDate": "2020-10-02T05:22:23Z", "message": "clean up checkincomment switch description"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAyOTM5NzYy", "url": "https://github.com/osmlab/atlas-checks/pull/378#pullrequestreview-502939762", "createdAt": "2020-10-06T13:18:20Z", "commit": {"oid": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxMzoxODoyMFrOHdF8Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDowOTo1N1rOHdIz0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDI2ODA1OQ==", "bodyText": "This parameter should be optional.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * **checkinCommentPrefix** - Prefix added to default check in comment of [prefix ISO - CheckName]\n          \n          \n            \n            * **checkinCommentPrefix** (optional) - Prefix added to default check in comment of [prefix ISO - CheckName]", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500268059", "createdAt": "2020-10-06T13:18:20Z", "author": {"login": "atiannicelli"}, "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck\n+2. CAN - SinkIslandCheck\n+2. USA - EdgeCrossingEdgeCheck\n+3. USA - SinkIslandCheck\n+\n+Each Challenge is added to the project provided in the MapRoulette connection url.\n+\n+## Parameters\n+\n+* **maproulette** - MapRoulette connection url\n+* **logfiles** - Path to `/flag` output geojson\n+* **config** - Path to Atlas Checks configuration\n+* **countries** (optional) - Comma delimited list of country permit list\n+* **checks** (optional) - Comma delimted list of checks permit list\n+* **outputPath** (optional) - Path to store text file of new challenge ids\n+* **checkinComment** (optional) - Value of Changeset check in comment\n+* **checkinCommentPrefix** - Prefix added to default check in comment of [prefix ISO - CheckName]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMwNjUyNQ==", "bodyText": "I don't think you want \"staging\" in there. I had to remove it to make it work for me.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            -maproulette=\"https://staging.maproulette.org:443:checks_example_project:api|key\" \\\n          \n          \n            \n            -maproulette=\"https://maproulette.org:443:checks_example_project:api|key\" \\", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500306525", "createdAt": "2020-10-06T14:01:10Z", "author": {"login": "atiannicelli"}, "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck\n+2. CAN - SinkIslandCheck\n+2. USA - EdgeCrossingEdgeCheck\n+3. USA - SinkIslandCheck\n+\n+Each Challenge is added to the project provided in the MapRoulette connection url.\n+\n+## Parameters\n+\n+* **maproulette** - MapRoulette connection url\n+* **logfiles** - Path to `/flag` output geojson\n+* **config** - Path to Atlas Checks configuration\n+* **countries** (optional) - Comma delimited list of country permit list\n+* **checks** (optional) - Comma delimted list of checks permit list\n+* **outputPath** (optional) - Path to store text file of new challenge ids\n+* **checkinComment** (optional) - Value of Changeset check in comment\n+* **checkinCommentPrefix** - Prefix added to default check in comment of [prefix ISO - CheckName]\n+\n+## Example\n+\n+The following command will upload EdgeCrossingEdge & SinkIsland checks to the `checks_example_project` Project on staging.maproulette.org. \n+Please remember to change the MapRoulette API key. You can find this in your MapRoulette user settings.\n+\n+```java\n+java -cp build/libs/atlas-checks-6.1.3-SNAPSHOT-shaded.jar org.openstreetmap.atlas.checks.maproulette.MapRouletteUploadCommand \\\n+-maproulette=\"https://staging.maproulette.org:443:checks_example_project:api|key\" \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTc5MQ==", "bodyText": "Not to be picky, but I think this creates \"Canada - EdgeCrossingEdgeCheck\"\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. CAN - EdgeCrossingEdgeCheck\n          \n          \n            \n            1. Canada - EdgeCrossingEdgeCheck", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500311791", "createdAt": "2020-10-06T14:06:38Z", "author": {"login": "atiannicelli"}, "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTkzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2. CAN - SinkIslandCheck\n          \n          \n            \n            2. Canada - SinkIslandCheck", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500311935", "createdAt": "2020-10-06T14:06:49Z", "author": {"login": "atiannicelli"}, "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck\n+2. CAN - SinkIslandCheck", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMjEzOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2. USA - EdgeCrossingEdgeCheck\n          \n          \n            \n            2. United States - EdgeCrossingEdgeCheck", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500312138", "createdAt": "2020-10-06T14:07:02Z", "author": {"login": "atiannicelli"}, "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck\n+2. CAN - SinkIslandCheck\n+2. USA - EdgeCrossingEdgeCheck", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMjMyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            3. USA - SinkIslandCheck\n          \n          \n            \n            3. United States - SinkIslandCheck", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500312321", "createdAt": "2020-10-06T14:07:13Z", "author": {"login": "atiannicelli"}, "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck\n+2. CAN - SinkIslandCheck\n+2. USA - EdgeCrossingEdgeCheck\n+3. USA - SinkIslandCheck", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxNTA4OQ==", "bodyText": "I had to copy https://repo1.maven.org/maven2/org/slf4j/slf4j-api/1.7.29/slf4j-api-1.7.29.jar to the same directory and add that to the class path. Is that worth putting in here or would java experts just know that?", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500315089", "createdAt": "2020-10-06T14:09:57Z", "author": {"login": "atiannicelli"}, "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. CAN - EdgeCrossingEdgeCheck\n+2. CAN - SinkIslandCheck\n+2. USA - EdgeCrossingEdgeCheck\n+3. USA - SinkIslandCheck\n+\n+Each Challenge is added to the project provided in the MapRoulette connection url.\n+\n+## Parameters\n+\n+* **maproulette** - MapRoulette connection url\n+* **logfiles** - Path to `/flag` output geojson\n+* **config** - Path to Atlas Checks configuration\n+* **countries** (optional) - Comma delimited list of country permit list\n+* **checks** (optional) - Comma delimted list of checks permit list\n+* **outputPath** (optional) - Path to store text file of new challenge ids\n+* **checkinComment** (optional) - Value of Changeset check in comment\n+* **checkinCommentPrefix** - Prefix added to default check in comment of [prefix ISO - CheckName]\n+\n+## Example\n+\n+The following command will upload EdgeCrossingEdge & SinkIsland checks to the `checks_example_project` Project on staging.maproulette.org. \n+Please remember to change the MapRoulette API key. You can find this in your MapRoulette user settings.\n+\n+```java\n+java -cp build/libs/atlas-checks-6.1.3-SNAPSHOT-shaded.jar org.openstreetmap.atlas.checks.maproulette.MapRouletteUploadCommand \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f7f72ee9e3054d9c4fd9f80c37e0dd2a065549a"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66493eeb69cab4b72a88ea8caea1b1212d455ddf", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/66493eeb69cab4b72a88ea8caea1b1212d455ddf", "committedDate": "2020-10-06T15:52:27Z", "message": "Update docs/maproulette_upload.md\n\nCo-authored-by: atiannicelli <atiannicelli@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2c54d986739447a1afe3554571aa05c9a68b87a", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/c2c54d986739447a1afe3554571aa05c9a68b87a", "committedDate": "2020-10-06T15:52:42Z", "message": "Update docs/maproulette_upload.md\n\nCo-authored-by: atiannicelli <atiannicelli@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8843f5740fc39d2581ab6ecb23889e12d587165c", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/8843f5740fc39d2581ab6ecb23889e12d587165c", "committedDate": "2020-10-06T15:52:50Z", "message": "Update docs/maproulette_upload.md\n\nCo-authored-by: atiannicelli <atiannicelli@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "675a5f33539942bd71afa2aef17d085b20dafbbe", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/675a5f33539942bd71afa2aef17d085b20dafbbe", "committedDate": "2020-10-06T15:54:16Z", "message": "Apply suggestions from code review\n\nCo-authored-by: atiannicelli <atiannicelli@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzMTIxNTkw", "url": "https://github.com/osmlab/atlas-checks/pull/378#pullrequestreview-503121590", "createdAt": "2020-10-06T15:57:38Z", "commit": {"oid": "675a5f33539942bd71afa2aef17d085b20dafbbe"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzNDM1MTIw", "url": "https://github.com/osmlab/atlas-checks/pull/378#pullrequestreview-503435120", "createdAt": "2020-10-06T23:49:22Z", "commit": {"oid": "675a5f33539942bd71afa2aef17d085b20dafbbe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzo0OToyMlrOHddvkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQyMzo0OToyMlrOHddvkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDY1ODA2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            The following command will upload EdgeCrossingEdge & SinkIsland checks to the `checks_example_project` Project on staging.maproulette.org. \n          \n          \n            \n            The following command will upload EdgeCrossingEdge & SinkIsland checks to the `checks_example_project` Project on maproulette.org.", "url": "https://github.com/osmlab/atlas-checks/pull/378#discussion_r500658066", "createdAt": "2020-10-06T23:49:22Z", "author": {"login": "Bentleysb"}, "path": "docs/maproulette_upload.md", "diffHunk": "@@ -0,0 +1,49 @@\n+# MapRoulette Upload Command\n+\n+The [MapRouletteUploadCommand](/src/main/java/org/openstreetmap/atlas/checks/maproulette/MapRouletteUploadCommand.java) deserilizes line-delimited Atlas Check flags, and uploads them to the provided MapRoulette server.\n+\n+The command creates a new Challenge for each Atlas Check and country in the input data. For example: the following Challenges are created if the input data contains flags for EdgeCrossingEdgeCheck and SinkIslandCheck in USA and CAN:\n+\n+1. Canada - EdgeCrossingEdgeCheck\n+2. Canada - SinkIslandCheck\n+2. United States - EdgeCrossingEdgeCheck\n+3. United States - SinkIslandCheck\n+\n+Each Challenge is added to the project provided in the MapRoulette connection url.\n+\n+## Parameters\n+\n+* **maproulette** - MapRoulette connection url\n+* **logfiles** - Path to `/flag` output geojson\n+* **config** - Path to Atlas Checks configuration\n+* **countries** (optional) - Comma delimited list of country permit list\n+* **checks** (optional) - Comma delimted list of checks permit list\n+* **outputPath** (optional) - Path to store text file of new challenge ids\n+* **checkinComment** (optional) - Value of Changeset check in comment\n+* **checkinCommentPrefix** (optional) - Prefix added to default check in comment of [prefix ISO - CheckName]\n+\n+## Example\n+\n+The following command will upload EdgeCrossingEdge & SinkIsland checks to the `checks_example_project` Project on staging.maproulette.org. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "675a5f33539942bd71afa2aef17d085b20dafbbe"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55dc8774f948bdeea42baa188845bf6a4bd5857c", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/55dc8774f948bdeea42baa188845bf6a4bd5857c", "committedDate": "2020-10-07T05:55:27Z", "message": "Update docs/maproulette_upload.md\n\nCo-authored-by: Bentley Breithaupt <bentleysb@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDgxOTc3", "url": "https://github.com/osmlab/atlas-checks/pull/378#pullrequestreview-504081977", "createdAt": "2020-10-07T16:54:06Z", "commit": {"oid": "55dc8774f948bdeea42baa188845bf6a4bd5857c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3195, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}