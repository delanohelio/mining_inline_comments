{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM1NTM3NzM4", "number": 317, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo1OTo0M1rOEG1kLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDoyNTozMlrOEIhEQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NjA0NTI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/MalformedRoundaboutCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo1OTo0M1rOGl4RJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNjo1OTo0M1rOGl4RJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3MjM4OQ==", "bodyText": "Ah! I missed to add the comment! Please add this keyword here: this.isEdgeWithSyntheticBoundaryNode", "url": "https://github.com/osmlab/atlas-checks/pull/317#discussion_r442372389", "createdAt": "2020-06-18T16:59:43Z", "author": {"login": "sayas01"}, "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/MalformedRoundaboutCheck.java", "diffHunk": "@@ -87,6 +91,14 @@ public boolean validCheckForObject(final AtlasObject object)\n     protected Optional<CheckFlag> flag(final AtlasObject object)\n     {\n         final Set<String> instructions = new HashSet<>();\n+\n+        // Skip if roundabout contains synthetic node. bug fix:\n+        // https://github.com/osmlab/atlas-checks/issues/316\n+        if (isEdgeWithSyntheticBoundaryNode(object))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7000d0e5af02b20f13c0bb477de967961902bb1a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1Njg2NzI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/MalformedRoundaboutCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToxNToyM1rOGmAePQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMToyNDoxN1rOGmAt_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwNjgxMw==", "bodyText": "This is not needed, unless sonar is throwing a fit. The object has already been verified to be an Edge in validCheckForObject.", "url": "https://github.com/osmlab/atlas-checks/pull/317#discussion_r442506813", "createdAt": "2020-06-18T21:15:23Z", "author": {"login": "Bentleysb"}, "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/MalformedRoundaboutCheck.java", "diffHunk": "@@ -163,6 +175,21 @@ private boolean intersectsWithEnclosedGeometry(final Polygon polygon, final Edge\n                         || polygon.fullyGeometricallyEncloses(polyline));\n     }\n \n+    /**\n+     * Checks if {@link AtlasObject} contains synthetic boundary Node\n+     * \n+     * @param object\n+     * @return true if roundabout contains synthetic boundary Node.\n+     */\n+    private boolean isEdgeWithSyntheticBoundaryNode(final AtlasObject object)\n+    {\n+        return object instanceof Edge", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0630fe5f086dad16cf6948aa18ee66ca67c7a77e"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUxMDg0Ng==", "bodyText": "object check removed", "url": "https://github.com/osmlab/atlas-checks/pull/317#discussion_r442510846", "createdAt": "2020-06-18T21:24:17Z", "author": {"login": "vladlemberg"}, "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/MalformedRoundaboutCheck.java", "diffHunk": "@@ -163,6 +175,21 @@ private boolean intersectsWithEnclosedGeometry(final Polygon polygon, final Edge\n                         || polygon.fullyGeometricallyEncloses(polyline));\n     }\n \n+    /**\n+     * Checks if {@link AtlasObject} contains synthetic boundary Node\n+     * \n+     * @param object\n+     * @return true if roundabout contains synthetic boundary Node.\n+     */\n+    private boolean isEdgeWithSyntheticBoundaryNode(final AtlasObject object)\n+    {\n+        return object instanceof Edge", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUwNjgxMw=="}, "originalCommit": {"oid": "0630fe5f086dad16cf6948aa18ee66ca67c7a77e"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzY0ODIzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/MalformedRoundaboutCheck.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDoyMjoyN1rOGohwpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDoyMjoyN1rOGohwpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE0OTM1MQ==", "bodyText": "nit: could markAsFlagged() the object and the other edges picked up here to avoid reprocessing them", "url": "https://github.com/osmlab/atlas-checks/pull/317#discussion_r445149351", "createdAt": "2020-06-24T20:22:27Z", "author": {"login": "seancoulter"}, "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/MalformedRoundaboutCheck.java", "diffHunk": "@@ -87,6 +91,14 @@ public boolean validCheckForObject(final AtlasObject object)\n     protected Optional<CheckFlag> flag(final AtlasObject object)\n     {\n         final Set<String> instructions = new HashSet<>();\n+\n+        // Skip if roundabout contains synthetic node. bug fix:\n+        // https://github.com/osmlab/atlas-checks/issues/316\n+        if (this.isEdgeWithSyntheticBoundaryNode(object))\n+        {\n+            return Optional.empty();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a8c2b8c6ed183af70400621871e834132d880d"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MzY1ODI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/MalformedRoundaboutCheck.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMDoyNTozM1rOGoh28Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMjowNzo0NlrOGokydQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE1MDk2MQ==", "bodyText": "Should we use the same constraints as validCheckForObject here? In that method we check !isExcludedHighway instead of HighwayTag.isCarNavigableHighway()", "url": "https://github.com/osmlab/atlas-checks/pull/317#discussion_r445150961", "createdAt": "2020-06-24T20:25:33Z", "author": {"login": "seancoulter"}, "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/MalformedRoundaboutCheck.java", "diffHunk": "@@ -176,6 +201,19 @@ private boolean isExcludedHighway(final AtlasObject object)\n                 HighwayTag.PEDESTRIAN, HighwayTag.FOOTWAY);\n     }\n \n+    /**\n+     * Function for {@link SimpleEdgeWalker} that gathers connected edges that are part of a\n+     * roundabout.\n+     *\n+     * @return {@link Function} for {@link SimpleEdgeWalker}\n+     */\n+    private Function<Edge, Stream<Edge>> isRoundaboutEdge()\n+    {\n+        return edge -> edge.connectedEdges().stream()\n+                .filter(connected -> JunctionTag.isRoundabout(connected)\n+                        && HighwayTag.isCarNavigableHighway(connected));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84a8c2b8c6ed183af70400621871e834132d880d"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE5ODk2NQ==", "bodyText": "@seancoulter @vladlemberg Resolved?", "url": "https://github.com/osmlab/atlas-checks/pull/317#discussion_r445198965", "createdAt": "2020-06-24T22:07:46Z", "author": {"login": "ameliaewatts"}, "path": "src/main/java/org/openstreetmap/atlas/checks/validation/linear/edges/MalformedRoundaboutCheck.java", "diffHunk": "@@ -176,6 +201,19 @@ private boolean isExcludedHighway(final AtlasObject object)\n                 HighwayTag.PEDESTRIAN, HighwayTag.FOOTWAY);\n     }\n \n+    /**\n+     * Function for {@link SimpleEdgeWalker} that gathers connected edges that are part of a\n+     * roundabout.\n+     *\n+     * @return {@link Function} for {@link SimpleEdgeWalker}\n+     */\n+    private Function<Edge, Stream<Edge>> isRoundaboutEdge()\n+    {\n+        return edge -> edge.connectedEdges().stream()\n+                .filter(connected -> JunctionTag.isRoundabout(connected)\n+                        && HighwayTag.isCarNavigableHighway(connected));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTE1MDk2MQ=="}, "originalCommit": {"oid": "84a8c2b8c6ed183af70400621871e834132d880d"}, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3334, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}