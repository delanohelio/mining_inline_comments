{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MjcxNDI2", "number": 276, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMDowNzoyN1rODukERw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzozNTo1NVrODvq0PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwMTUyMDA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/openstreetmap/atlas/checks/distributed/ShardedIntegrityChecksSparkJob.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMDowNzoyN1rOGAnFog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMDoxMToxMFrOGAnQhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5MzYwMg==", "bodyText": "What is callSite.short ?", "url": "https://github.com/osmlab/atlas-checks/pull/276#discussion_r403293602", "createdAt": "2020-04-03T20:07:27Z", "author": {"login": "danielduhh"}, "path": "src/main/java/org/openstreetmap/atlas/checks/distributed/ShardedIntegrityChecksSparkJob.java", "diffHunk": "@@ -219,46 +204,27 @@ public void start(final CommandMap commandMap)\n                             .collect(Collectors.toList());\n \n                     // Set spark UI job title\n-                    this.getContext().setJobGroup(\"0\",\n-                            String.format(\"Running checks on %s\",\n-                                    tasksForCountry.get(0).getCountry()));\n-                    // Run each task in spark, producing UniqueCheckFlagContainers\n-                    final JavaPairRDD<String, UniqueCheckFlagContainer> rdd = this.getContext()\n-                            .parallelize(tasksForCountry, tasksForCountry.size())\n+                    this.getContext().setLocalProperty(\"callSite.short\", String", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9ea1d0aa2841b0eec7a7231c2efd3a02fbef90b"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5NjM4OA==", "bodyText": "It is a special property that the Spark UI picks up for labeling.\nhttps://stackoverflow.com/questions/41903342/how-to-change-job-stage-description-in-web-ui", "url": "https://github.com/osmlab/atlas-checks/pull/276#discussion_r403296388", "createdAt": "2020-04-03T20:11:10Z", "author": {"login": "Bentleysb"}, "path": "src/main/java/org/openstreetmap/atlas/checks/distributed/ShardedIntegrityChecksSparkJob.java", "diffHunk": "@@ -219,46 +204,27 @@ public void start(final CommandMap commandMap)\n                             .collect(Collectors.toList());\n \n                     // Set spark UI job title\n-                    this.getContext().setJobGroup(\"0\",\n-                            String.format(\"Running checks on %s\",\n-                                    tasksForCountry.get(0).getCountry()));\n-                    // Run each task in spark, producing UniqueCheckFlagContainers\n-                    final JavaPairRDD<String, UniqueCheckFlagContainer> rdd = this.getContext()\n-                            .parallelize(tasksForCountry, tasksForCountry.size())\n+                    this.getContext().setLocalProperty(\"callSite.short\", String", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5MzYwMg=="}, "originalCommit": {"oid": "f9ea1d0aa2841b0eec7a7231c2efd3a02fbef90b"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzExMTY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/openstreetmap/atlas/checks/distributed/ShardedIntegrityChecksSparkJob.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzozNTo1NVrOGCOr-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODo0MjoxNlrOGCRLaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDk3MA==", "bodyText": "What are we combining here, if not by country?", "url": "https://github.com/osmlab/atlas-checks/pull/276#discussion_r404990970", "createdAt": "2020-04-07T17:35:55Z", "author": {"login": "seancoulter"}, "path": "src/main/java/org/openstreetmap/atlas/checks/distributed/ShardedIntegrityChecksSparkJob.java", "diffHunk": "@@ -219,46 +204,27 @@ public void start(final CommandMap commandMap)\n                             .collect(Collectors.toList());\n \n                     // Set spark UI job title\n-                    this.getContext().setJobGroup(\"0\",\n-                            String.format(\"Running checks on %s\",\n-                                    tasksForCountry.get(0).getCountry()));\n-                    // Run each task in spark, producing UniqueCheckFlagContainers\n-                    final JavaPairRDD<String, UniqueCheckFlagContainer> rdd = this.getContext()\n-                            .parallelize(tasksForCountry, tasksForCountry.size())\n+                    this.getContext().setLocalProperty(\"callSite.short\", String\n+                            .format(\"Running checks on %s\", tasksForCountry.get(0).getCountry()));\n+\n+                    this.getContext().parallelize(tasksForCountry, tasksForCountry.size())\n                             .mapToPair(produceFlags(input, output, this.configurationMap(),\n                                     fileHelper, shardingBroadcast, distanceToLoadShards,\n-                                    (Boolean) commandMap.get(MULTI_ATLAS)));\n-                    // Save the RDD\n-                    rdd.persist(storageLevel);\n-                    // Use a fast spark action to overcome spark lazy elocution. This is necessary\n-                    // to get the UI title to appear in the right spot.\n-                    rdd.count();\n-                    // Add the RDDs to the list\n-                    countryRdds.add(rdd);\n+                                    (Boolean) commandMap.get(MULTI_ATLAS)))\n+                            .reduceByKey(UniqueCheckFlagContainer::combine)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e33cb5e74744d07750ba7dda74b348eebc8b7ae2"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5ODUwOA==", "bodyText": "It is by country, but there is only ever one country. This is just because the country code is passed through the streaming interface by using a pair RDD. The country code needs to be passed to processFlags via the RDD due to sparks lazy execution.", "url": "https://github.com/osmlab/atlas-checks/pull/276#discussion_r404998508", "createdAt": "2020-04-07T17:48:02Z", "author": {"login": "Bentleysb"}, "path": "src/main/java/org/openstreetmap/atlas/checks/distributed/ShardedIntegrityChecksSparkJob.java", "diffHunk": "@@ -219,46 +204,27 @@ public void start(final CommandMap commandMap)\n                             .collect(Collectors.toList());\n \n                     // Set spark UI job title\n-                    this.getContext().setJobGroup(\"0\",\n-                            String.format(\"Running checks on %s\",\n-                                    tasksForCountry.get(0).getCountry()));\n-                    // Run each task in spark, producing UniqueCheckFlagContainers\n-                    final JavaPairRDD<String, UniqueCheckFlagContainer> rdd = this.getContext()\n-                            .parallelize(tasksForCountry, tasksForCountry.size())\n+                    this.getContext().setLocalProperty(\"callSite.short\", String\n+                            .format(\"Running checks on %s\", tasksForCountry.get(0).getCountry()));\n+\n+                    this.getContext().parallelize(tasksForCountry, tasksForCountry.size())\n                             .mapToPair(produceFlags(input, output, this.configurationMap(),\n                                     fileHelper, shardingBroadcast, distanceToLoadShards,\n-                                    (Boolean) commandMap.get(MULTI_ATLAS)));\n-                    // Save the RDD\n-                    rdd.persist(storageLevel);\n-                    // Use a fast spark action to overcome spark lazy elocution. This is necessary\n-                    // to get the UI title to appear in the right spot.\n-                    rdd.count();\n-                    // Add the RDDs to the list\n-                    countryRdds.add(rdd);\n+                                    (Boolean) commandMap.get(MULTI_ATLAS)))\n+                            .reduceByKey(UniqueCheckFlagContainer::combine)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDk3MA=="}, "originalCommit": {"oid": "e33cb5e74744d07750ba7dda74b348eebc8b7ae2"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAzMTc4NQ==", "bodyText": "Ah that makes sense. Thanks", "url": "https://github.com/osmlab/atlas-checks/pull/276#discussion_r405031785", "createdAt": "2020-04-07T18:42:16Z", "author": {"login": "seancoulter"}, "path": "src/main/java/org/openstreetmap/atlas/checks/distributed/ShardedIntegrityChecksSparkJob.java", "diffHunk": "@@ -219,46 +204,27 @@ public void start(final CommandMap commandMap)\n                             .collect(Collectors.toList());\n \n                     // Set spark UI job title\n-                    this.getContext().setJobGroup(\"0\",\n-                            String.format(\"Running checks on %s\",\n-                                    tasksForCountry.get(0).getCountry()));\n-                    // Run each task in spark, producing UniqueCheckFlagContainers\n-                    final JavaPairRDD<String, UniqueCheckFlagContainer> rdd = this.getContext()\n-                            .parallelize(tasksForCountry, tasksForCountry.size())\n+                    this.getContext().setLocalProperty(\"callSite.short\", String\n+                            .format(\"Running checks on %s\", tasksForCountry.get(0).getCountry()));\n+\n+                    this.getContext().parallelize(tasksForCountry, tasksForCountry.size())\n                             .mapToPair(produceFlags(input, output, this.configurationMap(),\n                                     fileHelper, shardingBroadcast, distanceToLoadShards,\n-                                    (Boolean) commandMap.get(MULTI_ATLAS)));\n-                    // Save the RDD\n-                    rdd.persist(storageLevel);\n-                    // Use a fast spark action to overcome spark lazy elocution. This is necessary\n-                    // to get the UI title to appear in the right spot.\n-                    rdd.count();\n-                    // Add the RDDs to the list\n-                    countryRdds.add(rdd);\n+                                    (Boolean) commandMap.get(MULTI_ATLAS)))\n+                            .reduceByKey(UniqueCheckFlagContainer::combine)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MDk3MA=="}, "originalCommit": {"oid": "e33cb5e74744d07750ba7dda74b348eebc8b7ae2"}, "originalPosition": 78}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3284, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}