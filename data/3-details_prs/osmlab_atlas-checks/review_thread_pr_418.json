{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NDc4ODgy", "number": 418, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOToyNjozN1rOE6utbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOToyNjozN1rOE6utbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDE4MTU5OnYy", "diffSide": "RIGHT", "path": "scripts/cloud-check-control/cloudAtlasCheckControl.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOToyNjozN1rOH1-i8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDo0ODoxMVrOH2BiiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2MTMzMQ==", "bodyText": "Could we make the jar location configurable?", "url": "https://github.com/osmlab/atlas-checks/pull/418#discussion_r526361331", "createdAt": "2020-11-18T19:26:37Z", "author": {"login": "seancoulter"}, "path": "scripts/cloud-check-control/cloudAtlasCheckControl.py", "diffHunk": "@@ -231,6 +244,55 @@ def sync(self):\n         if self.terminate:\n             self.terminate_instance()\n \n+    def challenge(self):\n+        logger.info(\"Creating map roulette challenge.\")\n+\n+        # sync the country folders to the local directory\n+        for c in list(self.countries.split(\",\")):\n+            logger.info(\n+                \"syncing {}/flag/{} to {}/flag/{}\".format(\n+                    self.s3OutFolder, c, self.atlasOutDir, c\n+                )\n+            )\n+            if self.ssh_cmd(\n+                \"aws s3 sync --only-show-errors s3://{0}/flag/{1} {2}/flag/{1}\".format(\n+                    self.s3OutFolder, c, self.atlasOutDir\n+                )\n+            ):\n+                finish(\"Failed to sync S3://{}/{}\".format(self.s3OutFolder, c), -1)\n+        if self.ssh_cmd(\n+            \"aws s3 cp s3://{} {}\".format(\n+                self.atlasConfig, os.path.join(self.homeDir, self.atlasConfig)\n+            )\n+        ):\n+            finish(\"Failed to copy config S3://{}\".format(self.atlasConfig), -1)\n+\n+        # push output to s3\n+        cmd = \"aws s3 sync --only-show-errors --exclude *.crc {} s3://{} \".format(\n+            self.atlasOutDir, self.s3OutFolder\n+        )\n+        if self.ssh_cmd(cmd):\n+            finish(\"Unable to sync with S3\", -1)\n+\n+        cmd = (\n+            \"java -cp atlas-checks/build/libs/atlas-checks-*-SNAPSHOT-shaded.jar\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd23d92cb47158998165ac9a12dc6c59cb04b670"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQxMDM3Nw==", "bodyText": "Sure.", "url": "https://github.com/osmlab/atlas-checks/pull/418#discussion_r526410377", "createdAt": "2020-11-18T20:48:11Z", "author": {"login": "atiannicelli"}, "path": "scripts/cloud-check-control/cloudAtlasCheckControl.py", "diffHunk": "@@ -231,6 +244,55 @@ def sync(self):\n         if self.terminate:\n             self.terminate_instance()\n \n+    def challenge(self):\n+        logger.info(\"Creating map roulette challenge.\")\n+\n+        # sync the country folders to the local directory\n+        for c in list(self.countries.split(\",\")):\n+            logger.info(\n+                \"syncing {}/flag/{} to {}/flag/{}\".format(\n+                    self.s3OutFolder, c, self.atlasOutDir, c\n+                )\n+            )\n+            if self.ssh_cmd(\n+                \"aws s3 sync --only-show-errors s3://{0}/flag/{1} {2}/flag/{1}\".format(\n+                    self.s3OutFolder, c, self.atlasOutDir\n+                )\n+            ):\n+                finish(\"Failed to sync S3://{}/{}\".format(self.s3OutFolder, c), -1)\n+        if self.ssh_cmd(\n+            \"aws s3 cp s3://{} {}\".format(\n+                self.atlasConfig, os.path.join(self.homeDir, self.atlasConfig)\n+            )\n+        ):\n+            finish(\"Failed to copy config S3://{}\".format(self.atlasConfig), -1)\n+\n+        # push output to s3\n+        cmd = \"aws s3 sync --only-show-errors --exclude *.crc {} s3://{} \".format(\n+            self.atlasOutDir, self.s3OutFolder\n+        )\n+        if self.ssh_cmd(cmd):\n+            finish(\"Unable to sync with S3\", -1)\n+\n+        cmd = (\n+            \"java -cp atlas-checks/build/libs/atlas-checks-*-SNAPSHOT-shaded.jar\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM2MTMzMQ=="}, "originalCommit": {"oid": "bd23d92cb47158998165ac9a12dc6c59cb04b670"}, "originalPosition": 70}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3211, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}