{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2ODU3Mjkz", "number": 296, "title": "Enhancement to InvalidTagsCheck To Use Resource File For Filters", "bodyText": "Description:\nThis PR adds the following updates to the existing InvalidTagsChecks:\n\nUpdated the check to also handle filters passed through resource file\nAddition of \"filters.resource.override\" and \"filters.resource.append\" config values.\n\n\n\nIf \"filters.resource.override\" is true and \"filters.resource.append\" is false, only the filters passed through the config (\"filters.classes.tags\") will be used to test the features to flag.\n\n\nIf \"filters.resource.override\" is false and  \"filters.resource.append\" is true, filters passed through the config will be added to default list of filters from the resource file.\n\n\nPotential Impact:\nNo update to existing check as the default filters are not changed. Just an enhancement to allow addition of filters through resource file.\nUnit Test Approach:\nUpdated and added new unit tests. Ran the check in different countries and analyzed the results.\nTest Results:\nAll unit tests passing. Analysis of the updates shows 0% FP.", "createdAt": "2020-05-12T17:09:54Z", "url": "https://github.com/osmlab/atlas-checks/pull/296", "merged": true, "mergeCommit": {"oid": "573f3af07c790f5124bf173473ab3f143d872179"}, "closed": true, "closedAt": "2020-05-13T23:45:31Z", "author": {"login": "sayas01"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceZroxAH2gAyNDE2ODU3MjkzOjM3YjZlY2Y5NTVhNTc1OTk3MjhjNTNjZDk4OWExNDMwNTUwNWIzMGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABchAP6lAFqTQxMTMzMTM3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "37b6ecf955a57599728c53cd989a14305505b30c", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/37b6ecf955a57599728c53cd989a14305505b30c", "committedDate": "2020-05-05T19:59:06Z", "message": "Refactor to use resource file for taggable filter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0fe9229119fdab07c2a3696050154277e2855ab", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/d0fe9229119fdab07c2a3696050154277e2855ab", "committedDate": "2020-05-05T20:00:12Z", "message": "Add resource files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d6ed9cbe3f16ba2d8a78d18b4fc1560a238aa44", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/3d6ed9cbe3f16ba2d8a78d18b4fc1560a238aa44", "committedDate": "2020-05-05T22:05:58Z", "message": "Revert config changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a2879894a56de23ab985532a6a3710b82055d81", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/5a2879894a56de23ab985532a6a3710b82055d81", "committedDate": "2020-05-05T22:08:25Z", "message": "Update unit test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f3b4d48c0c014f40204c47b7708fab9c3c2d008", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/8f3b4d48c0c014f40204c47b7708fab9c3c2d008", "committedDate": "2020-05-12T16:56:20Z", "message": "Update logic and add comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7e85d3a5edba705cb80644d112ababd0543c56a", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/d7e85d3a5edba705cb80644d112ababd0543c56a", "committedDate": "2020-05-12T16:57:37Z", "message": "spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25a61bd2fee73a9ad855d60471a8448b630eed5d", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/25a61bd2fee73a9ad855d60471a8448b630eed5d", "committedDate": "2020-05-12T17:22:30Z", "message": "Fix checktyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMzcyNDc2", "url": "https://github.com/osmlab/atlas-checks/pull/296#pullrequestreview-410372476", "createdAt": "2020-05-12T19:52:02Z", "commit": {"oid": "25a61bd2fee73a9ad855d60471a8448b630eed5d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxOTo1MjowM1rOGUWgbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMDoxNjo1OFrOGUXWVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzk5MzQ1NQ==", "bodyText": "This is not the only character that can be a delimiter, so it would make more sense to just call this COLON.", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r423993455", "createdAt": "2020-05-12T19:52:03Z", "author": {"login": "Bentleysb"}, "path": "src/main/java/org/openstreetmap/atlas/checks/constants/CommonConstants.java", "diffHunk": "@@ -25,6 +25,7 @@ private CommonConstants()\n     public static final String UNDERSCORE = \"_\";\n     public static final String EQUALS_TO = \"=\";\n     public static final String LINE_SEPARATOR = System.getProperty(\"line.separator\");\n+    public static final String DELIMITER = \":\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25a61bd2fee73a9ad855d60471a8448b630eed5d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwMDQyNg==", "bodyText": "If these filters are mutually exclusive then why not just have one switch?", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424000426", "createdAt": "2020-05-12T20:04:36Z", "author": {"login": "Bentleysb"}, "path": "docs/checks/invalidTagsCheck.md", "diffHunk": "@@ -1,17 +1,28 @@\n # Invalid Tags Check\n \n-This check flags features based on configurable filters.   \n+This check flags features for invalid tags based on a list of TaggableFilters. The list of TaggableFilters for this check is either a combination of filters passed through the \n+check configuration and default list of TaggableFilters or just the default filters. \n+The two configurable boolean values, \"override.default.filters\" and \"append.to.default.filters\", \n+determine the list of taggable filters that each of the atlas entities will be tested against. The rules are\n+1) If \"override.default.filters\" is true and \"append.to.default.filters\" is false,\n+only the filters that are passed through the configuration file will be used to test the atlas entities. \n+2) If \"append.to.default.filters\" is true and \"override.default.filters\" is false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25a61bd2fee73a9ad855d60471a8448b630eed5d"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDAwNzI1NA==", "bodyText": "This method was originally made to return the keys from a single filter so that an instruction could be made for each filter that is passed. Now this can return the combined keys of multiple filters, which could make the instructions more confusing.", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424007254", "createdAt": "2020-05-12T20:16:58Z", "author": {"login": "Bentleysb"}, "path": "src/main/java/org/openstreetmap/atlas/checks/validation/tag/InvalidTagsCheck.java", "diffHunk": "@@ -37,21 +52,87 @@\n             \"OSM feature {0,number,#} has invalid tags.\",\n             \"Check the following tags for missing, conflicting, or incorrect values: {0}\");\n     private static final String KEY_VALUE_SEPARATOR = \"->\";\n+    private static final String DEFAULT_FILTER_RESOURCE = \"invalidTags.txt\";\n+    private static final Logger logger = LoggerFactory.getLogger(InvalidTagsCheck.class);\n+\n+    private final List<Tuple<? extends Class<AtlasEntity>, List<TaggableFilter>>> classTagFilters;\n+    private final boolean overrideDefaultFilters;\n+    private final boolean appendToDefaultFilters;\n \n-    private final List<Tuple<? extends Set<Class<AtlasEntity>>, TaggableFilter>> classTagFilters;\n+    /**\n+     * @return a List of Tuple containing AtlasEntity and a list of TaggableFilters read from the\n+     *         json files of each AtlasEntity. DEFAULT_FILTER_RESOURCE file maps each AtlasEntity to\n+     *         its corresponding filter files.\n+     */\n+    private static List<Tuple<? extends Class<AtlasEntity>, List<TaggableFilter>>> getDefaultFilters()\n+    {\n+        try (BufferedReader reader = new BufferedReader(new InputStreamReader(\n+                InvalidTagsCheck.class.getResourceAsStream(DEFAULT_FILTER_RESOURCE))))\n+        {\n+            final List<Tuple<? extends Class<AtlasEntity>, List<TaggableFilter>>> listOfClassToFilters = new ArrayList<>();\n+            String line;\n+            while ((line = reader.readLine()) != null)\n+            {\n+                final String[] split = line.split(DELIMITER);\n+                if (split.length == 2)\n+                {\n+                    listOfClassToFilters.add(\n+                            new Tuple<>(ItemType.valueOf(split[0].toUpperCase()).getMemberClass(),\n+                                    getFiltersFromResource(split[1])));\n+                }\n+            }\n+            return listOfClassToFilters;\n+        }\n+        catch (final IOException exception)\n+        {\n+            logger.error(String.format(\"Could not read %s\", DEFAULT_FILTER_RESOURCE), exception);\n+            return Collections.emptyList();\n+        }\n+    }\n \n     /**\n      * Gathers the keys from a {@link TaggableFilter} using regex.\n      *\n-     * @param filter\n+     * @param listOfFilters<TaggableFilter>\n      *            a {@link TaggableFilter}\n      * @return the tag keys as a {@link Set} of {@link String}s\n      */\n-    private static Set<String> getFilterKeys(final TaggableFilter filter)\n+    private static Set<String> getFilterKeys(final AtlasObject atlasObject,\n+            final List<TaggableFilter> listOfFilters)\n     {\n-        return Arrays.stream(filter.toString().split(\"[|&]+\"))\n-                .filter(string -> string.contains(KEY_VALUE_SEPARATOR))\n-                .map(tag -> tag.split(KEY_VALUE_SEPARATOR)[0]).collect(Collectors.toSet());\n+        final Set<String> collectedKeys = new HashSet<>();\n+        listOfFilters.stream().filter(taggableFilter -> taggableFilter.test(atlasObject)).forEach(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25a61bd2fee73a9ad855d60471a8448b630eed5d"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDQwODQz", "url": "https://github.com/osmlab/atlas-checks/pull/296#pullrequestreview-410440843", "createdAt": "2020-05-12T21:37:09Z", "commit": {"oid": "25a61bd2fee73a9ad855d60471a8448b630eed5d"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34ee348ac33dbdd5f39c322f346227919e800fae", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/34ee348ac33dbdd5f39c322f346227919e800fae", "committedDate": "2020-05-12T21:46:08Z", "message": "Rename constant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4439eb358613961cc94fa742ad35d14de6a510b5", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/4439eb358613961cc94fa742ad35d14de6a510b5", "committedDate": "2020-05-12T22:31:57Z", "message": "Spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad5377dd0cc331e61921232e895acd974aad400a", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/ad5377dd0cc331e61921232e895acd974aad400a", "committedDate": "2020-05-12T22:34:54Z", "message": "Rename variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNTA2MDYz", "url": "https://github.com/osmlab/atlas-checks/pull/296#pullrequestreview-410506063", "createdAt": "2020-05-13T00:13:50Z", "commit": {"oid": "ad5377dd0cc331e61921232e895acd974aad400a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMDoxMzo1MVrOGUdOtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMDoxNTozNFrOGUdQpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwMzYwNw==", "bodyText": "This could be:\n\"filters.defaultt\": {\n \"override\": false,\n \"append\": true\n}", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424103607", "createdAt": "2020-05-13T00:13:51Z", "author": {"login": "danielduhh"}, "path": "config/configuration.json", "diffHunk": "@@ -388,8 +388,11 @@\n     }\n   },\n   \"InvalidTagsCheck\": {\n+    \"override.default.filters\": false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5377dd0cc331e61921232e895acd974aad400a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwNDEwMw==", "bodyText": "If we go the resource route, the default values should be the tags in the original version", "url": "https://github.com/osmlab/atlas-checks/pull/296#discussion_r424104103", "createdAt": "2020-05-13T00:15:34Z", "author": {"login": "danielduhh"}, "path": "src/main/resources/org/openstreetmap/atlas/checks/validation/tag/invalid-tags-check-filter.json", "diffHunk": "@@ -0,0 +1,52 @@\n+{\n+  \"filters\": [\n+    \"island->*&natural->spring,hot_spring&name->*\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5377dd0cc331e61921232e895acd974aad400a"}, "originalPosition": 3}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f674e86135e70a4e6e7368f0e6004d539925cb2", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/0f674e86135e70a4e6e7368f0e6004d539925cb2", "committedDate": "2020-05-13T15:33:48Z", "message": "Merge branch 'dev' into invalidtags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "96e197a3683865b16b6b502b8a558d0714fa312f", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/96e197a3683865b16b6b502b8a558d0714fa312f", "committedDate": "2020-05-13T18:11:35Z", "message": "Update config switches and revert to original filters as default filters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d996627d07ad2e702e06da97b9a06cceb7013ea8", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/d996627d07ad2e702e06da97b9a06cceb7013ea8", "committedDate": "2020-05-13T18:12:10Z", "message": "Merge branch 'invalidtags' of https://github.com/sayas01/atlas-checks into invalidtags"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f935b1e8d16b5d226e16db06dd33120ac85d331", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/9f935b1e8d16b5d226e16db06dd33120ac85d331", "committedDate": "2020-05-13T21:29:43Z", "message": "Remove resource filters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72ca3a91846131df79db2787ed9cba2890620f8c", "author": {"user": {"login": "sayas01", "name": "Sayana Saithu"}}, "url": "https://github.com/osmlab/atlas-checks/commit/72ca3a91846131df79db2787ed9cba2890620f8c", "committedDate": "2020-05-13T21:34:49Z", "message": "Update unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzI2NDg0", "url": "https://github.com/osmlab/atlas-checks/pull/296#pullrequestreview-411326484", "createdAt": "2020-05-13T21:53:32Z", "commit": {"oid": "72ca3a91846131df79db2787ed9cba2890620f8c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzMxMzcx", "url": "https://github.com/osmlab/atlas-checks/pull/296#pullrequestreview-411331371", "createdAt": "2020-05-13T22:02:58Z", "commit": {"oid": "72ca3a91846131df79db2787ed9cba2890620f8c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3332, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}