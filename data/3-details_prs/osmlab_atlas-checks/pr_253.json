{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMDM1Njg2", "number": 253, "title": "Edge-crossing-edge-check bug fix.", "bodyText": "Description:\nEdgeCrossingEdgeCheck flags all of the edges that cross a starting edge. Depending on when an edge is checked its crossing edges may or may not be flagged based on whether they are flagged already. This PR is a bug fix to flag all these edges.\nPotential Impact:\nCode changes to the Atlas-checks.\nUnit Test Approach:\nFixing existing unit tests as per new change set.\nTest Results:\nRan test on approximately 29MB data atlas files locally without and with code changes.\nWith new code changes: Found 39 flags. Each flag consists of collection of other edge's osm identifiers which are crossing the flagged edge.\nWith old code: Found total of 128 flags.", "createdAt": "2020-02-06T18:01:59Z", "url": "https://github.com/osmlab/atlas-checks/pull/253", "merged": true, "mergeCommit": {"oid": "c79ef742e68ed9ae2dbed43c4f43b2d36e18ba63"}, "closed": true, "closedAt": "2020-02-25T18:24:13Z", "author": {"login": "smaheshwaram"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBupZDgH2gAyMzcyMDM1Njg2OjQ4YzBlMzViOWExYzBiYWUwMGUxMTgzMzE5ZmY4YzAwODFkZTUzMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcH2B_aAFqTM2NDMzMDU3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "48c0e35b9a1c0bae00e1183319ff8c0081de5323", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/48c0e35b9a1c0bae00e1183319ff8c0081de5323", "committedDate": "2020-02-06T18:00:51Z", "message": "Edge-crossing-edge-check, working functionality."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NjU5OTA0", "url": "https://github.com/osmlab/atlas-checks/pull/253#pullrequestreview-354659904", "createdAt": "2020-02-06T18:05:10Z", "commit": {"oid": "48c0e35b9a1c0bae00e1183319ff8c0081de5323"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODowNToxMFrOFmk7Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxODowNToxMFrOFmk7Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk5NTIyNw==", "bodyText": "@Bentleysb Please take a look at this flag method and kindly let me know if these code changes are satisfying the functionality which we discussed.", "url": "https://github.com/osmlab/atlas-checks/pull/253#discussion_r375995227", "createdAt": "2020-02-06T18:05:10Z", "author": {"login": "smaheshwaram"}, "path": "src/main/java/org/openstreetmap/atlas/checks/validation/intersections/EdgeCrossingEdgeCheck.java", "diffHunk": "@@ -105,22 +109,44 @@ public boolean validCheckForObject(final AtlasObject object)\n         // edges from being flagged more than once.\n         final Set<Edge> collectedEdges = new EdgeCrossingEdgeWalker((Edge) object,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48c0e35b9a1c0bae00e1183319ff8c0081de5323"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb27b721233f230d7328cd6e0bed4c97e6e5ee3d", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/eb27b721233f230d7328cd6e0bed4c97e6e5ee3d", "committedDate": "2020-02-11T21:08:34Z", "message": "Edge-crossing-edge-check, making sure edges with same osm identifier won't be flagged duplicate."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a37211c7dd574e04a5e7817c1013fafe8e6da9d9", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/a37211c7dd574e04a5e7817c1013fafe8e6da9d9", "committedDate": "2020-02-12T19:00:29Z", "message": "Edge-crossing-edge-check, formatting fix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5OTQ0NTUz", "url": "https://github.com/osmlab/atlas-checks/pull/253#pullrequestreview-359944553", "createdAt": "2020-02-17T20:02:37Z", "commit": {"oid": "a37211c7dd574e04a5e7817c1013fafe8e6da9d9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDowMjozN1rOFquqnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QyMDowMjozN1rOFquqnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDM0OTA4NQ==", "bodyText": "I think we still want to do this for each crossing Edge. This will help cut down on duplicate processing and give clearer instructions on what needs to be changed.", "url": "https://github.com/osmlab/atlas-checks/pull/253#discussion_r380349085", "createdAt": "2020-02-17T20:02:37Z", "author": {"login": "Bentleysb"}, "path": "src/main/java/org/openstreetmap/atlas/checks/validation/intersections/EdgeCrossingEdgeCheck.java", "diffHunk": "@@ -105,22 +109,46 @@ public boolean validCheckForObject(final AtlasObject object)\n         // edges from being flagged more than once.\n         final Set<Edge> collectedEdges = new EdgeCrossingEdgeWalker((Edge) object,\n                 this.getInvalidCrossingEdges()).collectEdges();\n-\n         if (collectedEdges.size() > 1)\n         {\n-            final CheckFlag newFlag = new CheckFlag(getTaskIdentifier(object));\n-            this.markAsFlagged(object.getIdentifier());\n-            newFlag.addObject(object);\n-            newFlag.addInstruction(this.getLocalizedInstruction(0, object.getOsmIdentifier()));\n-\n-            collectedEdges.forEach(invalidEdge ->\n+            final List<Tuple2<Long, Set<Edge>>> edgeCrossPairs = collectedEdges\n+                    .stream().filter(\n+                            e -> e.getOsmIdentifier() != object.getOsmIdentifier())\n+                    .map(e -> new Tuple2<>(e.getOsmIdentifier(),\n+                            new EdgeCrossingEdgeWalker(e, this.getInvalidCrossingEdges())\n+                                    .collectEdges()))\n+                    .collect(Collectors.toList());\n+            edgeCrossPairs.add(new Tuple2<>(object.getOsmIdentifier(), collectedEdges));\n+            final Optional<Tuple2<Long, Set<Edge>>> maxPair = edgeCrossPairs.stream().max(\n+                    (entry1, entry2) -> Integer.compare(entry1._2().size(), entry2._2().size()));\n+            if (maxPair.isPresent())\n             {\n-                this.markAsFlagged(invalidEdge.getIdentifier());\n-                newFlag.addObject(invalidEdge);\n-                newFlag.addInstruction(\n-                        this.getLocalizedInstruction(1, invalidEdge.getOsmIdentifier()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a37211c7dd574e04a5e7817c1013fafe8e6da9d9"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2bf9f85272c326aa17699ea08e64d4fa9e47603", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/a2bf9f85272c326aa17699ea08e64d4fa9e47603", "committedDate": "2020-02-19T23:11:05Z", "message": "Edge-crossover-edge, added functionality to collect all crossing edges locations."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNTExODY4", "url": "https://github.com/osmlab/atlas-checks/pull/253#pullrequestreview-361511868", "createdAt": "2020-02-19T23:22:32Z", "commit": {"oid": "a2bf9f85272c326aa17699ea08e64d4fa9e47603"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7ad86bf171faff721064902b0560eec65a1c2db", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/c7ad86bf171faff721064902b0560eec65a1c2db", "committedDate": "2020-02-20T21:52:12Z", "message": "Edge-crossing-edge, modified code to add edge to a flag and mark it as flagged if it has max size of crossing edges."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85f8515fe87f10eaf1a185447a1560450c6f52f3", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/85f8515fe87f10eaf1a185447a1560450c6f52f3", "committedDate": "2020-02-20T22:01:12Z", "message": "Edge-crossing-edge, fixing checkstyle issues."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMjgyNTM0", "url": "https://github.com/osmlab/atlas-checks/pull/253#pullrequestreview-362282534", "createdAt": "2020-02-20T22:32:07Z", "commit": {"oid": "85f8515fe87f10eaf1a185447a1560450c6f52f3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjozMjowN1rOFsleNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMjozMzoxOFrOFslgLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI5NTYwNg==", "bodyText": "Please replace one letter variable names.", "url": "https://github.com/osmlab/atlas-checks/pull/253#discussion_r382295606", "createdAt": "2020-02-20T22:32:07Z", "author": {"login": "sayas01"}, "path": "src/main/java/org/openstreetmap/atlas/checks/validation/intersections/EdgeCrossingEdgeCheck.java", "diffHunk": "@@ -105,22 +108,43 @@ public boolean validCheckForObject(final AtlasObject object)\n         // edges from being flagged more than once.\n         final Set<Edge> collectedEdges = new EdgeCrossingEdgeWalker((Edge) object,\n                 this.getInvalidCrossingEdges()).collectEdges();\n-\n         if (collectedEdges.size() > 1)\n         {\n-            final CheckFlag newFlag = new CheckFlag(getTaskIdentifier(object));\n-            this.markAsFlagged(object.getIdentifier());\n-            newFlag.addObject(object);\n-            newFlag.addInstruction(this.getLocalizedInstruction(0, object.getOsmIdentifier()));\n-\n-            collectedEdges.forEach(invalidEdge ->\n+            final List<Tuple2<Edge, Set<Edge>>> edgeCrossPairs = collectedEdges\n+                    .stream().filter(\n+                            e -> e.getOsmIdentifier() != object.getOsmIdentifier())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85f8515fe87f10eaf1a185447a1560450c6f52f3"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjI5NjEwOQ==", "bodyText": "Could you remove the return and curly brace to fix https://sonarcloud.io/project/issues?id=org.openstreetmap.atlas%3Aatlas-checks&open=AXBkpYtoPUfJDu18rpLu&pullRequest=253&resolved=false&types=CODE_SMELL", "url": "https://github.com/osmlab/atlas-checks/pull/253#discussion_r382296109", "createdAt": "2020-02-20T22:33:18Z", "author": {"login": "sayas01"}, "path": "src/main/java/org/openstreetmap/atlas/checks/validation/intersections/EdgeCrossingEdgeCheck.java", "diffHunk": "@@ -105,22 +108,43 @@ public boolean validCheckForObject(final AtlasObject object)\n         // edges from being flagged more than once.\n         final Set<Edge> collectedEdges = new EdgeCrossingEdgeWalker((Edge) object,\n                 this.getInvalidCrossingEdges()).collectEdges();\n-\n         if (collectedEdges.size() > 1)\n         {\n-            final CheckFlag newFlag = new CheckFlag(getTaskIdentifier(object));\n-            this.markAsFlagged(object.getIdentifier());\n-            newFlag.addObject(object);\n-            newFlag.addInstruction(this.getLocalizedInstruction(0, object.getOsmIdentifier()));\n-\n-            collectedEdges.forEach(invalidEdge ->\n+            final List<Tuple2<Edge, Set<Edge>>> edgeCrossPairs = collectedEdges\n+                    .stream().filter(\n+                            e -> e.getOsmIdentifier() != object.getOsmIdentifier())\n+                    .map(e -> new Tuple2<>(e,\n+                            new EdgeCrossingEdgeWalker(e, this.getInvalidCrossingEdges())\n+                                    .collectEdges()))\n+                    .collect(Collectors.toList());\n+            edgeCrossPairs.add(new Tuple2<>((Edge) object, collectedEdges));\n+            final Optional<Tuple2<Edge, Set<Edge>>> maxPair = edgeCrossPairs.stream().max(\n+                    (entry1, entry2) -> Integer.compare(entry1._2().size(), entry2._2().size()));\n+            if (maxPair.isPresent())\n             {\n-                this.markAsFlagged(invalidEdge.getIdentifier());\n-                newFlag.addObject(invalidEdge);\n-                newFlag.addInstruction(\n-                        this.getLocalizedInstruction(1, invalidEdge.getOsmIdentifier()));\n-            });\n-            return Optional.of(newFlag);\n+                final int maxSize = (maxPair.get()._2()).size();\n+\n+                // max edges object is not the one passed to this flag.\n+                final List<Tuple2<Edge, Set<Edge>>> maxEdgePairs = edgeCrossPairs.stream()\n+                        .filter(crossPair -> (crossPair._2()).size() == maxSize)\n+                        .collect(Collectors.toList());\n+                final Optional<Tuple2<Edge, Set<Edge>>> minIdentifierPair = maxEdgePairs.stream()\n+                        .reduce((edge1, edge2) ->\n+                        {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85f8515fe87f10eaf1a185447a1560450c6f52f3"}, "originalPosition": 70}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf430011ab6de623462e9cb096778d6149e1ca5e", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/bf430011ab6de623462e9cb096778d6149e1ca5e", "committedDate": "2020-02-20T22:46:13Z", "message": "Edge-crossing-edge, addressing review comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMzA2MTAw", "url": "https://github.com/osmlab/atlas-checks/pull/253#pullrequestreview-362306100", "createdAt": "2020-02-20T23:24:13Z", "commit": {"oid": "bf430011ab6de623462e9cb096778d6149e1ca5e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzNzc3ODQx", "url": "https://github.com/osmlab/atlas-checks/pull/253#pullrequestreview-363777841", "createdAt": "2020-02-24T23:36:38Z", "commit": {"oid": "bf430011ab6de623462e9cb096778d6149e1ca5e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "efbb14e4ac3e9c50f7672584a21ad55eb4df5971", "author": {"user": {"login": "danielduhh", "name": "Daniel B"}}, "url": "https://github.com/osmlab/atlas-checks/commit/efbb14e4ac3e9c50f7672584a21ad55eb4df5971", "committedDate": "2020-02-24T23:40:32Z", "message": "Merge branch 'dev' into edge-crossing-edge2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MzMwNTc4", "url": "https://github.com/osmlab/atlas-checks/pull/253#pullrequestreview-364330578", "createdAt": "2020-02-25T18:00:36Z", "commit": {"oid": "efbb14e4ac3e9c50f7672584a21ad55eb4df5971"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3273, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}