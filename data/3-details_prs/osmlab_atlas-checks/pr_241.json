{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyMzcwMzUz", "number": 241, "title": "BigNodeBadDataCheck Run Time Bug", "bodyText": "Description:\nBigNodeBadDataCheck can often load Edge networks consisting of tens of Edges. In these cases it takes a long time for the AllPathsRouter to execute on the network. In some rare cases the check will even time out before completing due to this.\nThe AllPathsRouter is used to calculate the number of paths through a big node. If this number is too high then that is one of the conditions for the big node to be flagged.\nTo fix this issue the check has been altered to only run the AllPathsRouter (through BigNode.allPaths()) if no other conditions for flagging are met.\nPotential Impact:\nBigNodeBadDataCheck should run much more quickly. There may be an increase in flags in areas where the check was previously timing out.\nIn most cases the flag instructions will no longer include information on the path count or turn restriction count. That will now only occur when the path count is used as the last resort flag condition.\nUnit Test Approach:\nNo unit tests were changed or added. All tests pass.\nTest Results:\nTested the fix on an atlas that previously timed out when trying to run this check. The timeout occurs when it takes longer than 300 minutes for the check to run. The check now runs in under 18 seconds.\nCompared results of an atlas that did complete before and found that the flags were the same, with the exception of the altered instructions.", "createdAt": "2020-01-13T23:22:44Z", "url": "https://github.com/osmlab/atlas-checks/pull/241", "merged": true, "mergeCommit": {"oid": "23da3f948519cad394ae94f93125d3481667ced1"}, "closed": true, "closedAt": "2020-01-15T21:00:41Z", "author": {"login": "Bentleysb"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4s8UsAH2gAyMzYyMzcwMzUzOjM1OTgxNWY5MmM4NGM0ZWY3ZDg4ZWVjMzAwZjg4MjNiZjgzYzBjN2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6VlKWAFqTM0Mjc1OTY1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "359815f92c84c4ef7d88eec300f8823bf83c0c7b", "author": {"user": {"login": "Bentleysb", "name": "Bentley Breithaupt"}}, "url": "https://github.com/osmlab/atlas-checks/commit/359815f92c84c4ef7d88eec300f8823bf83c0c7b", "committedDate": "2020-01-09T16:56:24Z", "message": "short circuit"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMjM5MTg4", "url": "https://github.com/osmlab/atlas-checks/pull/241#pullrequestreview-342239188", "createdAt": "2020-01-14T01:07:34Z", "commit": {"oid": "359815f92c84c4ef7d88eec300f8823bf83c0c7b"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMTowNzozNVrOFdJiaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMTowNzozNVrOFdJiaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEwOTI4OA==", "bodyText": "nit: extra space", "url": "https://github.com/osmlab/atlas-checks/pull/241#discussion_r366109288", "createdAt": "2020-01-14T01:07:35Z", "author": {"login": "danielduhh"}, "path": "src/main/java/org/openstreetmap/atlas/checks/validation/intersections/BigNodeBadDataCheck.java", "diffHunk": "@@ -77,29 +78,43 @@ public boolean validCheckForObject(final AtlasObject object)\n         {\n             return Optional.empty();\n         }\n-        final int allPathsCount = bigNode.allPaths().size();\n+\n         final int junctionEdgesCount = bigNode.junctionEdges().size();\n-        final Set<RestrictedPath> turnRestrictions = bigNode.turnRestrictions();\n-        final int turnRestrictionCount = turnRestrictions.size();\n-        // Get list of restricted path OSM ids\n-        final List<Long> restrictedPathOsmIds = turnRestrictions.stream()\n-                .flatMap(restrictedPath -> Iterables.asList(restrictedPath.getRoute()).stream()\n-                        .map(Edge::getOsmIdentifier))\n-                .collect(Collectors.toList());\n-\n-        if (allPathsCount > maxNumberPathsThreshold\n-                || junctionEdgesCount > maxNumberJunctionEdgesThreshold)\n+        if (junctionEdgesCount > maxNumberJunctionEdgesThreshold)\n         {\n             final CheckFlag flag = createFlag(bigNode,\n-                    this.getLocalizedInstruction(0, allPathsCount, junctionEdgesCount,\n-                            turnRestrictionCount, restrictedPathOsmIds.toString()));\n+                    this.getLocalizedInstruction(0, junctionEdgesCount));\n \n             bigNode.edges().forEach(flag::addObject);\n             // Add map pin at each BigNode Node\n             bigNode.nodes().forEach(b -> flag.addPoint(b.getLocation()));\n \n             return Optional.of(flag);\n         }\n+        else\n+        {\n+            final int allPathsCount = bigNode.allPaths().size();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359815f92c84c4ef7d88eec300f8823bf83c0c7b"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16237ba7887e1ce83a610d8d79460837b90582cf", "author": {"user": {"login": "Bentleysb", "name": "Bentley Breithaupt"}}, "url": "https://github.com/osmlab/atlas-checks/commit/16237ba7887e1ce83a610d8d79460837b90582cf", "committedDate": "2020-01-14T17:15:10Z", "message": "rm space"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNzQzMzQ3", "url": "https://github.com/osmlab/atlas-checks/pull/241#pullrequestreview-342743347", "createdAt": "2020-01-14T18:25:14Z", "commit": {"oid": "16237ba7887e1ce83a610d8d79460837b90582cf"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxODoyNToxNFrOFdhWYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxODoyNToxNFrOFdhWYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjQ5OTQyNg==", "bodyText": "@Bentleysb Great improvement on the run time. I only have one doubt. So, here are you trying to get bigNode.allPaths() only if no other flag conditions are met so that you can save run time!!", "url": "https://github.com/osmlab/atlas-checks/pull/241#discussion_r366499426", "createdAt": "2020-01-14T18:25:14Z", "author": {"login": "smaheshwaram"}, "path": "src/main/java/org/openstreetmap/atlas/checks/validation/intersections/BigNodeBadDataCheck.java", "diffHunk": "@@ -77,29 +78,42 @@ public boolean validCheckForObject(final AtlasObject object)\n         {\n             return Optional.empty();\n         }\n-        final int allPathsCount = bigNode.allPaths().size();\n+\n         final int junctionEdgesCount = bigNode.junctionEdges().size();\n-        final Set<RestrictedPath> turnRestrictions = bigNode.turnRestrictions();\n-        final int turnRestrictionCount = turnRestrictions.size();\n-        // Get list of restricted path OSM ids\n-        final List<Long> restrictedPathOsmIds = turnRestrictions.stream()\n-                .flatMap(restrictedPath -> Iterables.asList(restrictedPath.getRoute()).stream()\n-                        .map(Edge::getOsmIdentifier))\n-                .collect(Collectors.toList());\n-\n-        if (allPathsCount > maxNumberPathsThreshold\n-                || junctionEdgesCount > maxNumberJunctionEdgesThreshold)\n+        if (junctionEdgesCount > maxNumberJunctionEdgesThreshold)\n         {\n             final CheckFlag flag = createFlag(bigNode,\n-                    this.getLocalizedInstruction(0, allPathsCount, junctionEdgesCount,\n-                            turnRestrictionCount, restrictedPathOsmIds.toString()));\n+                    this.getLocalizedInstruction(0, junctionEdgesCount));\n \n             bigNode.edges().forEach(flag::addObject);\n             // Add map pin at each BigNode Node\n             bigNode.nodes().forEach(b -> flag.addPoint(b.getLocation()));\n \n             return Optional.of(flag);\n         }\n+        else", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16237ba7887e1ce83a610d8d79460837b90582cf"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNzQ4Mzk0", "url": "https://github.com/osmlab/atlas-checks/pull/241#pullrequestreview-342748394", "createdAt": "2020-01-14T18:33:26Z", "commit": {"oid": "16237ba7887e1ce83a610d8d79460837b90582cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4111f535e82e3a79e23be38b247dbf9370a5a83b", "author": {"user": null}, "url": "https://github.com/osmlab/atlas-checks/commit/4111f535e82e3a79e23be38b247dbf9370a5a83b", "committedDate": "2020-01-14T18:50:46Z", "message": "Merge branch 'dev' into dev-BigNodeBadRunTime"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyNzU5NjU3", "url": "https://github.com/osmlab/atlas-checks/pull/241#pullrequestreview-342759657", "createdAt": "2020-01-14T18:51:09Z", "commit": {"oid": "16237ba7887e1ce83a610d8d79460837b90582cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3252, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}