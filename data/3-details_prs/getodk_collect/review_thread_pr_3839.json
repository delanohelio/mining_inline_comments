{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5MTIyMDg2", "number": 3839, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDo1ODo1NFrOECuviA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDowMTozNFrOEIHWGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjk4NDQwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/repeats/DeleteRepeatDialogFragment.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMDo1ODo1NFrOGfXk0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTowNjoyNVrOGfXy1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NTI5Nw==", "bodyText": "This should be deleteRepeat because it does not apply to general groups.", "url": "https://github.com/getodk/collect/pull/3839#discussion_r435545297", "createdAt": "2020-06-04T20:58:54Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/repeats/DeleteRepeatDialogFragment.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.odk.collect.android.formentry.repeats;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.os.Bundle;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+\n+import static android.content.DialogInterface.BUTTON_NEGATIVE;\n+import static android.content.DialogInterface.BUTTON_POSITIVE;\n+\n+public class DeleteRepeatDialogFragment extends DialogFragment {\n+\n+    protected FormController formController = Collect.getInstance().getFormController();\n+    protected DeleteRepeatDialogCallback callback;\n+\n+    @Override\n+    public void onAttach(@NonNull Context context) {\n+        super.onAttach(context);\n+\n+        if (context instanceof DeleteRepeatDialogCallback) {\n+            callback = (DeleteRepeatDialogCallback) context;\n+        }\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        super.onCreateDialog(savedInstanceState);\n+\n+        String name = formController.getLastRepeatedGroupName();\n+        int repeatcount = formController.getLastRepeatedGroupRepeatCount();\n+        if (repeatcount != -1) {\n+            name += \" (\" + (repeatcount + 1) + \")\";\n+        }\n+\n+        AlertDialog alertDialog = new AlertDialog.Builder(getActivity()).create();\n+        alertDialog.setTitle(getActivity().getString(R.string.delete_repeat_ask));\n+        alertDialog.setMessage(getActivity().getString(R.string.delete_repeat_confirm, name));\n+        DialogInterface.OnClickListener quitListener = (dialog, i) -> {\n+            switch (i) {\n+                case BUTTON_POSITIVE: // yes\n+                    callback.deleteGroup();\n+                    break;\n+\n+                case BUTTON_NEGATIVE: // no\n+                    callback.onCancelled();\n+                    break;\n+            }\n+            alertDialog.cancel();\n+            dismiss();\n+        };\n+        alertDialog.setCancelable(false);\n+        alertDialog.setButton(BUTTON_POSITIVE, getActivity().getString(R.string.discard_group), quitListener);\n+        alertDialog.setButton(BUTTON_NEGATIVE, getActivity().getString(R.string.delete_repeat_no), quitListener);\n+\n+        return alertDialog;\n+    }\n+\n+    public interface DeleteRepeatDialogCallback {\n+        void deleteGroup();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6edefe62419ede65abd147b6df5b3e72f2d50999"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0ODg4Nw==", "bodyText": "By the way, the delete_repeat string resource and other related ones are super confusing because they use the word \"Group\". I think we should change that but it's a separate thing.", "url": "https://github.com/getodk/collect/pull/3839#discussion_r435548887", "createdAt": "2020-06-04T21:06:25Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/repeats/DeleteRepeatDialogFragment.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.odk.collect.android.formentry.repeats;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.os.Bundle;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+\n+import static android.content.DialogInterface.BUTTON_NEGATIVE;\n+import static android.content.DialogInterface.BUTTON_POSITIVE;\n+\n+public class DeleteRepeatDialogFragment extends DialogFragment {\n+\n+    protected FormController formController = Collect.getInstance().getFormController();\n+    protected DeleteRepeatDialogCallback callback;\n+\n+    @Override\n+    public void onAttach(@NonNull Context context) {\n+        super.onAttach(context);\n+\n+        if (context instanceof DeleteRepeatDialogCallback) {\n+            callback = (DeleteRepeatDialogCallback) context;\n+        }\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        super.onCreateDialog(savedInstanceState);\n+\n+        String name = formController.getLastRepeatedGroupName();\n+        int repeatcount = formController.getLastRepeatedGroupRepeatCount();\n+        if (repeatcount != -1) {\n+            name += \" (\" + (repeatcount + 1) + \")\";\n+        }\n+\n+        AlertDialog alertDialog = new AlertDialog.Builder(getActivity()).create();\n+        alertDialog.setTitle(getActivity().getString(R.string.delete_repeat_ask));\n+        alertDialog.setMessage(getActivity().getString(R.string.delete_repeat_confirm, name));\n+        DialogInterface.OnClickListener quitListener = (dialog, i) -> {\n+            switch (i) {\n+                case BUTTON_POSITIVE: // yes\n+                    callback.deleteGroup();\n+                    break;\n+\n+                case BUTTON_NEGATIVE: // no\n+                    callback.onCancelled();\n+                    break;\n+            }\n+            alertDialog.cancel();\n+            dismiss();\n+        };\n+        alertDialog.setCancelable(false);\n+        alertDialog.setButton(BUTTON_POSITIVE, getActivity().getString(R.string.discard_group), quitListener);\n+        alertDialog.setButton(BUTTON_NEGATIVE, getActivity().getString(R.string.delete_repeat_no), quitListener);\n+\n+        return alertDialog;\n+    }\n+\n+    public interface DeleteRepeatDialogCallback {\n+        void deleteGroup();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NTI5Nw=="}, "originalCommit": {"oid": "6edefe62419ede65abd147b6df5b3e72f2d50999"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjk5NjgyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/repeats/DeleteRepeatDialogFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMTowMzowNFrOGfXsoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQyMToxMTozNVrOGfX-LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NzI5Nw==", "bodyText": "I'm not loving this protected field pattern for testing and I see it shows up in #3792 as well. I think that again, using a ViewModel here would help address that.", "url": "https://github.com/getodk/collect/pull/3839#discussion_r435547297", "createdAt": "2020-06-04T21:03:04Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/repeats/DeleteRepeatDialogFragment.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.odk.collect.android.formentry.repeats;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.os.Bundle;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+\n+import static android.content.DialogInterface.BUTTON_NEGATIVE;\n+import static android.content.DialogInterface.BUTTON_POSITIVE;\n+\n+public class DeleteRepeatDialogFragment extends DialogFragment {\n+\n+    protected FormController formController = Collect.getInstance().getFormController();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6edefe62419ede65abd147b6df5b3e72f2d50999"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU1MTc4OA==", "bodyText": "I also feel now implementing a ViewModel would be better. I will do that.", "url": "https://github.com/getodk/collect/pull/3839#discussion_r435551788", "createdAt": "2020-06-04T21:11:35Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/repeats/DeleteRepeatDialogFragment.java", "diffHunk": "@@ -0,0 +1,72 @@\n+package org.odk.collect.android.formentry.repeats;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.os.Bundle;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.javarosawrapper.FormController;\n+\n+import static android.content.DialogInterface.BUTTON_NEGATIVE;\n+import static android.content.DialogInterface.BUTTON_POSITIVE;\n+\n+public class DeleteRepeatDialogFragment extends DialogFragment {\n+\n+    protected FormController formController = Collect.getInstance().getFormController();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTU0NzI5Nw=="}, "originalCommit": {"oid": "6edefe62419ede65abd147b6df5b3e72f2d50999"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDU5OTE0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMDo1ODozMFrOGkHnjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzo1Mjo0OFrOGkmrrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyNjczNA==", "bodyText": "I don't think this works because the ViewModel will have a reference to the Activity, causing a leak.\nI thought the callbacks you had before were fine. I was imagining the ViewModel only as a way for the dialog to get access to the FormController. Even better might be to give access only to the data that the dialog needs which I think is the last deleted repeat name and the last deleted repeat index.", "url": "https://github.com/getodk/collect/pull/3839#discussion_r440526734", "createdAt": "2020-06-16T00:58:30Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -1132,6 +1132,16 @@ public void onCreateContextMenu(ContextMenu menu, View v,\n     @Override\n     public boolean onContextItemSelected(MenuItem item) {\n         if (item.getItemId() == DELETE_REPEAT) {\n+            formEntryViewModel.setOnDeleted(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c252dfb8527d199b30efb605a0400430fa4ff91"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAzNTY5NQ==", "bodyText": "Sorry @ln I didn't realize this would cause activity leak.", "url": "https://github.com/getodk/collect/pull/3839#discussion_r441035695", "createdAt": "2020-06-16T17:52:48Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -1132,6 +1132,16 @@ public void onCreateContextMenu(ContextMenu menu, View v,\n     @Override\n     public boolean onContextItemSelected(MenuItem item) {\n         if (item.getItemId() == DELETE_REPEAT) {\n+            formEntryViewModel.setOnDeleted(() -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUyNjczNA=="}, "originalCommit": {"oid": "4c252dfb8527d199b30efb605a0400430fa4ff91"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTQ0NDA4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/formentry/repeats/DeleteRepeatDialogFragmentTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDowMTozNFrOGn4iuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDowMTozNFrOGn4iuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ3NDA0MA==", "bodyText": "@lognaturel I changed the tests a little bit so as to avoid using protected scope for callback. I like this approach better than directly approaching the interface in the fragment.", "url": "https://github.com/getodk/collect/pull/3839#discussion_r444474040", "createdAt": "2020-06-23T20:01:34Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/test/java/org/odk/collect/android/formentry/repeats/DeleteRepeatDialogFragmentTest.java", "diffHunk": "@@ -0,0 +1,131 @@\n+package org.odk.collect.android.formentry.repeats;\n+\n+import android.content.DialogInterface;\n+import android.widget.TextView;\n+\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.FragmentActivity;\n+import androidx.fragment.app.FragmentManager;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.formentry.FormEntryViewModel;\n+import org.odk.collect.android.support.RobolectricHelpers;\n+import org.robolectric.RobolectricTestRunner;\n+import org.robolectric.RuntimeEnvironment;\n+import org.robolectric.shadows.ShadowDialog;\n+\n+import static junit.framework.TestCase.assertTrue;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.hamcrest.Matchers.instanceOf;\n+import static org.junit.Assert.assertFalse;\n+import static org.mockito.Mockito.when;\n+import static org.odk.collect.android.support.RobolectricHelpers.mockViewModelProvider;\n+import static org.robolectric.Shadows.shadowOf;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class DeleteRepeatDialogFragmentTest {\n+\n+    private TestActivity activity;\n+    private FragmentManager fragmentManager;\n+    private DeleteRepeatDialogFragment dialogFragment;\n+    private FormEntryViewModel formEntryViewModel;\n+\n+    @Before\n+    public void setup() {\n+        activity = RobolectricHelpers.createThemedActivity(TestActivity.class);\n+        fragmentManager = activity.getSupportFragmentManager();\n+        dialogFragment = new DeleteRepeatDialogFragment();\n+\n+        formEntryViewModel = mockViewModelProvider(activity, FormEntryViewModel.class).get(FormEntryViewModel.class);\n+    }\n+\n+    @Test\n+    public void fragmentActivityShouldImplementDeleteRepeatDialogCallback() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        assertThat(dialogFragment.getActivity(), instanceOf(DeleteRepeatDialogFragment.DeleteRepeatDialogCallback.class));\n+    }\n+\n+    @Test\n+    public void dialogIsNotCancellable() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        assertThat(shadowOf(dialogFragment.getDialog()).isCancelable(), equalTo(false));\n+    }\n+\n+    @Test\n+    public void shouldShowCorrectMessage() {\n+        when(formEntryViewModel.getLastRepeatedGroupName()).thenReturn(\"blah\");\n+        when(formEntryViewModel.getLastRepeatedGroupRepeatCount()).thenReturn(0);\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+        String message = ((TextView) dialog.findViewById(android.R.id.message)).getText().toString();\n+\n+        assertThat(message, equalTo(RuntimeEnvironment.application.getString(R.string.delete_repeat_confirm, \"blah (1)\")));\n+    }\n+\n+    @Test\n+    public void clickingCancel_shouldDismissTheDialog() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+        assertTrue(dialog.isShowing());\n+\n+        dialog.getButton(DialogInterface.BUTTON_NEGATIVE).performClick();\n+        assertFalse(dialog.isShowing());\n+        assertTrue(shadowOf(dialog).hasBeenDismissed());\n+    }\n+\n+    @Test\n+    public void clickingRemoveGroup_shouldDismissTheDialog() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+        assertTrue(dialog.isShowing());\n+\n+        dialog.getButton(DialogInterface.BUTTON_POSITIVE).performClick();\n+        assertFalse(dialog.isShowing());\n+        assertTrue(shadowOf(dialog).hasBeenDismissed());\n+    }\n+\n+    @Test\n+    public void clickingRemoveGroup_callsDeleteGroup() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+        assertThat(activity.deleteGroupCalled, equalTo(false));\n+\n+        dialog.getButton(DialogInterface.BUTTON_POSITIVE).performClick();\n+        assertThat(activity.deleteGroupCalled, equalTo(true));\n+    }\n+\n+    @Test\n+    public void clickingCancel_callsOnCancelled() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+        assertThat(activity.onCancelledCalled, equalTo(false));\n+\n+        dialog.getButton(DialogInterface.BUTTON_NEGATIVE).performClick();\n+        assertThat(activity.onCancelledCalled, equalTo(true));\n+    }\n+\n+    public static class TestActivity extends FragmentActivity implements DeleteRepeatDialogFragment.DeleteRepeatDialogCallback {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b9c63174d636098f7665cfd5a300dae1f52c92c"}, "originalPosition": 112}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3366, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}