{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNDUxOTA2", "number": 4013, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTozNDo0NlrOEVd22A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo0MDoyN1rOEVn_7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTQ0NzI4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/database/FormDatabaseMigrator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTozNDo0NlrOG8PLVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTozNDo0NlrOG8PLVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgxNjQwNA==", "bodyText": "I wanted to pull this out so we could have an object that was easier to setup and work with than the SQLiteOpenHelper implementations that need DatabaseContext.", "url": "https://github.com/getodk/collect/pull/4013#discussion_r465816404", "createdAt": "2020-08-05T15:34:46Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/database/FormDatabaseMigrator.java", "diffHunk": "@@ -45,97 +24,51 @@\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JR_FORM_ID;\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JR_VERSION;\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.LANGUAGE;\n-import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.LAST_DETECTED_FORM_VERSION_HASH;\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.MD5_HASH;\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.SUBMISSION_URI;\n \n-/**\n- * This class helps open, create, and upgrade the database file.\n- */\n-public class FormsDatabaseHelper extends SQLiteOpenHelper {\n-    private static final String DATABASE_NAME = \"forms.db\";\n-    public static final String FORMS_TABLE_NAME = \"forms\";\n-\n-    public static final int DATABASE_VERSION = 9;\n+public class FormDatabaseMigrator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04b011c62fecf8405bae770af12001153eb967d"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTQ1NjIyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/notifications/NotificationManagerNotifier.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTozNjo1NFrOG8PRBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTozNjo1NFrOG8PRBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgxNzg2MA==", "bodyText": "This is the key change here: switch away from using the database to record the versions the user is notified about and also making it more of a UI's (the Notifier) concern.", "url": "https://github.com/getodk/collect/pull/4013#discussion_r465817860", "createdAt": "2020-08-05T15:36:54Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/notifications/NotificationManagerNotifier.java", "diffHunk": "@@ -35,18 +42,26 @@\n \n     private final Application application;\n     private final NotificationManager notificationManager;\n+    private final PreferencesProvider preferencesProvider;\n \n     private static final int FORM_UPDATE_NOTIFICATION_ID = 0;\n     private static final int FORM_SYNC_NOTIFICATION_ID = 1;\n     private static final int AUTO_SEND_RESULT_NOTIFICATION_ID = 1328974928;\n \n-    public NotificationManagerNotifier(Application application) {\n+    public NotificationManagerNotifier(Application application, PreferencesProvider preferencesProvider) {\n         this.application = application;\n         notificationManager = (NotificationManager) application.getSystemService(NOTIFICATION_SERVICE);\n+        this.preferencesProvider = preferencesProvider;\n     }\n \n     @Override\n-    public void onUpdatesAvailable() {\n+    public void onUpdatesAvailable(List<ServerFormDetails> updates) {\n+        SharedPreferences metaPrefs = preferencesProvider.getMetaSharedPreferences();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04b011c62fecf8405bae770af12001153eb967d"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTQ2MTUwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/database/FormDatabaseMigratorTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTozODowM1rOG8PUOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTozMTo1N1rOG8roRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgxODY4Mg==", "bodyText": "There were tests for the database helper checking migrations, but they were out of date and Ignored. Interested to know if people think we need more coverage here.", "url": "https://github.com/getodk/collect/pull/4013#discussion_r465818682", "createdAt": "2020-08-05T15:38:03Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/database/FormDatabaseMigratorTest.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.odk.collect.android.database;\n+\n+import android.content.ContentValues;\n+import android.database.Cursor;\n+import android.database.sqlite.SQLiteDatabase;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.odk.collect.android.database.DatabaseConstants.FORMS_TABLE_NAME;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.AUTO_DELETE;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.AUTO_SEND;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.BASE64_RSA_PUBLIC_KEY;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.DATE;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.DESCRIPTION;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.DISPLAY_NAME;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_FILE_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_MEDIA_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.GEOMETRY_XPATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JRCACHE_FILE_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JR_FORM_ID;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JR_VERSION;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.LANGUAGE;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.MD5_HASH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.SUBMISSION_URI;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns._ID;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class FormDatabaseMigratorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04b011c62fecf8405bae770af12001153eb967d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA4MjgzMg==", "bodyText": "I know you've been trying to kill those tests for a long time. \ud83d\ude02 They were added after we had several significant bugs related to onDowngrade. I think the structure and test are good but that it would be good to also downgrade from a fictitious high version with an extra and missing column to avoid regressions there. We can assume we wouldn't touch onDowngrade anymore but it's hard to reason about and tempting to try to improve.", "url": "https://github.com/getodk/collect/pull/4013#discussion_r466082832", "createdAt": "2020-08-06T00:51:59Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/database/FormDatabaseMigratorTest.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.odk.collect.android.database;\n+\n+import android.content.ContentValues;\n+import android.database.Cursor;\n+import android.database.sqlite.SQLiteDatabase;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.odk.collect.android.database.DatabaseConstants.FORMS_TABLE_NAME;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.AUTO_DELETE;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.AUTO_SEND;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.BASE64_RSA_PUBLIC_KEY;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.DATE;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.DESCRIPTION;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.DISPLAY_NAME;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_FILE_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_MEDIA_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.GEOMETRY_XPATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JRCACHE_FILE_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JR_FORM_ID;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JR_VERSION;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.LANGUAGE;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.MD5_HASH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.SUBMISSION_URI;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns._ID;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class FormDatabaseMigratorTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgxODY4Mg=="}, "originalCommit": {"oid": "c04b011c62fecf8405bae770af12001153eb967d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI4MjU2Ng==", "bodyText": "haha yeah totally happy to add more. The old tests were failing and needed rewritten anyway. I'll add a couple of downgrade tests (one with extra and one with missing columns).", "url": "https://github.com/getodk/collect/pull/4013#discussion_r466282566", "createdAt": "2020-08-06T09:31:57Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/database/FormDatabaseMigratorTest.java", "diffHunk": "@@ -0,0 +1,114 @@\n+package org.odk.collect.android.database;\n+\n+import android.content.ContentValues;\n+import android.database.Cursor;\n+import android.database.sqlite.SQLiteDatabase;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.odk.collect.android.database.DatabaseConstants.FORMS_TABLE_NAME;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.AUTO_DELETE;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.AUTO_SEND;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.BASE64_RSA_PUBLIC_KEY;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.DATE;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.DESCRIPTION;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.DISPLAY_NAME;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_FILE_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_MEDIA_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.GEOMETRY_XPATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JRCACHE_FILE_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JR_FORM_ID;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JR_VERSION;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.LANGUAGE;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.MD5_HASH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.SUBMISSION_URI;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns._ID;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class FormDatabaseMigratorTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTgxODY4Mg=="}, "originalCommit": {"oid": "c04b011c62fecf8405bae770af12001153eb967d"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMTEwODk0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/database/FormDatabaseMigrator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwMDo0MDoyN1rOG8fQdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQwOTozMjoyNVrOG8rqRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3OTg2Mw==", "bodyText": "Move break down to allow upgrades from versions other than 8.", "url": "https://github.com/getodk/collect/pull/4013#discussion_r466079863", "createdAt": "2020-08-06T00:40:27Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/database/FormDatabaseMigrator.java", "diffHunk": "@@ -45,97 +24,51 @@\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JR_FORM_ID;\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JR_VERSION;\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.LANGUAGE;\n-import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.LAST_DETECTED_FORM_VERSION_HASH;\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.MD5_HASH;\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.SUBMISSION_URI;\n \n-/**\n- * This class helps open, create, and upgrade the database file.\n- */\n-public class FormsDatabaseHelper extends SQLiteOpenHelper {\n-    private static final String DATABASE_NAME = \"forms.db\";\n-    public static final String FORMS_TABLE_NAME = \"forms\";\n-\n-    public static final int DATABASE_VERSION = 9;\n+public class FormDatabaseMigrator {\n \n     private static final String[] COLUMN_NAMES_V7 = {_ID, DISPLAY_NAME, DESCRIPTION,\n             JR_FORM_ID, JR_VERSION, MD5_HASH, DATE, FORM_MEDIA_PATH, FORM_FILE_PATH, LANGUAGE,\n             SUBMISSION_URI, BASE64_RSA_PUBLIC_KEY, JRCACHE_FILE_PATH, AUTO_SEND, AUTO_DELETE,\n-            LAST_DETECTED_FORM_VERSION_HASH};\n-\n-    private static final String[] COLUMN_NAMES_V9 = {_ID, DISPLAY_NAME, DESCRIPTION,\n-            JR_FORM_ID, JR_VERSION, MD5_HASH, DATE, FORM_MEDIA_PATH, FORM_FILE_PATH, LANGUAGE,\n-            SUBMISSION_URI, BASE64_RSA_PUBLIC_KEY, JRCACHE_FILE_PATH, AUTO_SEND, AUTO_DELETE,\n-            LAST_DETECTED_FORM_VERSION_HASH, DELETED};\n-\n-    public static final String[] CURRENT_VERSION_COLUMN_NAMES = COLUMN_NAMES_V9;\n+            \"lastDetectedFormVersionHash\"};\n \n     // These exist in database versions 2 and 3, but not in 4...\n     private static final String TEMP_FORMS_TABLE_NAME = \"forms_v4\";\n     private static final String MODEL_VERSION = \"modelVersion\";\n \n-    private static boolean isDatabaseBeingMigrated;\n-\n-    public FormsDatabaseHelper() {\n-        super(new DatabaseContext(new StoragePathProvider().getDirPath(StorageSubdirectory.METADATA)), DATABASE_NAME, null, DATABASE_VERSION);\n-    }\n-\n-    public static String getDatabasePath() {\n-        return new StoragePathProvider().getDirPath(StorageSubdirectory.METADATA) + File.separator + DATABASE_NAME;\n-    }\n-\n-    @Override\n     public void onCreate(SQLiteDatabase db) {\n         createFormsTableV9(db);\n     }\n \n     @SuppressWarnings({\"checkstyle:FallThrough\"})\n-    @Override\n-    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n-        try {\n-            Timber.i(\"Upgrading database from version %d to %d\", oldVersion, newVersion);\n-\n-            switch (oldVersion) {\n-                case 1:\n-                    upgradeToVersion2(db);\n-                case 2:\n-                case 3:\n-                    upgradeToVersion4(db, oldVersion);\n-                case 4:\n-                    upgradeToVersion5(db);\n-                case 5:\n-                    upgradeToVersion6(db);\n-                case 6:\n-                    upgradeToVersion7(db);\n-                case 7:\n-                    upgradeToVersion8(db);\n-                    break;\n-                case 8:\n-                    upgradeToVersion9(db);\n-                default:\n-                    Timber.i(\"Unknown version %s\", oldVersion);\n-            }\n-\n-            Timber.i(\"Upgrading database from version %d to %d completed with success.\", oldVersion, newVersion);\n-            isDatabaseBeingMigrated = false;\n-        } catch (SQLException e) {\n-            isDatabaseBeingMigrated = false;\n-            throw e;\n+    public void onUpgrade(SQLiteDatabase db, int oldVersion) throws SQLException {\n+        switch (oldVersion) {\n+            case 1:\n+                upgradeToVersion2(db);\n+            case 2:\n+            case 3:\n+                upgradeToVersion4(db, oldVersion);\n+            case 4:\n+                upgradeToVersion5(db);\n+            case 5:\n+                upgradeToVersion6(db);\n+            case 6:\n+                upgradeToVersion7(db);\n+            case 7:\n+                upgradeToVersion8(db);\n+                break;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c04b011c62fecf8405bae770af12001153eb967d"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjI4MzA3OQ==", "bodyText": "Oh damn. Yes. I might try and add some tests to drive this out.", "url": "https://github.com/getodk/collect/pull/4013#discussion_r466283079", "createdAt": "2020-08-06T09:32:25Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/database/FormDatabaseMigrator.java", "diffHunk": "@@ -45,97 +24,51 @@\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JR_FORM_ID;\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JR_VERSION;\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.LANGUAGE;\n-import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.LAST_DETECTED_FORM_VERSION_HASH;\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.MD5_HASH;\n import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.SUBMISSION_URI;\n \n-/**\n- * This class helps open, create, and upgrade the database file.\n- */\n-public class FormsDatabaseHelper extends SQLiteOpenHelper {\n-    private static final String DATABASE_NAME = \"forms.db\";\n-    public static final String FORMS_TABLE_NAME = \"forms\";\n-\n-    public static final int DATABASE_VERSION = 9;\n+public class FormDatabaseMigrator {\n \n     private static final String[] COLUMN_NAMES_V7 = {_ID, DISPLAY_NAME, DESCRIPTION,\n             JR_FORM_ID, JR_VERSION, MD5_HASH, DATE, FORM_MEDIA_PATH, FORM_FILE_PATH, LANGUAGE,\n             SUBMISSION_URI, BASE64_RSA_PUBLIC_KEY, JRCACHE_FILE_PATH, AUTO_SEND, AUTO_DELETE,\n-            LAST_DETECTED_FORM_VERSION_HASH};\n-\n-    private static final String[] COLUMN_NAMES_V9 = {_ID, DISPLAY_NAME, DESCRIPTION,\n-            JR_FORM_ID, JR_VERSION, MD5_HASH, DATE, FORM_MEDIA_PATH, FORM_FILE_PATH, LANGUAGE,\n-            SUBMISSION_URI, BASE64_RSA_PUBLIC_KEY, JRCACHE_FILE_PATH, AUTO_SEND, AUTO_DELETE,\n-            LAST_DETECTED_FORM_VERSION_HASH, DELETED};\n-\n-    public static final String[] CURRENT_VERSION_COLUMN_NAMES = COLUMN_NAMES_V9;\n+            \"lastDetectedFormVersionHash\"};\n \n     // These exist in database versions 2 and 3, but not in 4...\n     private static final String TEMP_FORMS_TABLE_NAME = \"forms_v4\";\n     private static final String MODEL_VERSION = \"modelVersion\";\n \n-    private static boolean isDatabaseBeingMigrated;\n-\n-    public FormsDatabaseHelper() {\n-        super(new DatabaseContext(new StoragePathProvider().getDirPath(StorageSubdirectory.METADATA)), DATABASE_NAME, null, DATABASE_VERSION);\n-    }\n-\n-    public static String getDatabasePath() {\n-        return new StoragePathProvider().getDirPath(StorageSubdirectory.METADATA) + File.separator + DATABASE_NAME;\n-    }\n-\n-    @Override\n     public void onCreate(SQLiteDatabase db) {\n         createFormsTableV9(db);\n     }\n \n     @SuppressWarnings({\"checkstyle:FallThrough\"})\n-    @Override\n-    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {\n-        try {\n-            Timber.i(\"Upgrading database from version %d to %d\", oldVersion, newVersion);\n-\n-            switch (oldVersion) {\n-                case 1:\n-                    upgradeToVersion2(db);\n-                case 2:\n-                case 3:\n-                    upgradeToVersion4(db, oldVersion);\n-                case 4:\n-                    upgradeToVersion5(db);\n-                case 5:\n-                    upgradeToVersion6(db);\n-                case 6:\n-                    upgradeToVersion7(db);\n-                case 7:\n-                    upgradeToVersion8(db);\n-                    break;\n-                case 8:\n-                    upgradeToVersion9(db);\n-                default:\n-                    Timber.i(\"Unknown version %s\", oldVersion);\n-            }\n-\n-            Timber.i(\"Upgrading database from version %d to %d completed with success.\", oldVersion, newVersion);\n-            isDatabaseBeingMigrated = false;\n-        } catch (SQLException e) {\n-            isDatabaseBeingMigrated = false;\n-            throw e;\n+    public void onUpgrade(SQLiteDatabase db, int oldVersion) throws SQLException {\n+        switch (oldVersion) {\n+            case 1:\n+                upgradeToVersion2(db);\n+            case 2:\n+            case 3:\n+                upgradeToVersion4(db, oldVersion);\n+            case 4:\n+                upgradeToVersion5(db);\n+            case 5:\n+                upgradeToVersion6(db);\n+            case 6:\n+                upgradeToVersion7(db);\n+            case 7:\n+                upgradeToVersion8(db);\n+                break;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjA3OTg2Mw=="}, "originalCommit": {"oid": "c04b011c62fecf8405bae770af12001153eb967d"}, "originalPosition": 135}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3262, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}