{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0NjQ4Njk3", "number": 4233, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMTo0MjoxNVrOE7gccA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMTo0MjozNVrOE7gc6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODMzMDA4OnYy", "diffSide": "LEFT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/instrumented/utilities/CustomSQLiteQueryExecutionTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMTo0MjoxNVrOH3MXUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMTo0MjoxNVrOH3MXUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYzNjMwNw==", "bodyText": "This was causing problems as the path it would get would be determined when the class was loaded.", "url": "https://github.com/getodk/collect/pull/4233#discussion_r527636307", "createdAt": "2020-11-20T11:42:15Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/instrumented/utilities/CustomSQLiteQueryExecutionTest.java", "diffHunk": "@@ -20,30 +20,29 @@\n import android.database.Cursor;\n import android.database.sqlite.SQLiteDatabase;\n \n-import androidx.test.rule.GrantPermissionRule;\n import androidx.test.ext.junit.runners.AndroidJUnit4;\n+import androidx.test.rule.GrantPermissionRule;\n \n-import org.junit.Before;\n import org.junit.Rule;\n import org.junit.Test;\n import org.junit.rules.RuleChain;\n import org.junit.runner.RunWith;\n-import org.odk.collect.android.storage.StoragePathProvider;\n-import org.odk.collect.android.storage.StorageSubdirectory;\n-import org.odk.collect.android.support.ResetStateRule;\n+import org.odk.collect.android.support.RunnableRule;\n import org.odk.collect.android.utilities.CustomSQLiteQueryExecutor;\n \n+import java.io.File;\n+import java.io.IOException;\n+\n import static junit.framework.Assert.assertEquals;\n import static junit.framework.Assert.assertFalse;\n import static junit.framework.Assert.assertTrue;\n \n @RunWith(AndroidJUnit4.class)\n public class CustomSQLiteQueryExecutionTest {\n-    private static final String DATABASE_PATH = new StoragePathProvider().getDirPath(StorageSubdirectory.METADATA) + \"/test.db\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebcb1404ce88c752b511099d28c301eb2c08ecec"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwODMzMTI4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/instrumented/utilities/CustomSQLiteQueryExecutionTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMTo0MjozNVrOH3MYCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQxMTo0MjozNVrOH3MYCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzYzNjQ5MA==", "bodyText": "This is just testing our db helpers so it doesn't need to talk to our \"real\" db.", "url": "https://github.com/getodk/collect/pull/4233#discussion_r527636490", "createdAt": "2020-11-20T11:42:35Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/instrumented/utilities/CustomSQLiteQueryExecutionTest.java", "diffHunk": "@@ -53,14 +52,15 @@\n                     Manifest.permission.READ_EXTERNAL_STORAGE,\n                     Manifest.permission.WRITE_EXTERNAL_STORAGE)\n             )\n-            .around(new ResetStateRule());\n-\n-    @Before\n-    public void setUp() {\n-        sqLiteDatabase = SQLiteDatabase.openOrCreateDatabase(DATABASE_PATH, null, null);\n-        dropTable(TEST_TABLE_NAME);\n-        dropTable(TEST_TABLE_NAME_2);\n-    }\n+            .around(new RunnableRule(() -> {\n+                try {\n+                    File dbPath = File.createTempFile(\"test\", \".db\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebcb1404ce88c752b511099d28c301eb2c08ecec"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3177, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}