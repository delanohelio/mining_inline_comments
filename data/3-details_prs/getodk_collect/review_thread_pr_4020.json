{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NTQ3NzI4", "number": 4020, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo0OToyMFrOEW02YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNDowNTozN1rOEblmHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzcwMDE2OnYy", "diffSide": "LEFT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/settings/FormManagementSettingsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo0OToyMFrOG-R3JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo0OToyMFrOG-R3JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1NzU0MA==", "bodyText": "It ended up being a lot simpler to move a bunch of the testing of these preferences into the fragment tests.", "url": "https://github.com/getodk/collect/pull/4020#discussion_r467957540", "createdAt": "2020-08-10T14:49:20Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/settings/FormManagementSettingsTest.java", "diffHunk": "@@ -116,22 +116,6 @@ public void whenPreviouslyDownloadedOnlyEnabled_checkingAutoDownload_downloadsUp\n                 .assertAndDismissNotification(\"ODK Collect\", \"ODK auto-download results\", \"Success\");\n     }\n \n-    @Test\n-    public void whenGoogleDriveUsingAsServer_disablesPrefsAndOnlyAllowsManualUpdates() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b4b6099ae62b222190a42a51a9e597cb1f521e4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzcxNDA3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/preferences/FormManagementPreferences.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo1MjowOVrOG-R_kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo1MjowOVrOG-R_kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk1OTY5OA==", "bodyText": "To me it feels a lot simpler for us to simply display the disabled prefs with the appropriate values rather than change the underlying value. This has two advantages:\n\nThe code is more declarative - we don't have to actually change values of other prefs when a pref changes (like changing the value of form update mode when the protocol changes).\nIf the user switches between different options the disabled prefs will revert to the values they had them at before.", "url": "https://github.com/getodk/collect/pull/4020#discussion_r467959698", "createdAt": "2020-08-10T14:52:09Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/FormManagementPreferences.java", "diffHunk": "@@ -91,44 +92,36 @@ public void onSharedPreferenceChanged(SharedPreferences sharedPreferences, Strin\n         if (key.equals(KEY_FORM_UPDATE_MODE) || key.equals(KEY_PERIODIC_FORM_UPDATES_CHECK)) {\n             String newValue = sharedPreferences.getString(KEY_FORM_UPDATE_MODE, null);\n             updateDisabledPrefs(newValue, sharedPreferences.getString(KEY_PROTOCOL, null));\n-\n-            Preference preference = findPreference(KEY_FORM_UPDATE_MODE);\n-            preference.setSummary(((ListPreference) preference).getEntry());\n         }\n     }\n \n     private void setupFormUpdateMode() {\n         SharedPreferences sharedPreferences = preferencesProvider.getGeneralSharedPreferences();\n         updateDisabledPrefs(sharedPreferences.getString(KEY_FORM_UPDATE_MODE, null), sharedPreferences.getString(KEY_PROTOCOL, null));\n-\n-        Preference formUpdateMode = findPreference(KEY_FORM_UPDATE_MODE);\n-        formUpdateMode.setSummary(((ListPreference) formUpdateMode).getEntry());\n     }\n \n     private void updateDisabledPrefs(String formUpdateMode, String protocol) {\n         Preference updateFrequency = findPreference(KEY_PERIODIC_FORM_UPDATES_CHECK);\n         CheckBoxPreference automaticDownload = findPreference(KEY_AUTOMATIC_UPDATE);\n \n         if (Protocol.parse(getActivity(), protocol) == Protocol.GOOGLE) {\n-            findPreference(KEY_FORM_UPDATE_MODE).setEnabled(false);\n-            automaticDownload.setEnabled(false);\n+            displayDisabled(findPreference(KEY_FORM_UPDATE_MODE), getString(R.string.manually));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b4b6099ae62b222190a42a51a9e597cb1f521e4"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMzcxNzExOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/preferences/utilities/PreferencesUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo1Mjo0OFrOG-SBlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxNDo1Mjo0OFrOG-SBlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Nzk2MDIxMw==", "bodyText": "This is clunky but I couldn't find any other way to just display a value in a CheckBoxPreference. You'll see the String version is much simpler.", "url": "https://github.com/getodk/collect/pull/4020#discussion_r467960213", "createdAt": "2020-08-10T14:52:48Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/utilities/PreferencesUtils.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.odk.collect.android.preferences.utilities;\n+\n+import androidx.preference.CheckBoxPreference;\n+import androidx.preference.Preference;\n+\n+public class PreferencesUtils {\n+\n+    private PreferencesUtils() {\n+\n+    }\n+\n+    public static void displayDisabled(CheckBoxPreference preference, boolean displayValue) {\n+        preference.setPersistent(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8b4b6099ae62b222190a42a51a9e597cb1f521e4"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MzYyOTcyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/configure/SettingsUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNDowNTozN1rOHFmoYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxNDowNTozN1rOHFmoYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYzNzg1Ng==", "bodyText": "I was incredibly tempted to add a Settings interface for abstracting away this kind of logic (and shared prefs themselves). This would be in a weird place however as in most places it's pretty simple to just grab the actual pref value to work out what \"state\" we're in. I think if these utils start to grow we can revisit the idea.", "url": "https://github.com/getodk/collect/pull/4020#discussion_r475637856", "createdAt": "2020-08-24T14:05:37Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/configure/SettingsUtils.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.odk.collect.android.configure;\n+\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+\n+import androidx.annotation.NonNull;\n+\n+import org.odk.collect.android.formmanagement.FormUpdateMode;\n+import org.odk.collect.android.preferences.GeneralKeys;\n+import org.odk.collect.android.preferences.Protocol;\n+\n+public class SettingsUtils {\n+\n+    private SettingsUtils() {\n+\n+    }\n+\n+    @NonNull\n+    public static FormUpdateMode getFormUpdateMode(Context context, SharedPreferences generalSharedPreferences) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52f818437284f9383388cc3ce94249d4aaaacf76"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3274, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}