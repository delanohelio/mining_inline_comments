{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTEwMTI1", "number": 3960, "title": "Automatically sync with server when Match Exactly enabled", "bodyText": "Closes #3939\nWhat has been done to verify that this works as intended?\nLots of new tests and played with automatic sync manually on the emulator.\nWhy is this the best possible solution? Were any other approaches considered?\nThe biggest decision here was whether to just use WorkManager as is or include it in our async.Scheduler abstraction. I ended up going with the latter as it means we can write tests for the automatic sync we wouldn't be able to write otherwise  (like those found in MatchExactlyTest). This does mean we end up with a weighty abstraction in TaskSpec. I'm planning the other background jobs to using this as part of #3940.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nAs with previous Match Exactly PRs we're going to skip QA on this and wait until the feature is complete.\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-07-07T16:04:50Z", "url": "https://github.com/getodk/collect/pull/3960", "merged": true, "mergeCommit": {"oid": "3427d650cbddbfea4240fb43392069edec348f64"}, "closed": true, "closedAt": "2020-07-14T17:47:14Z", "author": {"login": "seadowg"}, "timelineItems": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcy6KARgBqjM1MjUxMzEyNDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc05TPegFqTQ0ODMwNjI5OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f41cb140c4c1ffafdc3455423f98c4e1595c39f3", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/f41cb140c4c1ffafdc3455423f98c4e1595c39f3", "committedDate": "2020-07-07T16:02:02Z", "message": "Revise scheduler method names again"}, "afterCommit": {"oid": "5503f0378e425908e0696146515d3bb116ac958b", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/5503f0378e425908e0696146515d3bb116ac958b", "committedDate": "2020-07-08T13:07:16Z", "message": "Only run background jobs when there is network"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "639ebe40456656ec0dc813404274f985c1b5c064", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/639ebe40456656ec0dc813404274f985c1b5c064", "committedDate": "2020-07-08T16:06:13Z", "message": "Fix WorkManager initialization in Robolectric"}, "afterCommit": {"oid": "7d7d19036e63d953fe76abbe8f41608d2972f381", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/7d7d19036e63d953fe76abbe8f41608d2972f381", "committedDate": "2020-07-08T16:21:03Z", "message": "Fix WorkManager initialization in Robolectric"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ba0104fe5dd31defab5aa87cb6e779d1a342a77", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/5ba0104fe5dd31defab5aa87cb6e779d1a342a77", "committedDate": "2020-07-09T12:45:13Z", "message": "Add comment explaining empty method"}, "afterCommit": {"oid": "0f7fb83efea21181eae47691aacd74d358ad3734", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/0f7fb83efea21181eae47691aacd74d358ad3734", "committedDate": "2020-07-09T12:46:18Z", "message": "Add comment explaining empty method"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5fde62f550d9b0dcb76d49c098018b1e56e5902d", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/5fde62f550d9b0dcb76d49c098018b1e56e5902d", "committedDate": "2020-07-10T09:22:08Z", "message": "Make sure manual sync can't start while background one is running"}, "afterCommit": {"oid": "14ec8de341fa689362426ec4c3da9edab7abd006", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/14ec8de341fa689362426ec4c3da9edab7abd006", "committedDate": "2020-07-10T09:35:49Z", "message": "Make sure manual sync can't start while background one is running"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2Mjk5NDg5", "url": "https://github.com/getodk/collect/pull/3960#pullrequestreview-446299489", "createdAt": "2020-07-10T10:35:06Z", "commit": {"oid": "14ec8de341fa689362426ec4c3da9edab7abd006"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDozNTowN1rOGvyiuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDozNTowN1rOGvyiuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc2NDM0Nw==", "bodyText": "I ran into a problem with the audio stuff due to it instantiating a Scheduler so had to do a slight rework. I like the idea of using Supplier instead of an explicit ...Factory or ...Provider type now the new desugaring gives us access to it. We might still need a concrete class for Dagger but everything else should be able to use Supplier.", "url": "https://github.com/getodk/collect/pull/3960#discussion_r452764347", "createdAt": "2020-07-10T10:35:07Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/audio/AudioPlayerViewModel.java", "diffHunk": "@@ -19,10 +19,11 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Queue;\n+import java.util.function.Supplier;\n \n class AudioPlayerViewModel extends ViewModel implements MediaPlayer.OnCompletionListener {\n \n-    private final MediaPlayerFactory mediaPlayerFactory;\n+    private final Supplier<MediaPlayer> mediaPlayerFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14ec8de341fa689362426ec4c3da9edab7abd006"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ2MzAwMTcy", "url": "https://github.com/getodk/collect/pull/3960#pullrequestreview-446300172", "createdAt": "2020-07-10T10:36:17Z", "commit": {"oid": "14ec8de341fa689362426ec4c3da9edab7abd006"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDozNjoxN1rOGvyk8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxMDozNjoxN1rOGvyk8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc2NDkxMw==", "bodyText": "I ran into problems with this blocking clicks in tests locally", "url": "https://github.com/getodk/collect/pull/3960#discussion_r452764913", "createdAt": "2020-07-10T10:36:17Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/MultiClickGuard.java", "diffHunk": "@@ -13,6 +14,10 @@ private MultiClickGuard() {\n \n     // Debounce multiple clicks within the same screen\n     public static boolean allowClick(String className) {\n+        if (test) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14ec8de341fa689362426ec4c3da9edab7abd006"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fe41dcbd9a11a0d55f1701f0294562cfe880e5c", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/3fe41dcbd9a11a0d55f1701f0294562cfe880e5c", "committedDate": "2020-07-13T15:08:16Z", "message": "Add spike implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "985914e7f6fc78d2ea01abc95a2b52c8148d1cf9", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/985914e7f6fc78d2ea01abc95a2b52c8148d1cf9", "committedDate": "2020-07-13T15:08:16Z", "message": "Move WorkManager running lookup to Scheduler\n\nAnd make MatchExactly test work with spike WorkManager implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a2f79a2d37badc123e01386a0a68702df5e4966", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/4a2f79a2d37badc123e01386a0a68702df5e4966", "committedDate": "2020-07-13T15:08:16Z", "message": "Combine Match Exactly tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d8fbceca6ca007891935e36745e39c597c35eb0", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/4d8fbceca6ca007891935e36745e39c597c35eb0", "committedDate": "2020-07-13T15:08:16Z", "message": "Move WorkManager implementation to Scheduler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d20b0a90a6bcbff68329ca4aef55ceeb5223ba7", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/2d20b0a90a6bcbff68329ca4aef55ceeb5223ba7", "committedDate": "2020-07-13T15:08:16Z", "message": "Clean up way task is handed to WorkManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c95984924154af0471149a0398a2e131d6794996", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/c95984924154af0471149a0398a2e131d6794996", "committedDate": "2020-07-13T15:08:17Z", "message": "Update docs for Scheduler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b731e8faba4595a3b9f643b1c1b62c47979a768b", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/b731e8faba4595a3b9f643b1c1b62c47979a768b", "committedDate": "2020-07-13T15:08:17Z", "message": "Make sure disk syncs as part of match exactly sync"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1c285b54182af6208d2ca90c8563b88a4ea2c77", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/d1c285b54182af6208d2ca90c8563b88a4ea2c77", "committedDate": "2020-07-13T15:08:17Z", "message": "Revise scheduler method names again"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1fa6fbf80c07e3ae060713b05332aa3579181b8", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/a1fa6fbf80c07e3ae060713b05332aa3579181b8", "committedDate": "2020-07-13T15:08:17Z", "message": "Only run background jobs when there is network"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86ef2235499978f4be4a8e2085af4fd9cec8bffe", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/86ef2235499978f4be4a8e2085af4fd9cec8bffe", "committedDate": "2020-07-13T15:08:17Z", "message": "Move match exactly sync setup to BackgroundWorkManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f95ab398f7abdf9e5bba24ba7b94a69a2c548566", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/f95ab398f7abdf9e5bba24ba7b94a69a2c548566", "committedDate": "2020-07-13T15:08:17Z", "message": "Make sure sync is cancelled when Match Exactly is disabled"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4d4fd1a073b101cadceb742d514e20f483c7f06", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/a4d4fd1a073b101cadceb742d514e20f483c7f06", "committedDate": "2020-07-13T15:08:17Z", "message": "Isolate disk sync logic behind an interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf78793ef1b5604f1286480671bc953ceeafe152", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/bf78793ef1b5604f1286480671bc953ceeafe152", "committedDate": "2020-07-13T15:08:18Z", "message": "Move testing of of ServerFormDetailsFetcher"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83c79b8d3e49dae89ceac3b99c8892d96a2ac1d9", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/83c79b8d3e49dae89ceac3b99c8892d96a2ac1d9", "committedDate": "2020-07-13T15:08:18Z", "message": "Fix WorkManager initialization in Robolectric"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a5496d866a7f8ce6077c66e325d85f5262b6ac5", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/5a5496d866a7f8ce6077c66e325d85f5262b6ac5", "committedDate": "2020-07-13T15:08:18Z", "message": "Remove unneeded flag\n\nThis was being used to check media files when a form has hadn't changed.\nAs the form download will always go ahead and download the manifest and any\nnew/changed files there was no reason to do this."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9560206a7aded97cfd5b14e6a5944a560fceb289", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/9560206a7aded97cfd5b14e6a5944a560fceb289", "committedDate": "2020-07-13T15:08:18Z", "message": "Disable MultiClickGuard in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "497efa7cdeca900c61375eee9ce0b4fbded048e8", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/497efa7cdeca900c61375eee9ce0b4fbded048e8", "committedDate": "2020-07-13T15:08:18Z", "message": "Fix PMD"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7955726199cfdc5e16461e33b8ca25dc60354fb6", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/7955726199cfdc5e16461e33b8ca25dc60354fb6", "committedDate": "2020-07-13T15:08:18Z", "message": "Use singleton repo to store sync state"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae677c84729793aded41aedc7b9905bc00e30ad6", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/ae677c84729793aded41aedc7b9905bc00e30ad6", "committedDate": "2020-07-13T15:08:18Z", "message": "Show syncing in progress on Fill Blank Form if it's happening the background"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f9dfbc0c4e56ab7d164c6ca3ad097f9f808f0b8", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/6f9dfbc0c4e56ab7d164c6ca3ad097f9f808f0b8", "committedDate": "2020-07-13T15:08:19Z", "message": "Add comment explaining empty method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37c4cdb80a8dba3dbf9088318e27ff707e703cb5", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/37c4cdb80a8dba3dbf9088318e27ff707e703cb5", "committedDate": "2020-07-13T15:08:19Z", "message": "Make sure sync task can't start in the background during manual run"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20b3a1107d212e6eedc70b35788f0175bb543c96", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/20b3a1107d212e6eedc70b35788f0175bb543c96", "committedDate": "2020-07-13T15:08:19Z", "message": "Make sure manual sync can't start while background one is running"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14ec8de341fa689362426ec4c3da9edab7abd006", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/14ec8de341fa689362426ec4c3da9edab7abd006", "committedDate": "2020-07-10T09:35:49Z", "message": "Make sure manual sync can't start while background one is running"}, "afterCommit": {"oid": "20b3a1107d212e6eedc70b35788f0175bb543c96", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/20b3a1107d212e6eedc70b35788f0175bb543c96", "committedDate": "2020-07-13T15:08:19Z", "message": "Make sure manual sync can't start while background one is running"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3NzEwMjYy", "url": "https://github.com/getodk/collect/pull/3960#pullrequestreview-447710262", "createdAt": "2020-07-14T00:50:52Z", "commit": {"oid": "4d8fbceca6ca007891935e36745e39c597c35eb0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQwMDo1MDo1MlrOGw_8Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxNTo1NTo0MVrOGxaM8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAzMjM4Ng==", "bodyText": "No wildcard imports: https://google.github.io/styleguide/javaguide.html#s3.3.1-wildcard-imports\nThis isn't caught by static analysis because it's in another module, right? Perhaps we should make sure all those checks are consistent?", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454032386", "createdAt": "2020-07-14T00:50:52Z", "author": {"login": "lognaturel"}, "path": "async/src/main/java/org/odk/collect/async/CoroutineAndWorkManagerScheduler.kt", "diffHunk": "@@ -1,8 +1,9 @@\n package org.odk.collect.async\n \n-import androidx.work.WorkInfo\n-import androidx.work.WorkManager\n+import android.content.Context\n+import androidx.work.*", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d8fbceca6ca007891935e36745e39c597c35eb0"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAzMjY3Mw==", "bodyText": "Either revert or move above related code.", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454032673", "createdAt": "2020-07-14T00:51:47Z", "author": {"login": "lognaturel"}, "path": "collect_app/build.gradle", "diffHunk": "@@ -256,8 +256,10 @@ dependencies {\n     implementation \"org.slf4j:slf4j-api:2.0.0-alpha0\"\n     implementation \"com.arcao:slf4j-timber:3.1@aar\"\n \n-    implementation \"com.google.zxing:core:3.3.0\" //updating to 3.4.0 requires minSdkVersion >=24 https://github.com/zxing/zxing/releases/tag/zxing-3.4.0\n-    implementation \"com.journeyapps:zxing-android-embedded:3.6.0\" //updating would require minSdkVersion >=24\n+    implementation \"com.google.zxing:core:3.3.0\"\n+    //updating to 3.4.0 requires minSdkVersion >=24 https://github.com/zxing/zxing/releases/tag/zxing-3.4.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d8fbceca6ca007891935e36745e39c597c35eb0"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDAzMjc1NA==", "bodyText": "Either revert or move above", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454032754", "createdAt": "2020-07-14T00:52:05Z", "author": {"login": "lognaturel"}, "path": "collect_app/build.gradle", "diffHunk": "@@ -270,7 +272,8 @@ dependencies {\n     // Dagger:\n     implementation \"com.google.dagger:dagger:${rootProject.daggerVersion}\"\n     annotationProcessor \"com.google.dagger:dagger-compiler:${rootProject.daggerVersion}\"\n-    testAnnotationProcessor \"com.google.dagger:dagger-compiler:${rootProject.daggerVersion}\" // Needed for injection into Robolectric tests\n+    testAnnotationProcessor \"com.google.dagger:dagger-compiler:${rootProject.daggerVersion}\"\n+    // Needed for injection into Robolectric tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d8fbceca6ca007891935e36745e39c597c35eb0"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA5MTA3OA==", "bodyText": "isNotOnDevice?", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454091078", "createdAt": "2020-07-14T04:23:12Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formmanagement/ServerFormDetails.java", "diffHunk": "@@ -28,25 +28,25 @@\n     private String formVersion;\n     private String hash;\n     private String manifestFileHash;\n-    private boolean isNewerFormVersionAvailable;\n-    private boolean areNewerMediaFilesAvailable;\n+    private boolean isNew;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20b3a1107d212e6eedc70b35788f0175bb543c96"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA5MTgxOQ==", "bodyText": "Sounds good. Add a note in the \"state of the union\"?", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454091819", "createdAt": "2020-07-14T04:26:04Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/audio/AudioPlayerViewModel.java", "diffHunk": "@@ -19,10 +19,11 @@\n import java.util.List;\n import java.util.Map;\n import java.util.Queue;\n+import java.util.function.Supplier;\n \n class AudioPlayerViewModel extends ViewModel implements MediaPlayer.OnCompletionListener {\n \n-    private final MediaPlayerFactory mediaPlayerFactory;\n+    private final Supplier<MediaPlayer> mediaPlayerFactory;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mjc2NDM0Nw=="}, "originalCommit": {"oid": "14ec8de341fa689362426ec4c3da9edab7abd006"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDA5NjYwOA==", "bodyText": "stars -> starts?", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454096608", "createdAt": "2020-07-14T04:43:45Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/formmanagement/BlankFormsListViewModelTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package org.odk.collect.android.formmanagement;\n+\n+import androidx.arch.core.executor.testing.InstantTaskExecutorRule;\n+import androidx.lifecycle.LiveData;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.odk.collect.android.preferences.PreferencesProvider;\n+import org.odk.collect.android.support.FakeScheduler;\n+import org.odk.collect.async.Scheduler;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+public class BlankFormsListViewModelTest {\n+\n+    @Rule\n+    public InstantTaskExecutorRule instantTaskExecutorRule = new InstantTaskExecutorRule();\n+\n+    @Test\n+    public void isSyncing_whenRepositoryStartSync_isTrue() {\n+        SyncStatusRepository syncRepository = new SyncStatusRepository();\n+\n+        BlankFormsListViewModel viewModel = new BlankFormsListViewModel(mock(Scheduler.class), syncRepository, mock(ServerFormsSynchronizer.class), mock(PreferencesProvider.class));\n+        LiveData<Boolean> syncing = viewModel.isSyncing();\n+\n+        syncRepository.startSync();\n+        assertThat(syncing.getValue(), is(true));\n+    }\n+\n+    @Test\n+    public void syncWithServer_starsSyncOnRepository() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20b3a1107d212e6eedc70b35788f0175bb543c96"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ1NjMzNg==", "bodyText": "Feels weird that this doesn't also schedule and cancel form upload and download but I assume it'll come.", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454456336", "createdAt": "2020-07-14T15:46:23Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/backgroundwork/BackgroundWorkManager.java", "diffHunk": "@@ -0,0 +1,12 @@\n+package org.odk.collect.android.backgroundwork;\n+\n+public interface BackgroundWorkManager {\n+\n+    boolean isFormUploaderRunning();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20b3a1107d212e6eedc70b35788f0175bb543c96"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDQ2MjcwNg==", "bodyText": "Why not cover a little more ground and have a form-1 with some form version in the repository before the synchronization and then assert that the repository contains the form with the new version? That would better match the level of the delete test below, too.", "url": "https://github.com/getodk/collect/pull/3960#discussion_r454462706", "createdAt": "2020-07-14T15:55:41Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/formmanagement/ServerFormsSynchronizerTest.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package org.odk.collect.android.formmanagement;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.odk.collect.android.forms.Form;\n+import org.odk.collect.android.forms.FormRepository;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import javax.annotation.Nullable;\n+\n+import static java.util.Arrays.asList;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.containsInAnyOrder;\n+import static org.hamcrest.Matchers.empty;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+@SuppressWarnings(\"PMD.DoubleBraceInitialization\")\n+public class ServerFormsSynchronizerTest {\n+\n+    private ServerFormsSynchronizer synchronizer;\n+    private RecordingFormDownloader formDownloader;\n+    private FormRepository formRepository;\n+    private ServerFormsDetailsFetcher serverFormDetailsFetcher;\n+\n+    @Before\n+    public void setup() {\n+        formRepository = new InMemFormRepository();\n+        formDownloader = new RecordingFormDownloader();\n+        serverFormDetailsFetcher = mock(ServerFormsDetailsFetcher.class);\n+\n+        synchronizer = new ServerFormsSynchronizer(serverFormDetailsFetcher, formRepository, formDownloader);\n+    }\n+\n+    @Test\n+    public void downloadsNewForms() throws Exception {\n+        when(serverFormDetailsFetcher.fetchFormDetails()).thenReturn(asList(\n+                new ServerFormDetails(\"form-1\", \"http://example.com/form-1\", null, \"form-1\", \"server\", \"md5:form-1-hash\", null, true, false)\n+        ));\n+\n+        synchronizer.synchronize();\n+        assertThat(formDownloader.getDownloadedForms(), containsInAnyOrder(\"form-1\"));\n+    }\n+\n+    @Test\n+    public void downloadsUpdatedForms() throws Exception {\n+        when(serverFormDetailsFetcher.fetchFormDetails()).thenReturn(asList(\n+                new ServerFormDetails(\"form-1\", \"http://example.com/form-1\", null, \"form-1\", \"server\", \"md5:form-1-hash\", null, false, true)\n+        ));\n+\n+        synchronizer.synchronize();\n+        assertThat(formDownloader.getDownloadedForms(), containsInAnyOrder(\"form-1\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20b3a1107d212e6eedc70b35788f0175bb543c96"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "584c895307bd752c797e25b9b3c8a03716ba7112", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/584c895307bd752c797e25b9b3c8a03716ba7112", "committedDate": "2020-07-14T16:13:34Z", "message": "Fix comment formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79c7cfb0f5031026db057666fdc32ce60fabef77", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/79c7cfb0f5031026db057666fdc32ce60fabef77", "committedDate": "2020-07-14T16:15:52Z", "message": "Rename field"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e3a91c4cb9f7d9d508af85c58fd3b88f6dc1beb", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/9e3a91c4cb9f7d9d508af85c58fd3b88f6dc1beb", "committedDate": "2020-07-14T16:17:37Z", "message": "Correct typo in test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d2900d74ab85cb75b76a1dcfc2e4899f679c8a7", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/4d2900d74ab85cb75b76a1dcfc2e4899f679c8a7", "committedDate": "2020-07-14T16:20:44Z", "message": "Add note to STATE.md about Supplier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e41ded9bb65ebd1be771e4808a3ce7695cf8989d", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/e41ded9bb65ebd1be771e4808a3ce7695cf8989d", "committedDate": "2020-07-14T17:14:36Z", "message": "Fix comment formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzA2Mjk5", "url": "https://github.com/getodk/collect/pull/3960#pullrequestreview-448306299", "createdAt": "2020-07-14T17:15:45Z", "commit": {"oid": "e41ded9bb65ebd1be771e4808a3ce7695cf8989d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2531, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}