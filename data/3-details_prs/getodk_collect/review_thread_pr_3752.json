{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MDQyODU4", "number": 3752, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzowNjoxMFrODtvMBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzowOTozOFrODtvPEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Mjg1NjM5OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/widgets/SelectOneWidgetTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzowNjoxMFrOF_VwKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwOToxMDoxNVrOF_iLpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2MTAwMg==", "bodyText": "I don't understand this test! The test that is introduced should fail or crash at this point and this one passes. I don't understand \"shown\" in its name. This issue is only about the underlying value, not about what is displayed, right? If you were going to test what is displayed, innerText on getChildAt(0) wouldn't make sense because that gives you the linear layout that contains the audio-video-image-text-label view.\nI think you probably want to do something like select the first choice and verify that its value is blank. Again, it should fail or crash in this commit.", "url": "https://github.com/getodk/collect/pull/3752#discussion_r401961002", "createdAt": "2020-04-01T23:06:10Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/widgets/SelectOneWidgetTest.java", "diffHunk": "@@ -104,29 +106,21 @@ public void whenChoicesHaveAudio_logsAudioChoiceEvent() throws Exception {\n                 ))\n                 .build();\n \n-        populateRecyclerView(getActualWidget());\n+        populateRecyclerView(getWidget());\n         verify(analytics).logEvent(\"Prompt\", \"AudioChoice\", \"formAnalyticsID\");\n     }\n \n-    private void overrideDependencyModule() throws Exception {\n-        ReferenceManager referenceManager = setupFakeReferenceManager(REFERENCES);\n-        RobolectricHelpers.overrideAppDependencyModule(new AppDependencyModule() {\n-\n-            @Override\n-            public ReferenceManager providesReferenceManager() {\n-                return referenceManager;\n-            }\n-\n-            @Override\n-            public AudioHelperFactory providesAudioHelperFactory() {\n-                return context -> audioHelper;\n-            }\n+    @Test\n+    public void whenAChoiceIsBlank_itIsShownAsBlank() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6de4003fdcaaccc5c9212499789e382d272990df"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2Mjc1Ng==", "bodyText": "I see from looking at the other commit that you seem to have intentionally introduced a test for a blank value that was intended to pass.", "url": "https://github.com/getodk/collect/pull/3752#discussion_r401962756", "createdAt": "2020-04-01T23:11:29Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/widgets/SelectOneWidgetTest.java", "diffHunk": "@@ -104,29 +106,21 @@ public void whenChoicesHaveAudio_logsAudioChoiceEvent() throws Exception {\n                 ))\n                 .build();\n \n-        populateRecyclerView(getActualWidget());\n+        populateRecyclerView(getWidget());\n         verify(analytics).logEvent(\"Prompt\", \"AudioChoice\", \"formAnalyticsID\");\n     }\n \n-    private void overrideDependencyModule() throws Exception {\n-        ReferenceManager referenceManager = setupFakeReferenceManager(REFERENCES);\n-        RobolectricHelpers.overrideAppDependencyModule(new AppDependencyModule() {\n-\n-            @Override\n-            public ReferenceManager providesReferenceManager() {\n-                return referenceManager;\n-            }\n-\n-            @Override\n-            public AudioHelperFactory providesAudioHelperFactory() {\n-                return context -> audioHelper;\n-            }\n+    @Test\n+    public void whenAChoiceIsBlank_itIsShownAsBlank() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2MTAwMg=="}, "originalCommit": {"oid": "6de4003fdcaaccc5c9212499789e382d272990df"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjE2NDY0Nw==", "bodyText": "Yeah I wanted to check the blank and null cases. It's calling widget.getChoicesList().getChildAt(0) so it is checking what is displayed for that select choice. That being said I agree that isn't really the right test here. I think when I wrote this (a wee while ago) I confused value and label. As you say the \"feature\" we're actually trying to drive out here is that when you select a blank/null value you get a blank/null answer in the widget. Rest assured a forehead has been slapped and this will be changed.", "url": "https://github.com/getodk/collect/pull/3752#discussion_r402164647", "createdAt": "2020-04-02T09:10:15Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/widgets/SelectOneWidgetTest.java", "diffHunk": "@@ -104,29 +106,21 @@ public void whenChoicesHaveAudio_logsAudioChoiceEvent() throws Exception {\n                 ))\n                 .build();\n \n-        populateRecyclerView(getActualWidget());\n+        populateRecyclerView(getWidget());\n         verify(analytics).logEvent(\"Prompt\", \"AudioChoice\", \"formAnalyticsID\");\n     }\n \n-    private void overrideDependencyModule() throws Exception {\n-        ReferenceManager referenceManager = setupFakeReferenceManager(REFERENCES);\n-        RobolectricHelpers.overrideAppDependencyModule(new AppDependencyModule() {\n-\n-            @Override\n-            public ReferenceManager providesReferenceManager() {\n-                return referenceManager;\n-            }\n-\n-            @Override\n-            public AudioHelperFactory providesAudioHelperFactory() {\n-                return context -> audioHelper;\n-            }\n+    @Test\n+    public void whenAChoiceIsBlank_itIsShownAsBlank() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2MTAwMg=="}, "originalCommit": {"oid": "6de4003fdcaaccc5c9212499789e382d272990df"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Mjg2NDE3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/widgets/SelectOneWidgetTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzowOTozOFrOF_V0qQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMzowOTozOFrOF_V0qQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk2MjE1Mw==", "bodyText": "This test would crash without the code change so that's good. But I still don't think it's asserting something that makes sense.", "url": "https://github.com/getodk/collect/pull/3752#discussion_r401962153", "createdAt": "2020-04-01T23:09:38Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/widgets/SelectOneWidgetTest.java", "diffHunk": "@@ -123,6 +123,22 @@ public void whenAChoiceIsBlank_itIsShownAsBlank() {\n         assertThat(innerText(widget.getChoicesList().getChildAt(0)), equalTo(\"\"));\n     }\n \n+    @Test\n+    public void whenAChoiceValueIsNull_itIsShownAsBlank() {\n+        SelectChoice selectChoice = new SelectChoice(); // The two arg constructor protects against null values\n+        selectChoice.setTextID(\"1\");\n+\n+        formEntryPrompt = new MockFormEntryPromptBuilder()\n+                .withSelectChoices(asList(\n+                        selectChoice\n+                ))\n+                .build();\n+\n+        SelectOneWidget widget = getWidget();\n+        populateRecyclerView(widget);\n+        assertThat(innerText(widget.getChoicesList().getChildAt(0)), equalTo(\"\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc65b259fa8436ab39bc20b9c0933f7f7e9bb6a7"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3422, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}