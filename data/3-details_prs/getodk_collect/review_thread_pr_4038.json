{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNDc1NDgy", "number": 4038, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNjo0NTo1OVrOEdTfog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODowMjowOVrOEdVJUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTYzNTU0OnYy", "diffSide": "RIGHT", "path": "async/src/main/java/org/odk/collect/async/CoroutineAndWorkManagerScheduler.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNjo0NTo1OVrOHIYxyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNjo0NTo1OVrOHIYxyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU1NjYxOA==", "bodyText": "This ended up not being needed for anything but will be nice to have in the future I think.", "url": "https://github.com/getodk/collect/pull/4038#discussion_r478556618", "createdAt": "2020-08-27T16:45:59Z", "author": {"login": "seadowg"}, "path": "async/src/main/java/org/odk/collect/async/CoroutineAndWorkManagerScheduler.kt", "diffHunk": "@@ -7,13 +7,20 @@ import java.util.function.Consumer\n import java.util.function.Supplier\n import kotlin.coroutines.CoroutineContext\n \n-class CoroutineAndWorkManagerScheduler(private val foreground: CoroutineContext, private val background: CoroutineContext, private val workManager: WorkManager) : Scheduler {\n+class CoroutineAndWorkManagerScheduler(private val foregroundContext: CoroutineContext, private val backgroundContext: CoroutineContext, private val workManager: WorkManager) : Scheduler {\n \n     constructor(workManager: WorkManager) : this(Dispatchers.Main, Dispatchers.IO, workManager) // Needed for Java construction\n \n     override fun <T> immediate(background: Supplier<T>, foreground: Consumer<T>) {\n-        CoroutineScope(this.foreground).launch {\n-            foreground.accept(withContext(this@CoroutineAndWorkManagerScheduler.background) { background.get() })\n+        CoroutineScope(foregroundContext).launch {\n+            val result = withContext(backgroundContext) { background.get() }\n+            foreground.accept(result)\n+        }\n+    }\n+\n+    override fun immediate(foreground: java.lang.Runnable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a97864df5fc65eb1d3d8a3d8bfcb85dfe437357"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTg2MTk4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/values/strings.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNzo0OToxMFrOHIbAJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxNzo0OToxMFrOHIbAJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODU5MzA2Mw==", "bodyText": "While here, can I ask you to change the resource name. \ud83d\ude48", "url": "https://github.com/getodk/collect/pull/4038#discussion_r478593063", "createdAt": "2020-08-27T17:49:10Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/res/values/strings.xml", "diffHunk": "@@ -695,7 +695,7 @@\n     <string name=\"legacy_custom_server_paths_summary\">Will be removed in a future version. Please use /formList and /submission on your server.</string>\n     <string name=\"experimental\">Experimental</string>\n     <string name=\"match_exactly\">Exactly match server</string>\n-    <string name=\"manually\">Manually</string>\n+    <string name=\"manually\">Manual</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a0cd8785f8e8597c3c06a0d45b28ccd00b07be9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MTkwNjExOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/values/strings.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODowMjowOVrOHIbcXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxODowMjowOVrOHIbcXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYwMDI4Ng==", "bodyText": "How about \"Form update succeeded\" or \"Form update completed successfully\"?", "url": "https://github.com/getodk/collect/pull/4038#discussion_r478600286", "createdAt": "2020-08-27T18:02:09Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/res/values/strings.xml", "diffHunk": "@@ -695,11 +695,12 @@\n     <string name=\"legacy_custom_server_paths_summary\">Will be removed in a future version. Please use /formList and /submission on your server.</string>\n     <string name=\"experimental\">Experimental</string>\n     <string name=\"match_exactly\">Exactly match server</string>\n-    <string name=\"manually\">Manually</string>\n+    <string name=\"manually\">Manual</string>\n     <string name=\"form_update_mode_title\">Blank form update mode</string>\n     <string name=\"previously_downloaded_only\">Previously downloaded forms only</string>\n     <string name=\"form_update_frequency_title\">Automatic update frequency</string>\n     <string name=\"form_update_error\">Form update failed</string>\n     <string name=\"report_to_project_lead\">If you keep having this problem, report it to the person who asked you to collect data.</string>\n     <string name=\"unknown_host_error\">Collect can\\'t reach the server at %s. Did you enter the URL correctly?</string>\n+    <string name=\"form_update_complete\">Form update complete</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a97864df5fc65eb1d3d8a3d8bfcb85dfe437357"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3282, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}