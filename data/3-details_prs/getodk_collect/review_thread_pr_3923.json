{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0MjAzMTcz", "number": 3923, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDowMTozNVrOEGFsbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzowNTo1OFrOERI3rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0ODIwMjA2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/preferences/AggregatePreferencesAdderTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDowMTozNVrOGkrIwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxMzoyODoxNVrOGlFuyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwODY3Mg==", "bodyText": "Hi @seadowg! I was not able to create PreferenceFragmentCompat using Robolectric, and could not think of any other method to test it. I made BasePreferenceFragment extract PreferenceFragmentCompat, as androidx.PreferenceFragment is also deprecated.", "url": "https://github.com/getodk/collect/pull/3923#discussion_r441108672", "createdAt": "2020-06-16T20:01:35Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/test/java/org/odk/collect/android/preferences/AggregatePreferencesAdderTest.java", "diffHunk": "@@ -3,24 +3,27 @@\n import android.preference.PreferenceFragment;\n import android.preference.PreferenceManager;\n \n+import androidx.preference.PreferenceFragmentCompat;\n+import androidx.test.core.app.ApplicationProvider;\n+\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.odk.collect.android.R;\n import org.robolectric.Robolectric;\n import org.robolectric.RobolectricTestRunner;\n-import org.robolectric.RuntimeEnvironment;\n import org.robolectric.shadows.ShadowToast;\n \n import static junit.framework.Assert.assertFalse;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n \n @RunWith(RobolectricTestRunner.class)\n public class AggregatePreferencesAdderTest {\n \n     @Test\n     public void whenPreferencesAreAdded_returnsTrue() {\n-        PreferenceFragment fragment = Robolectric.buildFragment(TestPreferenceFragment.class).create().resume().visible().get();\n+        PreferenceFragmentCompat fragment = mock(PreferenceFragmentCompat.class);\n         AggregatePreferencesAdder loader = new AggregatePreferencesAdder(fragment);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60111976f2a5d2b4310a237ba6c6b06ca53de550"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0MjkxNQ==", "bodyText": "Mocking is fine here I think! You can make the call to addPreferencesFromResource throw a ClassCastException using Mockito's thenThrow.", "url": "https://github.com/getodk/collect/pull/3923#discussion_r441542915", "createdAt": "2020-06-17T13:26:11Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/preferences/AggregatePreferencesAdderTest.java", "diffHunk": "@@ -3,24 +3,27 @@\n import android.preference.PreferenceFragment;\n import android.preference.PreferenceManager;\n \n+import androidx.preference.PreferenceFragmentCompat;\n+import androidx.test.core.app.ApplicationProvider;\n+\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.odk.collect.android.R;\n import org.robolectric.Robolectric;\n import org.robolectric.RobolectricTestRunner;\n-import org.robolectric.RuntimeEnvironment;\n import org.robolectric.shadows.ShadowToast;\n \n import static junit.framework.Assert.assertFalse;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n \n @RunWith(RobolectricTestRunner.class)\n public class AggregatePreferencesAdderTest {\n \n     @Test\n     public void whenPreferencesAreAdded_returnsTrue() {\n-        PreferenceFragment fragment = Robolectric.buildFragment(TestPreferenceFragment.class).create().resume().visible().get();\n+        PreferenceFragmentCompat fragment = mock(PreferenceFragmentCompat.class);\n         AggregatePreferencesAdder loader = new AggregatePreferencesAdder(fragment);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwODY3Mg=="}, "originalCommit": {"oid": "60111976f2a5d2b4310a237ba6c6b06ca53de550"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTU0NDM5NA==", "bodyText": "Oh okay Thanks @seadowg!", "url": "https://github.com/getodk/collect/pull/3923#discussion_r441544394", "createdAt": "2020-06-17T13:28:15Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/test/java/org/odk/collect/android/preferences/AggregatePreferencesAdderTest.java", "diffHunk": "@@ -3,24 +3,27 @@\n import android.preference.PreferenceFragment;\n import android.preference.PreferenceManager;\n \n+import androidx.preference.PreferenceFragmentCompat;\n+import androidx.test.core.app.ApplicationProvider;\n+\n import org.junit.Test;\n import org.junit.runner.RunWith;\n import org.odk.collect.android.R;\n import org.robolectric.Robolectric;\n import org.robolectric.RobolectricTestRunner;\n-import org.robolectric.RuntimeEnvironment;\n import org.robolectric.shadows.ShadowToast;\n \n import static junit.framework.Assert.assertFalse;\n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n \n @RunWith(RobolectricTestRunner.class)\n public class AggregatePreferencesAdderTest {\n \n     @Test\n     public void whenPreferencesAreAdded_returnsTrue() {\n-        PreferenceFragment fragment = Robolectric.buildFragment(TestPreferenceFragment.class).create().resume().visible().get();\n+        PreferenceFragmentCompat fragment = mock(PreferenceFragmentCompat.class);\n         AggregatePreferencesAdder loader = new AggregatePreferencesAdder(fragment);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEwODY3Mg=="}, "originalCommit": {"oid": "60111976f2a5d2b4310a237ba6c6b06ca53de550"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzMxNjk0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/preferences/GeneralPreferencesFragment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDozNjo0OVrOGnjZ1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDozNjo0OVrOGnjZ1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyNzcwMw==", "bodyText": "Now we're doing this I think we should be able to get rid of the AndroidXPreferencesActivity and just start those fragments like everything else. Could you make that happen please?", "url": "https://github.com/getodk/collect/pull/3923#discussion_r444127703", "createdAt": "2020-06-23T10:36:49Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/GeneralPreferencesFragment.java", "diffHunk": "@@ -79,7 +80,7 @@ public boolean onPreferenceClick(Preference preference) {\n                     break;\n             }\n             if (basePreferenceFragment != null) {\n-                getActivity().getFragmentManager()\n+                getActivity().getSupportFragmentManager()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc30c89f1acc9fee3854c5bedd080ba5d81961af"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NzMyMzIwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/activities/FormMapActivityTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxMDozODozM1rOGnjdpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMzozNDo0NlrOGn-D9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyODY3Ng==", "bodyText": "Did you need this?", "url": "https://github.com/getodk/collect/pull/3923#discussion_r444128676", "createdAt": "2020-06-23T10:38:33Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/activities/FormMapActivityTest.java", "diffHunk": "@@ -148,13 +148,15 @@ public MapProvider providesMapProvider() {\n         assertThat(map.wasLatestZoomCallAnimated(), is(false));\n     }\n \n+    @LooperMode(PAUSED)\n     @Test public void tappingOnLayerMenu_opensLayerDialog() {\n-        List<Fragment> fragments = activity.getFragmentManager().getFragments();\n+        List<Fragment> fragments = activity.getSupportFragmentManager().getFragments();\n         assertThat(fragments, not(hasItem(isA(MapsPreferences.class))));\n \n         activity.findViewById(R.id.layer_menu).performClick();\n \n-        fragments = activity.getFragmentManager().getFragments();\n+        activity.getSupportFragmentManager().executePendingTransactions();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc30c89f1acc9fee3854c5bedd080ba5d81961af"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU2NDQ2OQ==", "bodyText": "Yes, the test is failing without it. :/", "url": "https://github.com/getodk/collect/pull/3923#discussion_r444564469", "createdAt": "2020-06-23T23:34:46Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/test/java/org/odk/collect/android/activities/FormMapActivityTest.java", "diffHunk": "@@ -148,13 +148,15 @@ public MapProvider providesMapProvider() {\n         assertThat(map.wasLatestZoomCallAnimated(), is(false));\n     }\n \n+    @LooperMode(PAUSED)\n     @Test public void tappingOnLayerMenu_opensLayerDialog() {\n-        List<Fragment> fragments = activity.getFragmentManager().getFragments();\n+        List<Fragment> fragments = activity.getSupportFragmentManager().getFragments();\n         assertThat(fragments, not(hasItem(isA(MapsPreferences.class))));\n \n         activity.findViewById(R.id.layer_menu).performClick();\n \n-        fragments = activity.getFragmentManager().getFragments();\n+        activity.getSupportFragmentManager().executePendingTransactions();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDEyODY3Ng=="}, "originalCommit": {"oid": "cc30c89f1acc9fee3854c5bedd080ba5d81961af"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTM2NTA2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/preferences/FormMetadataFragment.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTo1MTo0MlrOGoLJsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMDoxNTo0NVrOGoL8IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3ODkzMA==", "bodyText": "Why do you need to do this?", "url": "https://github.com/getodk/collect/pull/3923#discussion_r444778930", "createdAt": "2020-06-24T09:51:42Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/FormMetadataFragment.java", "diffHunk": "@@ -91,6 +91,17 @@ public void denied() {\n         }\n     }\n \n+    @Override\n+    public void onDestroyView() {\n+        emailPreference = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71225c8889d49e9410bd4536c3c2b712a9134c3d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc5MTg0MA==", "bodyText": "I added this just to avoid memory leaks. I'll check once whether it has really some effects or not.", "url": "https://github.com/getodk/collect/pull/3923#discussion_r444791840", "createdAt": "2020-06-24T10:15:45Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/FormMetadataFragment.java", "diffHunk": "@@ -91,6 +91,17 @@ public void denied() {\n         }\n     }\n \n+    @Override\n+    public void onDestroyView() {\n+        emailPreference = null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc3ODkzMA=="}, "originalCommit": {"oid": "71225c8889d49e9410bd4536c3c2b712a9134c3d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTM4NjU3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/preferences/ServerPreferencesFragment.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTo1ODowMlrOGoLXgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQxMjo0MjowM1rOGoQYVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc4MjQ2NA==", "bodyText": "Not sure why you have to create your own dialogs for these preferences (and not just use EditTextPreference)? Have you looked through the docs at https://developer.android.com/guide/topics/ui/settings/ to see if there are other ways of implementing the features there is code for in the dialogs?", "url": "https://github.com/getodk/collect/pull/3923#discussion_r444782464", "createdAt": "2020-06-24T09:58:02Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/ServerPreferencesFragment.java", "diffHunk": "@@ -99,10 +94,46 @@ public static ServerPreferencesFragment newInstance(boolean adminMode) {\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         addPreferencesFromResource(R.xml.server_preferences);\n-\n         initProtocolPrefs();\n     }\n \n+    @Override\n+    public void onDisplayPreferenceDialog(Preference preference) {\n+        if (preference instanceof CustomEditTextPreference) {\n+            switch (preference.getKey()) {\n+                case \"server_url\":\n+                    dialogFragment = ServerUrlEditTextPreferenceDialog.newInstance(preference.getKey());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71225c8889d49e9410bd4536c3c2b712a9134c3d"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg0NTY1Ng==", "bodyText": "EditTextPreference.getEditText() method was removed in androidx.preference as discussed here. That's why I used CustomEditTextPreference. I do see that now that there's an easy way of doing so. I will review my code once again and then will ask for re-review.", "url": "https://github.com/getodk/collect/pull/3923#discussion_r444845656", "createdAt": "2020-06-24T12:06:06Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/ServerPreferencesFragment.java", "diffHunk": "@@ -99,10 +94,46 @@ public static ServerPreferencesFragment newInstance(boolean adminMode) {\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         addPreferencesFromResource(R.xml.server_preferences);\n-\n         initProtocolPrefs();\n     }\n \n+    @Override\n+    public void onDisplayPreferenceDialog(Preference preference) {\n+        if (preference instanceof CustomEditTextPreference) {\n+            switch (preference.getKey()) {\n+                case \"server_url\":\n+                    dialogFragment = ServerUrlEditTextPreferenceDialog.newInstance(preference.getKey());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc4MjQ2NA=="}, "originalCommit": {"oid": "71225c8889d49e9410bd4536c3c2b712a9134c3d"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDg2NDU5Ng==", "bodyText": "Sorry for the redundant code. I removed the CustomEditTextPreference class. I followed this article for creating Reference layer dialog and Reset dialog. I didn't find any better explanation in the docs :(", "url": "https://github.com/getodk/collect/pull/3923#discussion_r444864596", "createdAt": "2020-06-24T12:42:03Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/ServerPreferencesFragment.java", "diffHunk": "@@ -99,10 +94,46 @@ public static ServerPreferencesFragment newInstance(boolean adminMode) {\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         addPreferencesFromResource(R.xml.server_preferences);\n-\n         initProtocolPrefs();\n     }\n \n+    @Override\n+    public void onDisplayPreferenceDialog(Preference preference) {\n+        if (preference instanceof CustomEditTextPreference) {\n+            switch (preference.getKey()) {\n+                case \"server_url\":\n+                    dialogFragment = ServerUrlEditTextPreferenceDialog.newInstance(preference.getKey());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc4MjQ2NA=="}, "originalCommit": {"oid": "71225c8889d49e9410bd4536c3c2b712a9134c3d"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MTM4ODUyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/preferences/PasswordEditTextPreferenceDialog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTo1ODo0MFrOGoLY3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwOTo1ODo0MFrOGoLY3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDc4MjgxNA==", "bodyText": "What is the code in this method doing?", "url": "https://github.com/getodk/collect/pull/3923#discussion_r444782814", "createdAt": "2020-06-24T09:58:40Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/PasswordEditTextPreferenceDialog.java", "diffHunk": "@@ -0,0 +1,54 @@\n+package org.odk.collect.android.preferences;\n+\n+import android.os.Bundle;\n+import android.text.InputFilter;\n+import android.view.MotionEvent;\n+import android.view.View;\n+import android.widget.EditText;\n+\n+import androidx.preference.EditTextPreferenceDialogFragmentCompat;\n+\n+import org.odk.collect.android.preferences.filters.ControlCharacterFilter;\n+import org.odk.collect.android.utilities.SoftKeyboardUtils;\n+\n+public class PasswordEditTextPreferenceDialog extends EditTextPreferenceDialogFragmentCompat implements View.OnTouchListener {\n+\n+    public static PasswordEditTextPreferenceDialog newInstance(String key) {\n+        PasswordEditTextPreferenceDialog fragment = new PasswordEditTextPreferenceDialog();\n+        Bundle b = new Bundle(1);\n+        b.putString(ARG_KEY, key);\n+        fragment.setArguments(b);\n+        return fragment;\n+    }\n+\n+    @Override\n+    protected void onBindDialogView(View view) {\n+        CustomEditTextPreference passwordEditTextPreference = null;\n+        if (getPreference() instanceof CustomEditTextPreference) {\n+            passwordEditTextPreference = (CustomEditTextPreference) getPreference();\n+        }\n+        EditText editText = (EditText) view.findViewById(android.R.id.edit);\n+        editText.setFilters(new InputFilter[]{new ControlCharacterFilter()});\n+\n+        if (passwordEditTextPreference != null) {\n+            passwordEditTextPreference.setOnPreferenceClickListener(preference -> {\n+                editText.requestFocus();\n+                return true;\n+            });\n+        }\n+        super.onBindDialogView(view);\n+    }\n+\n+    @Override\n+    public boolean onTouch(View v, MotionEvent event) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "71225c8889d49e9410bd4536c3c2b712a9134c3d"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5ODA2NTA3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/preferences/ServerPreferencesFragment.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMDo0NToyNFrOGsHh8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxMDo0NToyNFrOGsHh8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODkxMzkwNw==", "bodyText": "Not sure why you need this. If you're getting a leak here lets try to work out what's causing and see if there is a better way to solve it!", "url": "https://github.com/getodk/collect/pull/3923#discussion_r448913907", "createdAt": "2020-07-02T10:45:24Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/ServerPreferencesFragment.java", "diffHunk": "@@ -99,10 +102,20 @@ public static ServerPreferencesFragment newInstance(boolean adminMode) {\n     public void onCreate(Bundle savedInstanceState) {\n         super.onCreate(savedInstanceState);\n         addPreferencesFromResource(R.xml.server_preferences);\n-\n         initProtocolPrefs();\n     }\n \n+    @Override\n+    public void onDestroyView() {\n+        serverUrlPreference = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a66ba4b4efd5eba7f4e2f976c5a72754ac39b97"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2NDA2NTcyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/preferences/MapsPreferences.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxNzowNTo1OFrOG1r9pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQxODoyODozN1rOG1u-Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk0ODAwNQ==", "bodyText": "We should absolutely avoid suppressing lint warnings if they get in our way unless we really need to. Here it's telling us that we should be using this API as they might change it which would mean our code could end up breaking down the line.\nNot sure why we need to do this here and not use the XML attributes like on other preferences screens?", "url": "https://github.com/getodk/collect/pull/3923#discussion_r458948005", "createdAt": "2020-07-22T17:05:58Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/MapsPreferences.java", "diffHunk": "@@ -57,6 +64,23 @@ public static MapsPreferences newInstance(boolean adminMode) {\n         return prefs;\n     }\n \n+    @SuppressLint(\"RestrictedApi\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e9d323aa8078924c3fe8e0cbafcdce34e5c937d"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk5NzMyNg==", "bodyText": "Correct @seadowg! I fixed it. I set the iconSpaceReserved to false in the MapPreference class.", "url": "https://github.com/getodk/collect/pull/3923#discussion_r458997326", "createdAt": "2020-07-22T18:28:37Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/MapsPreferences.java", "diffHunk": "@@ -57,6 +64,23 @@ public static MapsPreferences newInstance(boolean adminMode) {\n         return prefs;\n     }\n \n+    @SuppressLint(\"RestrictedApi\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODk0ODAwNQ=="}, "originalCommit": {"oid": "3e9d323aa8078924c3fe8e0cbafcdce34e5c937d"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3207, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}