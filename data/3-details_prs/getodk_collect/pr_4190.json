{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExNDc2ODky", "number": 4190, "title": "Make audio question record within form entry", "bodyText": "Closes #4186\nBlocked by #4180\nWhat has been done to verify that this works as intended?\nNew tests and verified manually.\nWhy is this the best possible solution? Were any other approaches considered?\nComments inline.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nShould just add the new feature! I think it would be good to have QA play with both internal and external recording (you can switch between them in \"Experimental\" settings). There is a lot that could go wrong with have the recording happen while you answer questions, so I'd love to see if they can break it!\nI'm going to mark this as \"needs testing\" even though it's still a draft so we can find any problems early while reviewing.\nDo we need any specific form for testing your changes? If so, please attach one.\nAny form with audio questions!\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-10-28T11:30:18Z", "url": "https://github.com/getodk/collect/pull/4190", "merged": true, "mergeCommit": {"oid": "e375edf4f47c29566de65572cbaa6079e3b7248f"}, "closed": true, "closedAt": "2020-11-11T10:04:20Z", "author": {"login": "seadowg"}, "timelineItems": {"totalCount": 47, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdY2htvgBqjM5NTIxMzI0MjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbasdYgH2gAyNTExNDc2ODkyOjAyYWY5NDdlNGFiNDA3ZGM5MGEwMDdjMzZiOTVhOWQyNTRmZWQwMGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96928863b6c372d0f4ceafa213c0a126d553248b", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/96928863b6c372d0f4ceafa213c0a126d553248b", "committedDate": "2020-10-28T13:17:53Z", "message": "Add implementation for new methods in ExternalAppRecordingRequester"}, "afterCommit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee", "committedDate": "2020-11-03T10:22:29Z", "message": "Add implementation for new methods in ExternalAppRecordingRequester"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzU5MDQ2", "url": "https://github.com/getodk/collect/pull/4190#pullrequestreview-522359046", "createdAt": "2020-11-03T10:25:08Z", "commit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyNTowOFrOHsocKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyNTowOFrOHsocKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MTk2Mw==", "bodyText": "The thinking here is that collect_app doesn't need to know how to construct AudioRecorderViewModel. It also means we can mock/fake safely in collect_app (which we want to do) without needing to deal with the real constructor or method implementations.", "url": "https://github.com/getodk/collect/pull/4190#discussion_r516561963", "createdAt": "2020-11-03T10:25:08Z", "author": {"login": "seadowg"}, "path": "audiorecorder/src/main/java/org/odk/collect/audiorecorder/recording/AudioRecorderViewModel.kt", "diffHunk": "@@ -1,46 +1,14 @@\n package org.odk.collect.audiorecorder.recording\n \n-import android.app.Application\n-import android.content.Intent\n import androidx.lifecycle.LiveData\n import androidx.lifecycle.ViewModel\n-import androidx.lifecycle.ViewModelProvider\n-import org.odk.collect.audiorecorder.recording.AudioRecorderService.Companion.ACTION_CANCEL\n-import org.odk.collect.audiorecorder.recording.AudioRecorderService.Companion.ACTION_START\n-import org.odk.collect.audiorecorder.recording.AudioRecorderService.Companion.ACTION_STOP\n import java.io.File\n-import javax.inject.Inject\n \n-internal class AudioRecorderViewModel(private val application: Application, private val recordingRepository: RecordingRepository) : ViewModel() {\n-\n-    val recording: LiveData<File?> = recordingRepository.getRecording()\n-\n-    fun start() {\n-        application.startService(\n-            Intent(application, AudioRecorderService::class.java).apply { action = ACTION_START }\n-        )\n-    }\n-\n-    fun stop() {\n-        application.startService(\n-            Intent(application, AudioRecorderService::class.java).apply { action = ACTION_STOP }\n-        )\n-    }\n-\n-    fun cancel() {\n-        application.startService(\n-            Intent(application, AudioRecorderService::class.java).apply { action = ACTION_CANCEL }\n-        )\n-    }\n-\n-    fun endSession() {\n-        recordingRepository.clear()\n-    }\n-\n-    class Factory @Inject constructor(private val application: Application, private val recordingRepository: RecordingRepository) : ViewModelProvider.Factory {\n-\n-        override fun <T : ViewModel?> create(modelClass: Class<T>): T {\n-            return AudioRecorderViewModel(application, recordingRepository) as T\n-        }\n-    }\n+abstract class AudioRecorderViewModel : ViewModel() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzU5NjQw", "url": "https://github.com/getodk/collect/pull/4190#pullrequestreview-522359640", "createdAt": "2020-11-03T10:25:54Z", "commit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyNTo1NFrOHsod9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyNTo1NFrOHsod9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MjQyMg==", "bodyText": "Very lazy naming. Couldn't think of anything better.", "url": "https://github.com/getodk/collect/pull/4190#discussion_r516562422", "createdAt": "2020-11-03T10:25:54Z", "author": {"login": "seadowg"}, "path": "audiorecorder/src/main/java/org/odk/collect/audiorecorder/recording/internal/RealAudioRecorderViewModel.kt", "diffHunk": "@@ -0,0 +1,56 @@\n+package org.odk.collect.audiorecorder.recording.internal\n+\n+import android.app.Application\n+import android.content.Intent\n+import androidx.lifecycle.LiveData\n+import androidx.lifecycle.Transformations.map\n+import org.odk.collect.audiorecorder.recording.AudioRecorderViewModel\n+import org.odk.collect.audiorecorder.recording.internal.AudioRecorderService.Companion.ACTION_CANCEL\n+import org.odk.collect.audiorecorder.recording.internal.AudioRecorderService.Companion.ACTION_START\n+import org.odk.collect.audiorecorder.recording.internal.AudioRecorderService.Companion.ACTION_STOP\n+import org.odk.collect.audiorecorder.recording.internal.AudioRecorderService.Companion.EXTRA_SESSION_ID\n+import java.io.File\n+\n+internal class RealAudioRecorderViewModel internal constructor(private val application: Application, private val recordingSession: RecordingSession) : AudioRecorderViewModel() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzYwMjk1", "url": "https://github.com/getodk/collect/pull/4190#pullrequestreview-522360295", "createdAt": "2020-11-03T10:26:47Z", "commit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyNjo0N1rOHsof7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDoyNjo0N1rOHsof7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MjkyNg==", "bodyText": "This felt like a more apt name than Repository", "url": "https://github.com/getodk/collect/pull/4190#discussion_r516562926", "createdAt": "2020-11-03T10:26:47Z", "author": {"login": "seadowg"}, "path": "audiorecorder/src/main/java/org/odk/collect/audiorecorder/recording/internal/RecordingSession.kt", "diffHunk": "@@ -0,0 +1,31 @@\n+package org.odk.collect.audiorecorder.recording.internal\n+\n+import androidx.lifecycle.LiveData\n+import androidx.lifecycle.MutableLiveData\n+import java.io.File\n+\n+class RecordingSession {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzYyOTYx", "url": "https://github.com/getodk/collect/pull/4190#pullrequestreview-522362961", "createdAt": "2020-11-03T10:30:01Z", "commit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDozMDowMVrOHson8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDozMDowMVrOHson8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2NDk3OQ==", "bodyText": "Faking here is nice as we have a clearly defined boundary between the collect_app and audiorecorder and it means the test isn't exposed to any issues that could occur given we're trying to access the mic and using a service in the real implementation.", "url": "https://github.com/getodk/collect/pull/4190#discussion_r516564979", "createdAt": "2020-11-03T10:30:01Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java", "diffHunk": "@@ -0,0 +1,175 @@\n+package org.odk.collect.android.feature.formentry;\n+\n+import android.Manifest;\n+import android.app.Application;\n+\n+import androidx.annotation.NonNull;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.lifecycle.ViewModel;\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.TestDependencies;\n+import org.odk.collect.android.support.TestRuleChain;\n+import org.odk.collect.android.support.pages.FormEndPage;\n+import org.odk.collect.android.support.pages.GeneralSettingsPage;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+import org.odk.collect.android.support.pages.SaveOrIgnoreDialog;\n+import org.odk.collect.audiorecorder.recording.AudioRecorderViewModel;\n+import org.odk.collect.audiorecorder.recording.AudioRecorderViewModelFactory;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.odk.collect.android.support.FileUtils.copyFileFromAssets;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class AudioRecordingTest {\n+\n+    private final FakeAudioRecorderViewModel fakeAudioRecorderViewModel = new FakeAudioRecorderViewModel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzY0ODU1", "url": "https://github.com/getodk/collect/pull/4190#pullrequestreview-522364855", "createdAt": "2020-11-03T10:32:27Z", "commit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDozMjoyOFrOHsothw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDozMjoyOFrOHsothw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2NjQwNw==", "bodyText": "I'd been trying to resist writing an Espresso test due to the feature being isolated within the widget but making recording work inline requires collaboration between a few different things (the widget and the activity for instance) so it started to feel too disjointed just writing tests at the component level.\nI do like where these tests have ended up however as they capture the high level navigation features without having to deal with any of the detail of audio recording or playback.", "url": "https://github.com/getodk/collect/pull/4190#discussion_r516566407", "createdAt": "2020-11-03T10:32:28Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java", "diffHunk": "@@ -0,0 +1,175 @@\n+package org.odk.collect.android.feature.formentry;\n+\n+import android.Manifest;\n+import android.app.Application;\n+\n+import androidx.annotation.NonNull;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.lifecycle.ViewModel;\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.TestDependencies;\n+import org.odk.collect.android.support.TestRuleChain;\n+import org.odk.collect.android.support.pages.FormEndPage;\n+import org.odk.collect.android.support.pages.GeneralSettingsPage;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+import org.odk.collect.android.support.pages.SaveOrIgnoreDialog;\n+import org.odk.collect.audiorecorder.recording.AudioRecorderViewModel;\n+import org.odk.collect.audiorecorder.recording.AudioRecorderViewModelFactory;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.odk.collect.android.support.FileUtils.copyFileFromAssets;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class AudioRecordingTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzY1NzU1", "url": "https://github.com/getodk/collect/pull/4190#pullrequestreview-522365755", "createdAt": "2020-11-03T10:33:41Z", "commit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDozMzo0MlrOHsoweA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDozMzo0MlrOHsoweA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2NzE2MA==", "bodyText": "I think I managed to take this another step in the right direction. A lot of work to do still though!", "url": "https://github.com/getodk/collect/pull/4190#discussion_r516567160", "createdAt": "2020-11-03T10:33:42Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormIndexAnimationHandler.java", "diffHunk": "@@ -10,6 +10,11 @@\n  */\n public class FormIndexAnimationHandler {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzY3MjA5", "url": "https://github.com/getodk/collect/pull/4190#pullrequestreview-522367209", "createdAt": "2020-11-03T10:35:37Z", "commit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDozNTozN1rOHso1IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMDozNTozN1rOHso1IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2ODM1Mw==", "bodyText": "This basically. We could massively simplify AudioWidget's implementation by just speaking to this interface.", "url": "https://github.com/getodk/collect/pull/4190#discussion_r516568353", "createdAt": "2020-11-03T10:35:37Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/ExternalAppRecordingRequester.java", "diffHunk": "@@ -50,4 +52,14 @@ public void denied() {\n             }\n         });\n     }\n+\n+    @Override\n+    public void onIsRecordingChanged(Consumer<Boolean> isRecordingListener) {\n+        isRecordingListener.accept(false);\n+    }\n+\n+    @Override\n+    public void onRecordingAvailable(FormEntryPrompt prompt, Consumer<String> recordingAvailableListener) {\n+        // This could be implemented using the new Activity Result API  once it's stable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3efee1e3b98f74e1bb1d9af439d1ee66adb3ecee"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e4dcb1d11af1570ededa794449288fbf2dd24ad4", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/e4dcb1d11af1570ededa794449288fbf2dd24ad4", "committedDate": "2020-11-06T11:30:13Z", "message": "Delete files on cleanup"}, "afterCommit": {"oid": "b7be3091adbca44b00eb505b45023c2e3643f985", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/b7be3091adbca44b00eb505b45023c2e3643f985", "committedDate": "2020-11-06T11:38:31Z", "message": "Delete files on cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e436ff7295d189ce0ff5e1401367f3b85e68c76d", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/e436ff7295d189ce0ff5e1401367f3b85e68c76d", "committedDate": "2020-11-06T16:16:13Z", "message": "Add testing to ViewModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7f9a48d07db57c27a01c752fc6e9e2c392eba2e", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/b7f9a48d07db57c27a01c752fc6e9e2c392eba2e", "committedDate": "2020-11-06T16:16:13Z", "message": "Start recording without leaving question screen"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f02969d74fddab93cc3489d14a270abb14d02f23", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/f02969d74fddab93cc3489d14a270abb14d02f23", "committedDate": "2020-11-06T16:16:14Z", "message": "Expose abstract class instead of implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c57463eff45c9f90466bd8d36c225350a01af0c3", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/c57463eff45c9f90466bd8d36c225350a01af0c3", "committedDate": "2020-11-06T16:16:14Z", "message": "Initial implementation of inline recording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b0e3a570fd102171a027fdc3116031f996b5933", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/0b0e3a570fd102171a027fdc3116031f996b5933", "committedDate": "2020-11-06T16:16:14Z", "message": "Rework interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8cf2a6ce4c929921cd838d8ad70544ece86450c1", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/8cf2a6ce4c929921cd838d8ad70544ece86450c1", "committedDate": "2020-11-06T16:16:14Z", "message": "Disable buttons on audio widget when recording in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94e14614e9589bde21eb5d96ffd93e89ffb1c952", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/94e14614e9589bde21eb5d96ffd93e89ffb1c952", "committedDate": "2020-11-06T16:16:14Z", "message": "Write failing test for external widget and audio in field list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13aac9ca106aa33dba4fb3f57315d38036d2af92", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/13aac9ca106aa33dba4fb3f57315d38036d2af92", "committedDate": "2020-11-06T16:16:14Z", "message": "Allow external widgets and audio question to work together"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7cc71b60c5c324bc86fde4abdd5e65429954224", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/e7cc71b60c5c324bc86fde4abdd5e65429954224", "committedDate": "2020-11-06T16:16:14Z", "message": "Make sure audio files are cleaned up after recording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f05790fee17f533ee32f96855a77349a0b7b57d6", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/f05790fee17f533ee32f96855a77349a0b7b57d6", "committedDate": "2020-11-06T16:16:14Z", "message": "Simplify FormEntryActivity and FormIndexAnimationHandler communication"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f06af002dd476aec572a6468626c8b3ba2b80ee9", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/f06af002dd476aec572a6468626c8b3ba2b80ee9", "committedDate": "2020-11-06T16:16:15Z", "message": "Add helper"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9ae68ea6743b1b2c978a674e80f69dd4ebb1d18", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/e9ae68ea6743b1b2c978a674e80f69dd4ebb1d18", "committedDate": "2020-11-06T16:16:15Z", "message": "Use fake audio recorder view model in test to prevent timing issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "584fbe01e15ddf7f46a20e850da091365aa33c63", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/584fbe01e15ddf7f46a20e850da091365aa33c63", "committedDate": "2020-11-06T16:16:15Z", "message": "Make sure audio recording cancels when changing screens"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c8cacf468f8d72aaae266e0fc84919294d16eb2", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/0c8cacf468f8d72aaae266e0fc84919294d16eb2", "committedDate": "2020-11-06T16:16:15Z", "message": "Attempt to make screen transition logic a little nicer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d59eec0debd2e8dadc654bc81203996fbb18a99f", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/d59eec0debd2e8dadc654bc81203996fbb18a99f", "committedDate": "2020-11-06T16:16:15Z", "message": "Only show stop recording button when recording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0678ce6d7e46574c04a9610c9fed61f2675b2cc", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/e0678ce6d7e46574c04a9610c9fed61f2675b2cc", "committedDate": "2020-11-06T16:16:15Z", "message": "Display stop button in toolbar"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81b2bd7c51ed4c7a3e88d622be32b0e64763556d", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/81b2bd7c51ed4c7a3e88d622be32b0e64763556d", "committedDate": "2020-11-06T16:16:15Z", "message": "Make sure recording cancels when form is quit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ae04e29f8e8246538a2daccb8c6d8320c58cedd", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/9ae04e29f8e8246538a2daccb8c6d8320c58cedd", "committedDate": "2020-11-06T16:16:16Z", "message": "Add test for createAnswerFile"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1ba5c070e684a013a01bbd325cb45ff0f2dcc85", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/c1ba5c070e684a013a01bbd325cb45ff0f2dcc85", "committedDate": "2020-11-06T16:16:16Z", "message": "Add implementation for new methods in ExternalAppRecordingRequester"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "537c57177002a162b9af2bfee9a290c3f8db1955", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/537c57177002a162b9af2bfee9a290c3f8db1955", "committedDate": "2020-11-06T16:16:16Z", "message": "Move string to correct place"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00ba7eb74322020b2921b634e10314bdc5a5d500", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/00ba7eb74322020b2921b634e10314bdc5a5d500", "committedDate": "2020-11-06T16:16:16Z", "message": "Get rid of unneeded endSession"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c5ce05c98099818ecd59760aa47bab8a8b87679", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/9c5ce05c98099818ecd59760aa47bab8a8b87679", "committedDate": "2020-11-06T16:16:16Z", "message": "Make sure recording status updates correctly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2fdfa0ebec2796b60157d8f0ad71a4ad94ba141", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/a2fdfa0ebec2796b60157d8f0ad71a4ad94ba141", "committedDate": "2020-11-06T16:16:16Z", "message": "Make sure opening hierarchy doesn't break anything"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ccf3335d3df78fd9afbde21b5b7e68a71cb51c9", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/0ccf3335d3df78fd9afbde21b5b7e68a71cb51c9", "committedDate": "2020-11-06T16:16:16Z", "message": "Don't worry about cleaning up files for now"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4db4dfca68200ec4daa47d83ac7d2d111f82c2b1", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/4db4dfca68200ec4daa47d83ac7d2d111f82c2b1", "committedDate": "2020-11-06T16:16:17Z", "message": "Move back to repository pattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b7d55660a925814cdcb15fead33ff9d1f273f61", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/2b7d55660a925814cdcb15fead33ff9d1f273f61", "committedDate": "2020-11-06T16:16:17Z", "message": "Make sure it's safe to call createAnswerFile with the same file multiple times"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e020eab1a3eefa8d6e7ab30d77553a157ee066e", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/2e020eab1a3eefa8d6e7ab30d77553a157ee066e", "committedDate": "2020-11-06T16:16:17Z", "message": "Clean up after recording audio"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0432c9ab68365d7bbc6e51a0745cf58a894aa5a3", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/0432c9ab68365d7bbc6e51a0745cf58a894aa5a3", "committedDate": "2020-11-06T16:16:17Z", "message": "Show progress dialog while saving answer files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a32d0833593570e7b3931e7001b276288ff44fd1", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/a32d0833593570e7b3931e7001b276288ff44fd1", "committedDate": "2020-11-06T16:16:17Z", "message": "Delete files on cleanup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b7be3091adbca44b00eb505b45023c2e3643f985", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/b7be3091adbca44b00eb505b45023c2e3643f985", "committedDate": "2020-11-06T11:38:31Z", "message": "Delete files on cleanup"}, "afterCommit": {"oid": "a32d0833593570e7b3931e7001b276288ff44fd1", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/a32d0833593570e7b3931e7001b276288ff44fd1", "committedDate": "2020-11-06T16:16:17Z", "message": "Delete files on cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86e548247dca95fd93e8982ddc7a1b38622b152b", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/86e548247dca95fd93e8982ddc7a1b38622b152b", "committedDate": "2020-11-09T12:25:12Z", "message": "Fix tests so they drive out file saving after recording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee8b2e27cb119b3b29fec9a1f7a7268b325aa093", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/ee8b2e27cb119b3b29fec9a1f7a7268b325aa093", "committedDate": "2020-11-09T15:49:46Z", "message": "Make sure swiping between screens works during recording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62de68dd605b1a55d1984228ae4708532d9b4a4a", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/62de68dd605b1a55d1984228ae4708532d9b4a4a", "committedDate": "2020-11-09T16:38:59Z", "message": "Rework audio recorder tests to focus on contract"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86f47cb1389b7af5a6c9f3733f4f9270b59ec207", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/86f47cb1389b7af5a6c9f3733f4f9270b59ec207", "committedDate": "2020-11-09T17:23:32Z", "message": "Move fake view model to package so it can use same contract test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NDUwMzgy", "url": "https://github.com/getodk/collect/pull/4190#pullrequestreview-527450382", "createdAt": "2020-11-10T17:41:12Z", "commit": {"oid": "c57463eff45c9f90466bd8d36c225350a01af0c3"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxODo1MzoxOFrOHwq5PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMTo0ODozMlrOHww7Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDc5NjQ3Ng==", "bodyText": "Huh. I think this might actually address https://forum.getodk.org/t/testing-form-on-central-upload-error-a-resource-already-exists/30947? That would be good. @getodk/testers could you please quickly give this a try? On master, submitting All Widgets to Central with the same image file attached twice should fail as in the forum post. I think it will succeed after this change.", "url": "https://github.com/getodk/collect/pull/4190#discussion_r520796476", "createdAt": "2020-11-10T18:53:18Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/saving/FormSaveViewModel.java", "diffHunk": "@@ -321,11 +322,19 @@ public void replaceAnswerFile(String questionIndex, String fileName) {\n \n     @Override\n     public String createAnswerFile(File file) {\n+        String newFileHash = FileUtils.getMd5Hash(file);\n+        String instanceDir = formController.getInstanceFile().getParent();\n+\n+        File[] answerFiles = new File(instanceDir).listFiles();\n+        for (File answerFile : answerFiles) {\n+            if (FileUtils.getMd5Hash(answerFile).equals(newFileHash)) {\n+                return answerFile.getName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b7d55660a925814cdcb15fead33ff9d1f273f61"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwMDk0NQ==", "bodyText": "Should be Repository again.", "url": "https://github.com/getodk/collect/pull/4190#discussion_r520800945", "createdAt": "2020-11-10T18:58:01Z", "author": {"login": "lognaturel"}, "path": "audiorecorder/src/main/java/org/odk/collect/audiorecorder/DaggerSetup.kt", "diffHunk": "@@ -66,7 +67,7 @@ internal open class AudioRecorderDependencyModule {\n \n     @Provides\n     @Singleton\n-    open fun providesRecordingRepository(): RecordingRepository {\n+    open fun providesRecordingSession(): RecordingRepository {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f47cb1389b7af5a6c9f3733f4f9270b59ec207"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4NDcwMg==", "bodyText": "The UI doesn't actually make it possible for multiple sessions to have files associated with them, right? That would mean that more than one recording were started, then stopped, and no cleanup happened?\nAnd in fact, doesn't AudioRecorderService already ensure the file is deleted with cancel?", "url": "https://github.com/getodk/collect/pull/4190#discussion_r520884702", "createdAt": "2020-11-10T21:28:01Z", "author": {"login": "lognaturel"}, "path": "audiorecorder/src/main/java/org/odk/collect/audiorecorder/recording/internal/RecordingRepository.kt", "diffHunk": "@@ -0,0 +1,38 @@\n+package org.odk.collect.audiorecorder.recording.internal\n+\n+import androidx.lifecycle.LiveData\n+import androidx.lifecycle.MutableLiveData\n+import java.io.File\n+\n+class RecordingRepository {\n+\n+    private val _currentSession = MutableLiveData<String?>(null)\n+    val currentSession: LiveData<String?> = _currentSession\n+\n+    private val sessions = mutableMapOf<String, MutableLiveData<File?>>()\n+\n+    fun get(sessionId: String): LiveData<File?> {\n+        return sessions.getOrPut(sessionId) { MutableLiveData(null) }\n+    }\n+\n+    fun start(sessionId: String) {\n+        _currentSession.value = sessionId\n+    }\n+\n+    fun recordingReady(recording: File) {\n+        _currentSession.value?.let {\n+            sessions.getOrPut(it) { MutableLiveData(null) }.value = recording\n+        }\n+\n+        _currentSession.value = null\n+    }\n+\n+    fun clear() {\n+        _currentSession.value = null\n+\n+        sessions.values.forEach {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f47cb1389b7af5a6c9f3733f4f9270b59ec207"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg5NTI1OQ==", "bodyText": ".4a -> m4a (doesn't really matter but might as well)", "url": "https://github.com/getodk/collect/pull/4190#discussion_r520895259", "createdAt": "2020-11-10T21:48:32Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/AudioRecordingTest.java", "diffHunk": "@@ -0,0 +1,157 @@\n+package org.odk.collect.android.feature.formentry;\n+\n+import android.Manifest;\n+import android.app.Application;\n+\n+import androidx.annotation.NonNull;\n+import androidx.lifecycle.ViewModel;\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.TestDependencies;\n+import org.odk.collect.android.support.TestRuleChain;\n+import org.odk.collect.android.support.pages.FormEndPage;\n+import org.odk.collect.android.support.pages.FormEntryPage;\n+import org.odk.collect.android.support.pages.FormHierarchyPage;\n+import org.odk.collect.android.support.pages.GeneralSettingsPage;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+import org.odk.collect.android.support.pages.SaveOrIgnoreDialog;\n+import org.odk.collect.audiorecorder.recording.AudioRecorderViewModelFactory;\n+import org.odk.collect.audiorecorder.testsupport.StubAudioRecorderViewModel;\n+\n+import java.io.File;\n+import java.io.IOException;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.odk.collect.android.support.FileUtils.copyFileFromAssets;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class AudioRecordingTest {\n+\n+    private StubAudioRecorderViewModel stubAudioRecorderViewModel;\n+\n+    public final TestDependencies testDependencies = new TestDependencies() {\n+        @Override\n+        public AudioRecorderViewModelFactory providesAudioRecorderViewModelFactory(Application application) {\n+            return new AudioRecorderViewModelFactory(application) {\n+                @Override\n+                public <T extends ViewModel> T create(@NonNull Class<T> modelClass) {\n+                    if (stubAudioRecorderViewModel == null) {\n+                        try {\n+                            File stubRecording = File.createTempFile(\"test\", \".4a\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86f47cb1389b7af5a6c9f3733f4f9270b59ec207"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NjU3ODU5", "url": "https://github.com/getodk/collect/pull/4190#pullrequestreview-527657859", "createdAt": "2020-11-10T22:25:37Z", "commit": {"oid": "86f47cb1389b7af5a6c9f3733f4f9270b59ec207"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d067f0ad838a0c1b860bc0495a4704e26868e99", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/2d067f0ad838a0c1b860bc0495a4704e26868e99", "committedDate": "2020-11-11T09:32:29Z", "message": "Rename method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "02af947e4ab407dc90a007c36b95a9d254fed00c", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/02af947e4ab407dc90a007c36b95a9d254fed00c", "committedDate": "2020-11-11T09:39:17Z", "message": "Rename file"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2444, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}