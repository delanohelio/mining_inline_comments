{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczODYzNzI4", "number": 3637, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNzozNzowOFrODgd3eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNDo1ODowMVrODjshbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzcwMzYwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/values/strings.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNzozNzowOFrOFqsCAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNzozNzowOFrOFqsCAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMwNTkyMw==", "bodyText": "You can remove this resource and use import_settings instead. In fact, I recommend renaming that resource to configure_via_qr_code.", "url": "https://github.com/getodk/collect/pull/3637#discussion_r380305923", "createdAt": "2020-02-17T17:37:08Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/res/values/strings.xml", "diffHunk": "@@ -506,7 +507,7 @@\n     <string name=\"qrcode_without_passwords\">This QR code does not contain your admin or server passwords. \\n(Tap to add the passwords)</string>\n     <string name=\"qrcode_with_admin_password\">This QR code includes your admin password. Please treat it carefully. \\n(Tap to remove the password)</string>\n     <string name=\"qrcode_with_server_password\">This QR code includes your server password. \\n(Tap to remove the passwords)</string>\n-    <string name=\"import_export_settings\">Configure via QR Code</string>\n+    <string name=\"import_export_settings\">Configure via QR code</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57b7fb49a4559056604d6dc04c2a0479be5424b4"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTY3ODE4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTozODoyMVrOFtCXNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTozODoyMVrOFtCXNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2ODk0OA==", "bodyText": "We have some nice abstractions that you can use in MainMenuPage that will make this test even cleaner.", "url": "https://github.com/getodk/collect/pull/3637#discussion_r382768948", "createdAt": "2020-02-21T19:38:21Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package org.odk.collect.android.settings;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+\n+import androidx.test.espresso.Espresso;\n+import androidx.test.filters.LargeTest;\n+import androidx.test.rule.ActivityTestRule;\n+import androidx.test.runner.AndroidJUnit4;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.Espresso.openActionBarOverflowOrOptionsMenu;\n+import static androidx.test.espresso.action.ViewActions.click;\n+import static androidx.test.espresso.assertion.ViewAssertions.doesNotExist;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+import static androidx.test.platform.app.InstrumentationRegistry.getInstrumentation;\n+\n+@RunWith(AndroidJUnit4.class)\n+@LargeTest\n+public class MainMenuSettingsTest {\n+    @Rule\n+    public ActivityTestRule<MainMenuActivity> activityRule =\n+            new ActivityTestRule<>(MainMenuActivity.class);\n+\n+    @Test\n+    public void configureWithQRCanBeDisabled() {\n+        openActionBarOverflowOrOptionsMenu(getInstrumentation().getTargetContext());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15b3bd956c4d42728296db027c11ad1f411f1e39"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjE2MDQ4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwODozNzozM1rOFt801A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwODozNzozM1rOFt801A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyNjgwNA==", "bodyText": "You can delete this annotation. Google always uses in it examples but we don't split our tests by size so it's not somthing we need!", "url": "https://github.com/getodk/collect/pull/3637#discussion_r383726804", "createdAt": "2020-02-25T08:37:33Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.odk.collect.android.settings;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.pages.AdminSettingsPage;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+import androidx.test.filters.LargeTest;\n+import androidx.test.rule.ActivityTestRule;\n+import androidx.test.runner.AndroidJUnit4;\n+\n+@RunWith(AndroidJUnit4.class)\n+@LargeTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c07e06668e9a698f8b92788be7295b31c0b746a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjE3MjkzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwODo0MToyMlrOFt88bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwODo0MjozMFrOFt8-vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyODc1MQ==", "bodyText": "Pretty much all our tests need permissions granted to run on fresh devices and so the test doesn't get polluted by others (another test bmight disable the QR code configuration for instance) you need to clear state before running the test. To do so you can add this rule chain:\n@Rule\npublic RuleChain copyFormChain = RuleChain\n    .outerRule(GrantPermissionRule.grant(\n        Manifest.permission.READ_EXTERNAL_STORAGE,\n        Manifest.permission.WRITE_EXTERNAL_STORAGE,\n        Manifest.permission.READ_PHONE_STATE\n    ))\n    .around(new ResetStateRule());", "url": "https://github.com/getodk/collect/pull/3637#discussion_r383728751", "createdAt": "2020-02-25T08:41:22Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.odk.collect.android.settings;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.pages.AdminSettingsPage;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+import androidx.test.filters.LargeTest;\n+import androidx.test.rule.ActivityTestRule;\n+import androidx.test.runner.AndroidJUnit4;\n+\n+@RunWith(AndroidJUnit4.class)\n+@LargeTest\n+public class MainMenuSettingsTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c07e06668e9a698f8b92788be7295b31c0b746a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyOTM0Mw==", "bodyText": "Also I think we should call this test MainMenuTest for now", "url": "https://github.com/getodk/collect/pull/3637#discussion_r383729343", "createdAt": "2020-02-25T08:42:30Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/settings/MainMenuSettingsTest.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.odk.collect.android.settings;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.pages.AdminSettingsPage;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+import androidx.test.filters.LargeTest;\n+import androidx.test.rule.ActivityTestRule;\n+import androidx.test.runner.AndroidJUnit4;\n+\n+@RunWith(AndroidJUnit4.class)\n+@LargeTest\n+public class MainMenuSettingsTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzcyODc1MQ=="}, "originalCommit": {"oid": "2c07e06668e9a698f8b92788be7295b31c0b746a"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjIwMDMxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwODo1MDowMlrOFt9Nig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwODo1MDowMlrOFt9Nig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzczMzEzMA==", "bodyText": "This should really be initialized in onCreate as onOptionsItemSelected won't be called until someone clicks on a menu item. This means adminPreferences will have a high likelyhood of being null if someone tries to call it somewhere else.\nI'm guessing this was causing problems in your test? I've got some ideas around fixing that but I'll leave them on the test \ud83d\ude01", "url": "https://github.com/getodk/collect/pull/3637#discussion_r383733130", "createdAt": "2020-02-25T08:50:02Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -357,21 +356,38 @@ protected void onPause() {\n     @Override\n     public boolean onCreateOptionsMenu(Menu menu) {\n         getMenuInflater().inflate(R.menu.main_menu, menu);\n+        qrcodeScannerMenuItem = menu.findItem(R.id.menu_configure_qr_code);\n         return super.onCreateOptionsMenu(menu);\n     }\n \n+    @Override\n+    public boolean onPrepareOptionsMenu(Menu menu) {\n+        qrcodeScannerMenuItem.setVisible(this.getSharedPreferences(AdminPreferencesActivity.ADMIN_PREFERENCES, 0).getBoolean(AdminKeys.KEY_QR_CODE_SCANNER, true));\n+        return super.onPrepareOptionsMenu(menu);\n+    }\n+\n     @Override\n     public boolean onOptionsItemSelected(MenuItem item) {\n+        SharedPreferences adminPreferences = this.getSharedPreferences(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c07e06668e9a698f8b92788be7295b31c0b746a"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjI1MzA2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainActivityTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTowNjowNlrOFt9uEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTowNjowNlrOFt9uEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc0MTQ1OQ==", "bodyText": "I had never seen this test file! Well done on finding it. I think it's good that you've followed the style set by the file but it's a little unusual compared to the tests we'd usually write. Generally we try and be as descriptive as possible in our test names rather than using JavaDoc. For example I would have named your test pressingConfigureQRCode_launchesScanQRCodeActivity. I like the test itself.\nIt also looks like test doesn't set up the application for the MainMenuActivity correctly - this is why you were getting a null adminSharedPreferences. The activity's onCreate has this code:\ntry {\n    new StorageInitializer().createODKDirs();\n} catch (RuntimeException e) {\n    createErrorDialog(e.getMessage(), EXIT);\n    return;\n}\nFor this to work the app's \"storage state\" has to be setup correctly. It wasn't so the catch branch was firing before adminSharedPreferences was initialized. I think it would nice to rework this whole test (which is something I can take a look) so for the moment could you create a new MainMenuActivityTest with your test (iwith a new name and without the javadoc comment). The @Before you need to make sure storage state is setup is:\n@Before\npublic void setup() {\n    ShadowEnvironment.setExternalStorageState(MEDIA_MOUNTED);\n    mainMenuActivity = Robolectric.setupActivity(MainMenuActivity.class);\n}", "url": "https://github.com/getodk/collect/pull/3637#discussion_r383741459", "createdAt": "2020-02-25T09:06:06Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainActivityTest.java", "diffHunk": "@@ -197,4 +200,18 @@ public void manageFilesButtonTest() throws Exception {\n         assertEquals(FileManagerTabs.class.getName(),\n                 shadowIntent.getIntentClass().getName());\n     }\n+\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c07e06668e9a698f8b92788be7295b31c0b746a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NjI2Mzk1OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/ScanQRCodeActivity.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQwOTowOToyOFrOFt91Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQxODoyODoyMFrOFu3C3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc0MzIzOA==", "bodyText": "I like the comment but the \"decorator\" part confused me. Generally I'd think of a decorator adding functionality to an interface. I could totally just be missing something!", "url": "https://github.com/getodk/collect/pull/3637#discussion_r383743238", "createdAt": "2020-02-25T09:09:28Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/ScanQRCodeActivity.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package org.odk.collect.android.activities;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import com.google.zxing.integration.android.IntentIntegrator;\n+import com.google.zxing.integration.android.IntentResult;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.listeners.ActionListener;\n+import org.odk.collect.android.listeners.PermissionListener;\n+import org.odk.collect.android.preferences.AdminSharedPreferences;\n+import org.odk.collect.android.preferences.GeneralSharedPreferences;\n+import org.odk.collect.android.preferences.PreferenceSaver;\n+import org.odk.collect.android.utilities.CompressionUtils;\n+import org.odk.collect.android.utilities.LocaleHelper;\n+import org.odk.collect.android.utilities.PermissionUtils;\n+import org.odk.collect.android.utilities.ToastUtils;\n+\n+import java.io.IOException;\n+import java.util.zip.DataFormatException;\n+\n+import androidx.annotation.Nullable;\n+import timber.log.Timber;\n+\n+// ScanQRCodeActivity uses the decorator pattern to process the results from ScannerWithFlashlightActivity", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c07e06668e9a698f8b92788be7295b31c0b746a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIwODY5OA==", "bodyText": "I guess I was thinking of ScanQRCodeActivity as adding functionality on top of the ScannerWithFlashlightActivity and removing the need to interact with ScannerWithFlashlightActivity directly anymore.\nWould it be more appropriate as Proxy design pattern because ScanQRCodeActivity is wrapping the ScannerWithFlashlightActivity?", "url": "https://github.com/getodk/collect/pull/3637#discussion_r384208698", "createdAt": "2020-02-26T00:23:22Z", "author": {"login": "hypercubestart"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/ScanQRCodeActivity.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package org.odk.collect.android.activities;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import com.google.zxing.integration.android.IntentIntegrator;\n+import com.google.zxing.integration.android.IntentResult;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.listeners.ActionListener;\n+import org.odk.collect.android.listeners.PermissionListener;\n+import org.odk.collect.android.preferences.AdminSharedPreferences;\n+import org.odk.collect.android.preferences.GeneralSharedPreferences;\n+import org.odk.collect.android.preferences.PreferenceSaver;\n+import org.odk.collect.android.utilities.CompressionUtils;\n+import org.odk.collect.android.utilities.LocaleHelper;\n+import org.odk.collect.android.utilities.PermissionUtils;\n+import org.odk.collect.android.utilities.ToastUtils;\n+\n+import java.io.IOException;\n+import java.util.zip.DataFormatException;\n+\n+import androidx.annotation.Nullable;\n+import timber.log.Timber;\n+\n+// ScanQRCodeActivity uses the decorator pattern to process the results from ScannerWithFlashlightActivity", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc0MzIzOA=="}, "originalCommit": {"oid": "2c07e06668e9a698f8b92788be7295b31c0b746a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDY4MDY3MQ==", "bodyText": "I don't think you need to explicitly call out a pattern. I'd change the comment to Initiates barcode scanning and processes its results or something like that.", "url": "https://github.com/getodk/collect/pull/3637#discussion_r384680671", "createdAt": "2020-02-26T18:28:20Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/ScanQRCodeActivity.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package org.odk.collect.android.activities;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import com.google.zxing.integration.android.IntentIntegrator;\n+import com.google.zxing.integration.android.IntentResult;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.listeners.ActionListener;\n+import org.odk.collect.android.listeners.PermissionListener;\n+import org.odk.collect.android.preferences.AdminSharedPreferences;\n+import org.odk.collect.android.preferences.GeneralSharedPreferences;\n+import org.odk.collect.android.preferences.PreferenceSaver;\n+import org.odk.collect.android.utilities.CompressionUtils;\n+import org.odk.collect.android.utilities.LocaleHelper;\n+import org.odk.collect.android.utilities.PermissionUtils;\n+import org.odk.collect.android.utilities.ToastUtils;\n+\n+import java.io.IOException;\n+import java.util.zip.DataFormatException;\n+\n+import androidx.annotation.Nullable;\n+import timber.log.Timber;\n+\n+// ScanQRCodeActivity uses the decorator pattern to process the results from ScannerWithFlashlightActivity", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzc0MzIzOA=="}, "originalCommit": {"oid": "2c07e06668e9a698f8b92788be7295b31c0b746a"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NDIxMjM1OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwODo0ODo1NlrOFvJjsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QwODo0ODo1NlrOFvJjsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDk4Mzk4NA==", "bodyText": "We probably don't need this comment. We'll most likely add tests to it so it'll get out of date fast!", "url": "https://github.com/getodk/collect/pull/3637#discussion_r384983984", "createdAt": "2020-02-27T08:48:56Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package org.odk.collect.android.activities;\n+\n+import android.content.Intent;\n+import android.view.MenuItem;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.robolectric.Robolectric;\n+import org.robolectric.RobolectricTestRunner;\n+import org.robolectric.RuntimeEnvironment;\n+import org.robolectric.fakes.RoboMenuItem;\n+import org.robolectric.shadows.ShadowEnvironment;\n+\n+import static android.os.Environment.MEDIA_MOUNTED;\n+import static junit.framework.Assert.assertEquals;\n+import static org.robolectric.Shadows.shadowOf;\n+\n+/**\n+ * Unit test for checking {@link ScanQRCodeActivity} launched correctly from {@link MainMenuActivity}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54633c30b414f45ae2208102367db195a29ac31c"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NzU2MjA2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNDo1ODowMVrOFvphxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNDo1ODowMVrOFvphxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUwNzc4Mw==", "bodyText": "#3623 adds some nice abstractions for this admin dialog (https://github.com/opendatakit/collect/pull/3623/files#diff-587fa336330bb907832356ee77ed08d1R405). I wasn't sure when each of these two PRs would land and how the conflict would best be dealt with. As luck would have it, they're ready at the same time. Since it's going through quality assurance right now, let's plan on merging it first and then you'll unfortunately have conflicts to fix throughout this class.", "url": "https://github.com/getodk/collect/pull/3637#discussion_r385507783", "createdAt": "2020-02-28T04:58:01Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -445,61 +463,71 @@ public void onClick(DialogInterface dialog, int i) {\n         alertDialog.show();\n     }\n \n-    @Override\n-    protected Dialog onCreateDialog(int id) {\n-        switch (id) {\n-            case PASSWORD_DIALOG:\n+    private Dialog createPasswordDialog(Intent intent) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b8e323370b612120e9e5772d3c2fc6daf574f69"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3479, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}