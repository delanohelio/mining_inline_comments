{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNDQ3MzMy", "number": 4320, "title": "Catch exceptions that might take place during opening uris", "bodyText": "Closes #4319\nWhat has been done to verify that this works as intended?\nI reviewed implemented changes and tested manually opening websites from Collect.\nWhy is this the best possible solution? Were any other approaches considered?\nOpening uris is tricky we were adding tr-catch blocks and looks like we need one more. In this case using try-catch is maybe even better because I removed getPackageName() which might be faulty and might be the cause of the issue.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nIt's a safe fix we could even merge it without testing.\nDo we need any specific form for testing your changes? If so, please attach one.\nNo.\nDoes this change require updates to documentation? If so, please file an issue here and include the link below.\nNo.\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-12-16T21:24:06Z", "url": "https://github.com/getodk/collect/pull/4320", "merged": true, "mergeCommit": {"oid": "eb9381d117eea19216445b427648536ba71960d8"}, "closed": true, "closedAt": "2020-12-17T17:28:59Z", "author": {"login": "grzesiek2010"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdm1erVAH2gAyNTQxNDQ3MzMyOjRiNjUxNDFhYjZlOWUwN2ZmNjk3YWY5OTBkZWRlYzYyMzg3MjQ5MWY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnG7JbgFqTU1NDgyMjMyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4b65141ab6e9e07ff697af990dedec623872491f", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/4b65141ab6e9e07ff697af990dedec623872491f", "committedDate": "2020-12-16T21:04:50Z", "message": "Catch exceptions that might take place during opening uris"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2e9e073628a26179d2bb1856e01ded66f55205d", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/d2e9e073628a26179d2bb1856e01ded66f55205d", "committedDate": "2020-12-16T21:45:05Z", "message": "Normalize uri before using it"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4554e198affbe9c926941557a96c337026c8f3b3", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/4554e198affbe9c926941557a96c337026c8f3b3", "committedDate": "2020-12-16T22:06:00Z", "message": "Added tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d4dde37e52d037c1834b2dd4a9479dc5da7cfb3", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/4d4dde37e52d037c1834b2dd4a9479dc5da7cfb3", "committedDate": "2020-12-16T22:06:02Z", "message": "Fixed code style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjgwMzQ2", "url": "https://github.com/getodk/collect/pull/4320#pullrequestreview-554280346", "createdAt": "2020-12-17T04:57:53Z", "commit": {"oid": "4d4dde37e52d037c1834b2dd4a9479dc5da7cfb3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0NTc5MTE1", "url": "https://github.com/getodk/collect/pull/4320#pullrequestreview-554579115", "createdAt": "2020-12-17T12:58:33Z", "commit": {"oid": "4d4dde37e52d037c1834b2dd4a9479dc5da7cfb3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMjo1ODozM1rOIH0eGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxMzoyMDo1NFrOIH1UGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA3MDYxNg==", "bodyText": "Don't think this needs to extend TestCase.", "url": "https://github.com/getodk/collect/pull/4320#discussion_r545070616", "createdAt": "2020-12-17T12:58:33Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/utilities/CustomTabHelperTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package org.odk.collect.android.utilities;\n+\n+import android.net.Uri;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+\n+import junit.framework.TestCase;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.RobolectricTestRunner;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.verify;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class CustomTabHelperTest extends TestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d4dde37e52d037c1834b2dd4a9479dc5da7cfb3"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTA4NDQ0MQ==", "bodyText": "This verifies that normalizedScheme() is called but there's no guarantee that we'll use the result of that call in our ACTION_VIEW intent. So here I could change uri = uri.normalizeScheme(); in CustomTabHelper to just uri.normalizeScheme(); and the test would still pass.\nWe could test this without the spy by passing in a Uri that would get normalized (like HTTP://www.android.com) and then verifying that we see a normalized version in the resulting intent (using shadowOf(application).getNextStartedActivity()). The complexity here is that we'd need to have the openUriInChromeTabs route fail, so we fall through into the path we want to check. For this we'd need to pull out a component to represent that we could set up to fail.\nThat all seems like a lot of work, but I'd generally say that if something is hard to test it's a sign it needs rework. I'm also not clear on what's happening with the Chrome tab stuff here and why we're doing it.\nAll that said this is a crash fix, so it'd be nice to get into the release, so I don't want my pretentiousness to get in the way too much \ud83d\ude09. Maybe we open another PR for the test, and we can discuss/tweak there?", "url": "https://github.com/getodk/collect/pull/4320#discussion_r545084441", "createdAt": "2020-12-17T13:20:54Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/utilities/CustomTabHelperTest.java", "diffHunk": "@@ -0,0 +1,33 @@\n+package org.odk.collect.android.utilities;\n+\n+import android.net.Uri;\n+\n+import androidx.test.core.app.ApplicationProvider;\n+\n+import junit.framework.TestCase;\n+\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.robolectric.RobolectricTestRunner;\n+\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.verify;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class CustomTabHelperTest extends TestCase {\n+\n+    @Test\n+    public void uriShouldBeNormalized() {\n+        CustomTabHelper customTabHelper = spy(new CustomTabHelper());\n+        doNothing().when(customTabHelper).openUriInChromeTabs(any(), any());\n+        doNothing().when(customTabHelper).openUriInWebView(any(), any());\n+        doNothing().when(customTabHelper).openUriInExternalBrowser(any(), any());\n+\n+        Uri uri = mock(Uri.class);\n+        customTabHelper.openUri(ApplicationProvider.getApplicationContext(), uri);\n+        verify(uri).normalizeScheme();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4d4dde37e52d037c1834b2dd4a9479dc5da7cfb3"}, "originalPosition": 31}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e34c36726c7412ad25359df3bb0688d228dfdc7", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/5e34c36726c7412ad25359df3bb0688d228dfdc7", "committedDate": "2020-12-17T13:34:47Z", "message": "Do not extend TestCase in CustomTabHelperTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0ODIyMzIy", "url": "https://github.com/getodk/collect/pull/4320#pullrequestreview-554822322", "createdAt": "2020-12-17T17:24:19Z", "commit": {"oid": "5e34c36726c7412ad25359df3bb0688d228dfdc7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2380, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}