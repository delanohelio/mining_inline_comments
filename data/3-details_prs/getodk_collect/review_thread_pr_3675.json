{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNzkwODM1", "number": 3675, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTowOTozMlrODlKt9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTowOTozMlrODlKt9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjk5NTExOnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTowOTozMlrOFx5-qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTozMzo0M1rOFx6ytw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3NDQ3Mg==", "bodyText": "So is this a no-op or am I missing something?", "url": "https://github.com/getodk/collect/pull/3675#discussion_r387874472", "createdAt": "2020-03-04T19:09:32Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java", "diffHunk": "@@ -26,12 +26,13 @@\n import dagger.Provides;\n \n import static android.os.Environment.MEDIA_MOUNTED;\n+import static androidx.lifecycle.Lifecycle.State.DESTROYED;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n import static org.robolectric.Shadows.shadowOf;\n import static org.robolectric.annotation.LooperMode.Mode.PAUSED;\n \n-@RunWith(RobolectricTestRunner.class)\n+@RunWith(AndroidJUnit4.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0a1854afe754aff202f6025a66b272f02d66e8f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3NTkzNw==", "bodyText": "I think so. The docs seem to make a distinction http://robolectric.org/androidx_test/. I guess again for me I find it useful to know that this is an \"Android X\" test. Do you think it's confusing?", "url": "https://github.com/getodk/collect/pull/3675#discussion_r387875937", "createdAt": "2020-03-04T19:12:17Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java", "diffHunk": "@@ -26,12 +26,13 @@\n import dagger.Provides;\n \n import static android.os.Environment.MEDIA_MOUNTED;\n+import static androidx.lifecycle.Lifecycle.State.DESTROYED;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n import static org.robolectric.Shadows.shadowOf;\n import static org.robolectric.annotation.LooperMode.Mode.PAUSED;\n \n-@RunWith(RobolectricTestRunner.class)\n+@RunWith(AndroidJUnit4.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3NDQ3Mg=="}, "originalCommit": {"oid": "c0a1854afe754aff202f6025a66b272f02d66e8f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3Njc2MQ==", "bodyText": "It's not a big deal but I'd like to have a sense of when I should explicitly specify a runner or not.", "url": "https://github.com/getodk/collect/pull/3675#discussion_r387876761", "createdAt": "2020-03-04T19:13:57Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java", "diffHunk": "@@ -26,12 +26,13 @@\n import dagger.Provides;\n \n import static android.os.Environment.MEDIA_MOUNTED;\n+import static androidx.lifecycle.Lifecycle.State.DESTROYED;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n import static org.robolectric.Shadows.shadowOf;\n import static org.robolectric.annotation.LooperMode.Mode.PAUSED;\n \n-@RunWith(RobolectricTestRunner.class)\n+@RunWith(AndroidJUnit4.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3NDQ3Mg=="}, "originalCommit": {"oid": "c0a1854afe754aff202f6025a66b272f02d66e8f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3ODE0MA==", "bodyText": "I guess I think for these ones there should always be a runner to show that we're not just using JUnit. It's a little wierd because anything in androidTest automatically uses this runner but that's a really strange concept for anyone used to JUnit (not even Spring does that).", "url": "https://github.com/getodk/collect/pull/3675#discussion_r387878140", "createdAt": "2020-03-04T19:16:26Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java", "diffHunk": "@@ -26,12 +26,13 @@\n import dagger.Provides;\n \n import static android.os.Environment.MEDIA_MOUNTED;\n+import static androidx.lifecycle.Lifecycle.State.DESTROYED;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n import static org.robolectric.Shadows.shadowOf;\n import static org.robolectric.annotation.LooperMode.Mode.PAUSED;\n \n-@RunWith(RobolectricTestRunner.class)\n+@RunWith(AndroidJUnit4.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3NDQ3Mg=="}, "originalCommit": {"oid": "c0a1854afe754aff202f6025a66b272f02d66e8f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg4MTUyNA==", "bodyText": "To summarize: for tests in test that don't use Robolectric, then it's just JUnit and not specifying an explicit runner makes sense. But if they're in androidTest and use the androidx AndroidJUnit4 runner, we should make that explicit even though it's the default because it's a weird default?", "url": "https://github.com/getodk/collect/pull/3675#discussion_r387881524", "createdAt": "2020-03-04T19:22:36Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java", "diffHunk": "@@ -26,12 +26,13 @@\n import dagger.Provides;\n \n import static android.os.Environment.MEDIA_MOUNTED;\n+import static androidx.lifecycle.Lifecycle.State.DESTROYED;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n import static org.robolectric.Shadows.shadowOf;\n import static org.robolectric.annotation.LooperMode.Mode.PAUSED;\n \n-@RunWith(RobolectricTestRunner.class)\n+@RunWith(AndroidJUnit4.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3NDQ3Mg=="}, "originalCommit": {"oid": "c0a1854afe754aff202f6025a66b272f02d66e8f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg4NzQyMQ==", "bodyText": "My gut tells me that's the right thing yeah.", "url": "https://github.com/getodk/collect/pull/3675#discussion_r387887421", "createdAt": "2020-03-04T19:33:00Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java", "diffHunk": "@@ -26,12 +26,13 @@\n import dagger.Provides;\n \n import static android.os.Environment.MEDIA_MOUNTED;\n+import static androidx.lifecycle.Lifecycle.State.DESTROYED;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n import static org.robolectric.Shadows.shadowOf;\n import static org.robolectric.annotation.LooperMode.Mode.PAUSED;\n \n-@RunWith(RobolectricTestRunner.class)\n+@RunWith(AndroidJUnit4.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3NDQ3Mg=="}, "originalCommit": {"oid": "c0a1854afe754aff202f6025a66b272f02d66e8f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg4Nzc5OQ==", "bodyText": "I appreciate your gut for sharing a clear rule to follow. \ud83d\udc4d", "url": "https://github.com/getodk/collect/pull/3675#discussion_r387887799", "createdAt": "2020-03-04T19:33:43Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/activities/MainMenuActivityTest.java", "diffHunk": "@@ -26,12 +26,13 @@\n import dagger.Provides;\n \n import static android.os.Environment.MEDIA_MOUNTED;\n+import static androidx.lifecycle.Lifecycle.State.DESTROYED;\n import static org.hamcrest.MatcherAssert.assertThat;\n import static org.hamcrest.Matchers.equalTo;\n import static org.robolectric.Shadows.shadowOf;\n import static org.robolectric.annotation.LooperMode.Mode.PAUSED;\n \n-@RunWith(RobolectricTestRunner.class)\n+@RunWith(AndroidJUnit4.class)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzg3NDQ3Mg=="}, "originalCommit": {"oid": "c0a1854afe754aff202f6025a66b272f02d66e8f"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3506, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}