{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxODMxNzU2", "number": 3661, "title": "Show that form updates are available with Google Drive as server", "bodyText": "Closes #3048\nWhat has been done to verify that this works as intended?\nTested on Android 9, with multiple forms.\nWhy is this the best possible solution? Were any other approaches considered?\nSince manifest info. or any other useful info is not available, last modified time seemed to be the most reasonable one. And i am using java file system's last modified value to compare because the forms database doesn't update if the md5 hasn't changed, so even if we download the new form, the database's last modified time doesn't update.\nDo we need any specific form for testing your changes? If so, please attach one.\nNo\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-02-29T10:33:24Z", "url": "https://github.com/getodk/collect/pull/3661", "merged": true, "mergeCommit": {"oid": "c417bb95f5ba81cbfd2a74d68abdda43e25ac6d1"}, "closed": true, "closedAt": "2020-07-15T09:09:40Z", "author": {"login": "chidauri"}, "timelineItems": {"totalCount": 24, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQd12QAFqTM3OTM5MjYwMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcw61bfAFqTQ0MTQ3NTQ5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5MzkyNjAz", "url": "https://github.com/getodk/collect/pull/3661#pullrequestreview-379392603", "createdAt": "2020-03-23T12:44:23Z", "commit": {"oid": "cb189cd8c93a54aca9cd6f68ff84b8f96323d413"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjo0NDoyM1rOF6Dtfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMjo1MjozM1rOF6D_nQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyMjUyNg==", "bodyText": "If you already have cursor it's better to read lastModifiedLocal from its DATE column.", "url": "https://github.com/getodk/collect/pull/3661#discussion_r396422526", "createdAt": "2020-03-23T12:44:23Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java", "diffHunk": "@@ -103,4 +115,15 @@ public View getView(int position, View convertView, @NonNull ViewGroup parent) {\n         holder.onBind(items.get(position));\n         return view;\n     }\n+\n+    private boolean isNewVersion(DriveListItem item) {\n+        FormsDao formsDao = new FormsDao();\n+        Cursor cursor = formsDao.getFormsCursorForFormFilePath(Collect.FORMS_PATH + File.separator + item.getName());\n+        if (cursor != null && cursor.getCount() > 0) {\n+            Long lastModifiedLocal = new File(Collect.FORMS_PATH + File.separator + item.getName()).lastModified();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb189cd8c93a54aca9cd6f68ff84b8f96323d413"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyMzQ0NQ==", "bodyText": "I think it's better to use cursor != null && cursor.moveToFirst() like we do in other places. cursor.moveToFirst() will return false if cursor.getCount() <= 0 and make sure you are at the first position.", "url": "https://github.com/getodk/collect/pull/3661#discussion_r396423445", "createdAt": "2020-03-23T12:46:01Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java", "diffHunk": "@@ -103,4 +115,15 @@ public View getView(int position, View convertView, @NonNull ViewGroup parent) {\n         holder.onBind(items.get(position));\n         return view;\n     }\n+\n+    private boolean isNewVersion(DriveListItem item) {\n+        FormsDao formsDao = new FormsDao();\n+        Cursor cursor = formsDao.getFormsCursorForFormFilePath(Collect.FORMS_PATH + File.separator + item.getName());\n+        if (cursor != null && cursor.getCount() > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb189cd8c93a54aca9cd6f68ff84b8f96323d413"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyNTkxMg==", "bodyText": "The view is gone by default but we need to set it here to avoid problem while scrolling when elements are reused am I right?", "url": "https://github.com/getodk/collect/pull/3661#discussion_r396425912", "createdAt": "2020-03-23T12:50:13Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java", "diffHunk": "@@ -76,10 +82,16 @@ void onBind(DriveListItem item) {\n                 Drawable d = ContextCompat.getDrawable(getContext(), R.drawable.form_state_blank);\n                 imageView.setImageDrawable(d);\n                 checkBox.setVisibility(View.VISIBLE);\n+                if (isNewVersion(item)) {\n+                    formUpdateAlert.setVisibility(View.VISIBLE);\n+                } else {\n+                    formUpdateAlert.setVisibility(View.GONE);\n+                }\n             } else {\n                 Drawable d = ContextCompat.getDrawable(getContext(), R.drawable.ic_folder);\n                 imageView.setImageDrawable(d);\n                 checkBox.setVisibility(View.GONE);\n+                formUpdateAlert.setVisibility(View.GONE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb189cd8c93a54aca9cd6f68ff84b8f96323d413"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyNjgwNA==", "bodyText": "If gone is needed at all here (depends on my question below since it;s the same case) I would prefer using ternary operator: formUpdateAlert.setVisibility(isNewVersion(item) ? View.VISIBLE : View.GONE);", "url": "https://github.com/getodk/collect/pull/3661#discussion_r396426804", "createdAt": "2020-03-23T12:51:54Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/adapters/FileArrayAdapter.java", "diffHunk": "@@ -76,10 +82,16 @@ void onBind(DriveListItem item) {\n                 Drawable d = ContextCompat.getDrawable(getContext(), R.drawable.form_state_blank);\n                 imageView.setImageDrawable(d);\n                 checkBox.setVisibility(View.VISIBLE);\n+                if (isNewVersion(item)) {\n+                    formUpdateAlert.setVisibility(View.VISIBLE);\n+                } else {\n+                    formUpdateAlert.setVisibility(View.GONE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb189cd8c93a54aca9cd6f68ff84b8f96323d413"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQyNzE2NQ==", "bodyText": "Why do we need this change?", "url": "https://github.com/getodk/collect/pull/3661#discussion_r396427165", "createdAt": "2020-03-23T12:52:33Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/form_chooser_list_item_text.xml", "diffHunk": "@@ -34,7 +34,7 @@\n \n     <TextView\n         android:id=\"@+id/form_update_alert\"\n-        android:layout_width=\"wrap_content\"\n+        android:layout_width=\"match_parent\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb189cd8c93a54aca9cd6f68ff84b8f96323d413"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3MzAzODg1", "url": "https://github.com/getodk/collect/pull/3661#pullrequestreview-407303885", "createdAt": "2020-05-07T09:31:35Z", "commit": {"oid": "d683e979cc0ed5859a522dd8187cec47aa25870a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOTozMTozNVrOGR2WGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwOTozMTozNVrOGR2WGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTM2OTM2OQ==", "bodyText": "Please revert this change.", "url": "https://github.com/getodk/collect/pull/3661#discussion_r421369369", "createdAt": "2020-05-07T09:31:35Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/google-services.json", "diffHunk": "@@ -15,7 +15,7 @@\n       },\n       \"oauth_client\": [\n         {\n-          \"client_id\": \"640412404956-ag8do5nic02k70qr2k1a0mv3du8222hv.apps.googleusercontent.com\",\n+          \"client_id\": \"329060319550-7dpmv9fnoon5ton9r1b1iqmgjr41okgt.apps.googleusercontent.com\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d683e979cc0ed5859a522dd8187cec47aa25870a"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d683e979cc0ed5859a522dd8187cec47aa25870a", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/d683e979cc0ed5859a522dd8187cec47aa25870a", "committedDate": "2020-05-02T18:24:09Z", "message": "Code Refactoring"}, "afterCommit": {"oid": "285e3210804ab14a49fcba5a64d560c2234821c3", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/285e3210804ab14a49fcba5a64d560c2234821c3", "committedDate": "2020-05-07T15:36:07Z", "message": "check for updated media files"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "285e3210804ab14a49fcba5a64d560c2234821c3", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/285e3210804ab14a49fcba5a64d560c2234821c3", "committedDate": "2020-05-07T15:36:07Z", "message": "check for updated media files"}, "afterCommit": {"oid": "2e2ac402cc0c288a8dfbabfa6f3ec9fbd09e8ec2", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/2e2ac402cc0c288a8dfbabfa6f3ec9fbd09e8ec2", "committedDate": "2020-05-07T15:59:45Z", "message": "check for updated media files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "431caa7c172e43af04cf23e04784e08a94427f74", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/431caa7c172e43af04cf23e04784e08a94427f74", "committedDate": "2020-05-07T16:15:32Z", "message": "show if a form is an update in google drive"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68d5e5de57126fa6996461acebed4da6f2d2017d", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/68d5e5de57126fa6996461acebed4da6f2d2017d", "committedDate": "2020-05-07T16:15:32Z", "message": "Fix pmd issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a10a9d56173fe74971587c37c95b18dc727565d", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/6a10a9d56173fe74971587c37c95b18dc727565d", "committedDate": "2020-05-07T16:15:32Z", "message": "fix for folders"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2a217d6a990836c0614c9b9acbabe71d3f0325c", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/f2a217d6a990836c0614c9b9acbabe71d3f0325c", "committedDate": "2020-05-07T16:15:32Z", "message": "change last modified to use java file system"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dda27e7131a07cc721660f127bb13cc74f0b0301", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/dda27e7131a07cc721660f127bb13cc74f0b0301", "committedDate": "2020-05-07T16:15:32Z", "message": "Code Refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cbd50f1de9184762c08c7462caac62d060c89fc", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/6cbd50f1de9184762c08c7462caac62d060c89fc", "committedDate": "2020-05-07T16:20:06Z", "message": "check for updated media files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe35248e3261e8dd850e64d8b5b90f3f53ce6c4d", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/fe35248e3261e8dd850e64d8b5b90f3f53ce6c4d", "committedDate": "2020-05-07T17:40:25Z", "message": "update forms path"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2e2ac402cc0c288a8dfbabfa6f3ec9fbd09e8ec2", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/2e2ac402cc0c288a8dfbabfa6f3ec9fbd09e8ec2", "committedDate": "2020-05-07T15:59:45Z", "message": "check for updated media files"}, "afterCommit": {"oid": "fe35248e3261e8dd850e64d8b5b90f3f53ce6c4d", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/fe35248e3261e8dd850e64d8b5b90f3f53ce6c4d", "committedDate": "2020-05-07T17:40:25Z", "message": "update forms path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0fa37e99b247f9b1e54603073f6fca0d174dd389", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/0fa37e99b247f9b1e54603073f6fca0d174dd389", "committedDate": "2020-05-08T04:11:40Z", "message": "fix back button behaviour"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adba127c67e942d74473cbd081602c9953dd1dfa", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/adba127c67e942d74473cbd081602c9953dd1dfa", "committedDate": "2020-05-08T05:56:18Z", "message": "refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MjExMzQ1", "url": "https://github.com/getodk/collect/pull/3661#pullrequestreview-408211345", "createdAt": "2020-05-08T12:44:35Z", "commit": {"oid": "adba127c67e942d74473cbd081602c9953dd1dfa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjo0NDozNVrOGSkQzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxMjo0NDozNVrOGSkQzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjEyMTY3OQ==", "bodyText": "What is it for? I think it's not related to this issue.", "url": "https://github.com/getodk/collect/pull/3661#discussion_r422121679", "createdAt": "2020-05-08T12:44:35Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -559,7 +562,7 @@ public void onClick(View v) {\n                     if (folderIdStack.empty()) {\n                         parentId = ROOT_KEY;\n                     } else {\n-                        parentId = folderIdStack.pop();\n+                        parentId = folderIdStack.peek();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adba127c67e942d74473cbd081602c9953dd1dfa"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzNDQ0MzY3", "url": "https://github.com/getodk/collect/pull/3661#pullrequestreview-413444367", "createdAt": "2020-05-18T09:56:31Z", "commit": {"oid": "adba127c67e942d74473cbd081602c9953dd1dfa"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQwOTo1NjozMlrOGWwAig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMDoyNToxMFrOGWw__g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUwODQyNg==", "bodyText": "The cursor should be closed/ You can use try-with-resources for that.", "url": "https://github.com/getodk/collect/pull/3661#discussion_r426508426", "createdAt": "2020-05-18T09:56:32Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -729,47 +739,107 @@ protected void onPostExecute(HashMap<String, Object> results) {\n             }\n         }\n \n-        @SafeVarargs\n-        @Override\n-        protected final void onProgressUpdate(HashMap<String, Object>... values) {\n-            super.onProgressUpdate(values);\n-            List<com.google.api.services.drive.model.File> fileList =\n-                    (List<com.google.api.services.drive.model.File>) values[0]\n-                            .get(FILE_LIST_KEY);\n-            String parentId = (String) values[0].get(PARENT_ID_KEY);\n-            String currentDir = (String) values[0].get(CURRENT_ID_KEY);\n-\n-            List<DriveListItem> dirs = new ArrayList<>();\n-            List<DriveListItem> forms = new ArrayList<>();\n-\n-            for (com.google.api.services.drive.model.File f : fileList) {\n-                String type = f.getMimeType();\n-                switch (type) {\n-                    case \"application/xml\":\n-                    case \"text/xml\":\n-                    case \"application/xhtml\":\n-                    case \"text/xhtml\":\n-                    case \"application/xhtml+xml\":\n-                        forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.FILE, f.getId(), currentDir));\n-                        break;\n-                    case \"application/vnd.google-apps.folder\":\n-                        dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.DIR, f.getId(), parentId));\n-                        break;\n-                    default:\n-                        // skip the rest of the files\n-                        break;\n+    }\n+\n+    private void filterForms(HashMap<String, Object> pageDetails) {\n+        List<com.google.api.services.drive.model.File> fileList =\n+                (List<com.google.api.services.drive.model.File>) pageDetails.get(FILE_LIST_KEY);\n+        String parentId = (String) pageDetails.get(PARENT_ID_KEY);\n+        String currentDir = (String) pageDetails.get(CURRENT_ID_KEY);\n+\n+        List<DriveListItem> dirs = new ArrayList<>();\n+        List<DriveListItem> forms = new ArrayList<>();\n+\n+        for (com.google.api.services.drive.model.File f : fileList) {\n+            String type = f.getMimeType();\n+            switch (type) {\n+                case \"application/xml\":\n+                case \"text/xml\":\n+                case \"application/xhtml\":\n+                case \"text/xhtml\":\n+                case \"application/xhtml+xml\":\n+                    forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.FILE, f.getId(), currentDir));\n+                    break;\n+                case \"application/vnd.google-apps.folder\":\n+                    dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.DIR, f.getId(), parentId));\n+                    break;\n+                default:\n+                    // skip the rest of the files\n+                    break;\n+            }\n+        }\n+        Collections.sort(dirs);\n+        Collections.sort(forms);\n+        driveList.addAll(dirs);\n+        driveList.addAll(forms);\n+        checkFormUpdates();\n+    }\n+\n+    private void checkFormUpdates() {\n+        for (DriveListItem item: driveList) {\n+            if (item.getType() == DriveListItem.FILE) {\n+                if (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item)) {\n+                    item.setNewerVersion(true);\n                 }\n             }\n-            Collections.sort(dirs);\n-            Collections.sort(forms);\n-            driveList.addAll(dirs);\n-            driveList.addAll(forms);\n-            updateAdapter();\n         }\n     }\n \n+    private boolean isNewerFormVersionAvailable(DriveListItem item) {\n+        FormsDao formsDao = new FormsDao();\n+        Cursor cursor = formsDao.getFormsCursorForFormFilePath(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adba127c67e942d74473cbd081602c9953dd1dfa"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxNzIyOQ==", "bodyText": "I think it;s time to use injected StoragePathProvider because in many places we use new StoragePathProvider(). It's already available in AppDependencyModule and this activity is also ready to handle injected objects https://github.com/getodk/collect/blob/master/collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java#L127 so you can just use it like we do with GoogleAccountsManager for example.", "url": "https://github.com/getodk/collect/pull/3661#discussion_r426517229", "createdAt": "2020-05-18T10:11:26Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -729,47 +739,107 @@ protected void onPostExecute(HashMap<String, Object> results) {\n             }\n         }\n \n-        @SafeVarargs\n-        @Override\n-        protected final void onProgressUpdate(HashMap<String, Object>... values) {\n-            super.onProgressUpdate(values);\n-            List<com.google.api.services.drive.model.File> fileList =\n-                    (List<com.google.api.services.drive.model.File>) values[0]\n-                            .get(FILE_LIST_KEY);\n-            String parentId = (String) values[0].get(PARENT_ID_KEY);\n-            String currentDir = (String) values[0].get(CURRENT_ID_KEY);\n-\n-            List<DriveListItem> dirs = new ArrayList<>();\n-            List<DriveListItem> forms = new ArrayList<>();\n-\n-            for (com.google.api.services.drive.model.File f : fileList) {\n-                String type = f.getMimeType();\n-                switch (type) {\n-                    case \"application/xml\":\n-                    case \"text/xml\":\n-                    case \"application/xhtml\":\n-                    case \"text/xhtml\":\n-                    case \"application/xhtml+xml\":\n-                        forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.FILE, f.getId(), currentDir));\n-                        break;\n-                    case \"application/vnd.google-apps.folder\":\n-                        dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.DIR, f.getId(), parentId));\n-                        break;\n-                    default:\n-                        // skip the rest of the files\n-                        break;\n+    }\n+\n+    private void filterForms(HashMap<String, Object> pageDetails) {\n+        List<com.google.api.services.drive.model.File> fileList =\n+                (List<com.google.api.services.drive.model.File>) pageDetails.get(FILE_LIST_KEY);\n+        String parentId = (String) pageDetails.get(PARENT_ID_KEY);\n+        String currentDir = (String) pageDetails.get(CURRENT_ID_KEY);\n+\n+        List<DriveListItem> dirs = new ArrayList<>();\n+        List<DriveListItem> forms = new ArrayList<>();\n+\n+        for (com.google.api.services.drive.model.File f : fileList) {\n+            String type = f.getMimeType();\n+            switch (type) {\n+                case \"application/xml\":\n+                case \"text/xml\":\n+                case \"application/xhtml\":\n+                case \"text/xhtml\":\n+                case \"application/xhtml+xml\":\n+                    forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.FILE, f.getId(), currentDir));\n+                    break;\n+                case \"application/vnd.google-apps.folder\":\n+                    dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.DIR, f.getId(), parentId));\n+                    break;\n+                default:\n+                    // skip the rest of the files\n+                    break;\n+            }\n+        }\n+        Collections.sort(dirs);\n+        Collections.sort(forms);\n+        driveList.addAll(dirs);\n+        driveList.addAll(forms);\n+        checkFormUpdates();\n+    }\n+\n+    private void checkFormUpdates() {\n+        for (DriveListItem item: driveList) {\n+            if (item.getType() == DriveListItem.FILE) {\n+                if (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item)) {\n+                    item.setNewerVersion(true);\n                 }\n             }\n-            Collections.sort(dirs);\n-            Collections.sort(forms);\n-            driveList.addAll(dirs);\n-            driveList.addAll(forms);\n-            updateAdapter();\n         }\n     }\n \n+    private boolean isNewerFormVersionAvailable(DriveListItem item) {\n+        FormsDao formsDao = new FormsDao();\n+        Cursor cursor = formsDao.getFormsCursorForFormFilePath(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName());\n+        if (cursor != null && cursor.moveToFirst()) {\n+            Long lastModifiedLocal = new File(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName()).lastModified();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adba127c67e942d74473cbd081602c9953dd1dfa"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUxOTk4Mg==", "bodyText": "Please merge those two nested if statements. It can be just one.", "url": "https://github.com/getodk/collect/pull/3661#discussion_r426519982", "createdAt": "2020-05-18T10:16:28Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -729,47 +739,107 @@ protected void onPostExecute(HashMap<String, Object> results) {\n             }\n         }\n \n-        @SafeVarargs\n-        @Override\n-        protected final void onProgressUpdate(HashMap<String, Object>... values) {\n-            super.onProgressUpdate(values);\n-            List<com.google.api.services.drive.model.File> fileList =\n-                    (List<com.google.api.services.drive.model.File>) values[0]\n-                            .get(FILE_LIST_KEY);\n-            String parentId = (String) values[0].get(PARENT_ID_KEY);\n-            String currentDir = (String) values[0].get(CURRENT_ID_KEY);\n-\n-            List<DriveListItem> dirs = new ArrayList<>();\n-            List<DriveListItem> forms = new ArrayList<>();\n-\n-            for (com.google.api.services.drive.model.File f : fileList) {\n-                String type = f.getMimeType();\n-                switch (type) {\n-                    case \"application/xml\":\n-                    case \"text/xml\":\n-                    case \"application/xhtml\":\n-                    case \"text/xhtml\":\n-                    case \"application/xhtml+xml\":\n-                        forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.FILE, f.getId(), currentDir));\n-                        break;\n-                    case \"application/vnd.google-apps.folder\":\n-                        dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.DIR, f.getId(), parentId));\n-                        break;\n-                    default:\n-                        // skip the rest of the files\n-                        break;\n+    }\n+\n+    private void filterForms(HashMap<String, Object> pageDetails) {\n+        List<com.google.api.services.drive.model.File> fileList =\n+                (List<com.google.api.services.drive.model.File>) pageDetails.get(FILE_LIST_KEY);\n+        String parentId = (String) pageDetails.get(PARENT_ID_KEY);\n+        String currentDir = (String) pageDetails.get(CURRENT_ID_KEY);\n+\n+        List<DriveListItem> dirs = new ArrayList<>();\n+        List<DriveListItem> forms = new ArrayList<>();\n+\n+        for (com.google.api.services.drive.model.File f : fileList) {\n+            String type = f.getMimeType();\n+            switch (type) {\n+                case \"application/xml\":\n+                case \"text/xml\":\n+                case \"application/xhtml\":\n+                case \"text/xhtml\":\n+                case \"application/xhtml+xml\":\n+                    forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.FILE, f.getId(), currentDir));\n+                    break;\n+                case \"application/vnd.google-apps.folder\":\n+                    dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.DIR, f.getId(), parentId));\n+                    break;\n+                default:\n+                    // skip the rest of the files\n+                    break;\n+            }\n+        }\n+        Collections.sort(dirs);\n+        Collections.sort(forms);\n+        driveList.addAll(dirs);\n+        driveList.addAll(forms);\n+        checkFormUpdates();\n+    }\n+\n+    private void checkFormUpdates() {\n+        for (DriveListItem item: driveList) {\n+            if (item.getType() == DriveListItem.FILE) {\n+                if (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adba127c67e942d74473cbd081602c9953dd1dfa"}, "originalPosition": 141}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyMjQzMQ==", "bodyText": "I would log it as a warning not an error so Timber.w(e); Since it's not something very important and on the other hand not necessarily our fault.", "url": "https://github.com/getodk/collect/pull/3661#discussion_r426522431", "createdAt": "2020-05-18T10:20:58Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -729,47 +739,107 @@ protected void onPostExecute(HashMap<String, Object> results) {\n             }\n         }\n \n-        @SafeVarargs\n-        @Override\n-        protected final void onProgressUpdate(HashMap<String, Object>... values) {\n-            super.onProgressUpdate(values);\n-            List<com.google.api.services.drive.model.File> fileList =\n-                    (List<com.google.api.services.drive.model.File>) values[0]\n-                            .get(FILE_LIST_KEY);\n-            String parentId = (String) values[0].get(PARENT_ID_KEY);\n-            String currentDir = (String) values[0].get(CURRENT_ID_KEY);\n-\n-            List<DriveListItem> dirs = new ArrayList<>();\n-            List<DriveListItem> forms = new ArrayList<>();\n-\n-            for (com.google.api.services.drive.model.File f : fileList) {\n-                String type = f.getMimeType();\n-                switch (type) {\n-                    case \"application/xml\":\n-                    case \"text/xml\":\n-                    case \"application/xhtml\":\n-                    case \"text/xhtml\":\n-                    case \"application/xhtml+xml\":\n-                        forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.FILE, f.getId(), currentDir));\n-                        break;\n-                    case \"application/vnd.google-apps.folder\":\n-                        dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n-                                DriveListItem.DIR, f.getId(), parentId));\n-                        break;\n-                    default:\n-                        // skip the rest of the files\n-                        break;\n+    }\n+\n+    private void filterForms(HashMap<String, Object> pageDetails) {\n+        List<com.google.api.services.drive.model.File> fileList =\n+                (List<com.google.api.services.drive.model.File>) pageDetails.get(FILE_LIST_KEY);\n+        String parentId = (String) pageDetails.get(PARENT_ID_KEY);\n+        String currentDir = (String) pageDetails.get(CURRENT_ID_KEY);\n+\n+        List<DriveListItem> dirs = new ArrayList<>();\n+        List<DriveListItem> forms = new ArrayList<>();\n+\n+        for (com.google.api.services.drive.model.File f : fileList) {\n+            String type = f.getMimeType();\n+            switch (type) {\n+                case \"application/xml\":\n+                case \"text/xml\":\n+                case \"application/xhtml\":\n+                case \"text/xhtml\":\n+                case \"application/xhtml+xml\":\n+                    forms.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.FILE, f.getId(), currentDir));\n+                    break;\n+                case \"application/vnd.google-apps.folder\":\n+                    dirs.add(new DriveListItem(f.getName(), \"\", f.getModifiedTime(), \"\", \"\",\n+                            DriveListItem.DIR, f.getId(), parentId));\n+                    break;\n+                default:\n+                    // skip the rest of the files\n+                    break;\n+            }\n+        }\n+        Collections.sort(dirs);\n+        Collections.sort(forms);\n+        driveList.addAll(dirs);\n+        driveList.addAll(forms);\n+        checkFormUpdates();\n+    }\n+\n+    private void checkFormUpdates() {\n+        for (DriveListItem item: driveList) {\n+            if (item.getType() == DriveListItem.FILE) {\n+                if (isNewerFormVersionAvailable(item) || areNewerMediaFilesAvailable(item)) {\n+                    item.setNewerVersion(true);\n                 }\n             }\n-            Collections.sort(dirs);\n-            Collections.sort(forms);\n-            driveList.addAll(dirs);\n-            driveList.addAll(forms);\n-            updateAdapter();\n         }\n     }\n \n+    private boolean isNewerFormVersionAvailable(DriveListItem item) {\n+        FormsDao formsDao = new FormsDao();\n+        Cursor cursor = formsDao.getFormsCursorForFormFilePath(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName());\n+        if (cursor != null && cursor.moveToFirst()) {\n+            Long lastModifiedLocal = new File(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + item.getName()).lastModified();\n+            Long lastModifiedServer = item.getDate().getValue();\n+            return lastModifiedServer > lastModifiedLocal;\n+        }\n+        return false;\n+    }\n+\n+    private boolean areNewerMediaFilesAvailable(DriveListItem item) {\n+        String mediaDirName = FileUtils.constructMediaPath(item.getName());\n+\n+        try {\n+            List<com.google.api.services.drive.model.File> mediaFileList;\n+            try {\n+                mediaFileList = getMediaFiles(item);\n+            } catch (MultipleFoldersFoundException exception) {\n+                return false;\n+            }\n+\n+            if (mediaFileList != null) {\n+                for (com.google.api.services.drive.model.File mediaFile : mediaFileList) {\n+                    File localMediaFile = new File(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + mediaDirName + File.separator + mediaFile.getName());\n+                    if (!localMediaFile.exists()) {\n+                        return true;\n+                    } else {\n+                        Long lastModifiedLocal = localMediaFile.lastModified();\n+                        Long lastModifiedServer = mediaFile.getModifiedTime().getValue();\n+                        if (lastModifiedServer > lastModifiedLocal) {\n+                            return true;\n+                        }\n+                    }\n+                }\n+            }\n+        } catch (Exception e) {\n+            Timber.e(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adba127c67e942d74473cbd081602c9953dd1dfa"}, "originalPosition": 190}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjUyNDY3MA==", "bodyText": "Could you clarify this change? Why did you factor out filterForms() which contains generally the same code as publishProgress before and now call both?", "url": "https://github.com/getodk/collect/pull/3661#discussion_r426524670", "createdAt": "2020-05-18T10:25:10Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -701,7 +704,8 @@ protected void onPreExecute() {\n                         nextPage.put(PARENT_ID_KEY, parentId);\n                         nextPage.put(CURRENT_ID_KEY, currentDir);\n                         nextPage.put(FILE_LIST_KEY, driveFileListPage);\n-                        publishProgress(nextPage);\n+                        filterForms(nextPage);\n+                        publishProgress();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adba127c67e942d74473cbd081602c9953dd1dfa"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d8201f34d816c7138f714f28704f60638fdd852", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/0d8201f34d816c7138f714f28704f60638fdd852", "committedDate": "2020-05-18T14:10:39Z", "message": "minor fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MzU0Njcw", "url": "https://github.com/getodk/collect/pull/3661#pullrequestreview-414354670", "createdAt": "2020-05-19T11:33:28Z", "commit": {"oid": "0d8201f34d816c7138f714f28704f60638fdd852"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTozMzoyOFrOGXcItg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMTozMzoyOFrOGXcItg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzIzMTQxNA==", "bodyText": "Please also check the entire file and use injected storagePathProvider instead of new StoragePathProvider() like here.", "url": "https://github.com/getodk/collect/pull/3661#discussion_r427231414", "createdAt": "2020-05-19T11:33:28Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/GoogleDriveActivity.java", "diffHunk": "@@ -795,18 +867,15 @@ void setGoogleDriveFormDownloadListener(GoogleDriveFormDownloadListener gl) {\n \n                     String mediaDirName = FileUtils.constructMediaPath(fileItem.getName());\n \n-                    String folderId;\n+                    List<com.google.api.services.drive.model.File> mediaFileList;\n                     try {\n-                        folderId = driveHelper.getIDOfFolderWithName(mediaDirName, fileItem.getParentId(), false);\n+                        mediaFileList = getMediaFiles(fileItem);\n                     } catch (MultipleFoldersFoundException exception) {\n                         results.put(fileItem.getName(), getString(R.string.multiple_media_folders_detected_notification));\n                         return results;\n                     }\n \n-                    if (folderId != null) {\n-                        List<com.google.api.services.drive.model.File> mediaFileList;\n-                        mediaFileList = driveHelper.getFilesFromDrive(null, folderId);\n-\n+                    if (mediaFileList != null) {\n                         FileUtils.createFolder(new StoragePathProvider().getDirPath(StorageSubdirectory.FORMS) + File.separator + mediaDirName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d8201f34d816c7138f714f28704f60638fdd852"}, "originalPosition": 235}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffac26db7eb65f8e0841f4d5069956189ab9191a", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/ffac26db7eb65f8e0841f4d5069956189ab9191a", "committedDate": "2020-05-19T11:51:13Z", "message": "inject storagepathprovider"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MzcyMTQz", "url": "https://github.com/getodk/collect/pull/3661#pullrequestreview-414372143", "createdAt": "2020-05-19T11:59:22Z", "commit": {"oid": "ffac26db7eb65f8e0841f4d5069956189ab9191a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9f203c307a9575e169ae937199e9c7130ae9b53", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/a9f203c307a9575e169ae937199e9c7130ae9b53", "committedDate": "2020-06-18T06:27:12Z", "message": "fix not downloaded files showing updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d010666b0edbadeaa88d5362a85b61e459357e6", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/2d010666b0edbadeaa88d5362a85b61e459357e6", "committedDate": "2020-06-18T08:29:22Z", "message": "Only compare last modified form"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9388dedc0ce733910392e428246221c448032df9", "author": {"user": {"login": "chidauri", "name": "Harshit chittora"}}, "url": "https://github.com/getodk/collect/commit/9388dedc0ce733910392e428246221c448032df9", "committedDate": "2020-07-02T08:02:51Z", "message": "Revert \"Only compare last modified form\"\n\nThis reverts commit 2d010666b0edbadeaa88d5362a85b61e459357e6."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNDc1NDkz", "url": "https://github.com/getodk/collect/pull/3661#pullrequestreview-441475493", "createdAt": "2020-07-02T08:47:18Z", "commit": {"oid": "9388dedc0ce733910392e428246221c448032df9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2320, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}