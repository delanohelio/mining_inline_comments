{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2Mzc2NTA2", "number": 3986, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjoyNzoxMFrOER4z2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNDoyOTozNlrOETg9Ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTkyMDI1OnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/formmanagement/GetBlankFormsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjoyNzoxMFrOG214CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjoyNzoxMFrOG214CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE1ODk4NQ==", "bodyText": "The positive test case for this is currently in GetAndSubmitFormsTest", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460158985", "createdAt": "2020-07-24T16:27:10Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/formmanagement/GetBlankFormsTest.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.odk.collect.android.feature.formmanagement;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.support.CollectTestRule;\n+import org.odk.collect.android.support.TestDependencies;\n+import org.odk.collect.android.support.TestRuleChain;\n+import org.odk.collect.android.support.pages.GetBlankFormPage;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class GetBlankFormsTest {\n+\n+    public CollectTestRule rule = new CollectTestRule();\n+\n+    final TestDependencies testDependencies = new TestDependencies();\n+\n+    @Rule\n+    public RuleChain copyFormChain = TestRuleChain.chain(testDependencies)\n+            .around(rule);\n+\n+    @Test\n+    public void whenThereIsAnAuthenticationErrorFetchingFormList_allowsUserToReenterCredentials() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTkyOTg2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormDownloadListActivity.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjozMDoxNFrOG21-JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjozMDoxNFrOG21-JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2MDU0OQ==", "bodyText": "We could also use the new less granular/more human errors for form download as well, but we'd need to discuss how that works. Collect is currently really verbose and outputs the failure/success status for each form so it's not as simple as just switching out the text.\nI think writing up an issue/feature for how errors should look on Get Blank Form would be ideal.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460160549", "createdAt": "2020-07-24T16:30:14Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormDownloadListActivity.java", "diffHunk": "@@ -597,33 +572,55 @@ public void formListDownloadingComplete(HashMap<String, ServerFormDetails> resul\n             toggleButtonLabel(toggleButton, listView);\n \n             if (viewModel.isDownloadOnlyMode()) {\n-                //1. First check if all form IDS could be found on the server - Register forms that could not be found\n+                performDownloadModeDownload();\n+            }\n+        } else {\n+            switch (exception.getType()) {\n+                case FETCH_ERROR:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 171}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTkzNjA5OnYy", "diffSide": "RIGHT", "path": "async/src/main/java/org/odk/collect/async/WorkerAdapter.kt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjozMTo1M1rOG22Bxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjozMTo1M1rOG22Bxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2MTQ3OA==", "bodyText": "We don't care about Result.failure() as the only thing it does is give let us inspect failure counts in following work which we're not doing.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460161478", "createdAt": "2020-07-24T16:31:53Z", "author": {"login": "seadowg"}, "path": "async/src/main/java/org/odk/collect/async/WorkerAdapter.kt", "diffHunk": "@@ -7,7 +7,12 @@ import androidx.work.WorkerParameters\n abstract class WorkerAdapter(private val spec: TaskSpec, context: Context, workerParams: WorkerParameters) : Worker(context, workerParams) {\n \n     override fun doWork(): Result {\n-        spec.getTask(applicationContext).run()\n-        return Result.success()\n+        val completed = spec.getTask(applicationContext).get()\n+\n+        return if (completed) {\n+            Result.success()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTk0NTQ1OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/notifications/NotificationManagerNotifier.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjozNDo1NVrOG22H0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOToxOTo0NlrOG3acaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2MzAyNA==", "bodyText": "I think there are still a few strings in both the auto send and auto download flows that may end up not translated. This is an existing issue however, so I didn't want to dedicate too much time to restructuring everything to fix it. I reckon we just create an issue for this?", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460163024", "createdAt": "2020-07-24T16:34:55Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/notifications/NotificationManagerNotifier.java", "diffHunk": "@@ -73,4 +128,13 @@ private boolean allFormsDownloadedSuccessfully(Context context, HashMap<ServerFo\n         }\n         return true;\n     }\n+\n+    // The application context will give us the system's locale\n+    private Resources getLocalizedResources(Context context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 146}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc1ODEyMQ==", "bodyText": "Issue at #3988", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460758121", "createdAt": "2020-07-27T09:19:46Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/notifications/NotificationManagerNotifier.java", "diffHunk": "@@ -73,4 +128,13 @@ private boolean allFormsDownloadedSuccessfully(Context context, HashMap<ServerFo\n         }\n         return true;\n     }\n+\n+    // The application context will give us the system's locale\n+    private Resources getLocalizedResources(Context context) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2MzAyNA=="}, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 146}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTk1MjAyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/openrosa/api/FormListApi.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjozNjo1OFrOG22L-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjozNjo1OFrOG22L-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2NDA4OQ==", "bodyText": "fetchForm and fetchMediaFile happen to have the same implementation but it felt keeping the separate was the right thing to do\u2122\ufe0f as the call sites don't really know or care that they involve the same work.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460164089", "createdAt": "2020-07-24T16:36:58Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/openrosa/api/FormListApi.java", "diffHunk": "@@ -1,10 +1,15 @@\n package org.odk.collect.android.openrosa.api;\n \n+import java.io.InputStream;\n import java.util.List;\n \n public interface FormListApi {\n \n     List<FormListItem> fetchFormList() throws FormApiException;\n \n     ManifestFile fetchManifest(String manifestURL) throws FormApiException;\n+\n+    InputStream fetchForm(String formURL) throws FormApiException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTk2MDU4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/MultiFormDownloader.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjozOToyN1rOG22RUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjozOToyN1rOG22RUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2NTQ1OQ==", "bodyText": "I had a good go at chipping away at this but there is far more to be done. I think we need to get to a point where we're not calling this anywhere but ServerFormDownloader to really start tearing it apart. There is a lot of logic around task cancellation in here that needs to get the hell out.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460165459", "createdAt": "2020-07-24T16:39:27Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/MultiFormDownloader.java", "diffHunk": "@@ -44,42 +44,29 @@\n import java.io.OutputStream;\n import java.net.URISyntaxException;\n import java.nio.charset.Charset;\n-import java.util.ArrayList;\n-import java.util.Collections;\n import java.util.HashMap;\n import java.util.List;\n import java.util.Map;\n \n-import javax.inject.Inject;\n-\n import timber.log.Timber;\n \n import static org.odk.collect.android.utilities.FileUtils.LAST_SAVED_FILENAME;\n import static org.odk.collect.android.utilities.FileUtils.STUB_XML;\n import static org.odk.collect.android.utilities.FileUtils.write;\n \n-public class MultiFormDownloader implements FormDownloader {\n+@Deprecated\n+public class MultiFormDownloader {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTk2NTY0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/drawable/ic_baseline_refresh_error_24.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjo0MDo0OFrOG22UbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjo0MDo0OFrOG22UbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2NjI1Mw==", "bodyText": "This is just showing the same refresh button in the error color right now. I think ultimately we want a \"badge\" but if everyone can live with this initially it'll save time faffing around with the new beta badging API (or in creating a new icon).", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460166253", "createdAt": "2020-07-24T16:40:48Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/drawable/ic_baseline_refresh_error_24.xml", "diffHunk": "@@ -0,0 +1,10 @@\n+<vector xmlns:android=\"http://schemas.android.com/apk/res/android\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTk3NDAyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/openrosa/api/OpenRosaFormListApi.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNjo0MzoxM1rOG22Zng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODozMTowM1rOG4ZRzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2NzU4Mg==", "bodyText": "I killed all the error messages coming out of here and pretty much all the error logging. Most of it isn't needed to show the errors we're trying to show. Good to check and see if any of it feels like something we'd need to keep.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460167582", "createdAt": "2020-07-24T16:43:13Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/openrosa/api/OpenRosaFormListApi.java", "diffHunk": "@@ -27,23 +30,43 @@\n     private final String serverURL;\n     private final String formListPath;\n \n-    public OpenRosaFormListApi(OpenRosaXmlFetcher openRosaXMLFetcher, String serverURL, String formListPath) {\n-        this.openRosaXMLFetcher = openRosaXMLFetcher;\n+    public OpenRosaFormListApi(String serverURL, String formListPath, OpenRosaHttpInterface openRosaHttpInterface, WebCredentialsUtils webCredentialsUtils) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NzU5OQ==", "bodyText": "Yup, looks good to me.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r461787599", "createdAt": "2020-07-28T18:31:03Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/openrosa/api/OpenRosaFormListApi.java", "diffHunk": "@@ -27,23 +30,43 @@\n     private final String serverURL;\n     private final String formListPath;\n \n-    public OpenRosaFormListApi(OpenRosaXmlFetcher openRosaXMLFetcher, String serverURL, String formListPath) {\n-        this.openRosaXMLFetcher = openRosaXMLFetcher;\n+    public OpenRosaFormListApi(String serverURL, String formListPath, OpenRosaHttpInterface openRosaHttpInterface, WebCredentialsUtils webCredentialsUtils) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDE2NzU4Mg=="}, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTU3MzgzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/AndroidManifest.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNDo1ODozOVrOG3Tqbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNDo1ODozOVrOG3Tqbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY0NzAyMw==", "bodyText": "Hah. I held back from asking for this in the last PR. Makes so much more sense.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460647023", "createdAt": "2020-07-27T04:58:39Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/AndroidManifest.xml", "diffHunk": "@@ -113,7 +113,7 @@ the specific language governing permissions and limitations under the License.\n             android:configChanges=\"orientation|screenSize\"\n             android:windowSoftInputMode=\"stateHidden\" />\n         <activity android:name=\".activities.InstanceChooserList\" />\n-        <activity android:name=\".activities.FormChooserListActivity\" />\n+        <activity android:name=\".activities.FillBlankFormActivity\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NTU5NTI4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/values/strings.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNToxMjo0MVrOG3T3QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNDo1NDo1MVrOG3mPgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MDMwNA==", "bodyText": "This one can also be rolled into a generic error, I think.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460650304", "createdAt": "2020-07-27T05:12:41Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/res/values/strings.xml", "diffHunk": "@@ -150,11 +147,6 @@\n     <string name=\"submission_url\">Submission path</string>\n     <string name=\"font_size\">Text font size</string>\n     <string name=\"change_font_size\">Text font size</string>\n-    <string name=\"access_error\">Error while accessing %s: </string>\n-    <string name=\"manifest_server_error\">Manifest reply does not report an OpenRosa version \u2014 bad server?</string>\n-    <string name=\"root_element_error\">Root element is not &lt;manifest\\&gt; \u2014 was %s</string>\n-    <string name=\"root_namespace_error\">Root element Namespace is incorrect: %s</string>\n-    <string name=\"manifest_tag_error\">Manifest entry %s is missing one or more tags: filename, hash, or downloadUrl</string>\n     <string name=\"form_download_progress\">%1$s. Getting media files: %2$s of %3$s</string>\n     <string name=\"fetching_manifest\">%s. Getting manifest </string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDczODY1Ng==", "bodyText": "I'm pretty sure this string is just used for progress updates. Not sure what you mean.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460738656", "createdAt": "2020-07-27T08:46:41Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/values/strings.xml", "diffHunk": "@@ -150,11 +147,6 @@\n     <string name=\"submission_url\">Submission path</string>\n     <string name=\"font_size\">Text font size</string>\n     <string name=\"change_font_size\">Text font size</string>\n-    <string name=\"access_error\">Error while accessing %s: </string>\n-    <string name=\"manifest_server_error\">Manifest reply does not report an OpenRosa version \u2014 bad server?</string>\n-    <string name=\"root_element_error\">Root element is not &lt;manifest\\&gt; \u2014 was %s</string>\n-    <string name=\"root_namespace_error\">Root element Namespace is incorrect: %s</string>\n-    <string name=\"manifest_tag_error\">Manifest entry %s is missing one or more tags: filename, hash, or downloadUrl</string>\n     <string name=\"form_download_progress\">%1$s. Getting media files: %2$s of %3$s</string>\n     <string name=\"fetching_manifest\">%s. Getting manifest </string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MDMwNA=="}, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDkyMDg4OA==", "bodyText": "More of a note to self to check how it\u2019s used. The user should not see the word manifest anywhere.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460920888", "createdAt": "2020-07-27T14:14:25Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/res/values/strings.xml", "diffHunk": "@@ -150,11 +147,6 @@\n     <string name=\"submission_url\">Submission path</string>\n     <string name=\"font_size\">Text font size</string>\n     <string name=\"change_font_size\">Text font size</string>\n-    <string name=\"access_error\">Error while accessing %s: </string>\n-    <string name=\"manifest_server_error\">Manifest reply does not report an OpenRosa version \u2014 bad server?</string>\n-    <string name=\"root_element_error\">Root element is not &lt;manifest\\&gt; \u2014 was %s</string>\n-    <string name=\"root_namespace_error\">Root element Namespace is incorrect: %s</string>\n-    <string name=\"manifest_tag_error\">Manifest entry %s is missing one or more tags: filename, hash, or downloadUrl</string>\n     <string name=\"form_download_progress\">%1$s. Getting media files: %2$s of %3$s</string>\n     <string name=\"fetching_manifest\">%s. Getting manifest </string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MDMwNA=="}, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk1MTQyNA==", "bodyText": "Yeah I think a lot of the progress updates in the app are things we could get rid of now. A lot of detail that doesn't help anyone!", "url": "https://github.com/getodk/collect/pull/3986#discussion_r460951424", "createdAt": "2020-07-27T14:54:51Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/values/strings.xml", "diffHunk": "@@ -150,11 +147,6 @@\n     <string name=\"submission_url\">Submission path</string>\n     <string name=\"font_size\">Text font size</string>\n     <string name=\"change_font_size\">Text font size</string>\n-    <string name=\"access_error\">Error while accessing %s: </string>\n-    <string name=\"manifest_server_error\">Manifest reply does not report an OpenRosa version \u2014 bad server?</string>\n-    <string name=\"root_element_error\">Root element is not &lt;manifest\\&gt; \u2014 was %s</string>\n-    <string name=\"root_namespace_error\">Root element Namespace is incorrect: %s</string>\n-    <string name=\"manifest_tag_error\">Manifest entry %s is missing one or more tags: filename, hash, or downloadUrl</string>\n     <string name=\"form_download_progress\">%1$s. Getting media files: %2$s of %3$s</string>\n     <string name=\"fetching_manifest\">%s. Getting manifest </string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY1MDMwNA=="}, "originalCommit": {"oid": "e2c0baa905b5c61e8448ca60e9b311adaf5da28f"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjA2MTY2OnYy", "diffSide": "RIGHT", "path": "async/src/main/java/org/odk/collect/async/CoroutineAndWorkManagerScheduler.kt", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1ODo0MVrOG4Q6dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNDo1ODo0MVrOG4Q6dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTY1MDU1MA==", "bodyText": "Nit: could this be grouped with the other variant?", "url": "https://github.com/getodk/collect/pull/3986#discussion_r461650550", "createdAt": "2020-07-28T14:58:41Z", "author": {"login": "lognaturel"}, "path": "async/src/main/java/org/odk/collect/async/CoroutineAndWorkManagerScheduler.kt", "diffHunk": "@@ -17,6 +17,19 @@ class CoroutineAndWorkManagerScheduler(private val foreground: CoroutineContext,\n         }\n     }\n \n+    override fun networkDeferred(tag: String, spec: TaskSpec) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a2b8b2969754c2fcb37e1ad8bb469c17ca17cc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjcyNDcwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/InstanceUploaderListActivity.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzozOToxMVrOG4XaNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzozOToxMVrOG4XaNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc1Njk4MA==", "bodyText": "Seems better to use AUTO_SEND_TAG?", "url": "https://github.com/getodk/collect/pull/3986#discussion_r461756980", "createdAt": "2020-07-28T17:39:11Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/InstanceUploaderListActivity.java", "diffHunk": "@@ -207,8 +206,7 @@ void init() {\n      * Updates whether an auto-send job is ongoing.\n      */\n     private void updateAutoSendStatus() {\n-        LiveData<List<WorkInfo>> statuses = WorkManager.getInstance().getWorkInfosForUniqueWorkLiveData(AutoSendWorker.TAG);\n-\n+        LiveData<List<WorkInfo>> statuses = WorkManager.getInstance().getWorkInfosForUniqueWorkLiveData(\"AutoSendWorker\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a2b8b2969754c2fcb37e1ad8bb469c17ca17cc"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Mjc2NDcyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/values/strings.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxNzo0OTo0M1rOG4XzTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwODoyNTowMVrOG4t-Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2MzQwNw==", "bodyText": "I think we're going to use this in more places including where form design might be the issue. Let's call the resource something like report_to_project_lead.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r461763407", "createdAt": "2020-07-28T17:49:43Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/res/values/strings.xml", "diffHunk": "@@ -710,4 +702,7 @@\n     <string name=\"form_update_mode_title\">Blank form update mode</string>\n     <string name=\"previously_downloaded_only\">Previously downloaded forms only</string>\n     <string name=\"form_update_frequency_title\">Automatic update frequency</string>\n+    <string name=\"form_update_error\">Form update failed</string>\n+    <string name=\"generic_network_error\">If you keep having this problem, report it to the person who asked you to collect data.</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a2b8b2969754c2fcb37e1ad8bb469c17ca17cc"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjEyNjY2Nw==", "bodyText": "Good call.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r462126667", "createdAt": "2020-07-29T08:25:01Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/values/strings.xml", "diffHunk": "@@ -710,4 +702,7 @@\n     <string name=\"form_update_mode_title\">Blank form update mode</string>\n     <string name=\"previously_downloaded_only\">Previously downloaded forms only</string>\n     <string name=\"form_update_frequency_title\">Automatic update frequency</string>\n+    <string name=\"form_update_error\">Form update failed</string>\n+    <string name=\"generic_network_error\">If you keep having this problem, report it to the person who asked you to collect data.</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc2MzQwNw=="}, "originalCommit": {"oid": "46a2b8b2969754c2fcb37e1ad8bb469c17ca17cc"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4Mjg5NjkxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/preferences/ServerAuthDialogFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODoyNTo0OFrOG4ZGIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwODo1Nzo0OFrOG4vMJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NDYxMQ==", "bodyText": "Like for the manual update case, this should also include the string server_auth_credentials because that indicates what server needs credentials.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r461784611", "createdAt": "2020-07-28T18:25:48Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/ServerAuthDialogFragment.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.odk.collect.android.preferences;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+import android.os.Bundle;\n+import android.view.View;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.databinding.ServerAuthDialogBinding;\n+import org.odk.collect.android.injection.DaggerUtils;\n+\n+import javax.inject.Inject;\n+\n+public class ServerAuthDialogFragment extends DialogFragment {\n+\n+    @Inject\n+    PreferencesProvider preferencesProvider;\n+\n+    private View dialogView;\n+\n+    @Override\n+    public void onAttach(@NonNull Context context) {\n+        super.onAttach(context);\n+        DaggerUtils.getComponent(context).inject(this);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        ServerAuthDialogBinding binding = ServerAuthDialogBinding.inflate(requireActivity().getLayoutInflater());\n+        dialogView = binding.getRoot();\n+\n+        SharedPreferences generalSharedPreferences = preferencesProvider.getGeneralSharedPreferences();\n+        binding.usernameEdit.setText(generalSharedPreferences.getString(GeneralKeys.KEY_USERNAME, \"\"));\n+        binding.passwordEdit.setText(generalSharedPreferences.getString(GeneralKeys.KEY_PASSWORD, \"\"));\n+\n+\n+        return new AlertDialog.Builder(requireContext())\n+                .setTitle(R.string.server_requires_auth)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a2b8b2969754c2fcb37e1ad8bb469c17ca17cc"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE0NjU5OQ==", "bodyText": "Done!", "url": "https://github.com/getodk/collect/pull/3986#discussion_r462146599", "createdAt": "2020-07-29T08:57:48Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/ServerAuthDialogFragment.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package org.odk.collect.android.preferences;\n+\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.content.SharedPreferences;\n+import android.os.Bundle;\n+import android.view.View;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.databinding.ServerAuthDialogBinding;\n+import org.odk.collect.android.injection.DaggerUtils;\n+\n+import javax.inject.Inject;\n+\n+public class ServerAuthDialogFragment extends DialogFragment {\n+\n+    @Inject\n+    PreferencesProvider preferencesProvider;\n+\n+    private View dialogView;\n+\n+    @Override\n+    public void onAttach(@NonNull Context context) {\n+        super.onAttach(context);\n+        DaggerUtils.getComponent(context).inject(this);\n+    }\n+\n+    @NonNull\n+    @Override\n+    public Dialog onCreateDialog(@Nullable Bundle savedInstanceState) {\n+        ServerAuthDialogBinding binding = ServerAuthDialogBinding.inflate(requireActivity().getLayoutInflater());\n+        dialogView = binding.getRoot();\n+\n+        SharedPreferences generalSharedPreferences = preferencesProvider.getGeneralSharedPreferences();\n+        binding.usernameEdit.setText(generalSharedPreferences.getString(GeneralKeys.KEY_USERNAME, \"\"));\n+        binding.passwordEdit.setText(generalSharedPreferences.getString(GeneralKeys.KEY_PASSWORD, \"\"));\n+\n+\n+        return new AlertDialog.Builder(requireContext())\n+                .setTitle(R.string.server_requires_auth)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4NDYxMQ=="}, "originalCommit": {"oid": "46a2b8b2969754c2fcb37e1ad8bb469c17ca17cc"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjkyNDA1OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formmanagement/ServerFormDownloader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODozMzoxNVrOG4ZW-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwOTowMToxMVrOG4vVDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4ODkyMA==", "bodyText": "Hah. Never seen sarcophagus used that way but it makes so much sense.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r461788920", "createdAt": "2020-07-28T18:33:15Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formmanagement/ServerFormDownloader.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package org.odk.collect.android.formmanagement;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.utilities.MultiFormDownloader;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+\n+/**\n+ * Provides a sarcophagus for {@link org.odk.collect.android.utilities.MultiFormDownloader} so it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a2b8b2969754c2fcb37e1ad8bb469c17ca17cc"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE0ODg3OA==", "bodyText": "It's great terminology. I like that it implies it is protecting both the thing in the \"sarcophagus\" and the things outside.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r462148878", "createdAt": "2020-07-29T09:01:11Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formmanagement/ServerFormDownloader.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package org.odk.collect.android.formmanagement;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.utilities.MultiFormDownloader;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+\n+/**\n+ * Provides a sarcophagus for {@link org.odk.collect.android.utilities.MultiFormDownloader} so it", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc4ODkyMA=="}, "originalCommit": {"oid": "46a2b8b2969754c2fcb37e1ad8bb469c17ca17cc"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjkzMDc4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formmanagement/FormApiExceptionMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODozNTowNFrOG4ZbNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwOTowNDo1M1rOG4vdaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MDAwNg==", "bodyText": "In this case we ALSO want to include the \"if it keeps happening, talk to the person who asked you to collect data\" message. I think just concatenating the two with a space would be fine (and concat does the right thing with LTR languages, I believe)", "url": "https://github.com/getodk/collect/pull/3986#discussion_r461790006", "createdAt": "2020-07-28T18:35:04Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formmanagement/FormApiExceptionMapper.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.odk.collect.android.formmanagement;\n+\n+import android.content.res.Resources;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.openrosa.api.FormApiException;\n+\n+public class FormApiExceptionMapper {\n+\n+    private final Resources resources;\n+\n+    public FormApiExceptionMapper(Resources resources) {\n+        this.resources = resources;\n+    }\n+\n+    public String getMessage(FormApiException exception) {\n+        if (exception.getType() == FormApiException.Type.UNKNOWN_HOST) {\n+            return resources.getString(R.string.unknown_host_error, exception.getServerUrl());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a2b8b2969754c2fcb37e1ad8bb469c17ca17cc"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE1MTAxNw==", "bodyText": "Right that makes sense.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r462151017", "createdAt": "2020-07-29T09:04:53Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formmanagement/FormApiExceptionMapper.java", "diffHunk": "@@ -0,0 +1,23 @@\n+package org.odk.collect.android.formmanagement;\n+\n+import android.content.res.Resources;\n+\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.openrosa.api.FormApiException;\n+\n+public class FormApiExceptionMapper {\n+\n+    private final Resources resources;\n+\n+    public FormApiExceptionMapper(Resources resources) {\n+        this.resources = resources;\n+    }\n+\n+    public String getMessage(FormApiException exception) {\n+        if (exception.getType() == FormApiException.Type.UNKNOWN_HOST) {\n+            return resources.getString(R.string.unknown_host_error, exception.getServerUrl());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MDAwNg=="}, "originalCommit": {"oid": "46a2b8b2969754c2fcb37e1ad8bb469c17ca17cc"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4MjkzNjc3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormDownloadListActivity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQxODozNjo0NlrOG4ZfFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwODo1OTozMVrOG4vRAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MDk5OA==", "bodyText": "Why not dialogMessage? That seems a lot more useful.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r461790998", "createdAt": "2020-07-28T18:36:46Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormDownloadListActivity.java", "diffHunk": "@@ -597,33 +572,55 @@ public void formListDownloadingComplete(HashMap<String, ServerFormDetails> resul\n             toggleButtonLabel(toggleButton, listView);\n \n             if (viewModel.isDownloadOnlyMode()) {\n-                //1. First check if all form IDS could be found on the server - Register forms that could not be found\n+                performDownloadModeDownload();\n+            }\n+        } else {\n+            switch (exception.getType()) {\n+                case FETCH_ERROR:\n+                case UNKNOWN_HOST:\n+                    String dialogMessage = new FormApiExceptionMapper(getResources()).getMessage(exception);\n+                    String dialogTitle = getString(R.string.load_remote_form_error);\n+\n+                    if (viewModel.isDownloadOnlyMode()) {\n+                        setReturnResult(false, getString(R.string.load_remote_form_error), viewModel.getFormResults());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46a2b8b2969754c2fcb37e1ad8bb469c17ca17cc"}, "originalPosition": 177}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjE0Nzg0Mw==", "bodyText": "Good point. Will change.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r462147843", "createdAt": "2020-07-29T08:59:31Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormDownloadListActivity.java", "diffHunk": "@@ -597,33 +572,55 @@ public void formListDownloadingComplete(HashMap<String, ServerFormDetails> resul\n             toggleButtonLabel(toggleButton, listView);\n \n             if (viewModel.isDownloadOnlyMode()) {\n-                //1. First check if all form IDS could be found on the server - Register forms that could not be found\n+                performDownloadModeDownload();\n+            }\n+        } else {\n+            switch (exception.getType()) {\n+                case FETCH_ERROR:\n+                case UNKNOWN_HOST:\n+                    String dialogMessage = new FormApiExceptionMapper(getResources()).getMessage(exception);\n+                    String dialogTitle = getString(R.string.load_remote_form_error);\n+\n+                    if (viewModel.isDownloadOnlyMode()) {\n+                        setReturnResult(false, getString(R.string.load_remote_form_error), viewModel.getFormResults());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTc5MDk5OA=="}, "originalCommit": {"oid": "46a2b8b2969754c2fcb37e1ad8bb469c17ca17cc"}, "originalPosition": 177}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4ODk4MzYzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/notifications/NotificationManagerNotifier.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNDoyOTozNlrOG5SqLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNDoyOTozNlrOG5SqLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjcyNzcyNQ==", "bodyText": "This needs to be reverted.", "url": "https://github.com/getodk/collect/pull/3986#discussion_r462727725", "createdAt": "2020-07-30T04:29:36Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/notifications/NotificationManagerNotifier.java", "diffHunk": "@@ -84,10 +84,11 @@ public void onUpdatesDownloaded(HashMap<ServerFormDetails, String> result) {\n     @Override\n     public void onSyncFailure(FormApiException exception) {\n         Intent intent = new Intent(application, FillBlankFormActivity.class);\n+        intent.putExtra(FillBlankFormActivity.EXTRA_AUTH_REQUIRED, true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "372ee3cbc0a9283de09964bf2eec1b64ada27702"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3247, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}