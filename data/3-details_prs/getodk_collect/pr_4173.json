{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0ODI0MDg4", "number": 4173, "title": "Add in-app recording", "bodyText": "Closes #4149\nBlocked by #4171\nBlocked by #4168 (branched off that PR)\nThis adds recording to the app when enabled in \"Experimental\" settings.\nWhat has been done to verify that this works as intended?\nDriven out by tests and tried out on emulator and device.\nWhy is this the best possible solution? Were any other approaches considered?\nComments inline.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nShould just add new feature. Good to check that using an external app still works as expected.\nDo we need any specific form for testing your changes? If so, please attach one.\nAny form with audio.\nDoes this change require updates to documentation? If so, please file an issue here and include the link below.\nWe should write docs before release but right now I think it'd be good to let the feature evolve without writing anything up.\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-10-16T13:01:45Z", "url": "https://github.com/getodk/collect/pull/4173", "merged": true, "mergeCommit": {"oid": "d80d21a6496d7efd516473e153c4d2d045c78e19"}, "closed": true, "closedAt": "2020-10-22T15:43:14Z", "author": {"login": "seadowg"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUDHgVABqjM4OTMwODc3Mzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVD5fGgFqTUxNDg2NzY5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "405b37dc23e71f3d4f671d607e18f2b17b79ebaa", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/405b37dc23e71f3d4f671d607e18f2b17b79ebaa", "committedDate": "2020-10-16T12:56:28Z", "message": "Extract ViewModel for recording"}, "afterCommit": {"oid": "3e869be550b65d5fcca2e15ef8e913f896f5ff7e", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/3e869be550b65d5fcca2e15ef8e913f896f5ff7e", "committedDate": "2020-10-19T12:13:27Z", "message": "Fix quality checks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eea920eb3dbeb87f78606fbd37109e3442298953", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/eea920eb3dbeb87f78606fbd37109e3442298953", "committedDate": "2020-10-19T13:01:23Z", "message": "Move strings to module"}, "afterCommit": {"oid": "6e1d311b248dfba63ab08453353878a66e7db4db", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/6e1d311b248dfba63ab08453353878a66e7db4db", "committedDate": "2020-10-19T14:23:08Z", "message": "Move strings to module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6e1d311b248dfba63ab08453353878a66e7db4db", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/6e1d311b248dfba63ab08453353878a66e7db4db", "committedDate": "2020-10-19T14:23:08Z", "message": "Move strings to module"}, "afterCommit": {"oid": "b8fbe26ebeccee6c90e33298eb9fdbd395fd3e0a", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/b8fbe26ebeccee6c90e33298eb9fdbd395fd3e0a", "committedDate": "2020-10-19T17:05:37Z", "message": "Move strings to module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7ad39a171f972f9d02ccdf1331450108c4feb30", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/c7ad39a171f972f9d02ccdf1331450108c4feb30", "committedDate": "2020-10-20T08:47:46Z", "message": "Spike out recording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaca918f13c02c8836b1dae04da58267320ef9c4", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/eaca918f13c02c8836b1dae04da58267320ef9c4", "committedDate": "2020-10-20T08:47:51Z", "message": "Handle crash on clicking back while recording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08b3290d47214eb0bd56a53a6d36a88e3c993926", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/08b3290d47214eb0bd56a53a6d36a88e3c993926", "committedDate": "2020-10-20T08:47:52Z", "message": "Add tests for MediaRecorderRecorder"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "025cc5516aeca34803d198e78d840431476586cc", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/025cc5516aeca34803d198e78d840431476586cc", "committedDate": "2020-10-20T08:47:52Z", "message": "Specify quality for recording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "32aa607888dcb8183b39d46489bef4cb8375cd47", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/32aa607888dcb8183b39d46489bef4cb8375cd47", "committedDate": "2020-10-20T08:47:52Z", "message": "Style recording activity"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4474dd286e7c515cf498d1af718261450d4b69fa", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/4474dd286e7c515cf498d1af718261450d4b69fa", "committedDate": "2020-10-20T08:47:52Z", "message": "Remove as much Collect specific code form PermissionUtils as possible\n\nWe're going to need to share this between feature modules"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc324a4a5bd18a042a48ceb75bbe97afac1803ca", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/cc324a4a5bd18a042a48ceb75bbe97afac1803ca", "committedDate": "2020-10-20T08:47:52Z", "message": "Revise dependency setup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47411bbe57f2495443b006ff742855cf22505829", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/47411bbe57f2495443b006ff742855cf22505829", "committedDate": "2020-10-20T08:47:52Z", "message": "Move packages around"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f02dd0e773f5f338d70b06347f024ea4e7cbec7", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/4f02dd0e773f5f338d70b06347f024ea4e7cbec7", "committedDate": "2020-10-20T08:47:52Z", "message": "Seperate out requesting audio file to prevent duplication"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "802fb91c9ea0be83705dbbbf83328614ed42142c", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/802fb91c9ea0be83705dbbbf83328614ed42142c", "committedDate": "2020-10-20T08:47:53Z", "message": "Handle permissions for recording audio"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bf4be14c2946bc448ad6a034bc4a5471bf41865", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/4bf4be14c2946bc448ad6a034bc4a5471bf41865", "committedDate": "2020-10-20T08:47:53Z", "message": "Extract ViewModel for recording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23dde5ac42444e4949fdd250a44518b5f465e8b5", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/23dde5ac42444e4949fdd250a44518b5f465e8b5", "committedDate": "2020-10-20T08:47:53Z", "message": "Fix quality checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79185b126d27517d3c495668dc8d50812d9f7eb2", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/79185b126d27517d3c495668dc8d50812d9f7eb2", "committedDate": "2020-10-20T08:47:53Z", "message": "Move strings to module"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b8fbe26ebeccee6c90e33298eb9fdbd395fd3e0a", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/b8fbe26ebeccee6c90e33298eb9fdbd395fd3e0a", "committedDate": "2020-10-19T17:05:37Z", "message": "Move strings to module"}, "afterCommit": {"oid": "79185b126d27517d3c495668dc8d50812d9f7eb2", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/79185b126d27517d3c495668dc8d50812d9f7eb2", "committedDate": "2020-10-20T08:47:53Z", "message": "Move strings to module"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "879b9c6c34cb43a153b93ddb5ba8450f5e2544fa", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/879b9c6c34cb43a153b93ddb5ba8450f5e2544fa", "committedDate": "2020-10-20T08:59:55Z", "message": "Remove ProGuard config from library modules\n\n`collect_app` handles minification so libraries should not minify. The\n`consumer-rules.pro` is for downstream modules."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNDg2NDU3", "url": "https://github.com/getodk/collect/pull/4173#pullrequestreview-512486457", "createdAt": "2020-10-20T09:01:49Z", "commit": {"oid": "879b9c6c34cb43a153b93ddb5ba8450f5e2544fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTowMTo0OVrOHkyEuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTowMTo0OVrOHkyEuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMzMTE5Mw==", "bodyText": "We don't need these for library modules", "url": "https://github.com/getodk/collect/pull/4173#discussion_r508331193", "createdAt": "2020-10-20T09:01:49Z", "author": {"login": "seadowg"}, "path": "audioclips/build.gradle", "diffHunk": "@@ -27,7 +27,6 @@ android {\n     buildTypes {\n         release {\n             minifyEnabled false\n-            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879b9c6c34cb43a153b93ddb5ba8450f5e2544fa"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNDkwOTEz", "url": "https://github.com/getodk/collect/pull/4173#pullrequestreview-512490913", "createdAt": "2020-10-20T09:06:49Z", "commit": {"oid": "879b9c6c34cb43a153b93ddb5ba8450f5e2544fa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTowNjo0OVrOHkySMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOTowNjo0OVrOHkySMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMzNDY0MA==", "bodyText": "Let's deal with rotation later as, once we have a Foreground Service responsible for recording, it won't be as big a deal.", "url": "https://github.com/getodk/collect/pull/4173#discussion_r508334640", "createdAt": "2020-10-20T09:06:49Z", "author": {"login": "seadowg"}, "path": "audiorecorder/src/main/AndroidManifest.xml", "diffHunk": "@@ -0,0 +1,13 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    package=\"org.odk.collect.audiorecorder\">\n+\n+    <application>\n+        <activity\n+            android:name=\".recording.AudioRecorderActivity\"\n+            android:label=\"Audio Recorder\"\n+            android:screenOrientation=\"portrait\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "879b9c6c34cb43a153b93ddb5ba8450f5e2544fa"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "329d2dc2167c2ce2284323e71929493d35122bec", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/329d2dc2167c2ce2284323e71929493d35122bec", "committedDate": "2020-10-20T16:26:26Z", "message": "Add comment to explain dagger weirdness"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTIxMzM0", "url": "https://github.com/getodk/collect/pull/4173#pullrequestreview-512921334", "createdAt": "2020-10-20T16:28:54Z", "commit": {"oid": "329d2dc2167c2ce2284323e71929493d35122bec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjoyODo1NFrOHlG5Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjoyODo1NFrOHlG5Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3MjI1OA==", "bodyText": "This file provides a pretty minimal (for Dagger) DI setup. We could come up with something more complex to attach the component to the Application object which would mean we wouldn't run into static state problems (see the code comment below) but I don't think we need to go there yet.", "url": "https://github.com/getodk/collect/pull/4173#discussion_r508672258", "createdAt": "2020-10-20T16:28:54Z", "author": {"login": "seadowg"}, "path": "audiorecorder/src/main/java/org/odk/collect/audiorecorder/Config.kt", "diffHunk": "@@ -0,0 +1,67 @@\n+package org.odk.collect.audiorecorder\n+\n+import android.app.Activity\n+import android.app.Application\n+import android.media.MediaRecorder\n+import dagger.BindsInstance\n+import dagger.Component\n+import dagger.Module\n+import dagger.Provides\n+import org.odk.collect.audiorecorder.recorder.MediaRecorderRecorder\n+import org.odk.collect.audiorecorder.recorder.RealMediaRecorderWrapper\n+import org.odk.collect.audiorecorder.recorder.Recorder\n+import org.odk.collect.audiorecorder.recording.AudioRecorderActivity\n+\n+private var _component: AudioRecorderDependencyComponent? = null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329d2dc2167c2ce2284323e71929493d35122bec"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTIyMDU0", "url": "https://github.com/getodk/collect/pull/4173#pullrequestreview-512922054", "createdAt": "2020-10-20T16:29:38Z", "commit": {"oid": "329d2dc2167c2ce2284323e71929493d35122bec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjoyOTozOFrOHlG7Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjoyOTozOFrOHlG7Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3Mjc4Mg==", "bodyText": "This interface brought to you by a slightly funky looking ShadowMediaRecorder and the \"don't mock/fake/stub things you don't own\" rule.", "url": "https://github.com/getodk/collect/pull/4173#discussion_r508672782", "createdAt": "2020-10-20T16:29:38Z", "author": {"login": "seadowg"}, "path": "audiorecorder/src/main/java/org/odk/collect/audiorecorder/recorder/MediaRecorderWrapper.kt", "diffHunk": "@@ -0,0 +1,63 @@\n+package org.odk.collect.audiorecorder.recorder\n+\n+import android.media.MediaRecorder\n+\n+/**\n+ * Allows faking/stubbing/mocking with our interactions with Android's MediaRecorder\n+ */\n+\n+interface MediaRecorderWrapper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329d2dc2167c2ce2284323e71929493d35122bec"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTIzOTYx", "url": "https://github.com/getodk/collect/pull/4173#pullrequestreview-512923961", "createdAt": "2020-10-20T16:31:44Z", "commit": {"oid": "329d2dc2167c2ce2284323e71929493d35122bec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjozMTo0NFrOHlHAxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjozMTo0NFrOHlHAxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3NDI0NQ==", "bodyText": "I went with a fake rather than a mock here as it lets me capture the importance of the method call order (prepare before start for example) without having to specify exactly what order things are called in.", "url": "https://github.com/getodk/collect/pull/4173#discussion_r508674245", "createdAt": "2020-10-20T16:31:44Z", "author": {"login": "seadowg"}, "path": "audiorecorder/src/test/java/org/odk/collect/audiorecorder/recording/MediaRecorderRecorderTest.kt", "diffHunk": "@@ -0,0 +1,224 @@\n+package org.odk.collect.audiorecorder.recording\n+\n+import android.media.MediaRecorder\n+import com.google.common.io.Files\n+import org.hamcrest.MatcherAssert.assertThat\n+import org.hamcrest.Matchers.equalTo\n+import org.hamcrest.Matchers.not\n+import org.junit.Test\n+import org.odk.collect.audiorecorder.recorder.MediaRecorderRecorder\n+import org.odk.collect.audiorecorder.recorder.MediaRecorderWrapper\n+import java.io.File\n+\n+class MediaRecorderRecorderTest {\n+\n+    private val cacheDir = Files.createTempDir()\n+    private val mediaRecorder = FakeMediaRecorderWrapper()\n+    private val recorder = MediaRecorderRecorder(cacheDir) { mediaRecorder }\n+\n+    @Test\n+    fun start_startsMediaRecorder() {\n+        recorder.start()\n+        assertThat(mediaRecorder.hasStarted(), equalTo(true))\n+    }\n+\n+    @Test\n+    fun start_setsUpAACRecordingFromMic() {\n+        recorder.start()\n+\n+        assertThat(mediaRecorder.getAudioEncoder(), equalTo(MediaRecorder.AudioEncoder.AAC))\n+        assertThat(mediaRecorder.getAudioEncodingSampleRate(), equalTo(32000))\n+        assertThat(mediaRecorder.getAudioEncodingBitRate(), equalTo(128000))\n+        assertThat(mediaRecorder.getOutputFormat(), equalTo(MediaRecorder.OutputFormat.MPEG_4))\n+\n+        assertThat(mediaRecorder.getAudioSource(), equalTo(MediaRecorder.AudioSource.MIC))\n+    }\n+\n+    @Test\n+    fun start_createsAndRecordsToFileInCacheDir() {\n+        recorder.start()\n+        assertThat(mediaRecorder.getOutputFile()!!.parent, equalTo(cacheDir.absolutePath))\n+    }\n+\n+    @Test\n+    fun recordingTwice_doesntUseSameOutputFile() {\n+        var mediaRecorder = FakeMediaRecorderWrapper()\n+        var recorder = MediaRecorderRecorder(cacheDir) { mediaRecorder }\n+        recorder.start()\n+        val outputFile1 = mediaRecorder.getOutputFile()\n+\n+        mediaRecorder = FakeMediaRecorderWrapper()\n+        recorder = MediaRecorderRecorder(cacheDir) { mediaRecorder }\n+        recorder.start()\n+        val outputFile2 = mediaRecorder.getOutputFile()\n+\n+        assertThat(outputFile1!!.absolutePath, not(equalTo(outputFile2!!.absolutePath)))\n+    }\n+\n+    @Test\n+    fun stop_releasesMediaRecorder() {\n+        recorder.start()\n+        recorder.stop()\n+        assertThat(mediaRecorder.isReleased(), equalTo(true))\n+    }\n+\n+    @Test\n+    fun stop_returnsOutputFile() {\n+        recorder.start()\n+        val file = recorder.stop()\n+        assertThat(file.absolutePath, equalTo(mediaRecorder.getOutputFile()!!.absolutePath))\n+    }\n+\n+    @Test\n+    fun cancel_releasesMediaRecorder() {\n+        recorder.start()\n+        recorder.cancel()\n+        assertThat(mediaRecorder.isReleased(), equalTo(true))\n+    }\n+\n+    @Test\n+    fun cancel_deletesOutputFile() {\n+        recorder.start()\n+        recorder.cancel()\n+        assertThat(mediaRecorder.getOutputFile()!!.exists(), equalTo(false))\n+    }\n+\n+    @Test\n+    fun cancel_beforeStart_works() {\n+        recorder.cancel()\n+    }\n+}\n+\n+private class FakeMediaRecorderWrapper : MediaRecorderWrapper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329d2dc2167c2ce2284323e71929493d35122bec"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTI2Mjky", "url": "https://github.com/getodk/collect/pull/4173#pullrequestreview-512926292", "createdAt": "2020-10-20T16:34:21Z", "commit": {"oid": "329d2dc2167c2ce2284323e71929493d35122bec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjozNDoyMVrOHlHHGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjozNDoyMVrOHlHHGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3NTg2NQ==", "bodyText": "I didn't end up having to pull this out to its own module but I like the changes I made to it in preparation so kept them in.", "url": "https://github.com/getodk/collect/pull/4173#discussion_r508675865", "createdAt": "2020-10-20T16:34:21Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/PermissionUtils.java", "diffHunk": "@@ -41,6 +33,12 @@\n \n public class PermissionUtils {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329d2dc2167c2ce2284323e71929493d35122bec"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MzQxMDM3", "url": "https://github.com/getodk/collect/pull/4173#pullrequestreview-514341037", "createdAt": "2020-10-22T03:51:48Z", "commit": {"oid": "c7ad39a171f972f9d02ccdf1331450108c4feb30"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwMzo1MTo0OFrOHmPnsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQwNDo0NjoyM1rOHmQa3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg2Mzg1Ng==", "bodyText": "Use var", "url": "https://github.com/getodk/collect/pull/4173#discussion_r509863856", "createdAt": "2020-10-22T03:51:48Z", "author": {"login": "lognaturel"}, "path": "audiorecorder/build.gradle", "diffHunk": "@@ -0,0 +1,54 @@\n+apply plugin: 'com.android.library'\n+apply plugin: 'kotlin-android'\n+apply plugin: 'kotlin-android-extensions'\n+apply plugin: 'kotlin-kapt'\n+\n+android {\n+    compileSdkVersion 30", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7ad39a171f972f9d02ccdf1331450108c4feb30"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg2OTk5Ng==", "bodyText": "I don\u2019t get this. Might be good to talk through it and see if we can clarify.", "url": "https://github.com/getodk/collect/pull/4173#discussion_r509869996", "createdAt": "2020-10-22T04:17:25Z", "author": {"login": "lognaturel"}, "path": "audiorecorder/src/main/java/org/odk/collect/audiorecorder/Config.kt", "diffHunk": "@@ -14,6 +14,10 @@ import org.odk.collect.audiorecorder.recording.AudioRecorderActivity\n \n private var _component: AudioRecorderDependencyComponent? = null\n \n+/**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329d2dc2167c2ce2284323e71929493d35122bec"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTg3Njk1OA==", "bodyText": "What do you think about flipping this and going with \"Use external app for audio recording\" (true by default)? That way it most likely won't need to be translated again. We can absolutely change the wording if we find we need to but at least we send something to translators that's likely to stick around.", "url": "https://github.com/getodk/collect/pull/4173#discussion_r509876958", "createdAt": "2020-10-22T04:46:23Z", "author": {"login": "lognaturel"}, "path": "strings/src/main/res/values/strings.xml", "diffHunk": "@@ -705,4 +705,7 @@\n     <string name=\"security_error\">Collect can\\'t connect securely to the server at %s. Did you enter the URL correctly?</string>\n     <string name=\"failure\">Failure</string>\n     <string name=\"form_update_succeeded\">Form update succeeded</string>\n+    <string name=\"in_app_recording\">Use in-app audio recording</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "329d2dc2167c2ce2284323e71929493d35122bec"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ae1e20aed5e973615e7b57d6bef49f68e4162ad", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/2ae1e20aed5e973615e7b57d6bef49f68e4162ad", "committedDate": "2020-10-22T12:53:50Z", "message": "Use variables for SDK versions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4e7f0e9e8d445769dee66aa818017356a14c0fa", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/b4e7f0e9e8d445769dee66aa818017356a14c0fa", "committedDate": "2020-10-22T13:08:14Z", "message": "Flip experimental flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d009b44f2003bca402a5489aae813335d6b6f7c", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/3d009b44f2003bca402a5489aae813335d6b6f7c", "committedDate": "2020-10-22T15:34:04Z", "message": "Try and improve comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0ODY3Njky", "url": "https://github.com/getodk/collect/pull/4173#pullrequestreview-514867692", "createdAt": "2020-10-22T15:42:09Z", "commit": {"oid": "3d009b44f2003bca402a5489aae813335d6b6f7c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2428, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}