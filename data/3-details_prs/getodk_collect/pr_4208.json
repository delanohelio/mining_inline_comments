{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2MjIyMTE4", "number": 4208, "title": "Try using the package manager  to get a launch intent for external apps, support string uris for binary external widgets", "bodyText": "Closes #4194\nWhat has been done to verify that this works as intended?\nTried launching external applications that were previously failing with both a single question and in an intent field list.\nWhy is this the best possible solution? Were any other approaches considered?\nI don't fully understand the intent rules. From my reading, it seems that trying both new Intent(intentName) and getLaunchIntentForPackage(intentName) gives us the biggest chance of success. I couldn't find any other good alternatives.\nI also broadened the allowable types for binary widgets. I realized that in our initial spec we weren't explicit about types and so users might be providing the URIs as strings. The change here is the simplest way I can find to support both.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nSince these are additive, the regression risk is low. Only binary widgets and binary questions in intent field-lists are at any risk.\nDo we need any specific form for testing your changes? If so, please attach one.\nSee forum post linked from issue.\nDoes this change require updates to documentation? If so, please file an issue here and include the link below.\nNo.\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-11-05T17:28:25Z", "url": "https://github.com/getodk/collect/pull/4208", "merged": true, "mergeCommit": {"oid": "050396ae7487716e13731adbf6d6453ad9f2608d"}, "closed": true, "closedAt": "2020-11-17T11:02:44Z", "author": {"login": "lognaturel"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZlkn_AH2gAyNTE2MjIyMTE4OjAzMzdkNjdiOThmMGNkZGVlODc2ZWU3YzdkYzIzNGVkZDA5Zjk3ZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABda6X_jAFqTUyNjYwODUwNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0337d67b98f0cddee876ee7c7dc234edd09f97e7", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/0337d67b98f0cddee876ee7c7dc234edd09f97e7", "committedDate": "2020-11-05T17:11:50Z", "message": "Add support for launching apps without DEFAULT category"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26b842e1c8e03ee27f0237fad77455dccfd66e29", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/26b842e1c8e03ee27f0237fad77455dccfd66e29", "committedDate": "2020-11-05T17:14:41Z", "message": "Allow string or Uri for binary extra"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NTAzMjQ4", "url": "https://github.com/getodk/collect/pull/4208#pullrequestreview-524503248", "createdAt": "2020-11-05T17:35:28Z", "commit": {"oid": "26b842e1c8e03ee27f0237fad77455dccfd66e29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzozNToyOFrOHuOafg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNzozNToyOFrOHuOafg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODIzMjcwMg==", "bodyText": "I can't remember the details of why this is needed but can try to pull it up again if needed. There are flags set by default when doing getLaunchIntentForPackage and they suppress something, maybe returning a result.", "url": "https://github.com/getodk/collect/pull/4208#discussion_r518232702", "createdAt": "2020-11-05T17:35:28Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/ODKView.java", "diffHunk": "@@ -405,48 +405,49 @@ private void addIntentLaunchButton(Context context, FormEntryPrompt[] questionPr\n         launchIntentButton.setText(buttonText);\n         launchIntentButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, QuestionFontSizeUtils.getQuestionFontSize() + 2);\n         launchIntentButton.setVisibility(VISIBLE);\n-        launchIntentButton.setOnClickListener(new OnClickListener() {\n-            @Override\n-            public void onClick(View v) {\n-                String intentName = ExternalAppsUtils.extractIntentName(intentString);\n-                Map<String, String> parameters = ExternalAppsUtils.extractParameters(\n-                        intentString);\n-\n-                Intent i = new Intent(intentName);\n-                try {\n-                    ExternalAppsUtils.populateParameters(i, parameters,\n-                            c.getIndex().getReference());\n-\n-                    for (FormEntryPrompt p : questionPrompts) {\n-                        IFormElement formElement = p.getFormElement();\n-                        if (formElement instanceof QuestionDef) {\n-                            TreeReference reference =\n-                                    (TreeReference) formElement.getBind().getReference();\n-                            IAnswerData answerValue = p.getAnswerValue();\n-                            Object value =\n-                                    answerValue == null ? null : answerValue.getValue();\n-                            switch (p.getDataType()) {\n-                                case Constants.DATATYPE_TEXT:\n-                                case Constants.DATATYPE_INTEGER:\n-                                case Constants.DATATYPE_DECIMAL:\n-                                case Constants.DATATYPE_BINARY:\n-                                    i.putExtra(reference.getNameLast(),\n-                                            (Serializable) value);\n-                                    break;\n-                            }\n+        launchIntentButton.setOnClickListener(view -> {\n+            String intentName = ExternalAppsUtils.extractIntentName(intentString);\n+            Map<String, String> parameters = ExternalAppsUtils.extractParameters(intentString);\n+\n+            Intent i = new Intent(intentName);\n+            if (i.resolveActivity(Collect.getInstance().getPackageManager()) == null) {\n+                i = Collect.getInstance().getPackageManager().getLaunchIntentForPackage(intentName);\n+                i.setFlags(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b842e1c8e03ee27f0237fad77455dccfd66e29"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2MDc1NDQ5", "url": "https://github.com/getodk/collect/pull/4208#pullrequestreview-526075449", "createdAt": "2020-11-09T09:40:20Z", "commit": {"oid": "26b842e1c8e03ee27f0237fad77455dccfd66e29"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTo0MDoyMFrOHvmQQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwOTo0MDoyMFrOHvmQQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY3MTg3NQ==", "bodyText": "getLaunchIntentForPackage() might return null so wee need some null check now I think.", "url": "https://github.com/getodk/collect/pull/4208#discussion_r519671875", "createdAt": "2020-11-09T09:40:20Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/ODKView.java", "diffHunk": "@@ -405,48 +405,49 @@ private void addIntentLaunchButton(Context context, FormEntryPrompt[] questionPr\n         launchIntentButton.setText(buttonText);\n         launchIntentButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, QuestionFontSizeUtils.getQuestionFontSize() + 2);\n         launchIntentButton.setVisibility(VISIBLE);\n-        launchIntentButton.setOnClickListener(new OnClickListener() {\n-            @Override\n-            public void onClick(View v) {\n-                String intentName = ExternalAppsUtils.extractIntentName(intentString);\n-                Map<String, String> parameters = ExternalAppsUtils.extractParameters(\n-                        intentString);\n-\n-                Intent i = new Intent(intentName);\n-                try {\n-                    ExternalAppsUtils.populateParameters(i, parameters,\n-                            c.getIndex().getReference());\n-\n-                    for (FormEntryPrompt p : questionPrompts) {\n-                        IFormElement formElement = p.getFormElement();\n-                        if (formElement instanceof QuestionDef) {\n-                            TreeReference reference =\n-                                    (TreeReference) formElement.getBind().getReference();\n-                            IAnswerData answerValue = p.getAnswerValue();\n-                            Object value =\n-                                    answerValue == null ? null : answerValue.getValue();\n-                            switch (p.getDataType()) {\n-                                case Constants.DATATYPE_TEXT:\n-                                case Constants.DATATYPE_INTEGER:\n-                                case Constants.DATATYPE_DECIMAL:\n-                                case Constants.DATATYPE_BINARY:\n-                                    i.putExtra(reference.getNameLast(),\n-                                            (Serializable) value);\n-                                    break;\n-                            }\n+        launchIntentButton.setOnClickListener(view -> {\n+            String intentName = ExternalAppsUtils.extractIntentName(intentString);\n+            Map<String, String> parameters = ExternalAppsUtils.extractParameters(intentString);\n+\n+            Intent i = new Intent(intentName);\n+            if (i.resolveActivity(Collect.getInstance().getPackageManager()) == null) {\n+                i = Collect.getInstance().getPackageManager().getLaunchIntentForPackage(intentName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26b842e1c8e03ee27f0237fad77455dccfd66e29"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d56020ba830f3198bfa70c8b443ad144af919594", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/d56020ba830f3198bfa70c8b443ad144af919594", "committedDate": "2020-11-09T18:25:15Z", "message": "Handle null launch intent"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2NjA4NTA3", "url": "https://github.com/getodk/collect/pull/4208#pullrequestreview-526608507", "createdAt": "2020-11-09T19:59:58Z", "commit": {"oid": "d56020ba830f3198bfa70c8b443ad144af919594"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2460, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}