{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1MjgzNzQ4", "number": 3602, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMjo0MTozOFrODZejnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzozODoxNFrODaQV8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MDQxNjMxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/application/FeatureFlags.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMjo0MTozOFrOFf4meA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMVQxMjo0MTozOFrOFf4meA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODk3NzUyOA==", "bodyText": "This is just using a very simple static feature flag. If we were looking at having tests for both behaviours I'd generally look at having a FeatureFlag object that could be passed to objects that need it.", "url": "https://github.com/getodk/collect/pull/3602#discussion_r368977528", "createdAt": "2020-01-21T12:41:38Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/application/FeatureFlags.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package org.odk.collect.android.application;\n+\n+public class FeatureFlags {\n+\n+    public static final boolean STATIC_ADD_REPEAT_LANGUAGE = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e508c9b53d501b44b1b54819529b41ca571778b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODU3MjQzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/support/pages/AddNewRepeatDialog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzozNzo1N1rOFhG2Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzozNzo1N1rOFhG2Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1OTUxOA==", "bodyText": "clickOnAddRepeat or just clickOnAdd?", "url": "https://github.com/getodk/collect/pull/3602#discussion_r370259518", "createdAt": "2020-01-23T17:37:57Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/support/pages/AddNewRepeatDialog.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.odk.collect.android.support.pages;\n+\n+import androidx.test.rule.ActivityTestRule;\n+\n+import org.odk.collect.android.R;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+\n+public class AddNewRepeatDialog extends Page<AddNewRepeatDialog> {\n+\n+    private final String repeatName;\n+\n+    AddNewRepeatDialog(String repeatName, ActivityTestRule rule) {\n+        super(rule);\n+        this.repeatName = repeatName;\n+    }\n+\n+    @Override\n+    public AddNewRepeatDialog assertOnPage() {\n+        onView(withText(getTranslatedString(R.string.add_repeat_question, repeatName))).check(matches(isDisplayed()));\n+        return this;\n+    }\n+\n+    public FormEntryPage clickOnAddGroup(FormEntryPage destination) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a25de691e6e41c102c07690af4b587abc1415f"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODU3MzMwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/support/pages/AddNewRepeatDialog.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzozODoxNFrOFhG2ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNzozODoxNFrOFhG2ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI1OTY1MQ==", "bodyText": "Same as above.", "url": "https://github.com/getodk/collect/pull/3602#discussion_r370259651", "createdAt": "2020-01-23T17:38:14Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/support/pages/AddNewRepeatDialog.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.odk.collect.android.support.pages;\n+\n+import androidx.test.rule.ActivityTestRule;\n+\n+import org.odk.collect.android.R;\n+\n+import static androidx.test.espresso.Espresso.onView;\n+import static androidx.test.espresso.assertion.ViewAssertions.matches;\n+import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;\n+import static androidx.test.espresso.matcher.ViewMatchers.withText;\n+\n+public class AddNewRepeatDialog extends Page<AddNewRepeatDialog> {\n+\n+    private final String repeatName;\n+\n+    AddNewRepeatDialog(String repeatName, ActivityTestRule rule) {\n+        super(rule);\n+        this.repeatName = repeatName;\n+    }\n+\n+    @Override\n+    public AddNewRepeatDialog assertOnPage() {\n+        onView(withText(getTranslatedString(R.string.add_repeat_question, repeatName))).check(matches(isDisplayed()));\n+        return this;\n+    }\n+\n+    public FormEntryPage clickOnAddGroup(FormEntryPage destination) {\n+        clickOnString(R.string.add_repeat);\n+        return destination;\n+    }\n+\n+    public FormEntryPage clickOnDoNotAddGroup(FormEntryPage destination) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1a25de691e6e41c102c07690af4b587abc1415f"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3443, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}