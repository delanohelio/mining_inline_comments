{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NTgxNzY4", "number": 3967, "title": "Update All Widgets Form Test", "bodyText": "Closes #3963\n\nWhat has been done to verify that this works as intended?\nI verified the new AllWidgetsFormTest on my emulator.\nWhy is this the best possible solution? Were any other approaches considered?\nI replaced the all-widgets.xml with the latest version of the form and removed all the extra checks in AllWidgetsFormTest.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nDo we need any specific form for testing your changes? If so, please attach one.\nNo\nDoes this change require updates to documentation? If so, please file an issue here and include the link below.\nNo\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-07-10T18:24:43Z", "url": "https://github.com/getodk/collect/pull/3967", "merged": true, "mergeCommit": {"oid": "3e49aad71539e12aa133bb905b63cfcfcc50019e"}, "closed": true, "closedAt": "2020-07-13T14:20:03Z", "author": {"login": "SaumiaSinghal"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcznuIHAH2gAyNDQ3NTgxNzY4OmE3ZWY1ZTM1YzZhOTkwYTc3YzlmMzI4ZTFhOWVhYzljNGMzYmVlMGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc0iL11gFqTQ0NzI5NTgzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a7ef5e35c6a990a77c9f328e1a9eac9c4c3bee0c", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/a7ef5e35c6a990a77c9f328e1a9eac9c4c3bee0c", "committedDate": "2020-07-10T18:12:54Z", "message": "update all-widgets.xml to latest version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "640131f1e55ea1dafab3ecb8581f21075fc01e46", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/640131f1e55ea1dafab3ecb8581f21075fc01e46", "committedDate": "2020-07-10T18:13:33Z", "message": "remove extra checks in AllWidgetsFormTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3e1482c6a11cce1ff00a0e51b4d22a27c5e51e3", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/a3e1482c6a11cce1ff00a0e51b4d22a27c5e51e3", "committedDate": "2020-07-10T18:25:42Z", "message": "update testExPrinterWidget()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3MTUxNjM4", "url": "https://github.com/getodk/collect/pull/3967#pullrequestreview-447151638", "createdAt": "2020-07-13T11:05:36Z", "commit": {"oid": "a3e1482c6a11cce1ff00a0e51b4d22a27c5e51e3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMTowNTozN1rOGwj00g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxMTowNTozN1rOGwj00g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzU3MTc5NA==", "bodyText": "We probably don't need this class any more. The test should just use the FormActivityTestRule directly.", "url": "https://github.com/getodk/collect/pull/3967#discussion_r453571794", "createdAt": "2020-07-13T11:05:37Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/AllWidgetsFormTest.java", "diffHunk": "@@ -846,189 +555,72 @@ public void testImageSelectOne() {\n         onView(withText(\"Image select one widget\")).perform(swipeLeft());\n     }\n \n-    public void testMultiSelectWidget() {\n+    public void testLikertWidget() {\n+        Screengrab.screenshot(\"likert-widget\");\n \n+        onView(withText(\"Likert widget\")).perform(swipeLeft());\n+    }\n+\n+    public void testMultiSelectWidget() {\n         Screengrab.screenshot(\"multi-select\");\n \n         onView(withText(\"Multi select widget\")).perform(swipeLeft());\n     }\n \n-    public void testGridSelectMultipleCompact() {\n+    public void testMultiSelectAutocompleteWidget() {\n+        Screengrab.screenshot(\"multi-select-autocomplete\");\n \n+        onView(withText(\"Multi select autocomplete widget\")).perform(swipeLeft());\n+    }\n+\n+    public void testGridSelectMultipleCompact() {\n         Screengrab.screenshot(\"grid-multi1\");\n \n         onView(withText(\"Grid select multiple widget\")).perform(swipeLeft());\n     }\n \n     public void testGridSelectCompact2() {\n-\n         Screengrab.screenshot(\"grid-multi2\");\n \n         onView(withText(\"Grid select multiple widget\")).perform(swipeLeft());\n     }\n \n     public void testSpinnerSelectMultiple() {\n-\n         Screengrab.screenshot(\"spinner-select\");\n \n         onView(withText(\"Spinner widget: select multiple\")).perform(swipeLeft());\n     }\n \n     public void testImageSelectMultiple() {\n-\n         Screengrab.screenshot(\"image-select-multiple\");\n \n         onView(withText(\"Image select multiple widget\")).perform(swipeLeft());\n     }\n \n     public void testLabelWidget() {\n-\n         Screengrab.screenshot(\"label-widget\");\n \n         onView(withText(\"Label widget\")).perform(swipeLeft());\n     }\n \n-    public void testTriggerWidget(boolean check) {\n+    public void testRankWidget() {\n+        Screengrab.screenshot(\"rank-widget\");\n \n-        if (check) {\n-            onVisibleCheckBox().perform(click());\n-        }\n+        onView(withText(\"Rank widget\")).perform(swipeLeft());\n+    }\n \n+    public void testTriggerWidget() {\n         // captures screenshot of trigger widget\n         Screengrab.screenshot(\"trigger-widget\");\n \n-        openWidgetList();\n         onView(withText(\"Trigger widget\")).perform(click());\n-\n-        onVisibleCheckBox().check(matches(check ? isChecked() : isNotChecked()));\n-\n-        if (check) {\n-            onView(withText(\"Trigger widget\")).perform(swipeLeft());\n-        }\n     }\n \n     public void testSubmission() {\n \n     }\n     //endregion\n \n-    //region Helper methods.\n-    public static ViewAction setProgress(final int progress) {\n-        return new ViewAction() {\n-            @Override\n-            public void perform(UiController uiController, View view) {\n-                SeekBar seekBar = (SeekBar) view;\n-                seekBar.setProgress(progress);\n-            }\n-\n-            @Override\n-            public String getDescription() {\n-                return \"Set a progress on a SeekBar\";\n-            }\n-\n-            @Override\n-            public Matcher<View> getConstraints() {\n-                return ViewMatchers.isAssignableFrom(SeekBar.class);\n-            }\n-        };\n-    }\n-\n-    public static ViewAction setNumberPickerValue(final int value) {\n-        return new ViewAction() {\n-            @Override\n-            public void perform(UiController uiController, View view) {\n-                NumberPicker numberPickerDialog = (NumberPicker) view;\n-                numberPickerDialog.setValue(value);\n-            }\n-\n-            @Override\n-            public String getDescription() {\n-                return \"Set a value on a Number Picker\";\n-            }\n-\n-            @Override\n-            public Matcher<View> getConstraints() {\n-                return ViewMatchers.isAssignableFrom(NumberPicker.class);\n-            }\n-        };\n-    }\n-\n-    private ViewInteraction onVisibleSeekBar() {\n-        return onView(withId(R.id.seek_bar));\n-    }\n-\n-    private ViewInteraction onVisibleEditText() {\n-        return onView(withClassName(endsWith(\"EditText\")));\n-    }\n-\n-    private ViewInteraction onVisibleCustomEditText() {\n-        return onView(withClassName(endsWith(\"CustomEditText\")));\n-    }\n-\n-    private ViewInteraction onVisibleCheckBox() {\n-        return onView(withClassName(endsWith(\"CheckBox\")));\n-    }\n-\n-    private ViewInteraction onVisibleNumberPickerDialog() {\n-        return onView(withClassName(endsWith(\"NumberPicker\")));\n-    }\n-\n-    // private void openWidget(String name) {\n-    //     openWidgetList();\n-    //     onView(withText(name)).perform(click());\n-    // }\n-\n-    private void openWidgetList() {\n-        onView(withId(R.id.menu_goto)).perform(click());\n-    }\n-\n-    // private void saveForm() {\n-    //    onView(withId(R.id.menu_save)).perform(click());\n-    // }\n-\n-    private String randomString() {\n-        return RandomString.make();\n-    }\n-\n-    private int randomInt() {\n-        return Math.abs(random.nextInt());\n-    }\n-\n-    private String randomIntegerString() {\n-        String s = Integer.toString(randomInt());\n-        while (s.length() > 9) {\n-            s = s.substring(1);\n-        }\n-\n-        // Make sure the result is a valid Integer String:\n-        return Integer.toString(Integer.parseInt(s));\n-    }\n-\n-    private double randomDecimal() {\n-        return random.nextDouble();\n-    }\n-\n-    private String randomDecimalString() {\n-        DecimalFormat decimalFormat = new DecimalFormat(\"####.#####\");\n-        return decimalFormat.format(randomDecimal());\n-    }\n-\n-    //    private ActivityResult cancelledResult() {\n-    //        return new ActivityResult(RESULT_CANCELED, null);\n-    //    }\n-    //\n-    //    private ActivityResult okResult(@Nullable Intent data) {\n-    //        return new ActivityResult(RESULT_OK, data);\n-    //    }\n-\n-    private String randomIntegerSeparator() {\n-        int number = 123456;\n-        NumberFormat numberFormat = NumberFormat.getNumberInstance(Locale.US);\n-        return numberFormat.format(number);\n-     }\n-\n-    //endregion\n-\n     private static class AllWidgetsFormTestRule extends FormActivityTestRule {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3e1482c6a11cce1ff00a0e51b4d22a27c5e51e3"}, "originalPosition": 969}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e67d45fa87ccbd765a0bd9014f2b2eae32eee382", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/e67d45fa87ccbd765a0bd9014f2b2eae32eee382", "committedDate": "2020-07-13T11:27:58Z", "message": "remove AllWidgetsFormTestRule class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ3Mjk1ODMy", "url": "https://github.com/getodk/collect/pull/3967#pullrequestreview-447295832", "createdAt": "2020-07-13T14:19:51Z", "commit": {"oid": "e67d45fa87ccbd765a0bd9014f2b2eae32eee382"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2543, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}