{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NDA4NjQw", "number": 4180, "title": "Use Foreground Service to manage audio recording", "bodyText": "Closes #4150\nThis moves the recording code into a Foreground Service which allows it to run while the phone is locked or the app is in the background.\nWhat has been done to verify that this works as intended?\nNew tests and verified manually on emulator and on device.\nWhy is this the best possible solution? Were any other approaches considered?\nComments inline.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nShould just add new feature. There has been a change to the translation code. I had a quick play around with changing languages in the app and everything seemed ok however.\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-10-22T16:17:06Z", "url": "https://github.com/getodk/collect/pull/4180", "merged": true, "mergeCommit": {"oid": "32acf177584ee476c2c5c1709122accddd7f24fc"}, "closed": true, "closedAt": "2020-11-03T05:05:43Z", "author": {"login": "seadowg"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVD7j6gH2gAyNTA4NDA4NjQwOmI0MTNkODczZGQ0MGM4ZjgwMDkzNzBhNzM4NDZhMzM3MjgzY2Y2YmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdYx-i-gFqTUyMjE5MTYxOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b413d873dd40c8f8009370a73846a337283cf6bb", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/b413d873dd40c8f8009370a73846a337283cf6bb", "committedDate": "2020-10-22T15:44:25Z", "message": "Move to observer to trigger recorder activity finishing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b79acf65b8918514c54a3ca4595b4f045fb02d6", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/8b79acf65b8918514c54a3ca4595b4f045fb02d6", "committedDate": "2020-10-22T15:44:25Z", "message": "Use repository to store recording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed1ee2b4f1e2b374dc15996f806a8d1d8f6694b6", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/ed1ee2b4f1e2b374dc15996f806a8d1d8f6694b6", "committedDate": "2020-10-22T15:44:25Z", "message": "Move recording logic to service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeb113d01daa2d24d24785a03748a60a85091651", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/aeb113d01daa2d24d24785a03748a60a85091651", "committedDate": "2020-10-22T15:44:25Z", "message": "Make sure service cleans itself up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5abdbeb85609f4f151fa2d987731fa84ed2dbd7", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/d5abdbeb85609f4f151fa2d987731fa84ed2dbd7", "committedDate": "2020-10-22T15:44:25Z", "message": "Fix dodgy test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "daae056405871a3ad23236b358ab6738c3d058c9", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/daae056405871a3ad23236b358ab6738c3d058c9", "committedDate": "2020-10-22T15:44:25Z", "message": "Refactor clearing repo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03da8c238c5fb402f375f4cae5899108d2d9dc4f", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/03da8c238c5fb402f375f4cae5899108d2d9dc4f", "committedDate": "2020-10-22T15:44:26Z", "message": "Handle don't keep activities case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd4e36f285a2a8a6a02046f497a6840c07d9c652", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/cd4e36f285a2a8a6a02046f497a6840c07d9c652", "committedDate": "2020-10-22T15:44:26Z", "message": "Show notification while recording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8909b2ea88510be2075de323b83d74c22ef0b068", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/8909b2ea88510be2075de323b83d74c22ef0b068", "committedDate": "2020-10-22T15:44:26Z", "message": "Handle killing app from task manager case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b13272ce075098b0b5747a9139e93324c65ee661", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/b13272ce075098b0b5747a9139e93324c65ee661", "committedDate": "2020-10-22T15:44:26Z", "message": "Style notification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aea7a87d3fb9a9b123524c813b51fb47ca1066ee", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/aea7a87d3fb9a9b123524c813b51fb47ca1066ee", "committedDate": "2020-10-22T15:44:26Z", "message": "Make activity tests use real flow"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f962b92dca09c82d45540b7f4f01ba0ceeea4ae", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/3f962b92dca09c82d45540b7f4f01ba0ceeea4ae", "committedDate": "2020-10-22T15:44:26Z", "message": "Move localization logic to strings package"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0OTAyMzk0", "url": "https://github.com/getodk/collect/pull/4180#pullrequestreview-514902394", "createdAt": "2020-10-22T16:17:31Z", "commit": {"oid": "3f962b92dca09c82d45540b7f4f01ba0ceeea4ae"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjoxNzozMVrOHmpsXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjoxNzozMVrOHmpsXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI5MTAzOQ==", "bodyText": "This is only required on Android 28+ as far as I know.", "url": "https://github.com/getodk/collect/pull/4180#discussion_r510291039", "createdAt": "2020-10-22T16:17:31Z", "author": {"login": "seadowg"}, "path": "audiorecorder/src/main/AndroidManifest.xml", "diffHunk": "@@ -2,12 +2,17 @@\n <manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\n     package=\"org.odk.collect.audiorecorder\">\n \n+    <uses-permission android:name=\"android.permission.FOREGROUND_SERVICE\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f962b92dca09c82d45540b7f4f01ba0ceeea4ae"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cef8ad37508948d1307c8203004f6df939c47c05", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/cef8ad37508948d1307c8203004f6df939c47c05", "committedDate": "2020-10-22T17:28:50Z", "message": "Use Robolectric test application to smooth out potential test problems"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c9bfcc4824428dcd5a8908d04015f59f66496978", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/c9bfcc4824428dcd5a8908d04015f59f66496978", "committedDate": "2020-10-23T09:47:47Z", "message": "Fix varargs passing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NTE3MzMw", "url": "https://github.com/getodk/collect/pull/4180#pullrequestreview-515517330", "createdAt": "2020-10-23T09:55:31Z", "commit": {"oid": "c9bfcc4824428dcd5a8908d04015f59f66496978"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwOTo1NTozMVrOHnHCww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwOTo1NTozMVrOHnHCww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc3MTkwNw==", "bodyText": "This was the magic I needed to get Dagger setup properly for tests. I'd completely forgotten robolectric could be configured in a properties file.", "url": "https://github.com/getodk/collect/pull/4180#discussion_r510771907", "createdAt": "2020-10-23T09:55:31Z", "author": {"login": "seadowg"}, "path": "audiorecorder/src/test/resources/robolectric.properties", "diffHunk": "@@ -0,0 +1 @@\n+application=org.odk.collect.audiorecorder.TestApplication", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9bfcc4824428dcd5a8908d04015f59f66496978"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NTE4MjE5", "url": "https://github.com/getodk/collect/pull/4180#pullrequestreview-515518219", "createdAt": "2020-10-23T09:56:43Z", "commit": {"oid": "c9bfcc4824428dcd5a8908d04015f59f66496978"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwOTo1Njo0M1rOHnHFkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwOTo1Njo0M1rOHnHFkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc3MjYyNA==", "bodyText": "I'm not 100% sure about the ViewModel being responsible for the service like this but it feels good to hide that there is a Service involved from the UI.", "url": "https://github.com/getodk/collect/pull/4180#discussion_r510772624", "createdAt": "2020-10-23T09:56:43Z", "author": {"login": "seadowg"}, "path": "audiorecorder/src/main/java/org/odk/collect/audiorecorder/recording/AudioRecorderViewModel.kt", "diffHunk": "@@ -1,29 +1,46 @@\n package org.odk.collect.audiorecorder.recording\n \n+import android.app.Application\n+import android.content.Intent\n+import androidx.lifecycle.LiveData\n import androidx.lifecycle.ViewModel\n import androidx.lifecycle.ViewModelProvider\n-import org.odk.collect.audiorecorder.recorder.Recorder\n+import org.odk.collect.audiorecorder.recording.AudioRecorderService.Companion.ACTION_CANCEL\n+import org.odk.collect.audiorecorder.recording.AudioRecorderService.Companion.ACTION_START\n+import org.odk.collect.audiorecorder.recording.AudioRecorderService.Companion.ACTION_STOP\n import java.io.File\n import javax.inject.Inject\n \n-internal class AudioRecorderViewModel(private val recorder: Recorder) : ViewModel() {\n+internal class AudioRecorderViewModel(private val application: Application, private val recordingRepository: RecordingRepository) : ViewModel() {\n+\n+    val recording: LiveData<File?> = recordingRepository.getRecording()\n \n     fun start() {\n-        recorder.start()\n+        application.startService(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9bfcc4824428dcd5a8908d04015f59f66496978"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NTE4Nzkx", "url": "https://github.com/getodk/collect/pull/4180#pullrequestreview-515518791", "createdAt": "2020-10-23T09:57:32Z", "commit": {"oid": "c9bfcc4824428dcd5a8908d04015f59f66496978"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwOTo1NzozMlrOHnHHRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QwOTo1NzozMlrOHnHHRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc3MzA2MA==", "bodyText": "\"Repository\" might be the right phrase but this pattern of a singleton that communicates between Services, ViewModels and UI seems pretty standard/nice.", "url": "https://github.com/getodk/collect/pull/4180#discussion_r510773060", "createdAt": "2020-10-23T09:57:32Z", "author": {"login": "seadowg"}, "path": "audiorecorder/src/main/java/org/odk/collect/audiorecorder/recording/RecordingRepository.kt", "diffHunk": "@@ -0,0 +1,22 @@\n+package org.odk.collect.audiorecorder.recording\n+\n+import androidx.lifecycle.LiveData\n+import androidx.lifecycle.MutableLiveData\n+import java.io.File\n+\n+class RecordingRepository {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9bfcc4824428dcd5a8908d04015f59f66496978"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f5ae7f9420d54923b5c4169ae8862b938d1c87c", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/5f5ae7f9420d54923b5c4169ae8862b938d1c87c", "committedDate": "2020-10-23T10:15:18Z", "message": "Move string"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NTMzMDU4", "url": "https://github.com/getodk/collect/pull/4180#pullrequestreview-515533058", "createdAt": "2020-10-23T10:18:07Z", "commit": {"oid": "5f5ae7f9420d54923b5c4169ae8862b938d1c87c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMDoxODowN1rOHnHx4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMDoxODowN1rOHnHx4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc4Mzk2OQ==", "bodyText": "I thought about introducing Espresso tests which mean we could just test the whole flow without having to separate the bulk of testing out between the Activity and the Service. That would become redundant if then got rid of the Activity and exposed the ViewModel as the main interface of the module though so I think for the moment I'll stick with this structure and see where we end up", "url": "https://github.com/getodk/collect/pull/4180#discussion_r510783969", "createdAt": "2020-10-23T10:18:07Z", "author": {"login": "seadowg"}, "path": "audiorecorder/src/test/java/org/odk/collect/audiorecorder/recording/AudioRecorderActivityTest.kt", "diffHunk": "@@ -15,81 +14,104 @@ import org.junit.Before\n import org.junit.Test\n import org.junit.runner.RunWith\n import org.odk.collect.audiorecorder.AudioRecorderDependencyModule\n-import org.odk.collect.audiorecorder.overrideDependencies\n+import org.odk.collect.audiorecorder.TestApplication\n import org.odk.collect.audiorecorder.recorder.Recorder\n+import org.odk.collect.audiorecorder.setupDependencies\n+import org.robolectric.Shadows.shadowOf\n import java.io.File\n \n @RunWith(AndroidJUnit4::class)\n class AudioRecorderActivityTest {\n \n     private val fakeRecorder = FakeRecorder()\n+    private val recordingRepository = RecordingRepository()\n \n     @Before\n     fun setup() {\n-        getApplicationContext<Application>().overrideDependencies(\n+        getApplicationContext<TestApplication>().setupDependencies(\n             object : AudioRecorderDependencyModule() {\n                 override fun providesRecorder(application: Application): Recorder {\n                     return fakeRecorder\n                 }\n+\n+                override fun providesRecordingRepository(): RecordingRepository {\n+                    return recordingRepository\n+                }\n             }\n         )\n     }\n \n     @Test\n-    fun launching_startsRecording() {\n-        launchActivity<AudioRecorderActivity>()\n-        assertThat(fakeRecorder.isRecording(), equalTo(true))\n+    fun launching_startsRecordingService_withStart() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f5ae7f9420d54923b5c4169ae8862b938d1c87c"}, "originalPosition": 44}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NTM0MjQ5", "url": "https://github.com/getodk/collect/pull/4180#pullrequestreview-515534249", "createdAt": "2020-10-23T10:19:50Z", "commit": {"oid": "5f5ae7f9420d54923b5c4169ae8862b938d1c87c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMDoxOTo1MFrOHnH1yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yM1QxMDoxOTo1MFrOHnH1yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDc4NDk3MQ==", "bodyText": "I looked at moving the TranslationHandler to the strings module but it would have meant moving all our code that deals with the custom locale. I ended up favouring this solution where we keep the locale stuff in collect_app and just have the strings code expect to be given a locale.", "url": "https://github.com/getodk/collect/pull/4180#discussion_r510784971", "createdAt": "2020-10-23T10:19:50Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/application/Collect.java", "diffHunk": "@@ -33,15 +34,18 @@\n import org.odk.collect.android.preferences.PreferencesProvider;\n import org.odk.collect.android.storage.StoragePathProvider;\n import org.odk.collect.android.utilities.FileUtils;\n+import org.odk.collect.android.utilities.LocaleHelper;\n+import org.odk.collect.strings.LocalizedApplication;\n \n import java.io.ByteArrayInputStream;\n import java.io.File;\n+import java.util.Locale;\n \n import javax.inject.Inject;\n \n import static org.odk.collect.android.preferences.MetaKeys.KEY_GOOGLE_BUG_154855417_FIXED;\n \n-public class Collect extends Application {\n+public class Collect extends Application implements LocalizedApplication {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f5ae7f9420d54923b5c4169ae8862b938d1c87c"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMDk5ODgw", "url": "https://github.com/getodk/collect/pull/4180#pullrequestreview-520099880", "createdAt": "2020-10-29T21:25:38Z", "commit": {"oid": "5f5ae7f9420d54923b5c4169ae8862b938d1c87c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMTozNzoyMFrOHqvpRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwMDoyOToyMVrOHqzO2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDU4Mjg1NQ==", "bodyText": "I just noticed that modules other than the main app don't get minified. What's the reason? I'm thinking about app size.", "url": "https://github.com/getodk/collect/pull/4180#discussion_r514582855", "createdAt": "2020-10-29T21:37:20Z", "author": {"login": "lognaturel"}, "path": "strings/build.gradle", "diffHunk": "@@ -11,6 +14,15 @@ android {\n         targetSdkVersion rootProject.androidTargetSdk\n         versionCode 1\n         versionName \"1.0\"\n+\n+        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\n+        consumerProguardFiles 'consumer-rules.pro'\n+    }\n+\n+    buildTypes {\n+        release {\n+            minifyEnabled false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f5ae7f9420d54923b5c4169ae8862b938d1c87c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYzNjU5Ng==", "bodyText": "Had to think about this one. I briefly wondered whether there might be a more general channel name that would make sense but I think this is the way to go.", "url": "https://github.com/getodk/collect/pull/4180#discussion_r514636596", "createdAt": "2020-10-30T00:09:32Z", "author": {"login": "lognaturel"}, "path": "audiorecorder/src/main/java/org/odk/collect/audiorecorder/recording/AudioRecorderService.kt", "diffHunk": "@@ -0,0 +1,98 @@\n+package org.odk.collect.audiorecorder.recording\n+\n+import android.app.NotificationChannel\n+import android.app.NotificationManager\n+import android.app.Service\n+import android.content.Intent\n+import android.os.Build\n+import android.os.IBinder\n+import androidx.core.app.NotificationCompat\n+import org.odk.collect.audiorecorder.R\n+import org.odk.collect.audiorecorder.getComponent\n+import org.odk.collect.audiorecorder.recorder.Recorder\n+import org.odk.collect.strings.getLocalizedString\n+import javax.inject.Inject\n+\n+class AudioRecorderService : Service() {\n+\n+    @Inject\n+    internal lateinit var recorder: Recorder\n+\n+    @Inject\n+    internal lateinit var recordingRepository: RecordingRepository\n+\n+    override fun onCreate() {\n+        super.onCreate()\n+        getComponent().inject(this)\n+    }\n+\n+    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {\n+        when (intent?.action) {\n+            ACTION_START -> {\n+                setupNotificationChannel()\n+\n+                val notification = NotificationCompat.Builder(this, NOTIFICATION_CHANNEL)\n+                    .setContentTitle(getLocalizedString(R.string.recording))\n+                    .setSmallIcon(R.drawable.ic_baseline_mic_24)\n+                    .build()\n+\n+                startForeground(NOTIFICATION_ID, notification)\n+\n+                if (!recorder.isRecording()) {\n+                    recorder.start()\n+                }\n+            }\n+\n+            ACTION_CANCEL -> {\n+                cancelRecording()\n+            }\n+\n+            ACTION_STOP -> {\n+                stopRecording()\n+            }\n+        }\n+\n+        return START_STICKY\n+    }\n+\n+    private fun setupNotificationChannel() {\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n+            val notificationChannel = NotificationChannel(\n+                NOTIFICATION_CHANNEL,\n+                getLocalizedString(R.string.recording_channel),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f5ae7f9420d54923b5c4169ae8862b938d1c87c"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDY0MTYyNw==", "bodyText": "You won't be surprised to hear me say that as cool as extensions are, they make me nervous. It just feels unexpected to have modifications to Collect happening way over here. In this specific case, can the actual getLocalizedString definition go in Collect and the extension only handle the case where it doesn't exist?", "url": "https://github.com/getodk/collect/pull/4180#discussion_r514641627", "createdAt": "2020-10-30T00:29:21Z", "author": {"login": "lognaturel"}, "path": "strings/src/main/java/org/odk/collect/strings/LocalizedApplication.kt", "diffHunk": "@@ -0,0 +1,31 @@\n+package org.odk.collect.strings\n+\n+import android.content.Context\n+import android.content.res.Configuration\n+import java.util.Locale\n+\n+interface LocalizedApplication {\n+\n+    val locale: Locale\n+}\n+\n+fun Context.getLocalizedString(stringId: Int, vararg formatArgs: Any): String {\n+    return when (applicationContext) {\n+        is LocalizedApplication -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f5ae7f9420d54923b5c4169ae8862b938d1c87c"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMTkxNjE5", "url": "https://github.com/getodk/collect/pull/4180#pullrequestreview-522191619", "createdAt": "2020-11-03T05:05:05Z", "commit": {"oid": "5f5ae7f9420d54923b5c4169ae8862b938d1c87c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2433, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}