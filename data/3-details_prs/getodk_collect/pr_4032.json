{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNDQ3MDk1", "number": 4032, "title": "Reworking Barcode widget", "bodyText": "This PR includes the work on rewriting the framework of Barcode widget.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nI don't think there are any regression risks as of now. I am using an object of CameraUtils class to call the non static methods, so that I can verify the behavior of the widget in scenarios when the value returned by the methods of CameraUtils are different.\nDo we need any specific form for testing your changes? If so, please attach one.\nAny form having barcode widget like AllWidgetsForm\nDoes this change require updates to documentation? If so, please file an issue here and include the link below.\nNo\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-08-19T20:46:48Z", "url": "https://github.com/getodk/collect/pull/4032", "merged": true, "mergeCommit": {"oid": "1c8bcfe37343112543b55b611d426dda80d500e1"}, "closed": true, "closedAt": "2020-09-30T15:45:16Z", "author": {"login": "SaumiaSinghal"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAif1pgFqTQ3MDk3MjMyMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdGzAppgH2gAyNDcwNDQ3MDk1OjM2ODhhNDJkY2EyMTViM2YyZDI3NDE5Mzc4ZGYzMTZkOTJjMjE1ZWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwOTcyMzIw", "url": "https://github.com/getodk/collect/pull/4032#pullrequestreview-470972320", "createdAt": "2020-08-19T21:18:48Z", "commit": {"oid": "9a1f1b1103acaec741a10fa5b6e963c86d83f0a7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMToxODo0OFrOHDZ0tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMToyODozNFrOHDaWyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMzMDg3MQ==", "bodyText": "Would be better to use isEmpty() here.", "url": "https://github.com/getodk/collect/pull/4032#discussion_r473330871", "createdAt": "2020-08-19T21:18:48Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BarcodeWidget.java", "diffHunk": "@@ -16,79 +16,74 @@\n \n import android.app.Activity;\n import android.content.Context;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import com.google.zxing.integration.android.IntentIntegrator;\n \n import org.javarosa.core.model.data.IAnswerData;\n import org.javarosa.core.model.data.StringData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.jetbrains.annotations.Contract;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.activities.ScannerWithFlashlightActivity;\n+import org.odk.collect.android.databinding.BarcodeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n import org.odk.collect.android.listeners.PermissionListener;\n import org.odk.collect.android.utilities.CameraUtils;\n import org.odk.collect.android.utilities.ToastUtils;\n import org.odk.collect.android.utilities.WidgetAppearanceUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n import org.odk.collect.android.widgets.utilities.WaitingForDataRegistry;\n \n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.getCenteredAnswerTextView;\n-\n /**\n  * Widget that allows user to scan barcodes and add them to the form.\n- *\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-public class BarcodeWidget extends QuestionWidget implements BinaryDataReceiver, ButtonClickListener {\n-    final Button getBarcodeButton;\n-    final TextView stringAnswer;\n+public class BarcodeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    BarcodeWidgetAnswerBinding binding;\n+\n     private final WaitingForDataRegistry waitingForDataRegistry;\n+    private final CameraUtils cameraUtils;\n \n-    public BarcodeWidget(Context context, QuestionDetails questionDetails, WaitingForDataRegistry waitingForDataRegistry) {\n+    public BarcodeWidget(Context context, QuestionDetails questionDetails, WaitingForDataRegistry waitingForDataRegistry, CameraUtils cameraUtils) {\n         super(context, questionDetails);\n         this.waitingForDataRegistry = waitingForDataRegistry;\n+        this.cameraUtils = cameraUtils;\n+    }\n \n-        getBarcodeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.get_barcode), getAnswerFontSize(), this);\n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = BarcodeWidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n \n-        stringAnswer = getCenteredAnswerTextView(getContext(), getAnswerFontSize());\n+        if (prompt.isReadOnly()) {\n+            binding.getBarcodeButton.setVisibility(GONE);\n+        } else {\n+            binding.getBarcodeButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.getBarcodeButton.setOnClickListener(v -> onButtonClick());\n+        }\n+        binding.barcodeAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n \n-        String s = questionDetails.getPrompt().getAnswerText();\n-        if (s != null) {\n-            getBarcodeButton.setText(getContext().getString(\n-                    R.string.replace_barcode));\n-            stringAnswer.setText(s);\n+        String stringAnswer = prompt.getAnswerText();\n+        if (stringAnswer != null && !stringAnswer.isEmpty()) {\n+            binding.getBarcodeButton.setText(getContext().getString(R.string.replace_barcode));\n+            binding.barcodeAnswerText.setText(stringAnswer);\n         }\n-        // finish complex layout\n-        LinearLayout answerLayout = new LinearLayout(getContext());\n-        answerLayout.setOrientation(LinearLayout.VERTICAL);\n-        answerLayout.addView(getBarcodeButton);\n-        answerLayout.addView(stringAnswer);\n-        addAnswerView(answerLayout, WidgetViewUtils.getStandardMargin(context));\n+\n+        return binding.getRoot();\n     }\n \n     @Override\n     public void clearAnswer() {\n-        stringAnswer.setText(null);\n-        getBarcodeButton.setText(getContext().getString(R.string.get_barcode));\n-\n+        binding.barcodeAnswerText.setText(null);\n+        binding.getBarcodeButton.setText(getContext().getString(R.string.get_barcode));\n         widgetValueChanged();\n     }\n \n     @Override\n     public IAnswerData getAnswer() {\n-        String s = stringAnswer.getText().toString();\n-        if (s.equals(\"\")) {\n-            return null;\n-        } else {\n-            return new StringData(s);\n-        }\n+        String stringAnswer = binding.barcodeAnswerText.getText().toString();\n+        return stringAnswer.equals(\"\") ? null : new StringData(stringAnswer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a1f1b1103acaec741a10fa5b6e963c86d83f0a7"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMzMzQyOQ==", "bodyText": "You could improve stripInvalidCharacters():\n\nYou can have one return using ternary operator\nThere is no need to use protected static here.", "url": "https://github.com/getodk/collect/pull/4032#discussion_r473333429", "createdAt": "2020-08-19T21:21:44Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BarcodeWidget.java", "diffHunk": "@@ -113,19 +107,18 @@ protected static String stripInvalidCharacters(String data) {\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a1f1b1103acaec741a10fa5b6e963c86d83f0a7"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMzNTM4NA==", "bodyText": "Would be good to move this code to WidgetAppearanceUtils and have isFrontCamera() method there for example which you could then use here.", "url": "https://github.com/getodk/collect/pull/4032#discussion_r473335384", "createdAt": "2020-08-19T21:23:53Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BarcodeWidget.java", "diffHunk": "@@ -147,7 +140,7 @@ public void denied() {\n     private void setCameraIdIfNeeded(IntentIntegrator intent) {\n         String appearance = getFormEntryPrompt().getAppearanceHint();\n         if (appearance != null && appearance.equalsIgnoreCase(WidgetAppearanceUtils.FRONT)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a1f1b1103acaec741a10fa5b6e963c86d83f0a7"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMzNzczOQ==", "bodyText": "I think just answer would be good name it is String so no need to duplicate it in its name.", "url": "https://github.com/getodk/collect/pull/4032#discussion_r473337739", "createdAt": "2020-08-19T21:26:23Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BarcodeWidget.java", "diffHunk": "@@ -16,79 +16,74 @@\n \n import android.app.Activity;\n import android.content.Context;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import com.google.zxing.integration.android.IntentIntegrator;\n \n import org.javarosa.core.model.data.IAnswerData;\n import org.javarosa.core.model.data.StringData;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.jetbrains.annotations.Contract;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.activities.ScannerWithFlashlightActivity;\n+import org.odk.collect.android.databinding.BarcodeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n import org.odk.collect.android.listeners.PermissionListener;\n import org.odk.collect.android.utilities.CameraUtils;\n import org.odk.collect.android.utilities.ToastUtils;\n import org.odk.collect.android.utilities.WidgetAppearanceUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n import org.odk.collect.android.widgets.utilities.WaitingForDataRegistry;\n \n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.getCenteredAnswerTextView;\n-\n /**\n  * Widget that allows user to scan barcodes and add them to the form.\n- *\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-public class BarcodeWidget extends QuestionWidget implements BinaryDataReceiver, ButtonClickListener {\n-    final Button getBarcodeButton;\n-    final TextView stringAnswer;\n+public class BarcodeWidget extends QuestionWidget implements BinaryDataReceiver {\n+    BarcodeWidgetAnswerBinding binding;\n+\n     private final WaitingForDataRegistry waitingForDataRegistry;\n+    private final CameraUtils cameraUtils;\n \n-    public BarcodeWidget(Context context, QuestionDetails questionDetails, WaitingForDataRegistry waitingForDataRegistry) {\n+    public BarcodeWidget(Context context, QuestionDetails questionDetails, WaitingForDataRegistry waitingForDataRegistry, CameraUtils cameraUtils) {\n         super(context, questionDetails);\n         this.waitingForDataRegistry = waitingForDataRegistry;\n+        this.cameraUtils = cameraUtils;\n+    }\n \n-        getBarcodeButton = createSimpleButton(getContext(), getFormEntryPrompt().isReadOnly(), getContext().getString(R.string.get_barcode), getAnswerFontSize(), this);\n+    @Override\n+    protected View onCreateAnswerView(Context context, FormEntryPrompt prompt, int answerFontSize) {\n+        binding = BarcodeWidgetAnswerBinding.inflate(((Activity) context).getLayoutInflater());\n \n-        stringAnswer = getCenteredAnswerTextView(getContext(), getAnswerFontSize());\n+        if (prompt.isReadOnly()) {\n+            binding.getBarcodeButton.setVisibility(GONE);\n+        } else {\n+            binding.getBarcodeButton.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n+            binding.getBarcodeButton.setOnClickListener(v -> onButtonClick());\n+        }\n+        binding.barcodeAnswerText.setTextSize(TypedValue.COMPLEX_UNIT_DIP, answerFontSize);\n \n-        String s = questionDetails.getPrompt().getAnswerText();\n-        if (s != null) {\n-            getBarcodeButton.setText(getContext().getString(\n-                    R.string.replace_barcode));\n-            stringAnswer.setText(s);\n+        String stringAnswer = prompt.getAnswerText();\n+        if (stringAnswer != null && !stringAnswer.isEmpty()) {\n+            binding.getBarcodeButton.setText(getContext().getString(R.string.replace_barcode));\n+            binding.barcodeAnswerText.setText(stringAnswer);\n         }\n-        // finish complex layout\n-        LinearLayout answerLayout = new LinearLayout(getContext());\n-        answerLayout.setOrientation(LinearLayout.VERTICAL);\n-        answerLayout.addView(getBarcodeButton);\n-        answerLayout.addView(stringAnswer);\n-        addAnswerView(answerLayout, WidgetViewUtils.getStandardMargin(context));\n+\n+        return binding.getRoot();\n     }\n \n     @Override\n     public void clearAnswer() {\n-        stringAnswer.setText(null);\n-        getBarcodeButton.setText(getContext().getString(R.string.get_barcode));\n-\n+        binding.barcodeAnswerText.setText(null);\n+        binding.getBarcodeButton.setText(getContext().getString(R.string.get_barcode));\n         widgetValueChanged();\n     }\n \n     @Override\n     public IAnswerData getAnswer() {\n-        String s = stringAnswer.getText().toString();\n-        if (s.equals(\"\")) {\n-            return null;\n-        } else {\n-            return new StringData(s);\n-        }\n+        String stringAnswer = binding.barcodeAnswerText.getText().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a1f1b1103acaec741a10fa5b6e963c86d83f0a7"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzMzOTU5NQ==", "bodyText": "Please remove get_", "url": "https://github.com/getodk/collect/pull/4032#discussion_r473339595", "createdAt": "2020-08-19T21:28:34Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/barcode_widget_answer.xml", "diffHunk": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:orientation=\"vertical\" android:layout_width=\"match_parent\"\n+    android:layout_height=\"wrap_content\">\n+\n+    <com.google.android.material.button.MaterialButton\n+        android:id=\"@+id/get_barcode_button\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "34809500122e9270b440ca996db43a36def9bd71"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34809500122e9270b440ca996db43a36def9bd71", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/34809500122e9270b440ca996db43a36def9bd71", "committedDate": "2020-08-19T21:20:17Z", "message": "update button label on setting data"}, "afterCommit": {"oid": "e8259469d9ee739fd61a8dc4047f09213ec661d7", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/e8259469d9ee739fd61a8dc4047f09213ec661d7", "committedDate": "2020-08-19T22:10:36Z", "message": "code refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxMDMyNjMx", "url": "https://github.com/getodk/collect/pull/4032#pullrequestreview-471032631", "createdAt": "2020-08-19T23:33:33Z", "commit": {"oid": "e8259469d9ee739fd61a8dc4047f09213ec661d7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzozMzozM1rOHDgLhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzozMzozM1rOHDgLhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQzNTAxNQ==", "bodyText": "I didn't mean moving both those methods here. I expected just a small isFrontCameraAppearance() method that would return true/false based on appearance. Just something like isFlexAppearance or other methods below.", "url": "https://github.com/getodk/collect/pull/4032#discussion_r473435015", "createdAt": "2020-08-19T23:33:33Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/WidgetAppearanceUtils.java", "diffHunk": "@@ -82,7 +90,36 @@\n     public static final String URL                      = \"url\";\n     public static final String RATING                   = \"rating\";\n \n-    private WidgetAppearanceUtils() {\n+    public void setCameraIdIfNeeded(FormEntryPrompt prompt, IntentIntegrator intent) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8259469d9ee739fd61a8dc4047f09213ec661d7"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODU0NzQ0", "url": "https://github.com/getodk/collect/pull/4032#pullrequestreview-471854744", "createdAt": "2020-08-20T17:57:00Z", "commit": {"oid": "301d7eb3bc33b8c0e65b68a98c1136fa239e350e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNzo1NzowMFrOHENFMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxODowMzozNlrOHENTFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE3MDY3NA==", "bodyText": "Please add tests for this method in WidgetAppearanceUtilsTest would be also good to cover other already existed methods if you want.", "url": "https://github.com/getodk/collect/pull/4032#discussion_r474170674", "createdAt": "2020-08-20T17:57:00Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/WidgetAppearanceUtils.java", "diffHunk": "@@ -169,14 +170,18 @@ public static boolean isCompactAppearance(FormEntryPrompt prompt) {\n     }\n \n     public static boolean useThousandSeparator(FormEntryPrompt prompt) {\n-        return getSanitizedAppearanceHint(prompt).contains(WidgetAppearanceUtils.THOUSANDS_SEP);\n+        return getSanitizedAppearanceHint(prompt).contains(THOUSANDS_SEP);\n+    }\n+\n+    public static boolean isFrontCameraAppearance(FormEntryPrompt prompt) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301d7eb3bc33b8c0e65b68a98c1136fa239e350e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE3NDIyOQ==", "bodyText": "Please remove this annotation, it's not something common in our codebase and i',m not fan of it.", "url": "https://github.com/getodk/collect/pull/4032#discussion_r474174229", "createdAt": "2020-08-20T18:03:36Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BarcodeWidget.java", "diffHunk": "@@ -97,35 +95,31 @@ public IAnswerData getAnswer() {\n     @Override\n     public void setBinaryData(Object answer) {\n         String response = (String) answer;\n-        stringAnswer.setText(stripInvalidCharacters(response));\n-\n+        binding.barcodeAnswerText.setText(stripInvalidCharacters(response));\n+        binding.barcodeButton.setText(getContext().getString(R.string.replace_barcode));\n         widgetValueChanged();\n     }\n \n     // Remove control characters, invisible characters and unused code points.\n     @Contract(\"null -> null; !null -> !null\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "301d7eb3bc33b8c0e65b68a98c1136fa239e350e"}, "originalPosition": 125}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDIyMjIz", "url": "https://github.com/getodk/collect/pull/4032#pullrequestreview-472022223", "createdAt": "2020-08-20T22:15:34Z", "commit": {"oid": "5554bad1e18978195011c1b59e719ee5b1475a8b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjoxNTozNFrOHEVG8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMjoxNTozNFrOHEVG8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDMwMjE5Mg==", "bodyText": "Please add more cases, you can have multiple in one test if they are related. Would be good to test lowercase appearances as well and different variation (mix of appearances).", "url": "https://github.com/getodk/collect/pull/4032#discussion_r474302192", "createdAt": "2020-08-20T22:15:34Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/test/java/org/odk/collect/android/utilities/WidgetAppearanceUtilsTest.java", "diffHunk": "@@ -77,4 +103,89 @@ public void getNumberOfColumnsTest() {\n         when(formEntryPrompt.getAppearanceHint()).thenReturn(\"columns--10\");\n         assertEquals(1, WidgetAppearanceUtils.getNumberOfColumns(formEntryPrompt, null));\n     }\n+\n+    @Test\n+    public void isNoButtonsAppearance_returnsFalse_whenNoButtonsAppearanceIsNotFound() {\n+        assertFalse(WidgetAppearanceUtils.isNoButtonsAppearance(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void isNoButtonsAppearance_returnsTrue_whenNoButtonsAppearanceIsFound() {\n+        when(formEntryPrompt.getAppearanceHint()).thenReturn(\"NO-BUTTONS\");\n+        assertTrue(WidgetAppearanceUtils.isNoButtonsAppearance(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void isCompactAppearance_returnsFalse_whenCompactAppearanceIsNotFound() {\n+        assertFalse(WidgetAppearanceUtils.isCompactAppearance(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void isCompactAppearance_returnsTrue_whenCompactAppearanceIsFound() {\n+        when(formEntryPrompt.getAppearanceHint()).thenReturn(\"COMPACT\");\n+        assertTrue(WidgetAppearanceUtils.isCompactAppearance(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void useThousandSeparator_returnsFalse_whenThousandSepAppearanceIsNotFound() {\n+        assertFalse(WidgetAppearanceUtils.useThousandSeparator(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void useThousandSeparator_returnsTrue_whenThousandSepAppearanceIsFound() {\n+        when(formEntryPrompt.getAppearanceHint()).thenReturn(\"THOUSANDS-SEP\");\n+        assertTrue(WidgetAppearanceUtils.useThousandSeparator(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void isFrontCameraAppearance_returnsFalse_whenFrontCameraAppearanceIsNotFound() {\n+        assertFalse(WidgetAppearanceUtils.isFrontCameraAppearance(formEntryPrompt));\n+    }\n+\n+    @Test\n+    public void isFrontCameraAppearance_returnsTrue_whenFrontAppearanceIsFound() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5554bad1e18978195011c1b59e719ee5b1475a8b"}, "originalPosition": 90}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNDU3MDk2", "url": "https://github.com/getodk/collect/pull/4032#pullrequestreview-472457096", "createdAt": "2020-08-21T12:45:32Z", "commit": {"oid": "d7feefaa6445229f55191d39f2e5fef30028a206"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMjo0NTozMlrOHErxRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMjo0NTozMlrOHErxRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDY3MzQ3OQ==", "bodyText": "I think this comment should be moved to the interface. Now we keep it in several widgets instead. Could you improve it and remove from all widgets that have it?", "url": "https://github.com/getodk/collect/pull/4032#discussion_r474673479", "createdAt": "2020-08-21T12:45:32Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/BarcodeWidget.java", "diffHunk": "@@ -16,79 +16,76 @@\n \n import android.app.Activity;\n import android.content.Context;\n-import android.widget.Button;\n-import android.widget.LinearLayout;\n-import android.widget.TextView;\n+import android.util.TypedValue;\n+import android.view.View;\n \n import com.google.zxing.integration.android.IntentIntegrator;\n \n import org.javarosa.core.model.data.IAnswerData;\n import org.javarosa.core.model.data.StringData;\n-import org.jetbrains.annotations.Contract;\n+import org.javarosa.form.api.FormEntryPrompt;\n import org.odk.collect.android.R;\n import org.odk.collect.android.activities.FormEntryActivity;\n import org.odk.collect.android.activities.ScannerWithFlashlightActivity;\n+import org.odk.collect.android.databinding.BarcodeWidgetAnswerBinding;\n import org.odk.collect.android.formentry.questions.QuestionDetails;\n-import org.odk.collect.android.formentry.questions.WidgetViewUtils;\n import org.odk.collect.android.listeners.PermissionListener;\n import org.odk.collect.android.utilities.CameraUtils;\n import org.odk.collect.android.utilities.ToastUtils;\n import org.odk.collect.android.utilities.WidgetAppearanceUtils;\n import org.odk.collect.android.widgets.interfaces.BinaryDataReceiver;\n-import org.odk.collect.android.widgets.interfaces.ButtonClickListener;\n import org.odk.collect.android.widgets.utilities.WaitingForDataRegistry;\n \n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.createSimpleButton;\n-import static org.odk.collect.android.formentry.questions.WidgetViewUtils.getCenteredAnswerTextView;\n+import static org.odk.collect.android.utilities.WidgetAppearanceUtils.FRONT;\n \n /**\n  * Widget that allows user to scan barcodes and add them to the form.\n- *\n- * @author Yaw Anokwa (yanokwa@gmail.com)\n  */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7feefaa6445229f55191d39f2e5fef30028a206"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMzc2Mzcy", "url": "https://github.com/getodk/collect/pull/4032#pullrequestreview-473376372", "createdAt": "2020-08-24T11:26:59Z", "commit": {"oid": "d9d728d6d8b8b8602b31a63f8bcbdc12d31eeab3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45b58a63966c4b5fe04c1b7930601780240be673", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/45b58a63966c4b5fe04c1b7930601780240be673", "committedDate": "2020-09-08T06:23:16Z", "message": "add unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fc6262d52fb900d093ccf66f9cb69a7f05def85", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/7fc6262d52fb900d093ccf66f9cb69a7f05def85", "committedDate": "2020-09-08T06:36:42Z", "message": "more unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "544d3642f69e8439a460788725e0e360731af4dd", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/544d3642f69e8439a460788725e0e360731af4dd", "committedDate": "2020-09-08T06:38:29Z", "message": "create barcode_widget_answer.xml and code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38e030777a2f1ad51a6f43e2eb7ab9132d45c352", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/38e030777a2f1ad51a6f43e2eb7ab9132d45c352", "committedDate": "2020-09-08T06:38:33Z", "message": "update button label on setting data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54fe75e7811e73f6a5f9959ac9fb52a4743cde9b", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/54fe75e7811e73f6a5f9959ac9fb52a4743cde9b", "committedDate": "2020-09-08T06:56:25Z", "message": "code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35ac2fa971da9067a47f8f138f0ee0b31011784a", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/35ac2fa971da9067a47f8f138f0ee0b31011784a", "committedDate": "2020-09-08T07:39:24Z", "message": "code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6df7ad365002cd512307183dbdc5f4e7707d6148", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/6df7ad365002cd512307183dbdc5f4e7707d6148", "committedDate": "2020-09-08T07:39:28Z", "message": "add unit tests for WidgetAppearanceUtils"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "784446c1e9f1a60c920aa0bf1bddbe310e539cc1", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/784446c1e9f1a60c920aa0bf1bddbe310e539cc1", "committedDate": "2020-09-08T07:39:28Z", "message": "add more unit tests for WidgetAppearanceUtils class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1799a153cee41af2be2adde416e962479030cc8f", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/1799a153cee41af2be2adde416e962479030cc8f", "committedDate": "2020-09-08T07:39:28Z", "message": "shift comment from widgets to BinaryDataReceiver"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9d728d6d8b8b8602b31a63f8bcbdc12d31eeab3", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/d9d728d6d8b8b8602b31a63f8bcbdc12d31eeab3", "committedDate": "2020-08-24T11:05:06Z", "message": "shift comment from widgets to BinaryDataReceiver"}, "afterCommit": {"oid": "1799a153cee41af2be2adde416e962479030cc8f", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/1799a153cee41af2be2adde416e962479030cc8f", "committedDate": "2020-09-08T07:39:28Z", "message": "shift comment from widgets to BinaryDataReceiver"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3688a42dca215b3f2d27419378df316d92c215ed", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/3688a42dca215b3f2d27419378df316d92c215ed", "committedDate": "2020-09-08T08:06:39Z", "message": "fix pmd"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2607, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}