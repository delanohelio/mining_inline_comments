{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxMzcyNjQw", "number": 3773, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjoyNzo1OFrODz0I2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjoyNzo1OFrODz0I2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NjU4MjAwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/geo/MapFragment.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjoyNzo1OFrOGIdFWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDoxNzoyN1rOGJIOKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxODI5Nw==", "bodyText": "It feels to me like this could be static util helper method (that probably takes a StoragePathProvider and Bundle as args). I'd generally think about a default implementation adding something to the external interface where as this seems more like a helper for the MapFragment implementations. What do you think?\nEither way I think this piece of logic should have a test to drive out that it checks for file existance as well as grabbing the layer path.", "url": "https://github.com/getodk/collect/pull/3773#discussion_r411518297", "createdAt": "2020-04-20T16:27:58Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/geo/MapFragment.java", "diffHunk": "@@ -206,4 +209,11 @@ void addTo(\n     interface FeatureListener {\n         void onFeature(int featureId);\n     }\n+\n+    default File getReferenceLayerFile(Bundle config) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86c798472929feb4d860fadac714b9958f96769b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAzMjA5NA==", "bodyText": "Ok I moved getReferenceLayerFile() to GeoUtils. When it comes to tests... getAbsoluteOfflineMapLayerPath() has its own tests so does that make sense to write a test just to check the return statement (file existence):\nreturn path != null && new File(path).exists()\n                ? new File(path)\n                : null;\n\n?", "url": "https://github.com/getodk/collect/pull/3773#discussion_r412032094", "createdAt": "2020-04-21T09:37:32Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/geo/MapFragment.java", "diffHunk": "@@ -206,4 +209,11 @@ void addTo(\n     interface FeatureListener {\n         void onFeature(int featureId);\n     }\n+\n+    default File getReferenceLayerFile(Bundle config) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxODI5Nw=="}, "originalCommit": {"oid": "86c798472929feb4d860fadac714b9958f96769b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjA4MjQ1Mg==", "bodyText": "Yeah it's a small decision but it's an important one so good to have a test to make sure it stays in place.", "url": "https://github.com/getodk/collect/pull/3773#discussion_r412082452", "createdAt": "2020-04-21T10:55:25Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/geo/MapFragment.java", "diffHunk": "@@ -206,4 +209,11 @@ void addTo(\n     interface FeatureListener {\n         void onFeature(int featureId);\n     }\n+\n+    default File getReferenceLayerFile(Bundle config) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxODI5Nw=="}, "originalCommit": {"oid": "86c798472929feb4d860fadac714b9958f96769b"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIyNTA2Nw==", "bodyText": "Ok done, I added tests.", "url": "https://github.com/getodk/collect/pull/3773#discussion_r412225067", "createdAt": "2020-04-21T14:17:27Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/geo/MapFragment.java", "diffHunk": "@@ -206,4 +209,11 @@ void addTo(\n     interface FeatureListener {\n         void onFeature(int featureId);\n     }\n+\n+    default File getReferenceLayerFile(Bundle config) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxODI5Nw=="}, "originalCommit": {"oid": "86c798472929feb4d860fadac714b9958f96769b"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3313, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}