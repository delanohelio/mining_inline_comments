{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5Nzc3NTQz", "number": 3652, "title": "Fix the form map crash by waiting until the map fragment is initialized to save it in the map field", "bodyText": "Closes #3651\nIn e3af24b, we let tests set their own map fragment value through the map field in FormMapActivity. We also immediately set the map field for a map created by the real activity which was a change in behavior. Following that change, when onResume called updateInstanceGeometry, the map wasn't null so there was an attempt to map features even though the map fragment was not guaranteed to be fully initialized. We need the geometry update in onResume for the case where a user triggers form filling from this activity and then returns to it having added a new feature.\nIt's not clear to me how this wasn't detected before we merged #3552. Maybe it didn't happen with every map provider or device?\nWhat has been done to verify that this works as intended?\nVerified that all tests still pass (though they weren't helpful in this case) and manually verified opening a form map with mappable instances and Google maps and OSM fragments. I also tried geopoint and geotrace with Google Maps and OSM basemaps.\nWhy is this the best possible solution? Were any other approaches considered?\nThis makes MapProvider into a Dagger-injected singleton. This means that tests can mock MapProvider and provide a specific MapFragment implementation. This removes the risk of this particular problem resurfacing because there is never a case where the map field is set before initialization. MapProvider still feels a little awkward since it has several static methods that are involved in setting up map configuration preferences but I don't think it's so bad. I don't think it needs to be a singleton because I believe that the (Java) maps it keeps only are used during the existence of a single map fragment but I decided to stay close to the original design for now.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nThe biggest code change is in the FormMapActivity constructor. This now touches the way that any map interface is initialized so there is a regression risk to every question type that involves a map in addition to the form map.\nDo we need any specific form for testing your changes? If so, please attach one.\nAny form with a geopoint like All Widgets.\nDoes this change require updates to documentation? If so, please file an issue here and include the link below.\nNo.\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-02-25T20:11:59Z", "url": "https://github.com/getodk/collect/pull/3652", "merged": true, "mergeCommit": {"oid": "d619fd4ed3cc27dd0ffe73fee17093d74c1351ce"}, "closed": true, "closedAt": "2020-03-05T12:36:47Z", "author": {"login": "lognaturel"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcH362wgBqjMwNzA4Mzk1MjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKGuF5AH2gAyMzc5Nzc3NTQzOjQ0ODQyMzY4NGMxMjVmYWJjNGVkMjkxYTRkZTkxZTBkMzU2NDM4OWE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4173e8724059e91b13a6785d1da1071abbcb49d5", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/4173e8724059e91b13a6785d1da1071abbcb49d5", "committedDate": "2020-02-25T20:09:54Z", "message": "Don't set the map field before initialization\n\nWhen onResume called updateInstanceGeometry, the map wasn't null so there was an attempt to map features even though the map fragment was not guaranteed to be fully initialized. We need the geometry update in onResume for the case where a user triggers form filling from this activity and then returns to it having added a new feature."}, "afterCommit": {"oid": "6d41005cd0482d6fee9f7f1f7c23970064f63343", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/6d41005cd0482d6fee9f7f1f7c23970064f63343", "committedDate": "2020-02-25T20:12:29Z", "message": "Don't set the map field before initialization\n\nWhen onResume called updateInstanceGeometry, the map wasn't null so there was an attempt to map features even though the map fragment was not guaranteed to be fully initialized. We need the geometry update in onResume for the case where a user triggers form filling from this activity and then returns to it having added a new feature."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49e7ce61fd8df0149fe74f7f7e9ab9ebf5fc6f96", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/49e7ce61fd8df0149fe74f7f7e9ab9ebf5fc6f96", "committedDate": "2020-02-25T20:19:48Z", "message": "Don't set the map field before initialization\n\nWhen onResume called updateInstanceGeometry, the map wasn't null so there was an attempt to map features even though the map fragment was not guaranteed to be fully initialized. We need the geometry update in onResume for the case where a user triggers form filling from this activity and then returns to it having added a new feature."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6d41005cd0482d6fee9f7f1f7c23970064f63343", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/6d41005cd0482d6fee9f7f1f7c23970064f63343", "committedDate": "2020-02-25T20:12:29Z", "message": "Don't set the map field before initialization\n\nWhen onResume called updateInstanceGeometry, the map wasn't null so there was an attempt to map features even though the map fragment was not guaranteed to be fully initialized. We need the geometry update in onResume for the case where a user triggers form filling from this activity and then returns to it having added a new feature."}, "afterCommit": {"oid": "49e7ce61fd8df0149fe74f7f7e9ab9ebf5fc6f96", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/49e7ce61fd8df0149fe74f7f7e9ab9ebf5fc6f96", "committedDate": "2020-02-25T20:19:48Z", "message": "Don't set the map field before initialization\n\nWhen onResume called updateInstanceGeometry, the map wasn't null so there was an attempt to map features even though the map fragment was not guaranteed to be fully initialized. We need the geometry update in onResume for the case where a user triggers form filling from this activity and then returns to it having added a new feature."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY1ODQ1MDcy", "url": "https://github.com/getodk/collect/pull/3652#pullrequestreview-365845072", "createdAt": "2020-02-27T17:15:56Z", "commit": {"oid": "49e7ce61fd8df0149fe74f7f7e9ab9ebf5fc6f96"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoxNTo1NlrOFvZ66A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yN1QxNzoxNTo1NlrOFvZ66A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTI1MjA3Mg==", "bodyText": "Yeah I think we should use Dagger for this. It feels like we're adding machinery in to mimic what it would do for us here.", "url": "https://github.com/getodk/collect/pull/3652#discussion_r385252072", "createdAt": "2020-02-27T17:15:56Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormMapActivity.java", "diffHunk": "@@ -113,13 +112,14 @@\n         TextView titleView = findViewById(R.id.form_title);\n         titleView.setText(viewModel.getFormTitle());\n \n-        if (map == null) { // tests set their maps directly\n-            Context context = getApplicationContext();\n-            map = MapProvider.createMapFragment(context);\n+        MapFragment mapToAdd = map; // tests will have a value for the map field\n+\n+        if (mapToAdd == null) {\n+            mapToAdd = MapProvider.createMapFragment(getApplicationContext());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49e7ce61fd8df0149fe74f7f7e9ab9ebf5fc6f96"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cf70501b56cb629d65763e8fe494bbe70de14409", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/cf70501b56cb629d65763e8fe494bbe70de14409", "committedDate": "2020-02-28T04:20:10Z", "message": "Inject a MapProvider singleton"}, "afterCommit": {"oid": "5453363b5a884307d8a6a70274637fd3ffcb87ec", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/5453363b5a884307d8a6a70274637fd3ffcb87ec", "committedDate": "2020-02-28T04:40:50Z", "message": "Inject a MapProvider singleton"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5453363b5a884307d8a6a70274637fd3ffcb87ec", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/5453363b5a884307d8a6a70274637fd3ffcb87ec", "committedDate": "2020-02-28T04:40:50Z", "message": "Inject a MapProvider singleton"}, "afterCommit": {"oid": "6d05186f42f55ce5e61d1da1f550eeb621507d36", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/6d05186f42f55ce5e61d1da1f550eeb621507d36", "committedDate": "2020-02-28T05:12:42Z", "message": "Inject a MapProvider singleton"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c3da93a7633d4ad52a30822679b75057433d3af", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/0c3da93a7633d4ad52a30822679b75057433d3af", "committedDate": "2020-02-28T05:18:11Z", "message": "Inject a MapProvider singleton"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6d05186f42f55ce5e61d1da1f550eeb621507d36", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/6d05186f42f55ce5e61d1da1f550eeb621507d36", "committedDate": "2020-02-28T05:12:42Z", "message": "Inject a MapProvider singleton"}, "afterCommit": {"oid": "0c3da93a7633d4ad52a30822679b75057433d3af", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/0c3da93a7633d4ad52a30822679b75057433d3af", "committedDate": "2020-02-28T05:18:11Z", "message": "Inject a MapProvider singleton"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2MjY1NzQ5", "url": "https://github.com/getodk/collect/pull/3652#pullrequestreview-366265749", "createdAt": "2020-02-28T09:36:52Z", "commit": {"oid": "0c3da93a7633d4ad52a30822679b75057433d3af"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwOTozNjo1M1rOFvux6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwOTozNzoyOFrOFvuy-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU5MzgzNQ==", "bodyText": "You don't need the @Singleton here as you have it on the provider. It can be useful as documentation but I'm not sure the class needs to know it's going to be used as a singleton in this case.", "url": "https://github.com/getodk/collect/pull/3652#discussion_r385593835", "createdAt": "2020-02-28T09:36:53Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/geo/MapProvider.java", "diffHunk": "@@ -31,13 +33,12 @@\n import static org.odk.collect.android.preferences.GeneralKeys.KEY_USGS_MAP_STYLE;\n \n /**\n- * A static class that obtains a MapFragment according to the user's preferences.\n+ * Obtains a MapFragment according to the user's preferences.\n  * This is the top-level class that should be used by the rest of the application.\n  * The available options on the Maps preferences screen are also defined here.\n  */\n+@Singleton", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c3da93a7633d4ad52a30822679b75057433d3af"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTU5NDEwNw==", "bodyText": "Woh good catch!", "url": "https://github.com/getodk/collect/pull/3652#discussion_r385594107", "createdAt": "2020-02-28T09:37:28Z", "author": {"login": "seadowg"}, "path": "docs/CODE-GUIDELINES.md", "diffHunk": "@@ -78,10 +78,10 @@ While it's important to read the Dagger [documentation](https://google.github.io\n \n ### Providing dependencies\n \n-To declare a new dependency that objects can inject add a `@Provider` method to the `AppDepedencyModule`:\n+To declare a new dependency that objects can inject add a `@Provides` method to the `AppDependencyModule`:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c3da93a7633d4ad52a30822679b75057433d3af"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "289642bfbb55a2a346d76a8681cfc874212e59c1", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/289642bfbb55a2a346d76a8681cfc874212e59c1", "committedDate": "2020-02-28T17:09:15Z", "message": "Remove informational singleton annotation on class"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d1bcaf57ee8322e52168eceeb9d647958e0e6d76", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/d1bcaf57ee8322e52168eceeb9d647958e0e6d76", "committedDate": "2020-02-28T17:04:22Z", "message": "Remove informational singleton annotation on class"}, "afterCommit": {"oid": "289642bfbb55a2a346d76a8681cfc874212e59c1", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/289642bfbb55a2a346d76a8681cfc874212e59c1", "committedDate": "2020-02-28T17:09:15Z", "message": "Remove informational singleton annotation on class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NTU4OTcy", "url": "https://github.com/getodk/collect/pull/3652#pullrequestreview-366558972", "createdAt": "2020-02-28T17:20:18Z", "commit": {"oid": "289642bfbb55a2a346d76a8681cfc874212e59c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "448423684c125fabc4ed291a4de91e0d3564389a", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/448423684c125fabc4ed291a4de91e0d3564389a", "committedDate": "2020-03-03T18:35:06Z", "message": "Merge remote-tracking branch 'upstream/master' into issue-3651"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2307, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}