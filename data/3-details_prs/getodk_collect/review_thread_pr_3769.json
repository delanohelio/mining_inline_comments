{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNjgzOTk4", "number": 3769, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNzo0NTo0NVrODv307A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0NToyMFrODykF5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNTI0MzMyOnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNzo0NTo0NVrOGCi7Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNzo0NTo0NVrOGCi7Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMyMjU3NA==", "bodyText": "Bumped the patch version here. I think it may have fixed an issue with the Gradle Daemon getting orphaned but holding a lock on some config files.", "url": "https://github.com/getodk/collect/pull/3769#discussion_r405322574", "createdAt": "2020-04-08T07:45:45Z", "author": {"login": "seadowg"}, "path": "build.gradle", "diffHunk": "@@ -6,7 +6,7 @@ buildscript {\n         maven { url 'https://maven.fabric.io/public' }\n     }\n     dependencies {\n-        classpath 'com.android.tools.build:gradle:3.6.1'\n+        classpath 'com.android.tools.build:gradle:3.6.2'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359ea7418e1cae2de4b8dd732499013422757070"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNTI0NTk1OnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/externalintents/InstanceChooserListTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNzo0NjozNFrOGCi89Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNzo0NjozNFrOGCi89Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMyMjk5Nw==", "bodyText": "Why are these tests all @Suppressed?", "url": "https://github.com/getodk/collect/pull/3769#discussion_r405322997", "createdAt": "2020-04-08T07:46:34Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/externalintents/InstanceChooserListTest.java", "diffHunk": "@@ -11,7 +11,7 @@\n \n import java.io.IOException;\n \n-import static org.odk.collect.android.externalintents.ExportedActivitiesUtils.testDirectories;\n+import static org.odk.collect.android.feature.externalintents.ExportedActivitiesUtils.testDirectories;\n \n @Suppress", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359ea7418e1cae2de4b8dd732499013422757070"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNTI1NTM4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/database/helpers/FormsDatabaseHelper.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNzo0ODo1OVrOGCjChQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwNzo0ODo1OVrOGCjChQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTMyNDQyMQ==", "bodyText": "There are a few places where I had to make constants/methods public that were previously package protected. If they weren't meant to be public then they really shouldn't have been used in the test but I didn't want to get into rewriting everything here.", "url": "https://github.com/getodk/collect/pull/3769#discussion_r405324421", "createdAt": "2020-04-08T07:48:59Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/database/helpers/FormsDatabaseHelper.java", "diffHunk": "@@ -55,7 +55,7 @@\n     private static final String DATABASE_NAME = \"forms.db\";\n     public static final String FORMS_TABLE_NAME = \"forms\";\n \n-    static final int DATABASE_VERSION = 8;\n+    public static final int DATABASE_VERSION = 8;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359ea7418e1cae2de4b8dd732499013422757070"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzQ2MDY4OnYy", "diffSide": "RIGHT", "path": "docs/TEST-GUIDELINES.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0Mzo0NVrOGGroBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0Mzo0NVrOGGroBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY1OTM5OQ==", "bodyText": "effecting -> affecting", "url": "https://github.com/getodk/collect/pull/3769#discussion_r409659399", "createdAt": "2020-04-16T15:43:45Z", "author": {"login": "lognaturel"}, "path": "docs/TEST-GUIDELINES.md", "diffHunk": "@@ -0,0 +1,29 @@\n+# Test guidelines\n+\n+Automated tests are very important for building software. They let us add, modify and understand the code in our app with confidence and can prevent us from making mistakes that could end up effecting people collecting data in the field.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c507b77db7845102e24ed963326b641b07d7a282"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzQ2NDAxOnYy", "diffSide": "RIGHT", "path": "docs/TEST-GUIDELINES.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0NDozM1rOGGrqHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0NDozM1rOGGrqHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY1OTkzMg==", "bodyText": "\"By far easiest way to make sure you have tests for the changes you're making is to follow\" -> \"We recommend following\"", "url": "https://github.com/getodk/collect/pull/3769#discussion_r409659932", "createdAt": "2020-04-16T15:44:33Z", "author": {"login": "lognaturel"}, "path": "docs/TEST-GUIDELINES.md", "diffHunk": "@@ -0,0 +1,29 @@\n+# Test guidelines\n+\n+Automated tests are very important for building software. They let us add, modify and understand the code in our app with confidence and can prevent us from making mistakes that could end up effecting people collecting data in the field.\n+\n+Almost any Pull Request for Collect will require a set of tests along with its code changes. Otherwise there will be nothing to ensure that that code continues to work or exist in the future. By far easiest way to make sure you have tests for the changes you're making is to follow a [TDD](https://en.wikipedia.org/wiki/Test-driven_development) style of development and write a test before each change/addition to the code.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c507b77db7845102e24ed963326b641b07d7a282"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MzQ2NzI3OnYy", "diffSide": "RIGHT", "path": "docs/TEST-GUIDELINES.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0NToyMFrOGGrsJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNTo0NToyMFrOGGrsJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTY2MDQ1Mg==", "bodyText": "in the JVM -> on the JVM?", "url": "https://github.com/getodk/collect/pull/3769#discussion_r409660452", "createdAt": "2020-04-16T15:45:20Z", "author": {"login": "lognaturel"}, "path": "docs/TEST-GUIDELINES.md", "diffHunk": "@@ -0,0 +1,29 @@\n+# Test guidelines\n+\n+Automated tests are very important for building software. They let us add, modify and understand the code in our app with confidence and can prevent us from making mistakes that could end up effecting people collecting data in the field.\n+\n+Almost any Pull Request for Collect will require a set of tests along with its code changes. Otherwise there will be nothing to ensure that that code continues to work or exist in the future. By far easiest way to make sure you have tests for the changes you're making is to follow a [TDD](https://en.wikipedia.org/wiki/Test-driven_development) style of development and write a test before each change/addition to the code.\n+\n+## Different kinds of tests\n+\n+Although testing different components/features will often require different kinds and styles of testing the tests in Collect can broadly be divided into five kinds:\n+\n+### JUnit tests\n+\n+Plain old standard JUnit tests. All the tests in Collect use JUnit in someway but these tests don't use Android specific frameworks (like Espresso/Robolectric) These live in `collect_app/src/test/java`. Often they'll be focused on testing one object and will mock/fake/stub its dependencies (referred to as \"unit testing\") but some will test internal \"APIs\" (such as our Open Rosa server abstraction). The key to writing these kinds of tests is that they should not involve or depend on the Android framework. JUnit tests are run in the JVM.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c507b77db7845102e24ed963326b641b07d7a282"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3310, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}