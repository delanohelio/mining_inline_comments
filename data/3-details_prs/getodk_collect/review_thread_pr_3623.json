{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNDMzMzgw", "number": 3623, "reviewThreads": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzowMjoxMFrODdwnlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMToxNjo1NlrODjx3Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTMxODYzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageEraser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzowMjoxMFrOFmi6Jg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNDoyNTo1MVrOFm-o-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2MjE1MA==", "bodyText": "I like that this is pulled out as its own object! I think you could pass the StoragePathProvider in as a constructor arg rather than have it passed in to both methods as it feels like a dependency.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r375962150", "createdAt": "2020-02-06T17:02:10Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageEraser.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.odk.collect.android.storage;\n+\n+import java.io.File;\n+\n+class StorageEraser {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQxNjUwNg==", "bodyText": "Done.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r376416506", "createdAt": "2020-02-07T14:25:51Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageEraser.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.odk.collect.android.storage;\n+\n+import java.io.File;\n+\n+class StorageEraser {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2MjE1MA=="}, "originalCommit": {"oid": "7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTMyMzMxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageMigrator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzowMzoyM1rOFmi9CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzowMzoyM1rOFmi9CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk2Mjg4OQ==", "bodyText": "Big fan of this returning an enum/result object for each case \ud83d\udc4d", "url": "https://github.com/getodk/collect/pull/3623#discussion_r375962889", "createdAt": "2020-02-06T17:03:23Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageMigrator.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package org.odk.collect.android.storage;\n+\n+import android.content.ContentValues;\n+import android.database.Cursor;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.work.WorkInfo;\n+import androidx.work.WorkManager;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.odk.collect.android.dao.FormsDao;\n+import org.odk.collect.android.dao.InstancesDao;\n+import org.odk.collect.android.dao.ItemsetDao;\n+import org.odk.collect.android.database.ItemsetDbAdapter;\n+import org.odk.collect.android.forms.Form;\n+import org.odk.collect.android.instances.Instance;\n+import org.odk.collect.android.itemsets.Itemset;\n+import org.odk.collect.android.provider.FormsProvider;\n+import org.odk.collect.android.provider.InstanceProvider;\n+import org.odk.collect.android.tasks.ServerPollingJob;\n+import org.odk.collect.android.upload.AutoSendWorker;\n+\n+import java.io.File;\n+import java.util.List;\n+\n+import timber.log.Timber;\n+\n+import static android.provider.BaseColumns._ID;\n+import static org.odk.collect.android.database.ItemsetDbAdapter.KEY_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_FILE_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_MEDIA_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JRCACHE_FILE_PATH;\n+import static org.odk.collect.android.provider.InstanceProviderAPI.InstanceColumns.INSTANCE_FILE_PATH;\n+\n+public class StorageMigrator {\n+\n+    private StoragePathProvider storagePathProvider;\n+    private StorageStateProvider storageStateProvider;\n+    private StorageEraser storageEraser;\n+\n+    public static boolean isMigrationBeingPerformed;\n+\n+    public StorageMigrator() {\n+        this(new StoragePathProvider(), new StorageStateProvider(), new StorageEraser());\n+    }\n+\n+    private StorageMigrator(StoragePathProvider storagePathProvider, StorageStateProvider storageStateProvider, StorageEraser storageEraser) {\n+        this.storagePathProvider = storagePathProvider;\n+        this.storageStateProvider = storageStateProvider;\n+        this.storageEraser = storageEraser;\n+    }\n+\n+    StorageMigrationResult performStorageMigration() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTQzMzI5OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzozNTo1M1rOFmkBjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxMjowOTowMlrOFm7IFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MDQyOA==", "bodyText": "I think it would be nice to have the execution encapsulated in a ViewModel. An example of this would be how FormSaveViewModel#saveForm works. Something like this for the ViewModel:\nclass StorageMigrationViewModel {\n    public LiveData<StorageMigratorResult> migrate() {\n        MutableLiveData<StorageMigratorResult> result = new MutableLiveData<>();\n        new StorageMigratorTask((migratorResult) -> result.setValue(migratorResult)).execute();\n        return result;\n    }\n}\nYou'll see an example of a task with a listener like this in FormSaveViewModel.\nIn can then deal with the dialog/errors in the Activity:\nstorageMigrationViewModel.migrate().observe(this, (result) -> {\n    if (result != null) {\n        // handle result\n    }\n});\nSomething like that lets us seperate out our UI logic from the migration logic and lets us avoid using WeakReference or worrying about AsyncTask memory leaks. Totally up for discussing if that approach doesn't feel right but it'd be nice for us to find a pattern we like for this kind of thing.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r375980428", "createdAt": "2020-02-06T17:35:53Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -640,4 +643,14 @@ private void disableSmsIfNeeded() {\n                     .show();\n         }\n     }\n+\n+    private void setStorageMigrationBannerVisibility() {\n+        if (!new StorageStateProvider().isScopedStorageUsed()) {\n+            findViewById(R.id.storage_migration_banner).setVisibility(View.VISIBLE);\n+        }\n+    }\n+\n+    public void learnMoreAndMigrate(View view) {\n+        new StorageMigratorTask(this).execute();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjM1ODkzNQ==", "bodyText": "I think it's a good idea I implemented it, thanks.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r376358935", "createdAt": "2020-02-07T12:09:02Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -640,4 +643,14 @@ private void disableSmsIfNeeded() {\n                     .show();\n         }\n     }\n+\n+    private void setStorageMigrationBannerVisibility() {\n+        if (!new StorageStateProvider().isScopedStorageUsed()) {\n+            findViewById(R.id.storage_migration_banner).setVisibility(View.VISIBLE);\n+        }\n+    }\n+\n+    public void learnMoreAndMigrate(View view) {\n+        new StorageMigratorTask(this).execute();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MDQyOA=="}, "originalCommit": {"oid": "7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTQzOTE3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageMigrator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzozNzozNlrOFmkFMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QxNDowMzozNlrOFm99HQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MTM2MQ==", "bodyText": "What are you thinking for tests for this? Feels to me like testing the StorageMigrator in a all the possible scenarios (each result) and then maybe an Espresso test for the \"happy case\" (where everything goes right)?", "url": "https://github.com/getodk/collect/pull/3623#discussion_r375981361", "createdAt": "2020-02-06T17:37:36Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageMigrator.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package org.odk.collect.android.storage;\n+\n+import android.content.ContentValues;\n+import android.database.Cursor;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.work.WorkInfo;\n+import androidx.work.WorkManager;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.odk.collect.android.dao.FormsDao;\n+import org.odk.collect.android.dao.InstancesDao;\n+import org.odk.collect.android.dao.ItemsetDao;\n+import org.odk.collect.android.database.ItemsetDbAdapter;\n+import org.odk.collect.android.forms.Form;\n+import org.odk.collect.android.instances.Instance;\n+import org.odk.collect.android.itemsets.Itemset;\n+import org.odk.collect.android.provider.FormsProvider;\n+import org.odk.collect.android.provider.InstanceProvider;\n+import org.odk.collect.android.tasks.ServerPollingJob;\n+import org.odk.collect.android.upload.AutoSendWorker;\n+\n+import java.io.File;\n+import java.util.List;\n+\n+import timber.log.Timber;\n+\n+import static android.provider.BaseColumns._ID;\n+import static org.odk.collect.android.database.ItemsetDbAdapter.KEY_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_FILE_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_MEDIA_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JRCACHE_FILE_PATH;\n+import static org.odk.collect.android.provider.InstanceProviderAPI.InstanceColumns.INSTANCE_FILE_PATH;\n+\n+public class StorageMigrator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjQwNTI3Nw==", "bodyText": "Ok I added such a test.\nWhen it comes to Espresso we need to have the UI implemented first.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r376405277", "createdAt": "2020-02-07T14:03:36Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageMigrator.java", "diffHunk": "@@ -0,0 +1,201 @@\n+package org.odk.collect.android.storage;\n+\n+import android.content.ContentValues;\n+import android.database.Cursor;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.work.WorkInfo;\n+import androidx.work.WorkManager;\n+\n+import org.apache.commons.io.FileUtils;\n+import org.odk.collect.android.dao.FormsDao;\n+import org.odk.collect.android.dao.InstancesDao;\n+import org.odk.collect.android.dao.ItemsetDao;\n+import org.odk.collect.android.database.ItemsetDbAdapter;\n+import org.odk.collect.android.forms.Form;\n+import org.odk.collect.android.instances.Instance;\n+import org.odk.collect.android.itemsets.Itemset;\n+import org.odk.collect.android.provider.FormsProvider;\n+import org.odk.collect.android.provider.InstanceProvider;\n+import org.odk.collect.android.tasks.ServerPollingJob;\n+import org.odk.collect.android.upload.AutoSendWorker;\n+\n+import java.io.File;\n+import java.util.List;\n+\n+import timber.log.Timber;\n+\n+import static android.provider.BaseColumns._ID;\n+import static org.odk.collect.android.database.ItemsetDbAdapter.KEY_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_FILE_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.FORM_MEDIA_PATH;\n+import static org.odk.collect.android.provider.FormsProviderAPI.FormsColumns.JRCACHE_FILE_PATH;\n+import static org.odk.collect.android.provider.InstanceProviderAPI.InstanceColumns.INSTANCE_FILE_PATH;\n+\n+public class StorageMigrator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MTM2MQ=="}, "originalCommit": {"oid": "7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTQ0NjUxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzo0MDowMFrOFmkJ3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNzo0MDowMFrOFmkJ3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk4MjU1OQ==", "bodyText": "It would be cool to pull this out as a MaterialBanner component but I think we can do that another time. I can look at doing thta in a similar way as we did for the MaterialFullScreenDialog.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r375982559", "createdAt": "2020-02-06T17:40:00Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,45 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ccb37aaabd3f90e604aa96add99ec57eeb8e2a6"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTIyMjkxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyOTo0OVrOFolbhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxODo1MFrOFpx1DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw==", "bodyText": "I think we should be using an IntentService here (https://developer.android.com/guide/components/services#ExtendingIntentService). I've usually used them in the past as they take care of creating a worker threads and also protect us from multiple requests being exectued simultaneously etc. This would potentially mean the service could take care of the lock in StorageMigrator (.isMigrationBeingPerformed). Also if we do use a plain ol' service I think it needs to call stopSelf() when we're done executing - again an IntentService just takes care of that for us.\nSorry if this is research you already did and made the decision for some reason I'm missing!", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378100613", "createdAt": "2020-02-12T08:29:49Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.content.Intent;\n+\n+import androidx.lifecycle.LifecycleService;\n+import androidx.localbroadcastmanager.content.LocalBroadcastManager;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+public class StorageMigrationService extends LifecycleService {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI5MzAzNQ==", "bodyText": "I was thinking about using broadcast receivers vs livedata... could you take a look at the last commit whwre I replaced broadcast receivers with livedata and share you thought?", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378293035", "createdAt": "2020-02-12T14:41:59Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.content.Intent;\n+\n+import androidx.lifecycle.LifecycleService;\n+import androidx.localbroadcastmanager.content.LocalBroadcastManager;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+public class StorageMigrationService extends LifecycleService {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM2MDU5NA==", "bodyText": "Using LiveData does seem a lot cleaner in the observers (the Activity and the DialogFragment). I'd want to avoid having the LiveData object being static and also avoid having the StorageMigrator have to deal with LiveData though. This is to avoid us running into problems with tests polluting each other  and also just avoids complicating the StorageMigrator with reactive stuff.\nWhat I might do is look at having a seperate MigrationStatusRepository like this:\nclass MigrationStatusRepository {\n\n    private MutableLiveData<StorageMigrationResult> migrationStatus = new MutableLiveData<>();\n\n    public LiveData<StorageMigrationResult> getStatus() {\n        return migrationStatus;\n    }\n\n    public void setStatus(StorageMigrationResult storageMigrationResult) {\n        migrationStatus.setValue(storageMigrationResult);\n    }\n}\nThe Activity/Fragment would call getStatus() to observe and the Service could write the status when StorageMigrator completes using setStatus. This can be set up as a singleton (Dagger's @Singleton) and injected into the Activity, Fragment and Service. That way it can be easily swapped out in tests for any of those objects.\nHow does that feel? cc/ @lognaturel", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378360594", "createdAt": "2020-02-12T16:21:55Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.content.Intent;\n+\n+import androidx.lifecycle.LifecycleService;\n+import androidx.localbroadcastmanager.content.LocalBroadcastManager;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+public class StorageMigrationService extends LifecycleService {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU2NDU2NQ==", "bodyText": "But the service doesn't know about every single step it just starts migration (one method) sot it might receive the result but not every single status which changes after every step. Looking at your code where you mixed words status and result I think you didn't notice that we need both: one general result and a few statuses to update current progress text.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378564565", "createdAt": "2020-02-12T23:05:18Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.content.Intent;\n+\n+import androidx.lifecycle.LifecycleService;\n+import androidx.localbroadcastmanager.content.LocalBroadcastManager;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+public class StorageMigrationService extends LifecycleService {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU2NTQ1MQ==", "bodyText": "So I would need to\n\ninject such repository to StorageMigrator class\nor divide the migration into a few methods and call all of them in Service one by one (and then deal with statuses in Service)", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378565451", "createdAt": "2020-02-12T23:07:48Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.content.Intent;\n+\n+import androidx.lifecycle.LifecycleService;\n+import androidx.localbroadcastmanager.content.LocalBroadcastManager;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+public class StorageMigrationService extends LifecycleService {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc0ODMxOA==", "bodyText": "Ah you're absolutely right I missed that somehow. Sorry about that.\nYeah I'd still think about about looking at something lilke the MigrationStatusRespository. It could injected into the StorageMigrator (probably just as a constructor argument). It could still just have one set/get pair as the \"results\" could also just be a statuses i.e. the status could change from MIGRATING_DATABASES to SUCCESS or  from PREPARING_SCOPED_STORAGE to NOT_ENOUGH_SPACE.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378748318", "createdAt": "2020-02-13T09:40:45Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.content.Intent;\n+\n+import androidx.lifecycle.LifecycleService;\n+import androidx.localbroadcastmanager.content.LocalBroadcastManager;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+public class StorageMigrationService extends LifecycleService {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODg1NDUzMg==", "bodyText": "Ok I pushed new changes and now I use LiveData and a repository class for both results and statuses. I think those statuses is more like my idea so here is a question to @lognaturel because maybe you just want to display one message like Please wait. it might take a few seconds... and then we can get rid of it at all otherwise I think we need both.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378854532", "createdAt": "2020-02-13T13:21:12Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.content.Intent;\n+\n+import androidx.lifecycle.LifecycleService;\n+import androidx.localbroadcastmanager.content.LocalBroadcastManager;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+public class StorageMigrationService extends LifecycleService {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI0OTczNA==", "bodyText": "My initial reaction was that I really like the statuses because it gives users a sense of progress. That said, it's not clear that the information is actionable, the migration is going to be really quick for most people and it's a lot of translation effort for a one-time migration. Let's go with \"Migration in progress.\\nThis may take a few seconds...\" I do like the approach you'd come up with for the statuses, though @grzesiek2010. Sorry to see it go.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r379249734", "createdAt": "2020-02-14T04:50:40Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.content.Intent;\n+\n+import androidx.lifecycle.LifecycleService;\n+import androidx.localbroadcastmanager.content.LocalBroadcastManager;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+public class StorageMigrationService extends LifecycleService {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM1MjMzMw==", "bodyText": "Ok, done.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r379352333", "createdAt": "2020-02-14T10:18:50Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationService.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.content.Intent;\n+\n+import androidx.lifecycle.LifecycleService;\n+import androidx.localbroadcastmanager.content.LocalBroadcastManager;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+public class StorageMigrationService extends LifecycleService {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwMDYxMw=="}, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTI3NzQxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODo0ODowNVrOFol8OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMzozNTozM1rOFoutzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwODk4NQ==", "bodyText": "You should be able to use the MaterialFullScreenDialogFragment for this I think", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378108985", "createdAt": "2020-02-12T08:48:05Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.TextView;\n+\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.widget.Toolbar;\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.R;\n+\n+public class StorageMigrationDialog extends DialogFragment {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI1Mjc0OA==", "bodyText": "Fixed.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378252748", "createdAt": "2020-02-12T13:35:33Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.TextView;\n+\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.widget.Toolbar;\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.R;\n+\n+public class StorageMigrationDialog extends DialogFragment {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODEwODk4NQ=="}, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTMxNDA5OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODo1OToyN1rOFomSTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNDo0MzoxMFrOFprfsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNDYzNg==", "bodyText": "I think we need to break this object up a bit so we're not having to fake/mock methods on the object under test. It looks like you've had to do this because of a bunch of static methods though. Maybe using a similar strategy to the BackgroundLocationHelper that @lognaturel created? This worked at the time as it allowed her to wrap a bunch of static methods/singletons that the new object she was build needed without having to go and refactor/unwrap all of them. This interface could also include isFormUploaderRunning() and isFormDownloaderRunning().", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378114636", "createdAt": "2020-02-12T08:59:27Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "diffHunk": "@@ -0,0 +1,163 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+public class StorageMigratorTest {\n+\n+    private StorageMigrator storageMigrator;\n+    private StorageEraser storageEraser;\n+    private final StoragePathProvider storagePathProvider = spy(StoragePathProvider.class);\n+    private final StorageStateProvider storageStateProvider = mock(StorageStateProvider.class);\n+\n+    @Before\n+    public void setup() {\n+        storageEraser = spy(new StorageEraser(storagePathProvider));\n+        storageMigrator = spy(new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser));\n+\n+        doNothing().when(storageMigrator).reopenDatabases();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI0ODU2Mw==", "bodyText": "Agreed that sounds like a promising direction.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r379248563", "createdAt": "2020-02-14T04:43:10Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "diffHunk": "@@ -0,0 +1,163 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+public class StorageMigratorTest {\n+\n+    private StorageMigrator storageMigrator;\n+    private StorageEraser storageEraser;\n+    private final StoragePathProvider storagePathProvider = spy(StoragePathProvider.class);\n+    private final StorageStateProvider storageStateProvider = mock(StorageStateProvider.class);\n+\n+    @Before\n+    public void setup() {\n+        storageEraser = spy(new StorageEraser(storagePathProvider));\n+        storageMigrator = spy(new StorageMigrator(storagePathProvider, storageStateProvider, storageEraser));\n+\n+        doNothing().when(storageMigrator).reopenDatabases();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNDYzNg=="}, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTMxODM3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOTowMDo0NlrOFomU7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMzozNTo0NlrOFouuRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNTMwOA==", "bodyText": "Can this just be a mock rather than a spy? Personally I find spies make tests harder to read and understand as the boundaries of the test (i.e. what is faked/stubbed) become unclear.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378115308", "createdAt": "2020-02-12T09:00:46Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "diffHunk": "@@ -0,0 +1,163 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+public class StorageMigratorTest {\n+\n+    private StorageMigrator storageMigrator;\n+    private StorageEraser storageEraser;\n+    private final StoragePathProvider storagePathProvider = spy(StoragePathProvider.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI1Mjg2OQ==", "bodyText": "Fixed.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378252869", "createdAt": "2020-02-12T13:35:46Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "diffHunk": "@@ -0,0 +1,163 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+public class StorageMigratorTest {\n+\n+    private StorageMigrator storageMigrator;\n+    private StorageEraser storageEraser;\n+    private final StoragePathProvider storagePathProvider = spy(StoragePathProvider.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNTMwOA=="}, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTMyMzcwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwOTowMjoxN1rOFomYKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxMzozNTo1NFrOFouuiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNjEzOQ==", "bodyText": "Again would be nice for this to be a mock/fake rather than a spy.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378116139", "createdAt": "2020-02-12T09:02:17Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "diffHunk": "@@ -0,0 +1,163 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+public class StorageMigratorTest {\n+\n+    private StorageMigrator storageMigrator;\n+    private StorageEraser storageEraser;\n+    private final StoragePathProvider storagePathProvider = spy(StoragePathProvider.class);\n+    private final StorageStateProvider storageStateProvider = mock(StorageStateProvider.class);\n+\n+    @Before\n+    public void setup() {\n+        storageEraser = spy(new StorageEraser(storagePathProvider));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI1MjkzOQ==", "bodyText": "Fixed.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378252939", "createdAt": "2020-02-12T13:35:54Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/test/java/org/odk/collect/android/storage/migration/StorageMigratorTest.java", "diffHunk": "@@ -0,0 +1,163 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.odk.collect.android.storage.StoragePathProvider;\n+import org.odk.collect.android.storage.StorageStateProvider;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.mockito.Mockito.doNothing;\n+import static org.mockito.Mockito.doReturn;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+public class StorageMigratorTest {\n+\n+    private StorageMigrator storageMigrator;\n+    private StorageEraser storageEraser;\n+    private final StoragePathProvider storagePathProvider = spy(StoragePathProvider.class);\n+    private final StorageStateProvider storageStateProvider = mock(StorageStateProvider.class);\n+\n+    @Before\n+    public void setup() {\n+        storageEraser = spy(new StorageEraser(storagePathProvider));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODExNjEzOQ=="}, "originalCommit": {"oid": "0e141054594c4c079b5151ea14f67f7ca3684803"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDc5NDk0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/material/MaterialFullScreenDialogFragment.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNjowMjowNVrOFo0fdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDoyMzo0M1rOFpOW3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM0NzM4Mg==", "bodyText": "Oh wow was this making it pop open the keyboard even though there aren't any fields? That's annoying. Feel free to reverse it so the default is false and the other dialogs override.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378347382", "createdAt": "2020-02-12T16:02:05Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/material/MaterialFullScreenDialogFragment.java", "diffHunk": "@@ -39,8 +39,10 @@ public void onStart() {\n             int height = ViewGroup.LayoutParams.MATCH_PARENT;\n             dialog.getWindow().setLayout(width, height);\n \n-            // Make sure soft keyboard shows for focused field - annoyingly needed\n-            dialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);\n+            if (shouldShowSoftKeyboard()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ad9d8c9e1d36fe18889aa6032d3db20cd0b4c85"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc3MTE2NA==", "bodyText": "Fixed.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r378771164", "createdAt": "2020-02-13T10:23:43Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/material/MaterialFullScreenDialogFragment.java", "diffHunk": "@@ -39,8 +39,10 @@ public void onStart() {\n             int height = ViewGroup.LayoutParams.MATCH_PARENT;\n             dialog.getWindow().setLayout(width, height);\n \n-            // Make sure soft keyboard shows for focused field - annoyingly needed\n-            dialog.getWindow().setSoftInputMode(WindowManager.LayoutParams.SOFT_INPUT_STATE_ALWAYS_VISIBLE);\n+            if (shouldShowSoftKeyboard()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODM0NzM4Mg=="}, "originalCommit": {"oid": "0ad9d8c9e1d36fe18889aa6032d3db20cd0b4c85"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjQ3NjkzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwNDozOTo0OFrOFprdoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQxMDoxODoxMlrOFpxz4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI0ODAzMw==", "bodyText": "Migartion -> Migration", "url": "https://github.com/getodk/collect/pull/3623#discussion_r379248033", "createdAt": "2020-02-14T04:39:48Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java", "diffHunk": "@@ -1,21 +1,78 @@\n package org.odk.collect.android.storage;\n \n+import android.os.Build;\n import android.os.Environment;\n+import android.os.StatFs;\n \n import org.odk.collect.android.preferences.GeneralSharedPreferences;\n \n+import java.io.File;\n+\n+import timber.log.Timber;\n+\n import static org.odk.collect.android.preferences.GeneralKeys.KEY_SCOPED_STORAGE_USED;\n \n public class StorageStateProvider {\n-    boolean isScopedStorageUsed() {\n+\n+    public boolean isScopedStorageUsed() {\n         return GeneralSharedPreferences.getInstance().getBoolean(KEY_SCOPED_STORAGE_USED, false);\n     }\n \n-    public void recordMigrationToScopedStorage() {\n+    public void enableUsingScopedStorage() {\n         GeneralSharedPreferences.getInstance().save(KEY_SCOPED_STORAGE_USED, true);\n     }\n \n+    public void disableUsingScopedStorage() {\n+        GeneralSharedPreferences.getInstance().save(KEY_SCOPED_STORAGE_USED, false);\n+    }\n+\n     boolean isStorageMounted() {\n         return Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED);\n     }\n+\n+    public boolean isEnoughSpaceToPerformMigartion(StoragePathProvider storagePathProvider) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1eadb0a3388f7b0fd3a0a46285d77a54b356a90"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTM1MjAzNQ==", "bodyText": "Fixed.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r379352035", "createdAt": "2020-02-14T10:18:12Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java", "diffHunk": "@@ -1,21 +1,78 @@\n package org.odk.collect.android.storage;\n \n+import android.os.Build;\n import android.os.Environment;\n+import android.os.StatFs;\n \n import org.odk.collect.android.preferences.GeneralSharedPreferences;\n \n+import java.io.File;\n+\n+import timber.log.Timber;\n+\n import static org.odk.collect.android.preferences.GeneralKeys.KEY_SCOPED_STORAGE_USED;\n \n public class StorageStateProvider {\n-    boolean isScopedStorageUsed() {\n+\n+    public boolean isScopedStorageUsed() {\n         return GeneralSharedPreferences.getInstance().getBoolean(KEY_SCOPED_STORAGE_USED, false);\n     }\n \n-    public void recordMigrationToScopedStorage() {\n+    public void enableUsingScopedStorage() {\n         GeneralSharedPreferences.getInstance().save(KEY_SCOPED_STORAGE_USED, true);\n     }\n \n+    public void disableUsingScopedStorage() {\n+        GeneralSharedPreferences.getInstance().save(KEY_SCOPED_STORAGE_USED, false);\n+    }\n+\n     boolean isStorageMounted() {\n         return Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED);\n     }\n+\n+    public boolean isEnoughSpaceToPerformMigartion(StoragePathProvider storagePathProvider) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTI0ODAzMw=="}, "originalCommit": {"oid": "a1eadb0a3388f7b0fd3a0a46285d77a54b356a90"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDcwNDEwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/dao/InstancesDao.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNTowNjozNFrOFq1QFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMDo1Mjo1OFrOFq93Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ1Njk4MQ==", "bodyText": "Interesting! Does this mean that the getValuesFromInstanceObject method wasn't used in that context before?", "url": "https://github.com/getodk/collect/pull/3623#discussion_r380456981", "createdAt": "2020-02-18T05:06:34Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/dao/InstancesDao.java", "diffHunk": "@@ -363,9 +363,8 @@ public ContentValues getValuesFromInstanceObject(Instance instance) {\n         values.put(InstanceColumns.STATUS, instance.getStatus());\n         values.put(InstanceColumns.LAST_STATUS_CHANGE_DATE, instance.getLastStatusChangeDate());\n         values.put(InstanceColumns.DELETED_DATE, instance.getDeletedDate());\n+        values.put(InstanceColumns.GEOMETRY, instance.getGeometry());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40c0f954e3f227b5f58a28a0255f46c60b3f7d68"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDU5ODExMA==", "bodyText": "Yes it was used in some tests but didn't verify those new columns.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r380598110", "createdAt": "2020-02-18T10:52:58Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/dao/InstancesDao.java", "diffHunk": "@@ -363,9 +363,8 @@ public ContentValues getValuesFromInstanceObject(Instance instance) {\n         values.put(InstanceColumns.STATUS, instance.getStatus());\n         values.put(InstanceColumns.LAST_STATUS_CHANGE_DATE, instance.getLastStatusChangeDate());\n         values.put(InstanceColumns.DELETED_DATE, instance.getDeletedDate());\n+        values.put(InstanceColumns.GEOMETRY, instance.getGeometry());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ1Njk4MQ=="}, "originalCommit": {"oid": "40c0f954e3f227b5f58a28a0255f46c60b3f7d68"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NDcwNjIyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/dao/InstancesDaoTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNTowODoyNFrOFq1RaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQwNTowODoyNFrOFq1RaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDQ1NzMyMQ==", "bodyText": "Is your thinking that this test prevents someone accidentally removing one of the db fields from the method? Is this likely? It seems like it doesn't help prevent the kind of problem we saw here -- a new db field not being represented in the method.\nDoes it have to be a connected test? Seems it could be Robolectric-based?", "url": "https://github.com/getodk/collect/pull/3623#discussion_r380457321", "createdAt": "2020-02-18T05:08:24Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/dao/InstancesDaoTest.java", "diffHunk": "@@ -195,6 +196,35 @@ public void updateInstanceTest() {\n         assertThat(formWithGeopointInstance.getGeometry(), is(nullValue()));\n     }\n \n+    @Test\n+    public void getValuesFromInstanceObjectTest() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40c0f954e3f227b5f58a28a0255f46c60b3f7d68"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTE2Njk4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/preferences/GeneralKeys.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODo0MzozMFrOFrzHrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMzowOTo0N1rOFsSqjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3MDYzOQ==", "bodyText": "Do you really need this? Like the failure message, the success message feels transient. So I think it's good for it to keep existing while someone is in a single \"app session\" but I don't think it still needs to be shown if the user closes and then reopens the app. That is, Collect going out of memory would implicitly dismiss the dialog.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r381470639", "createdAt": "2020-02-19T18:43:30Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/GeneralKeys.java", "diffHunk": "@@ -146,7 +148,8 @@\n             KEY_METADATA_MIGRATED,\n             KEY_AUTOSEND_WIFI,\n             KEY_AUTOSEND_NETWORK,\n-            KEY_SCOPED_STORAGE_USED\n+            KEY_SCOPED_STORAGE_USED,\n+            KEY_SCOPED_STORAGE_BANNER_DISMISSED", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10bb88dd0de5ca6558cd746cd054fb9b28e61b53"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk4NzQ2OQ==", "bodyText": "Fixed.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r381987469", "createdAt": "2020-02-20T13:09:47Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/GeneralKeys.java", "diffHunk": "@@ -146,7 +148,8 @@\n             KEY_METADATA_MIGRATED,\n             KEY_AUTOSEND_WIFI,\n             KEY_AUTOSEND_NETWORK,\n-            KEY_SCOPED_STORAGE_USED\n+            KEY_SCOPED_STORAGE_USED,\n+            KEY_SCOPED_STORAGE_BANNER_DISMISSED", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3MDYzOQ=="}, "originalCommit": {"oid": "10bb88dd0de5ca6558cd746cd054fb9b28e61b53"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTE4NDc3OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODo0ODo1NVrOFrzTEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDo1MDoyNFrOFsOwhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3MzU1NQ==", "bodyText": "I think you can pre-emptively go ahead and remove this one since we're sure we're changing the minSdk in this release.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r381473555", "createdAt": "2020-02-19T18:48:55Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java", "diffHunk": "@@ -1,21 +1,78 @@\n package org.odk.collect.android.storage;\n \n+import android.os.Build;\n import android.os.Environment;\n+import android.os.StatFs;\n \n import org.odk.collect.android.preferences.GeneralSharedPreferences;\n \n+import java.io.File;\n+\n+import timber.log.Timber;\n+\n import static org.odk.collect.android.preferences.GeneralKeys.KEY_SCOPED_STORAGE_USED;\n \n public class StorageStateProvider {\n-    boolean isScopedStorageUsed() {\n+\n+    public boolean isScopedStorageUsed() {\n         return GeneralSharedPreferences.getInstance().getBoolean(KEY_SCOPED_STORAGE_USED, false);\n     }\n \n-    public void recordMigrationToScopedStorage() {\n+    public void enableUsingScopedStorage() {\n         GeneralSharedPreferences.getInstance().save(KEY_SCOPED_STORAGE_USED, true);\n     }\n \n+    public void disableUsingScopedStorage() {\n+        GeneralSharedPreferences.getInstance().save(KEY_SCOPED_STORAGE_USED, false);\n+    }\n+\n     boolean isStorageMounted() {\n         return Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED);\n     }\n+\n+    public boolean isEnoughSpaceToPerformMigration(StoragePathProvider storagePathProvider) {\n+        try {\n+            return getAvailableScopedStorageSize(storagePathProvider) > getOdkDirSize(storagePathProvider);\n+        } catch (Exception | Error e) {\n+            Timber.w(e);\n+            return false;\n+        }\n+    }\n+\n+    private long getAvailableScopedStorageSize(StoragePathProvider storagePathProvider) {\n+        String scopedStoragePath = storagePathProvider.getScopedExternalFilesDirPath();\n+        if (scopedStoragePath.isEmpty()) {\n+            return 0;\n+        }\n+\n+        StatFs stat = new StatFs(scopedStoragePath);\n+        long blockSize;\n+        long availableBlocks;\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10bb88dd0de5ca6558cd746cd054fb9b28e61b53"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMzQ2MQ==", "bodyText": "Done.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r381923461", "createdAt": "2020-02-20T10:50:24Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/StorageStateProvider.java", "diffHunk": "@@ -1,21 +1,78 @@\n package org.odk.collect.android.storage;\n \n+import android.os.Build;\n import android.os.Environment;\n+import android.os.StatFs;\n \n import org.odk.collect.android.preferences.GeneralSharedPreferences;\n \n+import java.io.File;\n+\n+import timber.log.Timber;\n+\n import static org.odk.collect.android.preferences.GeneralKeys.KEY_SCOPED_STORAGE_USED;\n \n public class StorageStateProvider {\n-    boolean isScopedStorageUsed() {\n+\n+    public boolean isScopedStorageUsed() {\n         return GeneralSharedPreferences.getInstance().getBoolean(KEY_SCOPED_STORAGE_USED, false);\n     }\n \n-    public void recordMigrationToScopedStorage() {\n+    public void enableUsingScopedStorage() {\n         GeneralSharedPreferences.getInstance().save(KEY_SCOPED_STORAGE_USED, true);\n     }\n \n+    public void disableUsingScopedStorage() {\n+        GeneralSharedPreferences.getInstance().save(KEY_SCOPED_STORAGE_USED, false);\n+    }\n+\n     boolean isStorageMounted() {\n         return Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED);\n     }\n+\n+    public boolean isEnoughSpaceToPerformMigration(StoragePathProvider storagePathProvider) {\n+        try {\n+            return getAvailableScopedStorageSize(storagePathProvider) > getOdkDirSize(storagePathProvider);\n+        } catch (Exception | Error e) {\n+            Timber.w(e);\n+            return false;\n+        }\n+    }\n+\n+    private long getAvailableScopedStorageSize(StoragePathProvider storagePathProvider) {\n+        String scopedStoragePath = storagePathProvider.getScopedExternalFilesDirPath();\n+        if (scopedStoragePath.isEmpty()) {\n+            return 0;\n+        }\n+\n+        StatFs stat = new StatFs(scopedStoragePath);\n+        long blockSize;\n+        long availableBlocks;\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN_MR2) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3MzU1NQ=="}, "originalCommit": {"oid": "10bb88dd0de5ca6558cd746cd054fb9b28e61b53"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTE4OTI2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODo1MDoyM1rOFrzWLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODo1MDoyM1rOFrzWLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ3NDM0OA==", "bodyText": "I think we'll introduce a more user-facing post but this is a great placeholder for now.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r381474348", "createdAt": "2020-02-19T18:50:23Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationDialog.java", "diffHunk": "@@ -0,0 +1,128 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import android.app.Activity;\n+import android.content.Intent;\n+import android.os.Bundle;\n+import android.view.LayoutInflater;\n+import android.view.View;\n+import android.view.ViewGroup;\n+import android.widget.Button;\n+import android.widget.LinearLayout;\n+import android.widget.TextView;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.activities.WebViewActivity;\n+import org.odk.collect.android.material.MaterialFullScreenDialogFragment;\n+\n+import butterknife.BindView;\n+import butterknife.ButterKnife;\n+\n+public class StorageMigrationDialog extends MaterialFullScreenDialogFragment {\n+\n+    private final int unsentInstancesNumber;\n+\n+    @BindView(R.id.cancelButton)\n+    Button cancelButton;\n+\n+    @BindView(R.id.migrateButton)\n+    Button migrateButton;\n+\n+    @BindView(R.id.messageText1)\n+    TextView messageText1;\n+\n+    @BindView(R.id.messageText2)\n+    TextView messageText2;\n+\n+    @BindView(R.id.messageText3)\n+    TextView messageText3;\n+\n+    @BindView(R.id.moreDetailsButton)\n+    TextView moreDetailsButton;\n+\n+    @BindView(R.id.progressBar)\n+    LinearLayout progressBar;\n+\n+    public static StorageMigrationDialog create(int unsentInstances) {\n+        return new StorageMigrationDialog(unsentInstances);\n+    }\n+\n+    private StorageMigrationDialog(int unsentInstancesNumber) {\n+        this.unsentInstancesNumber = unsentInstancesNumber;\n+    }\n+\n+    @Override\n+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {\n+        return inflater.inflate(R.layout.storage_migration_dialog, container, false);\n+    }\n+\n+    @Override\n+    public void onViewCreated(@NotNull View view, Bundle savedInstanceState) {\n+        super.onViewCreated(view, savedInstanceState);\n+        ButterKnife.bind(this, view);\n+\n+        setUpToolbar();\n+        setUpMessageAboutUnsetSubmissions();\n+\n+        moreDetailsButton.setOnClickListener(view1 -> showMoreDetails());\n+        cancelButton.setOnClickListener(v -> dismiss());\n+        migrateButton.setOnClickListener(v -> {\n+            disableDialog();\n+            showProgressBar();\n+            startStorageMigrationService();\n+        });\n+    }\n+\n+    @Override\n+    protected void onCloseClicked() {\n+    }\n+\n+    @Override\n+    protected void onBackPressed() {\n+    }\n+\n+    private void setUpToolbar() {\n+        getToolbar().setTitle(R.string.storage_migration_dialog_title);\n+        getToolbar().setNavigationIcon(null);\n+    }\n+\n+    private void setUpMessageAboutUnsetSubmissions() {\n+        if (unsentInstancesNumber > 0) {\n+            messageText2.setVisibility(View.VISIBLE);\n+            messageText2.setText(getString(R.string.storage_migration_dialog_message2, unsentInstancesNumber));\n+        }\n+    }\n+\n+    private void showMoreDetails() {\n+        Intent intent = new Intent(getContext(), WebViewActivity.class);\n+        intent.putExtra(\"url\", \"https://forum.opendatakit.org/t/24159\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10bb88dd0de5ca6558cd746cd054fb9b28e61b53"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MTM4OTU2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/values/strings.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxOTo1MToxMVrOFr1XBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMDo1MDowN1rOFsOv7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUwNzMzNA==", "bodyText": "\"You have not enough available space\" -> \"You do not have enough space\"\n\"to finish data migration\" -> \"to migrate your data\"\n\"try again later\" -> \"try again\"", "url": "https://github.com/getodk/collect/pull/3623#discussion_r381507334", "createdAt": "2020-02-19T19:51:11Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/res/values/strings.xml", "diffHunk": "@@ -725,4 +725,21 @@\n \n     <string name=\"scoped_storage_banner_text\">You must migrate Collect forms to private storage by August 2020 to comply with Android requirements.</string>\n     <string name=\"scoped_storage_learn_more\">Learn more and migrate</string>\n+    <string name=\"storage_migration_dialog_message1\">Android requirements have changed and files used by Collect must be migrated by August 2020.</string>\n+    <string name=\"storage_migration_dialog_message2\">You have %d unsent submissions. You are encouraged to submit all data before migrating.</string>\n+    <string name=\"storage_migration_dialog_message3\">If you use an external application integration such as OpenMapKit, please do not migrate yet.</string>\n+    <string name=\"storage_migration_more_details\">More details</string>\n+\n+\n+\n+    <string name=\"storage_migration_not_enough_space\">You have not enough available space on your internal storage to finish data migration. Please free up some space and try again later.</string>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10bb88dd0de5ca6558cd746cd054fb9b28e61b53"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTkyMzMwOA==", "bodyText": "Fixed.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r381923308", "createdAt": "2020-02-20T10:50:07Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/values/strings.xml", "diffHunk": "@@ -725,4 +725,21 @@\n \n     <string name=\"scoped_storage_banner_text\">You must migrate Collect forms to private storage by August 2020 to comply with Android requirements.</string>\n     <string name=\"scoped_storage_learn_more\">Learn more and migrate</string>\n+    <string name=\"storage_migration_dialog_message1\">Android requirements have changed and files used by Collect must be migrated by August 2020.</string>\n+    <string name=\"storage_migration_dialog_message2\">You have %d unsent submissions. You are encouraged to submit all data before migrating.</string>\n+    <string name=\"storage_migration_dialog_message3\">If you use an external application integration such as OpenMapKit, please do not migrate yet.</string>\n+    <string name=\"storage_migration_more_details\">More details</string>\n+\n+\n+\n+    <string name=\"storage_migration_not_enough_space\">You have not enough available space on your internal storage to finish data migration. Please free up some space and try again later.</string>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTUwNzMzNA=="}, "originalCommit": {"oid": "10bb88dd0de5ca6558cd746cd054fb9b28e61b53"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDkyMDIxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationRepository.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDowNTowMlrOFsUiFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODoxNzowNFrOFsuxQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxODA3MA==", "bodyText": "I'm missing why we need this. Is there any problem in just keeping the result?", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382018070", "createdAt": "2020-02-20T14:05:02Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationRepository.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+\n+public class StorageMigrationRepository {\n+    private MutableLiveData<StorageMigrationResult> migrationResult = new MutableLiveData<>();\n+\n+    private boolean isMigrationBeingPerformed;\n+\n+    public LiveData<StorageMigrationResult> getResult() {\n+        return migrationResult;\n+    }\n+\n+    public void setResult(StorageMigrationResult storageMigrationResult) {\n+        migrationResult.postValue(storageMigrationResult);\n+    }\n+\n+    public boolean isMigrationBeingPerformed() {\n+        return isMigrationBeingPerformed;\n+    }\n+\n+    void markMigrationStart() {\n+        isMigrationBeingPerformed = true;\n+    }\n+\n+    void markMigrationEnd() {\n+        isMigrationBeingPerformed = false;\n+    }\n+\n+    public void consumeResult() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0NzkzOQ==", "bodyText": "Now I use it in MainMenuActivity.onDestroy() otherwise if you close the app and open it again the banner with success message will be visible because the status persist. We agreed that the banner in such a case should be gone.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382447939", "createdAt": "2020-02-21T08:17:04Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/storage/migration/StorageMigrationRepository.java", "diffHunk": "@@ -0,0 +1,34 @@\n+package org.odk.collect.android.storage.migration;\n+\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+\n+public class StorageMigrationRepository {\n+    private MutableLiveData<StorageMigrationResult> migrationResult = new MutableLiveData<>();\n+\n+    private boolean isMigrationBeingPerformed;\n+\n+    public LiveData<StorageMigrationResult> getResult() {\n+        return migrationResult;\n+    }\n+\n+    public void setResult(StorageMigrationResult storageMigrationResult) {\n+        migrationResult.postValue(storageMigrationResult);\n+    }\n+\n+    public boolean isMigrationBeingPerformed() {\n+        return isMigrationBeingPerformed;\n+    }\n+\n+    void markMigrationStart() {\n+        isMigrationBeingPerformed = true;\n+    }\n+\n+    void markMigrationEnd() {\n+        isMigrationBeingPerformed = false;\n+    }\n+\n+    public void consumeResult() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAxODA3MA=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDk2NDE1OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDoxNTo0MFrOFsU8Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODoxODozN1rOFsuzZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyNDczNQ==", "bodyText": "Maybe I'm misinterpreting what @lognaturel was getting at before but I don't think we need any state around the banner at all. If the activity is recreated (rotation/out of memory) I think the LiveData observation on the result will take care of continuing to show the dialog (as the result is stored in a singlton). This is assuming we get rid of the consumeResult call.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382024735", "createdAt": "2020-02-20T14:15:40Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -79,9 +84,9 @@\n  * @author Carl Hartung (carlhartung@gmail.com)\n  * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-public class MainMenuActivity extends CollectAbstractActivity {\n+public class MainMenuActivity extends CollectAbstractActivity implements AdminPasswordDialog.AdminPasswordDialogListener {\n \n-    private static final int PASSWORD_DIALOG = 1;\n+    private static final String KEEP_BANNER_WITH_SUCCESS_MSG_VISIBLE = \"keepBannerWithSuccessMsgVisible\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxMzQ4Ng==", "bodyText": "I think there are two reasons that it's still here. We want the success banner to be user-dismissible so this currently is what keeps track of whether the user has dismissed it or not. I think an alternative would be to clear/consume/nuke the livedata value on dismissal. I think the other is that the success banner should only hold the success text where as error banners keep notice test above the error. I think that could be done by making the case based on the livedata observed value.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382313486", "createdAt": "2020-02-20T23:19:35Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -79,9 +84,9 @@\n  * @author Carl Hartung (carlhartung@gmail.com)\n  * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-public class MainMenuActivity extends CollectAbstractActivity {\n+public class MainMenuActivity extends CollectAbstractActivity implements AdminPasswordDialog.AdminPasswordDialogListener {\n \n-    private static final int PASSWORD_DIALOG = 1;\n+    private static final String KEEP_BANNER_WITH_SUCCESS_MSG_VISIBLE = \"keepBannerWithSuccessMsgVisible\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyNDczNQ=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0ODQ4NA==", "bodyText": "I improved the code a bit removing that field and using just livedata + clearing the result in onDestroy();", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382448484", "createdAt": "2020-02-21T08:18:37Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -79,9 +84,9 @@\n  * @author Carl Hartung (carlhartung@gmail.com)\n  * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-public class MainMenuActivity extends CollectAbstractActivity {\n+public class MainMenuActivity extends CollectAbstractActivity implements AdminPasswordDialog.AdminPasswordDialogListener {\n \n-    private static final int PASSWORD_DIALOG = 1;\n+    private static final String KEEP_BANNER_WITH_SUCCESS_MSG_VISIBLE = \"keepBannerWithSuccessMsgVisible\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyNDczNQ=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDk5MDU4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDoyMjo0N1rOFsVNNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMTowMzozMlrOFszW2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ==", "bodyText": "Could this just use showIfNotShowing instead? and call startStorageMigration on the returned dialog?", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382029109", "createdAt": "2020-02-20T14:22:47Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -585,6 +559,26 @@ private boolean loadSharedPreferencesFromFile(File src) {\n         return res;\n     }\n \n+    @Override\n+    public void onCorrectAdminPassword(AdminPasswordDialog.Action action) {\n+        switch (action) {\n+            case ADMIN_SETTINGS:\n+                startActivity(new Intent(this, AdminPreferencesActivity.class));\n+                break;\n+            case STORAGE_MIGRATION:\n+                StorageMigrationDialog storageMigrationDialog = (StorageMigrationDialog) DialogUtils.getDialogFragment(StorageMigrationDialog.class, getSupportFragmentManager());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 263}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ1MjY1Ng==", "bodyText": "Uuuups I don't understand... showIfNotShowing what? A user should be asked for password when they clicks on MIGRATE button from StorageMigrationDialog not LEARN MORE AND MIGRATE from the Main Menu. Am I missing something or maybe it's you \ud83d\ude04", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382452656", "createdAt": "2020-02-21T08:30:00Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -585,6 +559,26 @@ private boolean loadSharedPreferencesFromFile(File src) {\n         return res;\n     }\n \n+    @Override\n+    public void onCorrectAdminPassword(AdminPasswordDialog.Action action) {\n+        switch (action) {\n+            case ADMIN_SETTINGS:\n+                startActivity(new Intent(this, AdminPreferencesActivity.class));\n+                break;\n+            case STORAGE_MIGRATION:\n+                StorageMigrationDialog storageMigrationDialog = (StorageMigrationDialog) DialogUtils.getDialogFragment(StorageMigrationDialog.class, getSupportFragmentManager());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 263}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUwODk1Ng==", "bodyText": "hah yeah sorry I meant DialogUtils.showIfNotShowing. Does that make sense? I wouldn't be surprised if I have the flow wrong in my head here!", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382508956", "createdAt": "2020-02-21T10:32:05Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -585,6 +559,26 @@ private boolean loadSharedPreferencesFromFile(File src) {\n         return res;\n     }\n \n+    @Override\n+    public void onCorrectAdminPassword(AdminPasswordDialog.Action action) {\n+        switch (action) {\n+            case ADMIN_SETTINGS:\n+                startActivity(new Intent(this, AdminPreferencesActivity.class));\n+                break;\n+            case STORAGE_MIGRATION:\n+                StorageMigrationDialog storageMigrationDialog = (StorageMigrationDialog) DialogUtils.getDialogFragment(StorageMigrationDialog.class, getSupportFragmentManager());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 263}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUxMzAyMA==", "bodyText": "I know you meant DialogUtils.showIfNotShowing but there is nothing to show here.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382513020", "createdAt": "2020-02-21T10:41:00Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -585,6 +559,26 @@ private boolean loadSharedPreferencesFromFile(File src) {\n         return res;\n     }\n \n+    @Override\n+    public void onCorrectAdminPassword(AdminPasswordDialog.Action action) {\n+        switch (action) {\n+            case ADMIN_SETTINGS:\n+                startActivity(new Intent(this, AdminPreferencesActivity.class));\n+                break;\n+            case STORAGE_MIGRATION:\n+                StorageMigrationDialog storageMigrationDialog = (StorageMigrationDialog) DialogUtils.getDialogFragment(StorageMigrationDialog.class, getSupportFragmentManager());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 263}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUxNjE4Mg==", "bodyText": "I guess my head it's a nice way of \"fetching\" while also ensuring it's definitely on screen. Here it looks like you do expect the dialog to be showing. Is that right? If so there is a case here where if the dialog for some reason isn't showing then this is just a dead end (as storageMigrationDialog != null wouldn't pass). The code could just be:\ncase STORAGE_MIGRATION:\n    DialogUtils.showIfNotShowing(new StorageMigrationDialog(), getSupportFragmentManager()).startStorageMigration();\nIf we did that we should probably change showIfNotShowing to take a class rather than an instance (to not waste allocations).", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382516182", "createdAt": "2020-02-21T10:48:10Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -585,6 +559,26 @@ private boolean loadSharedPreferencesFromFile(File src) {\n         return res;\n     }\n \n+    @Override\n+    public void onCorrectAdminPassword(AdminPasswordDialog.Action action) {\n+        switch (action) {\n+            case ADMIN_SETTINGS:\n+                startActivity(new Intent(this, AdminPreferencesActivity.class));\n+                break;\n+            case STORAGE_MIGRATION:\n+                StorageMigrationDialog storageMigrationDialog = (StorageMigrationDialog) DialogUtils.getDialogFragment(StorageMigrationDialog.class, getSupportFragmentManager());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 263}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUyMjA0Ng==", "bodyText": "Ok, now I understand what you mean, fixed. Thanks!", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382522046", "createdAt": "2020-02-21T11:01:06Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -585,6 +559,26 @@ private boolean loadSharedPreferencesFromFile(File src) {\n         return res;\n     }\n \n+    @Override\n+    public void onCorrectAdminPassword(AdminPasswordDialog.Action action) {\n+        switch (action) {\n+            case ADMIN_SETTINGS:\n+                startActivity(new Intent(this, AdminPreferencesActivity.class));\n+                break;\n+            case STORAGE_MIGRATION:\n+                StorageMigrationDialog storageMigrationDialog = (StorageMigrationDialog) DialogUtils.getDialogFragment(StorageMigrationDialog.class, getSupportFragmentManager());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 263}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUyMzA5Ng==", "bodyText": "Sorry I absolutely should have just put the example in at first!", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382523096", "createdAt": "2020-02-21T11:03:32Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/MainMenuActivity.java", "diffHunk": "@@ -585,6 +559,26 @@ private boolean loadSharedPreferencesFromFile(File src) {\n         return res;\n     }\n \n+    @Override\n+    public void onCorrectAdminPassword(AdminPasswordDialog.Action action) {\n+        switch (action) {\n+            case ADMIN_SETTINGS:\n+                startActivity(new Intent(this, AdminPreferencesActivity.class));\n+                break;\n+            case STORAGE_MIGRATION:\n+                StorageMigrationDialog storageMigrationDialog = (StorageMigrationDialog) DialogUtils.getDialogFragment(StorageMigrationDialog.class, getSupportFragmentManager());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAyOTEwOQ=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 263}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTAwMDY0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/AdminPasswordDialog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDoyNToyOVrOFsVToA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODowMTozMlrOFsubyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzMDc1Mg==", "bodyText": "I feel like it might make more sense to use a instanceof check here rather than caching the ClassCastException. This means we don't get warnings if we're using the Fragment in contexts where we're not interested in the listener (tests for instance).", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382030752", "createdAt": "2020-02-20T14:25:29Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/AdminPasswordDialog.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.odk.collect.android.fragments.dialogs;\n+\n+import android.app.AlertDialog;\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.text.InputType;\n+import android.view.View;\n+import android.view.WindowManager;\n+import android.widget.CheckBox;\n+import android.widget.EditText;\n+\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.utilities.AdminPasswordProvider;\n+\n+import timber.log.Timber;\n+\n+public class AdminPasswordDialog extends DialogFragment {\n+\n+    public interface AdminPasswordDialogListener {\n+        void onCorrectAdminPassword(Action action);\n+        void onIncorrectAdminPassword();\n+    }\n+\n+    public enum Action { ADMIN_SETTINGS, STORAGE_MIGRATION }\n+\n+    private AdminPasswordDialogListener listener;\n+\n+    private final Action action;\n+\n+    private final AdminPasswordProvider adminPasswordProvider;\n+\n+    public static AdminPasswordDialog create(AdminPasswordProvider adminPasswordProvider, Action action) {\n+        return new AdminPasswordDialog(adminPasswordProvider, action);\n+    }\n+\n+    private AdminPasswordDialog(AdminPasswordProvider adminPasswordProvider, Action action) {\n+        this.adminPasswordProvider = adminPasswordProvider;\n+        this.action = action;\n+    }\n+\n+    @Override\n+    public void onAttach(@NotNull Context context) {\n+        super.onAttach(context);\n+        try {\n+            listener = (AdminPasswordDialogListener) getActivity();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MjQ0Mw==", "bodyText": "Done.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382442443", "createdAt": "2020-02-21T08:01:32Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/java/org/odk/collect/android/fragments/dialogs/AdminPasswordDialog.java", "diffHunk": "@@ -0,0 +1,93 @@\n+package org.odk.collect.android.fragments.dialogs;\n+\n+import android.app.AlertDialog;\n+import android.app.Dialog;\n+import android.content.Context;\n+import android.os.Bundle;\n+import android.text.InputType;\n+import android.view.View;\n+import android.view.WindowManager;\n+import android.widget.CheckBox;\n+import android.widget.EditText;\n+\n+import androidx.fragment.app.DialogFragment;\n+\n+import org.jetbrains.annotations.NotNull;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.utilities.AdminPasswordProvider;\n+\n+import timber.log.Timber;\n+\n+public class AdminPasswordDialog extends DialogFragment {\n+\n+    public interface AdminPasswordDialogListener {\n+        void onCorrectAdminPassword(Action action);\n+        void onIncorrectAdminPassword();\n+    }\n+\n+    public enum Action { ADMIN_SETTINGS, STORAGE_MIGRATION }\n+\n+    private AdminPasswordDialogListener listener;\n+\n+    private final Action action;\n+\n+    private final AdminPasswordProvider adminPasswordProvider;\n+\n+    public static AdminPasswordDialog create(AdminPasswordProvider adminPasswordProvider, Action action) {\n+        return new AdminPasswordDialog(adminPasswordProvider, action);\n+    }\n+\n+    private AdminPasswordDialog(AdminPasswordProvider adminPasswordProvider, Action action) {\n+        this.adminPasswordProvider = adminPasswordProvider;\n+        this.action = action;\n+    }\n+\n+    @Override\n+    public void onAttach(@NotNull Context context) {\n+        super.onAttach(context);\n+        try {\n+            listener = (AdminPasswordDialogListener) getActivity();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzMDc1Mg=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTA1MTUzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDozODowOFrOFsVzRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzozMjowOFrOFst2qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzODg1Mg==", "bodyText": "I think it would be good for us to start using MaterialButton instead for new views like this. Should mean that you don't have to set textAllCaps.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382038852", "createdAt": "2020-02-20T14:38:08Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:textColor=\"?colorOnSurface\">\n+        </TextView>\n+\n+        <Button", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzMjkzOQ==", "bodyText": "Done.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382432939", "createdAt": "2020-02-21T07:32:08Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:textColor=\"?colorOnSurface\">\n+        </TextView>\n+\n+        <Button", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzODg1Mg=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTA2MDM1OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0MDoxMlrOFsV4fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzozMjoyNlrOFst2-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0MDE5MQ==", "bodyText": "Lets use colorSecondary for this. They're the same but colorSecondary is the \"official\" name: https://material.io/develop/android/theming/color/", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382040191", "createdAt": "2020-02-20T14:40:12Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:textColor=\"?colorOnSurface\">\n+        </TextView>\n+\n+        <Button\n+            android:id=\"@+id/storageMigrationBannerDismissButton\"\n+            style=\"@style/Widget.MaterialComponents.Button.TextButton\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_gravity=\"end\"\n+            android:text=\"@string/scoped_storage_dismiss\"\n+            android:textColor=\"?colorAccent\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzMzAxOQ==", "bodyText": "Done.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382433019", "createdAt": "2020-02-21T07:32:26Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:textColor=\"?colorOnSurface\">\n+        </TextView>\n+\n+        <Button\n+            android:id=\"@+id/storageMigrationBannerDismissButton\"\n+            style=\"@style/Widget.MaterialComponents.Button.TextButton\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_gravity=\"end\"\n+            android:text=\"@string/scoped_storage_dismiss\"\n+            android:textColor=\"?colorAccent\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0MDE5MQ=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTA5MDYzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo0Njo1NVrOFsWKWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMjowNzowNFrOFs02ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NDc2Mg==", "bodyText": "I think we should avoid adding bold and just use the standard style here. If people disagree maybe we should look at changing the button text style (textAppearanceButton) for everything.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382044762", "createdAt": "2020-02-20T14:46:55Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:textColor=\"?colorOnSurface\">\n+        </TextView>\n+\n+        <Button\n+            android:id=\"@+id/storageMigrationBannerDismissButton\"\n+            style=\"@style/Widget.MaterialComponents.Button.TextButton\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_gravity=\"end\"\n+            android:text=\"@string/scoped_storage_dismiss\"\n+            android:textColor=\"?colorAccent\"\n+            android:paddingTop=\"12dp\"\n+            android:paddingBottom=\"@dimen/margin_small\"\n+            android:textStyle=\"bold\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MDI4Nw==", "bodyText": "I prefer having it bold otherwise it's like:\n\nthe sample from material design is with bold:", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382440287", "createdAt": "2020-02-21T07:55:15Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:textColor=\"?colorOnSurface\">\n+        </TextView>\n+\n+        <Button\n+            android:id=\"@+id/storageMigrationBannerDismissButton\"\n+            style=\"@style/Widget.MaterialComponents.Button.TextButton\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_gravity=\"end\"\n+            android:text=\"@string/scoped_storage_dismiss\"\n+            android:textColor=\"?colorAccent\"\n+            android:paddingTop=\"12dp\"\n+            android:paddingBottom=\"@dimen/margin_small\"\n+            android:textStyle=\"bold\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NDc2Mg=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUxOTY2NQ==", "bodyText": "Hmmm yeah it feels to me like the button examples they have are using a heavier font than I can seem to get access to using the Material Component styles. We're looking at changing the Main Menu buttons to be Material Buttons which means us thinking about these styles so I'm happy to just go with bold on this for now if you prefer it and we can play with different options then.\nSo this is easier for us to play with globally could you make a new style in typography.xml for the buttons (TextAppearance.Collect.Button) that inherits from TextAppearance.MaterialComponents.Button with the bold textStyle? If we set it as the textAppearanceButton in our themes that will make the bold style apply to the MaterialButton objects (with the TextButton style here of course).", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382519665", "createdAt": "2020-02-21T10:55:49Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:textColor=\"?colorOnSurface\">\n+        </TextView>\n+\n+        <Button\n+            android:id=\"@+id/storageMigrationBannerDismissButton\"\n+            style=\"@style/Widget.MaterialComponents.Button.TextButton\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_gravity=\"end\"\n+            android:text=\"@string/scoped_storage_dismiss\"\n+            android:textColor=\"?colorAccent\"\n+            android:paddingTop=\"12dp\"\n+            android:paddingBottom=\"@dimen/margin_small\"\n+            android:textStyle=\"bold\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NDc2Mg=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUyNTc4NQ==", "bodyText": "You mean like 713f686?\nIs this ok?", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382525785", "createdAt": "2020-02-21T11:10:09Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:textColor=\"?colorOnSurface\">\n+        </TextView>\n+\n+        <Button\n+            android:id=\"@+id/storageMigrationBannerDismissButton\"\n+            style=\"@style/Widget.MaterialComponents.Button.TextButton\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_gravity=\"end\"\n+            android:text=\"@string/scoped_storage_dismiss\"\n+            android:textColor=\"?colorAccent\"\n+            android:paddingTop=\"12dp\"\n+            android:paddingBottom=\"@dimen/margin_small\"\n+            android:textStyle=\"bold\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NDc2Mg=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU0Mjk0NQ==", "bodyText": "Not exactly. On the button itself (the MaterialButton) you still have:\nstyle=\"@style/Widget.MaterialComponents.Button.TextButton\"\nThen in typography.xml we add:\n<style name=\"TextAppearance.Collect.Button\" parent=\"TextAppearance.MaterialComponents.Button\">\n        <item name=\"android:textStyle\">bold</item>\n</style>\nThen in light_theme.xml and dark_theme.xml we change the textAppearanceButton attribute so that we have:\n<item name=\"textAppearanceButton\">@style/TextAppearance.Collect.Button</item>\nThe Material Component styles use the textAppearanceButton theme attribute automatically.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382542945", "createdAt": "2020-02-21T11:55:32Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:textColor=\"?colorOnSurface\">\n+        </TextView>\n+\n+        <Button\n+            android:id=\"@+id/storageMigrationBannerDismissButton\"\n+            style=\"@style/Widget.MaterialComponents.Button.TextButton\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_gravity=\"end\"\n+            android:text=\"@string/scoped_storage_dismiss\"\n+            android:textColor=\"?colorAccent\"\n+            android:paddingTop=\"12dp\"\n+            android:paddingBottom=\"@dimen/margin_small\"\n+            android:textStyle=\"bold\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NDc2Mg=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU0NzY1MQ==", "bodyText": "Ok done.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382547651", "createdAt": "2020-02-21T12:07:04Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:textColor=\"?colorOnSurface\">\n+        </TextView>\n+\n+        <Button\n+            android:id=\"@+id/storageMigrationBannerDismissButton\"\n+            style=\"@style/Widget.MaterialComponents.Button.TextButton\"\n+            android:layout_width=\"wrap_content\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_gravity=\"end\"\n+            android:text=\"@string/scoped_storage_dismiss\"\n+            android:textColor=\"?colorAccent\"\n+            android:paddingTop=\"12dp\"\n+            android:paddingBottom=\"@dimen/margin_small\"\n+            android:textStyle=\"bold\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA0NDc2Mg=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTE0NjUxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDo1OTo1N1rOFsWtBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMDo1MDoyMVrOFsy_gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MzYzNw==", "bodyText": "I believe this should be using TextAppearance.Collect.Body2 as the style looking at the specs and the style guide I generated from Sketch.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382053637", "createdAt": "2020-02-20T14:59:57Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzODc3Ng==", "bodyText": "I don't think so then it would be like:\n\nbut it should be like:", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382438776", "createdAt": "2020-02-21T07:50:42Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MzYzNw=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUxMjg0Ng==", "bodyText": "@grzesiek2010 are you sure that's Body2? It looks like it might be the Button style.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382512846", "createdAt": "2020-02-21T10:40:38Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MzYzNw=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUxNzEyMw==", "bodyText": "Right i did something wrong. Fixed.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382517123", "createdAt": "2020-02-21T10:50:21Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/storage_migration_banner.xml", "diffHunk": "@@ -0,0 +1,60 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:id=\"@+id/storageMigrationBanner\"\n+    android:orientation=\"vertical\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?colorSurface\"\n+    android:visibility=\"gone\">\n+\n+    <LinearLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"wrap_content\"\n+        android:orientation=\"vertical\"\n+        android:paddingStart=\"@dimen/margin_standard\"\n+        android:paddingEnd=\"@dimen/margin_standard\"\n+        android:paddingTop=\"@dimen/margin_standard\">\n+\n+        <TextView\n+            android:id=\"@+id/storageMigrationBannerText\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1MzYzNw=="}, "originalCommit": {"oid": "531b1366db726f7624e43f2572a76b7ada4b5ef3"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTE2MjgxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/layout/storage_migration_dialog.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowNDowMVrOFsW3qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzozMjo0M1rOFst3Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1NjM2MA==", "bodyText": "Again we should be using colorSecondary instead of colorAccent", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382056360", "createdAt": "2020-02-20T15:04:01Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/layout/storage_migration_dialog.xml", "diffHunk": "@@ -0,0 +1,137 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?attr/colorSurface\"\n+    android:orientation=\"vertical\">\n+\n+    <include layout=\"@layout/material_full_screen_dialog_toolbar\" />\n+\n+    <RelativeLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:orientation=\"vertical\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"match_parent\"\n+            android:orientation=\"vertical\"\n+            android:padding=\"@dimen/margin_standard\">\n+\n+            <TextView\n+                android:id=\"@+id/messageText1\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message1\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText2\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:visibility=\"gone\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message2\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText3\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message3\" />\n+\n+            <TextView\n+                android:id=\"@+id/moreDetailsButton\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:text=\"@string/storage_migration_more_details\"\n+                android:textColor=\"?colorAccent\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "729864dc4ec795ecbbdc03bfbccaff8579ac7c47"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzMzEwMw==", "bodyText": "Done.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382433103", "createdAt": "2020-02-21T07:32:43Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/storage_migration_dialog.xml", "diffHunk": "@@ -0,0 +1,137 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?attr/colorSurface\"\n+    android:orientation=\"vertical\">\n+\n+    <include layout=\"@layout/material_full_screen_dialog_toolbar\" />\n+\n+    <RelativeLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:orientation=\"vertical\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"match_parent\"\n+            android:orientation=\"vertical\"\n+            android:padding=\"@dimen/margin_standard\">\n+\n+            <TextView\n+                android:id=\"@+id/messageText1\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message1\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText2\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:visibility=\"gone\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message2\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText3\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message3\" />\n+\n+            <TextView\n+                android:id=\"@+id/moreDetailsButton\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:text=\"@string/storage_migration_more_details\"\n+                android:textColor=\"?colorAccent\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1NjM2MA=="}, "originalCommit": {"oid": "729864dc4ec795ecbbdc03bfbccaff8579ac7c47"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTE2NTQzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/layout/storage_migration_dialog.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowNDo0M1rOFsW5Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMjoyODozMlrOFs1V-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1Njc5MQ==", "bodyText": "This can be a MaterialButton with the TextButton style right?", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382056791", "createdAt": "2020-02-20T15:04:43Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/layout/storage_migration_dialog.xml", "diffHunk": "@@ -0,0 +1,137 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?attr/colorSurface\"\n+    android:orientation=\"vertical\">\n+\n+    <include layout=\"@layout/material_full_screen_dialog_toolbar\" />\n+\n+    <RelativeLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:orientation=\"vertical\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"match_parent\"\n+            android:orientation=\"vertical\"\n+            android:padding=\"@dimen/margin_standard\">\n+\n+            <TextView\n+                android:id=\"@+id/messageText1\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message1\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText2\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:visibility=\"gone\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message2\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText3\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message3\" />\n+\n+            <TextView", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "729864dc4ec795ecbbdc03bfbccaff8579ac7c47"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzNzQ5Mg==", "bodyText": "Yes but such a text button always has it's own padding and it doesn't look good because it's not aligned with other elements (TextViews).", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382437492", "createdAt": "2020-02-21T07:46:58Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/storage_migration_dialog.xml", "diffHunk": "@@ -0,0 +1,137 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?attr/colorSurface\"\n+    android:orientation=\"vertical\">\n+\n+    <include layout=\"@layout/material_full_screen_dialog_toolbar\" />\n+\n+    <RelativeLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:orientation=\"vertical\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"match_parent\"\n+            android:orientation=\"vertical\"\n+            android:padding=\"@dimen/margin_standard\">\n+\n+            <TextView\n+                android:id=\"@+id/messageText1\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message1\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText2\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:visibility=\"gone\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message2\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText3\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message3\" />\n+\n+            <TextView", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1Njc5MQ=="}, "originalCommit": {"oid": "729864dc4ec795ecbbdc03bfbccaff8579ac7c47"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUxNzUyNw==", "bodyText": "Ah because of the left/right padding? Personally I think I'd rather we use the component and style and then customize the padding or margins around it to get it to look right. That way most of the styling still comes from the Material Components lib.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382517527", "createdAt": "2020-02-21T10:51:10Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/layout/storage_migration_dialog.xml", "diffHunk": "@@ -0,0 +1,137 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?attr/colorSurface\"\n+    android:orientation=\"vertical\">\n+\n+    <include layout=\"@layout/material_full_screen_dialog_toolbar\" />\n+\n+    <RelativeLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:orientation=\"vertical\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"match_parent\"\n+            android:orientation=\"vertical\"\n+            android:padding=\"@dimen/margin_standard\">\n+\n+            <TextView\n+                android:id=\"@+id/messageText1\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message1\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText2\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:visibility=\"gone\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message2\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText3\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message3\" />\n+\n+            <TextView", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1Njc5MQ=="}, "originalCommit": {"oid": "729864dc4ec795ecbbdc03bfbccaff8579ac7c47"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU1NTY0MA==", "bodyText": "Done.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382555640", "createdAt": "2020-02-21T12:28:32Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/storage_migration_dialog.xml", "diffHunk": "@@ -0,0 +1,137 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?attr/colorSurface\"\n+    android:orientation=\"vertical\">\n+\n+    <include layout=\"@layout/material_full_screen_dialog_toolbar\" />\n+\n+    <RelativeLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:orientation=\"vertical\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"match_parent\"\n+            android:orientation=\"vertical\"\n+            android:padding=\"@dimen/margin_standard\">\n+\n+            <TextView\n+                android:id=\"@+id/messageText1\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message1\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText2\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:visibility=\"gone\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message2\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText3\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message3\" />\n+\n+            <TextView", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1Njc5MQ=="}, "originalCommit": {"oid": "729864dc4ec795ecbbdc03bfbccaff8579ac7c47"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NTE2ODE4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/res/layout/storage_migration_dialog.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNTowNToyN1rOFsW7NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwNzozMzoyOVrOFst4Pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1NzI2OQ==", "bodyText": "Again lets do MaterialButtons for these and see if we can get rid of the bold and textAllCaps", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382057269", "createdAt": "2020-02-20T15:05:27Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/res/layout/storage_migration_dialog.xml", "diffHunk": "@@ -0,0 +1,137 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?attr/colorSurface\"\n+    android:orientation=\"vertical\">\n+\n+    <include layout=\"@layout/material_full_screen_dialog_toolbar\" />\n+\n+    <RelativeLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:orientation=\"vertical\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"match_parent\"\n+            android:orientation=\"vertical\"\n+            android:padding=\"@dimen/margin_standard\">\n+\n+            <TextView\n+                android:id=\"@+id/messageText1\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message1\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText2\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:visibility=\"gone\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message2\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText3\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message3\" />\n+\n+            <TextView\n+                android:id=\"@+id/moreDetailsButton\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:text=\"@string/storage_migration_more_details\"\n+                android:textColor=\"?colorAccent\"\n+                android:textStyle=\"bold\"\n+                android:textAllCaps=\"true\"\n+                android:paddingTop=\"@dimen/margin_standard\" />\n+\n+            <TextView\n+                android:id=\"@+id/errorText\"\n+                style=\"@style/TextAppearance.Collect.Headline6\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_standard\"\n+                android:visibility=\"gone\"/>\n+\n+            <LinearLayout\n+                android:id=\"@+id/progressBar\"\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"match_parent\"\n+                android:orientation=\"vertical\"\n+                android:gravity=\"center\"\n+                android:visibility=\"gone\">\n+\n+                <ProgressBar\n+                    android:layout_width=\"wrap_content\"\n+                    android:layout_height=\"wrap_content\">\n+                </ProgressBar>\n+\n+                <TextView\n+                    style=\"@style/TextAppearance.Collect.Body1\"\n+                    android:layout_width=\"wrap_content\"\n+                    android:layout_height=\"wrap_content\"\n+                    android:text=\"@string/storage_migration_progress_msg\"\n+                    android:layout_marginTop=\"@dimen/margin_small\"\n+                    android:gravity=\"center_horizontal\"/>\n+            </LinearLayout>\n+        </LinearLayout>\n+\n+        <FrameLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_alignParentBottom=\"true\">\n+\n+            <LinearLayout\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"wrap_content\"\n+                android:orientation=\"vertical\">\n+\n+                <ImageView\n+                    android:layout_width=\"match_parent\"\n+                    android:layout_height=\"wrap_content\"\n+                    android:src=\"@drawable/shadow_up\" />\n+\n+                <LinearLayout\n+                    android:layout_width=\"match_parent\"\n+                    android:layout_height=\"wrap_content\"\n+                    android:orientation=\"horizontal\"\n+                    android:gravity=\"end\">\n+\n+                    <Button", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "729864dc4ec795ecbbdc03bfbccaff8579ac7c47"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQzMzM0Mg==", "bodyText": "Done, but bold is still needed.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382433342", "createdAt": "2020-02-21T07:33:29Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/main/res/layout/storage_migration_dialog.xml", "diffHunk": "@@ -0,0 +1,137 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:layout_width=\"match_parent\"\n+    android:layout_height=\"match_parent\"\n+    android:background=\"?attr/colorSurface\"\n+    android:orientation=\"vertical\">\n+\n+    <include layout=\"@layout/material_full_screen_dialog_toolbar\" />\n+\n+    <RelativeLayout\n+        android:layout_width=\"match_parent\"\n+        android:layout_height=\"match_parent\"\n+        android:orientation=\"vertical\">\n+\n+        <LinearLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"match_parent\"\n+            android:orientation=\"vertical\"\n+            android:padding=\"@dimen/margin_standard\">\n+\n+            <TextView\n+                android:id=\"@+id/messageText1\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message1\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText2\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:visibility=\"gone\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message2\" />\n+\n+            <TextView\n+                android:id=\"@+id/messageText3\"\n+                style=\"@style/TextAppearance.Collect.Body1\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_small\"\n+                android:text=\"@string/storage_migration_dialog_message3\" />\n+\n+            <TextView\n+                android:id=\"@+id/moreDetailsButton\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:text=\"@string/storage_migration_more_details\"\n+                android:textColor=\"?colorAccent\"\n+                android:textStyle=\"bold\"\n+                android:textAllCaps=\"true\"\n+                android:paddingTop=\"@dimen/margin_standard\" />\n+\n+            <TextView\n+                android:id=\"@+id/errorText\"\n+                style=\"@style/TextAppearance.Collect.Headline6\"\n+                android:layout_width=\"wrap_content\"\n+                android:layout_height=\"wrap_content\"\n+                android:layout_marginTop=\"@dimen/margin_standard\"\n+                android:visibility=\"gone\"/>\n+\n+            <LinearLayout\n+                android:id=\"@+id/progressBar\"\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"match_parent\"\n+                android:orientation=\"vertical\"\n+                android:gravity=\"center\"\n+                android:visibility=\"gone\">\n+\n+                <ProgressBar\n+                    android:layout_width=\"wrap_content\"\n+                    android:layout_height=\"wrap_content\">\n+                </ProgressBar>\n+\n+                <TextView\n+                    style=\"@style/TextAppearance.Collect.Body1\"\n+                    android:layout_width=\"wrap_content\"\n+                    android:layout_height=\"wrap_content\"\n+                    android:text=\"@string/storage_migration_progress_msg\"\n+                    android:layout_marginTop=\"@dimen/margin_small\"\n+                    android:gravity=\"center_horizontal\"/>\n+            </LinearLayout>\n+        </LinearLayout>\n+\n+        <FrameLayout\n+            android:layout_width=\"match_parent\"\n+            android:layout_height=\"wrap_content\"\n+            android:layout_alignParentBottom=\"true\">\n+\n+            <LinearLayout\n+                android:layout_width=\"match_parent\"\n+                android:layout_height=\"wrap_content\"\n+                android:orientation=\"vertical\">\n+\n+                <ImageView\n+                    android:layout_width=\"match_parent\"\n+                    android:layout_height=\"wrap_content\"\n+                    android:src=\"@drawable/shadow_up\" />\n+\n+                <LinearLayout\n+                    android:layout_width=\"match_parent\"\n+                    android:layout_height=\"wrap_content\"\n+                    android:orientation=\"horizontal\"\n+                    android:gravity=\"end\">\n+\n+                    <Button", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA1NzI2OQ=="}, "originalCommit": {"oid": "729864dc4ec795ecbbdc03bfbccaff8579ac7c47"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2Njc0NTY4OnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/ResetAppStateTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzowOTowMlrOFsmWMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzowOTowMlrOFsmWMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMwOTkzOA==", "bodyText": "Ooh, yeah, the odk subdirectory was from the StoragePathProvider PR. Sorry I didn't think through that before! Looks great now.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382309938", "createdAt": "2020-02-20T23:09:02Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/ResetAppStateTest.java", "diffHunk": "@@ -166,7 +166,7 @@ private void setupTestSettings() throws IOException {\n \n         assertTrue(new File(storagePathProvider.getDirPath(StorageSubdirectory.SETTINGS)).exists() || new File(storagePathProvider.getDirPath(StorageSubdirectory.SETTINGS)).mkdir());\n         assertTrue(new File(storagePathProvider.getDirPath(StorageSubdirectory.SETTINGS) + \"/collect.settings\").createNewFile());\n-        assertTrue(new File(storagePathProvider.getDirPath(StorageSubdirectory.ODK) + \"/collect.settings\").createNewFile());\n+        assertTrue(new File(storagePathProvider.getStorageRootDirPath() + \"/collect.settings\").createNewFile());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "729864dc4ec795ecbbdc03bfbccaff8579ac7c47"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2Njc4MzUzOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/AdminPasswordProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzoyNjo0M1rOFsmtbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQyMzoyNjo0M1rOFsmtbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjMxNTg4Ng==", "bodyText": "Nice.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r382315886", "createdAt": "2020-02-20T23:26:43Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/AdminPasswordProvider.java", "diffHunk": "@@ -0,0 +1,22 @@\n+package org.odk.collect.android.utilities;\n+\n+import org.odk.collect.android.preferences.AdminSharedPreferences;\n+\n+import static org.odk.collect.android.preferences.AdminKeys.KEY_ADMIN_PW;\n+\n+public class AdminPasswordProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "729864dc4ec795ecbbdc03bfbccaff8579ac7c47"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODM1Njk5OnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDo0OTowMFrOFvw5Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDoyOTo1NFrOFwajhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYyODQ1MA==", "bodyText": "Really liking this use of @Rule! I think it'd be good to still have the ResetStateRule and standard permssion rules for these tests just to make sure they are starting fresh.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r385628450", "createdAt": "2020-02-28T10:49:00Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package org.odk.collect.android.storage;\n+\n+import androidx.test.rule.ActivityTestRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+public class StorageMigrationBannerTest {\n+\n+    @Rule\n+    public ActivityTestRule<MainMenuActivity> main = new ActivityTestRule<>(MainMenuActivity.class);\n+\n+    @Rule\n+    public StorageMigrationNotPerformedRule storageMigrationNotPerformedRule = new StorageMigrationNotPerformedRule();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxMTA0Nw==", "bodyText": "Done, but when it comes to the new rule I removed it because it was called too late. I needed to override beforeActivityLaunched like here f6073fa#diff-031d2e263a9e3d4064f608116ef282e4R34", "url": "https://github.com/getodk/collect/pull/3623#discussion_r386311047", "createdAt": "2020-03-02T10:29:54Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package org.odk.collect.android.storage;\n+\n+import androidx.test.rule.ActivityTestRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+public class StorageMigrationBannerTest {\n+\n+    @Rule\n+    public ActivityTestRule<MainMenuActivity> main = new ActivityTestRule<>(MainMenuActivity.class);\n+\n+    @Rule\n+    public StorageMigrationNotPerformedRule storageMigrationNotPerformedRule = new StorageMigrationNotPerformedRule();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYyODQ1MA=="}, "originalCommit": {"oid": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODM2MjQwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDo1MDo1NFrOFvw8bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMToyMzoyMFrOFwcHRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYyOTI5NQ==", "bodyText": "I think you'd be fine to combine this with the previous test as one flow. I think we can also move rotation/reopen testing out of Espresso for these cases but I'll have a quick think about that and get back to you on that.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r385629295", "createdAt": "2020-02-28T10:50:54Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package org.odk.collect.android.storage;\n+\n+import androidx.test.rule.ActivityTestRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+public class StorageMigrationBannerTest {\n+\n+    @Rule\n+    public ActivityTestRule<MainMenuActivity> main = new ActivityTestRule<>(MainMenuActivity.class);\n+\n+    @Rule\n+    public StorageMigrationNotPerformedRule storageMigrationNotPerformedRule = new StorageMigrationNotPerformedRule();\n+\n+    @Test\n+    public void when_storageMigrationNotPerformed_should_bannerBeVisible() {\n+        new MainMenuPage(main)\n+                .assertStorageMigrationBannerIsDisplayed()\n+                .rotateToLandscape(new MainMenuPage(main))\n+                .assertStorageMigrationBannerIsDisplayed()\n+                .rotateToPortrait(new MainMenuPage(main))\n+                .assertStorageMigrationBannerIsDisplayed()\n+                .reopenApp()\n+                .assertStorageMigrationBannerIsDisplayed();\n+    }\n+\n+    @Test\n+    public void when_learMoreButtonClicked_should_storageMigrationDialogAppear() {\n+        new MainMenuPage(main)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYzNjI0Mw==", "bodyText": "Yeah you should be able to use the ActivityScenario in AndroidX testing and just call recreate to test recreation (otation is really just that). We're using it for a fragment test in FormMetadataFragmentTest. We should be able to use this kind of pattern to test the MainMenuActivity directly rather than having to worry about rotation/recreation at the Espresso level.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r385636243", "createdAt": "2020-02-28T11:06:08Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package org.odk.collect.android.storage;\n+\n+import androidx.test.rule.ActivityTestRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+public class StorageMigrationBannerTest {\n+\n+    @Rule\n+    public ActivityTestRule<MainMenuActivity> main = new ActivityTestRule<>(MainMenuActivity.class);\n+\n+    @Rule\n+    public StorageMigrationNotPerformedRule storageMigrationNotPerformedRule = new StorageMigrationNotPerformedRule();\n+\n+    @Test\n+    public void when_storageMigrationNotPerformed_should_bannerBeVisible() {\n+        new MainMenuPage(main)\n+                .assertStorageMigrationBannerIsDisplayed()\n+                .rotateToLandscape(new MainMenuPage(main))\n+                .assertStorageMigrationBannerIsDisplayed()\n+                .rotateToPortrait(new MainMenuPage(main))\n+                .assertStorageMigrationBannerIsDisplayed()\n+                .reopenApp()\n+                .assertStorageMigrationBannerIsDisplayed();\n+    }\n+\n+    @Test\n+    public void when_learMoreButtonClicked_should_storageMigrationDialogAppear() {\n+        new MainMenuPage(main)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYyOTI5NQ=="}, "originalCommit": {"oid": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMzNjU4Mw==", "bodyText": "think you'd be fine to combine this with the previous test as one flow.\n\nDone.\nwhen it comes to screen rotation I used recreate in some cases for example where I wanted to simulate that the app is reopened. However in this case rotation and recreation differ. In MainMenuActivity we use\nandroid:configChanges=\"locale|orientation|screenSize\"\nthat means onDestroy won't be called if you rotate your device so I expect a different behavior compared to recreation. For example if we have the banner with success msg it should disappear after reopening the app but should be still visible after simple rotation.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r386336583", "createdAt": "2020-03-02T11:23:20Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationBannerTest.java", "diffHunk": "@@ -0,0 +1,36 @@\n+package org.odk.collect.android.storage;\n+\n+import androidx.test.rule.ActivityTestRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+public class StorageMigrationBannerTest {\n+\n+    @Rule\n+    public ActivityTestRule<MainMenuActivity> main = new ActivityTestRule<>(MainMenuActivity.class);\n+\n+    @Rule\n+    public StorageMigrationNotPerformedRule storageMigrationNotPerformedRule = new StorageMigrationNotPerformedRule();\n+\n+    @Test\n+    public void when_storageMigrationNotPerformed_should_bannerBeVisible() {\n+        new MainMenuPage(main)\n+                .assertStorageMigrationBannerIsDisplayed()\n+                .rotateToLandscape(new MainMenuPage(main))\n+                .assertStorageMigrationBannerIsDisplayed()\n+                .rotateToPortrait(new MainMenuPage(main))\n+                .assertStorageMigrationBannerIsDisplayed()\n+                .reopenApp()\n+                .assertStorageMigrationBannerIsDisplayed();\n+    }\n+\n+    @Test\n+    public void when_learMoreButtonClicked_should_storageMigrationDialogAppear() {\n+        new MainMenuPage(main)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYyOTI5NQ=="}, "originalCommit": {"oid": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODM2OTcyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationDialogTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDo1MzoxN1rOFvxAtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDoyODoxNVrOFwagYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYzMDM4OQ==", "bodyText": "I'm wondering if it might make sense to combine these tests with the StorageMigrationBannerTest as one file that tests the migration flow.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r385630389", "createdAt": "2020-02-28T10:53:17Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationDialogTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.odk.collect.android.storage;\n+\n+import android.Manifest;\n+\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.CopyFormRule;\n+import org.odk.collect.android.support.ResetStateRule;\n+import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+import org.odk.collect.android.support.pages.StorageMigrationDialogPage;\n+\n+public class StorageMigrationDialogTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxMDI0MA==", "bodyText": "Done.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r386310240", "createdAt": "2020-03-02T10:28:15Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationDialogTest.java", "diffHunk": "@@ -0,0 +1,80 @@\n+package org.odk.collect.android.storage;\n+\n+import android.Manifest;\n+\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.CopyFormRule;\n+import org.odk.collect.android.support.ResetStateRule;\n+import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+import org.odk.collect.android.support.pages.StorageMigrationDialogPage;\n+\n+public class StorageMigrationDialogTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYzMDM4OQ=="}, "originalCommit": {"oid": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODM3MjgxOnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMDo1NDoxNVrOFvxCjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMDoyODoyMFrOFwagjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYzMDg2Mw==", "bodyText": "Same again: feels like we might be able to just combine these with the other migration tests", "url": "https://github.com/getodk/collect/pull/3623#discussion_r385630863", "createdAt": "2020-02-28T10:54:15Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.odk.collect.android.storage;\n+\n+import android.Manifest;\n+\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.CopyFormRule;\n+import org.odk.collect.android.support.ResetStateRule;\n+import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+public class StorageMigrationTest {\n+\n+    @Rule\n+    public IntentsTestRule<MainMenuActivity> main = new IntentsTestRule<>(MainMenuActivity.class);\n+\n+    @Rule\n+    public RuleChain copyFormChain = RuleChain\n+            .outerRule(GrantPermissionRule.grant(\n+                    Manifest.permission.READ_EXTERNAL_STORAGE,\n+                    Manifest.permission.WRITE_EXTERNAL_STORAGE\n+            ))\n+            .around(new StorageMigrationNotPerformedRule())\n+            .around(new ResetStateRule())\n+            .around(new CopyFormRule(\"basic.xml\", true));\n+\n+    @Test\n+    public void when_migrationIsFinishedWIthSuccess_should_storageMigrationDialogDisappear() {\n+        new MainMenuPage(main)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMxMDI4NQ==", "bodyText": "Done.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r386310285", "createdAt": "2020-03-02T10:28:20Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigrationTest.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.odk.collect.android.storage;\n+\n+import android.Manifest;\n+\n+import androidx.test.espresso.intent.rule.IntentsTestRule;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.CopyFormRule;\n+import org.odk.collect.android.support.ResetStateRule;\n+import org.odk.collect.android.support.StorageMigrationNotPerformedRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+\n+public class StorageMigrationTest {\n+\n+    @Rule\n+    public IntentsTestRule<MainMenuActivity> main = new IntentsTestRule<>(MainMenuActivity.class);\n+\n+    @Rule\n+    public RuleChain copyFormChain = RuleChain\n+            .outerRule(GrantPermissionRule.grant(\n+                    Manifest.permission.READ_EXTERNAL_STORAGE,\n+                    Manifest.permission.WRITE_EXTERNAL_STORAGE\n+            ))\n+            .around(new StorageMigrationNotPerformedRule())\n+            .around(new ResetStateRule())\n+            .around(new CopyFormRule(\"basic.xml\", true));\n+\n+    @Test\n+    public void when_migrationIsFinishedWIthSuccess_should_storageMigrationDialogDisappear() {\n+        new MainMenuPage(main)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTYzMDg2Mw=="}, "originalCommit": {"oid": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODQzNzM0OnYy", "diffSide": "RIGHT", "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigratorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMToxNjo1NlrOFvxp3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxMToxNjo1NlrOFvxp3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTY0MDkyNA==", "bodyText": "I'm wondering if there is a way we could test that the StorageMigrator does the right thing when these jobs are runnign without actually having to start them up (and also have tests that run in the JVM). As far as I can see these tests are non deterministic due to the waits and background work.\nI know Google released some testing around WorkManager so I can have a look and see if there is anything we can use there. Ideally we can fake the state of work or have it run paused or something. This wouldn't solve for the JobManager stuff though, Alternatively, for the moment we could hide the logic around looking up the statuses of these pieces of background work behind an interface that we can sub out for the StorageMigrator's unit test (probably as a constructor arg):\npublic interface WorkStatusProvider {\n    public boolean isFormDownloaderRunning();\n    public boolean isFormUploaderRunning();\n}\nThis would also mean that objects like the StorageMigrator wouldn't have to care about the details involved of fetching those statuses.", "url": "https://github.com/getodk/collect/pull/3623#discussion_r385640924", "createdAt": "2020-02-28T11:16:56Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/storage/StorageMigratorTest.java", "diffHunk": "@@ -0,0 +1,115 @@\n+package org.odk.collect.android.storage;\n+\n+import androidx.work.ExistingWorkPolicy;\n+import androidx.work.OneTimeWorkRequest;\n+import androidx.work.WorkManager;\n+\n+import com.evernote.android.job.JobManager;\n+import com.evernote.android.job.JobManagerCreateException;\n+import com.evernote.android.job.JobRequest;\n+\n+import org.javarosa.core.reference.ReferenceManager;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.odk.collect.android.application.Collect;\n+import org.odk.collect.android.preferences.GeneralSharedPreferences;\n+import org.odk.collect.android.storage.migration.StorageEraser;\n+import org.odk.collect.android.storage.migration.StorageMigrationRepository;\n+import org.odk.collect.android.storage.migration.StorageMigrationResult;\n+import org.odk.collect.android.storage.migration.StorageMigrator;\n+import org.odk.collect.android.storage.utils.FakedAutoSendWorker;\n+import org.odk.collect.android.storage.utils.FakedServerPollingJob;\n+import org.odk.collect.android.tasks.ServerPollingJob;\n+import org.odk.collect.android.upload.AutoSendWorker;\n+\n+import timber.log.Timber;\n+\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.is;\n+import static org.hamcrest.core.IsNot.not;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.spy;\n+\n+public class StorageMigratorTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ecf4f6adbbdf88f14be4aaff53c973b9519160b"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3473, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}