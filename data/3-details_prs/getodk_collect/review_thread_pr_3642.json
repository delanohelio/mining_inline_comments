{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NjA0MzAz", "number": 3642, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoxMjozM1rODgsCBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoxMjozM1rODgsCBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1NjAyNDM2OnYy", "diffSide": "RIGHT", "path": "config/checkstyle.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxMzoxMjozM1rOFrBwxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxODowMjo1MVrOFrxvUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2MTk1Ng==", "bodyText": "This is potentially contraversial so happy to reenable the check and fix the problems if people disagree with me here.\nThe reason for disabling the check is that I think it can make writing tests with setup data hard. For instance:\nString testData1 = // setup test data\nString testData2 = // setup test data\nString testData3 = // setup tests data\n\ntestObject.doAThing(testData1);\ntestObject.doAThing(testData2);\ntestObject.doSomethingElse();\n\nassertThat(testObject.getSomething(), notNullValue());\nassertThat(testObject.getSomething().anotherThing(), equalTo(testData3));\nThis is a pretty common pattern for a test - we're setting up our inputs and outputs, carrying out the steps we're testing and then making an assertion on something we set up at the beginning of the test. This can make tests more readable and also helps if you need to mutate input/output values. This would fail our checkstyle build however as the testData3 declaration would be too far away from it's use.", "url": "https://github.com/getodk/collect/pull/3642#discussion_r380661956", "createdAt": "2020-02-18T13:12:33Z", "author": {"login": "seadowg"}, "path": "config/checkstyle.xml", "diffHunk": "@@ -186,7 +186,7 @@\n             <property name=\"allowedAbbreviationLength\" value=\"1\"/>\n         </module> -->\n         <module name=\"OverloadMethodsDeclarationOrder\" />\n-        <module name=\"VariableDeclarationUsageDistance\" />\n+        <!-- <module name=\"VariableDeclarationUsageDistance\" /> -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba01043760c1262ef24d8619f73a3eb56bdbcce9"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ0ODAxOA==", "bodyText": "I agree that this split is reasonable for tests. I do't feel strongly one way or the other but I will say that I have had that checkstyle rule fail on code I was writing and was glad for it. Maybe it's something that would have been flagged in review anyway.", "url": "https://github.com/getodk/collect/pull/3642#discussion_r381448018", "createdAt": "2020-02-19T18:02:51Z", "author": {"login": "lognaturel"}, "path": "config/checkstyle.xml", "diffHunk": "@@ -186,7 +186,7 @@\n             <property name=\"allowedAbbreviationLength\" value=\"1\"/>\n         </module> -->\n         <module name=\"OverloadMethodsDeclarationOrder\" />\n-        <module name=\"VariableDeclarationUsageDistance\" />\n+        <!-- <module name=\"VariableDeclarationUsageDistance\" /> -->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDY2MTk1Ng=="}, "originalCommit": {"oid": "ba01043760c1262ef24d8619f73a3eb56bdbcce9"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3485, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}