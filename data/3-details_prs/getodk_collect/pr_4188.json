{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMDU0NTEz", "number": 4188, "title": "Extend existing external application functionality to receive binary files in field-list groups", "bodyText": "Closes #4071\nCloses #3653\nThis is the first part which contains support for field-list groups what is more important at this moment than supporting single widgets. I'll add support for single widgets once we merge this pr.\nTesting this app requires an external app and I prepared one which you can find here https://github.com/grzesiek2010/CollectAnswersProvider\nWhat has been done to verify that this works as intended?\nI tested the app manually and added some automated tests.\nWhy is this the best possible solution? Were any other approaches considered?\nThis extends the current functionality described in https://docs.getodk.org/launch-apps-from-collect/#launching-external-apps-to-populate-multiple-fields so it's the best possible solution.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nThis change shouldn't affect normal users (users that doesn't use external apps to receive values). It just extendshttps://docs.getodk.org/launch-apps-from-collect/#launching-external-apps-to-populate-multiple-fields and we can focus on that functionality during testing.\nDo we need any specific form for testing your changes? If so, please attach one.\nexternal_widgets.xlsx\nDoes this change require updates to documentation? If so, please file an issue here and include the link below.\nYes.\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-10-26T14:06:44Z", "url": "https://github.com/getodk/collect/pull/4188", "merged": true, "mergeCommit": {"oid": "8e6876f11d85f53a0e05aca5ff0c46a05b56f861"}, "closed": true, "closedAt": "2020-11-05T13:07:03Z", "author": {"login": "grzesiek2010"}, "timelineItems": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdW-kj2gFqTUxODcxNzY5OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZI2VmABqjM5NTYyMzQ4MjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NzE3Njk4", "url": "https://github.com/getodk/collect/pull/4188#pullrequestreview-518717698", "createdAt": "2020-10-28T14:23:23Z", "commit": {"oid": "36b39bdb62696618d9bdb437d9d6a50004c67ffd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDoyMzoyM1rOHpsmpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDozMjowOFrOHptDgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ4NDQ1Mg==", "bodyText": "Do these values need to be random or are you just using random values to generate test data?", "url": "https://github.com/getodk/collect/pull/4188#discussion_r513484452", "createdAt": "2020-10-28T14:23:23Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/IntentGroupTest.java", "diffHunk": "@@ -80,17 +95,109 @@ public void appMissingErrorText_ShouldComeFromSpecialFormText() {\n     }\n \n     @Test\n-    public void externalApp_ShouldPopulateFields() {\n+    public void externalApp_ShouldPopulateStringFields() {\n         Intent resultIntent = new Intent();\n-        resultIntent.putExtra(\"sometext\", \"Here is a text value\");\n \n-        int randomInteger = (new Random()).nextInt(255);\n-        resultIntent.putExtra(\"someinteger\", randomInteger);\n+        int randomInteger = new Random().nextInt(255);\n+        double scale = Math.pow(10, 2);\n+        double randomDecimal = Math.round(new Random().nextDouble() * scale) / scale;\n+        String randomText = RandomString.make();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b39bdb62696618d9bdb437d9d6a50004c67ffd"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ4Njk2NQ==", "bodyText": "You can just use Files.createTempFile here I think. Then there's no need to use the StoragePathProvider in here.", "url": "https://github.com/getodk/collect/pull/4188#discussion_r513486965", "createdAt": "2020-10-28T14:26:17Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/IntentGroupTest.java", "diffHunk": "@@ -80,17 +95,109 @@ public void appMissingErrorText_ShouldComeFromSpecialFormText() {\n     }\n \n     @Test\n-    public void externalApp_ShouldPopulateFields() {\n+    public void externalApp_ShouldPopulateStringFields() {\n         Intent resultIntent = new Intent();\n-        resultIntent.putExtra(\"sometext\", \"Here is a text value\");\n \n-        int randomInteger = (new Random()).nextInt(255);\n-        resultIntent.putExtra(\"someinteger\", randomInteger);\n+        int randomInteger = new Random().nextInt(255);\n+        double scale = Math.pow(10, 2);\n+        double randomDecimal = Math.round(new Random().nextDouble() * scale) / scale;\n+        String randomText = RandomString.make();\n+\n+        resultIntent.putExtra(\"questionInteger\", randomInteger);\n+        resultIntent.putExtra(\"questionDecimal\", randomDecimal);\n+        resultIntent.putExtra(\"questionText\", randomText);\n \n         intending(not(isInternal())).respondWith(new Instrumentation.ActivityResult(Activity.RESULT_OK, resultIntent));\n         onView(withText(\"This is buttonText\")).perform(click());\n \n-        onView(withText(\"Here is a text value\")).check(matches(isDisplayed()));\n         onView(withText(Integer.toString(randomInteger))).check(matches(isDisplayed()));\n+        onView(withText(String.valueOf(randomDecimal))).check(matches(isDisplayed()));\n+        onView(withText(randomText)).check(matches(isDisplayed()));\n+    }\n+\n+    @Test\n+    public void externalApp_ShouldPopulateImageField() throws IOException {\n+        onView(withTagValue(is(\"ImageView\"))).check(doesNotExist());\n+        onView(withId(R.id.capture_image)).check(doesNotExist());\n+        onView(withId(R.id.choose_image)).check(doesNotExist());\n+\n+        Intent resultIntent = new Intent();\n+\n+        File tmpJpg = new File(new StoragePathProvider().getTmpFilePath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b39bdb62696618d9bdb437d9d6a50004c67ffd"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ4ODUxOQ==", "bodyText": "Could this just be one test where the group contains every kind of data? That might be harder to read though I guess... Interested in what you think!", "url": "https://github.com/getodk/collect/pull/4188#discussion_r513488519", "createdAt": "2020-10-28T14:28:02Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/IntentGroupTest.java", "diffHunk": "@@ -80,17 +95,109 @@ public void appMissingErrorText_ShouldComeFromSpecialFormText() {\n     }\n \n     @Test\n-    public void externalApp_ShouldPopulateFields() {\n+    public void externalApp_ShouldPopulateStringFields() {\n         Intent resultIntent = new Intent();\n-        resultIntent.putExtra(\"sometext\", \"Here is a text value\");\n \n-        int randomInteger = (new Random()).nextInt(255);\n-        resultIntent.putExtra(\"someinteger\", randomInteger);\n+        int randomInteger = new Random().nextInt(255);\n+        double scale = Math.pow(10, 2);\n+        double randomDecimal = Math.round(new Random().nextDouble() * scale) / scale;\n+        String randomText = RandomString.make();\n+\n+        resultIntent.putExtra(\"questionInteger\", randomInteger);\n+        resultIntent.putExtra(\"questionDecimal\", randomDecimal);\n+        resultIntent.putExtra(\"questionText\", randomText);\n \n         intending(not(isInternal())).respondWith(new Instrumentation.ActivityResult(Activity.RESULT_OK, resultIntent));\n         onView(withText(\"This is buttonText\")).perform(click());\n \n-        onView(withText(\"Here is a text value\")).check(matches(isDisplayed()));\n         onView(withText(Integer.toString(randomInteger))).check(matches(isDisplayed()));\n+        onView(withText(String.valueOf(randomDecimal))).check(matches(isDisplayed()));\n+        onView(withText(randomText)).check(matches(isDisplayed()));\n+    }\n+\n+    @Test\n+    public void externalApp_ShouldPopulateImageField() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b39bdb62696618d9bdb437d9d6a50004c67ffd"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ4OTUxNA==", "bodyText": "Nice! Really like this being here.", "url": "https://github.com/getodk/collect/pull/4188#discussion_r513489514", "createdAt": "2020-10-28T14:29:17Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/questions/QuestionDetails.java", "diffHunk": "@@ -24,4 +30,8 @@ public FormEntryPrompt getPrompt() {\n     public String getFormAnalyticsID() {\n         return formAnalyticsID;\n     }\n+\n+    public boolean isReadOnly() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b39bdb62696618d9bdb437d9d6a50004c67ffd"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ5MTA5MA==", "bodyText": "Could this maybe be answerFile or instanceFile? The QuestionMediaManager refers to these as \"answer files\". I'm frequently getting confused between files in the instance folder and files that come with the form.", "url": "https://github.com/getodk/collect/pull/4188#discussion_r513491090", "createdAt": "2020-10-28T14:31:08Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/FileUtils.java", "diffHunk": "@@ -100,6 +103,39 @@\n     private FileUtils() {\n     }\n \n+    public static void saveMediaFileFromUri(Uri uri, File destFile, Context context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b39bdb62696618d9bdb437d9d6a50004c67ffd"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ5MTg0MQ==", "bodyText": "This could maybe use the QuestionMediaManager in some way. I've ended up playing with that in #4190 so might be better to come back fro that later!", "url": "https://github.com/getodk/collect/pull/4188#discussion_r513491841", "createdAt": "2020-10-28T14:32:08Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/ODKView.java", "diffHunk": "@@ -475,40 +483,70 @@ public void scrollTo(@Nullable QuestionWidget qw) {\n     /**\n      * Saves answers for the widgets in this view. Called when the widgets are in an intent group.\n      */\n-    public void setDataForFields(Bundle bundle) throws JavaRosaException {\n-        if (bundle == null) {\n+    public void setDataForFields(Bundle bundle, ClipData clipData) throws JavaRosaException {\n+        FormController formController = Collect.getInstance().getFormController();\n+        if (formController == null) {\n             return;\n         }\n-        FormController formController = Collect.getInstance().getFormController();\n-        Set<String> keys = bundle.keySet();\n-        for (String key : keys) {\n-            for (QuestionWidget questionWidget : widgets) {\n-                FormEntryPrompt prompt = questionWidget.getFormEntryPrompt();\n-                TreeReference treeReference =\n-                        (TreeReference) prompt.getFormElement().getBind().getReference();\n-\n-                if (treeReference.getNameLast().equals(key)) {\n-                    switch (prompt.getDataType()) {\n-                        case Constants.DATATYPE_TEXT:\n-                            formController.saveAnswer(prompt.getIndex(),\n-                                    ExternalAppsUtils.asStringData(bundle.get(key)));\n-                            break;\n-                        case Constants.DATATYPE_INTEGER:\n-                            formController.saveAnswer(prompt.getIndex(),\n-                                    ExternalAppsUtils.asIntegerData(bundle.get(key)));\n-                            break;\n-                        case Constants.DATATYPE_DECIMAL:\n-                            formController.saveAnswer(prompt.getIndex(),\n-                                    ExternalAppsUtils.asDecimalData(bundle.get(key)));\n-                            break;\n-                        default:\n-                            throw new RuntimeException(\n-                                    getContext().getString(R.string.ext_assign_value_error,\n-                                            treeReference.toString(false)));\n+\n+        if (bundle != null) {\n+            Set<String> keys = bundle.keySet();\n+            for (String key : keys) {\n+                for (QuestionWidget questionWidget : widgets) {\n+                    FormEntryPrompt prompt = questionWidget.getFormEntryPrompt();\n+                    TreeReference treeReference =\n+                            (TreeReference) prompt.getFormElement().getBind().getReference();\n+\n+                    if (treeReference.getNameLast().equals(key)) {\n+                        switch (prompt.getDataType()) {\n+                            case Constants.DATATYPE_TEXT:\n+                                formController.saveAnswer(prompt.getIndex(),\n+                                        ExternalAppsUtils.asStringData(bundle.get(key)));\n+                                break;\n+                            case Constants.DATATYPE_INTEGER:\n+                                formController.saveAnswer(prompt.getIndex(),\n+                                        ExternalAppsUtils.asIntegerData(bundle.get(key)));\n+                                break;\n+                            case Constants.DATATYPE_DECIMAL:\n+                                formController.saveAnswer(prompt.getIndex(),\n+                                        ExternalAppsUtils.asDecimalData(bundle.get(key)));\n+                                break;\n+                            default:\n+                                throw new RuntimeException(\n+                                        getContext().getString(R.string.ext_assign_value_error,\n+                                                treeReference.toString(false)));\n+                        }\n+\n+                        ((StringWidget) questionWidget).setDisplayValueFromModel();\n+                        break;\n                     }\n+                }\n+            }\n+        }\n+\n+        if (clipData != null) {\n+            for (int i = 0; i < clipData.getItemCount(); i++) {\n+                CharSequence key = clipData.getItemAt(i).getText();\n+                if (key == null) {\n+                    continue;\n+                }\n \n-                    ((StringWidget) questionWidget).setDisplayValueFromModel();\n-                    break;\n+                for (QuestionWidget questionWidget : widgets) {\n+                    FormEntryPrompt prompt = questionWidget.getFormEntryPrompt();\n+\n+                    if (FormEntryPromptUtils.getQuestionName(prompt).equals(key.toString())\n+                            && prompt.getDataType() == Constants.DATATYPE_BINARY) {\n+                        Uri uri = clipData.getItemAt(i).getUri();\n+                        if (uri != null) {\n+                            try {\n+                                File destFile = FileUtils.createDestinationMediaFile(formController.getInstanceFile().getParent(), ContentResolverHelper.getFileExtensionFromUri(getContext(), uri));\n+                                FileUtils.saveMediaFileFromUri(uri, destFile, getContext());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36b39bdb62696618d9bdb437d9d6a50004c67ffd"}, "originalPosition": 130}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36b39bdb62696618d9bdb437d9d6a50004c67ffd", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/36b39bdb62696618d9bdb437d9d6a50004c67ffd", "committedDate": "2020-10-26T13:29:43Z", "message": "Catch SecurityException when receiving uris"}, "afterCommit": {"oid": "d403b9d6b64ceda33509bcd991a85ffefd95121b", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/d403b9d6b64ceda33509bcd991a85ffefd95121b", "committedDate": "2020-10-29T09:43:08Z", "message": "Improved tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5ODAwNjEz", "url": "https://github.com/getodk/collect/pull/4188#pullrequestreview-519800613", "createdAt": "2020-10-29T15:37:40Z", "commit": {"oid": "70e92e09075f46f202c0763915c9bb83273ab966"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNTozNzo0MFrOHqh5qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNTozNzo0MFrOHqh5qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM1NzY3NA==", "bodyText": "Out of interest did you need the parent (new File(\"/sdcard\")) here? I was under the impression we could just create a file outright and Android handles it.", "url": "https://github.com/getodk/collect/pull/4188#discussion_r514357674", "createdAt": "2020-10-29T15:37:40Z", "author": {"login": "seadowg"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/IntentGroupTest.java", "diffHunk": "@@ -80,17 +92,67 @@ public void appMissingErrorText_ShouldComeFromSpecialFormText() {\n     }\n \n     @Test\n-    public void externalApp_ShouldPopulateFields() {\n+    public void externalApp_ShouldPopulateFields() throws IOException {\n+        // Check ImageWidget without answer\n+        onView(withTagValue(is(\"ImageView\"))).check(doesNotExist());\n+        onView(withId(R.id.capture_image)).check(doesNotExist());\n+        onView(withId(R.id.choose_image)).check(doesNotExist());\n+\n+        // Check AudioWidget without answer\n+        onView(withId(R.id.audio_controller)).check(matches(not(isDisplayed())));\n+\n+        // Check VideoWidget without answer\n+        onView(withId(R.id.play_video)).check(matches(isDisplayed()));\n+        onView(withId(R.id.play_video)).check(matches(not(isEnabled())));\n+\n+        // Check ArbitraryFileWidget without answer\n+        onView(withTagValue(is(\"ArbitraryFileWidgetAnswer\"))).check(matches(not(isDisplayed())));\n+\n         Intent resultIntent = new Intent();\n-        resultIntent.putExtra(\"sometext\", \"Here is a text value\");\n \n-        int randomInteger = (new Random()).nextInt(255);\n-        resultIntent.putExtra(\"someinteger\", randomInteger);\n+        resultIntent.putExtra(\"questionInteger\", \"25\");\n+        resultIntent.putExtra(\"questionDecimal\", \"46.74\");\n+        resultIntent.putExtra(\"questionText\", \"sampleAnswer\");\n \n+        ClipData clipData = ClipData.newRawUri(null, null);\n+        clipData.addItem(new ClipData.Item(\"questionImage\", null, createTempFile(\"famous\", \"jpg\")));\n+        clipData.addItem(new ClipData.Item(\"questionAudio\", null, createTempFile(\"sampleAudio\", \"wav\")));\n+        clipData.addItem(new ClipData.Item(\"questionVideo\", null, createTempFile(\"sampleVideo\", \"mp4\")));\n+        clipData.addItem(new ClipData.Item(\"questionFile\", null, createTempFile(\"fruits\", \"csv\")));\n+\n+        resultIntent.setClipData(clipData);\n         intending(not(isInternal())).respondWith(new Instrumentation.ActivityResult(Activity.RESULT_OK, resultIntent));\n         onView(withText(\"This is buttonText\")).perform(click());\n \n-        onView(withText(\"Here is a text value\")).check(matches(isDisplayed()));\n-        onView(withText(Integer.toString(randomInteger))).check(matches(isDisplayed()));\n+        // Check StringWidgets with answers\n+        onView(withText(\"25\")).perform(nestedScrollTo()).check(matches(isDisplayed()));\n+        onView(withText(\"46.74\")).perform(nestedScrollTo()).check(matches(isDisplayed()));\n+        onView(withText(\"sampleAnswer\")).perform(nestedScrollTo()).check(matches(isDisplayed()));\n+\n+        // Check ImageWidget with answer\n+        onView(withTagValue(is(\"ImageView\"))).perform(nestedScrollTo()).check(matches(isDisplayed()));\n+        onView(withId(R.id.capture_image)).check(doesNotExist());\n+        onView(withId(R.id.choose_image)).check(doesNotExist());\n+\n+        // Check AudioWidget with answer\n+        onView(withId(R.id.audio_controller)).perform(nestedScrollTo()).check(matches(isDisplayed()));\n+\n+        // Check VideoWidget with answer\n+        onView(withId(R.id.play_video)).perform(nestedScrollTo()).check(matches(isDisplayed()));\n+        onView(withId(R.id.play_video)).check(matches(isEnabled()));\n+\n+        // Check ArbitraryFileWidget with answer\n+        onView(withTagValue(is(\"ArbitraryFileWidgetAnswer\"))).perform(nestedScrollTo()).check(matches(isDisplayed()));\n+    }\n+\n+    @SuppressWarnings(\"PMD.DoNotHardCodeSDCard\")\n+    private Uri createTempFile(String name, String extension) throws IOException {\n+        File file = File.createTempFile(name, extension, new File(\"/sdcard\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e92e09075f46f202c0763915c9bb83273ab966"}, "originalPosition": 109}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5OTYwMDIx", "url": "https://github.com/getodk/collect/pull/4188#pullrequestreview-519960021", "createdAt": "2020-10-29T18:29:27Z", "commit": {"oid": "70e92e09075f46f202c0763915c9bb83273ab966"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODoyOToyN1rOHqpQ6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxODo0NjowMlrOHqp2WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ3ODMxNA==", "bodyText": "See my comments on the test -- I don't think this matches the spec we had written up. It looks like it has the external app set both the text and a URI for each clip data item. The way we had written it up was to for ClipData, only set the URI and use an intent extra to do the match between Collect field name and clipdata URI. You should be able to read the extra to match with the Collect field (same as non-binary types) and then use the extra's value to get the file. I don't think you need to walk the ClipData at all, it's just there to provide permissions for when you resolve the content.", "url": "https://github.com/getodk/collect/pull/4188#discussion_r514478314", "createdAt": "2020-10-29T18:29:27Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/ODKView.java", "diffHunk": "@@ -479,40 +487,71 @@ public void scrollTo(@Nullable QuestionWidget qw) {\n     /**\n      * Saves answers for the widgets in this view. Called when the widgets are in an intent group.\n      */\n-    public void setDataForFields(Bundle bundle) throws JavaRosaException {\n-        if (bundle == null) {\n+    public void setDataForFields(Bundle bundle, ClipData clipData) throws JavaRosaException {\n+        FormController formController = Collect.getInstance().getFormController();\n+        if (formController == null) {\n             return;\n         }\n-        FormController formController = Collect.getInstance().getFormController();\n-        Set<String> keys = bundle.keySet();\n-        for (String key : keys) {\n-            for (QuestionWidget questionWidget : widgets) {\n-                FormEntryPrompt prompt = questionWidget.getFormEntryPrompt();\n-                TreeReference treeReference =\n-                        (TreeReference) prompt.getFormElement().getBind().getReference();\n-\n-                if (treeReference.getNameLast().equals(key)) {\n-                    switch (prompt.getDataType()) {\n-                        case Constants.DATATYPE_TEXT:\n-                            formController.saveAnswer(prompt.getIndex(),\n-                                    ExternalAppsUtils.asStringData(bundle.get(key)));\n-                            break;\n-                        case Constants.DATATYPE_INTEGER:\n-                            formController.saveAnswer(prompt.getIndex(),\n-                                    ExternalAppsUtils.asIntegerData(bundle.get(key)));\n-                            break;\n-                        case Constants.DATATYPE_DECIMAL:\n-                            formController.saveAnswer(prompt.getIndex(),\n-                                    ExternalAppsUtils.asDecimalData(bundle.get(key)));\n-                            break;\n-                        default:\n-                            throw new RuntimeException(\n-                                    getContext().getString(R.string.ext_assign_value_error,\n-                                            treeReference.toString(false)));\n+\n+        if (bundle != null) {\n+            Set<String> keys = bundle.keySet();\n+            for (String key : keys) {\n+                for (QuestionWidget questionWidget : widgets) {\n+                    FormEntryPrompt prompt = questionWidget.getFormEntryPrompt();\n+                    TreeReference treeReference =\n+                            (TreeReference) prompt.getFormElement().getBind().getReference();\n+\n+                    if (treeReference.getNameLast().equals(key)) {\n+                        switch (prompt.getDataType()) {\n+                            case Constants.DATATYPE_TEXT:\n+                                formController.saveAnswer(prompt.getIndex(),\n+                                        ExternalAppsUtils.asStringData(bundle.get(key)));\n+                                break;\n+                            case Constants.DATATYPE_INTEGER:\n+                                formController.saveAnswer(prompt.getIndex(),\n+                                        ExternalAppsUtils.asIntegerData(bundle.get(key)));\n+                                break;\n+                            case Constants.DATATYPE_DECIMAL:\n+                                formController.saveAnswer(prompt.getIndex(),\n+                                        ExternalAppsUtils.asDecimalData(bundle.get(key)));\n+                                break;\n+                            default:\n+                                throw new RuntimeException(\n+                                        getContext().getString(R.string.ext_assign_value_error,\n+                                                treeReference.toString(false)));\n+                        }\n+\n+                        ((StringWidget) questionWidget).setDisplayValueFromModel();\n+                        break;\n                     }\n+                }\n+            }\n+        }\n+\n+        if (clipData != null) {\n+            for (int i = 0; i < clipData.getItemCount(); i++) {\n+                CharSequence key = clipData.getItemAt(i).getText();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e92e09075f46f202c0763915c9bb83273ab966"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDQ4Nzg5Nw==", "bodyText": "According to our spec, an external app is supposed to:\n\nAdd content URIs for the files to attach to the form to the return intent\u2019s ClipData\n\n\nAdd an intent extra with desired form field name and set its value to the content URI for the corresponding file.", "url": "https://github.com/getodk/collect/pull/4188#discussion_r514487897", "createdAt": "2020-10-29T18:46:02Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/feature/formentry/IntentGroupTest.java", "diffHunk": "@@ -80,17 +92,67 @@ public void appMissingErrorText_ShouldComeFromSpecialFormText() {\n     }\n \n     @Test\n-    public void externalApp_ShouldPopulateFields() {\n+    public void externalApp_ShouldPopulateFields() throws IOException {\n+        // Check ImageWidget without answer\n+        onView(withTagValue(is(\"ImageView\"))).check(doesNotExist());\n+        onView(withId(R.id.capture_image)).check(doesNotExist());\n+        onView(withId(R.id.choose_image)).check(doesNotExist());\n+\n+        // Check AudioWidget without answer\n+        onView(withId(R.id.audio_controller)).check(matches(not(isDisplayed())));\n+\n+        // Check VideoWidget without answer\n+        onView(withId(R.id.play_video)).check(matches(isDisplayed()));\n+        onView(withId(R.id.play_video)).check(matches(not(isEnabled())));\n+\n+        // Check ArbitraryFileWidget without answer\n+        onView(withTagValue(is(\"ArbitraryFileWidgetAnswer\"))).check(matches(not(isDisplayed())));\n+\n         Intent resultIntent = new Intent();\n-        resultIntent.putExtra(\"sometext\", \"Here is a text value\");\n \n-        int randomInteger = (new Random()).nextInt(255);\n-        resultIntent.putExtra(\"someinteger\", randomInteger);\n+        resultIntent.putExtra(\"questionInteger\", \"25\");\n+        resultIntent.putExtra(\"questionDecimal\", \"46.74\");\n+        resultIntent.putExtra(\"questionText\", \"sampleAnswer\");\n \n+        ClipData clipData = ClipData.newRawUri(null, null);\n+        clipData.addItem(new ClipData.Item(\"questionImage\", null, createTempFile(\"famous\", \"jpg\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70e92e09075f46f202c0763915c9bb83273ab966"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMTY2MjQy", "url": "https://github.com/getodk/collect/pull/4188#pullrequestreview-520166242", "createdAt": "2020-10-29T23:53:52Z", "commit": {"oid": "3dc61b4e2e7b4d4635fb40479fb9bb67119d726d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMzo1Mzo1M1rOHqyqBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQyMzo1Mzo1M1rOHqyqBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDYzMjE5Nw==", "bodyText": "Will this implicitly clear any existing value?\nI think there's one more error case missing -- if the type of the file passed from the external app doesn't match the question type. For example, a .mp3 file shouldn't be allowed for an image widget.", "url": "https://github.com/getodk/collect/pull/4188#discussion_r514632197", "createdAt": "2020-10-29T23:53:53Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/ODKView.java", "diffHunk": "@@ -480,39 +486,58 @@ public void scrollTo(@Nullable QuestionWidget qw) {\n      * Saves answers for the widgets in this view. Called when the widgets are in an intent group.\n      */\n     public void setDataForFields(Bundle bundle) throws JavaRosaException {\n-        if (bundle == null) {\n+        FormController formController = Collect.getInstance().getFormController();\n+        if (formController == null) {\n             return;\n         }\n-        FormController formController = Collect.getInstance().getFormController();\n-        Set<String> keys = bundle.keySet();\n-        for (String key : keys) {\n-            for (QuestionWidget questionWidget : widgets) {\n-                FormEntryPrompt prompt = questionWidget.getFormEntryPrompt();\n-                TreeReference treeReference =\n-                        (TreeReference) prompt.getFormElement().getBind().getReference();\n-\n-                if (treeReference.getNameLast().equals(key)) {\n-                    switch (prompt.getDataType()) {\n-                        case Constants.DATATYPE_TEXT:\n-                            formController.saveAnswer(prompt.getIndex(),\n-                                    ExternalAppsUtils.asStringData(bundle.get(key)));\n-                            break;\n-                        case Constants.DATATYPE_INTEGER:\n-                            formController.saveAnswer(prompt.getIndex(),\n-                                    ExternalAppsUtils.asIntegerData(bundle.get(key)));\n-                            break;\n-                        case Constants.DATATYPE_DECIMAL:\n-                            formController.saveAnswer(prompt.getIndex(),\n-                                    ExternalAppsUtils.asDecimalData(bundle.get(key)));\n-                            break;\n-                        default:\n-                            throw new RuntimeException(\n-                                    getContext().getString(R.string.ext_assign_value_error,\n-                                            treeReference.toString(false)));\n-                    }\n \n-                    ((StringWidget) questionWidget).setDisplayValueFromModel();\n-                    break;\n+        if (bundle != null) {\n+            Set<String> keys = bundle.keySet();\n+            for (String key : keys) {\n+                for (QuestionWidget questionWidget : widgets) {\n+                    FormEntryPrompt prompt = questionWidget.getFormEntryPrompt();\n+                    TreeReference treeReference =\n+                            (TreeReference) prompt.getFormElement().getBind().getReference();\n+\n+                    if (treeReference.getNameLast().equals(key)) {\n+                        switch (prompt.getDataType()) {\n+                            case Constants.DATATYPE_TEXT:\n+                                formController.saveAnswer(prompt.getIndex(),\n+                                        ExternalAppsUtils.asStringData(bundle.get(key)));\n+                                ((StringWidget) questionWidget).setDisplayValueFromModel();\n+                                break;\n+                            case Constants.DATATYPE_INTEGER:\n+                                formController.saveAnswer(prompt.getIndex(),\n+                                        ExternalAppsUtils.asIntegerData(bundle.get(key)));\n+                                ((StringWidget) questionWidget).setDisplayValueFromModel();\n+                                break;\n+                            case Constants.DATATYPE_DECIMAL:\n+                                formController.saveAnswer(prompt.getIndex(),\n+                                        ExternalAppsUtils.asDecimalData(bundle.get(key)));\n+                                ((StringWidget) questionWidget).setDisplayValueFromModel();\n+                                break;\n+                            case Constants.DATATYPE_BINARY:\n+                                try {\n+                                    Uri uri = (Uri) bundle.get(key);\n+                                    try {\n+                                        File destFile = FileUtils.createDestinationMediaFile(formController.getInstanceFile().getParent(), ContentResolverHelper.getFileExtensionFromUri(getContext(), uri));\n+                                        //TODO might be better to use QuestionMediaManager in the future\n+                                        FileUtils.saveAnswerFileFromUri(uri, destFile, getContext());\n+                                        ((WidgetDataReceiver) questionWidget).setData(destFile);\n+                                    } catch (SecurityException e) {\n+                                        Timber.w(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dc61b4e2e7b4d4635fb40479fb9bb67119d726d"}, "originalPosition": 107}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODUyNTQx", "url": "https://github.com/getodk/collect/pull/4188#pullrequestreview-520852541", "createdAt": "2020-10-30T16:49:59Z", "commit": {"oid": "4d47c2e42fbdb8f327177f58e1a2f972520f9c4b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53d0d807f8a401ff7c2ea79d5181ccbe3bd1515b", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/53d0d807f8a401ff7c2ea79d5181ccbe3bd1515b", "committedDate": "2020-11-04T07:24:11Z", "message": "Pass readOnlyOverride to QuestionDetails to avoid passing that parameter to every widget separately"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12506d3a71c2871aa5d60677a18f35ceead9698f", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/12506d3a71c2871aa5d60677a18f35ceead9698f", "committedDate": "2020-11-04T07:24:11Z", "message": "Removed redundant readOnlyOverride parameter from DecimalWidget"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3224445a6f51c3d2c142ffc894b60363743c0802", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/3224445a6f51c3d2c142ffc894b60363743c0802", "committedDate": "2020-11-04T07:24:11Z", "message": "Removed redundant readOnlyOverride parameter from IntegerWidget"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3736ef19a60629e97bf4d561719cfac97b4801cd", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/3736ef19a60629e97bf4d561719cfac97b4801cd", "committedDate": "2020-11-04T07:24:11Z", "message": "Removed redundant readOnlyOverride parameter from StringNumberWidget"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b5d238be377297c7b999e0712f1242312262ce5", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/9b5d238be377297c7b999e0712f1242312262ce5", "committedDate": "2020-11-04T07:24:11Z", "message": "Removed redundant readOnlyOverride parameter from StringWidget"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11caae6b744a9ad18255a0fb429bb31938301718", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/11caae6b744a9ad18255a0fb429bb31938301718", "committedDate": "2020-11-04T07:24:11Z", "message": "Code improvements in StringWidget"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01b201d3cc5cec1175dce3df5a2fe71183b19810", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/01b201d3cc5cec1175dce3df5a2fe71183b19810", "committedDate": "2020-11-04T07:24:11Z", "message": "Added tests for readOnlyOverride in string widgets"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f10dbd32ccbd404a1f7bfc9d8554dc04f3f233be", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/f10dbd32ccbd404a1f7bfc9d8554dc04f3f233be", "committedDate": "2020-11-04T07:24:11Z", "message": "Fixed answer text in ExString widgets and added tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71dc8ba41e4807f757ba6e34f0eccf11e4e627e2", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/71dc8ba41e4807f757ba6e34f0eccf11e4e627e2", "committedDate": "2020-11-04T07:24:11Z", "message": "ImageWidget should be displayed in intent groups like it was readOnly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9050070a875a289287cefb0a5a897f21c25efa6b", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/9050070a875a289287cefb0a5a897f21c25efa6b", "committedDate": "2020-11-04T07:24:11Z", "message": "SignatureWidget should be displayed in intent groups like it was readOnly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a38a608ce1600fbc184119fd3579249d77e70557", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/a38a608ce1600fbc184119fd3579249d77e70557", "committedDate": "2020-11-04T07:24:11Z", "message": "DrawWidget should be displayed in intent groups like it was readOnly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6011947aa4cfeb69ba406b6208ccc3b320d671e0", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/6011947aa4cfeb69ba406b6208ccc3b320d671e0", "committedDate": "2020-11-04T07:24:11Z", "message": "AnnotateWidget should be displayed in intent groups like it was readOnly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f645b3199be1e5c6ee8530385015779ea86134f", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/2f645b3199be1e5c6ee8530385015779ea86134f", "committedDate": "2020-11-04T07:24:11Z", "message": "VideoWidget should be displayed in intent groups like it was readOnly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ebd45ab729b1473d506ed54684e659b4afc10cc", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/8ebd45ab729b1473d506ed54684e659b4afc10cc", "committedDate": "2020-11-04T07:24:11Z", "message": "ArbitraryFileWidget should be displayed in intent groups like it was readOnly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c598a20a4b8523beb96e7ba70d9bc69d9855d8aa", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/c598a20a4b8523beb96e7ba70d9bc69d9855d8aa", "committedDate": "2020-11-04T07:24:11Z", "message": "AudioWidget should be displayed in intent groups like it was readOnly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23832e7a3db1692580351958a71a1b63eb7e3a75", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/23832e7a3db1692580351958a71a1b63eb7e3a75", "committedDate": "2020-11-04T07:24:11Z", "message": "Fixed Play Video button in VideoWidget readOnly #3653"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad1af29dd6cc6082fa22776512225defa2f66f8c", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/ad1af29dd6cc6082fa22776512225defa2f66f8c", "committedDate": "2020-11-04T07:24:11Z", "message": "Handle receiving files from extrenal apps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "679464ebd53eb30a5f63caed650a591c928b439f", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/679464ebd53eb30a5f63caed650a591c928b439f", "committedDate": "2020-11-04T07:24:11Z", "message": "Added tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3e12da2c903871b5f2a29c57b510560eab81cf0", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/f3e12da2c903871b5f2a29c57b510560eab81cf0", "committedDate": "2020-11-04T07:24:11Z", "message": "Catch SecurityException when receiving uris"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce0f65667491bad121da9eb83a97cf9791ecfbb4", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/ce0f65667491bad121da9eb83a97cf9791ecfbb4", "committedDate": "2020-11-04T07:24:11Z", "message": "Improved tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0be7b76be1b8313967b68ce2c05aa6e4374feadf", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/0be7b76be1b8313967b68ce2c05aa6e4374feadf", "committedDate": "2020-11-04T07:24:11Z", "message": "Naming improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf455d711eba941af42004336856fee48de440e6", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/bf455d711eba941af42004336856fee48de440e6", "committedDate": "2020-11-04T07:24:11Z", "message": "Added a comment to remember about improving the code in the future"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5fc1d2ec1c412fdcc0bd5521beca62835c097335", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/5fc1d2ec1c412fdcc0bd5521beca62835c097335", "committedDate": "2020-11-04T07:24:11Z", "message": "Fixed tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e82a1a1f599bbe0055be67c6b580eb1687c44d64", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/e82a1a1f599bbe0055be67c6b580eb1687c44d64", "committedDate": "2020-11-04T07:24:11Z", "message": "Improved receiving binary fiels from external apps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60d4bf2dfd3d77c12bfa51bc130c64b2910cd0b1", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/60d4bf2dfd3d77c12bfa51bc130c64b2910cd0b1", "committedDate": "2020-11-04T07:24:11Z", "message": "Updated tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0669d945b956f5995881d8e52a94bc5eba4327f0", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/0669d945b956f5995881d8e52a94bc5eba4327f0", "committedDate": "2020-11-04T07:24:11Z", "message": "Added changes and tests to assert nothing wrong happens when null values are returned"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45a6410ef26f899c29f756ae7cd8d73192c7cfd2", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/45a6410ef26f899c29f756ae7cd8d73192c7cfd2", "committedDate": "2020-11-04T07:24:11Z", "message": "Improved tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b42d8dfb0678fff2ac00b68a5cfdc158181cb55f", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/b42d8dfb0678fff2ac00b68a5cfdc158181cb55f", "committedDate": "2020-11-04T07:24:11Z", "message": "Catch every exception and error that might happen during copying files"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d63f0153910a13778250e7f37aeb0fe18c67555", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/6d63f0153910a13778250e7f37aeb0fe18c67555", "committedDate": "2020-11-04T07:24:11Z", "message": "Added more tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d47c2e42fbdb8f327177f58e1a2f972520f9c4b", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/4d47c2e42fbdb8f327177f58e1a2f972520f9c4b", "committedDate": "2020-10-30T12:44:13Z", "message": "Added more tests"}, "afterCommit": {"oid": "6d63f0153910a13778250e7f37aeb0fe18c67555", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/6d63f0153910a13778250e7f37aeb0fe18c67555", "committedDate": "2020-11-04T07:24:11Z", "message": "Added more tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2441, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}