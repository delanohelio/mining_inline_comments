{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNzQzOTA2", "number": 4107, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTo1ODo0NVrOEmAr1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDowMjowMlrOEmAw7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjkyNTY2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/database/DatabaseMediaFileRepositoryTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwOTo1ODo0NVrOHVyxjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDo1NToxNFrOHV0lqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxNDAyOQ==", "bodyText": "I think we could cut out a lot of the mocking here by having formsDao.getFormMediaPath just return a file path to something that doesn't exist.  You could create a temp dir (using File.createTempDir) and then return a path of a directory in there (that you don't create). Then we wouldn't need to mock a File or FileUtils and listFiles might even work as just a static helper rather than needing to pass in the util as a dependency. What do you think?", "url": "https://github.com/getodk/collect/pull/4107#discussion_r492614029", "createdAt": "2020-09-22T09:58:45Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/database/DatabaseMediaFileRepositoryTest.java", "diffHunk": "@@ -15,6 +18,32 @@ public void whenThereIsNoFormForgivenFormIdAndVersion_shouldGetAllMethodReturnEm\n         FormsDao formsDao = mock(FormsDao.class);\n         when(formsDao.getFormMediaPath(\"1\", \"1\")).thenReturn(null);\n \n-        assertThat(new DatabaseMediaFileRepository(formsDao).getAll(\"1\", \"1\").size(), is(0));\n+        assertThat(new DatabaseMediaFileRepository(formsDao, new FileUtil()).getAll(\"1\", \"1\").size(), is(0));\n+    }\n+\n+    @Test\n+    public void whenMediaFolderFileDoesNotExist_shouldGetAllMethodReturnEmptyArray() {\n+        FormsDao formsDao = mock(FormsDao.class);\n+        FileUtil fileUtil = mock(FileUtil.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab848d89f2b6b5947c4fed60ea5b2f18dbb7d3f4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzODc5NA==", "bodyText": "But then we would need to move this test to android tests you you want to check if a file really exists or not. Would that improve anything?", "url": "https://github.com/getodk/collect/pull/4107#discussion_r492638794", "createdAt": "2020-09-22T10:46:37Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/test/java/org/odk/collect/android/database/DatabaseMediaFileRepositoryTest.java", "diffHunk": "@@ -15,6 +18,32 @@ public void whenThereIsNoFormForgivenFormIdAndVersion_shouldGetAllMethodReturnEm\n         FormsDao formsDao = mock(FormsDao.class);\n         when(formsDao.getFormMediaPath(\"1\", \"1\")).thenReturn(null);\n \n-        assertThat(new DatabaseMediaFileRepository(formsDao).getAll(\"1\", \"1\").size(), is(0));\n+        assertThat(new DatabaseMediaFileRepository(formsDao, new FileUtil()).getAll(\"1\", \"1\").size(), is(0));\n+    }\n+\n+    @Test\n+    public void whenMediaFolderFileDoesNotExist_shouldGetAllMethodReturnEmptyArray() {\n+        FormsDao formsDao = mock(FormsDao.class);\n+        FileUtil fileUtil = mock(FileUtil.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxNDAyOQ=="}, "originalCommit": {"oid": "ab848d89f2b6b5947c4fed60ea5b2f18dbb7d3f4"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY0Mzc1NA==", "bodyText": "It should work in normal test as we're just using File rather than any Android specific code right? I think if you just have FormsDao#getFormMediaPath return \"/samplePath/\" (like you're doing) then the as that path doesn't exist you should end up creating the environment you need to check that getAll returns an empty list.", "url": "https://github.com/getodk/collect/pull/4107#discussion_r492643754", "createdAt": "2020-09-22T10:55:14Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/database/DatabaseMediaFileRepositoryTest.java", "diffHunk": "@@ -15,6 +18,32 @@ public void whenThereIsNoFormForgivenFormIdAndVersion_shouldGetAllMethodReturnEm\n         FormsDao formsDao = mock(FormsDao.class);\n         when(formsDao.getFormMediaPath(\"1\", \"1\")).thenReturn(null);\n \n-        assertThat(new DatabaseMediaFileRepository(formsDao).getAll(\"1\", \"1\").size(), is(0));\n+        assertThat(new DatabaseMediaFileRepository(formsDao, new FileUtil()).getAll(\"1\", \"1\").size(), is(0));\n+    }\n+\n+    @Test\n+    public void whenMediaFolderFileDoesNotExist_shouldGetAllMethodReturnEmptyArray() {\n+        FormsDao formsDao = mock(FormsDao.class);\n+        FileUtil fileUtil = mock(FileUtil.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxNDAyOQ=="}, "originalCommit": {"oid": "ab848d89f2b6b5947c4fed60ea5b2f18dbb7d3f4"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjkzODcwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/test/java/org/odk/collect/android/database/DatabaseMediaFileRepositoryTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDowMjowMlrOHVy5Cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMDo1NjoyNVrOHV0oBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxNTk0Ng==", "bodyText": "I could be missing something but I don't understand how this case can happen? FileUtil#getFileAtPath looks like it couldn't return null.", "url": "https://github.com/getodk/collect/pull/4107#discussion_r492615946", "createdAt": "2020-09-22T10:02:02Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/database/DatabaseMediaFileRepositoryTest.java", "diffHunk": "@@ -15,6 +18,32 @@ public void whenThereIsNoFormForgivenFormIdAndVersion_shouldGetAllMethodReturnEm\n         FormsDao formsDao = mock(FormsDao.class);\n         when(formsDao.getFormMediaPath(\"1\", \"1\")).thenReturn(null);\n \n-        assertThat(new DatabaseMediaFileRepository(formsDao).getAll(\"1\", \"1\").size(), is(0));\n+        assertThat(new DatabaseMediaFileRepository(formsDao, new FileUtil()).getAll(\"1\", \"1\").size(), is(0));\n+    }\n+\n+    @Test\n+    public void whenMediaFolderFileDoesNotExist_shouldGetAllMethodReturnEmptyArray() {\n+        FormsDao formsDao = mock(FormsDao.class);\n+        FileUtil fileUtil = mock(FileUtil.class);\n+        File file = mock(File.class);\n+        String formMediaPath = \"/samplePath/\";\n+\n+        when(formsDao.getFormMediaPath(\"1\", \"1\")).thenReturn(formMediaPath);\n+        when(fileUtil.getFileAtPath(formMediaPath)).thenReturn(file);\n+        when(file.exists()).thenReturn(false);\n+\n+        assertThat(new DatabaseMediaFileRepository(formsDao, new FileUtil()).getAll(\"1\", \"1\").size(), is(0));\n+    }\n+\n+    @Test\n+    public void whenMediaFolderFileIsNull_shouldGetAllMethodReturnEmptyArray() {\n+        FormsDao formsDao = mock(FormsDao.class);\n+        FileUtil fileUtil = mock(FileUtil.class);\n+        String formMediaPath = \"/samplePath/\";\n+\n+        when(formsDao.getFormMediaPath(\"1\", \"1\")).thenReturn(formMediaPath);\n+        when(fileUtil.getFileAtPath(formMediaPath)).thenReturn(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab848d89f2b6b5947c4fed60ea5b2f18dbb7d3f4"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYzNzMyNg==", "bodyText": "Theoretically you are right but after fixing bugs like #4102 I'm trying to check more than usually. Is that bad? Those are just tests so I think it's ok to tests more sometimes.", "url": "https://github.com/getodk/collect/pull/4107#discussion_r492637326", "createdAt": "2020-09-22T10:43:31Z", "author": {"login": "grzesiek2010"}, "path": "collect_app/src/test/java/org/odk/collect/android/database/DatabaseMediaFileRepositoryTest.java", "diffHunk": "@@ -15,6 +18,32 @@ public void whenThereIsNoFormForgivenFormIdAndVersion_shouldGetAllMethodReturnEm\n         FormsDao formsDao = mock(FormsDao.class);\n         when(formsDao.getFormMediaPath(\"1\", \"1\")).thenReturn(null);\n \n-        assertThat(new DatabaseMediaFileRepository(formsDao).getAll(\"1\", \"1\").size(), is(0));\n+        assertThat(new DatabaseMediaFileRepository(formsDao, new FileUtil()).getAll(\"1\", \"1\").size(), is(0));\n+    }\n+\n+    @Test\n+    public void whenMediaFolderFileDoesNotExist_shouldGetAllMethodReturnEmptyArray() {\n+        FormsDao formsDao = mock(FormsDao.class);\n+        FileUtil fileUtil = mock(FileUtil.class);\n+        File file = mock(File.class);\n+        String formMediaPath = \"/samplePath/\";\n+\n+        when(formsDao.getFormMediaPath(\"1\", \"1\")).thenReturn(formMediaPath);\n+        when(fileUtil.getFileAtPath(formMediaPath)).thenReturn(file);\n+        when(file.exists()).thenReturn(false);\n+\n+        assertThat(new DatabaseMediaFileRepository(formsDao, new FileUtil()).getAll(\"1\", \"1\").size(), is(0));\n+    }\n+\n+    @Test\n+    public void whenMediaFolderFileIsNull_shouldGetAllMethodReturnEmptyArray() {\n+        FormsDao formsDao = mock(FormsDao.class);\n+        FileUtil fileUtil = mock(FileUtil.class);\n+        String formMediaPath = \"/samplePath/\";\n+\n+        when(formsDao.getFormMediaPath(\"1\", \"1\")).thenReturn(formMediaPath);\n+        when(fileUtil.getFileAtPath(formMediaPath)).thenReturn(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxNTk0Ng=="}, "originalCommit": {"oid": "ab848d89f2b6b5947c4fed60ea5b2f18dbb7d3f4"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY0NDM1Nw==", "bodyText": "Yeah true. I guess I'm thinking about if we've not mocked FileUtil as we have we can't guarantee that the method won't return null from this test.", "url": "https://github.com/getodk/collect/pull/4107#discussion_r492644357", "createdAt": "2020-09-22T10:56:25Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/database/DatabaseMediaFileRepositoryTest.java", "diffHunk": "@@ -15,6 +18,32 @@ public void whenThereIsNoFormForgivenFormIdAndVersion_shouldGetAllMethodReturnEm\n         FormsDao formsDao = mock(FormsDao.class);\n         when(formsDao.getFormMediaPath(\"1\", \"1\")).thenReturn(null);\n \n-        assertThat(new DatabaseMediaFileRepository(formsDao).getAll(\"1\", \"1\").size(), is(0));\n+        assertThat(new DatabaseMediaFileRepository(formsDao, new FileUtil()).getAll(\"1\", \"1\").size(), is(0));\n+    }\n+\n+    @Test\n+    public void whenMediaFolderFileDoesNotExist_shouldGetAllMethodReturnEmptyArray() {\n+        FormsDao formsDao = mock(FormsDao.class);\n+        FileUtil fileUtil = mock(FileUtil.class);\n+        File file = mock(File.class);\n+        String formMediaPath = \"/samplePath/\";\n+\n+        when(formsDao.getFormMediaPath(\"1\", \"1\")).thenReturn(formMediaPath);\n+        when(fileUtil.getFileAtPath(formMediaPath)).thenReturn(file);\n+        when(file.exists()).thenReturn(false);\n+\n+        assertThat(new DatabaseMediaFileRepository(formsDao, new FileUtil()).getAll(\"1\", \"1\").size(), is(0));\n+    }\n+\n+    @Test\n+    public void whenMediaFolderFileIsNull_shouldGetAllMethodReturnEmptyArray() {\n+        FormsDao formsDao = mock(FormsDao.class);\n+        FileUtil fileUtil = mock(FileUtil.class);\n+        String formMediaPath = \"/samplePath/\";\n+\n+        when(formsDao.getFormMediaPath(\"1\", \"1\")).thenReturn(formMediaPath);\n+        when(fileUtil.getFileAtPath(formMediaPath)).thenReturn(null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjYxNTk0Ng=="}, "originalCommit": {"oid": "ab848d89f2b6b5947c4fed60ea5b2f18dbb7d3f4"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3108, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}