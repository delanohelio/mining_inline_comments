{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MDI5NTc5", "number": 3824, "title": "Used Dialog Fragment to retain Change Admin Password Dialog on Orientation Change", "bodyText": "Work towards #3612\n\nWhat has been done to verify that this works as intended?\nThis PR contains the fix for Change Admin Password Dialog. I tested it.\nWhy is this the best possible solution? Were any other approaches considered?\nI shifted the creating of Alert Dialog to Dialog Fragment and wrote tests for the same.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nNo regression risks.\nDo we need any specific form for testing your changes? If so, please attach one.\nNo.\nDoes this change require updates to documentation? If so, please file an issue here and include the link below.\nNo.\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-05-12T23:36:14Z", "url": "https://github.com/getodk/collect/pull/3824", "merged": true, "mergeCommit": {"oid": "99bcb983c7555815cc2a0d2999e5fa28d3ed38fd"}, "closed": true, "closedAt": "2020-06-02T21:54:05Z", "author": {"login": "SaumiaSinghal"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfFvjYAH2gAyNDE3MDI5NTc5OjgyMWVlYTM0YWRjZjAyZWRlM2Q3YWNmYmEyMjFjNjA2ZWU3MDVjYmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnDhIfAFqTQyMjAyOTEyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "821eea34adcf02ede3d7acfba221c606ee705cba", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/821eea34adcf02ede3d7acfba221c606ee705cba", "committedDate": "2020-05-07T23:19:12Z", "message": "defined tests for dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e7a94035b7f579e2696d96f8e8a5ac60ba2cc12", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/7e7a94035b7f579e2696d96f8e8a5ac60ba2cc12", "committedDate": "2020-05-12T04:23:43Z", "message": "updated tests for dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc3b5a61ee4da698afd3e2eccfb71e1a50d90672", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/fc3b5a61ee4da698afd3e2eccfb71e1a50d90672", "committedDate": "2020-05-12T23:29:27Z", "message": "created change admin password dialog fragment and code refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9b35f1a07bd9e352924634c4bd6c5fe61c555b1c", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/9b35f1a07bd9e352924634c4bd6c5fe61c555b1c", "committedDate": "2020-05-12T23:38:44Z", "message": "Merge branch 'master' into change_admin_password_dialog_fragment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwOTkzNzYx", "url": "https://github.com/getodk/collect/pull/3824#pullrequestreview-410993761", "createdAt": "2020-05-13T14:39:25Z", "commit": {"oid": "9b35f1a07bd9e352924634c4bd6c5fe61c555b1c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozOToyNVrOGU03iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozOToyNVrOGU03iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ5MDg4OA==", "bodyText": "Hi @seadowg! I'm not sure if the above two tests are necessary.", "url": "https://github.com/getodk/collect/pull/3824#discussion_r424490888", "createdAt": "2020-05-13T14:39:25Z", "author": {"login": "SaumiaSinghal"}, "path": "collect_app/src/test/java/org/odk/collect/android/preferences/ChangeAdminPasswordDialogTest.java", "diffHunk": "@@ -0,0 +1,166 @@\n+package org.odk.collect.android.preferences;\n+\n+import android.content.DialogInterface;\n+import android.content.res.Configuration;\n+import android.text.InputType;\n+import android.widget.CheckBox;\n+import android.widget.EditText;\n+\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.FragmentActivity;\n+import androidx.fragment.app.FragmentManager;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.support.RobolectricHelpers;\n+import org.robolectric.RobolectricTestRunner;\n+import org.robolectric.RuntimeEnvironment;\n+import org.robolectric.android.controller.ActivityController;\n+import org.robolectric.shadows.ShadowDialog;\n+\n+import static android.view.View.VISIBLE;\n+import static junit.framework.TestCase.assertTrue;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.junit.Assert.assertFalse;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.robolectric.Shadows.shadowOf;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class ChangeAdminPasswordDialogTest {\n+\n+    private ActivityController<FragmentActivity> activity;\n+    private FragmentManager fragmentManager;\n+    private ChangeAdminPasswordDialog dialogFragment;\n+    private ChangeAdminPasswordDialog.ChangePasswordDialogCallback callback;\n+\n+    @Before\n+    public void setup() {\n+        activity = RobolectricHelpers.buildThemedActivity(FragmentActivity.class);\n+        activity.setup();\n+\n+        fragmentManager = activity.get().getSupportFragmentManager();\n+        dialogFragment = new ChangeAdminPasswordDialog();\n+\n+        callback = mock(ChangeAdminPasswordDialog.ChangePasswordDialogCallback.class);\n+        dialogFragment.callback = callback;\n+    }\n+\n+    @Test\n+    public void dialogIsCancellable() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        assertThat(shadowOf(dialogFragment.getDialog()).isCancelable(), equalTo(true));\n+    }\n+\n+    @Test\n+    public void shouldShowCorrectButtons() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_POSITIVE).getVisibility(), equalTo(VISIBLE));\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_POSITIVE).getText(),\n+                equalTo(activity.get().getString(R.string.ok)));\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_NEGATIVE).getVisibility(), equalTo(VISIBLE));\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_NEGATIVE).getText(),\n+                equalTo(activity.get().getString(R.string.cancel)));\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b35f1a07bd9e352924634c4bd6c5fe61c555b1c"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NTkyMDU1", "url": "https://github.com/getodk/collect/pull/3824#pullrequestreview-417592055", "createdAt": "2020-05-25T09:41:42Z", "commit": {"oid": "9b35f1a07bd9e352924634c4bd6c5fe61c555b1c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTo0MTo0MlrOGZ7XcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNVQwOTo0ODo0M1rOGZ7k_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0MDI0MQ==", "bodyText": "Is there any reason this logic couldn't happen in the fragment? Then we can avoid having to deal with having a listener. We can also then test this functionality in ChngeAdminPasswordDialogFragmentTest.", "url": "https://github.com/getodk/collect/pull/3824#discussion_r429840241", "createdAt": "2020-05-25T09:41:42Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/preferences/AdminPreferencesActivity.java", "diffHunk": "@@ -101,4 +104,17 @@ public void preventOtherWaysOfEditingForm() {\n     public void onDialogClosed() {\n         startActivityAndCloseAllOthers(this, MainMenuActivity.class);\n     }\n+\n+    @Override\n+    public void onPasswordChanged(String password) {\n+        SharedPreferences.Editor editor = this.getSharedPreferences(ADMIN_PREFERENCES, MODE_PRIVATE).edit();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b35f1a07bd9e352924634c4bd6c5fe61c555b1c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0MTE3OA==", "bodyText": "The first one dialogIsCancellable checks that the back button would works so I think that's good. The second seems like it isn't needed as you  interact with all the elements in the tests below.", "url": "https://github.com/getodk/collect/pull/3824#discussion_r429841178", "createdAt": "2020-05-25T09:43:38Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/preferences/ChangeAdminPasswordDialogTest.java", "diffHunk": "@@ -0,0 +1,166 @@\n+package org.odk.collect.android.preferences;\n+\n+import android.content.DialogInterface;\n+import android.content.res.Configuration;\n+import android.text.InputType;\n+import android.widget.CheckBox;\n+import android.widget.EditText;\n+\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.FragmentActivity;\n+import androidx.fragment.app.FragmentManager;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.support.RobolectricHelpers;\n+import org.robolectric.RobolectricTestRunner;\n+import org.robolectric.RuntimeEnvironment;\n+import org.robolectric.android.controller.ActivityController;\n+import org.robolectric.shadows.ShadowDialog;\n+\n+import static android.view.View.VISIBLE;\n+import static junit.framework.TestCase.assertTrue;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.junit.Assert.assertFalse;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.robolectric.Shadows.shadowOf;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class ChangeAdminPasswordDialogTest {\n+\n+    private ActivityController<FragmentActivity> activity;\n+    private FragmentManager fragmentManager;\n+    private ChangeAdminPasswordDialog dialogFragment;\n+    private ChangeAdminPasswordDialog.ChangePasswordDialogCallback callback;\n+\n+    @Before\n+    public void setup() {\n+        activity = RobolectricHelpers.buildThemedActivity(FragmentActivity.class);\n+        activity.setup();\n+\n+        fragmentManager = activity.get().getSupportFragmentManager();\n+        dialogFragment = new ChangeAdminPasswordDialog();\n+\n+        callback = mock(ChangeAdminPasswordDialog.ChangePasswordDialogCallback.class);\n+        dialogFragment.callback = callback;\n+    }\n+\n+    @Test\n+    public void dialogIsCancellable() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        assertThat(shadowOf(dialogFragment.getDialog()).isCancelable(), equalTo(true));\n+    }\n+\n+    @Test\n+    public void shouldShowCorrectButtons() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_POSITIVE).getVisibility(), equalTo(VISIBLE));\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_POSITIVE).getText(),\n+                equalTo(activity.get().getString(R.string.ok)));\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_NEGATIVE).getVisibility(), equalTo(VISIBLE));\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_NEGATIVE).getText(),\n+                equalTo(activity.get().getString(R.string.cancel)));\n+    }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ5MDg4OA=="}, "originalCommit": {"oid": "9b35f1a07bd9e352924634c4bd6c5fe61c555b1c"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0MzU3OQ==", "bodyText": "This isn't really the correct logic for what happens when an Activity rotates. Normally and Activity will go through a full onPause/onStop/onDestroy run and then go back through the creation steps. As part of this the Fragment will be restored (using the arguments it had before rotation). Instead of trying to deal with all this yourself you should be able to the ActivityScenario like in AdminPasswordDialogFragmentTest#afterRecreating_enteringPassword_andClickingOK_callsOnCorrectAdminPasswordWithAction.", "url": "https://github.com/getodk/collect/pull/3824#discussion_r429843579", "createdAt": "2020-05-25T09:48:30Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/preferences/ChangeAdminPasswordDialogTest.java", "diffHunk": "@@ -0,0 +1,166 @@\n+package org.odk.collect.android.preferences;\n+\n+import android.content.DialogInterface;\n+import android.content.res.Configuration;\n+import android.text.InputType;\n+import android.widget.CheckBox;\n+import android.widget.EditText;\n+\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.FragmentActivity;\n+import androidx.fragment.app.FragmentManager;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.support.RobolectricHelpers;\n+import org.robolectric.RobolectricTestRunner;\n+import org.robolectric.RuntimeEnvironment;\n+import org.robolectric.android.controller.ActivityController;\n+import org.robolectric.shadows.ShadowDialog;\n+\n+import static android.view.View.VISIBLE;\n+import static junit.framework.TestCase.assertTrue;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.junit.Assert.assertFalse;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.robolectric.Shadows.shadowOf;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class ChangeAdminPasswordDialogTest {\n+\n+    private ActivityController<FragmentActivity> activity;\n+    private FragmentManager fragmentManager;\n+    private ChangeAdminPasswordDialog dialogFragment;\n+    private ChangeAdminPasswordDialog.ChangePasswordDialogCallback callback;\n+\n+    @Before\n+    public void setup() {\n+        activity = RobolectricHelpers.buildThemedActivity(FragmentActivity.class);\n+        activity.setup();\n+\n+        fragmentManager = activity.get().getSupportFragmentManager();\n+        dialogFragment = new ChangeAdminPasswordDialog();\n+\n+        callback = mock(ChangeAdminPasswordDialog.ChangePasswordDialogCallback.class);\n+        dialogFragment.callback = callback;\n+    }\n+\n+    @Test\n+    public void dialogIsCancellable() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        assertThat(shadowOf(dialogFragment.getDialog()).isCancelable(), equalTo(true));\n+    }\n+\n+    @Test\n+    public void shouldShowCorrectButtons() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_POSITIVE).getVisibility(), equalTo(VISIBLE));\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_POSITIVE).getText(),\n+                equalTo(activity.get().getString(R.string.ok)));\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_NEGATIVE).getVisibility(), equalTo(VISIBLE));\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_NEGATIVE).getText(),\n+                equalTo(activity.get().getString(R.string.cancel)));\n+    }\n+\n+    @Test\n+    public void clickingOkAfterSettingPassword_callsOnPasswordChanged() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+        EditText passwordEditText = dialog.findViewById(R.id.pwd_field);\n+        passwordEditText.setText(\"blah\");\n+        dialog.getButton(DialogInterface.BUTTON_POSITIVE).performClick();\n+\n+        verify(callback, times(1)).onPasswordChanged(\"blah\");\n+    }\n+\n+    @Test\n+    public void passwordIsRetainedOnScreenRotation() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+        EditText passwordEditText = dialog.findViewById(R.id.pwd_field);\n+        passwordEditText.setText(\"blah\");\n+\n+        assertThat(activity.get().getResources().getConfiguration().orientation, equalTo(Configuration.ORIENTATION_PORTRAIT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b35f1a07bd9e352924634c4bd6c5fe61c555b1c"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTg0MzcxMA==", "bodyText": "Same thing as above here!", "url": "https://github.com/getodk/collect/pull/3824#discussion_r429843710", "createdAt": "2020-05-25T09:48:43Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/preferences/ChangeAdminPasswordDialogTest.java", "diffHunk": "@@ -0,0 +1,166 @@\n+package org.odk.collect.android.preferences;\n+\n+import android.content.DialogInterface;\n+import android.content.res.Configuration;\n+import android.text.InputType;\n+import android.widget.CheckBox;\n+import android.widget.EditText;\n+\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.FragmentActivity;\n+import androidx.fragment.app.FragmentManager;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.support.RobolectricHelpers;\n+import org.robolectric.RobolectricTestRunner;\n+import org.robolectric.RuntimeEnvironment;\n+import org.robolectric.android.controller.ActivityController;\n+import org.robolectric.shadows.ShadowDialog;\n+\n+import static android.view.View.VISIBLE;\n+import static junit.framework.TestCase.assertTrue;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.junit.Assert.assertFalse;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+import static org.robolectric.Shadows.shadowOf;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class ChangeAdminPasswordDialogTest {\n+\n+    private ActivityController<FragmentActivity> activity;\n+    private FragmentManager fragmentManager;\n+    private ChangeAdminPasswordDialog dialogFragment;\n+    private ChangeAdminPasswordDialog.ChangePasswordDialogCallback callback;\n+\n+    @Before\n+    public void setup() {\n+        activity = RobolectricHelpers.buildThemedActivity(FragmentActivity.class);\n+        activity.setup();\n+\n+        fragmentManager = activity.get().getSupportFragmentManager();\n+        dialogFragment = new ChangeAdminPasswordDialog();\n+\n+        callback = mock(ChangeAdminPasswordDialog.ChangePasswordDialogCallback.class);\n+        dialogFragment.callback = callback;\n+    }\n+\n+    @Test\n+    public void dialogIsCancellable() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        assertThat(shadowOf(dialogFragment.getDialog()).isCancelable(), equalTo(true));\n+    }\n+\n+    @Test\n+    public void shouldShowCorrectButtons() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_POSITIVE).getVisibility(), equalTo(VISIBLE));\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_POSITIVE).getText(),\n+                equalTo(activity.get().getString(R.string.ok)));\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_NEGATIVE).getVisibility(), equalTo(VISIBLE));\n+        assertThat(dialog.getButton(DialogInterface.BUTTON_NEGATIVE).getText(),\n+                equalTo(activity.get().getString(R.string.cancel)));\n+    }\n+\n+    @Test\n+    public void clickingOkAfterSettingPassword_callsOnPasswordChanged() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+        EditText passwordEditText = dialog.findViewById(R.id.pwd_field);\n+        passwordEditText.setText(\"blah\");\n+        dialog.getButton(DialogInterface.BUTTON_POSITIVE).performClick();\n+\n+        verify(callback, times(1)).onPasswordChanged(\"blah\");\n+    }\n+\n+    @Test\n+    public void passwordIsRetainedOnScreenRotation() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+        EditText passwordEditText = dialog.findViewById(R.id.pwd_field);\n+        passwordEditText.setText(\"blah\");\n+\n+        assertThat(activity.get().getResources().getConfiguration().orientation, equalTo(Configuration.ORIENTATION_PORTRAIT));\n+        RuntimeEnvironment.setQualifiers(\"+land\");\n+        activity.configurationChange();\n+        assertThat(activity.get().getResources().getConfiguration().orientation, equalTo(Configuration.ORIENTATION_LANDSCAPE));\n+\n+        ChangeAdminPasswordDialog restoredFragment = (ChangeAdminPasswordDialog)\n+                activity.get().getSupportFragmentManager().findFragmentByTag(\"TAG\");\n+\n+        AlertDialog restoredDialog = (AlertDialog) restoredFragment.getDialog();\n+        assertThat(((EditText) restoredDialog.findViewById(R.id.pwd_field)).getText().toString(), equalTo(\"blah\"));\n+    }\n+\n+    @Test\n+    public void showPasswordCheckBoxValueIsRetainedOnScreenRotation() {\n+        dialogFragment.show(fragmentManager, \"TAG\");\n+        AlertDialog dialog = (AlertDialog) ShadowDialog.getLatestDialog();\n+        CheckBox passwordCheckBox = dialog.findViewById(R.id.checkBox2);\n+        passwordCheckBox.setChecked(true);\n+\n+        assertThat(activity.get().getResources().getConfiguration().orientation, equalTo(Configuration.ORIENTATION_PORTRAIT));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b35f1a07bd9e352924634c4bd6c5fe61c555b1c"}, "originalPosition": 109}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "991cd8c7f98e1958c9b2a34c942f70f01b79261b", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/991cd8c7f98e1958c9b2a34c942f70f01b79261b", "committedDate": "2020-05-25T12:07:27Z", "message": "fixed conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "936fb36f55734528b906171ab6d072227a148603", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/936fb36f55734528b906171ab6d072227a148603", "committedDate": "2020-05-25T12:10:05Z", "message": "Merge branch 'change_admin_password_dialog_fragment' of https://github.com/SaumiaSinghal/collect into change_admin_password_dialog_fragment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8d59bbcfd9bcfa6f6d386b16bf0b8a9eba4ecda", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/e8d59bbcfd9bcfa6f6d386b16bf0b8a9eba4ecda", "committedDate": "2020-05-25T12:14:44Z", "message": "removed shouldShowCorrectButtons test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42ad1d000284e7b221fe23c2476a057a0ad82b83", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/42ad1d000284e7b221fe23c2476a057a0ad82b83", "committedDate": "2020-05-26T07:58:24Z", "message": "used activity scenario to recreate activity in unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b7fd935622be527c60605c5605fc5724f88b347", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/1b7fd935622be527c60605c5605fc5724f88b347", "committedDate": "2020-05-26T10:33:29Z", "message": "unit test refactor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23fb813ce720351cf986f3880518e2ef79edf6a2", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/23fb813ce720351cf986f3880518e2ef79edf6a2", "committedDate": "2020-05-26T12:12:08Z", "message": "added test for checking password value set in Shared Prefrences"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e51c759fa0d227d1710d00e256099de7ccbc0a5", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/7e51c759fa0d227d1710d00e256099de7ccbc0a5", "committedDate": "2020-05-26T12:14:15Z", "message": "removed callback listener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3652c9afcfbdfd93691f3dd893e881fdcb5894a9", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/3652c9afcfbdfd93691f3dd893e881fdcb5894a9", "committedDate": "2020-05-26T12:19:19Z", "message": "removed callback mock in unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMDA5MTkx", "url": "https://github.com/getodk/collect/pull/3824#pullrequestreview-422009191", "createdAt": "2020-06-01T16:46:29Z", "commit": {"oid": "3652c9afcfbdfd93691f3dd893e881fdcb5894a9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjo0NjozMFrOGdSDMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNjo0NjozMFrOGdSDMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM1NzYxNw==", "bodyText": "I don't think the activityScenario needs to be a field here as you're only using ActivityScenario in one test. I think just make it a local variable in there.", "url": "https://github.com/getodk/collect/pull/3824#discussion_r433357617", "createdAt": "2020-06-01T16:46:30Z", "author": {"login": "seadowg"}, "path": "collect_app/src/test/java/org/odk/collect/android/preferences/ChangeAdminPasswordDialogTest.java", "diffHunk": "@@ -0,0 +1,141 @@\n+package org.odk.collect.android.preferences;\n+\n+import android.content.Context;\n+import android.content.DialogInterface;\n+import android.content.SharedPreferences;\n+import android.os.Bundle;\n+import android.text.InputType;\n+import android.widget.CheckBox;\n+import android.widget.EditText;\n+\n+import androidx.annotation.Nullable;\n+import androidx.appcompat.app.AlertDialog;\n+import androidx.fragment.app.FragmentActivity;\n+import androidx.fragment.app.FragmentManager;\n+\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.R;\n+import org.odk.collect.android.support.RobolectricHelpers;\n+import org.odk.collect.android.support.TestActivityScenario;\n+import org.robolectric.RobolectricTestRunner;\n+import org.robolectric.shadows.ShadowDialog;\n+\n+import static junit.framework.TestCase.assertTrue;\n+import static org.hamcrest.MatcherAssert.assertThat;\n+import static org.hamcrest.Matchers.equalTo;\n+import static org.junit.Assert.assertFalse;\n+import static org.odk.collect.android.preferences.AdminKeys.KEY_ADMIN_PW;\n+import static org.odk.collect.android.preferences.AdminPreferencesActivity.ADMIN_PREFERENCES;\n+import static org.robolectric.Shadows.shadowOf;\n+\n+@RunWith(RobolectricTestRunner.class)\n+public class ChangeAdminPasswordDialogTest {\n+\n+    private TestActivityScenario<DialogFragmentTestActivity> activityScenario;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3652c9afcfbdfd93691f3dd893e881fdcb5894a9"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb23bdbb011193913c40399ec6edba3a18fa7f0a", "author": {"user": {"login": "SaumiaSinghal", "name": "Saumia Singhal"}}, "url": "https://github.com/getodk/collect/commit/eb23bdbb011193913c40399ec6edba3a18fa7f0a", "committedDate": "2020-06-01T16:59:00Z", "message": "convert activityScenario to local variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMDI5MTI5", "url": "https://github.com/getodk/collect/pull/3824#pullrequestreview-422029129", "createdAt": "2020-06-01T17:15:02Z", "commit": {"oid": "eb23bdbb011193913c40399ec6edba3a18fa7f0a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2682, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}