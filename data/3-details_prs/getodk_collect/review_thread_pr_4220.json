{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNTE4NjAz", "number": 4220, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMjoxNjowMVrOE4pKnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMTo1MTozNVrOE42PZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3ODMwMTcyOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/formentry/ODKView.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMjoxNjowMVrOHysIkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QxMjoxNjowMVrOHysIkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjkxMzkzOA==", "bodyText": "It felt like it made sense to rearrange this relationship so the ODKView owns a WidgetFactory object. In my mind this makes the dependency clearer.", "url": "https://github.com/getodk/collect/pull/4220#discussion_r522913938", "createdAt": "2020-11-13T12:16:01Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/ODKView.java", "diffHunk": "@@ -124,35 +127,27 @@\n     PreferencesProvider preferencesProvider;\n \n     @Inject\n-    AudioRecorderViewModelFactory audioRecorderViewModelFactory;\n+    ActivityAvailability activityAvailability;\n+\n+    private final WidgetFactory widgetFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cd0f0d8bded0a0f7af8bd6170bc56d1a08507b8"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDM3NTQ2OnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/utilities/FormEntryPromptUtils.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMToyNjowM1rOHzAFUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMDowODo0NFrOHzyfcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0MDc4Nw==", "bodyText": "We talked briefly about using optionals vs sticking to nulls. Are we diving into optionals?", "url": "https://github.com/getodk/collect/pull/4220#discussion_r523240787", "createdAt": "2020-11-13T21:26:03Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/FormEntryPromptUtils.java", "diffHunk": "@@ -124,4 +126,13 @@ public static String markQuestionIfIsRequired(String questionText, boolean isReq\n \n         return questionText;\n     }\n+\n+    public static Optional<String> getAttributeValue(FormEntryPrompt prompt, String attributeName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "895d5d86663a79e46540bf84c61656edae11dd28"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDA2NjY3Mw==", "bodyText": "Ah yeah good point. I'm in two minds. I think your point below is a good one. Java Optionals really don't add much as calling get is super easy. I think I'm happy to convert the Optional from the stream into a normal type and using Nullable.", "url": "https://github.com/getodk/collect/pull/4220#discussion_r524066673", "createdAt": "2020-11-16T10:08:44Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/android/utilities/FormEntryPromptUtils.java", "diffHunk": "@@ -124,4 +126,13 @@ public static String markQuestionIfIsRequired(String questionText, boolean isReq\n \n         return questionText;\n     }\n+\n+    public static Optional<String> getAttributeValue(FormEntryPrompt prompt, String attributeName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI0MDc4Nw=="}, "originalCommit": {"oid": "895d5d86663a79e46540bf84c61656edae11dd28"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4MDQ0MzkwOnYy", "diffSide": "RIGHT", "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/RecordingRequesterFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMTo1MTozNVrOHzAtmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QyMTo1MTozNVrOHzAtmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMzI1MTA5Nw==", "bodyText": "This feels like a very null structure if you see what I mean. Not really much benefit to an Optional if you're not chaining, for example.", "url": "https://github.com/getodk/collect/pull/4220#discussion_r523251097", "createdAt": "2020-11-13T21:51:35Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/widgets/utilities/RecordingRequesterFactory.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package org.odk.collect.android.widgets.utilities;\n+\n+import androidx.activity.ComponentActivity;\n+import androidx.lifecycle.LifecycleOwner;\n+\n+import org.javarosa.form.api.FormEntryPrompt;\n+import org.odk.collect.android.utilities.ActivityAvailability;\n+import org.odk.collect.android.utilities.FormEntryPromptUtils;\n+import org.odk.collect.android.utilities.PermissionUtils;\n+import org.odk.collect.android.utilities.QuestionMediaManager;\n+import org.odk.collect.audiorecorder.recording.AudioRecorderViewModel;\n+\n+import java.util.Optional;\n+\n+public class RecordingRequesterFactory {\n+\n+    private final WaitingForDataRegistry waitingForDataRegistry;\n+    private final QuestionMediaManager questionMediaManager;\n+    private final ActivityAvailability activityAvailability;\n+    private final PermissionUtils permissionUtils;\n+    private final ComponentActivity activity;\n+    private final LifecycleOwner lifecycle;\n+    private final AudioRecorderViewModel audioRecorderViewModel;\n+\n+    public RecordingRequesterFactory(WaitingForDataRegistry waitingForDataRegistry, QuestionMediaManager questionMediaManager, ActivityAvailability activityAvailability, AudioRecorderViewModel audioRecorderViewModel, PermissionUtils permissionUtils, ComponentActivity activity, LifecycleOwner lifecycle) {\n+        this.waitingForDataRegistry = waitingForDataRegistry;\n+        this.questionMediaManager = questionMediaManager;\n+        this.activityAvailability = activityAvailability;\n+        this.audioRecorderViewModel = audioRecorderViewModel;\n+        this.permissionUtils = permissionUtils;\n+        this.activity = activity;\n+        this.lifecycle = lifecycle;\n+    }\n+\n+    public RecordingRequester create(FormEntryPrompt prompt, boolean externalRecorderPreferred) {\n+        Optional<String> audioQuality = FormEntryPromptUtils.getAttributeValue(prompt, \"quality\");\n+\n+        if (audioQuality.isPresent() && (audioQuality.get().equals(\"normal\") || audioQuality.get().equals(\"voice-only\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7cd0f0d8bded0a0f7af8bd6170bc56d1a08507b8"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3169, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}