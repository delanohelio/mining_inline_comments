{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNTEyODM1", "number": 3745, "title": "Support calculations in field-lists", "bodyText": "Closes #3211\nWhat has been done to verify that this works as intended?\nI tested implemented changes manually and there is also an automated test.\nWhy is this the best possible solution? Were any other approaches considered?\nI'l try to explain what was wrong with our code:\nThe form we are using has two questions on the same screen where the answer of the second question is based on the answer of the first question (calculated)\n\n\n\ntype\nname\nlabel\nappearance\ncalculation\n\n\n\n\nbegin group\nmy-group\nMy group\nfield-list\n\n\n\ntext\nfoo\nFoo\n\n\n\n\ninteger\nfoo-length\nFoo length\n\nstring-length(${foo})\n\n\nend group\nmy-group\n\n\n\n\n\n\nWhen we open the form the first answer is null and the second answer is 0. We expect the second answer to be updated every time we edit the first one so\nif we type q it should be updated fro 0->1\nthen if we type w (qw) it should be updated from 1->2\nthen if we type e (qwe) it should be updated from 2->3 etc\nThe problem with the current implementation was that we were trying to save all answers from the screen at the same time so analyzing the same scenario as above:\nif we type q we are trying to save answers q and 0 because it is what we have on the screen,\nFirst we save q an the value of the element is changed from null to q that triggers calculations and the value of the second element is changed from 0 to 1 (it takes place in javarosa automatically) and then we try to save the second question from the screen 0 ignoring that calculations took place what changes the answer back from 1 -> 0\nThe only solution I can come up with is to save questions one by one and check whether the answer of the questions we are trying to save changed after saving a previous answer if it changed we do nothing because that mean it was recalculated  otherwise we save the answer from the screen.\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nWe should test field-list especially with calculations/hiding questions to ensure there is no regression.\nDo we need any specific form for testing your changes? If so, please attach one.\nThe form attached to the issue.\nDoes this change require updates to documentation? If so, please file an issue here and include the link below.\nI'm not sure... was the limitation (bug) mentioned anywhere?\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-03-25T10:43:55Z", "url": "https://github.com/getodk/collect/pull/3745", "merged": true, "mergeCommit": {"oid": "7cf4539ba7ba1181d4434ec36e706a9444e6d412"}, "closed": true, "closedAt": "2020-04-06T08:20:31Z", "author": {"login": "grzesiek2010"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRjbyAgFqTM4MjQzNjQ3NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUCLKNABqjMxOTY3Njk2MzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgyNDM2NDc0", "url": "https://github.com/getodk/collect/pull/3745#pullrequestreview-382436474", "createdAt": "2020-03-26T21:32:47Z", "commit": {"oid": "4f43493be2111775ed8a5ab50fbc93186ee80c9a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMTozMjo0N1rOF8bSAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMTo1ODoxNFrOF8b_1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkwNTg1OA==", "bodyText": "I think it's ok to overload saveAnswersForCurrentScreen instead of having a long name. You could add a comment to differentiate them.", "url": "https://github.com/getodk/collect/pull/3745#discussion_r398905858", "createdAt": "2020-03-26T21:32:47Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2888,6 +2886,34 @@ private void updateFieldListQuestions(FormIndex lastChangedIndex) {\n         }\n     }\n \n+    private void saveAnswersForCurrentScreenOneByOneToSupportCalculations(FormEntryPrompt[] mutableQuestionsBeforeSave, List<ImmutableDisplayableQuestion> immutableQuestionsBeforeSave) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f43493be2111775ed8a5ab50fbc93186ee80c9a"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkxNzU4OQ==", "bodyText": "I have a hard time with the negative in the method name. In fact, you could just use !Objects.equals here, right? I think that would make things easier to understand. Then you could have a comment above the condition that says something like questions with calculates will have their answers updated as the questions they depend on are saved.", "url": "https://github.com/getodk/collect/pull/3745#discussion_r398917589", "createdAt": "2020-03-26T21:58:14Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2888,6 +2886,34 @@ private void updateFieldListQuestions(FormIndex lastChangedIndex) {\n         }\n     }\n \n+    private void saveAnswersForCurrentScreenOneByOneToSupportCalculations(FormEntryPrompt[] mutableQuestionsBeforeSave, List<ImmutableDisplayableQuestion> immutableQuestionsBeforeSave) {\n+        FormController formController = getFormController();\n+        ODKView currentView = getCurrentViewIfODKView();\n+        if (formController == null || currentView == null) {\n+            return;\n+        }\n+\n+        int index = 0;\n+        for (Map.Entry<FormIndex, IAnswerData> answer : currentView.getAnswers().entrySet()) {\n+            if (isQuestionNotRecalculated(mutableQuestionsBeforeSave[index], immutableQuestionsBeforeSave.get(index))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f43493be2111775ed8a5ab50fbc93186ee80c9a"}, "originalPosition": 26}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "663743e11e375cbc709b97b164e7a10a67b605d5", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/663743e11e375cbc709b97b164e7a10a67b605d5", "committedDate": "2020-03-27T09:33:33Z", "message": "Code improvements"}, "afterCommit": {"oid": "123e4f3c683851532fc1301d243bcd24c63dc004", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/123e4f3c683851532fc1301d243bcd24c63dc004", "committedDate": "2020-03-27T09:45:26Z", "message": "Code improvements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMjIxNDAx", "url": "https://github.com/getodk/collect/pull/3745#pullrequestreview-383221401", "createdAt": "2020-03-27T21:53:50Z", "commit": {"oid": "123e4f3c683851532fc1301d243bcd24c63dc004"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTo1Mzo1MVrOF9C8UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMTo1Mzo1MVrOF9C8UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU1NTY2NA==", "bodyText": "This is exactly what Objects.equals does, right? I was suggesting not even introducing a custom method. I don't feel strongly about it, though, if you like this better.", "url": "https://github.com/getodk/collect/pull/3745#discussion_r399555664", "createdAt": "2020-03-27T21:53:51Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -2888,6 +2908,12 @@ private void updateFieldListQuestions(FormIndex lastChangedIndex) {\n         }\n     }\n \n+    // If an answer has changed after saving one of previous answers that means it has been recalculated automatically\n+    private boolean isQuestionRecalculated(FormEntryPrompt mutableQuestionBeforeSave, ImmutableDisplayableQuestion immutableQuestionBeforeSave) {\n+        return !(mutableQuestionBeforeSave.getAnswerText() == null && immutableQuestionBeforeSave.getAnswerText() == null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "123e4f3c683851532fc1301d243bcd24c63dc004"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMjIxODky", "url": "https://github.com/getodk/collect/pull/3745#pullrequestreview-383221892", "createdAt": "2020-03-27T21:55:06Z", "commit": {"oid": "123e4f3c683851532fc1301d243bcd24c63dc004"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab75e280521535cc5f5c3d14025968a592a8f4de", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/ab75e280521535cc5f5c3d14025968a592a8f4de", "committedDate": "2020-04-03T14:56:11Z", "message": "Support calculations in field-lists"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbab0a13fc6cfe43de39320ffb73267aa59292aa", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/fbab0a13fc6cfe43de39320ffb73267aa59292aa", "committedDate": "2020-04-03T14:56:11Z", "message": "Fixed the commented test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bea21dd363f79b95c5e7f96f856f6e09072108e0", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/bea21dd363f79b95c5e7f96f856f6e09072108e0", "committedDate": "2020-04-03T14:56:11Z", "message": "Code improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "085777f5fdf10c0a9bac2f8cfb79cb848e6fd259", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/085777f5fdf10c0a9bac2f8cfb79cb848e6fd259", "committedDate": "2020-04-03T14:56:11Z", "message": "Code improvements"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "123e4f3c683851532fc1301d243bcd24c63dc004", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/123e4f3c683851532fc1301d243bcd24c63dc004", "committedDate": "2020-03-27T09:45:26Z", "message": "Code improvements"}, "afterCommit": {"oid": "085777f5fdf10c0a9bac2f8cfb79cb848e6fd259", "author": {"user": {"login": "grzesiek2010", "name": "Grzegorz Orczykowski"}}, "url": "https://github.com/getodk/collect/commit/085777f5fdf10c0a9bac2f8cfb79cb848e6fd259", "committedDate": "2020-04-03T14:56:11Z", "message": "Code improvements"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2750, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}