{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNTM0MjI5", "number": 3576, "title": "Move form saving to ViewModel", "bodyText": "Closes #3521.\nThis PR moves the majority of (non-UI) decision making, async work and audit logging concerned with form saving out of FormEntryActivity and into the new FormEntryViewModel. This ViewModel used to be ChangesReasonPromptViewModel. Before this only handled one part of form saving and needed updates from FormEntryActivity. This new setup is hopefully easier to understand and should make it easier to add/change form saving in the future.\nThere are a follow up tasks I think we should look at after this PR:\n\nUse a DialogFragment for saving dialog rather than the deprecated showDialog/dismissDialog - I wanted to include this work in this PR but have run into some weird problems so going to continue that after this.\nMove core form saving logic from SaveToDiskTask to DiskFormSaver - add tests to DiskFormSaver to drive moving the logic\nMove public static methods in SaveToDiskTask to shared user case/helpers or to private methods where they are used - again adding test coverage if it's not obvious here is good\nWork out what exactly the purpose of autoSaved in FormEntryActivity is\n\nWhat has been done to verify that this works as intended?\nPlayed around with a few different forms, ran tests locally and on test lab.\nWhy is this the best possible solution? Were any other approaches considered?\nThis way forward was driven out by discussion after #3477. Would be great to get feedback on the approach however!\nHow does this change affect users? Describe intentional changes to behavior and behavior that could have accidentally been affected by code changes. In other words, what are the regression risks?\nThere shouldn't be any changes in behaviour. I think testing form saving with and without encryption, track-changes-reasons audit attribute and with different constraints would be best.\nBefore submitting this PR, please make sure you have:\n\n run ./gradlew checkAll and confirmed all checks still pass OR confirm CircleCI build passes and run ./gradlew connectedDebugAndroidTest locally.\n verified that any code or assets from external sources are properly credited in comments and/or in the about file.\n verified that any new UI elements use theme colors. UI Components Style guidelines", "createdAt": "2020-01-08T16:08:31Z", "url": "https://github.com/getodk/collect/pull/3576", "merged": true, "mergeCommit": {"oid": "4c7e2011c8027ad52c89eb733daca177ea5ee70d"}, "closed": true, "closedAt": "2020-01-27T16:32:26Z", "author": {"login": "seadowg"}, "timelineItems": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4ZnP1gBqjI5MzIyNTMzMjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-fX26gH2gAyMzYwNTM0MjI5Ojk1MmUxN2EzYjFmOTQ4ZWRkZDM2NzYyZWI2NDFhNGE4ODhhMTcwMjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1083930a1cf4a4b6b33865876a801cbea576ab38", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/1083930a1cf4a4b6b33865876a801cbea576ab38", "committedDate": "2020-01-07T16:37:03Z", "message": "Pull out static SaveTask to avoid memory leaks\n\nPotentially overkill as the ViewModel isn't too heavy but good\nto set a precedent."}, "afterCommit": {"oid": "59f7978d83597e9f50068f77adc1b659d6a49b7f", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/59f7978d83597e9f50068f77adc1b659d6a49b7f", "committedDate": "2020-01-08T17:57:39Z", "message": "Pull out static SaveTask to avoid memory leaks\n\nPotentially overkill as the ViewModel isn't too heavy but good\nto set a precedent."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4fee9be53ff1b01633adc75d018617fbd0e70b45", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/4fee9be53ff1b01633adc75d018617fbd0e70b45", "committedDate": "2020-01-10T16:29:14Z", "message": "Use ProgressDialogFragment for form saving dialog"}, "afterCommit": {"oid": "0d7f7158a018281fcded67a9727f0d341b0abc5e", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/0d7f7158a018281fcded67a9727f0d341b0abc5e", "committedDate": "2020-01-13T11:24:30Z", "message": "Make sure dismissDialog bug doesn't reappear"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxOTg4MzM2", "url": "https://github.com/getodk/collect/pull/3576#pullrequestreview-341988336", "createdAt": "2020-01-13T16:52:39Z", "commit": {"oid": "adbf622e4972a010cc3903e422556b14dc22eaeb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNjo1MjozOVrOFc9hmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxNjo1MjozOVrOFc9hmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkxMjQ3Mg==", "bodyText": "This is potentially controversial. It feels like it might be nice to start pulling objects like this out of the android package so we can have a distinction in our code what things actually relate to the Android world. This is useful for drawing a line around components and trying not to muddle them with Android stuff. The main advantage other than seperation of concerns and simiplifcation is to let us write tests for these kinds of things without using Robolectric.", "url": "https://github.com/getodk/collect/pull/3576#discussion_r365912472", "createdAt": "2020-01-13T16:52:39Z", "author": {"login": "seadowg"}, "path": "collect_app/src/main/java/org/odk/collect/utilities/Clock.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package org.odk.collect.utilities;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adbf622e4972a010cc3903e422556b14dc22eaeb"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTU1NTQw", "url": "https://github.com/getodk/collect/pull/3576#pullrequestreview-344955540", "createdAt": "2020-01-18T18:13:10Z", "commit": {"oid": "d07a08c17c29203fefd30c15c3293669a3e9d82e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxODoxMzoxMVrOFfLnJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwMTowNToxN1rOFfMq-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0MDQyMg==", "bodyText": "This represents whether the user has checked the checkbox for this form to be finalized, right? I think it would be useful to add a comment here and that it would be clearer to use \"finalized\". \"Complete\" is used in the codebase for historical reasons but there is no such user-facing concept so it's really confusing. This is really something I should have mentioned in the original feature implementation but I didn't do as deep of a review. I also wonder whether it would better capture the semantics to call it shouldBeFinalized -- it's a user request, right?", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368240422", "createdAt": "2020-01-18T18:13:11Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/audit/FormEntryViewModel.java", "diffHunk": "@@ -91,27 +94,41 @@ private boolean requiresReasonToSave() {\n \n     public static class SaveRequest {\n \n-        private final boolean complete;\n+        private final boolean formComplete;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d07a08c17c29203fefd30c15c3293669a3e9d82e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0MDc0Mg==", "bodyText": "This change shouldn't have happened and should be reverted. Leaving it in would mean orphaned savepoint files and possible loss of savepoint data right after the change was deployed.", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368240742", "createdAt": "2020-01-18T18:18:55Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/tasks/SaveToDiskTask.java", "diffHunk": "@@ -347,7 +347,7 @@ private JSONObject toGeoJson(GeoPointData data) throws JSONException {\n      */\n     static File getSavepointFile(String instanceName) {\n         File tempDir = new File(Collect.CACHE_PATH);\n-        return new File(tempDir, instanceName + \".save\");\n+        return new File(tempDir, instanceName + \".saveAndExit\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d288dc38abfcc26f80c21607c8f3941b036b1828"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NDg0Nw==", "bodyText": "Since this is now a more general view model, changeReasonPromptDismissed would be a more helpful name, I think.", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368254847", "createdAt": "2020-01-18T23:40:04Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -39,22 +55,92 @@ public void setAuditEventLogger(@Nullable AuditEventLogger auditEventLogger) {\n         this.auditEventLogger = auditEventLogger;\n     }\n \n-    public LiveData<SaveRequest> saveForm(boolean complete, String updatedSaveName, boolean viewExiting) {\n-        saveRequest = new MutableLiveData<>(null);\n-        lastSaveRequest = new SaveRequest(complete, updatedSaveName, viewExiting);\n+    public LiveData<SaveResult> saveForm(Uri uri, boolean complete, String updatedSaveName, boolean viewExiting) {\n+        saveResult = new MutableLiveData<>(null);\n+        lastSaveRequest = new SaveRequest(complete, viewExiting, updatedSaveName, uri);\n \n         if (!requiresReasonToSave()) {\n-            lastSaveRequest.setState(SaveRequest.State.SAVING);\n+            saveToDisk(uri, complete, updatedSaveName, viewExiting);\n         } else {\n-            lastSaveRequest.setState(SaveRequest.State.CHANGE_REASON_REQUIRED);\n             requiresReasonToContinue.setValue(true);\n+            saveResult.setValue(new SaveResult(SaveResult.State.CHANGE_REASON_REQUIRED));\n         }\n \n-        saveRequest.setValue(lastSaveRequest);\n-        return saveRequest;\n+        return saveResult;\n     }\n \n-    public void saveToDiskTaskComplete(SaveResult saveResult, long currentTime) {\n+    public void editingForm() {\n+        if (auditEventLogger != null) {\n+            auditEventLogger.setEditing(true);\n+        }\n+    }\n+\n+    public void promptDismissed() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bb379c1e757cc8c4c89f0bb746b529419a469a5"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NTEwMQ==", "bodyText": "This feels really strange. It's a task that in its doInBackground method calls a method that builds another task. I don't think there's actually a problem with it but I think it'd be worth adding a comment on why this structure is advantageous.", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368255101", "createdAt": "2020-01-18T23:47:17Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -39,22 +55,92 @@ public void setAuditEventLogger(@Nullable AuditEventLogger auditEventLogger) {\n         this.auditEventLogger = auditEventLogger;\n     }\n \n-    public LiveData<SaveRequest> saveForm(boolean complete, String updatedSaveName, boolean viewExiting) {\n-        saveRequest = new MutableLiveData<>(null);\n-        lastSaveRequest = new SaveRequest(complete, updatedSaveName, viewExiting);\n+    public LiveData<SaveResult> saveForm(Uri uri, boolean complete, String updatedSaveName, boolean viewExiting) {\n+        saveResult = new MutableLiveData<>(null);\n+        lastSaveRequest = new SaveRequest(complete, viewExiting, updatedSaveName, uri);\n \n         if (!requiresReasonToSave()) {\n-            lastSaveRequest.setState(SaveRequest.State.SAVING);\n+            saveToDisk(uri, complete, updatedSaveName, viewExiting);\n         } else {\n-            lastSaveRequest.setState(SaveRequest.State.CHANGE_REASON_REQUIRED);\n             requiresReasonToContinue.setValue(true);\n+            saveResult.setValue(new SaveResult(SaveResult.State.CHANGE_REASON_REQUIRED));\n         }\n \n-        saveRequest.setValue(lastSaveRequest);\n-        return saveRequest;\n+        return saveResult;\n     }\n \n-    public void saveToDiskTaskComplete(SaveResult saveResult, long currentTime) {\n+    public void editingForm() {\n+        if (auditEventLogger != null) {\n+            auditEventLogger.setEditing(true);\n+        }\n+    }\n+\n+    public void promptDismissed() {\n+        requiresReasonToContinue.setValue(false);\n+    }\n+\n+    public void setReason(String reason) {\n+        this.reason = reason;\n+    }\n+\n+    public void saveReason(Long currentTime) {\n+        if (reason != null && !isBlank(reason)) {\n+            if (auditEventLogger != null) {\n+                auditEventLogger.logEvent(AuditEvent.AuditEventType.CHANGE_REASON, null, true, null, currentTime, reason);\n+            }\n+\n+            requiresReasonToContinue.setValue(false);\n+\n+            if (saveResult != null) {\n+                saveToDisk(lastSaveRequest.uri, lastSaveRequest.formComplete, lastSaveRequest.updatedSaveName, lastSaveRequest.viewExiting);\n+            }\n+        }\n+    }\n+\n+    public String getReason() {\n+        return reason;\n+    }\n+\n+    private boolean requiresReasonToSave() {\n+        return auditEventLogger != null\n+                && auditEventLogger.isEditing()\n+                && auditEventLogger.isChangeReasonRequired()\n+                && auditEventLogger.isChangesMade();\n+    }\n+\n+    public boolean isSaving() {\n+        return saveResult != null && saveResult.getValue().getState().equals(SaveResult.State.SAVING);\n+    }\n+\n+    public boolean cancelSaving() {\n+        return task.cancel(true);\n+    }\n+\n+    private void setSaveRequestState(org.odk.collect.android.tasks.SaveResult saveResult, SaveResult.State finalizeError) {\n+        this.saveResult.setValue(new SaveResult(finalizeError, saveResult.getSaveErrorMessage()));\n+    }\n+\n+    @SuppressLint(\"StaticFieldLeak\")\n+    private void saveToDisk(Uri uri, boolean complete, String updatedSaveName, boolean viewExiting) {\n+        saveResult.setValue(new SaveResult(SaveResult.State.SAVING));\n+\n+        task = new AsyncTask<Void, Void, org.odk.collect.android.tasks.SaveResult>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bb379c1e757cc8c4c89f0bb746b529419a469a5"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NTE3NQ==", "bodyText": "Should this be called setSaveResultState?", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368255175", "createdAt": "2020-01-18T23:49:33Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -100,97 +186,34 @@ public void saveToDiskTaskComplete(SaveResult saveResult, long currentTime) {\n                     auditEventLogger.logEvent(AuditEvent.AuditEventType.CONSTRAINT_ERROR, true, currentTime);\n                 }\n \n-                setSaveRequestState(saveResult, SaveRequest.State.CONSTRAINT_ERROR);\n+                setSaveRequestState(saveResult, SaveResult.State.CONSTRAINT_ERROR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bb379c1e757cc8c4c89f0bb746b529419a469a5"}, "originalPosition": 182}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NTM0Nw==", "bodyText": "Do you think the suffix Task is still appropriate? I feel like in the Android world it implies that it's an AsyncTask and that had me confused for a bit. I'm not sure it's important but wanted to point it out for consideration.", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368255347", "createdAt": "2020-01-18T23:54:46Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/tasks/SaveToDiskTask.java", "diffHunk": "@@ -69,9 +69,8 @@\n  * @author Carl Hartung (carlhartung@gmail.com)\n  * @author Yaw Anokwa (yanokwa@gmail.com)\n  */\n-public class SaveToDiskTask extends AsyncTask<Void, String, SaveResult> {\n+public class SaveToDiskTask {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bb379c1e757cc8c4c89f0bb746b529419a469a5"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NTkxNA==", "bodyText": "null here would mean that there was an attempt to save a change reason without a form save first having been triggered, right? Mostly making sure I'm following the flow.", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368255914", "createdAt": "2020-01-19T00:10:04Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -81,8 +86,10 @@ public boolean saveReason() {\n             auditEventLogger.logEvent(AuditEvent.AuditEventType.CHANGE_REASON, null, true, null, clock.getCurrentTime(), reason);\n         }\n \n-        if (saveResult != null) {\n-            saveToDisk(lastSaveRequest.uri, lastSaveRequest.formComplete, lastSaveRequest.updatedSaveName, lastSaveRequest.viewExiting);\n+        if (saveResult.getValue() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59f7978d83597e9f50068f77adc1b659d6a49b7f"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NTk5Nw==", "bodyText": "The save isn't complete if there was an error? Rename to something like onSaveTaskComplete?", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368255997", "createdAt": "2020-01-19T00:11:52Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -92,109 +99,99 @@ public String getReason() {\n         return reason;\n     }\n \n-    private boolean requiresReasonToSave() {\n-        return auditEventLogger != null\n-                && auditEventLogger.isEditing()\n-                && auditEventLogger.isChangeReasonRequired()\n-                && auditEventLogger.isChangesMade();\n-    }\n-\n-    public boolean isSaving() {\n-        return saveResult != null && saveResult.getValue().getState().equals(SaveResult.State.SAVING);\n-    }\n-\n-    public boolean cancelSaving() {\n-        return task.cancel(true);\n-    }\n-\n-    private void setSaveRequestState(org.odk.collect.android.tasks.SaveResult saveResult, SaveResult.State finalizeError) {\n-        this.saveResult.setValue(new SaveResult(finalizeError, saveResult.getSaveErrorMessage()));\n+    private void setSaveRequestState(SaveToDiskTaskResult saveToDiskTaskResult, SaveResult.State state, SaveRequest request) {\n+        this.saveResult.setValue(new SaveResult(state, request, saveToDiskTaskResult.getSaveErrorMessage()));\n     }\n \n-    @SuppressLint(\"StaticFieldLeak\")\n-    private void saveToDisk(Uri uri, boolean complete, String updatedSaveName, boolean viewExiting) {\n-        saveResult.setValue(new SaveResult(SaveResult.State.SAVING));\n-\n-        task = new AsyncTask<Void, Void, org.odk.collect.android.tasks.SaveResult>() {\n-\n+    private void saveToDisk(SaveRequest saveRequest) {\n+        saveTask = new SaveTask(saveRequest, formSaver, new SaveTask.Listener() {\n             @Override\n-            protected org.odk.collect.android.tasks.SaveResult doInBackground(Void... voids) {\n-                return formSaver.save(uri, complete, updatedSaveName, viewExiting, progress -> {\n-                    saveResult.postValue(new SaveResult(SaveResult.State.SAVING, progress));\n-                });\n+            public void onProgressPublished(String progress) {\n+                saveResult.postValue(new SaveResult(SaveResult.State.SAVING, saveRequest, progress));\n             }\n \n             @Override\n-            protected void onPostExecute(org.odk.collect.android.tasks.SaveResult saveResult) {\n-                saveToDiskTaskComplete(saveResult, clock.getCurrentTime());\n+            public void onSaveComplete(SaveToDiskTaskResult saveToDiskTaskResult) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59f7978d83597e9f50068f77adc1b659d6a49b7f"}, "originalPosition": 145}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NjE4MA==", "bodyText": "I don't think this comment adds anything. It's (now) clear that the error message is being saved and that it's a catch-all case. The ticket number is from a forking organization's private bugtracker. Might be good to remove while you're cleaning up.", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368256180", "createdAt": "2020-01-19T00:17:09Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/tasks/SaveToDiskTask.java", "diffHunk": "@@ -100,18 +100,18 @@ public SaveResult saveForm(FormSaver.ProgressListener progressListener) {\n             int validateStatus = formController.validateAnswers(markCompleted);\n             if (validateStatus != FormEntryController.ANSWER_OK) {\n                 // validation failed, pass specific failure\n-                saveResult.setSaveResult(validateStatus, markCompleted);\n-                return saveResult;\n+                saveToDiskTaskResult.setSaveResult(validateStatus, markCompleted);\n+                return saveToDiskTaskResult;\n             }\n         } catch (Exception e) {\n             Timber.e(e);\n \n             // SCTO-825\n             // that means that we have a bad design", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59f7978d83597e9f50068f77adc1b659d6a49b7f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NjI2Mw==", "bodyText": "Sounds great to me.", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368256263", "createdAt": "2020-01-19T00:19:01Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/utilities/Clock.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package org.odk.collect.utilities;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTkxMjQ3Mg=="}, "originalCommit": {"oid": "adbf622e4972a010cc3903e422556b14dc22eaeb"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NjM1MQ==", "bodyText": "Your good friend \"its\" asks you not to replace it with \"it is\". \ud83d\ude02 (sorry, pet peeve)", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368256351", "createdAt": "2020-01-19T00:21:40Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/utilities/Clock.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package org.odk.collect.utilities;\n+\n+/**\n+ * An object that exposes the current time to it's client. Useful for decoupling", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59f7978d83597e9f50068f77adc1b659d6a49b7f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NjY0Nw==", "bodyText": "Add some @nonnull annotations?", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368256647", "createdAt": "2020-01-19T00:29:37Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -240,12 +238,12 @@ boolean isViewExiting() {\n         private final SaveRequest saveRequest;\n         private final FormSaver formSaver;\n \n-        private final WeakReference<Listener> listenerRef;\n+        private final Listener listener;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adbf622e4972a010cc3903e422556b14dc22eaeb"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1NzE0OQ==", "bodyText": "Given that there are still multiple view models for this activity, does it make sense for one of them to match the activity name? Is this more of a formSaveViewModel?", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368257149", "createdAt": "2020-01-19T00:45:53Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/activities/FormEntryActivity.java", "diffHunk": "@@ -317,7 +314,7 @@ public void allowSwiping(boolean doSwipe) {\n \n     private BackgroundLocationViewModel backgroundLocationViewModel;\n     private IdentityPromptViewModel identityPromptViewModel;\n-    private ChangesReasonPromptViewModel changesReasonPromptViewModel;\n+    private FormEntryViewModel formEntryViewModel;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adbf622e4972a010cc3903e422556b14dc22eaeb"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI1Nzc4Ng==", "bodyText": "This may seem petty but I find the order of parameters here make it hard to understand what's important. I'd rename uri to instanceContentUri and put it first since that's what is requested to be saved.", "url": "https://github.com/getodk/collect/pull/3576#discussion_r368257786", "createdAt": "2020-01-19T01:05:17Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/main/java/org/odk/collect/android/formentry/FormEntryViewModel.java", "diffHunk": "@@ -0,0 +1,285 @@\n+package org.odk.collect.android.formentry;\n+\n+import android.net.Uri;\n+import android.os.AsyncTask;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+import androidx.lifecycle.LiveData;\n+import androidx.lifecycle.MutableLiveData;\n+import androidx.lifecycle.ViewModel;\n+import androidx.lifecycle.ViewModelProvider;\n+\n+import org.javarosa.form.api.FormEntryController;\n+import org.odk.collect.android.formentry.audit.AuditEvent;\n+import org.odk.collect.android.formentry.audit.AuditEventLogger;\n+import org.odk.collect.android.tasks.SaveToDiskTask;\n+import org.odk.collect.android.tasks.SaveToDiskTaskResult;\n+import org.odk.collect.utilities.Clock;\n+\n+import static org.odk.collect.android.tasks.SaveToDiskTask.SAVED;\n+import static org.odk.collect.android.tasks.SaveToDiskTask.SAVED_AND_EXIT;\n+import static org.odk.collect.android.utilities.StringUtils.isBlank;\n+\n+public class FormEntryViewModel extends ViewModel {\n+\n+    private final Clock clock;\n+    private final FormSaver formSaver;\n+    private final MutableLiveData<SaveResult> saveResult = new MutableLiveData<>(null);\n+\n+    private String reason = \"\";\n+\n+    @Nullable\n+    private AuditEventLogger auditEventLogger;\n+\n+    @Nullable\n+    private AsyncTask saveTask;\n+\n+    public FormEntryViewModel(Clock clock, FormSaver formSaver) {\n+        this.clock = clock;\n+        this.formSaver = formSaver;\n+    }\n+\n+    public void setAuditEventLogger(@Nullable AuditEventLogger auditEventLogger) {\n+        this.auditEventLogger = auditEventLogger;\n+    }\n+\n+    public void editingForm() {\n+        if (auditEventLogger != null) {\n+            auditEventLogger.setEditing(true);\n+        }\n+    }\n+\n+    public LiveData<SaveResult> saveForm(Uri uri, boolean complete, String updatedSaveName, boolean viewExiting) {\n+        SaveRequest saveRequest = new SaveRequest(complete, viewExiting, updatedSaveName, uri);\n+\n+        if (!requiresReasonToSave()) {\n+            saveResult.setValue(new SaveResult(SaveResult.State.SAVING, saveRequest));\n+            saveToDisk(saveRequest);\n+        } else {\n+            saveResult.setValue(new SaveResult(SaveResult.State.CHANGE_REASON_REQUIRED, saveRequest));\n+        }\n+\n+        return saveResult;\n+    }\n+\n+    public boolean isSaving() {\n+        return saveResult.getValue() != null && saveResult.getValue().getState().equals(SaveResult.State.SAVING);\n+    }\n+\n+    public boolean cancelSaving() {\n+        return saveTask.cancel(true);\n+    }\n+\n+    public void setReason(@NonNull String reason) {\n+        this.reason = reason;\n+    }\n+\n+    public boolean saveReason() {\n+        if (reason == null || isBlank(reason)) {\n+            return false;\n+        }\n+\n+        if (auditEventLogger != null) {\n+            auditEventLogger.logEvent(AuditEvent.AuditEventType.CHANGE_REASON, null, true, null, clock.getCurrentTime(), reason);\n+        }\n+\n+        if (saveResult.getValue() != null) {\n+            SaveRequest request = saveResult.getValue().request;\n+            saveResult.setValue(new SaveResult(SaveResult.State.SAVING, request));\n+            saveToDisk(request);\n+        }\n+\n+        return true;\n+    }\n+\n+    public String getReason() {\n+        return reason;\n+    }\n+\n+    private void setSaveRequestState(SaveToDiskTaskResult saveToDiskTaskResult, SaveResult.State state, SaveRequest request) {\n+        this.saveResult.setValue(new SaveResult(state, request, saveToDiskTaskResult.getSaveErrorMessage()));\n+    }\n+\n+    private void saveToDisk(SaveRequest saveRequest) {\n+        saveTask = new SaveTask(saveRequest, formSaver, new SaveTask.Listener() {\n+            @Override\n+            public void onProgressPublished(String progress) {\n+                saveResult.setValue(new SaveResult(SaveResult.State.SAVING, saveRequest, progress));\n+            }\n+\n+            @Override\n+            public void onSaveComplete(SaveToDiskTaskResult saveToDiskTaskResult) {\n+                handleTaskResult(saveToDiskTaskResult);\n+            }\n+        }).execute();\n+    }\n+\n+    private void handleTaskResult(SaveToDiskTaskResult taskResult) {\n+        SaveResult saveResult = this.saveResult.getValue();\n+\n+        switch (taskResult.getSaveResult()) {\n+            case SAVED:\n+            case SAVED_AND_EXIT: {\n+                if (auditEventLogger != null) {\n+                    auditEventLogger.logEvent(AuditEvent.AuditEventType.FORM_SAVE, false, clock.getCurrentTime());\n+\n+                    if (saveResult.request.isViewExiting()) {\n+                        if (saveResult.request.isFormComplete()) {\n+                            auditEventLogger.logEvent(AuditEvent.AuditEventType.FORM_EXIT, false, clock.getCurrentTime());\n+                            auditEventLogger.logEvent(AuditEvent.AuditEventType.FORM_FINALIZE, true, clock.getCurrentTime());\n+                        } else {\n+                            auditEventLogger.logEvent(AuditEvent.AuditEventType.FORM_EXIT, true, clock.getCurrentTime());\n+                        }\n+                    }\n+                }\n+\n+                setSaveRequestState(taskResult, SaveResult.State.SAVED, saveResult.request);\n+                break;\n+            }\n+\n+            case SaveToDiskTask.SAVE_ERROR: {\n+                if (auditEventLogger != null) {\n+                    auditEventLogger.logEvent(AuditEvent.AuditEventType.SAVE_ERROR, true, clock.getCurrentTime());\n+                }\n+\n+                setSaveRequestState(taskResult, SaveResult.State.SAVE_ERROR, saveResult.request);\n+                break;\n+            }\n+\n+            case SaveToDiskTask.ENCRYPTION_ERROR: {\n+                if (auditEventLogger != null) {\n+                    auditEventLogger.logEvent(AuditEvent.AuditEventType.FINALIZE_ERROR, true, clock.getCurrentTime());\n+                }\n+\n+                setSaveRequestState(taskResult, SaveResult.State.FINALIZE_ERROR, saveResult.request);\n+                break;\n+            }\n+\n+            case FormEntryController.ANSWER_CONSTRAINT_VIOLATED:\n+            case FormEntryController.ANSWER_REQUIRED_BUT_EMPTY: {\n+                if (auditEventLogger != null) {\n+                    auditEventLogger.exitView();\n+                    auditEventLogger.logEvent(AuditEvent.AuditEventType.CONSTRAINT_ERROR, true, clock.getCurrentTime());\n+                }\n+\n+                setSaveRequestState(taskResult, SaveResult.State.CONSTRAINT_ERROR, saveResult.request);\n+                break;\n+            }\n+        }\n+    }\n+\n+    private boolean requiresReasonToSave() {\n+        return auditEventLogger != null\n+                && auditEventLogger.isEditing()\n+                && auditEventLogger.isChangeReasonRequired()\n+                && auditEventLogger.isChangesMade();\n+    }\n+\n+    public static class SaveResult {\n+\n+        private final State state;\n+        private final String message;\n+        private final SaveRequest request;\n+\n+        SaveResult(State state, SaveRequest request) {\n+            this(state, request, null);\n+        }\n+\n+        SaveResult(State state, SaveRequest request, String message) {\n+            this.state = state;\n+            this.message = message;\n+            this.request = request;\n+        }\n+\n+        public State getState() {\n+            return state;\n+        }\n+\n+        public String getMessage() {\n+            return message;\n+        }\n+\n+        public enum State {\n+            CHANGE_REASON_REQUIRED,\n+            SAVING,\n+            SAVED,\n+            SAVE_ERROR,\n+            FINALIZE_ERROR,\n+            CONSTRAINT_ERROR\n+        }\n+    }\n+\n+    private static class SaveRequest {\n+\n+        private final boolean formComplete;\n+        private final boolean viewExiting;\n+        private final String updatedSaveName;\n+        private final Uri uri;\n+\n+        SaveRequest(boolean formComplete, boolean viewExiting, String updatedSaveName, Uri uri) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "adbf622e4972a010cc3903e422556b14dc22eaeb"}, "originalPosition": 220}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f376c2404d82e5da8aebcae39119cde59b81de71", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/f376c2404d82e5da8aebcae39119cde59b81de71", "committedDate": "2020-01-21T15:52:23Z", "message": "Make URI clearer"}, "afterCommit": {"oid": "3a279c1036ac025bd23b2ea47514333660c29764", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/3a279c1036ac025bd23b2ea47514333660c29764", "committedDate": "2020-01-21T15:55:34Z", "message": "Make URI clearer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MDI0ODQy", "url": "https://github.com/getodk/collect/pull/3576#pullrequestreview-346024842", "createdAt": "2020-01-21T16:41:22Z", "commit": {"oid": "3a279c1036ac025bd23b2ea47514333660c29764"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1856545dab62b62a0c80724431eb96fd589ecf4a", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/1856545dab62b62a0c80724431eb96fd589ecf4a", "committedDate": "2020-01-23T13:00:26Z", "message": "Use async request LiveData pattern for form saving"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dee177472eb457502b8f3def631e65f9524a8106", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/dee177472eb457502b8f3def631e65f9524a8106", "committedDate": "2020-01-23T13:00:26Z", "message": "Move change reason dialog trigger to saveForm callback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4295c37b9bb666f14ac6035e069ea767fcc81e2", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/f4295c37b9bb666f14ac6035e069ea767fcc81e2", "committedDate": "2020-01-23T13:00:26Z", "message": "Move saved form behaviour to saveForm callback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2463054bac93fcc77328798fd32f318360195856", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/2463054bac93fcc77328798fd32f318360195856", "committedDate": "2020-01-23T13:00:26Z", "message": "Move saved and exit form behaviour to saveForm callback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90ab449a216bfb677fece38a3cc5e69df95a14ee", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/90ab449a216bfb677fece38a3cc5e69df95a14ee", "committedDate": "2020-01-23T13:00:26Z", "message": "Move save audit logging into view model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "525a2a559c452896a20b24a8db4002cc71f753ac", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/525a2a559c452896a20b24a8db4002cc71f753ac", "committedDate": "2020-01-23T13:00:26Z", "message": "Extract save to disk finishing helper for test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d0607a7ee891d079ef869caaaeb3ad1d935e577", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/8d0607a7ee891d079ef869caaaeb3ad1d935e577", "committedDate": "2020-01-23T13:00:26Z", "message": "Move save error form behaviour to saveForm callback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35a9f8e1dad9c794a96e699912fc8e45235915dd", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/35a9f8e1dad9c794a96e699912fc8e45235915dd", "committedDate": "2020-01-23T13:00:26Z", "message": "Move encryption error behaviour to saveForm callback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bc39fa27cfdeafd4ba7d14a618b80fdc351f87b", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/0bc39fa27cfdeafd4ba7d14a618b80fdc351f87b", "committedDate": "2020-01-23T13:00:27Z", "message": "Move constraint error behaviour to saveForm callback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8848bf61bfef67dc70dd866269407f0e25d93a59", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/8848bf61bfef67dc70dd866269407f0e25d93a59", "committedDate": "2020-01-23T13:00:27Z", "message": "Move audit logging for constraint error to view model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "30161fc2b425a3329ff7aaaa1fcee4506548dc81", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/30161fc2b425a3329ff7aaaa1fcee4506548dc81", "committedDate": "2020-01-23T13:00:27Z", "message": "Move SaveDataToDisk execution into ViewModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1ac0df4ad9363c03180dca2e6ea1c9e5c10e1f8", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/a1ac0df4ad9363c03180dca2e6ea1c9e5c10e1f8", "committedDate": "2020-01-23T13:00:27Z", "message": "Remove commented code\n\nThis code mas making sure the listener for `saveToDiskTask` was set\nup when the Activity returned to the foreground (it was removed in `onPause).\nWe no longer need this as we're using LiveData."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2146f7df887b9f728c489ba250d71022fd9294da", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/2146f7df887b9f728c489ba250d71022fd9294da", "committedDate": "2020-01-23T13:00:27Z", "message": "Remove now overcomplicated changeReasonRequired LiveData"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6914374e3c9dfad9d76b069eba3bfda0719b2ce3", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/6914374e3c9dfad9d76b069eba3bfda0719b2ce3", "committedDate": "2020-01-23T13:00:27Z", "message": "Remove current time param now there is a clock abstraction in view model"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fcb6e2445e5146a45101e3343c506ee112da07f", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/2fcb6e2445e5146a45101e3343c506ee112da07f", "committedDate": "2020-01-23T13:00:27Z", "message": "Pull out static SaveTask to avoid memory leaks\n\nPotentially overkill as the ViewModel isn't too heavy but good\nto set a precedent."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ac984119d80af26b0d3236b5bda59855885222c", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/7ac984119d80af26b0d3236b5bda59855885222c", "committedDate": "2020-01-23T13:00:27Z", "message": "Stop progress dialog showing multiple times"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "654974742779c4e55ea6263e4f263ca3b5e45824", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/654974742779c4e55ea6263e4f263ca3b5e45824", "committedDate": "2020-01-23T13:00:27Z", "message": "Make sure dismissDialog bug doesn't reappear"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36681915931c2643410a1c03518f174e1a9a739f", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/36681915931c2643410a1c03518f174e1a9a739f", "committedDate": "2020-01-23T13:00:27Z", "message": "Don't use WeakReference for AsyncTask listener\n\nThis is a good idea when the listener is an Activity/Fragment that\nwill outlive the task but of course not a good idea in this case where\nthe task was the only thing with a reference. That's a great way to have\nyour object garbage collected there Cal."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e57bd6fced98a846806e9cddeffbd8445b23bed0", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/e57bd6fced98a846806e9cddeffbd8445b23bed0", "committedDate": "2020-01-23T13:00:27Z", "message": "Revert accidental rename change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "050927a0a9a5fa6a1fb3dfd0e8395891194b232f", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/050927a0a9a5fa6a1fb3dfd0e8395891194b232f", "committedDate": "2020-01-23T13:00:27Z", "message": "Rename complete as shouldFinalize"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aeeed70ead21569de6dee20c57994d2fdc404ea6", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/aeeed70ead21569de6dee20c57994d2fdc404ea6", "committedDate": "2020-01-23T13:00:27Z", "message": "Inline method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac5f90e6ce5457d475d6b4b799daf55e859d7041", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/ac5f90e6ce5457d475d6b4b799daf55e859d7041", "committedDate": "2020-01-23T13:00:27Z", "message": "Rename SaveToDiskTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0a91e94f6f985cc4f773dc5568a4901f3b488638", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/0a91e94f6f985cc4f773dc5568a4901f3b488638", "committedDate": "2020-01-23T13:00:27Z", "message": "Rename listener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41915d9737daa0c6eba922a1b00d56fecf30d7b3", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/41915d9737daa0c6eba922a1b00d56fecf30d7b3", "committedDate": "2020-01-23T13:00:27Z", "message": "Remove old comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a7cfb917bb4fbed9c33348f704bf688e5d1cb27", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/8a7cfb917bb4fbed9c33348f704bf688e5d1cb27", "committedDate": "2020-01-23T13:00:28Z", "message": "It's to its"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9792ee15c07ddfb6378fce24a4e432bf05f85db", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/e9792ee15c07ddfb6378fce24a4e432bf05f85db", "committedDate": "2020-01-23T13:00:28Z", "message": "Rename FormEntryViewModel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e1d74f7ff0a05b7c662ff83c085586d481d2289", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/7e1d74f7ff0a05b7c662ff83c085586d481d2289", "committedDate": "2020-01-23T13:00:28Z", "message": "Make URI clearer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9976ce089a11fd85face44f841a71b1776ba87cb", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/9976ce089a11fd85face44f841a71b1776ba87cb", "committedDate": "2020-01-23T13:04:12Z", "message": "Stops forms from always being finalized"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "232454e00471dbc99c492df9c4d4059bd79735e5", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/232454e00471dbc99c492df9c4d4059bd79735e5", "committedDate": "2020-01-23T11:58:06Z", "message": "Stops forms from always being finalized"}, "afterCommit": {"oid": "9976ce089a11fd85face44f841a71b1776ba87cb", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/9976ce089a11fd85face44f841a71b1776ba87cb", "committedDate": "2020-01-23T13:04:12Z", "message": "Stops forms from always being finalized"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3NTE3OTMy", "url": "https://github.com/getodk/collect/pull/3576#pullrequestreview-347517932", "createdAt": "2020-01-23T18:34:03Z", "commit": {"oid": "9976ce089a11fd85face44f841a71b1776ba87cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxODozNDowM1rOFhIcaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxODozNDowM1rOFhIcaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDI4NTY3Mw==", "bodyText": "@opendatakit/testers as you consider more regression checks to add to your list and/or the automated suite, please make sure you check these out. \ud83d\ude0a", "url": "https://github.com/getodk/collect/pull/3576#discussion_r370285673", "createdAt": "2020-01-23T18:34:03Z", "author": {"login": "lognaturel"}, "path": "collect_app/src/androidTest/java/org/odk/collect/android/formentry/FormFinalizingTest.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package org.odk.collect.android.formentry;\n+\n+import android.Manifest;\n+\n+import androidx.test.ext.junit.runners.AndroidJUnit4;\n+import androidx.test.rule.ActivityTestRule;\n+import androidx.test.rule.GrantPermissionRule;\n+\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.RuleChain;\n+import org.junit.runner.RunWith;\n+import org.odk.collect.android.activities.MainMenuActivity;\n+import org.odk.collect.android.support.CopyFormRule;\n+import org.odk.collect.android.support.ResetStateRule;\n+import org.odk.collect.android.support.pages.MainMenuPage;\n+import org.odk.collect.android.support.pages.SaveOrIgnoreDialog;\n+\n+@RunWith(AndroidJUnit4.class)\n+public class FormFinalizingTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9976ce089a11fd85face44f841a71b1776ba87cb"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d5a41eb1e2034f1848d8513fbb7d59c942bac53", "author": {"user": {"login": "seadowg", "name": "Callum Stott"}}, "url": "https://github.com/getodk/collect/commit/9d5a41eb1e2034f1848d8513fbb7d59c942bac53", "committedDate": "2020-01-24T12:59:48Z", "message": "Make sure multiple saves for a form works"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "952e17a3b1f948eddd36762eb641a4a888a17026", "author": {"user": {"login": "lognaturel", "name": "H\u00e9l\u00e8ne Martin"}}, "url": "https://github.com/getodk/collect/commit/952e17a3b1f948eddd36762eb641a4a888a17026", "committedDate": "2020-01-27T16:31:21Z", "message": "Merge branch 'master' into form-entry"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2229, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}